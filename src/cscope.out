cscope 15 $HOME/sqlite-btree-level-physiological-log/src               0003673347
	@alter.c

15 
	~"sqlôeI¡.h
"

21 #i‚de‡
SQLITE_OMIT_ALTERTABLE


37 
	$ª«meTabÀFunc
(

38 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

39 
NŸU£d
,

40 
sqlôe3_vÆue
 **
¨gv


42 c⁄° *
zSql
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

43 c⁄° *
zTabÀName
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[1]);

45 
tokí
;

46 
Tokí
 
äame
;

47 c⁄° *
zC§
 = 
zSql
;

48 
Àn
 = 0;

49 *
zRë
;

51 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

53 
	`UNUSED_PARAMETER
(
NŸU£d
);

59 if–
zSql
 ){

61 if–!*
zC§
 ){

67 
äame
.
z
 = (*)
zC§
;

68 
äame
.
n
 = 
Àn
;

74 
zC§
 +
Àn
;

75 
Àn
 = 
	`sqlôe3GëTokí
(
zC§
, &
tokí
);

76 }  
tokí
==
TK_SPACE
 );

77 
	`as£π
–
Àn
>0 );

78 }  
tokí
!=
TK_LP
 &&Åokí!=
TK_USING
 );

80 
zRë
 = 
	`sqlôe3MPrötf
(
db
, "%.*s\"%w\"%s", ()(((
u8
*)
äame
.
z
Ë- 
zSql
),

81 
zSql
, 
zTabÀName
, 
äame
.
z
+äame.
n
);

82 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
zRë
, -1, 
SQLITE_DYNAMIC
);

84 
	}
}

101 #i‚de‡
SQLITE_OMIT_FOREIGN_KEY


102 
	$ª«meP¨ítFunc
(

103 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

104 
NŸU£d
,

105 
sqlôe3_vÆue
 **
¨gv


107 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

108 *
zOuçut
 = 0;

109 *
zResu…
;

110 c⁄° *
zI≈ut
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

111 c⁄° *
zOld
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[1]);

112 c⁄° *
zNew
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[2]);

114 c⁄° *
z
;

115 
n
;

116 
tokí
;

118 
	`UNUSED_PARAMETER
(
NŸU£d
);

119 if–
zI≈ut
==0 || 
zOld
==0 ) ;

120 
z
=
zI≈ut
; *z; z=z+
n
){

121 
n
 = 
	`sqlôe3GëTokí
(
z
, &
tokí
);

122 if–
tokí
==
TK_REFERENCES
 ){

123 *
zP¨ít
;

125 
z
 +
n
;

126 
n
 = 
	`sqlôe3GëTokí
(
z
, &
tokí
);

127 } 
tokí
==
TK_SPACE
 );

129 if–
tokí
==
TK_ILLEGAL
 ) ;

130 
zP¨ít
 = 
	`sqlôe3DbSåNDup
(
db
, (c⁄° *)
z
, 
n
);

131 if–
zP¨ít
==0 ) ;

132 
	`sqlôe3DequŸe
(
zP¨ít
);

133 if–0==
	`sqlôe3SåICmp
((c⁄° *)
zOld
, 
zP¨ít
) ){

134 *
zOut
 = 
	`sqlôe3MPrötf
(
db
, "%s%.*s\"%w\"",

135 (
zOuçut
?zOuçut:""), ()(
z
-
zI≈ut
), zI≈ut, (c⁄° *)
zNew


137 
	`sqlôe3DbFªe
(
db
, 
zOuçut
);

138 
zOuçut
 = 
zOut
;

139 
zI≈ut
 = &
z
[
n
];

141 
	`sqlôe3DbFªe
(
db
, 
zP¨ít
);

145 
zResu…
 = 
	`sqlôe3MPrötf
(
db
, "%s%s", (
zOuçut
?zOuçut:""), 
zI≈ut
),

146 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
zResu…
, -1, 
SQLITE_DYNAMIC
);

147 
	`sqlôe3DbFªe
(
db
, 
zOuçut
);

148 
	}
}

151 #i‚de‡
SQLITE_OMIT_TRIGGER


159 
	$ª«meTriggîFunc
(

160 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

161 
NŸU£d
,

162 
sqlôe3_vÆue
 **
¨gv


164 c⁄° *
zSql
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

165 c⁄° *
zTabÀName
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[1]);

167 
tokí
;

168 
Tokí
 
äame
;

169 
di°
 = 3;

170 c⁄° *
zC§
 = 
zSql
;

171 
Àn
 = 0;

172 *
zRë
;

173 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

175 
	`UNUSED_PARAMETER
(
NŸU£d
);

182 if–
zSql
 ){

185 if–!*
zC§
 ){

191 
äame
.
z
 = (*)
zC§
;

192 
äame
.
n
 = 
Àn
;

198 
zC§
 +
Àn
;

199 
Àn
 = 
	`sqlôe3GëTokí
(
zC§
, &
tokí
);

200 } 
tokí
==
TK_SPACE
 );

201 
	`as£π
–
Àn
>0 );

212 
di°
++;

213 if–
tokí
==
TK_DOT
 ||Åokí==
TK_ON
 ){

214 
di°
 = 0;

216 }  
di°
!=2 || (
tokí
!=
TK_WHEN
 &&Åokí!=
TK_FOR
 &&Åokí!=
TK_BEGIN
) );

221 
zRë
 = 
	`sqlôe3MPrötf
(
db
, "%.*s\"%w\"%s", ()(((
u8
*)
äame
.
z
Ë- 
zSql
),

222 
zSql
, 
zTabÀName
, 
äame
.
z
+äame.
n
);

223 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
zRë
, -1, 
SQLITE_DYNAMIC
);

225 
	}
}

231 
	$sqlôe3A…îFun˘i⁄s
(){

232 
FuncDef
 
aA…îTabÀFuncs
[] = {

233 
	`FUNCTION
(
sqlôe_ª«me_èbÀ
, 2, 0, 0, 
ª«meTabÀFunc
),

234 #i‚de‡
SQLITE_OMIT_TRIGGER


235 
	`FUNCTION
(
sqlôe_ª«me_åiggî
, 2, 0, 0, 
ª«meTriggîFunc
),

237 #i‚de‡
SQLITE_OMIT_FOREIGN_KEY


238 
	`FUNCTION
(
sqlôe_ª«me_∑ª¡
, 3, 0, 0, 
ª«meP¨ítFunc
),

241 
	`sqlôe3In£πBuûtöFuncs
(
aA…îTabÀFuncs
, 
	`AºaySize
(aAlterTableFuncs));

242 
	}
}

260 *
	$whîeOrName
(
sqlôe3
 *
db
, *
zWhîe
, *
zC⁄°™t
){

261 *
zNew
;

262 if–!
zWhîe
 ){

263 
zNew
 = 
	`sqlôe3MPrötf
(
db
, "«me=%Q", 
zC⁄°™t
);

265 
zNew
 = 
	`sqlôe3MPrötf
(
db
, "%†ORÇame=%Q", 
zWhîe
, 
zC⁄°™t
);

266 
	`sqlôe3DbFªe
(
db
, 
zWhîe
);

268  
zNew
;

269 
	}
}

271 #i‡!
deföed
(
SQLITE_OMIT_FOREIGN_KEY
Ë&& !deföed(
SQLITE_OMIT_TRIGGER
)

278 *
	$whîeF‹eignKeys
(
P¨£
 *
pP¨£
, 
TabÀ
 *
pTab
){

279 
FKey
 *
p
;

280 *
zWhîe
 = 0;

281 
p
=
	`sqlôe3FkRe„ªn˚s
(
pTab
);Ö;Öı->
pNextTo
){

282 
zWhîe
 = 
	`whîeOrName
(
pP¨£
->
db
, zWhîe, 
p
->
pFrom
->
zName
);

284  
zWhîe
;

285 
	}
}

294 *
	$whîeTempTriggîs
(
P¨£
 *
pP¨£
, 
TabÀ
 *
pTab
){

295 
Triggî
 *
pTrig
;

296 *
zWhîe
 = 0;

297 c⁄° 
Schema
 *
pTempSchema
 = 
pP¨£
->
db
->
aDb
[1].
pSchema
;

304 if–
pTab
->
pSchema
!=
pTempSchema
 ){

305 
sqlôe3
 *
db
 = 
pP¨£
->db;

306 
pTrig
=
	`sqlôe3TriggîLi°
(
pP¨£
, 
pTab
);ÖTrig;ÖTrigıTrig->
pNext
){

307 if–
pTrig
->
pSchema
==
pTempSchema
 ){

308 
zWhîe
 = 
	`whîeOrName
(
db
, zWhîe, 
pTrig
->
zName
);

312 if–
zWhîe
 ){

313 *
zNew
 = 
	`sqlôe3MPrötf
(
pP¨£
->
db
, "ty≥='åiggî' AND (%s)", 
zWhîe
);

314 
	`sqlôe3DbFªe
(
pP¨£
->
db
, 
zWhîe
);

315 
zWhîe
 = 
zNew
;

317  
zWhîe
;

318 
	}
}

328 
	$ªlﬂdTabÀSchema
(
P¨£
 *
pP¨£
, 
TabÀ
 *
pTab
, c⁄° *
zName
){

329 
Vdbe
 *
v
;

330 *
zWhîe
;

331 
iDb
;

332 #i‚de‡
SQLITE_OMIT_TRIGGER


333 
Triggî
 *
pTrig
;

336 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

337 if–
	`NEVER
(
v
==0) ) ;

338 
	`as£π
–
	`sqlôe3BåìHﬁdsAŒMuãxes
(
pP¨£
->
db
) );

339 
iDb
 = 
	`sqlôe3SchemaToIndex
(
pP¨£
->
db
, 
pTab
->
pSchema
);

340 
	`as£π
–
iDb
>=0 );

342 #i‚de‡
SQLITE_OMIT_TRIGGER


344 
pTrig
=
	`sqlôe3TriggîLi°
(
pP¨£
, 
pTab
);ÖTrig;ÖTrigıTrig->
pNext
){

345 
iTrigDb
 = 
	`sqlôe3SchemaToIndex
(
pP¨£
->
db
, 
pTrig
->
pSchema
);

346 
	`as£π
–
iTrigDb
==
iDb
 || iTrigDb==1 );

347 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Dr›Triggî
, 
iTrigDb
, 0, 0, 
pTrig
->
zName
, 0);

352 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Dr›TabÀ
, 
iDb
, 0, 0, 
pTab
->
zName
, 0);

355 
zWhîe
 = 
	`sqlôe3MPrötf
(
pP¨£
->
db
, "tbl_«me=%Q", 
zName
);

356 if–!
zWhîe
 ) ;

357 
	`sqlôe3VdbeAddP¨£SchemaOp
(
v
, 
iDb
, 
zWhîe
);

359 #i‚de‡
SQLITE_OMIT_TRIGGER


363 if–(
zWhîe
=
	`whîeTempTriggîs
(
pP¨£
, 
pTab
))!=0 ){

364 
	`sqlôe3VdbeAddP¨£SchemaOp
(
v
, 1, 
zWhîe
);

367 
	}
}

377 
	$isSy°emTabÀ
(
P¨£
 *
pP¨£
, c⁄° *
zName
){

378 if–
	`sqlôe3SåÀn30
(
zName
)>6 && 0==
	`sqlôe3SåNICmp
(zName, "sqlite_", 7) ){

379 
	`sqlôe3Eº‹Msg
(
pP¨£
, "èbÀ %†mayÇŸ bêÆãªd", 
zName
);

383 
	}
}

389 
	$sqlôe3A…îRíameTabÀ
(

390 
P¨£
 *
pP¨£
,

391 
SrcLi°
 *
pSrc
,

392 
Tokí
 *
pName


394 
iDb
;

395 *
zDb
;

396 
TabÀ
 *
pTab
;

397 *
zName
 = 0;

398 
sqlôe3
 *
db
 = 
pP¨£
->db;

399 
nTabName
;

400 c⁄° *
zTabName
;

401 
Vdbe
 *
v
;

402 #i‚de‡
SQLITE_OMIT_TRIGGER


403 *
zWhîe
 = 0;

405 
VTabÀ
 *
pVTab
 = 0;

406 
ßvedDbFœgs
;

408 
ßvedDbFœgs
 = 
db
->
Êags
;

409 if–
	`NEVER
(
db
->
mÆlocFaûed
ËË
exô_ª«me_èbÀ
;

410 
	`as£π
–
pSrc
->
nSrc
==1 );

411 
	`as£π
–
	`sqlôe3BåìHﬁdsAŒMuãxes
(
pP¨£
->
db
) );

413 
pTab
 = 
	`sqlôe3LoˇãTabÀIãm
(
pP¨£
, 0, &
pSrc
->
a
[0]);

414 if–!
pTab
 ) 
exô_ª«me_èbÀ
;

415 
iDb
 = 
	`sqlôe3SchemaToIndex
(
pP¨£
->
db
, 
pTab
->
pSchema
);

416 
zDb
 = 
db
->
aDb
[
iDb
].
zDbSName
;

417 
db
->
Êags
 |
SQLITE_Pª„rBuûtö
;

420 
zName
 = 
	`sqlôe3NameFromTokí
(
db
, 
pName
);

421 if–!
zName
 ) 
exô_ª«me_èbÀ
;

426 if–
	`sqlôe3FödTabÀ
(
db
, 
zName
, 
zDb
Ë|| 
	`sqlôe3FödIndex
(db, zName, zDb) ){

427 
	`sqlôe3Eº‹Msg
(
pP¨£
,

428 "thîêi†ÆªadyánŸhîÅabÀ o∏ödex wôhÅhi†«me: %s", 
zName
);

429 
exô_ª«me_èbÀ
;

435 if–
SQLITE_OK
!=
	`isSy°emTabÀ
(
pP¨£
, 
pTab
->
zName
) ){

436 
exô_ª«me_èbÀ
;

438 if–
SQLITE_OK
!=
	`sqlôe3CheckObje˘Name
(
pP¨£
, 
zName
) ){ 

439 
exô_ª«me_èbÀ
;

442 #i‚de‡
SQLITE_OMIT_VIEW


443 if–
pTab
->
pSñe˘
 ){

444 
	`sqlôe3Eº‹Msg
(
pP¨£
, "võw %†mayÇŸ bêÆãªd", 
pTab
->
zName
);

445 
exô_ª«me_èbÀ
;

449 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


451 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_ALTER_TABLE
, 
zDb
, 
pTab
->
zName
, 0) ){

452 
exô_ª«me_èbÀ
;

456 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


457 if–
	`sqlôe3VõwGëCﬁumnNames
(
pP¨£
, 
pTab
) ){

458 
exô_ª«me_èbÀ
;

460 if–
	`IsVútuÆ
(
pTab
) ){

461 
pVTab
 = 
	`sqlôe3GëVTabÀ
(
db
, 
pTab
);

462 if–
pVTab
->
pVèb
->
pModuÀ
->
xRíame
==0 ){

463 
pVTab
 = 0;

473 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

474 if–
v
==0 ){

475 
exô_ª«me_èbÀ
;

477 
	`sqlôe3BegöWrôeO≥øti⁄
(
pP¨£
, 
pVTab
!=0, 
iDb
);

478 
	`sqlôe3Ch™geCookõ
(
pP¨£
, 
iDb
);

485 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


486 if–
pVTab
 ){

487 
i
 = ++
pP¨£
->
nMem
;

488 
	`sqlôe3VdbeLﬂdSåög
(
v
, 
i
, 
zName
);

489 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_VRíame
, 
i
, 0, 0,(c⁄° *)
pVTab
, 
P4_VTAB
);

490 
	`sqlôe3MayAb‹t
(
pP¨£
);

495 
zTabName
 = 
pTab
->
zName
;

496 
nTabName
 = 
	`sqlôe3Utf8Ch¨Lí
(
zTabName
, -1);

498 #i‡!
	`deföed
(
SQLITE_OMIT_FOREIGN_KEY
Ë&& !deföed(
SQLITE_OMIT_TRIGGER
)

499 if–
db
->
Êags
&
SQLITE_F‹eignKeys
 ){

503 if–(
zWhîe
=
	`whîeF‹eignKeys
(
pP¨£
, 
pTab
))!=0 ){

504 
	`sqlôe3Ne°edP¨£
(
pP¨£
,

507 "WHERE %s;", 
zDb
, 
MASTER_NAME
, 
zTabName
, 
zName
, 
zWhîe
);

508 
	`sqlôe3DbFªe
(
db
, 
zWhîe
);

514 
	`sqlôe3Ne°edP¨£
(
pP¨£
,

516 #ifde‡
SQLITE_OMIT_TRIGGER


531 
zDb
, 
MASTER_NAME
, 
zName
, zName, zName,

532 #i‚de‡
SQLITE_OMIT_TRIGGER


533 
zName
,

535 
zName
, 
nTabName
, 
zTabName


538 #i‚de‡
SQLITE_OMIT_AUTOINCREMENT


542 if–
	`sqlôe3FödTabÀ
(
db
, "sqlôe_£quí˚", 
zDb
) ){

543 
	`sqlôe3Ne°edP¨£
(
pP¨£
,

545 
zDb
, 
zName
, 
pTab
->zName);

549 #i‚de‡
SQLITE_OMIT_TRIGGER


554 if–(
zWhîe
=
	`whîeTempTriggîs
(
pP¨£
, 
pTab
))!=0 ){

555 
	`sqlôe3Ne°edP¨£
(
pP¨£
,

559 "WHERE %s;", 
zName
, zName, 
zWhîe
);

560 
	`sqlôe3DbFªe
(
db
, 
zWhîe
);

564 #i‡!
	`deföed
(
SQLITE_OMIT_FOREIGN_KEY
Ë&& !deföed(
SQLITE_OMIT_TRIGGER
)

565 if–
db
->
Êags
&
SQLITE_F‹eignKeys
 ){

566 
FKey
 *
p
;

567 
p
=
	`sqlôe3FkRe„ªn˚s
(
pTab
);Ö;Öı->
pNextTo
){

568 
TabÀ
 *
pFrom
 = 
p
->pFrom;

569 if–
pFrom
!=
pTab
 ){

570 
	`ªlﬂdTabÀSchema
(
pP¨£
, 
p
->
pFrom
,ÖFrom->
zName
);

577 
	`ªlﬂdTabÀSchema
(
pP¨£
, 
pTab
, 
zName
);

579 
exô_ª«me_èbÀ
:

580 
	`sqlôe3SrcLi°Dñëe
(
db
, 
pSrc
);

581 
	`sqlôe3DbFªe
(
db
, 
zName
);

582 
db
->
Êags
 = 
ßvedDbFœgs
;

583 
	}
}

593 
	$sqlôe3A…îFöishAddCﬁumn
(
P¨£
 *
pP¨£
, 
Tokí
 *
pCﬁDef
){

594 
TabÀ
 *
pNew
;

595 
TabÀ
 *
pTab
;

596 
iDb
;

597 c⁄° *
zDb
;

598 c⁄° *
zTab
;

599 *
zCﬁ
;

600 
Cﬁumn
 *
pCﬁ
;

601 
Ex¥
 *
pDÊt
;

602 
sqlôe3
 *
db
;

603 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

604 
r1
;

606 
db
 = 
pP¨£
->db;

607 if–
pP¨£
->
nEº
 || 
db
->
mÆlocFaûed
 ) ;

608 
	`as£π
–
v
!=0 );

609 
pNew
 = 
pP¨£
->
pNewTabÀ
;

610 
	`as£π
–
pNew
 );

612 
	`as£π
–
	`sqlôe3BåìHﬁdsAŒMuãxes
(
db
) );

613 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pNew
->
pSchema
);

614 
zDb
 = 
db
->
aDb
[
iDb
].
zDbSName
;

615 
zTab
 = &
pNew
->
zName
[16];

616 
pCﬁ
 = &
pNew
->
aCﬁ
[pNew->
nCﬁ
-1];

617 
pDÊt
 = 
pCﬁ
->pDflt;

618 
pTab
 = 
	`sqlôe3FödTabÀ
(
db
, 
zTab
, 
zDb
);

619 
	`as£π
–
pTab
 );

621 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


623 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_ALTER_TABLE
, 
zDb
, 
pTab
->
zName
, 0) ){

632 
	`as£π
–
pDÊt
==0 ||ÖDÊt->
›
==
TK_SPAN
 );

633 if–
pDÊt
 &&ÖDÊt->
pLe·
->
›
==
TK_NULL
 ){

634 
pDÊt
 = 0;

641 if–
pCﬁ
->
cﬁFœgs
 & 
COLFLAG_PRIMKEY
 ){

642 
	`sqlôe3Eº‹Msg
(
pP¨£
, "Cannotáddá PRIMARY KEY column");

645 if–
pNew
->
pIndex
 ){

646 
	`sqlôe3Eº‹Msg
(
pP¨£
, "Cannotáddá UNIQUE column");

649 if–(
db
->
Êags
&
SQLITE_F‹eignKeys
Ë&& 
pNew
->
pFKey
 && 
pDÊt
 ){

650 
	`sqlôe3Eº‹Msg
(
pP¨£
,

654 if–
pCﬁ
->
nŸNuŒ
 && !
pDÊt
 ){

655 
	`sqlôe3Eº‹Msg
(
pP¨£
,

663 if–
pDÊt
 ){

664 
sqlôe3_vÆue
 *
pVÆ
 = 0;

665 
rc
;

666 
rc
 = 
	`sqlôe3VÆueFromEx¥
(
db
, 
pDÊt
, 
SQLITE_UTF8
, 
SQLITE_AFF_BLOB
, &
pVÆ
);

667 
	`as£π
–
rc
==
SQLITE_OK
 ||Ñc==
SQLITE_NOMEM
 );

668 if–
rc
!=
SQLITE_OK
 ){

669 
	`as£π
–
db
->
mÆlocFaûed
 == 1 );

672 if–!
pVÆ
 ){

673 
	`sqlôe3Eº‹Msg
(
pP¨£
, "Cannotáddá column withÇon-constant default");

676 
	`sqlôe3VÆueFªe
(
pVÆ
);

680 
zCﬁ
 = 
	`sqlôe3DbSåNDup
(
db
, (*)
pCﬁDef
->
z
,ÖCﬁDef->
n
);

681 if–
zCﬁ
 ){

682 *
zEnd
 = &
zCﬁ
[
pCﬁDef
->
n
-1];

683 
ßvedDbFœgs
 = 
db
->
Êags
;

684  
zEnd
>
zCﬁ
 && (*zEnd==';' || 
	`sqlôe3Is•a˚
(*zEnd)) ){

685 *
zEnd
-- = '\0';

687 
db
->
Êags
 |
SQLITE_Pª„rBuûtö
;

688 
	`sqlôe3Ne°edP¨£
(
pP¨£
,

692 
zDb
, 
MASTER_NAME
, 
pNew
->
addCﬁOff£t
, 
zCﬁ
,ÖNew->addColOffset+1,

693 
zTab


695 
	`sqlôe3DbFªe
(
db
, 
zCﬁ
);

696 
db
->
Êags
 = 
ßvedDbFœgs
;

703 
r1
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

704 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_RódCookõ
, 
iDb
, 
r1
, 
BTREE_FILE_FORMAT
);

705 
	`sqlôe3VdbeU£sBåì
(
v
, 
iDb
);

706 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_AddImm
, 
r1
, -2);

707 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IfPos
, 
r1
, 
	`sqlôe3VdbeCuºítAddr
(v)+2);

708 
	`VdbeCovîage
(
v
);

709 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_SëCookõ
, 
iDb
, 
BTREE_FILE_FORMAT
, 3);

710 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
r1
);

713 
	`ªlﬂdTabÀSchema
(
pP¨£
, 
pTab
,ÖTab->
zName
);

714 
	}
}

731 
	$sqlôe3A…îBegöAddCﬁumn
(
P¨£
 *
pP¨£
, 
SrcLi°
 *
pSrc
){

732 
TabÀ
 *
pNew
;

733 
TabÀ
 *
pTab
;

734 
Vdbe
 *
v
;

735 
iDb
;

736 
i
;

737 
nAŒoc
;

738 
sqlôe3
 *
db
 = 
pP¨£
->db;

741 
	`as£π
–
pP¨£
->
pNewTabÀ
==0 );

742 
	`as£π
–
	`sqlôe3BåìHﬁdsAŒMuãxes
(
db
) );

743 if–
db
->
mÆlocFaûed
 ) 
exô_begö_add_cﬁumn
;

744 
pTab
 = 
	`sqlôe3LoˇãTabÀIãm
(
pP¨£
, 0, &
pSrc
->
a
[0]);

745 if–!
pTab
 ) 
exô_begö_add_cﬁumn
;

747 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


748 if–
	`IsVútuÆ
(
pTab
) ){

749 
	`sqlôe3Eº‹Msg
(
pP¨£
, "virtualÅables mayÇot beáltered");

750 
exô_begö_add_cﬁumn
;

755 if–
pTab
->
pSñe˘
 ){

756 
	`sqlôe3Eº‹Msg
(
pP¨£
, "Cannotáddá columnÅoá view");

757 
exô_begö_add_cﬁumn
;

759 if–
SQLITE_OK
!=
	`isSy°emTabÀ
(
pP¨£
, 
pTab
->
zName
) ){

760 
exô_begö_add_cﬁumn
;

763 
	`as£π
–
pTab
->
addCﬁOff£t
>0 );

764 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pTab
->
pSchema
);

773 
pNew
 = (
TabÀ
*)
	`sqlôe3DbMÆlocZîo
(
db
, (Table));

774 if–!
pNew
 ) 
exô_begö_add_cﬁumn
;

775 
pP¨£
->
pNewTabÀ
 = 
pNew
;

776 
pNew
->
nTabRef
 = 1;

777 
pNew
->
nCﬁ
 = 
pTab
->nCol;

778 
	`as£π
–
pNew
->
nCﬁ
>0 );

779 
nAŒoc
 = (((
pNew
->
nCﬁ
-1)/8)*8)+8;

780 
	`as£π
–
nAŒoc
>=
pNew
->
nCﬁ
 &&ÇAlloc%8==0 &&ÇAlloc-pNew->nCol<8 );

781 
pNew
->
aCﬁ
 = (
Cﬁumn
*)
	`sqlôe3DbMÆlocZîo
(
db
, (Cﬁumn)*
nAŒoc
);

782 
pNew
->
zName
 = 
	`sqlôe3MPrötf
(
db
, "sqlôe_Æãπab_%s", 
pTab
->zName);

783 if–!
pNew
->
aCﬁ
 || !pNew->
zName
 ){

784 
	`as£π
–
db
->
mÆlocFaûed
 );

785 
exô_begö_add_cﬁumn
;

787 
	`mem˝y
(
pNew
->
aCﬁ
, 
pTab
->aCﬁ, (
Cﬁumn
)*pNew->
nCﬁ
);

788 
i
=0; i<
pNew
->
nCﬁ
; i++){

789 
Cﬁumn
 *
pCﬁ
 = &
pNew
->
aCﬁ
[
i
];

790 
pCﬁ
->
zName
 = 
	`sqlôe3DbSåDup
(
db
,ÖCol->zName);

791 
pCﬁ
->
zCﬁl
 = 0;

792 
pCﬁ
->
pDÊt
 = 0;

794 
pNew
->
pSchema
 = 
db
->
aDb
[
iDb
].pSchema;

795 
pNew
->
addCﬁOff£t
 = 
pTab
->addColOffset;

796 
pNew
->
nTabRef
 = 1;

799 
	`sqlôe3BegöWrôeO≥øti⁄
(
pP¨£
, 0, 
iDb
);

800 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

801 if–!
v
 ) 
exô_begö_add_cﬁumn
;

802 
	`sqlôe3Ch™geCookõ
(
pP¨£
, 
iDb
);

804 
exô_begö_add_cﬁumn
:

805 
	`sqlôe3SrcLi°Dñëe
(
db
, 
pSrc
);

807 
	}
}

	@analyze.c

142 #i‚de‡
SQLITE_OMIT_ANALYZE


143 
	~"sqlôeI¡.h
"

145 #i‡
deföed
(
SQLITE_ENABLE_STAT4
)

146 
	#IsSèt4
 1

	)

147 
	#IsSèt3
 0

	)

148 #ñi‡
deföed
(
SQLITE_ENABLE_STAT3
)

149 
	#IsSèt4
 0

	)

150 
	#IsSèt3
 1

	)

152 
	#IsSèt4
 0

	)

153 
	#IsSèt3
 0

	)

154 #unde‡
SQLITE_STAT4_SAMPLES


155 
	#SQLITE_STAT4_SAMPLES
 1

	)

157 
	#IsSèt34
 (
IsSèt3
+
IsSèt4
Ë

	)

172 
	$›íSètTabÀ
(

173 
P¨£
 *
pP¨£
,

174 
iDb
,

175 
iSètCur
,

176 c⁄° *
zWhîe
,

177 c⁄° *
zWhîeTy≥


180 c⁄° *
zName
;

181 c⁄° *
zCﬁs
;

182 } 
aTabÀ
[] = {

184 #i‡
	`deföed
(
SQLITE_ENABLE_STAT4
)

187 #ñi‡
	`deföed
(
SQLITE_ENABLE_STAT3
)

195 
i
;

196 
sqlôe3
 *
db
 = 
pP¨£
->db;

197 
Db
 *
pDb
;

198 
Vdbe
 *
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

199 
aRoŸ
[
	`AºaySize
(
aTabÀ
)];

200 
u8
 
aCª©eTbl
[
	`AºaySize
(
aTabÀ
)];

202 if–
v
==0 ) ;

203 
	`as£π
–
	`sqlôe3BåìHﬁdsAŒMuãxes
(
db
) );

204 
	`as£π
–
	`sqlôe3VdbeDb
(
v
)==
db
 );

205 
pDb
 = &
db
->
aDb
[
iDb
];

210 
i
=0; i<
	`AºaySize
(
aTabÀ
); i++){

211 c⁄° *
zTab
 = 
aTabÀ
[
i
].
zName
;

212 
TabÀ
 *
pSèt
;

213 if–(
pSèt
 = 
	`sqlôe3FödTabÀ
(
db
, 
zTab
, 
pDb
->
zDbSName
))==0 ){

214 if–
aTabÀ
[
i
].
zCﬁs
 ){

219 
	`sqlôe3Ne°edP¨£
(
pP¨£
,

220 "CREATE TABLE %Q.%s(%s)", 
pDb
->
zDbSName
, 
zTab
, 
aTabÀ
[
i
].
zCﬁs


222 
aRoŸ
[
i
] = 
pP¨£
->
ªgRoŸ
;

223 
aCª©eTbl
[
i
] = 
OPFLAG_P2ISREG
;

229 
aRoŸ
[
i
] = 
pSèt
->
äum
;

230 
aCª©eTbl
[
i
] = 0;

231 
	`sqlôe3TabÀLock
(
pP¨£
, 
iDb
, 
aRoŸ
[
i
], 1, 
zTab
);

232 if–
zWhîe
 ){

233 
	`sqlôe3Ne°edP¨£
(
pP¨£
,

235 
pDb
->
zDbSName
, 
zTab
, 
zWhîeTy≥
, 
zWhîe


239 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_CÀ¨
, 
aRoŸ
[
i
], 
iDb
);

245 
i
=0; 
aTabÀ
[i].
zCﬁs
; i++){

246 
	`as£π
–
i
<
	`AºaySize
(
aTabÀ
) );

247 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_O≥nWrôe
, 
iSètCur
+
i
, 
aRoŸ
[i], 
iDb
, 3);

248 
	`sqlôe3VdbeCh™geP5
(
v
, 
aCª©eTbl
[
i
]);

249 
	`VdbeCommít
((
v
, 
aTabÀ
[
i
].
zName
));

251 
	}
}

256 #i‚de‡
SQLITE_STAT4_SAMPLES


257 
	#SQLITE_STAT4_SAMPLES
 24

	)

265 
Sèt4Accum
 
	tSèt4Accum
;

266 
Sèt4Sam∂e
 
	tSèt4Sam∂e
;

267 
	sSèt4Sam∂e
 {

268 
tRow˙t
 *
	m™Eq
;

269 
tRow˙t
 *
	m™DLt
;

270 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


271 
tRow˙t
 *
	m™Lt
;

273 
i64
 
	miRowid
;

274 
u8
 *
	maRowid
;

275 } 
	mu
;

276 
u32
 
	mnRowid
;

277 
u8
 
	misPSam∂e
;

278 
	miCﬁ
;

279 
u32
 
	miHash
;

282 
	sSèt4Accum
 {

283 
tRow˙t
 
	mnRow
;

284 
tRow˙t
 
	mnPSam∂e
;

285 
	mnCﬁ
;

286 
	mnKeyCﬁ
;

287 
	mmxSam∂e
;

288 
Sèt4Sam∂e
 
	mcuºít
;

289 
u32
 
	miP∫
;

290 
Sèt4Sam∂e
 *
	maBe°
;

291 
	miMö
;

292 
	mnSam∂e
;

293 
	miGë
;

294 
Sèt4Sam∂e
 *
	ma
;

295 
sqlôe3
 *
	mdb
;

300 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


301 
	$ßm∂eCÀ¨
(
sqlôe3
 *
db
, 
Sèt4Sam∂e
 *
p
){

302 
	`as£π
–
db
!=0 );

303 if–
p
->
nRowid
 ){

304 
	`sqlôe3DbFªe
(
db
, 
p
->
u
.
aRowid
);

305 
p
->
nRowid
 = 0;

307 
	}
}

312 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


313 
	$ßm∂eSëRowid
(
sqlôe3
 *
db
, 
Sèt4Sam∂e
 *
p
, 
n
, c⁄° 
u8
 *
pD©a
){

314 
	`as£π
–
db
!=0 );

315 if–
p
->
nRowid
 ) 
	`sqlôe3DbFªe
(
db
,Ö->
u
.
aRowid
);

316 
p
->
u
.
aRowid
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, 
n
);

317 if–
p
->
u
.
aRowid
 ){

318 
p
->
nRowid
 = 
n
;

319 
	`mem˝y
(
p
->
u
.
aRowid
, 
pD©a
, 
n
);

321 
p
->
nRowid
 = 0;

323 
	}
}

328 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


329 
	$ßm∂eSëRowidI¡64
(
sqlôe3
 *
db
, 
Sèt4Sam∂e
 *
p
, 
i64
 
iRowid
){

330 
	`as£π
–
db
!=0 );

331 if–
p
->
nRowid
 ) 
	`sqlôe3DbFªe
(
db
,Ö->
u
.
aRowid
);

332 
p
->
nRowid
 = 0;

333 
p
->
u
.
iRowid
 = iRowid;

334 
	}
}

341 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


342 
	$ßm∂eC›y
(
Sèt4Accum
 *
p
, 
Sèt4Sam∂e
 *
pTo
, Sèt4Sam∂ê*
pFrom
){

343 
pTo
->
isPSam∂e
 = 
pFrom
->isPSample;

344 
pTo
->
iCﬁ
 = 
pFrom
->iCol;

345 
pTo
->
iHash
 = 
pFrom
->iHash;

346 
	`mem˝y
(
pTo
->
™Eq
, 
pFrom
->™Eq, (
tRow˙t
)*
p
->
nCﬁ
);

347 
	`mem˝y
(
pTo
->
™Lt
, 
pFrom
->™Lt, (
tRow˙t
)*
p
->
nCﬁ
);

348 
	`mem˝y
(
pTo
->
™DLt
, 
pFrom
->™DLt, (
tRow˙t
)*
p
->
nCﬁ
);

349 if–
pFrom
->
nRowid
 ){

350 
	`ßm∂eSëRowid
(
p
->
db
, 
pTo
, 
pFrom
->
nRowid
,ÖFrom->
u
.
aRowid
);

352 
	`ßm∂eSëRowidI¡64
(
p
->
db
, 
pTo
, 
pFrom
->
u
.
iRowid
);

354 
	}
}

360 
	$°©4De°ru˘‹
(*
pOld
){

361 
Sèt4Accum
 *
p
 = (Sèt4Accum*)
pOld
;

362 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


363 
i
;

364 
i
=0; i<
p
->
nCﬁ
; i++Ë
	`ßm∂eCÀ¨
’->
db
,Ö->
aBe°
+i);

365 
i
=0; i<
p
->
mxSam∂e
; i++Ë
	`ßm∂eCÀ¨
’->
db
,Ö->
a
+i);

366 
	`ßm∂eCÀ¨
(
p
->
db
, &p->
cuºít
);

368 
	`sqlôe3DbFªe
(
p
->
db
,Ö);

369 
	}
}

394 
	$°©Inô
(

395 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

396 
¨gc
,

397 
sqlôe3_vÆue
 **
¨gv


399 
Sèt4Accum
 *
p
;

400 
nCﬁ
;

401 
nKeyCﬁ
;

402 
nCﬁUp
;

403 
n
;

404 
sqlôe3
 *
db
;

405 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


406 
mxSam∂e
 = 
SQLITE_STAT4_SAMPLES
;

410 
	`UNUSED_PARAMETER
(
¨gc
);

411 
nCﬁ
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[0]);

412 
	`as£π
–
nCﬁ
>0 );

413 
nCﬁUp
 = (
tRow˙t
)<8 ? (
nCﬁ
+1)&~1 :ÇCol;

414 
nKeyCﬁ
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[1]);

415 
	`as£π
–
nKeyCﬁ
<=
nCﬁ
 );

416 
	`as£π
–
nKeyCﬁ
>0 );

419 
n
 = (*
p
)

420 + (
tRow˙t
)*
nCﬁUp


421 + (
tRow˙t
)*
nCﬁUp


422 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


423 + (
tRow˙t
)*
nCﬁUp


424 + (
Sèt4Sam∂e
)*(
nCﬁ
+
mxSam∂e
)

425 + (
tRow˙t
)*3*
nCﬁUp
*(
nCﬁ
+
mxSam∂e
)

428 
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

429 
p
 = 
	`sqlôe3DbMÆlocZîo
(
db
, 
n
);

430 if–
p
==0 ){

431 
	`sqlôe3_ªsu…_îr‹_nomem
(
c⁄ãxt
);

435 
p
->
db
 = db;

436 
p
->
nRow
 = 0;

437 
p
->
nCﬁ
 =ÇCol;

438 
p
->
nKeyCﬁ
 =ÇKeyCol;

439 
p
->
cuºít
.
™DLt
 = (
tRow˙t
*)&p[1];

440 
p
->
cuºít
.
™Eq
 = &p->cuºít.
™DLt
[
nCﬁUp
];

442 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


444 
u8
 *
pS∑˚
;

445 
i
;

447 
p
->
iGë
 = -1;

448 
p
->
mxSam∂e
 = mxSample;

449 
p
->
nPSam∂e
 = (
tRow˙t
)(
	`sqlôe3_vÆue_öt64
(
¨gv
[2])/(
mxSam∂e
/3+1) + 1);

450 
p
->
cuºít
.
™Lt
 = &p->cuºít.
™Eq
[
nCﬁUp
];

451 
p
->
iP∫
 = 0x689e962d*(
u32
)
nCﬁ
 ^ 0xd0944565*(u32)
	`sqlôe3_vÆue_öt
(
¨gv
[2]);

454 
p
->
a
 = (
Sèt4Sam∂e
*)&p->
cuºít
.
™Lt
[
nCﬁUp
];

455 
p
->
aBe°
 = &p->
a
[
mxSam∂e
];

456 
pS∑˚
 = (
u8
*)(&
p
->
a
[
mxSam∂e
+
nCﬁ
]);

457 
i
=0; i<(
mxSam∂e
+
nCﬁ
); i++){

458 
p
->
a
[
i
].
™Eq
 = (
tRow˙t
 *)
pS∑˚
;ÖS∑˚ +(—Row˙tË* 
nCﬁUp
);

459 
p
->
a
[
i
].
™Lt
 = (
tRow˙t
 *)
pS∑˚
;ÖS∑˚ +(—Row˙tË* 
nCﬁUp
);

460 
p
->
a
[
i
].
™DLt
 = (
tRow˙t
 *)
pS∑˚
;ÖS∑˚ +(—Row˙tË* 
nCﬁUp
);

462 
	`as£π
–(
pS∑˚
 - (
u8
*)
p
)==
n
 );

464 
i
=0; i<
nCﬁ
; i++){

465 
p
->
aBe°
[
i
].
iCﬁ
 = i;

474 
	`sqlôe3_ªsu…_blob
(
c⁄ãxt
, 
p
, (*p), 
°©4De°ru˘‹
);

475 
	}
}

476 c⁄° 
FuncDef
 
	g°©InôFuncdef
 = {

477 2+
IsSèt34
,

478 
SQLITE_UTF8
,

481 
°©Inô
,

487 #ifde‡
SQLITE_ENABLE_STAT4


499 
	$ßm∂eIsBëãrPo°
(

500 
Sèt4Accum
 *
pAccum
,

501 
Sèt4Sam∂e
 *
pNew
,

502 
Sèt4Sam∂e
 *
pOld


504 
nCﬁ
 = 
pAccum
->nCol;

505 
i
;

506 
	`as£π
–
pNew
->
iCﬁ
==
pOld
->iCol );

507 
i
=
pNew
->
iCﬁ
+1; i<
nCﬁ
; i++){

508 if–
pNew
->
™Eq
[
i
]>
pOld
->anEq[i] )  1;

509 if–
pNew
->
™Eq
[
i
]<
pOld
->anEq[i] )  0;

511 if–
pNew
->
iHash
>
pOld
->iHash )  1;

513 
	}
}

516 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


523 
	$ßm∂eIsBëãr
(

524 
Sèt4Accum
 *
pAccum
,

525 
Sèt4Sam∂e
 *
pNew
,

526 
Sèt4Sam∂e
 *
pOld


528 
tRow˙t
 
nEqNew
 = 
pNew
->
™Eq
[pNew->
iCﬁ
];

529 
tRow˙t
 
nEqOld
 = 
pOld
->
™Eq
[pOld->
iCﬁ
];

531 
	`as£π
–
pOld
->
isPSam∂e
==0 && 
pNew
->isPSample==0 );

532 
	`as£π
–
IsSèt4
 || (
pNew
->
iCﬁ
==0 && 
pOld
->iCol==0) );

534 if–(
nEqNew
>
nEqOld
) )  1;

535 #ifde‡
SQLITE_ENABLE_STAT4


536 if–
nEqNew
==
nEqOld
 ){

537 if–
pNew
->
iCﬁ
<
pOld
->iCol )  1;

538  (
pNew
->
iCﬁ
==
pOld
->iCﬁ && 
	`ßm∂eIsBëãrPo°
(
pAccum
,ÖNew,ÖOld));

542  (
nEqNew
==
nEqOld
 && 
pNew
->
iHash
>
pOld
->iHash);

544 
	}
}

550 
	$ßm∂eIn£π
(
Sèt4Accum
 *
p
, 
Sèt4Sam∂e
 *
pNew
, 
nEqZîo
){

551 
Sèt4Sam∂e
 *
pSam∂e
 = 0;

552 
i
;

554 
	`as£π
–
IsSèt4
 || 
nEqZîo
==0 );

556 #ifde‡
SQLITE_ENABLE_STAT4


557 if–
pNew
->
isPSam∂e
==0 ){

558 
Sèt4Sam∂e
 *
pUpgøde
 = 0;

559 
	`as£π
–
pNew
->
™Eq
[pNew->
iCﬁ
]>0 );

566 
i
=
p
->
nSam∂e
-1; i>=0; i--){

567 
Sèt4Sam∂e
 *
pOld
 = &
p
->
a
[
i
];

568 if–
pOld
->
™Eq
[
pNew
->
iCﬁ
]==0 ){

569 if–
pOld
->
isPSam∂e
 ) ;

570 
	`as£π
–
pOld
->
iCﬁ
>
pNew
->iCol );

571 
	`as£π
–
	`ßm∂eIsBëãr
(
p
, 
pNew
, 
pOld
) );

572 if–
pUpgøde
==0 || 
	`ßm∂eIsBëãr
(
p
, 
pOld
,ÖUpgrade) ){

573 
pUpgøde
 = 
pOld
;

577 if–
pUpgøde
 ){

578 
pUpgøde
->
iCﬁ
 = 
pNew
->iCol;

579 
pUpgøde
->
™Eq
[pUpgøde->
iCﬁ
] = 
pNew
->anEq[pUpgrade->iCol];

580 
föd_√w_mö
;

586 if–
p
->
nSam∂e
>ı->
mxSam∂e
 ){

587 
Sèt4Sam∂e
 *
pMö
 = &
p
->
a
[p->
iMö
];

588 
tRow˙t
 *
™Eq
 = 
pMö
->anEq;

589 
tRow˙t
 *
™Lt
 = 
pMö
->anLt;

590 
tRow˙t
 *
™DLt
 = 
pMö
->anDLt;

591 
	`ßm∂eCÀ¨
(
p
->
db
, 
pMö
);

592 
	`memmove
(
pMö
, &pMö[1], (
p
->
a
[0])*’->
nSam∂e
-p->
iMö
-1));

593 
pSam∂e
 = &
p
->
a
[p->
nSam∂e
-1];

594 
pSam∂e
->
nRowid
 = 0;

595 
pSam∂e
->
™Eq
 =ánEq;

596 
pSam∂e
->
™DLt
 =ánDLt;

597 
pSam∂e
->
™Lt
 =ánLt;

598 
p
->
nSam∂e
 =Ö->
mxSam∂e
-1;

604 #ifde‡
SQLITE_ENABLE_STAT4


605 
	`as£π
–
p
->
nSam∂e
==0

606 || 
pNew
->
™Lt
[
p
->
nCﬁ
-1] >Ö->
a
[p->
nSam∂e
-1].anLt[p->nCol-1] );

610 
pSam∂e
 = &
p
->
a
[p->
nSam∂e
];

611 
	`ßm∂eC›y
(
p
, 
pSam∂e
, 
pNew
);

612 
p
->
nSam∂e
++;

615 
	`mem£t
(
pSam∂e
->
™Eq
, 0, (
tRow˙t
)*
nEqZîo
);

617 #ifde‡
SQLITE_ENABLE_STAT4


618 
föd_√w_mö
:

620 if–
p
->
nSam∂e
>ı->
mxSam∂e
 ){

621 
iMö
 = -1;

622 
i
=0; i<
p
->
mxSam∂e
; i++){

623 if–
p
->
a
[
i
].
isPSam∂e
 ) ;

624 if–
iMö
<0 || 
	`ßm∂eIsBëãr
(
p
, &p->
a
[iMö], &p->a[
i
]) ){

625 
iMö
 = 
i
;

628 
	`as£π
–
iMö
>=0 );

629 
p
->
iMö
 = iMin;

631 
	}
}

640 
	$ßm∂ePushPªvious
(
Sèt4Accum
 *
p
, 
iChng
){

641 #ifde‡
SQLITE_ENABLE_STAT4


642 
i
;

646 
i
=(
p
->
nCﬁ
-2); i>=
iChng
; i--){

647 
Sèt4Sam∂e
 *
pBe°
 = &
p
->
aBe°
[
i
];

648 
pBe°
->
™Eq
[
i
] = 
p
->
cuºít
.anEq[i];

649 if–
p
->
nSam∂e
<p->
mxSam∂e
 || 
	`ßm∂eIsBëãr
’, 
pBe°
, &p->
a
[p->
iMö
]) ){

650 
	`ßm∂eIn£π
(
p
, 
pBe°
, 
i
);

655 
i
=
p
->
nSam∂e
-1; i>=0; i--){

656 
j
;

657 
j
=
iChng
; j<
p
->
nCﬁ
; j++){

658 if–
p
->
a
[
i
].
™Eq
[
j
]==0 )Ö->a[i].™Eq[j] =Ö->
cuºít
.anEq[j];

663 #i‡
	`deföed
(
SQLITE_ENABLE_STAT3
Ë&& !deföed(
SQLITE_ENABLE_STAT4
)

664 if–
iChng
==0 ){

665 
tRow˙t
 
nLt
 = 
p
->
cuºít
.
™Lt
[0];

666 
tRow˙t
 
nEq
 = 
p
->
cuºít
.
™Eq
[0];

669 if–(
nLt
/
p
->
nPSam∂e
)!=“Lt+
nEq
)/p->nPSample ){

670 
p
->
cuºít
.
isPSam∂e
 = 1;

671 
	`ßm∂eIn£π
(
p
, &p->
cuºít
, 0);

672 
p
->
cuºít
.
isPSam∂e
 = 0;

676 if–
p
->
nSam∂e
<p->
mxSam∂e


677 || 
	`ßm∂eIsBëãr
(
p
, &p->
cuºít
, &p->
a
[p->
iMö
])

679 
	`ßm∂eIn£π
(
p
, &p->
cuºít
, 0);

684 #i‚de‡
SQLITE_ENABLE_STAT3_OR_STAT4


685 
	`UNUSED_PARAMETER
–
p
 );

686 
	`UNUSED_PARAMETER
–
iChng
 );

688 
	}
}

706 
	$°©Push
(

707 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

708 
¨gc
,

709 
sqlôe3_vÆue
 **
¨gv


711 
i
;

714 
Sèt4Accum
 *
p
 = (Sèt4Accum*)
	`sqlôe3_vÆue_blob
(
¨gv
[0]);

715 
iChng
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[1]);

717 
	`UNUSED_PARAMETER
–
¨gc
 );

718 
	`UNUSED_PARAMETER
–
c⁄ãxt
 );

719 
	`as£π
–
p
->
nCﬁ
>0 );

720 
	`as£π
–
iChng
<
p
->
nCﬁ
 );

722 if–
p
->
nRow
==0 ){

724 
i
=0; i<
p
->
nCﬁ
; i++Ëp->
cuºít
.
™Eq
[i] = 1;

727 
	`ßm∂ePushPªvious
(
p
, 
iChng
);

731 
i
=0; i<
iChng
; i++){

732 
p
->
cuºít
.
™Eq
[
i
]++;

734 
i
=
iChng
; i<
p
->
nCﬁ
; i++){

735 
p
->
cuºít
.
™DLt
[
i
]++;

736 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


737 
p
->
cuºít
.
™Lt
[
i
] +p->cuºít.
™Eq
[i];

739 
p
->
cuºít
.
™Eq
[
i
] = 1;

742 
p
->
nRow
++;

743 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


744 if–
	`sqlôe3_vÆue_ty≥
(
¨gv
[2])==
SQLITE_INTEGER
 ){

745 
	`ßm∂eSëRowidI¡64
(
p
->
db
, &p->
cuºít
, 
	`sqlôe3_vÆue_öt64
(
¨gv
[2]));

747 
	`ßm∂eSëRowid
(
p
->
db
, &p->
cuºít
, 
	`sqlôe3_vÆue_byãs
(
¨gv
[2]),

748 
	`sqlôe3_vÆue_blob
(
¨gv
[2]));

750 
p
->
cuºít
.
iHash
 =Ö->
iP∫
 =Ö->iPrn*1103515245 + 12345;

753 #ifde‡
SQLITE_ENABLE_STAT4


755 
tRow˙t
 
nLt
 = 
p
->
cuºít
.
™Lt
[p->
nCﬁ
-1];

758 if–(
nLt
/
p
->
nPSam∂e
)!=(nLt+1)/p->nPSample ){

759 
p
->
cuºít
.
isPSam∂e
 = 1;

760 
p
->
cuºít
.
iCﬁ
 = 0;

761 
	`ßm∂eIn£π
(
p
, &p->
cuºít
,Ö->
nCﬁ
-1);

762 
p
->
cuºít
.
isPSam∂e
 = 0;

766 
i
=0; i<(
p
->
nCﬁ
-1); i++){

767 
p
->
cuºít
.
iCﬁ
 = 
i
;

768 if–
i
>=
iChng
 || 
	`ßm∂eIsBëãrPo°
(
p
, &p->
cuºít
, &p->
aBe°
[i]) ){

769 
	`ßm∂eC›y
(
p
, &p->
aBe°
[
i
], &p->
cuºít
);

774 
	}
}

775 c⁄° 
FuncDef
 
	g°©PushFuncdef
 = {

776 2+
IsSèt34
,

777 
SQLITE_UTF8
,

780 
°©Push
,

786 
	#STAT_GET_STAT1
 0

	)

787 
	#STAT_GET_ROWID
 1

	)

788 
	#STAT_GET_NEQ
 2

	)

789 
	#STAT_GET_NLT
 3

	)

790 
	#STAT_GET_NDLT
 4

	)

805 
	$°©Gë
(

806 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

807 
¨gc
,

808 
sqlôe3_vÆue
 **
¨gv


810 
Sèt4Accum
 *
p
 = (Sèt4Accum*)
	`sqlôe3_vÆue_blob
(
¨gv
[0]);

811 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


813 
eCÆl
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[1]);

814 
	`as£π
–
¨gc
==2 );

815 
	`as£π
–
eCÆl
==
STAT_GET_STAT1
 ||ÉCÆl==
STAT_GET_NEQ


816 || 
eCÆl
==
STAT_GET_ROWID
 ||ÉCÆl==
STAT_GET_NLT


817 || 
eCÆl
==
STAT_GET_NDLT


819 if–
eCÆl
==
STAT_GET_STAT1
 )

821 
	`as£π
–
¨gc
==1 );

845 *
z
;

846 
i
;

848 *
zRë
 = 
	`sqlôe3MÆlocZîo
–(
p
->
nKeyCﬁ
+1)*25 );

849 if–
zRë
==0 ){

850 
	`sqlôe3_ªsu…_îr‹_nomem
(
c⁄ãxt
);

854 
	`sqlôe3_¢¥ötf
(24, 
zRë
, "%Œu", (
u64
)
p
->
nRow
);

855 
z
 = 
zRë
 + 
	`sqlôe3SåÀn30
(zRet);

856 
i
=0; i<
p
->
nKeyCﬁ
; i++){

857 
u64
 
nDi°ö˘
 = 
p
->
cuºít
.
™DLt
[
i
] + 1;

858 
u64
 
iVÆ
 = (
p
->
nRow
 + 
nDi°ö˘
 - 1) /ÇDistinct;

859 
	`sqlôe3_¢¥ötf
(24, 
z
, " %Œu", 
iVÆ
);

860 
z
 +
	`sqlôe3SåÀn30
(z);

861 
	`as£π
–
p
->
cuºít
.
™Eq
[
i
] );

863 
	`as£π
–
z
[0]=='\0' && z>
zRë
 );

865 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
zRë
, -1, 
sqlôe3_‰ì
);

867 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


868 if–
eCÆl
==
STAT_GET_ROWID
 ){

869 if–
p
->
iGë
<0 ){

870 
	`ßm∂ePushPªvious
(
p
, 0);

871 
p
->
iGë
 = 0;

873 if–
p
->
iGë
<p->
nSam∂e
 ){

874 
Sèt4Sam∂e
 *
pS
 = 
p
->
a
 +Ö->
iGë
;

875 if–
pS
->
nRowid
==0 ){

876 
	`sqlôe3_ªsu…_öt64
(
c⁄ãxt
, 
pS
->
u
.
iRowid
);

878 
	`sqlôe3_ªsu…_blob
(
c⁄ãxt
, 
pS
->
u
.
aRowid
,ÖS->
nRowid
,

879 
SQLITE_TRANSIENT
);

883 
tRow˙t
 *
aC¡
 = 0;

885 
	`as£π
–
p
->
iGë
<p->
nSam∂e
 );

886  
eCÆl
 ){

887 
STAT_GET_NEQ
: 
aC¡
 = 
p
->
a
[p->
iGë
].
™Eq
; ;

888 
STAT_GET_NLT
: 
aC¡
 = 
p
->
a
[p->
iGë
].
™Lt
; ;

890 
aC¡
 = 
p
->
a
[p->
iGë
].
™DLt
;

891 
p
->
iGë
++;

896 if–
IsSèt3
 ){

897 
	`sqlôe3_ªsu…_öt64
(
c⁄ãxt
, (
i64
)
aC¡
[0]);

899 *
zRë
 = 
	`sqlôe3MÆlocZîo
(
p
->
nCﬁ
 * 25);

900 if–
zRë
==0 ){

901 
	`sqlôe3_ªsu…_îr‹_nomem
(
c⁄ãxt
);

903 
i
;

904 *
z
 = 
zRë
;

905 
i
=0; i<
p
->
nCﬁ
; i++){

906 
	`sqlôe3_¢¥ötf
(24, 
z
, "%Œu ", (
u64
)
aC¡
[
i
]);

907 
z
 +
	`sqlôe3SåÀn30
(z);

909 
	`as£π
–
z
[0]=='\0' && z>
zRë
 );

910 
z
[-1] = '\0';

911 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
zRë
, -1, 
sqlôe3_‰ì
);

916 #i‚de‡
SQLITE_DEBUG


917 
	`UNUSED_PARAMETER
–
¨gc
 );

919 
	}
}

920 c⁄° 
FuncDef
 
	g°©GëFuncdef
 = {

921 1+
IsSèt34
,

922 
SQLITE_UTF8
,

925 
°©Gë
,

931 
	$ˇŒSètGë
(
Vdbe
 *
v
, 
ªgSèt4
, 
iP¨am
, 
ªgOut
){

932 
	`as£π
–
ªgOut
!=
ªgSèt4
 &&ÑegOut!=regStat4+1 );

933 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


934 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 
iP¨am
, 
ªgSèt4
+1);

935 #ñi‡
SQLITE_DEBUG


936 
	`as£π
–
iP¨am
==
STAT_GET_STAT1
 );

938 
	`UNUSED_PARAMETER
–
iP¨am
 );

940 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Fun˘i⁄0
, 0, 
ªgSèt4
, 
ªgOut
,

941 (*)&
°©GëFuncdef
, 
P4_FUNCDEF
);

942 
	`sqlôe3VdbeCh™geP5
(
v
, 1 + 
IsSèt34
);

943 
	}
}

949 
	$™ÆyzeO√TabÀ
(

950 
P¨£
 *
pP¨£
,

951 
TabÀ
 *
pTab
,

952 
Index
 *
pO∆yIdx
,

953 
iSètCur
,

954 
iMem
,

955 
iTab


957 
sqlôe3
 *
db
 = 
pP¨£
->db;

958 
Index
 *
pIdx
;

959 
iIdxCur
;

960 
iTabCur
;

961 
Vdbe
 *
v
;

962 
i
;

963 
jZîoRows
 = -1;

964 
iDb
;

965 
u8
 
√edTabÀC¡
 = 1;

966 
ªgNewRowid
 = 
iMem
++;

967 
ªgSèt4
 = 
iMem
++;

968 
ªgChng
 = 
iMem
++;

969 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


970 
ªgRowid
 = 
iMem
++;

972 
ªgTemp
 = 
iMem
++;

973 
ªgTab«me
 = 
iMem
++;

974 
ªgIdx«me
 = 
iMem
++;

975 
ªgSèt1
 = 
iMem
++;

976 
ªgPªv
 = 
iMem
;

978 
pP¨£
->
nMem
 = 
	`MAX
’P¨£->nMem, 
iMem
);

979 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

980 if–
v
==0 || 
	`NEVER
(
pTab
==0) ){

983 if–
pTab
->
äum
==0 ){

987 if–
	`sqlôe3_°æike
("sqlôe_%", 
pTab
->
zName
, 0)==0 ){

991 
	`as£π
–
	`sqlôe3BåìHﬁdsAŒMuãxes
(
db
) );

992 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pTab
->
pSchema
);

993 
	`as£π
–
iDb
>=0 );

994 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

995 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


996 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_ANALYZE
, 
pTab
->
zName
, 0,

997 
db
->
aDb
[
iDb
].
zDbSName
 ) ){

1006 
	`sqlôe3TabÀLock
(
pP¨£
, 
iDb
, 
pTab
->
äum
, 0,ÖTab->
zName
);

1007 
iTabCur
 = 
iTab
++;

1008 
iIdxCur
 = 
iTab
++;

1009 
pP¨£
->
nTab
 = 
	`MAX
’P¨£->nTab, 
iTab
);

1010 
	`sqlôe3O≥nTabÀ
(
pP¨£
, 
iTabCur
, 
iDb
, 
pTab
, 
OP_O≥nRód
);

1011 
	`sqlôe3VdbeLﬂdSåög
(
v
, 
ªgTab«me
, 
pTab
->
zName
);

1013 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
){

1014 
nCﬁ
;

1015 
addrRewöd
;

1016 
addrNextRow
;

1017 c⁄° *
zIdxName
;

1018 
nCﬁTe°
;

1020 if–
pO∆yIdx
 &&ÖO∆yIdx!=
pIdx
 ) ;

1021 if–
pIdx
->
pP¨tIdxWhîe
==0 ) 
√edTabÀC¡
 = 0;

1022 if–!
	`HasRowid
(
pTab
Ë&& 
	`IsPrim¨yKeyIndex
(
pIdx
) ){

1023 
nCﬁ
 = 
pIdx
->
nKeyCﬁ
;

1024 
zIdxName
 = 
pTab
->
zName
;

1025 
nCﬁTe°
 = 
nCﬁ
 - 1;

1027 
nCﬁ
 = 
pIdx
->
nCﬁumn
;

1028 
zIdxName
 = 
pIdx
->
zName
;

1029 
nCﬁTe°
 = 
pIdx
->
uniqNŸNuŒ
 ?ÖIdx->
nKeyCﬁ
-1 : 
nCﬁ
-1;

1033 
	`sqlôe3VdbeLﬂdSåög
(
v
, 
ªgIdx«me
, 
zIdxName
);

1034 
	`VdbeCommít
((
v
, "A«lysi†f‹ %s.%s", 
pTab
->
zName
, 
zIdxName
));

1072 
pP¨£
->
nMem
 = 
	`MAX
’P¨£->nMem, 
ªgPªv
+
nCﬁTe°
);

1075 
	`as£π
–
iDb
==
	`sqlôe3SchemaToIndex
(
db
, 
pIdx
->
pSchema
) );

1076 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_O≥nRód
, 
iIdxCur
, 
pIdx
->
äum
, 
iDb
);

1077 
	`sqlôe3VdbeSëP4KeyInfo
(
pP¨£
, 
pIdx
);

1078 
	`VdbeCommít
((
v
, "%s", 
pIdx
->
zName
));

1090 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1091 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Cou¡
, 
iIdxCur
, 
ªgSèt4
+3);

1093 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 
nCﬁ
, 
ªgSèt4
+1);

1094 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 
pIdx
->
nKeyCﬁ
, 
ªgSèt4
+2);

1095 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Fun˘i⁄0
, 0, 
ªgSèt4
+1,ÑegStat4,

1096 (*)&
°©InôFuncdef
, 
P4_FUNCDEF
);

1097 
	`sqlôe3VdbeCh™geP5
(
v
, 2+
IsSèt34
);

1107 
addrRewöd
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Rewöd
, 
iIdxCur
);

1108 
	`VdbeCovîage
(
v
);

1109 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 0, 
ªgChng
);

1110 
addrNextRow
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

1112 if–
nCﬁTe°
>0 ){

1113 
ídDi°ö˘Te°
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

1114 *
aGŸoChng
;

1115 
aGŸoChng
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, ()*
nCﬁTe°
);

1116 if–
aGŸoChng
==0 ) ;

1128 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_GŸo
);

1129 
addrNextRow
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

1130 if–
nCﬁTe°
==1 && 
pIdx
->
nKeyCﬁ
==1 && 
	`IsUniqueIndex
(pIdx) ){

1134 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NŸNuŒ
, 
ªgPªv
, 
ídDi°ö˘Te°
);

1135 
	`VdbeCovîage
(
v
);

1137 
i
=0; i<
nCﬁTe°
; i++){

1138 *
pCﬁl
 = (*)
	`sqlôe3LoˇãCﬁlSeq
(
pP¨£
, 
pIdx
->
azCﬁl
[
i
]);

1139 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 
i
, 
ªgChng
);

1140 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
iIdxCur
, 
i
, 
ªgTemp
);

1141 
aGŸoChng
[
i
] =

1142 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Ne
, 
ªgTemp
, 0, 
ªgPªv
+
i
, 
pCﬁl
, 
P4_COLLSEQ
);

1143 
	`sqlôe3VdbeCh™geP5
(
v
, 
SQLITE_NULLEQ
);

1144 
	`VdbeCovîage
(
v
);

1146 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 
nCﬁTe°
, 
ªgChng
);

1147 
	`sqlôe3VdbeGŸo
(
v
, 
ídDi°ö˘Te°
);

1157 
	`sqlôe3VdbeJumpHîe
(
v
, 
addrNextRow
-1);

1158 
i
=0; i<
nCﬁTe°
; i++){

1159 
	`sqlôe3VdbeJumpHîe
(
v
, 
aGŸoChng
[
i
]);

1160 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
iIdxCur
, 
i
, 
ªgPªv
+i);

1162 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
ídDi°ö˘Te°
);

1163 
	`sqlôe3DbFªe
(
db
, 
aGŸoChng
);

1173 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1174 
	`as£π
–
ªgRowid
==(
ªgSèt4
+2) );

1175 if–
	`HasRowid
(
pTab
) ){

1176 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IdxRowid
, 
iIdxCur
, 
ªgRowid
);

1178 
Index
 *
pPk
 = 
	`sqlôe3Prim¨yKeyIndex
(
pIdx
->
pTabÀ
);

1179 
j
, 
k
, 
ªgKey
;

1180 
ªgKey
 = 
	`sqlôe3GëTempR™ge
(
pP¨£
, 
pPk
->
nKeyCﬁ
);

1181 
j
=0; j<
pPk
->
nKeyCﬁ
; j++){

1182 
k
 = 
	`sqlôe3CﬁumnOfIndex
(
pIdx
, 
pPk
->
aiCﬁumn
[
j
]);

1183 
	`as£π
–
k
>=0 && k<
pTab
->
nCﬁ
 );

1184 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
iIdxCur
, 
k
, 
ªgKey
+
j
);

1185 
	`VdbeCommít
((
v
, "%s", 
pTab
->
aCﬁ
[
pPk
->
aiCﬁumn
[
j
]].
zName
));

1187 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MakeRec‹d
, 
ªgKey
, 
pPk
->
nKeyCﬁ
, 
ªgRowid
);

1188 
	`sqlôe3Rñó£TempR™ge
(
pP¨£
, 
ªgKey
, 
pPk
->
nKeyCﬁ
);

1191 
	`as£π
–
ªgChng
==(
ªgSèt4
+1) );

1192 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Fun˘i⁄0
, 1, 
ªgSèt4
, 
ªgTemp
,

1193 (*)&
°©PushFuncdef
, 
P4_FUNCDEF
);

1194 
	`sqlôe3VdbeCh™geP5
(
v
, 2+
IsSèt34
);

1195 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Next
, 
iIdxCur
, 
addrNextRow
); 
	`VdbeCovîage
(v);

1198 
	`ˇŒSètGë
(
v
, 
ªgSèt4
, 
STAT_GET_STAT1
, 
ªgSèt1
);

1199 
	`as£π
–"BBB"[0]==
SQLITE_AFF_TEXT
 );

1200 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_MakeRec‹d
, 
ªgTab«me
, 3, 
ªgTemp
, "BBB", 0);

1201 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NewRowid
, 
iSètCur
, 
ªgNewRowid
);

1202 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_In£π
, 
iSètCur
, 
ªgTemp
, 
ªgNewRowid
);

1203 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_APPEND
);

1206 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1208 
ªgEq
 = 
ªgSèt1
;

1209 
ªgLt
 = 
ªgSèt1
+1;

1210 
ªgDLt
 = 
ªgSèt1
+2;

1211 
ªgSam∂e
 = 
ªgSèt1
+3;

1212 
ªgCﬁ
 = 
ªgSèt1
+4;

1213 
ªgSam∂eRowid
 = 
ªgCﬁ
 + 
nCﬁ
;

1214 
addrNext
;

1215 
addrIsNuŒ
;

1216 
u8
 
£ekOp
 = 
	`HasRowid
(
pTab
Ë? 
OP_NŸExi°s
 : 
OP_NŸFound
;

1218 
pP¨£
->
nMem
 = 
	`MAX
’P¨£->nMem, 
ªgCﬁ
+
nCﬁ
);

1220 
addrNext
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

1221 
	`ˇŒSètGë
(
v
, 
ªgSèt4
, 
STAT_GET_ROWID
, 
ªgSam∂eRowid
);

1222 
addrIsNuŒ
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_IsNuŒ
, 
ªgSam∂eRowid
);

1223 
	`VdbeCovîage
(
v
);

1224 
	`ˇŒSètGë
(
v
, 
ªgSèt4
, 
STAT_GET_NEQ
, 
ªgEq
);

1225 
	`ˇŒSètGë
(
v
, 
ªgSèt4
, 
STAT_GET_NLT
, 
ªgLt
);

1226 
	`ˇŒSètGë
(
v
, 
ªgSèt4
, 
STAT_GET_NDLT
, 
ªgDLt
);

1227 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
£ekOp
, 
iTabCur
, 
addrNext
, 
ªgSam∂eRowid
, 0);

1231 
	`VdbeCovîageNevîTakí
(
v
);

1232 #ifde‡
SQLITE_ENABLE_STAT3


1233 
	`sqlôe3Ex¥CodeLﬂdIndexCﬁumn
(
pP¨£
, 
pIdx
, 
iTabCur
, 0, 
ªgSam∂e
);

1235 
i
=0; i<
nCﬁ
; i++){

1236 
	`sqlôe3Ex¥CodeLﬂdIndexCﬁumn
(
pP¨£
, 
pIdx
, 
iTabCur
, 
i
, 
ªgCﬁ
+i);

1238 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MakeRec‹d
, 
ªgCﬁ
, 
nCﬁ
, 
ªgSam∂e
);

1240 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MakeRec‹d
, 
ªgTab«me
, 6, 
ªgTemp
);

1241 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NewRowid
, 
iSètCur
+1, 
ªgNewRowid
);

1242 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_In£π
, 
iSètCur
+1, 
ªgTemp
, 
ªgNewRowid
);

1243 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_GŸo
, 1, 
addrNext
);

1244 
	`sqlôe3VdbeJumpHîe
(
v
, 
addrIsNuŒ
);

1249 
	`sqlôe3VdbeJumpHîe
(
v
, 
addrRewöd
);

1256 if–
pO∆yIdx
==0 && 
√edTabÀC¡
 ){

1257 
	`VdbeCommít
((
v
, "%s", 
pTab
->
zName
));

1258 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Cou¡
, 
iTabCur
, 
ªgSèt1
);

1259 
jZîoRows
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_IfNŸ
, 
ªgSèt1
); 
	`VdbeCovîage
(v);

1260 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NuŒ
, 0, 
ªgIdx«me
);

1261 
	`as£π
–"BBB"[0]==
SQLITE_AFF_TEXT
 );

1262 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_MakeRec‹d
, 
ªgTab«me
, 3, 
ªgTemp
, "BBB", 0);

1263 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NewRowid
, 
iSètCur
, 
ªgNewRowid
);

1264 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_In£π
, 
iSètCur
, 
ªgTemp
, 
ªgNewRowid
);

1265 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_APPEND
);

1266 
	`sqlôe3VdbeJumpHîe
(
v
, 
jZîoRows
);

1268 
	}
}

1275 
	$lﬂdA«lysis
(
P¨£
 *
pP¨£
, 
iDb
){

1276 
Vdbe
 *
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

1277 if–
v
 ){

1278 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_LﬂdA«lysis
, 
iDb
);

1280 
	}
}

1285 
	$™ÆyzeD©aba£
(
P¨£
 *
pP¨£
, 
iDb
){

1286 
sqlôe3
 *
db
 = 
pP¨£
->db;

1287 
Schema
 *
pSchema
 = 
db
->
aDb
[
iDb
].pSchema;

1288 
HashEÀm
 *
k
;

1289 
iSètCur
;

1290 
iMem
;

1291 
iTab
;

1293 
	`sqlôe3BegöWrôeO≥øti⁄
(
pP¨£
, 0, 
iDb
);

1294 
iSètCur
 = 
pP¨£
->
nTab
;

1295 
pP¨£
->
nTab
 += 3;

1296 
	`›íSètTabÀ
(
pP¨£
, 
iDb
, 
iSètCur
, 0, 0);

1297 
iMem
 = 
pP¨£
->
nMem
+1;

1298 
iTab
 = 
pP¨£
->
nTab
;

1299 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

1300 
k
=
	`sqlôeHashFú°
(&
pSchema
->
tblHash
); k; k=
	`sqlôeHashNext
(k)){

1301 
TabÀ
 *
pTab
 = (TabÀ*)
	`sqlôeHashD©a
(
k
);

1302 
	`™ÆyzeO√TabÀ
(
pP¨£
, 
pTab
, 0, 
iSètCur
, 
iMem
, 
iTab
);

1304 
	`lﬂdA«lysis
(
pP¨£
, 
iDb
);

1305 
	}
}

1312 
	$™ÆyzeTabÀ
(
P¨£
 *
pP¨£
, 
TabÀ
 *
pTab
, 
Index
 *
pO∆yIdx
){

1313 
iDb
;

1314 
iSètCur
;

1316 
	`as£π
–
pTab
!=0 );

1317 
	`as£π
–
	`sqlôe3BåìHﬁdsAŒMuãxes
(
pP¨£
->
db
) );

1318 
iDb
 = 
	`sqlôe3SchemaToIndex
(
pP¨£
->
db
, 
pTab
->
pSchema
);

1319 
	`sqlôe3BegöWrôeO≥øti⁄
(
pP¨£
, 0, 
iDb
);

1320 
iSètCur
 = 
pP¨£
->
nTab
;

1321 
pP¨£
->
nTab
 += 3;

1322 if–
pO∆yIdx
 ){

1323 
	`›íSètTabÀ
(
pP¨£
, 
iDb
, 
iSètCur
, 
pO∆yIdx
->
zName
, "idx");

1325 
	`›íSètTabÀ
(
pP¨£
, 
iDb
, 
iSètCur
, 
pTab
->
zName
, "tbl");

1327 
	`™ÆyzeO√TabÀ
(
pP¨£
, 
pTab
, 
pO∆yIdx
, 
iSètCur
,pP¨£->
nMem
+1,pP¨£->
nTab
);

1328 
	`lﬂdA«lysis
(
pP¨£
, 
iDb
);

1329 
	}
}

1343 
	$sqlôe3A«lyze
(
P¨£
 *
pP¨£
, 
Tokí
 *
pName1
, Tokí *
pName2
){

1344 
sqlôe3
 *
db
 = 
pP¨£
->db;

1345 
iDb
;

1346 
i
;

1347 *
z
, *
zDb
;

1348 
TabÀ
 *
pTab
;

1349 
Index
 *
pIdx
;

1350 
Tokí
 *
pTabÀName
;

1351 
Vdbe
 *
v
;

1355 
	`as£π
–
	`sqlôe3BåìHﬁdsAŒMuãxes
(
pP¨£
->
db
) );

1356 if–
SQLITE_OK
!=
	`sqlôe3RódSchema
(
pP¨£
) ){

1360 
	`as£π
–
pName2
!=0 || 
pName1
==0 );

1361 if–
pName1
==0 ){

1363 
i
=0; i<
db
->
nDb
; i++){

1364 if–
i
==1 ) ;

1365 
	`™ÆyzeD©aba£
(
pP¨£
, 
i
);

1367 }if–
pName2
->
n
==0 ){

1369 
iDb
 = 
	`sqlôe3FödDb
(
db
, 
pName1
);

1370 if–
iDb
>=0 ){

1371 
	`™ÆyzeD©aba£
(
pP¨£
, 
iDb
);

1373 
z
 = 
	`sqlôe3NameFromTokí
(
db
, 
pName1
);

1374 if–
z
 ){

1375 if–(
pIdx
 = 
	`sqlôe3FödIndex
(
db
, 
z
, 0))!=0 ){

1376 
	`™ÆyzeTabÀ
(
pP¨£
, 
pIdx
->
pTabÀ
,ÖIdx);

1377 }if–(
pTab
 = 
	`sqlôe3LoˇãTabÀ
(
pP¨£
, 0, 
z
, 0))!=0 ){

1378 
	`™ÆyzeTabÀ
(
pP¨£
, 
pTab
, 0);

1380 
	`sqlôe3DbFªe
(
db
, 
z
);

1385 
iDb
 = 
	`sqlôe3TwoP¨tName
(
pP¨£
, 
pName1
, 
pName2
, &
pTabÀName
);

1386 if–
iDb
>=0 ){

1387 
zDb
 = 
db
->
aDb
[
iDb
].
zDbSName
;

1388 
z
 = 
	`sqlôe3NameFromTokí
(
db
, 
pTabÀName
);

1389 if–
z
 ){

1390 if–(
pIdx
 = 
	`sqlôe3FödIndex
(
db
, 
z
, 
zDb
))!=0 ){

1391 
	`™ÆyzeTabÀ
(
pP¨£
, 
pIdx
->
pTabÀ
,ÖIdx);

1392 }if–(
pTab
 = 
	`sqlôe3LoˇãTabÀ
(
pP¨£
, 0, 
z
, 
zDb
))!=0 ){

1393 
	`™ÆyzeTabÀ
(
pP¨£
, 
pTab
, 0);

1395 
	`sqlôe3DbFªe
(
db
, 
z
);

1399 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

1400 if–
v
 ) 
	`sqlôe3VdbeAddOp0
(v, 
OP_Expúe
);

1401 
	}
}

1407 
™ÆysisInfo
 
	t™ÆysisInfo
;

1408 
	s™ÆysisInfo
 {

1409 
sqlôe3
 *
	mdb
;

1410 c⁄° *
	mzD©aba£
;

1418 
	$decodeI¡Aºay
(

1419 *
zI¡Aºay
,

1420 
nOut
,

1421 
tRow˙t
 *
aOut
,

1422 
LogE°
 *
aLog
,

1423 
Index
 *
pIndex


1425 *
z
 = 
zI¡Aºay
;

1426 
c
;

1427 
i
;

1428 
tRow˙t
 
v
;

1430 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1431 if–
z
==0 ) z = "";

1433 
	`as£π
–
z
!=0 );

1435 
i
=0; *
z
 && i<
nOut
; i++){

1436 
v
 = 0;

1437  (
c
=
z
[0])>='0' && c<='9' ){

1438 
v
 = v*10 + 
c
 - '0';

1439 
z
++;

1441 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1442 if–
aOut
 )áOut[
i
] = 
v
;

1443 if–
aLog
 )áLog[
i
] = 
	`sqlôe3LogE°
(
v
);

1445 
	`as£π
–
aOut
==0 );

1446 
	`UNUSED_PARAMETER
(
aOut
);

1447 
	`as£π
–
aLog
!=0 );

1448 
aLog
[
i
] = 
	`sqlôe3LogE°
(
v
);

1450 if–*
z
==' ' ) z++;

1452 #i‚de‡
SQLITE_ENABLE_STAT3_OR_STAT4


1453 
	`as£π
–
pIndex
!=0 ); {

1455 if–
pIndex
 ){

1457 
pIndex
->
bUn‹dîed
 = 0;

1458 
pIndex
->
noSkùSˇn
 = 0;

1459  
z
[0] ){

1460 if–
	`sqlôe3_°rglob
("un‹dîed*", 
z
)==0 ){

1461 
pIndex
->
bUn‹dîed
 = 1;

1462 }if–
	`sqlôe3_°rglob
("sz=[0-9]*", 
z
)==0 ){

1463 
pIndex
->
szIdxRow
 = 
	`sqlôe3LogE°
(
	`sqlôe3Atoi
(
z
+3));

1464 }if–
	`sqlôe3_°rglob
("noskùsˇn*", 
z
)==0 ){

1465 
pIndex
->
noSkùSˇn
 = 1;

1467 #ifde‡
SQLITE_ENABLE_COSTMULT


1468 if–
	`sqlôe3_°rglob
("co°mu…=[0-9]*",
z
)==0 ){

1469 
pIndex
->
pTabÀ
->
co°Mu…
 = 
	`sqlôe3LogE°
(
	`sqlôe3Atoi
(
z
+9));

1472  
z
[0]!=0 && z[0]!=' ' ) z++;

1473  
z
[0]==' ' ) z++;

1476 
	}
}

1489 
	$™ÆysisLﬂdî
(*
pD©a
, 
¨gc
, **
¨gv
, **
NŸU£d
){

1490 
™ÆysisInfo
 *
pInfo
 = (™ÆysisInfo*)
pD©a
;

1491 
Index
 *
pIndex
;

1492 
TabÀ
 *
pTabÀ
;

1493 c⁄° *
z
;

1495 
	`as£π
–
¨gc
==3 );

1496 
	`UNUSED_PARAMETER2
(
NŸU£d
, 
¨gc
);

1498 if–
¨gv
==0 ||árgv[0]==0 ||árgv[2]==0 ){

1501 
pTabÀ
 = 
	`sqlôe3FödTabÀ
(
pInfo
->
db
, 
¨gv
[0],ÖInfo->
zD©aba£
);

1502 if–
pTabÀ
==0 ){

1505 if–
¨gv
[1]==0 ){

1506 
pIndex
 = 0;

1507 }if–
	`sqlôe3_°ricmp
(
¨gv
[0],argv[1])==0 ){

1508 
pIndex
 = 
	`sqlôe3Prim¨yKeyIndex
(
pTabÀ
);

1510 
pIndex
 = 
	`sqlôe3FödIndex
(
pInfo
->
db
, 
¨gv
[1],ÖInfo->
zD©aba£
);

1512 
z
 = 
¨gv
[2];

1514 if–
pIndex
 ){

1515 
tRow˙t
 *
aiRowE°
 = 0;

1516 
nCﬁ
 = 
pIndex
->
nKeyCﬁ
+1;

1517 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1521 if–
pIndex
->
aiRowE°
==0 ){

1522 
pIndex
->
aiRowE°
 = (
tRow˙t
*)
	`sqlôe3MÆlocZîo
(—Row˙tË* 
nCﬁ
);

1523 if–
pIndex
->
aiRowE°
==0 ) 
	`sqlôe3OomFau…
(
pInfo
->
db
);

1525 
aiRowE°
 = 
pIndex
->aiRowEst;

1527 
pIndex
->
bUn‹dîed
 = 0;

1528 
	`decodeI¡Aºay
((*)
z
, 
nCﬁ
, 
aiRowE°
, 
pIndex
->
aiRowLogE°
,ÖIndex);

1529 if–
pIndex
->
pP¨tIdxWhîe
==0 ) 
pTabÀ
->
nRowLogE°
 =ÖIndex->
aiRowLogE°
[0];

1531 
Index
 
ÁkeIdx
;

1532 
ÁkeIdx
.
szIdxRow
 = 
pTabÀ
->
szTabRow
;

1533 #ifde‡
SQLITE_ENABLE_COSTMULT


1534 
ÁkeIdx
.
pTabÀ
 =ÖTable;

1536 
	`decodeI¡Aºay
((*)
z
, 1, 0, &
pTabÀ
->
nRowLogE°
, &
ÁkeIdx
);

1537 
pTabÀ
->
szTabRow
 = 
ÁkeIdx
.
szIdxRow
;

1541 
	}
}

1547 
	$sqlôe3DñëeIndexSam∂es
(
sqlôe3
 *
db
, 
Index
 *
pIdx
){

1548 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1549 if–
pIdx
->
aSam∂e
 ){

1550 
j
;

1551 
j
=0; j<
pIdx
->
nSam∂e
; j++){

1552 
IndexSam∂e
 *
p
 = &
pIdx
->
aSam∂e
[
j
];

1553 
	`sqlôe3DbFªe
(
db
, 
p
->p);

1555 
	`sqlôe3DbFªe
(
db
, 
pIdx
->
aSam∂e
);

1557 if–
db
 && db->
≤ByãsFªed
==0 ){

1558 
pIdx
->
nSam∂e
 = 0;

1559 
pIdx
->
aSam∂e
 = 0;

1562 
	`UNUSED_PARAMETER
(
db
);

1563 
	`UNUSED_PARAMETER
(
pIdx
);

1565 
	}
}

1567 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1572 
	$öôAvgEq
(
Index
 *
pIdx
){

1573 if–
pIdx
 ){

1574 
IndexSam∂e
 *
aSam∂e
 = 
pIdx
->aSample;

1575 
IndexSam∂e
 *
pFöÆ
 = &
aSam∂e
[
pIdx
->
nSam∂e
-1];

1576 
iCﬁ
;

1577 
nCﬁ
 = 1;

1578 if–
pIdx
->
nSam∂eCﬁ
>1 ){

1583 
nCﬁ
 = 
pIdx
->
nSam∂eCﬁ
-1;

1584 
pIdx
->
aAvgEq
[
nCﬁ
] = 1;

1586 
iCﬁ
=0; iCﬁ<
nCﬁ
; iCol++){

1587 
nSam∂e
 = 
pIdx
->nSample;

1588 
i
;

1589 
tRow˙t
 
sumEq
 = 0;

1590 
tRow˙t
 
avgEq
 = 0;

1591 
tRow˙t
 
nRow
;

1592 
i64
 
nSum100
 = 0;

1593 
i64
 
nDi°100
;

1595 if–!
pIdx
->
aiRowE°
 || 
iCﬁ
>ıIdx->
nKeyCﬁ
 ||ÖIdx->aiRowEst[iCol+1]==0 ){

1596 
nRow
 = 
pFöÆ
->
™Lt
[
iCﬁ
];

1597 
nDi°100
 = (
i64
)100 * 
pFöÆ
->
™DLt
[
iCﬁ
];

1598 
nSam∂e
--;

1600 
nRow
 = 
pIdx
->
aiRowE°
[0];

1601 
nDi°100
 = ((
i64
)100 * 
pIdx
->
aiRowE°
[0]Ë/ÖIdx->aiRowE°[
iCﬁ
+1];

1603 
pIdx
->
nRowE°0
 = 
nRow
;

1609 
i
=0; i<
nSam∂e
; i++){

1610 if–
i
==(
pIdx
->
nSam∂e
-1)

1611 || 
aSam∂e
[
i
].
™DLt
[
iCﬁ
]!=aSample[i+1].anDLt[iCol]

1613 
sumEq
 +
aSam∂e
[
i
].
™Eq
[
iCﬁ
];

1614 
nSum100
 += 100;

1618 if–
nDi°100
>
nSum100
 ){

1619 
avgEq
 = ((
i64
)100 * (
nRow
 - 
sumEq
))/(
nDi°100
 - 
nSum100
);

1621 if–
avgEq
==0 )ávgEq = 1;

1622 
pIdx
->
aAvgEq
[
iCﬁ
] = 
avgEq
;

1625 
	}
}

1631 
Index
 *
	$födIndexOrPrim¨yKey
(

1632 
sqlôe3
 *
db
,

1633 c⁄° *
zName
,

1634 c⁄° *
zDb


1636 
Index
 *
pIdx
 = 
	`sqlôe3FödIndex
(
db
, 
zName
, 
zDb
);

1637 if–
pIdx
==0 ){

1638 
TabÀ
 *
pTab
 = 
	`sqlôe3FödTabÀ
(
db
, 
zName
, 
zDb
);

1639 if–
pTab
 && !
	`HasRowid
’TabËË
pIdx
 = 
	`sqlôe3Prim¨yKeyIndex
(pTab);

1641  
pIdx
;

1642 
	}
}

1657 
	$lﬂdSètTbl
(

1658 
sqlôe3
 *
db
,

1659 
bSèt3
,

1660 c⁄° *
zSql1
,

1661 c⁄° *
zSql2
,

1662 c⁄° *
zDb


1664 
rc
;

1665 
sqlôe3_°mt
 *
pStmt
 = 0;

1666 *
zSql
;

1667 
Index
 *
pPªvIdx
 = 0;

1668 
IndexSam∂e
 *
pSam∂e
;

1670 
	`as£π
–
db
->
lookaside
.
bDißbÀ
 );

1671 
zSql
 = 
	`sqlôe3MPrötf
(
db
, 
zSql1
, 
zDb
);

1672 if–!
zSql
 ){

1673  
SQLITE_NOMEM_BKPT
;

1675 
rc
 = 
	`sqlôe3_¥ï¨e
(
db
, 
zSql
, -1, &
pStmt
, 0);

1676 
	`sqlôe3DbFªe
(
db
, 
zSql
);

1677 if–
rc
 ) Ñc;

1679  
	`sqlôe3_°ï
(
pStmt
)==
SQLITE_ROW
 ){

1680 
nIdxCﬁ
 = 1;

1682 *
zIndex
;

1683 
Index
 *
pIdx
;

1684 
nSam∂e
;

1685 
nByã
;

1686 
i
;

1687 
tRow˙t
 *
pS∑˚
;

1689 
zIndex
 = (*)
	`sqlôe3_cﬁumn_ãxt
(
pStmt
, 0);

1690 if–
zIndex
==0 ) ;

1691 
nSam∂e
 = 
	`sqlôe3_cﬁumn_öt
(
pStmt
, 1);

1692 
pIdx
 = 
	`födIndexOrPrim¨yKey
(
db
, 
zIndex
, 
zDb
);

1693 
	`as£π
–
pIdx
==0 || 
bSèt3
 ||ÖIdx->
nSam∂e
==0 );

1696 if–
pIdx
==0 ||ÖIdx->
nSam∂e
 ) ;

1697 if–
bSèt3
==0 ){

1698 
	`as£π
–!
	`HasRowid
(
pIdx
->
pTabÀ
Ë||ÖIdx->
nCﬁumn
=ıIdx->
nKeyCﬁ
+1 );

1699 if–!
	`HasRowid
(
pIdx
->
pTabÀ
Ë&& 
	`IsPrim¨yKeyIndex
(pIdx) ){

1700 
nIdxCﬁ
 = 
pIdx
->
nKeyCﬁ
;

1702 
nIdxCﬁ
 = 
pIdx
->
nCﬁumn
;

1705 
pIdx
->
nSam∂eCﬁ
 = 
nIdxCﬁ
;

1706 
nByã
 = (
IndexSam∂e
Ë* 
nSam∂e
;

1707 
nByã
 +(
tRow˙t
Ë* 
nIdxCﬁ
 * 3 * 
nSam∂e
;

1708 
nByã
 +
nIdxCﬁ
 * (
tRow˙t
);

1710 
pIdx
->
aSam∂e
 = 
	`sqlôe3DbMÆlocZîo
(
db
, 
nByã
);

1711 if–
pIdx
->
aSam∂e
==0 ){

1712 
	`sqlôe3_föÆize
(
pStmt
);

1713  
SQLITE_NOMEM_BKPT
;

1715 
pS∑˚
 = (
tRow˙t
*)&
pIdx
->
aSam∂e
[
nSam∂e
];

1716 
pIdx
->
aAvgEq
 = 
pS∑˚
;ÖS∑˚ +
nIdxCﬁ
;

1717 
i
=0; i<
nSam∂e
; i++){

1718 
pIdx
->
aSam∂e
[
i
].
™Eq
 = 
pS∑˚
;ÖS∑˚ +
nIdxCﬁ
;

1719 
pIdx
->
aSam∂e
[
i
].
™Lt
 = 
pS∑˚
;ÖS∑˚ +
nIdxCﬁ
;

1720 
pIdx
->
aSam∂e
[
i
].
™DLt
 = 
pS∑˚
;ÖS∑˚ +
nIdxCﬁ
;

1722 
	`as£π
–((
u8
*)
pS∑˚
)-
nByã
==(u8*)(
pIdx
->
aSam∂e
) );

1724 
rc
 = 
	`sqlôe3_föÆize
(
pStmt
);

1725 if–
rc
 ) Ñc;

1727 
zSql
 = 
	`sqlôe3MPrötf
(
db
, 
zSql2
, 
zDb
);

1728 if–!
zSql
 ){

1729  
SQLITE_NOMEM_BKPT
;

1731 
rc
 = 
	`sqlôe3_¥ï¨e
(
db
, 
zSql
, -1, &
pStmt
, 0);

1732 
	`sqlôe3DbFªe
(
db
, 
zSql
);

1733 if–
rc
 ) Ñc;

1735  
	`sqlôe3_°ï
(
pStmt
)==
SQLITE_ROW
 ){

1736 *
zIndex
;

1737 
Index
 *
pIdx
;

1738 
nCﬁ
 = 1;

1740 
zIndex
 = (*)
	`sqlôe3_cﬁumn_ãxt
(
pStmt
, 0);

1741 if–
zIndex
==0 ) ;

1742 
pIdx
 = 
	`födIndexOrPrim¨yKey
(
db
, 
zIndex
, 
zDb
);

1743 if–
pIdx
==0 ) ;

1746 
nCﬁ
 = 
pIdx
->
nSam∂eCﬁ
;

1747 if–
bSèt3
 && 
nCﬁ
>1 ) ;

1748 if–
pIdx
!=
pPªvIdx
 ){

1749 
	`öôAvgEq
(
pPªvIdx
);

1750 
pPªvIdx
 = 
pIdx
;

1752 
pSam∂e
 = &
pIdx
->
aSam∂e
[pIdx->
nSam∂e
];

1753 
	`decodeI¡Aºay
((*)
	`sqlôe3_cﬁumn_ãxt
(
pStmt
,1),
nCﬁ
,
pSam∂e
->
™Eq
,0,0);

1754 
	`decodeI¡Aºay
((*)
	`sqlôe3_cﬁumn_ãxt
(
pStmt
,2),
nCﬁ
,
pSam∂e
->
™Lt
,0,0);

1755 
	`decodeI¡Aºay
((*)
	`sqlôe3_cﬁumn_ãxt
(
pStmt
,3),
nCﬁ
,
pSam∂e
->
™DLt
,0,0);

1763 
pSam∂e
->
n
 = 
	`sqlôe3_cﬁumn_byãs
(
pStmt
, 4);

1764 
pSam∂e
->
p
 = 
	`sqlôe3DbMÆlocZîo
(
db
,ÖSam∂e->
n
 + 2);

1765 if–
pSam∂e
->
p
==0 ){

1766 
	`sqlôe3_föÆize
(
pStmt
);

1767  
SQLITE_NOMEM_BKPT
;

1769 if–
pSam∂e
->
n
 ){

1770 
	`mem˝y
(
pSam∂e
->
p
, 
	`sqlôe3_cﬁumn_blob
(
pStmt
, 4),ÖSam∂e->
n
);

1772 
pIdx
->
nSam∂e
++;

1774 
rc
 = 
	`sqlôe3_föÆize
(
pStmt
);

1775 if–
rc
==
SQLITE_OK
 ) 
	`öôAvgEq
(
pPªvIdx
);

1776  
rc
;

1777 
	}
}

1783 
	$lﬂdSèt4
(
sqlôe3
 *
db
, c⁄° *
zDb
){

1784 
rc
 = 
SQLITE_OK
;

1786 
	`as£π
–
db
->
lookaside
.
bDißbÀ
 );

1787 if–
	`sqlôe3FödTabÀ
(
db
, "sqlôe_°©4", 
zDb
) ){

1788 
rc
 = 
	`lﬂdSètTbl
(
db
, 0,

1791 
zDb


1795 if–
rc
==
SQLITE_OK
 && 
	`sqlôe3FödTabÀ
(
db
, "sqlôe_°©3", 
zDb
) ){

1796 
rc
 = 
	`lﬂdSètTbl
(
db
, 1,

1799 
zDb


1803  
rc
;

1804 
	}
}

1827 
	$sqlôe3A«lysisLﬂd
(
sqlôe3
 *
db
, 
iDb
){

1828 
™ÆysisInfo
 
sInfo
;

1829 
HashEÀm
 *
i
;

1830 *
zSql
;

1831 
rc
 = 
SQLITE_OK
;

1833 
	`as£π
–
iDb
>=0 && iDb<
db
->
nDb
 );

1834 
	`as£π
–
db
->
aDb
[
iDb
].
pBt
!=0 );

1837 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

1838 
i
=
	`sqlôeHashFú°
(&
db
->
aDb
[
iDb
].
pSchema
->
idxHash
);i;i=
	`sqlôeHashNext
(i)){

1839 
Index
 *
pIdx
 = 
	`sqlôeHashD©a
(
i
);

1840 
pIdx
->
aiRowLogE°
[0] = 0;

1841 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1842 
	`sqlôe3DñëeIndexSam∂es
(
db
, 
pIdx
);

1843 
pIdx
->
aSam∂e
 = 0;

1848 
sInfo
.
db
 = db;

1849 
sInfo
.
zD©aba£
 = 
db
->
aDb
[
iDb
].
zDbSName
;

1850 if–
	`sqlôe3FödTabÀ
(
db
, "sqlôe_°©1", 
sInfo
.
zD©aba£
)!=0 ){

1851 
zSql
 = 
	`sqlôe3MPrötf
(
db
,

1852 "SELECTÅbl,idx,°© FROM %Q.sqlôe_°©1", 
sInfo
.
zD©aba£
);

1853 if–
zSql
==0 ){

1854 
rc
 = 
SQLITE_NOMEM_BKPT
;

1856 
rc
 = 
	`sqlôe3_exec
(
db
, 
zSql
, 
™ÆysisLﬂdî
, &
sInfo
, 0);

1857 
	`sqlôe3DbFªe
(
db
, 
zSql
);

1862 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

1863 
i
=
	`sqlôeHashFú°
(&
db
->
aDb
[
iDb
].
pSchema
->
idxHash
);i;i=
	`sqlôeHashNext
(i)){

1864 
Index
 *
pIdx
 = 
	`sqlôeHashD©a
(
i
);

1865 if–
pIdx
->
aiRowLogE°
[0]==0 ) 
	`sqlôe3DeÁu…RowE°
(pIdx);

1869 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1870 if–
rc
==
SQLITE_OK
 && 
	`O±imiz©i⁄E«bÀd
(
db
, 
SQLITE_Sèt34
) ){

1871 
db
->
lookaside
.
bDißbÀ
++;

1872 
rc
 = 
	`lﬂdSèt4
(
db
, 
sInfo
.
zD©aba£
);

1873 
db
->
lookaside
.
bDißbÀ
--;

1875 
i
=
	`sqlôeHashFú°
(&
db
->
aDb
[
iDb
].
pSchema
->
idxHash
);i;i=
	`sqlôeHashNext
(i)){

1876 
Index
 *
pIdx
 = 
	`sqlôeHashD©a
(
i
);

1877 
	`sqlôe3_‰ì
(
pIdx
->
aiRowE°
);

1878 
pIdx
->
aiRowE°
 = 0;

1882 if–
rc
==
SQLITE_NOMEM
 ){

1883 
	`sqlôe3OomFau…
(
db
);

1885  
rc
;

1886 
	}
}

	@attach.c

14 
	~"sqlôeI¡.h
"

16 #i‚de‡
SQLITE_OMIT_ATTACH


35 
	$ªsﬁveAâachEx¥
(
NameC⁄ãxt
 *
pName
, 
Ex¥
 *
pEx¥
)

37 
rc
 = 
SQLITE_OK
;

38 if–
pEx¥
 ){

39 if–
pEx¥
->
›
!=
TK_ID
 ){

40 
rc
 = 
	`sqlôe3ResﬁveEx¥Names
(
pName
, 
pEx¥
);

42 
pEx¥
->
›
 = 
TK_STRING
;

45  
rc
;

46 
	}
}

59 
	$©èchFunc
(

60 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

61 
NŸU£d
,

62 
sqlôe3_vÆue
 **
¨gv


64 
i
;

65 
rc
 = 0;

66 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

67 c⁄° *
zName
;

68 c⁄° *
zFûe
;

69 *
zP©h
 = 0;

70 *
zEº
 = 0;

71 
Êags
;

72 
Db
 *
aNew
;

73 *
zEºDyn
 = 0;

74 
sqlôe3_vfs
 *
pVfs
;

76 
	`UNUSED_PARAMETER
(
NŸU£d
);

78 
zFûe
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

79 
zName
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[1]);

80 if–
zFûe
==0 ) zFile = "";

81 if–
zName
==0 ) zName = "";

89 if–
db
->
nDb
>=db->
aLimô
[
SQLITE_LIMIT_ATTACHED
]+2 ){

90 
zEºDyn
 = 
	`sqlôe3MPrötf
(
db
, "too manyáttached databases - max %d",

91 
db
->
aLimô
[
SQLITE_LIMIT_ATTACHED
]

93 
©èch_îr‹
;

95 if–!
db
->
autoCommô
 ){

96 
zEºDyn
 = 
	`sqlôe3MPrötf
(
db
, "cannot ATTACH database withinÅransaction");

97 
©èch_îr‹
;

99 
i
=0; i<
db
->
nDb
; i++){

100 *
z
 = 
db
->
aDb
[
i
].
zDbSName
;

101 
	`as£π
–
z
 && 
zName
 );

102 if–
	`sqlôe3SåICmp
(
z
, 
zName
)==0 ){

103 
zEºDyn
 = 
	`sqlôe3MPrötf
(
db
, "d©aba£ %†i†Æªady i¿u£", 
zName
);

104 
©èch_îr‹
;

111 if–
db
->
aDb
==db->
aDbSètic
 ){

112 
aNew
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, (db->
aDb
[0])*3 );

113 if–
aNew
==0 ) ;

114 
	`mem˝y
(
aNew
, 
db
->
aDb
, (db->aDb[0])*2);

116 
aNew
 = 
	`sqlôe3DbRóŒoc
(
db
, db->
aDb
, (db->aDb[0])*(db->
nDb
+1) );

117 if–
aNew
==0 ) ;

119 
db
->
aDb
 = 
aNew
;

120 
aNew
 = &
db
->
aDb
[db->
nDb
];

121 
	`mem£t
(
aNew
, 0, (*aNew));

127 
Êags
 = 
db
->
›íFœgs
;

128 
rc
 = 
	`sqlôe3P¨£Uri
(
db
->
pVfs
->
zName
, 
zFûe
, &
Êags
, &pVfs, &
zP©h
, &
zEº
);

129 if–
rc
!=
SQLITE_OK
 ){

130 if–
rc
==
SQLITE_NOMEM
 ) 
	`sqlôe3OomFau…
(
db
);

131 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
, 
zEº
, -1);

132 
	`sqlôe3_‰ì
(
zEº
);

135 
	`as£π
–
pVfs
 );

136 
Êags
 |
SQLITE_OPEN_MAIN_DB
;

137 
rc
 = 
	`sqlôe3BåìO≥n
(
pVfs
, 
zP©h
, 
db
, &
aNew
->
pBt
, 0, 
Êags
);

138 
	`sqlôe3_‰ì
–
zP©h
 );

139 
db
->
nDb
++;

140 if–
rc
==
SQLITE_CONSTRAINT
 ){

141 
rc
 = 
SQLITE_ERROR
;

142 
zEºDyn
 = 
	`sqlôe3MPrötf
(
db
, "database isálreadyáttached");

143 }if–
rc
==
SQLITE_OK
 ){

144 
Pagî
 *
pPagî
;

145 
aNew
->
pSchema
 = 
	`sqlôe3SchemaGë
(
db
,áNew->
pBt
);

146 if–!
aNew
->
pSchema
 ){

147 
rc
 = 
SQLITE_NOMEM_BKPT
;

148 }if–
aNew
->
pSchema
->
fûe_f‹m©
 &&áNew->pSchema->
íc
!=
	`ENC
(
db
) ){

149 
zEºDyn
 = 
	`sqlôe3MPrötf
(
db
,

151 
rc
 = 
SQLITE_ERROR
;

153 
	`sqlôe3BåìE¡î
(
aNew
->
pBt
);

154 
pPagî
 = 
	`sqlôe3BåìPagî
(
aNew
->
pBt
);

155 
	`sqlôe3PagîLockögMode
(
pPagî
, 
db
->
dÊtLockMode
);

156 
	`sqlôe3BåìSecuªDñëe
(
aNew
->
pBt
,

157 
	`sqlôe3BåìSecuªDñëe
(
db
->
aDb
[0].
pBt
,-1) );

158 #i‚de‡
SQLITE_OMIT_PAGER_PRAGMAS


159 
	`sqlôe3BåìSëPagîFœgs
(
aNew
->
pBt
,

160 
PAGER_SYNCHRONOUS_FULL
 | (
db
->
Êags
 & 
PAGER_FLAGS_MASK
));

162 
	`sqlôe3BåìLóve
(
aNew
->
pBt
);

164 
aNew
->
ß„ty_Àvñ
 = 
SQLITE_DEFAULT_SYNCHRONOUS
+1;

165 
aNew
->
zDbSName
 = 
	`sqlôe3DbSåDup
(
db
, 
zName
);

166 if–
rc
==
SQLITE_OK
 && 
aNew
->
zDbSName
==0 ){

167 
rc
 = 
SQLITE_NOMEM_BKPT
;

171 #ifde‡
SQLITE_HAS_CODEC


172 if–
rc
==
SQLITE_OK
 ){

173 
	`sqlôe3CodecAâach
(
sqlôe3
*, , const *, );

174 
	`sqlôe3CodecGëKey
(
sqlôe3
*, , **, *);

175 
nKey
;

176 *
zKey
;

177 
t
 = 
	`sqlôe3_vÆue_ty≥
(
¨gv
[2]);

178  
t
 ){

179 
SQLITE_INTEGER
:

180 
SQLITE_FLOAT
:

181 
zEºDyn
 = 
	`sqlôe3DbSåDup
(
db
, "Invalid key value");

182 
rc
 = 
SQLITE_ERROR
;

185 
SQLITE_TEXT
:

186 
SQLITE_BLOB
:

187 
nKey
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[2]);

188 
zKey
 = (*)
	`sqlôe3_vÆue_blob
(
¨gv
[2]);

189 
rc
 = 
	`sqlôe3CodecAâach
(
db
, db->
nDb
-1, 
zKey
, 
nKey
);

192 
SQLITE_NULL
:

194 
	`sqlôe3CodecGëKey
(
db
, 0, (**)&
zKey
, &
nKey
);

195 if–
nKey
 || 
	`sqlôe3BåìGëO±imÆRe£rve
(
db
->
aDb
[0].
pBt
)>0 ){

196 
rc
 = 
	`sqlôe3CodecAâach
(
db
, db->
nDb
-1, 
zKey
, 
nKey
);

208 if–
rc
==
SQLITE_OK
 ){

209 
	`sqlôe3BåìE¡îAŒ
(
db
);

210 
rc
 = 
	`sqlôe3Inô
(
db
, &
zEºDyn
);

211 
	`sqlôe3BåìLóveAŒ
(
db
);

213 #ifde‡
SQLITE_USER_AUTHENTICATION


214 if–
rc
==
SQLITE_OK
 ){

215 
u8
 
√wAuth
 = 0;

216 
rc
 = 
	`sqlôe3U£rAuthCheckLogö
(
db
, 
zName
, &
√wAuth
);

217 if–
√wAuth
<
db
->
auth
.
authLevñ
 ){

218 
rc
 = 
SQLITE_AUTH_USER
;

222 if–
rc
 ){

223 
iDb
 = 
db
->
nDb
 - 1;

224 
	`as£π
–
iDb
>=2 );

225 if–
db
->
aDb
[
iDb
].
pBt
 ){

226 
	`sqlôe3BåìClo£
(
db
->
aDb
[
iDb
].
pBt
);

227 
db
->
aDb
[
iDb
].
pBt
 = 0;

228 
db
->
aDb
[
iDb
].
pSchema
 = 0;

230 
	`sqlôe3Re£tAŒSchemasOfC⁄√˘i⁄
(
db
);

231 
db
->
nDb
 = 
iDb
;

232 if–
rc
==
SQLITE_NOMEM
 ||Ñc==
SQLITE_IOERR_NOMEM
 ){

233 
	`sqlôe3OomFau…
(
db
);

234 
	`sqlôe3DbFªe
(
db
, 
zEºDyn
);

235 
zEºDyn
 = 
	`sqlôe3MPrötf
(
db
, "out of memory");

236 }if–
zEºDyn
==0 ){

237 
zEºDyn
 = 
	`sqlôe3MPrötf
(
db
, "u«bÀÅÿ›í d©aba£: %s", 
zFûe
);

239 
©èch_îr‹
;

244 
©èch_îr‹
:

246 if–
zEºDyn
 ){

247 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
, 
zEºDyn
, -1);

248 
	`sqlôe3DbFªe
(
db
, 
zEºDyn
);

250 if–
rc
 ) 
	`sqlôe3_ªsu…_îr‹_code
(
c⁄ãxt
,Ñc);

251 
	}
}

261 
	$dëachFunc
(

262 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

263 
NŸU£d
,

264 
sqlôe3_vÆue
 **
¨gv


266 c⁄° *
zName
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

267 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

268 
i
;

269 
Db
 *
pDb
 = 0;

270 
zEº
[128];

272 
	`UNUSED_PARAMETER
(
NŸU£d
);

274 if–
zName
==0 ) zName = "";

275 
i
=0; i<
db
->
nDb
; i++){

276 
pDb
 = &
db
->
aDb
[
i
];

277 if–
pDb
->
pBt
==0 ) ;

278 if–
	`sqlôe3SåICmp
(
pDb
->
zDbSName
, 
zName
)==0 ) ;

281 if–
i
>=
db
->
nDb
 ){

282 
	`sqlôe3_¢¥ötf
((
zEº
),zEº, "nÿsuch d©aba£: %s", 
zName
);

283 
dëach_îr‹
;

285 if–
i
<2 ){

286 
	`sqlôe3_¢¥ötf
((
zEº
),zEº, "ˇ¬Ÿ dëach d©aba£ %s", 
zName
);

287 
dëach_îr‹
;

289 if–!
db
->
autoCommô
 ){

290 
	`sqlôe3_¢¥ötf
((
zEº
), zErr,

292 
dëach_îr‹
;

294 if–
	`sqlôe3BåìIsInRódTøns
(
pDb
->
pBt
Ë|| 
	`sqlôe3BåìIsInBackup
(pDb->pBt) ){

295 
	`sqlôe3_¢¥ötf
((
zEº
),zEº, "d©aba£ %†i†locked", 
zName
);

296 
dëach_îr‹
;

299 
	`sqlôe3BåìClo£
(
pDb
->
pBt
);

300 
pDb
->
pBt
 = 0;

301 
pDb
->
pSchema
 = 0;

302 
	`sqlôe3Cﬁœp£D©aba£Aºay
(
db
);

305 
dëach_îr‹
:

306 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
, 
zEº
, -1);

307 
	}
}

313 
	$codeAâach
(

314 
P¨£
 *
pP¨£
,

315 
ty≥
,

316 
FuncDef
 c⁄° *
pFunc
,

317 
Ex¥
 *
pAuthArg
,

318 
Ex¥
 *
pFûíame
,

319 
Ex¥
 *
pDb«me
,

320 
Ex¥
 *
pKey


322 
rc
;

323 
NameC⁄ãxt
 
sName
;

324 
Vdbe
 *
v
;

325 
sqlôe3
* 
db
 = 
pP¨£
->db;

326 
ªgArgs
;

328 if–
pP¨£
->
nEº
 ) 
©èch_íd
;

329 
	`mem£t
(&
sName
, 0, (
NameC⁄ãxt
));

330 
sName
.
pP¨£
 =ÖParse;

333 
SQLITE_OK
!=(
rc
 = 
	`ªsﬁveAâachEx¥
(&
sName
, 
pFûíame
)) ||

334 
SQLITE_OK
!=(
rc
 = 
	`ªsﬁveAâachEx¥
(&
sName
, 
pDb«me
)) ||

335 
SQLITE_OK
!=(
rc
 = 
	`ªsﬁveAâachEx¥
(&
sName
, 
pKey
))

337 
©èch_íd
;

340 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


341 if–
pAuthArg
 ){

342 *
zAuthArg
;

343 if–
pAuthArg
->
›
==
TK_STRING
 ){

344 
zAuthArg
 = 
pAuthArg
->
u
.
zTokí
;

346 
zAuthArg
 = 0;

348 
rc
 = 
	`sqlôe3AuthCheck
(
pP¨£
, 
ty≥
, 
zAuthArg
, 0, 0);

349 if(
rc
!=
SQLITE_OK
 ){

350 
©èch_íd
;

356 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

357 
ªgArgs
 = 
	`sqlôe3GëTempR™ge
(
pP¨£
, 4);

358 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pFûíame
, 
ªgArgs
);

359 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pDb«me
, 
ªgArgs
+1);

360 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pKey
, 
ªgArgs
+2);

362 
	`as£π
–
v
 || 
db
->
mÆlocFaûed
 );

363 if–
v
 ){

364 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Fun˘i⁄0
, 0, 
ªgArgs
+3-
pFunc
->
nArg
,ÑegArgs+3,

365 (*)
pFunc
, 
P4_FUNCDEF
);

366 
	`as£π
–
pFunc
->
nArg
==-1 || (pFunc->nArg&0xff)==pFunc->nArg );

367 
	`sqlôe3VdbeCh™geP5
(
v
, (
u8
)(
pFunc
->
nArg
));

373 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Expúe
, (
ty≥
==
SQLITE_ATTACH
));

376 
©èch_íd
:

377 
	`sqlôe3Ex¥Dñëe
(
db
, 
pFûíame
);

378 
	`sqlôe3Ex¥Dñëe
(
db
, 
pDb«me
);

379 
	`sqlôe3Ex¥Dñëe
(
db
, 
pKey
);

380 
	}
}

387 
	$sqlôe3Dëach
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pDb«me
){

388 c⁄° 
FuncDef
 
dëach_func
 = {

390 
SQLITE_UTF8
,

393 
dëachFunc
,

398 
	`codeAâach
(
pP¨£
, 
SQLITE_DETACH
, &
dëach_func
, 
pDb«me
, 0, 0,ÖDbname);

399 
	}
}

406 
	$sqlôe3Aâach
(
P¨£
 *
pP¨£
, 
Ex¥
 *
p
, Ex¥ *
pDb«me
, Ex¥ *
pKey
){

407 c⁄° 
FuncDef
 
©èch_func
 = {

409 
SQLITE_UTF8
,

412 
©èchFunc
,

417 
	`codeAâach
(
pP¨£
, 
SQLITE_ATTACH
, &
©èch_func
, 
p
,Ö, 
pDb«me
, 
pKey
);

418 
	}
}

425 
	$sqlôe3FixInô
(

426 
DbFixî
 *
pFix
,

427 
P¨£
 *
pP¨£
,

428 
iDb
,

429 c⁄° *
zTy≥
,

430 c⁄° 
Tokí
 *
pName


432 
sqlôe3
 *
db
;

434 
db
 = 
pP¨£
->db;

435 
	`as£π
–
db
->
nDb
>
iDb
 );

436 
pFix
->
pP¨£
 =ÖParse;

437 
pFix
->
zDb
 = 
db
->
aDb
[
iDb
].
zDbSName
;

438 
pFix
->
pSchema
 = 
db
->
aDb
[
iDb
].pSchema;

439 
pFix
->
zTy≥
 = zType;

440 
pFix
->
pName
 =ÖName;

441 
pFix
->
bV¨O∆y
 = (
iDb
==1);

442 
	}
}

458 
	$sqlôe3FixSrcLi°
(

459 
DbFixî
 *
pFix
,

460 
SrcLi°
 *
pLi°


462 
i
;

463 c⁄° *
zDb
;

464 
SrcLi°_ôem
 *
pIãm
;

466 if–
	`NEVER
(
pLi°
==0) )  0;

467 
zDb
 = 
pFix
->zDb;

468 
i
=0, 
pIãm
=
pLi°
->
a
; i<pLi°->
nSrc
; i++,ÖItem++){

469 if–
pFix
->
bV¨O∆y
==0 ){

470 if–
pIãm
->
zD©aba£
 && 
	`sqlôe3SåICmp
’Iãm->zD©aba£, 
zDb
) ){

471 
	`sqlôe3Eº‹Msg
(
pFix
->
pP¨£
,

473 
pFix
->
zTy≥
,ÖFix->
pName
, 
pIãm
->
zD©aba£
);

476 
	`sqlôe3DbFªe
(
pFix
->
pP¨£
->
db
, 
pIãm
->
zD©aba£
);

477 
pIãm
->
zD©aba£
 = 0;

478 
pIãm
->
pSchema
 = 
pFix
->pSchema;

480 #i‡!
	`deföed
(
SQLITE_OMIT_VIEW
Ë|| !deföed(
SQLITE_OMIT_TRIGGER
)

481 if–
	`sqlôe3FixSñe˘
(
pFix
, 
pIãm
->
pSñe˘
) )  1;

482 if–
	`sqlôe3FixEx¥
(
pFix
, 
pIãm
->
pOn
) )  1;

486 
	}
}

487 #i‡!
deföed
(
SQLITE_OMIT_VIEW
Ë|| !deföed(
SQLITE_OMIT_TRIGGER
)

488 
	$sqlôe3FixSñe˘
(

489 
DbFixî
 *
pFix
,

490 
Sñe˘
 *
pSñe˘


492  
pSñe˘
 ){

493 if–
	`sqlôe3FixEx¥Li°
(
pFix
, 
pSñe˘
->
pELi°
) ){

496 if–
	`sqlôe3FixSrcLi°
(
pFix
, 
pSñe˘
->
pSrc
) ){

499 if–
	`sqlôe3FixEx¥
(
pFix
, 
pSñe˘
->
pWhîe
) ){

502 if–
	`sqlôe3FixEx¥Li°
(
pFix
, 
pSñe˘
->
pGroupBy
) ){

505 if–
	`sqlôe3FixEx¥
(
pFix
, 
pSñe˘
->
pHavög
) ){

508 if–
	`sqlôe3FixEx¥Li°
(
pFix
, 
pSñe˘
->
pOrdîBy
) ){

511 if–
	`sqlôe3FixEx¥
(
pFix
, 
pSñe˘
->
pLimô
) ){

514 if–
	`sqlôe3FixEx¥
(
pFix
, 
pSñe˘
->
pOff£t
) ){

517 
pSñe˘
 =ÖSñe˘->
pPri‹
;

520 
	}
}

521 
	$sqlôe3FixEx¥
(

522 
DbFixî
 *
pFix
,

523 
Ex¥
 *
pEx¥


525  
pEx¥
 ){

526 if–
pEx¥
->
›
==
TK_VARIABLE
 ){

527 if–
pFix
->
pP¨£
->
db
->
öô
.
busy
 ){

528 
pEx¥
->
›
 = 
TK_NULL
;

530 
	`sqlôe3Eº‹Msg
(
pFix
->
pP¨£
, "%†ˇ¬Ÿ u£ v¨übÀs",ÖFix->
zTy≥
);

534 if–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_TokíO∆y
|
EP_Lóf
) ) ;

535 if–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
) ){

536 if–
	`sqlôe3FixSñe˘
(
pFix
, 
pEx¥
->
x
.
pSñe˘
) )  1;

538 if–
	`sqlôe3FixEx¥Li°
(
pFix
, 
pEx¥
->
x
.
pLi°
) )  1;

540 if–
	`sqlôe3FixEx¥
(
pFix
, 
pEx¥
->
pRight
) ){

543 
pEx¥
 =ÖEx¥->
pLe·
;

546 
	}
}

547 
	$sqlôe3FixEx¥Li°
(

548 
DbFixî
 *
pFix
,

549 
Ex¥Li°
 *
pLi°


551 
i
;

552 
Ex¥Li°_ôem
 *
pIãm
;

553 if–
pLi°
==0 )  0;

554 
i
=0, 
pIãm
=
pLi°
->
a
; i<pLi°->
nEx¥
; i++,ÖItem++){

555 if–
	`sqlôe3FixEx¥
(
pFix
, 
pIãm
->
pEx¥
) ){

560 
	}
}

563 #i‚de‡
SQLITE_OMIT_TRIGGER


564 
	$sqlôe3FixTriggîSãp
(

565 
DbFixî
 *
pFix
,

566 
TriggîSãp
 *
pSãp


568  
pSãp
 ){

569 if–
	`sqlôe3FixSñe˘
(
pFix
, 
pSãp
->
pSñe˘
) ){

572 if–
	`sqlôe3FixEx¥
(
pFix
, 
pSãp
->
pWhîe
) ){

575 if–
	`sqlôe3FixEx¥Li°
(
pFix
, 
pSãp
->
pEx¥Li°
) ){

578 
pSãp
 =ÖSãp->
pNext
;

581 
	}
}

	@auth.c

17 
	~"sqlôeI¡.h
"

23 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


70 
	$sqlôe3_£t_auth‹izî
(

71 
sqlôe3
 *
db
,

72 (*
xAuth
)(*,,const *,const *,const *,const *),

73 *
pArg


75 #ifde‡
SQLITE_ENABLE_API_ARMOR


76 if–!
	`sqlôe3Sa„tyCheckOk
(
db
ËË 
SQLITE_MISUSE_BKPT
;

78 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

79 
db
->
xAuth
 = (
sqlôe3_xauth
)xAuth;

80 
db
->
pAuthArg
 = 
pArg
;

81 
	`sqlôe3ExpúePª∑ªdSèãmíts
(
db
);

82 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

83  
SQLITE_OK
;

84 
	}
}

90 
	$sqlôeAuthBadRëu∫Code
(
P¨£
 *
pP¨£
){

91 
	`sqlôe3Eº‹Msg
(
pP¨£
, "authorizer malfunction");

92 
pP¨£
->
rc
 = 
SQLITE_ERROR
;

93 
	}
}

104 
	$sqlôe3AuthRódCﬁ
(

105 
P¨£
 *
pP¨£
,

106 c⁄° *
zTab
,

107 c⁄° *
zCﬁ
,

108 
iDb


110 
sqlôe3
 *
db
 = 
pP¨£
->db;

111 *
zDb
 = 
db
->
aDb
[
iDb
].
zDbSName
;

112 
rc
;

114 if–
db
->
öô
.
busy
 )  
SQLITE_OK
;

115 
rc
 = 
db
->
	`xAuth
(db->
pAuthArg
, 
SQLITE_READ
, 
zTab
,
zCﬁ
,
zDb
,
pP¨£
->
zAuthC⁄ãxt


116 #ifde‡
SQLITE_USER_AUTHENTICATION


117 ,
db
->
auth
.
zAuthU£r


120 if–
rc
==
SQLITE_DENY
 ){

121 if–
db
->
nDb
>2 || 
iDb
!=0 ){

122 
	`sqlôe3Eº‹Msg
(
pP¨£
, "ac˚s†tÿ%s.%s.%†i†¥ohibôed",
zDb
,
zTab
,
zCﬁ
);

124 
	`sqlôe3Eº‹Msg
(
pP¨£
, "ac˚s†tÿ%s.%†i†¥ohibôed", 
zTab
, 
zCﬁ
);

126 
pP¨£
->
rc
 = 
SQLITE_AUTH
;

127 }if–
rc
!=
SQLITE_IGNORE
 &&Ñc!=
SQLITE_OK
 ){

128 
	`sqlôeAuthBadRëu∫Code
(
pP¨£
);

130  
rc
;

131 
	}
}

142 
	$sqlôe3AuthRód
(

143 
P¨£
 *
pP¨£
,

144 
Ex¥
 *
pEx¥
,

145 
Schema
 *
pSchema
,

146 
SrcLi°
 *
pTabLi°


148 
sqlôe3
 *
db
 = 
pP¨£
->db;

149 
TabÀ
 *
pTab
 = 0;

150 c⁄° *
zCﬁ
;

151 
iSrc
;

152 
iDb
;

153 
iCﬁ
;

155 if–
db
->
xAuth
==0 ) ;

156 
iDb
 = 
	`sqlôe3SchemaToIndex
(
pP¨£
->
db
, 
pSchema
);

157 if–
iDb
<0 ){

163 
	`as£π
–
pEx¥
->
›
==
TK_COLUMN
 ||ÖEx¥->›==
TK_TRIGGER
 );

164 if–
pEx¥
->
›
==
TK_TRIGGER
 ){

165 
pTab
 = 
pP¨£
->
pTriggîTab
;

167 
	`as£π
–
pTabLi°
 );

168 
iSrc
=0; 
	`ALWAYS
(iSrc<
pTabLi°
->
nSrc
); iSrc++){

169 if–
pEx¥
->
iTabÀ
==
pTabLi°
->
a
[
iSrc
].
iCurs‹
 ){

170 
pTab
 = 
pTabLi°
->
a
[
iSrc
].pTab;

175 
iCﬁ
 = 
pEx¥
->
iCﬁumn
;

176 if–
	`NEVER
(
pTab
==0) ) ;

178 if–
iCﬁ
>=0 ){

179 
	`as£π
–
iCﬁ
<
pTab
->
nCﬁ
 );

180 
zCﬁ
 = 
pTab
->
aCﬁ
[
iCﬁ
].
zName
;

181 }if–
pTab
->
iPKey
>=0 ){

182 
	`as£π
–
pTab
->
iPKey
<pTab->
nCﬁ
 );

183 
zCﬁ
 = 
pTab
->
aCﬁ
[pTab->
iPKey
].
zName
;

185 
zCﬁ
 = "ROWID";

187 
	`as£π
–
iDb
>=0 && iDb<
db
->
nDb
 );

188 if–
SQLITE_IGNORE
==
	`sqlôe3AuthRódCﬁ
(
pP¨£
, 
pTab
->
zName
, 
zCﬁ
, 
iDb
) ){

189 
pEx¥
->
›
 = 
TK_NULL
;

191 
	}
}

199 
	$sqlôe3AuthCheck
(

200 
P¨£
 *
pP¨£
,

201 
code
,

202 c⁄° *
zArg1
,

203 c⁄° *
zArg2
,

204 c⁄° *
zArg3


206 
sqlôe3
 *
db
 = 
pP¨£
->db;

207 
rc
;

212 if–
db
->
öô
.
busy
 || 
IN_DECLARE_VTAB
 ){

213  
SQLITE_OK
;

216 if–
db
->
xAuth
==0 ){

217  
SQLITE_OK
;

219 
rc
 = 
db
->
	`xAuth
(db->
pAuthArg
, 
code
, 
zArg1
, 
zArg2
, 
zArg3
, 
pP¨£
->
zAuthC⁄ãxt


220 #ifde‡
SQLITE_USER_AUTHENTICATION


221 ,
db
->
auth
.
zAuthU£r


224 if–
rc
==
SQLITE_DENY
 ){

225 
	`sqlôe3Eº‹Msg
(
pP¨£
, "notáuthorized");

226 
pP¨£
->
rc
 = 
SQLITE_AUTH
;

227 }if–
rc
!=
SQLITE_OK
 &&Ñc!=
SQLITE_IGNORE
 ){

228 
rc
 = 
SQLITE_DENY
;

229 
	`sqlôeAuthBadRëu∫Code
(
pP¨£
);

231  
rc
;

232 
	}
}

239 
	$sqlôe3AuthC⁄ãxtPush
(

240 
P¨£
 *
pP¨£
,

241 
AuthC⁄ãxt
 *
pC⁄ãxt
,

242 c⁄° *
zC⁄ãxt


244 
	`as£π
–
pP¨£
 );

245 
pC⁄ãxt
->
pP¨£
 =ÖParse;

246 
pC⁄ãxt
->
zAuthC⁄ãxt
 = 
pP¨£
->zAuthContext;

247 
pP¨£
->
zAuthC⁄ãxt
 = 
zC⁄ãxt
;

248 
	}
}

254 
	$sqlôe3AuthC⁄ãxtP›
(
AuthC⁄ãxt
 *
pC⁄ãxt
){

255 if–
pC⁄ãxt
->
pP¨£
 ){

256 
pC⁄ãxt
->
pP¨£
->
zAuthC⁄ãxt
 =ÖContext->zAuthContext;

257 
pC⁄ãxt
->
pP¨£
 = 0;

259 
	}
}

	@backup.c

15 
	~"sqlôeI¡.h
"

16 
	~"båìI¡.h
"

21 
	ssqlôe3_backup
 {

22 
sqlôe3
* 
	mpDe°Db
;

23 
Båì
 *
	mpDe°
;

24 
u32
 
	miDe°Schema
;

25 
	mbDe°Locked
;

27 
Pgno
 
	miNext
;

28 
sqlôe3
* 
	mpSrcDb
;

29 
Båì
 *
	mpSrc
;

31 
	mrc
;

36 
Pgno
 
	mnRemaöög
;

37 
Pgno
 
	mnPagecou¡
;

39 
	misAâached
;

40 
sqlôe3_backup
 *
	mpNext
;

82 
Båì
 *
	$födBåì
(
sqlôe3
 *
pEº‹Db
, sqlôe3 *
pDb
, c⁄° *
zDb
){

83 
i
 = 
	`sqlôe3FödDbName
(
pDb
, 
zDb
);

85 if–
i
==1 ){

86 
P¨£
 
sP¨£
;

87 
rc
 = 0;

88 
	`mem£t
(&
sP¨£
, 0, (sParse));

89 
sP¨£
.
db
 = 
pDb
;

90 if–
	`sqlôe3O≥nTempD©aba£
(&
sP¨£
) ){

91 
	`sqlôe3Eº‹WôhMsg
(
pEº‹Db
, 
sP¨£
.
rc
, "%s", sP¨£.
zEºMsg
);

92 
rc
 = 
SQLITE_ERROR
;

94 
	`sqlôe3DbFªe
(
pEº‹Db
, 
sP¨£
.
zEºMsg
);

95 
	`sqlôe3P¨£rRe£t
(&
sP¨£
);

96 if–
rc
 ){

101 if–
i
<0 ){

102 
	`sqlôe3Eº‹WôhMsg
(
pEº‹Db
, 
SQLITE_ERROR
, "unknow¿d©aba£ %s", 
zDb
);

106  
pDb
->
aDb
[
i
].
pBt
;

107 
	}
}

113 
	$£tDe°Pgsz
(
sqlôe3_backup
 *
p
){

114 
rc
;

115 
rc
 = 
	`sqlôe3BåìSëPageSize
(
p
->
pDe°
,
	`sqlôe3BåìGëPageSize
’->
pSrc
),-1,0);

116  
rc
;

117 
	}
}

125 
	$checkRódTønß˘i⁄
(
sqlôe3
 *
db
, 
Båì
 *
p
){

126 if–
	`sqlôe3BåìIsInRódTøns
(
p
) ){

127 
	`sqlôe3Eº‹WôhMsg
(
db
, 
SQLITE_ERROR
, "destination database is in use");

128  
SQLITE_ERROR
;

130  
SQLITE_OK
;

131 
	}
}

141 
sqlôe3_backup
 *
	$sqlôe3_backup_öô
(

142 
sqlôe3
* 
pDe°Db
,

143 c⁄° *
zDe°Db
,

144 
sqlôe3
* 
pSrcDb
,

145 c⁄° *
zSrcDb


147 
sqlôe3_backup
 *
p
;

149 #ifde‡
SQLITE_ENABLE_API_ARMOR


150 if–!
	`sqlôe3Sa„tyCheckOk
(
pSrcDb
)||!sqlôe3Sa„tyCheckOk(
pDe°Db
) ){

151 ()
SQLITE_MISUSE_BKPT
;

164 
	`sqlôe3_muãx_íãr
(
pSrcDb
->
muãx
);

165 
	`sqlôe3_muãx_íãr
(
pDe°Db
->
muãx
);

167 if–
pSrcDb
==
pDe°Db
 ){

168 
	`sqlôe3Eº‹WôhMsg
(

169 
pDe°Db
, 
SQLITE_ERROR
, "sourceánd destination must be distinct"

171 
p
 = 0;

177 
p
 = (
sqlôe3_backup
 *)
	`sqlôe3MÆlocZîo
((sqlite3_backup));

178 if–!
p
 ){

179 
	`sqlôe3Eº‹
(
pDe°Db
, 
SQLITE_NOMEM_BKPT
);

184 if–
p
 ){

185 
p
->
pSrc
 = 
	`födBåì
(
pDe°Db
, 
pSrcDb
, 
zSrcDb
);

186 
p
->
pDe°
 = 
	`födBåì
(
pDe°Db
,ÖDe°Db, 
zDe°Db
);

187 
p
->
pDe°Db
 =ÖDestDb;

188 
p
->
pSrcDb
 =ÖSrcDb;

189 
p
->
iNext
 = 1;

190 
p
->
isAâached
 = 0;

192 if–0==
p
->
pSrc
 || 0=ı->
pDe°


193 || 
	`checkRódTønß˘i⁄
(
pDe°Db
, 
p
->
pDe°
)!=
SQLITE_OK


200 
	`sqlôe3_‰ì
(
p
);

201 
p
 = 0;

204 if–
p
 ){

205 
p
->
pSrc
->
nBackup
++;

208 
	`sqlôe3_muãx_Àave
(
pDe°Db
->
muãx
);

209 
	`sqlôe3_muãx_Àave
(
pSrcDb
->
muãx
);

210  
p
;

211 
	}
}

218 
	$isF©ÆEº‹
(
rc
){

219  (
rc
!=
SQLITE_OK
 &&Ñc!=
SQLITE_BUSY
 && 
	`ALWAYS
‘c!=
SQLITE_LOCKED
));

220 
	}
}

227 
	$backupO√Page
(

228 
sqlôe3_backup
 *
p
,

229 
Pgno
 
iSrcPg
,

230 c⁄° 
u8
 *
zSrcD©a
,

231 
bUpd©e


233 
Pagî
 * c⁄° 
pDe°Pagî
 = 
	`sqlôe3BåìPagî
(
p
->
pDe°
);

234 c⁄° 
nSrcPgsz
 = 
	`sqlôe3BåìGëPageSize
(
p
->
pSrc
);

235 
nDe°Pgsz
 = 
	`sqlôe3BåìGëPageSize
(
p
->
pDe°
);

236 c⁄° 
nC›y
 = 
	`MIN
(
nSrcPgsz
, 
nDe°Pgsz
);

237 c⁄° 
i64
 
iEnd
 = (i64)
iSrcPg
*(i64)
nSrcPgsz
;

238 #ifde‡
SQLITE_HAS_CODEC


242 
nSrcRe£rve
 = 
	`sqlôe3BåìGëRe£rveNoMuãx
(
p
->
pSrc
);

243 
nDe°Re£rve
 = 
	`sqlôe3BåìGëO±imÆRe£rve
(
p
->
pDe°
);

245 
rc
 = 
SQLITE_OK
;

246 
i64
 
iOff
;

248 
	`as£π
–
	`sqlôe3BåìGëRe£rveNoMuãx
(
p
->
pSrc
)>=0 );

249 
	`as£π
–
p
->
bDe°Locked
 );

250 
	`as£π
–!
	`isF©ÆEº‹
(
p
->
rc
) );

251 
	`as£π
–
iSrcPg
!=
	`PENDING_BYTE_PAGE
(
p
->
pSrc
->
pBt
) );

252 
	`as£π
–
zSrcD©a
 );

257 if–
nSrcPgsz
!=
nDe°Pgsz
 && 
	`sqlôe3PagîIsMemdb
(
pDe°Pagî
) ){

258 
rc
 = 
SQLITE_READONLY
;

261 #ifde‡
SQLITE_HAS_CODEC


265 if–
nSrcPgsz
!=
nDe°Pgsz
 && 
	`sqlôe3PagîGëCodec
(
pDe°Pagî
)!=0 ){

266 
rc
 = 
SQLITE_READONLY
;

274 if–
nSrcRe£rve
!=
nDe°Re£rve
 ){

275 
u32
 
√wPgsz
 = 
nSrcPgsz
;

276 
rc
 = 
	`sqlôe3PagîSëPagesize
(
pDe°Pagî
, &
√wPgsz
, 
nSrcRe£rve
);

277 if–
rc
==
SQLITE_OK
 && 
√wPgsz
!=
nSrcPgsz
 )Ñ¯
SQLITE_READONLY
;

285 
iOff
=
iEnd
-(
i64
)
nSrcPgsz
; 
rc
==
SQLITE_OK
 && iOff<iEnd; iOff+=
nDe°Pgsz
){

286 
DbPage
 *
pDe°Pg
 = 0;

287 
Pgno
 
iDe°
 = (Pgno)(
iOff
/
nDe°Pgsz
)+1;

288 if–
iDe°
==
	`PENDING_BYTE_PAGE
(
p
->
pDe°
->
pBt
) ) ;

289 if–
SQLITE_OK
==(
rc
 = 
	`sqlôe3PagîGë
(
pDe°Pagî
, 
iDe°
, &
pDe°Pg
, 0))

290 && 
SQLITE_OK
==(
rc
 = 
	`sqlôe3PagîWrôe
(
pDe°Pg
))

292 c⁄° 
u8
 *
zIn
 = &
zSrcD©a
[
iOff
%
nSrcPgsz
];

293 
u8
 *
zDe°D©a
 = 
	`sqlôe3PagîGëD©a
(
pDe°Pg
);

294 
u8
 *
zOut
 = &
zDe°D©a
[
iOff
%
nDe°Pgsz
];

303 
	`mem˝y
(
zOut
, 
zIn
, 
nC›y
);

304 ((
u8
 *)
	`sqlôe3PagîGëExåa
(
pDe°Pg
))[0] = 0;

305 if–
iOff
==0 && 
bUpd©e
==0 ){

306 
	`sqlôe3Put4byã
(&
zOut
[28], 
	`sqlôe3BåìLa°Page
(
p
->
pSrc
));

309 
	`sqlôe3PagîUƒef
(
pDe°Pg
);

312  
rc
;

313 
	}
}

323 
	$backupTrunˇãFûe
(
sqlôe3_fûe
 *
pFûe
, 
i64
 
iSize
){

324 
i64
 
iCuºít
;

325 
rc
 = 
	`sqlôe3OsFûeSize
(
pFûe
, &
iCuºít
);

326 if–
rc
==
SQLITE_OK
 && 
iCuºít
>
iSize
 ){

327 
rc
 = 
	`sqlôe3OsTrunˇã
(
pFûe
, 
iSize
);

329  
rc
;

330 
	}
}

336 
	$©èchBackupObje˘
(
sqlôe3_backup
 *
p
){

337 
sqlôe3_backup
 **
µ
;

338 
	`as£π
–
	`sqlôe3BåìHﬁdsMuãx
(
p
->
pSrc
) );

339 
µ
 = 
	`sqlôe3PagîBackupPå
(
	`sqlôe3BåìPagî
(
p
->
pSrc
));

340 
p
->
pNext
 = *
µ
;

341 *
µ
 = 
p
;

342 
p
->
isAâached
 = 1;

343 
	}
}

348 
	$sqlôe3_backup_°ï
(
sqlôe3_backup
 *
p
, 
nPage
){

349 
rc
;

350 
de°Mode
;

351 
pgszSrc
 = 0;

352 
pgszDe°
 = 0;

354 #ifde‡
SQLITE_ENABLE_API_ARMOR


355 if–
p
==0 )  
SQLITE_MISUSE_BKPT
;

357 
	`sqlôe3_muãx_íãr
(
p
->
pSrcDb
->
muãx
);

358 
	`sqlôe3BåìE¡î
(
p
->
pSrc
);

359 if–
p
->
pDe°Db
 ){

360 
	`sqlôe3_muãx_íãr
(
p
->
pDe°Db
->
muãx
);

363 
rc
 = 
p
->rc;

364 if–!
	`isF©ÆEº‹
(
rc
) ){

365 
Pagî
 * c⁄° 
pSrcPagî
 = 
	`sqlôe3BåìPagî
(
p
->
pSrc
);

366 
Pagî
 * c⁄° 
pDe°Pagî
 = 
	`sqlôe3BåìPagî
(
p
->
pDe°
);

367 
ii
;

368 
nSrcPage
 = -1;

369 
bClo£Tøns
 = 0;

374 if–
p
->
pDe°Db
 &&Ö->
pSrc
->
pBt
->
öTønß˘i⁄
==
TRANS_WRITE
 ){

375 
rc
 = 
SQLITE_BUSY
;

377 
rc
 = 
SQLITE_OK
;

384 if–
rc
==
SQLITE_OK
 && 0==
	`sqlôe3BåìIsInRódTøns
(
p
->
pSrc
) ){

385 
rc
 = 
	`sqlôe3BåìBegöTøns
(
p
->
pSrc
, 0);

386 
bClo£Tøns
 = 1;

395 if–
p
->
bDe°Locked
==0 && 
rc
==
SQLITE_OK
 && 
	`£tDe°Pgsz
’)==
SQLITE_NOMEM
 ){

396 
rc
 = 
SQLITE_NOMEM
;

400 if–
SQLITE_OK
==
rc
 && 
p
->
bDe°Locked
==0

401 && 
SQLITE_OK
==(
rc
 = 
	`sqlôe3BåìBegöTøns
(
p
->
pDe°
, 2))

403 
p
->
bDe°Locked
 = 1;

404 
	`sqlôe3BåìGëMëa
(
p
->
pDe°
, 
BTREE_SCHEMA_VERSION
, &p->
iDe°Schema
);

409 
pgszSrc
 = 
	`sqlôe3BåìGëPageSize
(
p
->
pSrc
);

410 
pgszDe°
 = 
	`sqlôe3BåìGëPageSize
(
p
->
pDe°
);

411 
de°Mode
 = 
	`sqlôe3PagîGëJou∫ÆMode
(
	`sqlôe3BåìPagî
(
p
->
pDe°
));

412 if–
SQLITE_OK
==
rc
 && 
de°Mode
==
PAGER_JOURNALMODE_WAL
 && 
pgszSrc
!=
pgszDe°
 ){

413 
rc
 = 
SQLITE_READONLY
;

419 
nSrcPage
 = ()
	`sqlôe3BåìLa°Page
(
p
->
pSrc
);

420 
	`as£π
–
nSrcPage
>=0 );

421 
ii
=0; (
nPage
<0 || ii<nPageË&& 
p
->
iNext
<=(
Pgno
)
nSrcPage
 && !
rc
; ii++){

422 c⁄° 
Pgno
 
iSrcPg
 = 
p
->
iNext
;

423 if–
iSrcPg
!=
	`PENDING_BYTE_PAGE
(
p
->
pSrc
->
pBt
) ){

424 
DbPage
 *
pSrcPg
;

425 
rc
 = 
	`sqlôe3PagîGë
(
pSrcPagî
, 
iSrcPg
, &
pSrcPg
,
PAGER_GET_READONLY
);

426 if–
rc
==
SQLITE_OK
 ){

427 
rc
 = 
	`backupO√Page
(
p
, 
iSrcPg
, 
	`sqlôe3PagîGëD©a
(
pSrcPg
), 0);

428 
	`sqlôe3PagîUƒef
(
pSrcPg
);

431 
p
->
iNext
++;

433 if–
rc
==
SQLITE_OK
 ){

434 
p
->
nPagecou¡
 = 
nSrcPage
;

435 
p
->
nRemaöög
 = 
nSrcPage
+1-p->
iNext
;

436 if–
p
->
iNext
>(
Pgno
)
nSrcPage
 ){

437 
rc
 = 
SQLITE_DONE
;

438 }if–!
p
->
isAâached
 ){

439 
	`©èchBackupObje˘
(
p
);

448 if–
rc
==
SQLITE_DONE
 ){

449 if–
nSrcPage
==0 ){

450 
rc
 = 
	`sqlôe3BåìNewDb
(
p
->
pDe°
);

451 
nSrcPage
 = 1;

453 if–
rc
==
SQLITE_OK
 ||Ñc==
SQLITE_DONE
 ){

454 
rc
 = 
	`sqlôe3BåìUpd©eMëa
(
p
->
pDe°
,1,p->
iDe°Schema
+1);

456 if–
rc
==
SQLITE_OK
 ){

457 if–
p
->
pDe°Db
 ){

458 
	`sqlôe3Re£tAŒSchemasOfC⁄√˘i⁄
(
p
->
pDe°Db
);

460 if–
de°Mode
==
PAGER_JOURNALMODE_WAL
 ){

461 
rc
 = 
	`sqlôe3BåìSëVîsi⁄
(
p
->
pDe°
, 2);

464 if–
rc
==
SQLITE_OK
 ){

465 
nDe°Trunˇã
;

478 
	`as£π
–
pgszSrc
==
	`sqlôe3BåìGëPageSize
(
p
->
pSrc
) );

479 
	`as£π
–
pgszDe°
==
	`sqlôe3BåìGëPageSize
(
p
->
pDe°
) );

480 if–
pgszSrc
<
pgszDe°
 ){

481 
øtio
 = 
pgszDe°
/
pgszSrc
;

482 
nDe°Trunˇã
 = (
nSrcPage
+
øtio
-1)/ratio;

483 if–
nDe°Trunˇã
==()
	`PENDING_BYTE_PAGE
(
p
->
pDe°
->
pBt
) ){

484 
nDe°Trunˇã
--;

487 
nDe°Trunˇã
 = 
nSrcPage
 * (
pgszSrc
/
pgszDe°
);

489 
	`as£π
–
nDe°Trunˇã
>0 );

491 if–
pgszSrc
<
pgszDe°
 ){

501 c⁄° 
i64
 
iSize
 = (i64)
pgszSrc
 * (i64)
nSrcPage
;

502 
sqlôe3_fûe
 * c⁄° 
pFûe
 = 
	`sqlôe3PagîFûe
(
pDe°Pagî
);

503 
Pgno
 
iPg
;

504 
nD°Page
;

505 
i64
 
iOff
;

506 
i64
 
iEnd
;

508 
	`as£π
–
pFûe
 );

509 
	`as£π
–
nDe°Trunˇã
==0

510 || (
i64
)
nDe°Trunˇã
*(i64)
pgszDe°
 >
iSize
 || (

511 
nDe°Trunˇã
==()(
	`PENDING_BYTE_PAGE
(
p
->
pDe°
->
pBt
)-1)

512 && 
iSize
>=
PENDING_BYTE
 && iSize<=PENDING_BYTE+
pgszDe°


521 
	`sqlôe3PagîPagecou¡
(
pDe°Pagî
, &
nD°Page
);

522 
iPg
=
nDe°Trunˇã
; 
rc
==
SQLITE_OK
 && iPg<=(
Pgno
)
nD°Page
; iPg++){

523 if–
iPg
!=
	`PENDING_BYTE_PAGE
(
p
->
pDe°
->
pBt
) ){

524 
DbPage
 *
pPg
;

525 
rc
 = 
	`sqlôe3PagîGë
(
pDe°Pagî
, 
iPg
, &
pPg
, 0);

526 if–
rc
==
SQLITE_OK
 ){

527 
rc
 = 
	`sqlôe3PagîWrôe
(
pPg
);

528 
	`sqlôe3PagîUƒef
(
pPg
);

532 if–
rc
==
SQLITE_OK
 ){

533 
rc
 = 
	`sqlôe3PagîCommôPha£O√
(
pDe°Pagî
, 0, 1);

537 
iEnd
 = 
	`MIN
(
PENDING_BYTE
 + 
pgszDe°
, 
iSize
);

539 
iOff
=
PENDING_BYTE
+
pgszSrc
;

540 
rc
==
SQLITE_OK
 && 
iOff
<
iEnd
;

541 
iOff
+=
pgszSrc


543 
PgHdr
 *
pSrcPg
 = 0;

544 c⁄° 
Pgno
 
iSrcPg
 = (Pgno)((
iOff
/
pgszSrc
)+1);

545 
rc
 = 
	`sqlôe3PagîGë
(
pSrcPagî
, 
iSrcPg
, &
pSrcPg
, 0);

546 if–
rc
==
SQLITE_OK
 ){

547 
u8
 *
zD©a
 = 
	`sqlôe3PagîGëD©a
(
pSrcPg
);

548 
rc
 = 
	`sqlôe3OsWrôe
(
pFûe
, 
zD©a
, 
pgszSrc
, 
iOff
);

550 
	`sqlôe3PagîUƒef
(
pSrcPg
);

552 if–
rc
==
SQLITE_OK
 ){

553 
rc
 = 
	`backupTrunˇãFûe
(
pFûe
, 
iSize
);

557 if–
rc
==
SQLITE_OK
 ){

558 
rc
 = 
	`sqlôe3PagîSync
(
pDe°Pagî
, 0);

561 
	`sqlôe3PagîTrunˇãImage
(
pDe°Pagî
, 
nDe°Trunˇã
);

562 
rc
 = 
	`sqlôe3PagîCommôPha£O√
(
pDe°Pagî
, 0, 0);

566 if–
SQLITE_OK
==
rc


567 && 
SQLITE_OK
==(
rc
 = 
	`sqlôe3BåìCommôPha£Two
(
p
->
pDe°
, 0))

569 
rc
 = 
SQLITE_DONE
;

579 if–
bClo£Tøns
 ){

580 
	`TESTONLY
–
rc2
 );

581 
	`TESTONLY
–
rc2
 = ) 
	`sqlôe3BåìCommôPha£O√
(
p
->
pSrc
, 0);

582 
	`TESTONLY
–
rc2
 |Ë
	`sqlôe3BåìCommôPha£Two
(
p
->
pSrc
, 0);

583 
	`as£π
–
rc2
==
SQLITE_OK
 );

586 if–
rc
==
SQLITE_IOERR_NOMEM
 ){

587 
rc
 = 
SQLITE_NOMEM_BKPT
;

589 
p
->
rc
 =Ñc;

591 if–
p
->
pDe°Db
 ){

592 
	`sqlôe3_muãx_Àave
(
p
->
pDe°Db
->
muãx
);

594 
	`sqlôe3BåìLóve
(
p
->
pSrc
);

595 
	`sqlôe3_muãx_Àave
(
p
->
pSrcDb
->
muãx
);

596  
rc
;

597 
	}
}

602 
	$sqlôe3_backup_föish
(
sqlôe3_backup
 *
p
){

603 
sqlôe3_backup
 **
µ
;

604 
sqlôe3
 *
pSrcDb
;

605 
rc
;

608 if–
p
==0 )  
SQLITE_OK
;

609 
pSrcDb
 = 
p
->pSrcDb;

610 
	`sqlôe3_muãx_íãr
(
pSrcDb
->
muãx
);

611 
	`sqlôe3BåìE¡î
(
p
->
pSrc
);

612 if–
p
->
pDe°Db
 ){

613 
	`sqlôe3_muãx_íãr
(
p
->
pDe°Db
->
muãx
);

617 if–
p
->
pDe°Db
 ){

618 
p
->
pSrc
->
nBackup
--;

620 if–
p
->
isAâached
 ){

621 
µ
 = 
	`sqlôe3PagîBackupPå
(
	`sqlôe3BåìPagî
(
p
->
pSrc
));

622  *
µ
!=
p
 ){

623 
µ
 = &(*µ)->
pNext
;

625 *
µ
 = 
p
->
pNext
;

629 
	`sqlôe3BåìRﬁlback
(
p
->
pDe°
, 
SQLITE_OK
, 0);

632 
rc
 = (
p
->rc==
SQLITE_DONE
Ë? 
SQLITE_OK
 :Ö->rc;

633 if–
p
->
pDe°Db
 ){

634 
	`sqlôe3Eº‹
(
p
->
pDe°Db
, 
rc
);

637 
	`sqlôe3LóveMuãxAndClo£Zombõ
(
p
->
pDe°Db
);

639 
	`sqlôe3BåìLóve
(
p
->
pSrc
);

640 if–
p
->
pDe°Db
 ){

644 
	`sqlôe3_‰ì
(
p
);

646 
	`sqlôe3LóveMuãxAndClo£Zombõ
(
pSrcDb
);

647  
rc
;

648 
	}
}

654 
	$sqlôe3_backup_ªmaöög
(
sqlôe3_backup
 *
p
){

655 #ifde‡
SQLITE_ENABLE_API_ARMOR


656 if–
p
==0 ){

657 ()
SQLITE_MISUSE_BKPT
;

661  
p
->
nRemaöög
;

662 
	}
}

668 
	$sqlôe3_backup_∑gecou¡
(
sqlôe3_backup
 *
p
){

669 #ifde‡
SQLITE_ENABLE_API_ARMOR


670 if–
p
==0 ){

671 ()
SQLITE_MISUSE_BKPT
;

675  
p
->
nPagecou¡
;

676 
	}
}

690 
SQLITE_NOINLINE
 
	$backupUpd©e
(

691 
sqlôe3_backup
 *
p
,

692 
Pgno
 
iPage
,

693 c⁄° 
u8
 *
aD©a


695 
	`as£π
–
p
!=0 );

697 
	`as£π
–
	`sqlôe3_muãx_hñd
(
p
->
pSrc
->
pBt
->
muãx
) );

698 if–!
	`isF©ÆEº‹
(
p
->
rc
Ë&& 
iPage
<p->
iNext
 ){

703 
rc
;

704 
	`as£π
–
p
->
pDe°Db
 );

705 
	`sqlôe3_muãx_íãr
(
p
->
pDe°Db
->
muãx
);

706 
rc
 = 
	`backupO√Page
(
p
, 
iPage
, 
aD©a
, 1);

707 
	`sqlôe3_muãx_Àave
(
p
->
pDe°Db
->
muãx
);

708 
	`as£π
–
rc
!=
SQLITE_BUSY
 &&Ñc!=
SQLITE_LOCKED
 );

709 if–
rc
!=
SQLITE_OK
 ){

710 
p
->
rc
 =Ñc;

713 } (
p
 =Ö->
pNext
)!=0 );

714 
	}
}

715 
	$sqlôe3BackupUpd©e
(
sqlôe3_backup
 *
pBackup
, 
Pgno
 
iPage
, c⁄° 
u8
 *
aD©a
){

716 if–
pBackup
 ) 
	`backupUpd©e
’Backup, 
iPage
, 
aD©a
);

717 
	}
}

730 
	$sqlôe3BackupRe°¨t
(
sqlôe3_backup
 *
pBackup
){

731 
sqlôe3_backup
 *
p
;

732 
p
=
pBackup
;Ö;Öı->
pNext
){

733 
	`as£π
–
	`sqlôe3_muãx_hñd
(
p
->
pSrc
->
pBt
->
muãx
) );

734 
p
->
iNext
 = 1;

736 
	}
}

738 #i‚de‡
SQLITE_OMIT_VACUUM


747 
	$sqlôe3BåìC›yFûe
(
Båì
 *
pTo
, Båì *
pFrom
){

748 
rc
;

749 
sqlôe3_fûe
 *
pFd
;

750 
sqlôe3_backup
 
b
;

751 
	`sqlôe3BåìE¡î
(
pTo
);

752 
	`sqlôe3BåìE¡î
(
pFrom
);

754 
	`as£π
–
	`sqlôe3BåìIsInTøns
(
pTo
) );

755 
pFd
 = 
	`sqlôe3PagîFûe
(
	`sqlôe3BåìPagî
(
pTo
));

756 if–
pFd
->
pMëhods
 ){

757 
i64
 
nByã
 = 
	`sqlôe3BåìGëPageSize
(
pFrom
)*(i64)
	`sqlôe3BåìLa°Page
(pFrom);

758 
rc
 = 
	`sqlôe3OsFûeC⁄åﬁ
(
pFd
, 
SQLITE_FCNTL_OVERWRITE
, &
nByã
);

759 if–
rc
==
SQLITE_NOTFOUND
 )Ñ¯
SQLITE_OK
;

760 if–
rc
 ) 
c›y_föished
;

768 
	`mem£t
(&
b
, 0, (b));

769 
b
.
pSrcDb
 = 
pFrom
->
db
;

770 
b
.
pSrc
 = 
pFrom
;

771 
b
.
pDe°
 = 
pTo
;

772 
b
.
iNext
 = 1;

774 #ifde‡
SQLITE_HAS_CODEC


775 
	`sqlôe3PagîAlignRe£rve
(
	`sqlôe3BåìPagî
(
pTo
), sqlôe3BåìPagî(
pFrom
));

784 
	`sqlôe3_backup_°ï
(&
b
, 0x7FFFFFFF);

785 
	`as£π
–
b
.
rc
!=
SQLITE_OK
 );

787 
rc
 = 
	`sqlôe3_backup_föish
(&
b
);

788 if–
rc
==
SQLITE_OK
 ){

789 
pTo
->
pBt
->
btsFœgs
 &~
BTS_PAGESIZE_FIXED
;

791 
	`sqlôe3PagîCÀ¨Cache
(
	`sqlôe3BåìPagî
(
b
.
pDe°
));

794 
	`as£π
–
	`sqlôe3BåìIsInTøns
(
pTo
)==0 );

795 
c›y_föished
:

796 
	`sqlôe3BåìLóve
(
pFrom
);

797 
	`sqlôe3BåìLóve
(
pTo
);

798  
rc
;

799 
	}
}

	@bitvec.c

37 
	~"sqlôeI¡.h
"

40 
	#BITVEC_SZ
 512

	)

44 
	#BITVEC_USIZE
 \

45 (((
BITVEC_SZ
-(3*(
u32
)))/(
Bôvec
*))*(Bôvec*))

	)

51 
	#BITVEC_TELEM
 
u8


	)

53 
	#BITVEC_SZELEM
 8

	)

55 
	#BITVEC_NELEM
 (
BITVEC_USIZE
/(
BITVEC_TELEM
))

	)

57 
	#BITVEC_NBIT
 (
BITVEC_NELEM
*
BITVEC_SZELEM
)

	)

60 
	#BITVEC_NINT
 (
BITVEC_USIZE
/(
u32
))

	)

63 
	#BITVEC_MXHASH
 (
BITVEC_NINT
/2)

	)

68 
	#BITVEC_HASH
(
X
Ë(((X)*1)%
BITVEC_NINT
)

	)

70 
	#BITVEC_NPTR
 (
BITVEC_USIZE
/(
Bôvec
 *))

	)

94 
	sBôvec
 {

95 
u32
 
	miSize
;

96 
u32
 
	mnSë
;

99 
u32
 
	miDivis‹
;

104 
BITVEC_TELEM
 
	maBôm≠
[
BITVEC_NELEM
];

105 
u32
 
	maHash
[
BITVEC_NINT
];

106 
Bôvec
 *
	m≠Sub
[
BITVEC_NPTR
];

107 } 
	mu
;

115 
Bôvec
 *
	$sqlôe3BôvecCª©e
(
u32
 
iSize
){

116 
Bôvec
 *
p
;

117 
	`as£π
–(*
p
)==
BITVEC_SZ
 );

118 
p
 = 
	`sqlôe3MÆlocZîo
( (*p) );

119 if–
p
 ){

120 
p
->
iSize
 = iSize;

122  
p
;

123 
	}
}

130 
	$sqlôe3BôvecTe°NŸNuŒ
(
Bôvec
 *
p
, 
u32
 
i
){

131 
	`as£π
–
p
!=0 );

132 
i
--;

133 if–
i
>=
p
->
iSize
 )  0;

134  
p
->
iDivis‹
 ){

135 
u32
 
bö
 = 
i
/
p
->
iDivis‹
;

136 
i
 = i%
p
->
iDivis‹
;

137 
p
 =Ö->
u
.
≠Sub
[
bö
];

138 i‡(!
p
) {

142 if–
p
->
iSize
<=
BITVEC_NBIT
 ){

143  (
p
->
u
.
aBôm≠
[
i
/
BITVEC_SZELEM
] & (1<<(i&(BITVEC_SZELEM-1))))!=0;

145 
u32
 
h
 = 
	`BITVEC_HASH
(
i
++);

146  
p
->
u
.
aHash
[
h
] ){

147 if–
p
->
u
.
aHash
[
h
]==
i
 )  1;

148 
h
 = (h+1Ë% 
BITVEC_NINT
;

152 
	}
}

153 
	$sqlôe3BôvecTe°
(
Bôvec
 *
p
, 
u32
 
i
){

154  
p
!=0 && 
	`sqlôe3BôvecTe°NŸNuŒ
’,
i
);

155 
	}
}

169 
	$sqlôe3BôvecSë
(
Bôvec
 *
p
, 
u32
 
i
){

170 
u32
 
h
;

171 if–
p
==0 )  
SQLITE_OK
;

172 
	`as£π
–
i
>0 );

173 
	`as£π
–
i
<=
p
->
iSize
 );

174 
i
--;

175 (
p
->
iSize
 > 
BITVEC_NBIT
Ë&&Ö->
iDivis‹
) {

176 
u32
 
bö
 = 
i
/
p
->
iDivis‹
;

177 
i
 = i%
p
->
iDivis‹
;

178 if–
p
->
u
.
≠Sub
[
bö
]==0 ){

179 
p
->
u
.
≠Sub
[
bö
] = 
	`sqlôe3BôvecCª©e
–p->
iDivis‹
 );

180 if–
p
->
u
.
≠Sub
[
bö
]==0 )  
SQLITE_NOMEM_BKPT
;

182 
p
 =Ö->
u
.
≠Sub
[
bö
];

184 if–
p
->
iSize
<=
BITVEC_NBIT
 ){

185 
p
->
u
.
aBôm≠
[
i
/
BITVEC_SZELEM
] |= 1 << (i&(BITVEC_SZELEM-1));

186  
SQLITE_OK
;

188 
h
 = 
	`BITVEC_HASH
(
i
++);

192 if–!
p
->
u
.
aHash
[
h
] ){

193 i‡(
p
->
nSë
<(
BITVEC_NINT
-1)) {

194 
bôvec_£t_íd
;

196 
bôvec_£t_ªhash
;

202 if–
p
->
u
.
aHash
[
h
]==
i
 )  
SQLITE_OK
;

203 
h
++;

204 if–
h
>=
BITVEC_NINT
 ) h = 0;

205 }  
p
->
u
.
aHash
[
h
] );

209 
bôvec_£t_ªhash
:

210 if–
p
->
nSë
>=
BITVEC_MXHASH
 ){

211 
j
;

212 
rc
;

213 
u32
 *
aiVÆues
 = 
	`sqlôe3SèckAŒocRaw
(0, (
p
->
u
.
aHash
));

214 if–
aiVÆues
==0 ){

215  
SQLITE_NOMEM_BKPT
;

217 
	`mem˝y
(
aiVÆues
, 
p
->
u
.
aHash
, (p->u.aHash));

218 
	`mem£t
(
p
->
u
.
≠Sub
, 0, (p->u.apSub));

219 
p
->
iDivis‹
 = (p->
iSize
 + 
BITVEC_NPTR
 - 1)/BITVEC_NPTR;

220 
rc
 = 
	`sqlôe3BôvecSë
(
p
, 
i
);

221 
j
=0; j<
BITVEC_NINT
; j++){

222 if–
aiVÆues
[
j
] ) 
rc
 |
	`sqlôe3BôvecSë
(
p
,áiValues[j]);

224 
	`sqlôe3SèckFªe
(0, 
aiVÆues
);

225  
rc
;

228 
bôvec_£t_íd
:

229 
p
->
nSë
++;

230 
p
->
u
.
aHash
[
h
] = 
i
;

231  
SQLITE_OK
;

232 
	}
}

240 
	$sqlôe3BôvecCÀ¨
(
Bôvec
 *
p
, 
u32
 
i
, *
pBuf
){

241 if–
p
==0 ) ;

242 
	`as£π
–
i
>0 );

243 
i
--;

244  
p
->
iDivis‹
 ){

245 
u32
 
bö
 = 
i
/
p
->
iDivis‹
;

246 
i
 = i%
p
->
iDivis‹
;

247 
p
 =Ö->
u
.
≠Sub
[
bö
];

248 i‡(!
p
) {

252 if–
p
->
iSize
<=
BITVEC_NBIT
 ){

253 
p
->
u
.
aBôm≠
[
i
/
BITVEC_SZELEM
] &= ~(1 << (i&(BITVEC_SZELEM-1)));

255 
j
;

256 
u32
 *
aiVÆues
 = 
pBuf
;

257 
	`mem˝y
(
aiVÆues
, 
p
->
u
.
aHash
, (p->u.aHash));

258 
	`mem£t
(
p
->
u
.
aHash
, 0, (p->u.aHash));

259 
p
->
nSë
 = 0;

260 
j
=0; j<
BITVEC_NINT
; j++){

261 if–
aiVÆues
[
j
] &&áiVÆues[j]!=(
i
+1) ){

262 
u32
 
h
 = 
	`BITVEC_HASH
(
aiVÆues
[
j
]-1);

263 
p
->
nSë
++;

264  
p
->
u
.
aHash
[
h
] ){

265 
h
++;

266 if–
h
>=
BITVEC_NINT
 ) h = 0;

268 
p
->
u
.
aHash
[
h
] = 
aiVÆues
[
j
];

272 
	}
}

277 
	$sqlôe3BôvecDe°roy
(
Bôvec
 *
p
){

278 if–
p
==0 ) ;

279 if–
p
->
iDivis‹
 ){

280 
i
;

281 
i
=0; i<
BITVEC_NPTR
; i++){

282 
	`sqlôe3BôvecDe°roy
(
p
->
u
.
≠Sub
[
i
]);

285 
	`sqlôe3_‰ì
(
p
);

286 
	}
}

292 
u32
 
	$sqlôe3BôvecSize
(
Bôvec
 *
p
){

293  
p
->
iSize
;

294 
	}
}

296 #i‚de‡
SQLITE_UNTESTABLE


303 
	#SETBIT
(
V
,
I
ËV[I>>3] |(1<<(I&7))

	)

304 
	#CLEARBIT
(
V
,
I
ËV[I>>3] &~(1<<(I&7))

	)

305 
	#TESTBIT
(
V
,
I
Ë(V[I>>3]&(1<<(I&7)))!=0

	)

337 
	$sqlôe3BôvecBuûtöTe°
(
sz
, *
aOp
){

338 
Bôvec
 *
pBôvec
 = 0;

339 *
pV
 = 0;

340 
rc
 = -1;

341 
i
, 
nx
, 
pc
, 
›
;

342 *
pTmpS∑˚
;

346 
pBôvec
 = 
	`sqlôe3BôvecCª©e
–
sz
 );

347 
pV
 = 
	`sqlôe3MÆlocZîo
–(
sz
+7)/8 + 1 );

348 
pTmpS∑˚
 = 
	`sqlôe3_mÆloc64
(
BITVEC_SZ
);

349 if–
pBôvec
==0 || 
pV
==0 || 
pTmpS∑˚
==0 ) 
bôvec_íd
;

352 
	`sqlôe3BôvecSë
(0, 1);

353 
	`sqlôe3BôvecCÀ¨
(0, 1, 
pTmpS∑˚
);

356 
pc
 = 0;

357  (
›
 = 
aOp
[
pc
])!=0 ){

358  
›
 ){

362 
nx
 = 4;

363 
i
 = 
aOp
[
pc
+2] - 1;

364 
aOp
[
pc
+2] +=áOp[pc+3];

370 
nx
 = 2;

371 
	`sqlôe3_øndom√ss
((
i
), &i);

375 if–(--
aOp
[
pc
+1]Ë> 0 ) 
nx
 = 0;

376 
pc
 +
nx
;

377 
i
 = (ò& 0x7fffffff)%
sz
;

378 if–(
›
 & 1)!=0 ){

379 
	`SETBIT
(
pV
, (
i
+1));

380 if–
›
!=5 ){

381 if–
	`sqlôe3BôvecSë
(
pBôvec
, 
i
+1ËË
bôvec_íd
;

384 
	`CLEARBIT
(
pV
, (
i
+1));

385 
	`sqlôe3BôvecCÀ¨
(
pBôvec
, 
i
+1, 
pTmpS∑˚
);

394 
rc
 = 
	`sqlôe3BôvecTe°
(0,0Ë+ sqlôe3BôvecTe°(
pBôvec
, 
sz
+1)

395 + 
	`sqlôe3BôvecTe°
(
pBôvec
, 0)

396 + (
	`sqlôe3BôvecSize
(
pBôvec
Ë- 
sz
);

397 
i
=1; i<=
sz
; i++){

398 if–(
	`TESTBIT
(
pV
,
i
))!=
	`sqlôe3BôvecTe°
(
pBôvec
,i) ){

399 
rc
 = 
i
;

405 
bôvec_íd
:

406 
	`sqlôe3_‰ì
(
pTmpS∑˚
);

407 
	`sqlôe3_‰ì
(
pV
);

408 
	`sqlôe3BôvecDe°roy
(
pBôvec
);

409  
rc
;

410 
	}
}

	@btmutex.c

18 
	~"båìI¡.h
"

19 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


20 #i‡
SQLITE_THREADSAFE


27 
	$lockBåìMuãx
(
Båì
 *
p
){

28 
	`as£π
–
p
->
locked
==0 );

29 
	`as£π
–
	`sqlôe3_muãx_nŸhñd
(
p
->
pBt
->
muãx
) );

30 
	`as£π
–
	`sqlôe3_muãx_hñd
(
p
->
db
->
muãx
) );

32 
	`sqlôe3_muãx_íãr
(
p
->
pBt
->
muãx
);

33 
p
->
pBt
->
db
 =Ö->db;

34 
p
->
locked
 = 1;

35 
	}
}

41 
SQLITE_NOINLINE
 
	$u∆ockBåìMuãx
(
Båì
 *
p
){

42 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

43 
	`as£π
–
p
->
locked
==1 );

44 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

45 
	`as£π
–
	`sqlôe3_muãx_hñd
(
p
->
db
->
muãx
) );

46 
	`as£π
–
p
->
db
==
pBt
->db );

48 
	`sqlôe3_muãx_Àave
(
pBt
->
muãx
);

49 
p
->
locked
 = 0;

50 
	}
}

53 
SQLITE_NOINLINE
 
båìLockC¨efuŒy
(
Båì
 *
p
);

71 
	$sqlôe3BåìE¡î
(
Båì
 *
p
){

76 
	`as£π
–
p
->
pNext
==0 ||Ö->pNext->
pBt
>p->pBt );

77 
	`as£π
–
p
->
pPªv
==0 ||Ö->pPªv->
pBt
<p->pBt );

78 
	`as£π
–
p
->
pNext
==0 ||Ö->pNext->
db
==p->db );

79 
	`as£π
–
p
->
pPªv
==0 ||Ö->pPªv->
db
==p->db );

80 
	`as£π
–
p
->
sh¨abÀ
 || (p->
pNext
==0 &&Ö->
pPªv
==0) );

83 
	`as£π
–!
p
->
locked
 ||Ö->
w™tToLock
>0 );

84 
	`as£π
–
p
->
sh¨abÀ
 ||Ö->
w™tToLock
==0 );

87 
	`as£π
–
	`sqlôe3_muãx_hñd
(
p
->
db
->
muãx
) );

91 
	`as£π
–(
p
->
locked
==0 &&Ö->
sh¨abÀ
Ë||Ö->
pBt
->
db
==p->db );

93 if–!
p
->
sh¨abÀ
 ) ;

94 
p
->
w™tToLock
++;

95 if–
p
->
locked
 ) ;

96 
	`båìLockC¨efuŒy
(
p
);

97 
	}
}

105 
SQLITE_NOINLINE
 
	$båìLockC¨efuŒy
(
Båì
 *
p
){

106 
Båì
 *
pL©î
;

112 if–
	`sqlôe3_muãx_åy
(
p
->
pBt
->
muãx
)==
SQLITE_OK
 ){

113 
p
->
pBt
->
db
 =Ö->db;

114 
p
->
locked
 = 1;

123 
pL©î
=
p
->
pNext
;ÖLater;ÖLater=pLater->pNext){

124 
	`as£π
–
pL©î
->
sh¨abÀ
 );

125 
	`as£π
–
pL©î
->
pNext
==0 ||ÖL©î->pNext->
pBt
>pLater->pBt );

126 
	`as£π
–!
pL©î
->
locked
 ||ÖL©î->
w™tToLock
>0 );

127 if–
pL©î
->
locked
 ){

128 
	`u∆ockBåìMuãx
(
pL©î
);

131 
	`lockBåìMuãx
(
p
);

132 
pL©î
=
p
->
pNext
;ÖLater;ÖLater=pLater->pNext){

133 if–
pL©î
->
w™tToLock
 ){

134 
	`lockBåìMuãx
(
pL©î
);

137 
	}
}

143 
	$sqlôe3BåìLóve
(
Båì
 *
p
){

144 
	`as£π
–
	`sqlôe3_muãx_hñd
(
p
->
db
->
muãx
) );

145 if–
p
->
sh¨abÀ
 ){

146 
	`as£π
–
p
->
w™tToLock
>0 );

147 
p
->
w™tToLock
--;

148 if–
p
->
w™tToLock
==0 ){

149 
	`u∆ockBåìMuãx
(
p
);

152 
	}
}

154 #i‚de‡
NDEBUG


161 
	$sqlôe3BåìHﬁdsMuãx
(
Båì
 *
p
){

162 
	`as£π
–
p
->
sh¨abÀ
==0 ||Ö->
locked
==0 ||Ö->
w™tToLock
>0 );

163 
	`as£π
–
p
->
sh¨abÀ
==0 ||Ö->
locked
==0 ||Ö->
db
=ı->
pBt
->db );

164 
	`as£π
–
p
->
sh¨abÀ
==0 ||Ö->
locked
==0 || 
	`sqlôe3_muãx_hñd
’->
pBt
->
muãx
) );

165 
	`as£π
–
p
->
sh¨abÀ
==0 ||Ö->
locked
==0 || 
	`sqlôe3_muãx_hñd
’->
db
->
muãx
) );

167  (
p
->
sh¨abÀ
==0 ||Ö->
locked
);

168 
	}
}

186 
	$sqlôe3BåìE¡îAŒ
(
sqlôe3
 *
db
){

187 
i
;

188 
Båì
 *
p
;

189 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

190 
i
=0; i<
db
->
nDb
; i++){

191 
p
 = 
db
->
aDb
[
i
].
pBt
;

192 if–
p
 ) 
	`sqlôe3BåìE¡î
(p);

194 
	}
}

195 
	$sqlôe3BåìLóveAŒ
(
sqlôe3
 *
db
){

196 
i
;

197 
Båì
 *
p
;

198 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

199 
i
=0; i<
db
->
nDb
; i++){

200 
p
 = 
db
->
aDb
[
i
].
pBt
;

201 if–
p
 ) 
	`sqlôe3BåìLóve
(p);

203 
	}
}

205 #i‚de‡
NDEBUG


212 
	$sqlôe3BåìHﬁdsAŒMuãxes
(
sqlôe3
 *
db
){

213 
i
;

214 if–!
	`sqlôe3_muãx_hñd
(
db
->
muãx
) ){

217 
i
=0; i<
db
->
nDb
; i++){

218 
Båì
 *
p
;

219 
p
 = 
db
->
aDb
[
i
].
pBt
;

220 if–
p
 &&Ö->
sh¨abÀ
 &&

221 (
p
->
w™tToLock
==0 || !
	`sqlôe3_muãx_hñd
’->
pBt
->
muãx
)) ){

226 
	}
}

229 #i‚de‡
NDEBUG


241 
	$sqlôe3SchemaMuãxHñd
(
sqlôe3
 *
db
, 
iDb
, 
Schema
 *
pSchema
){

242 
Båì
 *
p
;

243 
	`as£π
–
db
!=0 );

244 if–
pSchema
 ) 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
,ÖSchema);

245 
	`as£π
–
iDb
>=0 && iDb<
db
->
nDb
 );

246 if–!
	`sqlôe3_muãx_hñd
(
db
->
muãx
) )  0;

247 if–
iDb
==1 )  1;

248 
p
 = 
db
->
aDb
[
iDb
].
pBt
;

249 
	`as£π
–
p
!=0 );

250  
p
->
sh¨abÀ
==0 ||Ö->
locked
==1;

251 
	}
}

265 
	$sqlôe3BåìE¡î
(
Båì
 *
p
){

266 
p
->
pBt
->
db
 =Ö->db;

267 
	}
}

268 
	$sqlôe3BåìE¡îAŒ
(
sqlôe3
 *
db
){

269 
i
;

270 
i
=0; i<
db
->
nDb
; i++){

271 
Båì
 *
p
 = 
db
->
aDb
[
i
].
pBt
;

272 if–
p
 ){

273 
p
->
pBt
->
db
 =Ö->db;

276 
	}
}

279 #i‚de‡
SQLITE_OMIT_INCRBLOB


287 
	$sqlôe3BåìE¡îCurs‹
(
BtCurs‹
 *
pCur
){

288 
	`sqlôe3BåìE¡î
(
pCur
->
pBåì
);

289 
	}
}

290 #i‡
SQLITE_THREADSAFE


291 
	$sqlôe3BåìLóveCurs‹
(
BtCurs‹
 *
pCur
){

292 
	`sqlôe3BåìLóve
(
pCur
->
pBåì
);

293 
	}
}

	@btree.c

16 
	~"båìI¡.h
"

17 
	~"log.h
"

23 c⁄° 
	gzMagicHódî
[] = 
SQLITE_FILE_HEADER
;

30 
	gsqlôe3BåìTø˚
=1;

31 
	#TRACE
(
X
Ëif(
sqlôe3BåìTø˚
){
¥ötf
 X;
	`fÊush
(
°dout
);}

	)

33 
	#TRACE
(
X
)

	)

45 
	#gë2byãNŸZîo
(
X
Ë((((()
	`gë2byã
(X))-1)&0xffff)+1)

	)

50 
	#BTALLOC_ANY
 0

	)

51 
	#BTALLOC_EXACT
 1

	)

52 
	#BTALLOC_LE
 2

	)

60 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


61 
	#IfNŸOmôAV
(
ex¥
Ë”x¥)

	)

63 
	#IfNŸOmôAV
(
ex¥
Ë0

	)

66 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


75 #ifde‡
SQLITE_TEST


76 
BtSh¨ed
 *
SQLITE_WSD
 
	gsqlôe3Sh¨edCacheLi°
 = 0;

78 
BtSh¨ed
 *
SQLITE_WSD
 
	gsqlôe3Sh¨edCacheLi°
 = 0;

82 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


90 
	$sqlôe3_íabÀ_sh¨ed_ˇche
(
íabÀ
){

91 
sqlôe3GlobÆC⁄fig
.
sh¨edCacheE«bÀd
 = 
íabÀ
;

92  
SQLITE_OK
;

93 
	}
}

98 #ifde‡
SQLITE_OMIT_SHARED_CACHE


108 
	#quîySh¨edCacheTabÀLock
(
a
,
b
,
c
Ë
SQLITE_OK


	)

109 
	#£tSh¨edCacheTabÀLock
(
a
,
b
,
c
Ë
SQLITE_OK


	)

110 
	#˛órAŒSh¨edCacheTabÀLocks
(
a
)

	)

111 
	#downgødeAŒSh¨edCacheTabÀLocks
(
a
)

	)

112 
	#hasSh¨edCacheTabÀLock
(
a
,
b
,
c
,
d
Ë1

	)

113 
	#hasRódC⁄Êi˘s
(
a
, 
b
Ë0

	)

116 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


118 #ifde‡
SQLITE_DEBUG


141 
	$hasSh¨edCacheTabÀLock
(

142 
Båì
 *
pBåì
,

143 
Pgno
 
iRoŸ
,

144 
isIndex
,

145 
eLockTy≥


147 
Schema
 *
pSchema
 = (Schem®*)
pBåì
->
pBt
->pSchema;

148 
Pgno
 
iTab
 = 0;

149 
BtLock
 *
pLock
;

155 if–(
pBåì
->
sh¨abÀ
==0)

156 || (
eLockTy≥
==
READ_LOCK
 && (
pBåì
->
db
->
Êags
 & 
SQLITE_RódUncommôãd
))

166 if–
isIndex
 && (!
pSchema
 || (pSchema->
schemaFœgs
&
DB_SchemaLﬂded
)==0) ){

174 if–
isIndex
 ){

175 
HashEÀm
 *
p
;

176 
p
=
	`sqlôeHashFú°
(&
pSchema
->
idxHash
);Ö;Ö=
	`sqlôeHashNext
(p)){

177 
Index
 *
pIdx
 = (Index *)
	`sqlôeHashD©a
(
p
);

178 if–
pIdx
->
äum
==()
iRoŸ
 ){

179 if–
iTab
 ){

185 
iTab
 = 
pIdx
->
pTabÀ
->
äum
;

189 
iTab
 = 
iRoŸ
;

195 
pLock
=
pBåì
->
pBt
->pLock;ÖLock;ÖLockıLock->
pNext
){

196 if–
pLock
->
pBåì
==pBtree

197 && (
pLock
->
iTabÀ
==
iTab
 || (pLock->
eLock
==
WRITE_LOCK
 &&ÖLock->iTable==1))

198 && 
pLock
->
eLock
>=
eLockTy≥


206 
	}
}

209 #ifde‡
SQLITE_DEBUG


228 
	$hasRódC⁄Êi˘s
(
Båì
 *
pBåì
, 
Pgno
 
iRoŸ
){

229 
BtCurs‹
 *
p
;

230 
p
=
pBåì
->
pBt
->
pCurs‹
;Ö;Öı->
pNext
){

231 if–
p
->
pgnoRoŸ
==
iRoŸ


232 && 
p
->
pBåì
!=pBtree

233 && 0==(
p
->
pBåì
->
db
->
Êags
 & 
SQLITE_RódUncommôãd
)

239 
	}
}

248 
	$quîySh¨edCacheTabÀLock
(
Båì
 *
p
, 
Pgno
 
iTab
, 
u8
 
eLock
){

249 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

250 
BtLock
 *
pIãr
;

252 
	`as£π
–
	`sqlôe3BåìHﬁdsMuãx
(
p
) );

253 
	`as£π
–
eLock
==
READ_LOCK
 ||ÉLock==
WRITE_LOCK
 );

254 
	`as£π
–
p
->
db
!=0 );

255 
	`as£π
–!(
p
->
db
->
Êags
&
SQLITE_RódUncommôãd
)||
eLock
==
WRITE_LOCK
||
iTab
==1 );

261 
	`as£π
–
eLock
==
READ_LOCK
 || (
p
==
pBt
->
pWrôî
 &&Ö->
öTøns
==
TRANS_WRITE
) );

262 
	`as£π
–
eLock
==
READ_LOCK
 || 
pBt
->
öTønß˘i⁄
==
TRANS_WRITE
 );

265 if–!
p
->
sh¨abÀ
 ){

266  
SQLITE_OK
;

272 if–
pBt
->
pWrôî
!=
p
 && (pBt->
btsFœgs
 & 
BTS_EXCLUSIVE
)!=0 ){

273 
	`sqlôe3C⁄√˘i⁄Blocked
(
p
->
db
, 
pBt
->
pWrôî
->db);

274  
SQLITE_LOCKED_SHAREDCACHE
;

277 
pIãr
=
pBt
->
pLock
;ÖIãr;ÖIãrıIãr->
pNext
){

287 
	`as£π
–
pIãr
->
eLock
==
READ_LOCK
 ||ÖIãr->eLock==
WRITE_LOCK
 );

288 
	`as£π
–
eLock
==
READ_LOCK
 || 
pIãr
->
pBåì
==
p
 ||ÖIter->eLock==READ_LOCK);

289 if–
pIãr
->
pBåì
!=
p
 &&ÖIãr->
iTabÀ
==
iTab
 &&ÖIãr->
eLock
!=eLock ){

290 
	`sqlôe3C⁄√˘i⁄Blocked
(
p
->
db
, 
pIãr
->
pBåì
->db);

291 if–
eLock
==
WRITE_LOCK
 ){

292 
	`as£π
–
p
==
pBt
->
pWrôî
 );

293 
pBt
->
btsFœgs
 |
BTS_PENDING
;

295  
SQLITE_LOCKED_SHAREDCACHE
;

298  
SQLITE_OK
;

299 
	}
}

302 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


320 
	$£tSh¨edCacheTabÀLock
(
Båì
 *
p
, 
Pgno
 
iTabÀ
, 
u8
 
eLock
){

321 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

322 
BtLock
 *
pLock
 = 0;

323 
BtLock
 *
pIãr
;

325 
	`as£π
–
	`sqlôe3BåìHﬁdsMuãx
(
p
) );

326 
	`as£π
–
eLock
==
READ_LOCK
 ||ÉLock==
WRITE_LOCK
 );

327 
	`as£π
–
p
->
db
!=0 );

333 
	`as£π
–0==(
p
->
db
->
Êags
&
SQLITE_RódUncommôãd
Ë|| 
eLock
==
WRITE_LOCK
 );

337 
	`as£π
–
p
->
sh¨abÀ
 );

338 
	`as£π
–
SQLITE_OK
==
	`quîySh¨edCacheTabÀLock
(
p
, 
iTabÀ
, 
eLock
) );

341 
pIãr
=
pBt
->
pLock
;ÖIãr;ÖIãrıIãr->
pNext
){

342 if–
pIãr
->
iTabÀ
==iTabÀ &&ÖIãr->
pBåì
==
p
 ){

343 
pLock
 = 
pIãr
;

351 if–!
pLock
 ){

352 
pLock
 = (
BtLock
 *)
	`sqlôe3MÆlocZîo
((BtLock));

353 if–!
pLock
 ){

354  
SQLITE_NOMEM_BKPT
;

356 
pLock
->
iTabÀ
 = iTable;

357 
pLock
->
pBåì
 = 
p
;

358 
pLock
->
pNext
 = 
pBt
->pLock;

359 
pBt
->
pLock
 =ÖLock;

366 
	`as£π
–
WRITE_LOCK
>
READ_LOCK
 );

367 if–
eLock
>
pLock
->eLock ){

368 
pLock
->
eLock
 =ÉLock;

371  
SQLITE_OK
;

372 
	}
}

375 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


384 
	$˛órAŒSh¨edCacheTabÀLocks
(
Båì
 *
p
){

385 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

386 
BtLock
 **
µIãr
 = &
pBt
->
pLock
;

388 
	`as£π
–
	`sqlôe3BåìHﬁdsMuãx
(
p
) );

389 
	`as£π
–
p
->
sh¨abÀ
 || 0==*
µIãr
 );

390 
	`as£π
–
p
->
öTøns
>0 );

392  *
µIãr
 ){

393 
BtLock
 *
pLock
 = *
µIãr
;

394 
	`as£π
–(
pBt
->
btsFœgs
 & 
BTS_EXCLUSIVE
)==0 ||ÖBt->
pWrôî
==
pLock
->
pBåì
 );

395 
	`as£π
–
pLock
->
pBåì
->
öTøns
>ıLock->
eLock
 );

396 if–
pLock
->
pBåì
==
p
 ){

397 *
µIãr
 = 
pLock
->
pNext
;

398 
	`as£π
–
pLock
->
iTabÀ
!=1 ||ÖLock==&
p
->
lock
 );

399 if–
pLock
->
iTabÀ
!=1 ){

400 
	`sqlôe3_‰ì
(
pLock
);

403 
µIãr
 = &
pLock
->
pNext
;

407 
	`as£π
–(
pBt
->
btsFœgs
 & 
BTS_PENDING
)==0 ||ÖBt->
pWrôî
 );

408 if–
pBt
->
pWrôî
==
p
 ){

409 
pBt
->
pWrôî
 = 0;

410 
pBt
->
btsFœgs
 &~(
BTS_EXCLUSIVE
|
BTS_PENDING
);

411 }if–
pBt
->
nTønß˘i⁄
==2 ){

421 
pBt
->
btsFœgs
 &~
BTS_PENDING
;

423 
	}
}

428 
	$downgødeAŒSh¨edCacheTabÀLocks
(
Båì
 *
p
){

429 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

430 if–
pBt
->
pWrôî
==
p
 ){

431 
BtLock
 *
pLock
;

432 
pBt
->
pWrôî
 = 0;

433 
pBt
->
btsFœgs
 &~(
BTS_EXCLUSIVE
|
BTS_PENDING
);

434 
pLock
=
pBt
->pLock;ÖLock;ÖLockıLock->
pNext
){

435 
	`as£π
–
pLock
->
eLock
==
READ_LOCK
 ||ÖLock->
pBåì
==
p
 );

436 
pLock
->
eLock
 = 
READ_LOCK
;

439 
	}
}

443 
ªÀa£Page
(
MemPage
 *
pPage
);

450 #ifde‡
SQLITE_DEBUG


451 
	$curs‹HﬁdsMuãx
(
BtCurs‹
 *
p
){

452  
	`sqlôe3_muãx_hñd
(
p
->
pBt
->
muãx
);

453 
	}
}

463 
	$curs‹OwnsBtSh¨ed
(
BtCurs‹
 *
p
){

464 
	`as£π
–
	`curs‹HﬁdsMuãx
(
p
) );

465  (
p
->
pBåì
->
db
=ı->
pBt
->db);

466 
	}
}

473 
	#övÆid©eOvîÊowCache
(
pCur
Ë’Cur->
curFœgs
 &~
BTCF_VÆidOvÊ
)

	)

479 
	$övÆid©eAŒOvîÊowCache
(
BtSh¨ed
 *
pBt
){

480 
BtCurs‹
 *
p
;

481 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

482 
p
=
pBt
->
pCurs‹
;Ö;Öı->
pNext
){

483 
	`övÆid©eOvîÊowCache
(
p
);

485 
	}
}

487 #i‚de‡
SQLITE_OMIT_INCRBLOB


501 
	$övÆid©eIn¸blobCurs‹s
(

502 
Båì
 *
pBåì
,

503 
i64
 
iRow
,

504 
isCÀ¨TabÀ


506 
BtCurs‹
 *
p
;

507 if–
pBåì
->
hasIn¸blobCur
==0 ) ;

508 
	`as£π
–
	`sqlôe3BåìHﬁdsMuãx
(
pBåì
) );

509 
pBåì
->
hasIn¸blobCur
 = 0;

510 
p
=
pBåì
->
pBt
->
pCurs‹
;Ö;Öı->
pNext
){

511 if–(
p
->
curFœgs
 & 
BTCF_In¸blob
)!=0 ){

512 
pBåì
->
hasIn¸blobCur
 = 1;

513 if–
isCÀ¨TabÀ
 || 
p
->
öfo
.
nKey
==
iRow
 ){

514 
p
->
eSèã
 = 
CURSOR_INVALID
;

518 
	}
}

522 
	#övÆid©eIn¸blobCurs‹s
(
x
,
y
,
z
)

	)

560 
	$båìSëHasC⁄ã¡
(
BtSh¨ed
 *
pBt
, 
Pgno
 
pgno
){

561 
rc
 = 
SQLITE_OK
;

562 if–!
pBt
->
pHasC⁄ã¡
 ){

563 
	`as£π
–
pgno
<=
pBt
->
nPage
 );

564 
pBt
->
pHasC⁄ã¡
 = 
	`sqlôe3BôvecCª©e
’Bt->
nPage
);

565 if–!
pBt
->
pHasC⁄ã¡
 ){

566 
rc
 = 
SQLITE_NOMEM_BKPT
;

569 if–
rc
==
SQLITE_OK
 && 
pgno
<=
	`sqlôe3BôvecSize
(
pBt
->
pHasC⁄ã¡
) ){

570 
rc
 = 
	`sqlôe3BôvecSë
(
pBt
->
pHasC⁄ã¡
, 
pgno
);

572  
rc
;

573 
	}
}

582 
	$båìGëHasC⁄ã¡
(
BtSh¨ed
 *
pBt
, 
Pgno
 
pgno
){

583 
Bôvec
 *
p
 = 
pBt
->
pHasC⁄ã¡
;

584  (
p
 && (
pgno
>
	`sqlôe3BôvecSize
’Ë|| 
	`sqlôe3BôvecTe°
(p,Ögno)));

585 
	}
}

591 
	$båìCÀ¨HasC⁄ã¡
(
BtSh¨ed
 *
pBt
){

592 
	`sqlôe3BôvecDe°roy
(
pBt
->
pHasC⁄ã¡
);

593 
pBt
->
pHasC⁄ã¡
 = 0;

594 
	}
}

599 
	$båìRñó£AŒCurs‹Pages
(
BtCurs‹
 *
pCur
){

600 
i
;

601 
i
=0; i<=
pCur
->
iPage
; i++){

602 
	`ªÀa£Page
(
pCur
->
≠Page
[
i
]);

603 
pCur
->
≠Page
[
i
] = 0;

605 
pCur
->
iPage
 = -1;

606 
	}
}

621 
	$ßveCurs‹Key
(
BtCurs‹
 *
pCur
){

622 
rc
 = 
SQLITE_OK
;

623 
	`as£π
–
CURSOR_VALID
==
pCur
->
eSèã
 );

624 
	`as£π
–0==
pCur
->
pKey
 );

625 
	`as£π
–
	`curs‹HﬁdsMuãx
(
pCur
) );

627 if–
pCur
->
curI¡Key
 ){

629 
pCur
->
nKey
 = 
	`sqlôe3BåìI¡egîKey
(pCur);

632 *
pKey
;

633 
pCur
->
nKey
 = 
	`sqlôe3BåìPaylﬂdSize
(pCur);

634 
pKey
 = 
	`sqlôe3MÆloc
–
pCur
->
nKey
 );

635 if–
pKey
 ){

636 
rc
 = 
	`sqlôe3BåìPaylﬂd
(
pCur
, 0, (ÌCur->
nKey
, 
pKey
);

637 if–
rc
==
SQLITE_OK
 ){

638 
pCur
->
pKey
 =ÖKey;

640 
	`sqlôe3_‰ì
(
pKey
);

643 
rc
 = 
SQLITE_NOMEM_BKPT
;

646 
	`as£π
–!
pCur
->
curI¡Key
 || !pCur->
pKey
 );

647  
rc
;

648 
	}
}

657 
	$ßveCurs‹Posôi⁄
(
BtCurs‹
 *
pCur
){

658 
rc
;

660 
	`as£π
–
CURSOR_VALID
==
pCur
->
eSèã
 || 
CURSOR_SKIPNEXT
==pCur->eState );

661 
	`as£π
–0==
pCur
->
pKey
 );

662 
	`as£π
–
	`curs‹HﬁdsMuãx
(
pCur
) );

664 if–
pCur
->
eSèã
==
CURSOR_SKIPNEXT
 ){

665 
pCur
->
eSèã
 = 
CURSOR_VALID
;

667 
pCur
->
skùNext
 = 0;

670 
rc
 = 
	`ßveCurs‹Key
(
pCur
);

671 if–
rc
==
SQLITE_OK
 ){

672 
	`båìRñó£AŒCurs‹Pages
(
pCur
);

673 
pCur
->
eSèã
 = 
CURSOR_REQUIRESEEK
;

676 
pCur
->
curFœgs
 &~(
BTCF_VÆidNKey
|
BTCF_VÆidOvÊ
|
BTCF_AtLa°
);

677  
rc
;

678 
	}
}

681 
SQLITE_NOINLINE
 
ßveCurs‹sOnLi°
(
BtCurs‹
*,
Pgno
,BtCursor*);

704 
	$ßveAŒCurs‹s
(
BtSh¨ed
 *
pBt
, 
Pgno
 
iRoŸ
, 
BtCurs‹
 *
pEx˚±
){

705 
BtCurs‹
 *
p
;

706 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

707 
	`as£π
–
pEx˚±
==0 ||ÖEx˚±->
pBt
==pBt );

708 
p
=
pBt
->
pCurs‹
;Ö;Öı->
pNext
){

709 if–
p
!=
pEx˚±
 && (0==
iRoŸ
 ||Ö->
pgnoRoŸ
==iRoot) ) ;

711 if–
p
 )  
	`ßveCurs‹sOnLi°
’, 
iRoŸ
, 
pEx˚±
);

712 if–
pEx˚±
 )ÖEx˚±->
curFœgs
 &~
BTCF_Mu…ùÀ
;

713  
SQLITE_OK
;

714 
	}
}

721 
SQLITE_NOINLINE
 
	$ßveCurs‹sOnLi°
(

722 
BtCurs‹
 *
p
,

723 
Pgno
 
iRoŸ
,

724 
BtCurs‹
 *
pEx˚±


727 if–
p
!=
pEx˚±
 && (0==
iRoŸ
 ||Ö->
pgnoRoŸ
==iRoot) ){

728 if–
p
->
eSèã
==
CURSOR_VALID
 ||Ö->eSèã==
CURSOR_SKIPNEXT
 ){

729 
rc
 = 
	`ßveCurs‹Posôi⁄
(
p
);

730 if–
SQLITE_OK
!=
rc
 ){

731  
rc
;

734 
	`ã°ˇ£
–
p
->
iPage
>0 );

735 
	`båìRñó£AŒCurs‹Pages
(
p
);

738 
p
 =Ö->
pNext
;

739 } 
p
 );

740  
SQLITE_OK
;

741 
	}
}

746 
	$sqlôe3BåìCÀ¨Curs‹
(
BtCurs‹
 *
pCur
){

747 
	`as£π
–
	`curs‹HﬁdsMuãx
(
pCur
) );

748 
	`sqlôe3_‰ì
(
pCur
->
pKey
);

749 
pCur
->
pKey
 = 0;

750 
pCur
->
eSèã
 = 
CURSOR_INVALID
;

751 
	`sqlôe3LogCurs‹CÀ¨
(
pCur
);

752 
	}
}

759 
	$båìMovëo
(

760 
BtCurs‹
 *
pCur
,

761 c⁄° *
pKey
,

762 
i64
 
nKey
,

763 
büs
,

764 *
pRes


766 
rc
;

767 
U≈ackedRec‹d
 *
pIdxKey
;

769 if–
pKey
 ){

770 
	`as£π
–
nKey
==(
i64
)()nKey );

771 
pIdxKey
 = 
	`sqlôe3VdbeAŒocU≈ackedRec‹d
(
pCur
->
pKeyInfo
);

772 if–
pIdxKey
==0 )  
SQLITE_NOMEM_BKPT
;

773 
	`sqlôe3VdbeRec‹dU≈ack
(
pCur
->
pKeyInfo
, ()
nKey
, 
pKey
, 
pIdxKey
);

774 if–
pIdxKey
->
nFõld
==0 ){

775 
rc
 = 
SQLITE_CORRUPT_BKPT
;

776 
movëo_d⁄e
;

779 
pIdxKey
 = 0;

781 
rc
 = 
	`sqlôe3BåìMovëoU≈acked
(
pCur
, 
pIdxKey
, 
nKey
, 
büs
, 
pRes
);

782 
movëo_d⁄e
:

783 if–
pIdxKey
 ){

784 
	`sqlôe3DbFªe
(
pCur
->
pKeyInfo
->
db
, 
pIdxKey
);

786  
rc
;

787 
	}
}

796 
	$båìRe°‹eCurs‹Posôi⁄
(
BtCurs‹
 *
pCur
){

797 
rc
;

798 
skùNext
;

799 
	`as£π
–
	`curs‹OwnsBtSh¨ed
(
pCur
) );

800 
	`as£π
–
pCur
->
eSèã
>=
CURSOR_REQUIRESEEK
 );

801 if–
pCur
->
eSèã
==
CURSOR_FAULT
 ){

802  
pCur
->
skùNext
;

804 
pCur
->
eSèã
 = 
CURSOR_INVALID
;

805 
rc
 = 
	`båìMovëo
(
pCur
,ÖCur->
pKey
,ÖCur->
nKey
, 0, &
skùNext
);

806 if–
rc
==
SQLITE_OK
 ){

807 
	`sqlôe3_‰ì
(
pCur
->
pKey
);

808 
pCur
->
pKey
 = 0;

809 
	`as£π
–
pCur
->
eSèã
==
CURSOR_VALID
 ||ÖCur->eSèã==
CURSOR_INVALID
 );

810 
pCur
->
skùNext
 |= skipNext;

811 if–
pCur
->
skùNext
 &&ÖCur->
eSèã
==
CURSOR_VALID
 ){

812 
pCur
->
eSèã
 = 
CURSOR_SKIPNEXT
;

815  
rc
;

816 
	}
}

818 
	#ª°‹eCurs‹Posôi⁄
(
p
) \

819 (
p
->
eSèã
>=
CURSOR_REQUIRESEEK
 ? \

820 
	`båìRe°‹eCurs‹Posôi⁄
(
p
) : \

821 
SQLITE_OK
)

	)

835 
	$sqlôe3BåìCurs‹HasMoved
(
BtCurs‹
 *
pCur
){

836  
pCur
->
eSèã
!=
CURSOR_VALID
;

837 
	}
}

852 
	$sqlôe3BåìCurs‹Re°‹e
(
BtCurs‹
 *
pCur
, *
pDif„ª¡Row
){

853 
rc
;

855 
	`sqlôe3LogCurs‹Re°‹e
(
pCur
);

856 
	`as£π
–
pCur
!=0 );

857 
	`as£π
–
pCur
->
eSèã
!=
CURSOR_VALID
 );

858 
rc
 = 
	`ª°‹eCurs‹Posôi⁄
(
pCur
);

859 if–
rc
 ){

860 *
pDif„ª¡Row
 = 1;

861  
rc
;

863 if–
pCur
->
eSèã
!=
CURSOR_VALID
 ){

864 *
pDif„ª¡Row
 = 1;

866 
	`as£π
–
pCur
->
skùNext
==0 );

867 *
pDif„ª¡Row
 = 0;

869  
SQLITE_OK
;

870 
	}
}

872 #ifde‡
SQLITE_ENABLE_CURSOR_HINTS


878 
	$sqlôe3BåìCurs‹Höt
(
BtCurs‹
 *
pCur
, 
eHötTy≥
, ...){

880 
	}
}

886 
	$sqlôe3BåìCurs‹HötFœgs
(
BtCurs‹
 *
pCur
, 
x
){

887 
	`as£π
–
x
==
BTREE_SEEK_EQ
 || x==
BTREE_BULKLOAD
 || x==0 );

888 
pCur
->
höts
 = 
x
;

889 
	}
}

892 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


902 
Pgno
 
	$±rm≠Pagío
(
BtSh¨ed
 *
pBt
, 
Pgno
 
pgno
){

903 
nPagesPîM≠Page
;

904 
Pgno
 
iPåM≠
, 
ªt
;

905 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

906 if–
pgno
<2 )  0;

907 
nPagesPîM≠Page
 = (
pBt
->
ußbÀSize
/5)+1;

908 
iPåM≠
 = (
pgno
-2)/
nPagesPîM≠Page
;

909 
ªt
 = (
iPåM≠
*
nPagesPîM≠Page
) + 2;

910 if–
ªt
==
	`PENDING_BYTE_PAGE
(
pBt
) ){

911 
ªt
++;

913  
ªt
;

914 
	}
}

926 
	$±rm≠Put
(
BtSh¨ed
 *
pBt
, 
Pgno
 
key
, 
u8
 
eTy≥
, Pgnÿ
∑ª¡
, *
pRC
){

927 
DbPage
 *
pDbPage
;

928 
u8
 *
pPåm≠
;

929 
Pgno
 
iPåm≠
;

930 
off£t
;

931 
rc
;

933 if–*
pRC
 ) ;

935 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

937 
	`as£π
–0==
	`PTRMAP_ISPAGE
(
pBt
, 
	`PENDING_BYTE_PAGE
(pBt)) );

939 
	`as£π
–
pBt
->
autoVacuum
 );

940 if–
key
==0 ){

941 *
pRC
 = 
SQLITE_CORRUPT_BKPT
;

944 
iPåm≠
 = 
	`PTRMAP_PAGENO
(
pBt
, 
key
);

945 
rc
 = 
	`sqlôe3PagîGë
(
pBt
->
pPagî
, 
iPåm≠
, &
pDbPage
, 0);

946 if–
rc
!=
SQLITE_OK
 ){

947 *
pRC
 = 
rc
;

950 
off£t
 = 
	`PTRMAP_PTROFFSET
(
iPåm≠
, 
key
);

951 if–
off£t
<0 ){

952 *
pRC
 = 
SQLITE_CORRUPT_BKPT
;

953 
±rm≠_exô
;

955 
	`as£π
–
off£t
 <()
pBt
->
ußbÀSize
-5 );

956 
pPåm≠
 = (
u8
 *)
	`sqlôe3PagîGëD©a
(
pDbPage
);

958 if–
eTy≥
!=
pPåm≠
[
off£t
] || 
	`gë4byã
(&pPåm≠[off£t+1])!=
∑ª¡
 ){

959 
	`TRACE
(("PTRMAP_UPDATE: %d->(%d,%d)\n", 
key
, 
eTy≥
, 
∑ª¡
));

960 *
pRC

rc
 = 
	`sqlôe3PagîWrôe
(
pDbPage
);

961 if–
rc
==
SQLITE_OK
 ){

962 
pPåm≠
[
off£t
] = 
eTy≥
;

963 
	`put4byã
(&
pPåm≠
[
off£t
+1], 
∑ª¡
);

967 
±rm≠_exô
:

968 
	`sqlôe3PagîUƒef
(
pDbPage
);

969 
	}
}

978 
	$±rm≠Gë
(
BtSh¨ed
 *
pBt
, 
Pgno
 
key
, 
u8
 *
pETy≥
, Pgnÿ*
pPgno
){

979 
DbPage
 *
pDbPage
;

980 
iPåm≠
;

981 
u8
 *
pPåm≠
;

982 
off£t
;

983 
rc
;

985 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

987 
iPåm≠
 = 
	`PTRMAP_PAGENO
(
pBt
, 
key
);

988 
rc
 = 
	`sqlôe3PagîGë
(
pBt
->
pPagî
, 
iPåm≠
, &
pDbPage
, 0);

989 if–
rc
!=0 ){

990  
rc
;

992 
pPåm≠
 = (
u8
 *)
	`sqlôe3PagîGëD©a
(
pDbPage
);

994 
off£t
 = 
	`PTRMAP_PTROFFSET
(
iPåm≠
, 
key
);

995 if–
off£t
<0 ){

996 
	`sqlôe3PagîUƒef
(
pDbPage
);

997  
SQLITE_CORRUPT_BKPT
;

999 
	`as£π
–
off£t
 <()
pBt
->
ußbÀSize
-5 );

1000 
	`as£π
–
pETy≥
!=0 );

1001 *
pETy≥
 = 
pPåm≠
[
off£t
];

1002 if–
pPgno
 ) *pPgnÿ
	`gë4byã
(&
pPåm≠
[
off£t
+1]);

1004 
	`sqlôe3PagîUƒef
(
pDbPage
);

1005 if–*
pETy≥
<1 || *pETy≥>5 )  
SQLITE_CORRUPT_BKPT
;

1006  
SQLITE_OK
;

1007 
	}
}

1010 
	#±rm≠Put
(
w
,
x
,
y
,
z
,
rc
)

	)

1011 
	#±rm≠Gë
(
w
,
x
,
y
,
z
Ë
SQLITE_OK


	)

1012 
	#±rm≠PutOvÊPå
(
x
, 
y
, 
rc
)

	)

1025 
	#födCñl
(
P
,
I
) \

1026 ((
P
)->
aD©a
 + ((P)->
maskPage
 & 
	`gë2byãAlig√d
(&(P)->
aCñlIdx
[2*(
I
)])))

	)

1027 
	#födCñlPa°På
(
P
,
I
) \

1028 ((
P
)->
aD©aOf°
 + ((P)->
maskPage
 & 
	`gë2byãAlig√d
(&(P)->
aCñlIdx
[2*(
I
)])))

	)

1037 
SQLITE_NOINLINE
 
	$båìP¨£CñlAdju°SizeF‹OvîÊow
(

1038 
MemPage
 *
pPage
,

1039 
u8
 *
pCñl
,

1040 
CñlInfo
 *
pInfo


1051 
möLoˇl
;

1052 
maxLoˇl
;

1053 
suΩlus
;

1055 
möLoˇl
 = 
pPage
->minLocal;

1056 
maxLoˇl
 = 
pPage
->maxLocal;

1057 
suΩlus
 = 
möLoˇl
 + (
pInfo
->
nPaylﬂd
 - möLoˇl)%(
pPage
->
pBt
->
ußbÀSize
-4);

1058 
	`ã°ˇ£
–
suΩlus
==
maxLoˇl
 );

1059 
	`ã°ˇ£
–
suΩlus
==
maxLoˇl
+1 );

1060 if–
suΩlus
 <
maxLoˇl
 ){

1061 
pInfo
->
nLoˇl
 = (
u16
)
suΩlus
;

1063 
pInfo
->
nLoˇl
 = (
u16
)
möLoˇl
;

1065 
pInfo
->
nSize
 = (
u16
)(&pInfo->
pPaylﬂd
[pInfo->
nLoˇl
] - 
pCñl
) + 4;

1066 
	}
}

1082 
	$båìP¨£CñlPåNoPaylﬂd
(

1083 
MemPage
 *
pPage
,

1084 
u8
 *
pCñl
,

1085 
CñlInfo
 *
pInfo


1087 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pPage
->
pBt
->
muãx
) );

1088 
	`as£π
–
pPage
->
Àaf
==0 );

1089 
	`as£π
–
pPage
->
chûdPåSize
==4 );

1090 #i‚de‡
SQLITE_DEBUG


1091 
	`UNUSED_PARAMETER
(
pPage
);

1093 
pInfo
->
nSize
 = 4 + 
	`gëV¨öt
(&
pCñl
[4], (
u64
*)&pInfo->
nKey
);

1094 
pInfo
->
nPaylﬂd
 = 0;

1095 
pInfo
->
nLoˇl
 = 0;

1096 
pInfo
->
pPaylﬂd
 = 0;

1098 
	}
}

1099 
	$båìP¨£CñlPå
(

1100 
MemPage
 *
pPage
,

1101 
u8
 *
pCñl
,

1102 
CñlInfo
 *
pInfo


1104 
u8
 *
pIãr
;

1105 
u32
 
nPaylﬂd
;

1106 
u64
 
iKey
;

1108 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pPage
->
pBt
->
muãx
) );

1109 
	`as£π
–
pPage
->
Àaf
==0 ||ÖPage->leaf==1 );

1110 
	`as£π
–
pPage
->
ötKeyLóf
 );

1111 
	`as£π
–
pPage
->
chûdPåSize
==0 );

1112 
pIãr
 = 
pCñl
;

1120 
nPaylﬂd
 = *
pIãr
;

1121 if–
nPaylﬂd
>=0x80 ){

1122 
u8
 *
pEnd
 = &
pIãr
[8];

1123 
nPaylﬂd
 &= 0x7f;

1125 
nPaylﬂd
 = (nPaylﬂd<<7Ë| (*++
pIãr
 & 0x7f);

1126 } (*
pIãr
)>=0x80 &&ÖIãr<
pEnd
 );

1128 
pIãr
++;

1136 
iKey
 = *
pIãr
;

1137 if–
iKey
>=0x80 ){

1138 
u8
 *
pEnd
 = &
pIãr
[7];

1139 
iKey
 &= 0x7f;

1141 
iKey
 = (iKey<<7Ë| (*++
pIãr
 & 0x7f);

1142 if–(*
pIãr
)<0x80 ) ;

1143 if–
pIãr
>=
pEnd
 ){

1144 
iKey
 = (iKey<<8Ë| *++
pIãr
;

1149 
pIãr
++;

1151 
pInfo
->
nKey
 = *(
i64
*)&
iKey
;

1152 
pInfo
->
nPaylﬂd
 =ÇPayload;

1153 
pInfo
->
pPaylﬂd
 = 
pIãr
;

1154 
	`ã°ˇ£
–
nPaylﬂd
==
pPage
->
maxLoˇl
 );

1155 
	`ã°ˇ£
–
nPaylﬂd
==
pPage
->
maxLoˇl
+1 );

1156 if–
nPaylﬂd
<=
pPage
->
maxLoˇl
 ){

1160 
pInfo
->
nSize
 = 
nPaylﬂd
 + (
u16
)(
pIãr
 - 
pCñl
);

1161 if–
pInfo
->
nSize
<4 )ÖInfo->nSize = 4;

1162 
pInfo
->
nLoˇl
 = (
u16
)
nPaylﬂd
;

1164 
	`båìP¨£CñlAdju°SizeF‹OvîÊow
(
pPage
, 
pCñl
, 
pInfo
);

1166 
	}
}

1167 
	$båìP¨£CñlPåIndex
(

1168 
MemPage
 *
pPage
,

1169 
u8
 *
pCñl
,

1170 
CñlInfo
 *
pInfo


1172 
u8
 *
pIãr
;

1173 
u32
 
nPaylﬂd
;

1175 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pPage
->
pBt
->
muãx
) );

1176 
	`as£π
–
pPage
->
Àaf
==0 ||ÖPage->leaf==1 );

1177 
	`as£π
–
pPage
->
ötKeyLóf
==0 );

1178 
pIãr
 = 
pCñl
 + 
pPage
->
chûdPåSize
;

1179 
nPaylﬂd
 = *
pIãr
;

1180 if–
nPaylﬂd
>=0x80 ){

1181 
u8
 *
pEnd
 = &
pIãr
[8];

1182 
nPaylﬂd
 &= 0x7f;

1184 
nPaylﬂd
 = (nPaylﬂd<<7Ë| (*++
pIãr
 & 0x7f);

1185 } *(
pIãr
)>=0x80 &&ÖIãr<
pEnd
 );

1187 
pIãr
++;

1188 
pInfo
->
nKey
 = 
nPaylﬂd
;

1189 
pInfo
->
nPaylﬂd
 =ÇPayload;

1190 
pInfo
->
pPaylﬂd
 = 
pIãr
;

1191 
	`ã°ˇ£
–
nPaylﬂd
==
pPage
->
maxLoˇl
 );

1192 
	`ã°ˇ£
–
nPaylﬂd
==
pPage
->
maxLoˇl
+1 );

1193 if–
nPaylﬂd
<=
pPage
->
maxLoˇl
 ){

1197 
pInfo
->
nSize
 = 
nPaylﬂd
 + (
u16
)(
pIãr
 - 
pCñl
);

1198 if–
pInfo
->
nSize
<4 )ÖInfo->nSize = 4;

1199 
pInfo
->
nLoˇl
 = (
u16
)
nPaylﬂd
;

1201 
	`båìP¨£CñlAdju°SizeF‹OvîÊow
(
pPage
, 
pCñl
, 
pInfo
);

1203 
	}
}

1204 
	$båìP¨£Cñl
(

1205 
MemPage
 *
pPage
,

1206 
iCñl
,

1207 
CñlInfo
 *
pInfo


1209 
pPage
->
	`xP¨£Cñl
’Page, 
	`födCñl
’Page, 
iCñl
), 
pInfo
);

1210 
	}
}

1224 
u16
 
	$˚ŒSizePå
(
MemPage
 *
pPage
, 
u8
 *
pCñl
){

1225 
u8
 *
pIãr
 = 
pCñl
 + 
pPage
->
chûdPåSize
;

1226 
u8
 *
pEnd
;

1227 
u32
 
nSize
;

1229 #ifde‡
SQLITE_DEBUG


1234 
CñlInfo
 
debugöfo
;

1235 
pPage
->
	`xP¨£Cñl
’Page, 
pCñl
, &
debugöfo
);

1238 
nSize
 = *
pIãr
;

1239 if–
nSize
>=0x80 ){

1240 
pEnd
 = &
pIãr
[8];

1241 
nSize
 &= 0x7f;

1243 
nSize
 = (nSize<<7Ë| (*++
pIãr
 & 0x7f);

1244 } *(
pIãr
)>=0x80 &&ÖIãr<
pEnd
 );

1246 
pIãr
++;

1247 if–
pPage
->
ötKey
 ){

1251 
pEnd
 = &
pIãr
[9];

1252  (*
pIãr
++)&0x80 &&ÖIãr<
pEnd
 );

1254 
	`ã°ˇ£
–
nSize
==
pPage
->
maxLoˇl
 );

1255 
	`ã°ˇ£
–
nSize
==
pPage
->
maxLoˇl
+1 );

1256 if–
nSize
<=
pPage
->
maxLoˇl
 ){

1257 
nSize
 +(
u32
)(
pIãr
 - 
pCñl
);

1258 if–
nSize
<4 )ÇSize = 4;

1260 
möLoˇl
 = 
pPage
->minLocal;

1261 
nSize
 = 
möLoˇl
 + (nSizê- möLoˇlË% (
pPage
->
pBt
->
ußbÀSize
 - 4);

1262 
	`ã°ˇ£
–
nSize
==
pPage
->
maxLoˇl
 );

1263 
	`ã°ˇ£
–
nSize
==
pPage
->
maxLoˇl
+1 );

1264 if–
nSize
>
pPage
->
maxLoˇl
 ){

1265 
nSize
 = 
möLoˇl
;

1267 
nSize
 +4 + (
u16
)(
pIãr
 - 
pCñl
);

1269 
	`as£π
–
nSize
==
debugöfo
.nSizê|| 
CORRUPT_DB
 );

1270  (
u16
)
nSize
;

1271 
	}
}

1272 
u16
 
	$˚ŒSizePåNoPaylﬂd
(
MemPage
 *
pPage
, 
u8
 *
pCñl
){

1273 
u8
 *
pIãr
 = 
pCñl
 + 4;

1274 
u8
 *
pEnd
;

1276 #ifde‡
SQLITE_DEBUG


1281 
CñlInfo
 
debugöfo
;

1282 
pPage
->
	`xP¨£Cñl
’Page, 
pCñl
, &
debugöfo
);

1284 
	`UNUSED_PARAMETER
(
pPage
);

1287 
	`as£π
–
pPage
->
chûdPåSize
==4 );

1288 
pEnd
 = 
pIãr
 + 9;

1289  (*
pIãr
++)&0x80 &&ÖIãr<
pEnd
 );

1290 
	`as£π
–
debugöfo
.
nSize
==(
u16
)(
pIãr
 - 
pCñl
Ë|| 
CORRUPT_DB
 );

1291  (
u16
)(
pIãr
 - 
pCñl
);

1292 
	}
}

1295 #ifde‡
SQLITE_DEBUG


1298 
u16
 
	$˚ŒSize
(
MemPage
 *
pPage
, 
iCñl
){

1299  
pPage
->
	`xCñlSize
’Page, 
	`födCñl
’Page, 
iCñl
));

1300 
	}
}

1303 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


1309 
	$±rm≠PutOvÊPå
(
MemPage
 *
pPage
, 
u8
 *
pCñl
, *
pRC
){

1310 
CñlInfo
 
öfo
;

1311 if–*
pRC
 ) ;

1312 
	`as£π
–
pCñl
!=0 );

1313 
pPage
->
	`xP¨£Cñl
’Page, 
pCñl
, &
öfo
);

1314 if–
öfo
.
nLoˇl
<öfo.
nPaylﬂd
 ){

1315 
Pgno
 
ovÊ
 = 
	`gë4byã
(&
pCñl
[
öfo
.
nSize
-4]);

1316 
	`±rm≠Put
(
pPage
->
pBt
, 
ovÊ
, 
PTRMAP_OVERFLOW1
,ÖPage->
pgno
, 
pRC
);

1318 
	}
}

1333 
	$de‰agmítPage
(
MemPage
 *
pPage
){

1334 
i
;

1335 
pc
;

1336 
hdr
;

1337 
size
;

1338 
ußbÀSize
;

1339 
˚ŒOff£t
;

1340 
cbrk
;

1341 
nCñl
;

1342 *
d©a
;

1343 *
ãmp
;

1344 *
§c
;

1345 
iCñlFú°
;

1346 
iCñlLa°
;

1349 
	`as£π
–
	`sqlôe3PagîIswrôóbÀ
(
pPage
->
pDbPage
) );

1350 
	`as£π
–
pPage
->
pBt
!=0 );

1351 
	`as£π
–
pPage
->
pBt
->
ußbÀSize
 <
SQLITE_MAX_PAGE_SIZE
 );

1352 
	`as£π
–
pPage
->
nOvîÊow
==0 );

1353 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pPage
->
pBt
->
muãx
) );

1354 
ãmp
 = 0;

1355 
§c
 = 
d©a
 = 
pPage
->
aD©a
;

1356 
hdr
 = 
pPage
->
hdrOff£t
;

1357 
˚ŒOff£t
 = 
pPage
->cellOffset;

1358 
nCñl
 = 
pPage
->nCell;

1359 
	`as£π
–
nCñl
==
	`gë2byã
(&
d©a
[
hdr
+3]) );

1360 
ußbÀSize
 = 
pPage
->
pBt
->usableSize;

1361 
cbrk
 = 
ußbÀSize
;

1362 
iCñlFú°
 = 
˚ŒOff£t
 + 2*
nCñl
;

1363 
iCñlLa°
 = 
ußbÀSize
 - 4;

1364 
i
=0; i<
nCñl
; i++){

1365 
u8
 *
pAddr
;

1366 
pAddr
 = &
d©a
[
˚ŒOff£t
 + 
i
*2];

1367 
pc
 = 
	`gë2byã
(
pAddr
);

1368 
	`ã°ˇ£
–
pc
==
iCñlFú°
 );

1369 
	`ã°ˇ£
–
pc
==
iCñlLa°
 );

1373 if–
pc
<
iCñlFú°
 ||Öc>
iCñlLa°
 ){

1374  
SQLITE_CORRUPT_BKPT
;

1376 
	`as£π
–
pc
>=
iCñlFú°
 &&Öc<=
iCñlLa°
 );

1377 
size
 = 
pPage
->
	`xCñlSize
’Page, &
§c
[
pc
]);

1378 
cbrk
 -
size
;

1379 if–
cbrk
<
iCñlFú°
 || 
pc
+
size
>
ußbÀSize
 ){

1380  
SQLITE_CORRUPT_BKPT
;

1382 
	`as£π
–
cbrk
+
size
<=
ußbÀSize
 && cbrk>=
iCñlFú°
 );

1383 
	`ã°ˇ£
–
cbrk
+
size
==
ußbÀSize
 );

1384 
	`ã°ˇ£
–
pc
+
size
==
ußbÀSize
 );

1385 
	`put2byã
(
pAddr
, 
cbrk
);

1386 if–
ãmp
==0 ){

1387 
x
;

1388 if–
cbrk
==
pc
 ) ;

1389 
ãmp
 = 
	`sqlôe3PagîTempS∑˚
(
pPage
->
pBt
->
pPagî
);

1390 
x
 = 
	`gë2byã
(&
d©a
[
hdr
+5]);

1391 
	`mem˝y
(&
ãmp
[
x
], &
d©a
[x], (
cbrk
+
size
) - x);

1392 
§c
 = 
ãmp
;

1394 
	`mem˝y
(&
d©a
[
cbrk
], &
§c
[
pc
], 
size
);

1396 
	`as£π
–
cbrk
>=
iCñlFú°
 );

1397 
	`put2byã
(&
d©a
[
hdr
+5], 
cbrk
);

1398 
d©a
[
hdr
+1] = 0;

1399 
d©a
[
hdr
+2] = 0;

1400 
d©a
[
hdr
+7] = 0;

1401 
	`mem£t
(&
d©a
[
iCñlFú°
], 0, 
cbrk
-iCellFirst);

1402 
	`as£π
–
	`sqlôe3PagîIswrôóbÀ
(
pPage
->
pDbPage
) );

1403 if–
cbrk
-
iCñlFú°
!=
pPage
->
nFªe
 ){

1404  
SQLITE_CORRUPT_BKPT
;

1406  
SQLITE_OK
;

1407 
	}
}

1423 
u8
 *
	$∑geFödSlŸ
(
MemPage
 *
pPg
, 
nByã
, *
pRc
){

1424 c⁄° 
hdr
 = 
pPg
->
hdrOff£t
;

1425 
u8
 * c⁄° 
aD©a
 = 
pPg
->aData;

1426 
iAddr
 = 
hdr
 + 1;

1427 
pc
 = 
	`gë2byã
(&
aD©a
[
iAddr
]);

1428 
x
;

1429 
ußbÀSize
 = 
pPg
->
pBt
->usableSize;

1431 
	`as£π
–
pc
>0 );

1433 
size
;

1436 if–
pc
>
ußbÀSize
-4 ||Öc<
iAddr
+4 ){

1437 *
pRc
 = 
SQLITE_CORRUPT_BKPT
;

1443 
size
 = 
	`gë2byã
(&
aD©a
[
pc
+2]);

1444 if–(
x
 = 
size
 - 
nByã
)>=0 ){

1445 
	`ã°ˇ£
–
x
==4 );

1446 
	`ã°ˇ£
–
x
==3 );

1447 if–
pc
 < 
pPg
->
˚ŒOff£t
+2*pPg->
nCñl
 || 
size
+p¯> 
ußbÀSize
 ){

1448 *
pRc
 = 
SQLITE_CORRUPT_BKPT
;

1450 }if–
x
<4 ){

1453 if–
aD©a
[
hdr
+7]>57 )  0;

1457 
	`mem˝y
(&
aD©a
[
iAddr
], &aD©a[
pc
], 2);

1458 
aD©a
[
hdr
+7] +(
u8
)
x
;

1462 
	`put2byã
(&
aD©a
[
pc
+2], 
x
);

1464  &
aD©a
[
pc
 + 
x
];

1466 
iAddr
 = 
pc
;

1467 
pc
 = 
	`gë2byã
(&
aD©a
[pc]);

1468 } 
pc
 );

1471 
	}
}

1486 
	$ÆloˇãS∑˚
(
MemPage
 *
pPage
, 
nByã
, *
pIdx
){

1487 c⁄° 
hdr
 = 
pPage
->
hdrOff£t
;

1488 
u8
 * c⁄° 
d©a
 = 
pPage
->
aD©a
;

1489 
t›
;

1490 
rc
 = 
SQLITE_OK
;

1491 
g≠
;

1493 
	`as£π
–
	`sqlôe3PagîIswrôóbÀ
(
pPage
->
pDbPage
) );

1494 
	`as£π
–
pPage
->
pBt
 );

1495 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pPage
->
pBt
->
muãx
) );

1496 
	`as£π
–
nByã
>=0 );

1497 
	`as£π
–
pPage
->
nFªe
>=
nByã
 );

1498 
	`as£π
–
pPage
->
nOvîÊow
==0 );

1499 
	`as£π
–
nByã
 < ()(
pPage
->
pBt
->
ußbÀSize
-8) );

1501 
	`as£π
–
pPage
->
˚ŒOff£t
 =
hdr
 + 12 - 4*pPage->
Àaf
 );

1502 
g≠
 = 
pPage
->
˚ŒOff£t
 + 2*pPage->
nCñl
;

1503 
	`as£π
–
g≠
<=65536 );

1509 
t›
 = 
	`gë2byã
(&
d©a
[
hdr
+5]);

1510 
	`as£π
–
t›
<=()
pPage
->
pBt
->
ußbÀSize
 );

1511 if–
g≠
>
t›
 ){

1512 if–
t›
==0 && 
pPage
->
pBt
->
ußbÀSize
==65536 ){

1513 
t›
 = 65536;

1515  
SQLITE_CORRUPT_BKPT
;

1523 
	`ã°ˇ£
–
g≠
+2==
t›
 );

1524 
	`ã°ˇ£
–
g≠
+1==
t›
 );

1525 
	`ã°ˇ£
–
g≠
==
t›
 );

1526 if–(
d©a
[
hdr
+2] || d©a[hdr+1]Ë&& 
g≠
+2<=
t›
 ){

1527 
u8
 *
pS∑˚
 = 
	`∑geFödSlŸ
(
pPage
, 
nByã
, &
rc
);

1528 if–
pS∑˚
 ){

1529 
	`as£π
–
pS∑˚
>=
d©a
 && (pSpace - data)<65536 );

1530 *
pIdx
 = ()(
pS∑˚
 - 
d©a
);

1531  
SQLITE_OK
;

1532 }if–
rc
 ){

1533  
rc
;

1540 
	`ã°ˇ£
–
g≠
+2+
nByã
==
t›
 );

1541 if–
g≠
+2+
nByã
>
t›
 ){

1542 
	`as£π
–
pPage
->
nCñl
>0 || 
CORRUPT_DB
 );

1543 
rc
 = 
	`de‰agmítPage
(
pPage
);

1544 if–
rc
 ) Ñc;

1545 
t›
 = 
	`gë2byãNŸZîo
(&
d©a
[
hdr
+5]);

1546 
	`as£π
–
g≠
+
nByã
<=
t›
 );

1556 
t›
 -
nByã
;

1557 
	`put2byã
(&
d©a
[
hdr
+5], 
t›
);

1558 
	`as£π
–
t›
+
nByã
 <()
pPage
->
pBt
->
ußbÀSize
 );

1559 *
pIdx
 = 
t›
;

1560  
SQLITE_OK
;

1561 
	}
}

1576 
	$‰ìS∑˚
(
MemPage
 *
pPage
, 
u16
 
iSèπ
, u16 
iSize
){

1577 
u16
 
iPå
;

1578 
u16
 
iFªeBlk
;

1579 
u8
 
hdr
;

1580 
u8
 
nFøg
 = 0;

1581 
u16
 
iOrigSize
 = 
iSize
;

1582 
u32
 
iLa°
 = 
pPage
->
pBt
->
ußbÀSize
-4;

1583 
u32
 
iEnd
 = 
iSèπ
 + 
iSize
;

1584 *
d©a
 = 
pPage
->
aD©a
;

1586 
	`as£π
–
pPage
->
pBt
!=0 );

1587 
	`as£π
–
	`sqlôe3PagîIswrôóbÀ
(
pPage
->
pDbPage
) );

1588 
	`as£π
–
CORRUPT_DB
 || 
iSèπ
>=
pPage
->
hdrOff£t
+6+pPage->
chûdPåSize
 );

1589 
	`as£π
–
CORRUPT_DB
 || 
iEnd
 <
pPage
->
pBt
->
ußbÀSize
 );

1590 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pPage
->
pBt
->
muãx
) );

1591 
	`as£π
–
iSize
>=4 );

1592 
	`as£π
–
iSèπ
<=
iLa°
 );

1596 if–
pPage
->
pBt
->
btsFœgs
 & 
BTS_SECURE_DELETE
 ){

1597 
	`mem£t
(&
d©a
[
iSèπ
], 0, 
iSize
);

1603 
hdr
 = 
pPage
->
hdrOff£t
;

1604 
iPå
 = 
hdr
 + 1;

1605 if–
d©a
[
iPå
+1]==0 && data[iPtr]==0 ){

1606 
iFªeBlk
 = 0;

1608  (
iFªeBlk
 = 
	`gë2byã
(&
d©a
[
iPå
]))<
iSèπ
 ){

1609 if–
iFªeBlk
<
iPå
+4 ){

1610 if–
iFªeBlk
==0 ) ;

1611  
SQLITE_CORRUPT_BKPT
;

1613 
iPå
 = 
iFªeBlk
;

1615 if–
iFªeBlk
>
iLa°
 )  
SQLITE_CORRUPT_BKPT
;

1616 
	`as£π
–
iFªeBlk
>
iPå
 || iFreeBlk==0 );

1624 if–
iFªeBlk
 && 
iEnd
+3>=iFreeBlk ){

1625 
nFøg
 = 
iFªeBlk
 - 
iEnd
;

1626 if–
iEnd
>
iFªeBlk
 )  
SQLITE_CORRUPT_BKPT
;

1627 
iEnd
 = 
iFªeBlk
 + 
	`gë2byã
(&
d©a
[iFreeBlk+2]);

1628 if–
iEnd
 > 
pPage
->
pBt
->
ußbÀSize
 )  
SQLITE_CORRUPT_BKPT
;

1629 
iSize
 = 
iEnd
 - 
iSèπ
;

1630 
iFªeBlk
 = 
	`gë2byã
(&
d©a
[iFreeBlk]);

1637 if–
iPå
>
hdr
+1 ){

1638 
iPåEnd
 = 
iPå
 + 
	`gë2byã
(&
d©a
[iPtr+2]);

1639 if–
iPåEnd
+3>=
iSèπ
 ){

1640 if–
iPåEnd
>
iSèπ
 )  
SQLITE_CORRUPT_BKPT
;

1641 
nFøg
 +
iSèπ
 - 
iPåEnd
;

1642 
iSize
 = 
iEnd
 - 
iPå
;

1643 
iSèπ
 = 
iPå
;

1646 if–
nFøg
>
d©a
[
hdr
+7] )  
SQLITE_CORRUPT_BKPT
;

1647 
d©a
[
hdr
+7] -
nFøg
;

1649 if–
iSèπ
==
	`gë2byã
(&
d©a
[
hdr
+5]) ){

1653 if–
iPå
!=
hdr
+1 )  
SQLITE_CORRUPT_BKPT
;

1654 
	`put2byã
(&
d©a
[
hdr
+1], 
iFªeBlk
);

1655 
	`put2byã
(&
d©a
[
hdr
+5], 
iEnd
);

1658 
	`put2byã
(&
d©a
[
iPå
], 
iSèπ
);

1659 
	`put2byã
(&
d©a
[
iSèπ
], 
iFªeBlk
);

1660 
	`put2byã
(&
d©a
[
iSèπ
+2], 
iSize
);

1662 
pPage
->
nFªe
 +
iOrigSize
;

1663  
SQLITE_OK
;

1664 
	}
}

1678 
	$decodeFœgs
(
MemPage
 *
pPage
, 
ÊagByã
){

1679 
BtSh¨ed
 *
pBt
;

1681 
	`as£π
–
pPage
->
hdrOff£t
==’Page->
pgno
==1 ? 100 : 0) );

1682 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pPage
->
pBt
->
muãx
) );

1683 
pPage
->
Àaf
 = (
u8
)(
ÊagByã
>>3); 
	`as£π
–
PTF_LEAF
 == 1<<3 );

1684 
ÊagByã
 &~
PTF_LEAF
;

1685 
pPage
->
chûdPåSize
 = 4-4*pPage->
Àaf
;

1686 
pPage
->
xCñlSize
 = 
˚ŒSizePå
;

1687 
pBt
 = 
pPage
->pBt;

1688 if–
ÊagByã
==(
PTF_LEAFDATA
 | 
PTF_INTKEY
) ){

1691 
	`as£π
–(
PTF_LEAFDATA
|
PTF_INTKEY
)==5 );

1694 
	`as£π
–(
PTF_LEAFDATA
|
PTF_INTKEY
|
PTF_LEAF
)==13 );

1695 
pPage
->
ötKey
 = 1;

1696 if–
pPage
->
Àaf
 ){

1697 
pPage
->
ötKeyLóf
 = 1;

1698 
pPage
->
xP¨£Cñl
 = 
båìP¨£CñlPå
;

1700 
pPage
->
ötKeyLóf
 = 0;

1701 
pPage
->
xCñlSize
 = 
˚ŒSizePåNoPaylﬂd
;

1702 
pPage
->
xP¨£Cñl
 = 
båìP¨£CñlPåNoPaylﬂd
;

1704 
pPage
->
maxLoˇl
 = 
pBt
->
maxLóf
;

1705 
pPage
->
möLoˇl
 = 
pBt
->
möLóf
;

1706 }if–
ÊagByã
==
PTF_ZERODATA
 ){

1709 
	`as£π
–(
PTF_ZERODATA
)==2 );

1712 
	`as£π
–(
PTF_ZERODATA
|
PTF_LEAF
)==10 );

1713 
pPage
->
ötKey
 = 0;

1714 
pPage
->
ötKeyLóf
 = 0;

1715 
pPage
->
xP¨£Cñl
 = 
båìP¨£CñlPåIndex
;

1716 
pPage
->
maxLoˇl
 = 
pBt
->maxLocal;

1717 
pPage
->
möLoˇl
 = 
pBt
->minLocal;

1721  
SQLITE_CORRUPT_BKPT
;

1723 
pPage
->
max1byãPaylﬂd
 = 
pBt
->max1bytePayload;

1724  
SQLITE_OK
;

1725 
	}
}

1736 
	$båìInôPage
(
MemPage
 *
pPage
){

1738 
	`as£π
–
pPage
->
pBt
!=0 );

1739 
	`as£π
–
pPage
->
pBt
->
db
!=0 );

1740 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pPage
->
pBt
->
muãx
) );

1741 
	`as£π
–
pPage
->
pgno
==
	`sqlôe3PagîPagíumbî
’Page->
pDbPage
) );

1742 
	`as£π
–
pPage
 =
	`sqlôe3PagîGëExåa
’Page->
pDbPage
) );

1743 
	`as£π
–
pPage
->
aD©a
 =
	`sqlôe3PagîGëD©a
’Page->
pDbPage
) );

1745 if–!
pPage
->
isInô
 ){

1746 
pc
;

1747 
u8
 
hdr
;

1748 
u8
 *
d©a
;

1749 
BtSh¨ed
 *
pBt
;

1750 
ußbÀSize
;

1751 
u16
 
˚ŒOff£t
;

1752 
nFªe
;

1753 
t›
;

1754 
iCñlFú°
;

1755 
iCñlLa°
;

1757 
pBt
 = 
pPage
->pBt;

1759 
hdr
 = 
pPage
->
hdrOff£t
;

1760 
d©a
 = 
pPage
->
aD©a
;

1763 if–
	`decodeFœgs
(
pPage
, 
d©a
[
hdr
]ËË 
SQLITE_CORRUPT_BKPT
;

1764 
	`as£π
–
pBt
->
∑geSize
>=512 &&ÖBt->pageSize<=65536 );

1765 
pPage
->
maskPage
 = (
u16
)(
pBt
->
∑geSize
 - 1);

1766 
pPage
->
nOvîÊow
 = 0;

1767 
ußbÀSize
 = 
pBt
->usableSize;

1768 
pPage
->
˚ŒOff£t
 = cñlOff£à
hdr
 + 8 +ÖPage->
chûdPåSize
;

1769 
pPage
->
aD©aEnd
 = &
d©a
[
ußbÀSize
];

1770 
pPage
->
aCñlIdx
 = &
d©a
[
˚ŒOff£t
];

1771 
pPage
->
aD©aOf°
 = &
d©a
[pPage->
chûdPåSize
];

1775 
t›
 = 
	`gë2byãNŸZîo
(&
d©a
[
hdr
+5]);

1778 
pPage
->
nCñl
 = 
	`gë2byã
(&
d©a
[
hdr
+3]);

1779 if–
pPage
->
nCñl
>
	`MX_CELL
(
pBt
) ){

1781  
SQLITE_CORRUPT_BKPT
;

1783 
	`ã°ˇ£
–
pPage
->
nCñl
==
	`MX_CELL
(
pBt
) );

1788 
	`as£π
–
pPage
->
nCñl
>0 || 
t›
==
ußbÀSize
 || 
CORRUPT_DB
 );

1797 
iCñlFú°
 = 
˚ŒOff£t
 + 2*
pPage
->
nCñl
;

1798 
iCñlLa°
 = 
ußbÀSize
 - 4;

1799 if–
pBt
->
db
->
Êags
 & 
SQLITE_CñlSizeCk
 ){

1800 
i
;

1801 
sz
;

1803 if–!
pPage
->
Àaf
 ) 
iCñlLa°
--;

1804 
i
=0; i<
pPage
->
nCñl
; i++){

1805 
pc
 = 
	`gë2byãAlig√d
(&
d©a
[
˚ŒOff£t
+
i
*2]);

1806 
	`ã°ˇ£
–
pc
==
iCñlFú°
 );

1807 
	`ã°ˇ£
–
pc
==
iCñlLa°
 );

1808 if–
pc
<
iCñlFú°
 ||Öc>
iCñlLa°
 ){

1809  
SQLITE_CORRUPT_BKPT
;

1811 
sz
 = 
pPage
->
	`xCñlSize
’Page, &
d©a
[
pc
]);

1812 
	`ã°ˇ£
–
pc
+
sz
==
ußbÀSize
 );

1813 if–
pc
+
sz
>
ußbÀSize
 ){

1814  
SQLITE_CORRUPT_BKPT
;

1817 if–!
pPage
->
Àaf
 ) 
iCñlLa°
++;

1824 
pc
 = 
	`gë2byã
(&
d©a
[
hdr
+1]);

1825 
nFªe
 = 
d©a
[
hdr
+7] + 
t›
;

1826 if–
pc
>0 ){

1827 
u32
 
√xt
, 
size
;

1828 if–
pc
<
iCñlFú°
 ){

1832  
SQLITE_CORRUPT_BKPT
;

1835 if–
pc
>
iCñlLa°
 ){

1836  
SQLITE_CORRUPT_BKPT
;

1838 
√xt
 = 
	`gë2byã
(&
d©a
[
pc
]);

1839 
size
 = 
	`gë2byã
(&
d©a
[
pc
+2]);

1840 
nFªe
 =ÇFªê+ 
size
;

1841 if–
√xt
<=
pc
+
size
+3 ) ;

1842 
pc
 = 
√xt
;

1844 if–
√xt
>0 ){

1845  
SQLITE_CORRUPT_BKPT
;

1847 if–
pc
+
size
>()
ußbÀSize
 ){

1848  
SQLITE_CORRUPT_BKPT
;

1859 if–
nFªe
>
ußbÀSize
 ){

1860  
SQLITE_CORRUPT_BKPT
;

1862 
pPage
->
nFªe
 = (
u16
)“Fªê- 
iCñlFú°
);

1863 
pPage
->
isInô
 = 1;

1865  
SQLITE_OK
;

1866 
	}
}

1872 
	$zîoPage
(
MemPage
 *
pPage
, 
Êags
){

1873 *
d©a
 = 
pPage
->
aD©a
;

1874 
BtSh¨ed
 *
pBt
 = 
pPage
->pBt;

1875 
u8
 
hdr
 = 
pPage
->
hdrOff£t
;

1876 
u16
 
fú°
;

1878 
	`as£π
–
	`sqlôe3PagîPagíumbî
(
pPage
->
pDbPage
)=ıPage->
pgno
 );

1879 
	`as£π
–
	`sqlôe3PagîGëExåa
(
pPage
->
pDbPage
) == (*)pPage );

1880 
	`as£π
–
	`sqlôe3PagîGëD©a
(
pPage
->
pDbPage
Ë=
d©a
 );

1881 
	`as£π
–
	`sqlôe3PagîIswrôóbÀ
(
pPage
->
pDbPage
) );

1882 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

1883 if–
pBt
->
btsFœgs
 & 
BTS_SECURE_DELETE
 ){

1884 
	`mem£t
(&
d©a
[
hdr
], 0, 
pBt
->
ußbÀSize
 - hdr);

1886 
d©a
[
hdr
] = ()
Êags
;

1887 
fú°
 = 
hdr
 + ((
Êags
&
PTF_LEAF
)==0 ? 12 : 8);

1888 
	`mem£t
(&
d©a
[
hdr
+1], 0, 4);

1889 
d©a
[
hdr
+7] = 0;

1890 
	`put2byã
(&
d©a
[
hdr
+5], 
pBt
->
ußbÀSize
);

1891 
pPage
->
nFªe
 = (
u16
)(
pBt
->
ußbÀSize
 - 
fú°
);

1892 
	`decodeFœgs
(
pPage
, 
Êags
);

1893 
pPage
->
˚ŒOff£t
 = 
fú°
;

1894 
pPage
->
aD©aEnd
 = &
d©a
[
pBt
->
ußbÀSize
];

1895 
pPage
->
aCñlIdx
 = &
d©a
[
fú°
];

1896 
pPage
->
aD©aOf°
 = &
d©a
[pPage->
chûdPåSize
];

1897 
pPage
->
nOvîÊow
 = 0;

1898 
	`as£π
–
pBt
->
∑geSize
>=512 &&ÖBt->pageSize<=65536 );

1899 
pPage
->
maskPage
 = (
u16
)(
pBt
->
∑geSize
 - 1);

1900 
pPage
->
nCñl
 = 0;

1901 
pPage
->
isInô
 = 1;

1902 
	}
}

1909 
MemPage
 *
	$båìPageFromDbPage
(
DbPage
 *
pDbPage
, 
Pgno
 
pgno
, 
BtSh¨ed
 *
pBt
){

1910 
MemPage
 *
pPage
 = (MemPage*)
	`sqlôe3PagîGëExåa
(
pDbPage
);

1911 if–
pgno
!=
pPage
->pgno ){

1912 
pPage
->
aD©a
 = 
	`sqlôe3PagîGëD©a
(
pDbPage
);

1913 
pPage
->
pDbPage
 =ÖDbPage;

1914 
pPage
->
pBt
 =ÖBt;

1915 
pPage
->
pgno
 =Ögno;

1916 
pPage
->
hdrOff£t
 = 
pgno
==1 ? 100 : 0;

1918 
	`as£π
–
pPage
->
aD©a
==
	`sqlôe3PagîGëD©a
(
pDbPage
) );

1919  
pPage
;

1920 
	}
}

1933 
	$båìGëPage
(

1934 
BtSh¨ed
 *
pBt
,

1935 
Pgno
 
pgno
,

1936 
MemPage
 **
µPage
,

1937 
Êags


1939 
rc
;

1940 
DbPage
 *
pDbPage
;

1942 
	`as£π
–
Êags
==0 || fœgs==
PAGER_GET_NOCONTENT
 || fœgs==
PAGER_GET_READONLY
 );

1943 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

1944 
rc
 = 
	`sqlôe3PagîGë
(
pBt
->
pPagî
, 
pgno
, (
DbPage
**)&
pDbPage
, 
Êags
);

1945 if–
rc
 ) Ñc;

1946 *
µPage
 = 
	`båìPageFromDbPage
(
pDbPage
, 
pgno
, 
pBt
);

1947  
SQLITE_OK
;

1948 
	}
}

1955 
MemPage
 *
	$båìPageLookup
(
BtSh¨ed
 *
pBt
, 
Pgno
 
pgno
){

1956 
DbPage
 *
pDbPage
;

1957 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

1958 
pDbPage
 = 
	`sqlôe3PagîLookup
(
pBt
->
pPagî
, 
pgno
);

1959 if–
pDbPage
 ){

1960  
	`båìPageFromDbPage
(
pDbPage
, 
pgno
, 
pBt
);

1963 
	}
}

1969 
Pgno
 
	$båìPagecou¡
(
BtSh¨ed
 *
pBt
){

1970  
pBt
->
nPage
;

1971 
	}
}

1972 
u32
 
	$sqlôe3BåìLa°Page
(
Båì
 *
p
){

1973 
	`as£π
–
	`sqlôe3BåìHﬁdsMuãx
(
p
) );

1974 
	`as£π
–((
p
->
pBt
->
nPage
)&0x8000000)==0 );

1975  
	`båìPagecou¡
(
p
->
pBt
);

1976 
	}
}

1991 
	$gëAndInôPage
(

1992 
BtSh¨ed
 *
pBt
,

1993 
Pgno
 
pgno
,

1994 
MemPage
 **
µPage
,

1995 
BtCurs‹
 *
pCur
,

1996 
bRódO∆y


1998 
rc
;

1999 
DbPage
 *
pDbPage
;

2000 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

2001 
	`as£π
–
pCur
==0 || 
µPage
==&pCur->
≠Page
[pCur->
iPage
] );

2002 
	`as£π
–
pCur
==0 || 
bRódO∆y
=ıCur->
curPagîFœgs
 );

2003 
	`as£π
–
pCur
==0 ||ÖCur->
iPage
>0 );

2005 if–
pgno
>
	`båìPagecou¡
(
pBt
) ){

2006 
rc
 = 
SQLITE_CORRUPT_BKPT
;

2007 
gëAndInôPage_îr‹
;

2009 
rc
 = 
	`sqlôe3PagîGë
(
pBt
->
pPagî
, 
pgno
, (
DbPage
**)&
pDbPage
, 
bRódO∆y
);

2010 if–
rc
 ){

2011 
gëAndInôPage_îr‹
;

2013 *
µPage
 = (
MemPage
*)
	`sqlôe3PagîGëExåa
(
pDbPage
);

2014 if–(*
µPage
)->
isInô
==0 ){

2015 
	`båìPageFromDbPage
(
pDbPage
, 
pgno
, 
pBt
);

2016 
rc
 = 
	`båìInôPage
(*
µPage
);

2017 if–
rc
!=
SQLITE_OK
 ){

2018 
	`ªÀa£Page
(*
µPage
);

2019 
gëAndInôPage_îr‹
;

2022 
	`as£π
–(*
µPage
)->
pgno
==pgno );

2023 
	`as£π
–(*
µPage
)->
aD©a
==
	`sqlôe3PagîGëD©a
(
pDbPage
) );

2027 if–
pCur
 && ((*
µPage
)->
nCñl
<1 || (*µPage)->
ötKey
!ıCur->
curI¡Key
) ){

2028 
rc
 = 
SQLITE_CORRUPT_BKPT
;

2029 
	`ªÀa£Page
(*
µPage
);

2030 
gëAndInôPage_îr‹
;

2032  
SQLITE_OK
;

2034 
gëAndInôPage_îr‹
:

2035 if–
pCur
 )ÖCur->
iPage
--;

2036 
	`ã°ˇ£
–
pgno
==0 );

2037 
	`as£π
–
pgno
!=0 || 
rc
==
SQLITE_CORRUPT
 );

2038  
rc
;

2039 
	}
}

2045 
	$ªÀa£PageNŸNuŒ
(
MemPage
 *
pPage
){

2046 
	`as£π
–
pPage
->
aD©a
 );

2047 
	`as£π
–
pPage
->
pBt
 );

2048 
	`as£π
–
pPage
->
pDbPage
!=0 );

2049 
	`as£π
–
	`sqlôe3PagîGëExåa
(
pPage
->
pDbPage
) == (*)pPage );

2050 
	`as£π
–
	`sqlôe3PagîGëD©a
(
pPage
->
pDbPage
)=ıPage->
aD©a
 );

2051 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pPage
->
pBt
->
muãx
) );

2052 
	`sqlôe3PagîUƒefNŸNuŒ
(
pPage
->
pDbPage
);

2053 
	}
}

2054 
	$ªÀa£Page
(
MemPage
 *
pPage
){

2055 if–
pPage
 ) 
	`ªÀa£PageNŸNuŒ
(pPage);

2056 
	}
}

2067 
	$båìGëUnu£dPage
(

2068 
BtSh¨ed
 *
pBt
,

2069 
Pgno
 
pgno
,

2070 
MemPage
 **
µPage
,

2071 
Êags


2073 
rc
 = 
	`båìGëPage
(
pBt
, 
pgno
, 
µPage
, 
Êags
);

2074 if–
rc
==
SQLITE_OK
 ){

2075 if–
	`sqlôe3PagîPageRefcou¡
((*
µPage
)->
pDbPage
)>1 ){

2076 
	`ªÀa£Page
(*
µPage
);

2077 *
µPage
 = 0;

2078  
SQLITE_CORRUPT_BKPT
;

2080 (*
µPage
)->
isInô
 = 0;

2082 *
µPage
 = 0;

2084  
rc
;

2085 
	}
}

2096 
	$∑geReöô
(
DbPage
 *
pD©a
){

2097 
MemPage
 *
pPage
;

2098 
pPage
 = (
MemPage
 *)
	`sqlôe3PagîGëExåa
(
pD©a
);

2099 
	`as£π
–
	`sqlôe3PagîPageRefcou¡
(
pD©a
)>0 );

2100 if–
pPage
->
isInô
 ){

2101 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pPage
->
pBt
->
muãx
) );

2102 
pPage
->
isInô
 = 0;

2103 if–
	`sqlôe3PagîPageRefcou¡
(
pD©a
)>1 ){

2110 
	`båìInôPage
(
pPage
);

2113 
	}
}

2118 
	$båìInvokeBusyH™dÀr
(*
pArg
){

2119 
BtSh¨ed
 *
pBt
 = (BtSh¨ed*)
pArg
;

2120 
	`as£π
–
pBt
->
db
 );

2121 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
db
->
muãx
) );

2122  
	`sqlôe3InvokeBusyH™dÀr
(&
pBt
->
db
->
busyH™dÀr
);

2123 
	}
}

2146 
	$sqlôe3BåìO≥n
(

2147 
sqlôe3_vfs
 *
pVfs
,

2148 c⁄° *
zFûíame
,

2149 
sqlôe3
 *
db
,

2150 
Båì
 **
µBåì
,

2151 
Êags
,

2152 
vfsFœgs


2154 
idx_¨õs
;

2155 
BtSh¨ed
 *
pBt
 = 0;

2156 
Båì
 *
p
;

2157 
sqlôe3_muãx
 *
muãxO≥n
 = 0;

2158 
rc
 = 
SQLITE_OK
;

2159 
u8
 
nRe£rve
;

2160 
zDbHódî
[100];

2163 c⁄° 
isTempDb
 = 
zFûíame
==0 || zFilename[0]==0;

2168 #ifde‡
SQLITE_OMIT_MEMORYDB


2169 c⁄° 
isMemdb
 = 0;

2171 c⁄° 
isMemdb
 = (
zFûíame
 && 
	`°rcmp
(zFilename, ":memory:")==0)

2172 || (
isTempDb
 && 
	`sqlôe3TempInMem‹y
(
db
))

2173 || (
vfsFœgs
 & 
SQLITE_OPEN_MEMORY
)!=0;

2176 
	`as£π
–
db
!=0 );

2177 
	`as£π
–
pVfs
!=0 );

2178 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

2179 
	`as£π
–(
Êags
&0xff)==flags );

2182 
	`as£π
–(
Êags
 & 
BTREE_UNORDERED
)==0 || (Êag†& 
BTREE_SINGLE
)!=0 );

2185 
	`as£π
–(
Êags
 & 
BTREE_SINGLE
)==0 || 
isTempDb
 );

2187 if–
isMemdb
 ){

2188 
Êags
 |
BTREE_MEMORY
;

2190 if–(
vfsFœgs
 & 
SQLITE_OPEN_MAIN_DB
)!=0 && (
isMemdb
 || 
isTempDb
) ){

2191 
vfsFœgs
 = (vfsFœg†& ~
SQLITE_OPEN_MAIN_DB
Ë| 
SQLITE_OPEN_TEMP_DB
;

2193 
p
 = 
	`sqlôe3MÆlocZîo
((
Båì
));

2194 if–!
p
 ){

2195  
SQLITE_NOMEM_BKPT
;

2197 
p
->
idx_¨õs
 = idx_aries++;

2198 
p
->
öTøns
 = 
TRANS_NONE
;

2199 
p
->
db
 = db;

2200 
	`sqlôe3LogBåìO≥n
(
pBåì
, 
zFûíame
, 
Êags
, 
vfsFœgs
);

2201 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


2202 
p
->
lock
.
pBåì
 =Ö;

2203 
p
->
lock
.
iTabÀ
 = 1;

2206 #i‡!
	`deföed
(
SQLITE_OMIT_SHARED_CACHE
Ë&& !deföed(
SQLITE_OMIT_DISKIO
)

2211 if–
isTempDb
==0 && (
isMemdb
==0 || (
vfsFœgs
&
SQLITE_OPEN_URI
)!=0) ){

2212 if–
vfsFœgs
 & 
SQLITE_OPEN_SHAREDCACHE
 ){

2213 
nFûíame
 = 
	`sqlôe3SåÀn30
(
zFûíame
)+1;

2214 
nFuŒP©h«me
 = 
pVfs
->
mxP©h«me
+1;

2215 *
zFuŒP©h«me
 = 
	`sqlôe3MÆloc
(
	`MAX
(
nFuŒP©h«me
,
nFûíame
));

2216 
	`MUTEX_LOGIC
–
sqlôe3_muãx
 *
muãxSh¨ed
; )

2218 
p
->
sh¨abÀ
 = 1;

2219 if–!
zFuŒP©h«me
 ){

2220 
	`sqlôe3_‰ì
(
p
);

2221  
SQLITE_NOMEM_BKPT
;

2223 if–
isMemdb
 ){

2224 
	`mem˝y
(
zFuŒP©h«me
, 
zFûíame
, 
nFûíame
);

2226 
rc
 = 
	`sqlôe3OsFuŒP©h«me
(
pVfs
, 
zFûíame
,

2227 
nFuŒP©h«me
, 
zFuŒP©h«me
);

2228 if–
rc
 ){

2229 
	`sqlôe3_‰ì
(
zFuŒP©h«me
);

2230 
	`sqlôe3_‰ì
(
p
);

2231  
rc
;

2234 #i‡
SQLITE_THREADSAFE


2235 
muãxO≥n
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_OPEN
);

2236 
	`sqlôe3_muãx_íãr
(
muãxO≥n
);

2237 
muãxSh¨ed
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
);

2238 
	`sqlôe3_muãx_íãr
(
muãxSh¨ed
);

2240 
pBt
=
	`GLOBAL
(
BtSh¨ed
*,
sqlôe3Sh¨edCacheLi°
);ÖBt;ÖBtıBt->
pNext
){

2241 
	`as£π
–
pBt
->
nRef
>0 );

2242 if–0==
	`°rcmp
(
zFuŒP©h«me
, 
	`sqlôe3PagîFûíame
(
pBt
->
pPagî
, 0))

2243 && 
	`sqlôe3PagîVfs
(
pBt
->
pPagî
)==
pVfs
 ){

2244 
iDb
;

2245 
iDb
=
db
->
nDb
-1; iDb>=0; iDb--){

2246 
Båì
 *
pExi°ög
 = 
db
->
aDb
[
iDb
].
pBt
;

2247 if–
pExi°ög
 &&ÖExi°ög->
pBt
==pBt ){

2248 
	`sqlôe3_muãx_Àave
(
muãxSh¨ed
);

2249 
	`sqlôe3_muãx_Àave
(
muãxO≥n
);

2250 
	`sqlôe3_‰ì
(
zFuŒP©h«me
);

2251 
	`sqlôe3_‰ì
(
p
);

2252  
SQLITE_CONSTRAINT
;

2255 
p
->
pBt
 =ÖBt;

2256 
pBt
->
nRef
++;

2260 
	`sqlôe3_muãx_Àave
(
muãxSh¨ed
);

2261 
	`sqlôe3_‰ì
(
zFuŒP©h«me
);

2263 #ifde‡
SQLITE_DEBUG


2270 
p
->
sh¨abÀ
 = 1;

2275 if–
pBt
==0 ){

2281 
	`as£π
–(
i64
)==8 );

2282 
	`as£π
–(
u64
)==8 );

2283 
	`as£π
–(
u32
)==4 );

2284 
	`as£π
–(
u16
)==2 );

2285 
	`as£π
–(
Pgno
)==4 );

2287 
pBt
 = 
	`sqlôe3MÆlocZîo
( (*pBt) );

2288 if–
pBt
==0 ){

2289 
rc
 = 
SQLITE_NOMEM_BKPT
;

2290 
båì_›í_out
;

2293 
	`sqlôe3LoggîO≥nPha£O√
(&
pBt
->
pLoggî
);

2294 
rc
 = 
	`sqlôe3PagîO≥n
(
pVfs
, &
pBt
->
pPagî
, 
zFûíame
,

2295 (
MemPage
), 
Êags
, 
vfsFœgs
, 
∑geReöô
);

2296 
pBt
->
pPagî
->
pLoggî
 =ÖBt->pLogger;

2297 if–
rc
==
SQLITE_OK
 ){

2298 
	`sqlôe3PagîSëMm≠Limô
(
pBt
->
pPagî
, 
db
->
szMm≠
);

2299 
rc
 = 
	`sqlôe3PagîRódFûehódî
(
pBt
->
pPagî
,(
zDbHódî
),zDbHeader);

2301 if–
rc
!=
SQLITE_OK
 ){

2302 
båì_›í_out
;

2304 
pBt
->
›íFœgs
 = (
u8
)
Êags
;

2305 
pBt
->
db
 = db;

2306 
	`sqlôe3PagîSëBusyh™dÀr
(
pBt
->
pPagî
, 
båìInvokeBusyH™dÀr
,ÖBt);

2307 
p
->
pBt
 =ÖBt;

2309 
pBt
->
pCurs‹
 = 0;

2310 
pBt
->
pPage1
 = 0;

2311 if–
	`sqlôe3PagîI§ód⁄ly
(
pBt
->
pPagî
ËËpBt->
btsFœgs
 |
BTS_READ_ONLY
;

2312 #ifde‡
SQLITE_SECURE_DELETE


2313 
pBt
->
btsFœgs
 |
BTS_SECURE_DELETE
;

2318 
pBt
->
∑geSize
 = (
zDbHódî
[16]<<8) | (zDbHeader[17]<<16);

2319 if–
pBt
->
∑geSize
<512 ||ÖBt->∑geSize>
SQLITE_MAX_PAGE_SIZE


2320 || ((
pBt
->
∑geSize
-1)&pBt->pageSize)!=0 ){

2321 
pBt
->
∑geSize
 = 0;

2322 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


2329 if–
zFûíame
 && !
isMemdb
 ){

2330 
pBt
->
autoVacuum
 = (
SQLITE_DEFAULT_AUTOVACUUM
 ? 1 : 0);

2331 
pBt
->
ö¸Vacuum
 = (
SQLITE_DEFAULT_AUTOVACUUM
==2 ? 1 : 0);

2334 
nRe£rve
 = 0;

2339 
nRe£rve
 = 
zDbHódî
[20];

2340 
pBt
->
btsFœgs
 |
BTS_PAGESIZE_FIXED
;

2341 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


2342 
pBt
->
autoVacuum
 = (
	`gë4byã
(&
zDbHódî
[36 + 4*4])?1:0);

2343 
pBt
->
ö¸Vacuum
 = (
	`gë4byã
(&
zDbHódî
[36 + 7*4])?1:0);

2346 
rc
 = 
	`sqlôe3PagîSëPagesize
(
pBt
->
pPagî
, &pBt->
∑geSize
, 
nRe£rve
);

2347 if–
rc
 ) 
båì_›í_out
;

2348 
pBt
->
ußbÀSize
 =ÖBt->
∑geSize
 - 
nRe£rve
;

2349 
	`as£π
–(
pBt
->
∑geSize
 & 7)==0 );

2351 #i‡!
	`deföed
(
SQLITE_OMIT_SHARED_CACHE
Ë&& !deföed(
SQLITE_OMIT_DISKIO
)

2354 
pBt
->
nRef
 = 1;

2355 if–
p
->
sh¨abÀ
 ){

2356 
	`MUTEX_LOGIC
–
sqlôe3_muãx
 *
muãxSh¨ed
; )

2357 
	`MUTEX_LOGIC
–
muãxSh¨ed
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
);)

2358 if–
SQLITE_THREADSAFE
 && 
sqlôe3GlobÆC⁄fig
.
bC‹eMuãx
 ){

2359 
pBt
->
muãx
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_FAST
);

2360 if–
pBt
->
muãx
==0 ){

2361 
rc
 = 
SQLITE_NOMEM_BKPT
;

2362 
båì_›í_out
;

2365 
	`sqlôe3_muãx_íãr
(
muãxSh¨ed
);

2366 
pBt
->
pNext
 = 
	`GLOBAL
(
BtSh¨ed
*,
sqlôe3Sh¨edCacheLi°
);

2367 
	`GLOBAL
(
BtSh¨ed
*,
sqlôe3Sh¨edCacheLi°
Ë
pBt
;

2368 
	`sqlôe3_muãx_Àave
(
muãxSh¨ed
);

2373 #i‡!
	`deföed
(
SQLITE_OMIT_SHARED_CACHE
Ë&& !deföed(
SQLITE_OMIT_DISKIO
)

2378 if–
p
->
sh¨abÀ
 ){

2379 
i
;

2380 
Båì
 *
pSib
;

2381 
i
=0; i<
db
->
nDb
; i++){

2382 if–(
pSib
 = 
db
->
aDb
[
i
].
pBt
)!=0 &&ÖSib->
sh¨abÀ
 ){

2383  
pSib
->
pPªv
 ){ÖSib =ÖSib->pPrev; }

2384 if–(
u±r
)
p
->
pBt
<(u±r)
pSib
->pBt ){

2385 
p
->
pNext
 = 
pSib
;

2386 
p
->
pPªv
 = 0;

2387 
pSib
->
pPªv
 = 
p
;

2389  
pSib
->
pNext
 && (
u±r
ÌSib->pNext->
pBt
<(u±r)
p
->pBt ){

2390 
pSib
 =ÖSib->
pNext
;

2392 
p
->
pNext
 = 
pSib
->pNext;

2393 
p
->
pPªv
 = 
pSib
;

2394 if–
p
->
pNext
 ){

2395 
p
->
pNext
->
pPªv
 =Ö;

2397 
pSib
->
pNext
 = 
p
;

2404 *
µBåì
 = 
p
;

2406 
båì_›í_out
:

2407 if–
rc
!=
SQLITE_OK
 ){

2408 if–
pBt
 &&ÖBt->
pPagî
 ){

2409 
	`sqlôe3PagîClo£
(
pBt
->
pPagî
, 0);

2411 
	`sqlôe3_‰ì
(
pBt
);

2412 
	`sqlôe3_‰ì
(
p
);

2413 *
µBåì
 = 0;

2415 
sqlôe3_fûe
 *
pFûe
;

2421 if–
	`sqlôe3BåìSchema
(
p
, 0, 0)==0 ){

2422 
	`sqlôe3PagîSëCachesize
(
p
->
pBt
->
pPagî
, 
SQLITE_DEFAULT_CACHE_SIZE
);

2425 
pFûe
 = 
	`sqlôe3PagîFûe
(
pBt
->
pPagî
);

2426 if–
pFûe
->
pMëhods
 ){

2427 
	`sqlôe3OsFûeC⁄åﬁHöt
(
pFûe
, 
SQLITE_FCNTL_PDB
, (*)&
pBt
->
db
);

2430 if–
muãxO≥n
 ){

2431 
	`as£π
–
	`sqlôe3_muãx_hñd
(
muãxO≥n
) );

2432 
	`sqlôe3_muãx_Àave
(
muãxO≥n
);

2434 
	`as£π
–
rc
!=
SQLITE_OK
 || 
	`sqlôe3BåìC⁄√˘i⁄Cou¡
(*
µBåì
)>0 );

2435  
rc
;

2436 
	}
}

2444 
	$ªmoveFromSh¨ögLi°
(
BtSh¨ed
 *
pBt
){

2445 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


2446 
	`MUTEX_LOGIC
–
sqlôe3_muãx
 *
pMa°î
; )

2447 
BtSh¨ed
 *
pLi°
;

2448 
ªmoved
 = 0;

2450 
	`as£π
–
	`sqlôe3_muãx_nŸhñd
(
pBt
->
muãx
) );

2451 
	`MUTEX_LOGIC
–
pMa°î
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
); )

2452 
	`sqlôe3_muãx_íãr
(
pMa°î
);

2453 
pBt
->
nRef
--;

2454 if–
pBt
->
nRef
<=0 ){

2455 if–
	`GLOBAL
(
BtSh¨ed
*,
sqlôe3Sh¨edCacheLi°
)==
pBt
 ){

2456 
	`GLOBAL
(
BtSh¨ed
*,
sqlôe3Sh¨edCacheLi°
Ë
pBt
->
pNext
;

2458 
pLi°
 = 
	`GLOBAL
(
BtSh¨ed
*,
sqlôe3Sh¨edCacheLi°
);

2459  
	`ALWAYS
(
pLi°
Ë&&ÖLi°->
pNext
!=
pBt
 ){

2460 
pLi°
ıLi°->
pNext
;

2462 if–
	`ALWAYS
(
pLi°
) ){

2463 
pLi°
->
pNext
 = 
pBt
->pNext;

2466 if–
SQLITE_THREADSAFE
 ){

2467 
	`sqlôe3_muãx_‰ì
(
pBt
->
muãx
);

2469 
ªmoved
 = 1;

2471 
	`sqlôe3_muãx_Àave
(
pMa°î
);

2472  
ªmoved
;

2476 
	}
}

2483 
	$ÆloˇãTempS∑˚
(
BtSh¨ed
 *
pBt
){

2484 if–!
pBt
->
pTmpS∑˚
 ){

2485 
pBt
->
pTmpS∑˚
 = 
	`sqlôe3PageMÆloc
–pBt->
∑geSize
 );

2502 if–
pBt
->
pTmpS∑˚
 ){

2503 
	`mem£t
(
pBt
->
pTmpS∑˚
, 0, 8);

2504 
pBt
->
pTmpS∑˚
 += 4;

2507 
	}
}

2512 
	$‰ìTempS∑˚
(
BtSh¨ed
 *
pBt
){

2513 if–
pBt
->
pTmpS∑˚
 ){

2514 
pBt
->
pTmpS∑˚
 -= 4;

2515 
	`sqlôe3PageFªe
(
pBt
->
pTmpS∑˚
);

2516 
pBt
->
pTmpS∑˚
 = 0;

2518 
	}
}

2523 
	$sqlôe3BåìClo£
(
Båì
 *
p
){

2524 
	`sqlôe3LogBåìClo£
(
p
);

2525 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

2526 
BtCurs‹
 *
pCur
;

2529 
	`as£π
–
	`sqlôe3_muãx_hñd
(
p
->
db
->
muãx
) );

2530 
	`sqlôe3BåìE¡î
(
p
);

2531 
pCur
 = 
pBt
->
pCurs‹
;

2532  
pCur
 ){

2533 
BtCurs‹
 *
pTmp
 = 
pCur
;

2534 
pCur
 =ÖCur->
pNext
;

2535 if–
pTmp
->
pBåì
==
p
 ){

2536 
	`sqlôe3BåìClo£Curs‹
(
pTmp
);

2544 
	`sqlôe3BåìRﬁlback
(
p
, 
SQLITE_OK
, 0);

2545 
	`sqlôe3BåìLóve
(
p
);

2551 
	`as£π
–
p
->
w™tToLock
==0 &&Ö->
locked
==0 );

2552 if–!
p
->
sh¨abÀ
 || 
	`ªmoveFromSh¨ögLi°
(
pBt
) ){

2558 
	`as£π
–!
pBt
->
pCurs‹
 );

2559 
	`sqlôe3PagîClo£
(
pBt
->
pPagî
, 
p
->
db
);

2560 
	`sqlôe3LoggîClo£
(
pBt
->
pPagî
->
pLoggî
);

2561 if–
pBt
->
xFªeSchema
 &&ÖBt->
pSchema
 ){

2562 
pBt
->
	`xFªeSchema
’Bt->
pSchema
);

2564 
	`sqlôe3DbFªe
(0, 
pBt
->
pSchema
);

2565 
	`‰ìTempS∑˚
(
pBt
);

2566 
	`sqlôe3_‰ì
(
pBt
);

2569 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


2570 
	`as£π
–
p
->
w™tToLock
==0 );

2571 
	`as£π
–
p
->
locked
==0 );

2572 if–
p
->
pPªv
 )Ö->pPªv->
pNext
 =Ö->pNext;

2573 if–
p
->
pNext
 )Ö->pNext->
pPªv
 =Ö->pPrev;

2576 
	`sqlôe3_‰ì
(
p
);

2577  
SQLITE_OK
;

2578 
	}
}

2587 
	$sqlôe3BåìSëCacheSize
(
Båì
 *
p
, 
mxPage
){

2588 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

2589 
	`as£π
–
	`sqlôe3_muãx_hñd
(
p
->
db
->
muãx
) );

2590 
	`sqlôe3BåìE¡î
(
p
);

2591 
	`sqlôe3PagîSëCachesize
(
pBt
->
pPagî
, 
mxPage
);

2592 
	`sqlôe3BåìLóve
(
p
);

2593  
SQLITE_OK
;

2594 
	}
}

2606 
	$sqlôe3BåìSëSpûlSize
(
Båì
 *
p
, 
mxPage
){

2607 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

2608 
ªs
;

2609 
	`as£π
–
	`sqlôe3_muãx_hñd
(
p
->
db
->
muãx
) );

2610 
	`sqlôe3BåìE¡î
(
p
);

2611 
ªs
 = 
	`sqlôe3PagîSëSpûlsize
(
pBt
->
pPagî
, 
mxPage
);

2612 
	`sqlôe3BåìLóve
(
p
);

2613  
ªs
;

2614 
	}
}

2616 #i‡
SQLITE_MAX_MMAP_SIZE
>0

2621 
	$sqlôe3BåìSëMm≠Limô
(
Båì
 *
p
, 
sqlôe3_öt64
 
szMm≠
){

2622 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

2623 
	`as£π
–
	`sqlôe3_muãx_hñd
(
p
->
db
->
muãx
) );

2624 
	`sqlôe3BåìE¡î
(
p
);

2625 
	`sqlôe3PagîSëMm≠Limô
(
pBt
->
pPagî
, 
szMm≠
);

2626 
	`sqlôe3BåìLóve
(
p
);

2627  
SQLITE_OK
;

2628 
	}
}

2639 #i‚de‡
SQLITE_OMIT_PAGER_PRAGMAS


2640 
	$sqlôe3BåìSëPagîFœgs
(

2641 
Båì
 *
p
,

2642 
pgFœgs


2644 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

2645 
	`as£π
–
	`sqlôe3_muãx_hñd
(
p
->
db
->
muãx
) );

2646 
	`sqlôe3BåìE¡î
(
p
);

2647 
	`sqlôe3PagîSëFœgs
(
pBt
->
pPagî
, 
pgFœgs
);

2648 
	`sqlôe3BåìLóve
(
p
);

2649  
SQLITE_OK
;

2650 
	}
}

2673 
	$sqlôe3BåìSëPageSize
(
Båì
 *
p
, 
∑geSize
, 
nRe£rve
, 
iFix
){

2674 
rc
 = 
SQLITE_OK
;

2675 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

2676 
	`as£π
–
nRe£rve
>=-1 &&ÇReserve<=255 );

2677 
	`sqlôe3BåìE¡î
(
p
);

2678 #i‡
SQLITE_HAS_CODEC


2679 if–
nRe£rve
>
pBt
->
›timÆRe£rve
 )ÖBt->›timÆRe£rvê(
u8
)nReserve;

2681 if–
pBt
->
btsFœgs
 & 
BTS_PAGESIZE_FIXED
 ){

2682 
	`sqlôe3BåìLóve
(
p
);

2683  
SQLITE_READONLY
;

2685 if–
nRe£rve
<0 ){

2686 
nRe£rve
 = 
pBt
->
∑geSize
 -ÖBt->
ußbÀSize
;

2688 
	`as£π
–
nRe£rve
>=0 &&ÇReserve<=255 );

2689 if–
∑geSize
>=512 &&ÖageSize<=
SQLITE_MAX_PAGE_SIZE
 &&

2690 ((
∑geSize
-1)&pageSize)==0 ){

2691 
	`as£π
–(
∑geSize
 & 7)==0 );

2692 
	`as£π
–!
pBt
->
pCurs‹
 );

2693 
pBt
->
∑geSize
 = (
u32
)pageSize;

2694 
	`‰ìTempS∑˚
(
pBt
);

2696 
rc
 = 
	`sqlôe3PagîSëPagesize
(
pBt
->
pPagî
, &pBt->
∑geSize
, 
nRe£rve
);

2697 
pBt
->
ußbÀSize
 =ÖBt->
∑geSize
 - (
u16
)
nRe£rve
;

2698 if–
iFix
 ) 
pBt
->
btsFœgs
 |
BTS_PAGESIZE_FIXED
;

2699 
	`sqlôe3BåìLóve
(
p
);

2700  
rc
;

2701 
	}
}

2706 
	$sqlôe3BåìGëPageSize
(
Båì
 *
p
){

2707  
p
->
pBt
->
∑geSize
;

2708 
	}
}

2721 
	$sqlôe3BåìGëRe£rveNoMuãx
(
Båì
 *
p
){

2722 
n
;

2723 
	`as£π
–
	`sqlôe3_muãx_hñd
(
p
->
pBt
->
muãx
) );

2724 
n
 = 
p
->
pBt
->
∑geSize
 -Ö->pBt->
ußbÀSize
;

2725  
n
;

2726 
	}
}

2737 
	$sqlôe3BåìGëO±imÆRe£rve
(
Båì
 *
p
){

2738 
n
;

2739 
	`sqlôe3BåìE¡î
(
p
);

2740 
n
 = 
	`sqlôe3BåìGëRe£rveNoMuãx
(
p
);

2741 #ifde‡
SQLITE_HAS_CODEC


2742 if–
n
<
p
->
pBt
->
›timÆRe£rve
 )Ç =Ö->pBt->optimalReserve;

2744 
	`sqlôe3BåìLóve
(
p
);

2745  
n
;

2746 
	}
}

2754 
	$sqlôe3BåìMaxPageCou¡
(
Båì
 *
p
, 
mxPage
){

2755 
n
;

2756 
	`sqlôe3BåìE¡î
(
p
);

2757 
n
 = 
	`sqlôe3PagîMaxPageCou¡
(
p
->
pBt
->
pPagî
, 
mxPage
);

2758 
	`sqlôe3BåìLóve
(
p
);

2759  
n
;

2760 
	}
}

2767 
	$sqlôe3BåìSecuªDñëe
(
Båì
 *
p
, 
√wFœg
){

2768 
b
;

2769 if–
p
==0 )  0;

2770 
	`sqlôe3BåìE¡î
(
p
);

2771 if–
√wFœg
>=0 ){

2772 
p
->
pBt
->
btsFœgs
 &~
BTS_SECURE_DELETE
;

2773 if–
√wFœg
 ) 
p
->
pBt
->
btsFœgs
 |
BTS_SECURE_DELETE
;

2775 
b
 = (
p
->
pBt
->
btsFœgs
 & 
BTS_SECURE_DELETE
)!=0;

2776 
	`sqlôe3BåìLóve
(
p
);

2777  
b
;

2778 
	}
}

2786 
	$sqlôe3BåìSëAutoVacuum
(
Båì
 *
p
, 
autoVacuum
){

2787 #ifde‡
SQLITE_OMIT_AUTOVACUUM


2788  
SQLITE_READONLY
;

2790 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

2791 
rc
 = 
SQLITE_OK
;

2792 
u8
 
av
 = (u8)
autoVacuum
;

2794 
	`sqlôe3BåìE¡î
(
p
);

2795 if–(
pBt
->
btsFœgs
 & 
BTS_PAGESIZE_FIXED
)!=0 && (
av
 ?1:0)!ıBt->
autoVacuum
 ){

2796 
rc
 = 
SQLITE_READONLY
;

2798 
pBt
->
autoVacuum
 = 
av
 ?1:0;

2799 
pBt
->
ö¸Vacuum
 = 
av
==2 ?1:0;

2801 
	`sqlôe3BåìLóve
(
p
);

2802  
rc
;

2804 
	}
}

2810 
	$sqlôe3BåìGëAutoVacuum
(
Båì
 *
p
){

2811 #ifde‡
SQLITE_OMIT_AUTOVACUUM


2812  
BTREE_AUTOVACUUM_NONE
;

2814 
rc
;

2815 
	`sqlôe3BåìE¡î
(
p
);

2816 
rc
 = (

2817 (!
p
->
pBt
->
autoVacuum
)?
BTREE_AUTOVACUUM_NONE
:

2818 (!
p
->
pBt
->
ö¸Vacuum
)?
BTREE_AUTOVACUUM_FULL
:

2819 
BTREE_AUTOVACUUM_INCR


2821 
	`sqlôe3BåìLóve
(
p
);

2822  
rc
;

2824 
	}
}

2836 
	$lockBåì
(
BtSh¨ed
 *
pBt
){

2837 
rc
;

2838 
MemPage
 *
pPage1
;

2839 
nPage
;

2840 
nPageFûe
 = 0;

2841 
nPageHódî
;

2843 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

2844 
	`as£π
–
pBt
->
pPage1
==0 );

2845 
rc
 = 
	`sqlôe3PagîSh¨edLock
(
pBt
->
pPagî
);

2846 if–
rc
!=
SQLITE_OK
 ) Ñc;

2847 
rc
 = 
	`båìGëPage
(
pBt
, 1, &
pPage1
, 0);

2848 if–
rc
!=
SQLITE_OK
 ) Ñc;

2853 
nPage
 = 
nPageHódî
 = 
	`gë4byã
(28+(
u8
*)
pPage1
->
aD©a
);

2854 
	`sqlôe3PagîPagecou¡
(
pBt
->
pPagî
, &
nPageFûe
);

2855 if–
nPage
==0 || 
	`memcmp
(24+(
u8
*)
pPage1
->
aD©a
, 92+(u8*)pPage1->aData,4)!=0 ){

2856 
nPage
 = 
nPageFûe
;

2858 if–
nPage
>0 ){

2859 
u32
 
∑geSize
;

2860 
u32
 
ußbÀSize
;

2861 
u8
 *
∑ge1
 = 
pPage1
->
aD©a
;

2862 
rc
 = 
SQLITE_NOTADB
;

2866 if–
	`memcmp
(
∑ge1
, 
zMagicHódî
, 16)!=0 ){

2867 
∑ge1_öô_Áûed
;

2870 #ifde‡
SQLITE_OMIT_WAL


2871 if–
∑ge1
[18]>1 ){

2872 
pBt
->
btsFœgs
 |
BTS_READ_ONLY
;

2874 if–
∑ge1
[19]>1 ){

2875 
∑ge1_öô_Áûed
;

2878 if–
∑ge1
[18]>2 ){

2879 
pBt
->
btsFœgs
 |
BTS_READ_ONLY
;

2881 if–
∑ge1
[19]>2 ){

2882 
∑ge1_öô_Áûed
;

2893 if–
∑ge1
[19]==2 && (
pBt
->
btsFœgs
 & 
BTS_NO_WAL
)==0 ){

2894 
isO≥n
 = 0;

2895 
rc
 = 
	`sqlôe3PagîO≥nWÆ
(
pBt
->
pPagî
, &
isO≥n
);

2896 if–
rc
!=
SQLITE_OK
 ){

2897 
∑ge1_öô_Áûed
;

2899 #i‡
SQLITE_DEFAULT_SYNCHRONOUS
!=
SQLITE_DEFAULT_WAL_SYNCHRONOUS


2900 
sqlôe3
 *
db
;

2901 
Db
 *
pDb
;

2902 if–(
db
=
pBt
->db)!=0 && (
pDb
=db->
aDb
)!=0 ){

2903  
pDb
->
pBt
==0 ||ÖDb->pBt->pBt!=pBt ){ÖDb++; }

2904 if–
pDb
->
bSyncSë
==0

2905 && 
pDb
->
ß„ty_Àvñ
==
SQLITE_DEFAULT_SYNCHRONOUS
+1

2907 
pDb
->
ß„ty_Àvñ
 = 
SQLITE_DEFAULT_WAL_SYNCHRONOUS
+1;

2908 
	`sqlôe3PagîSëFœgs
(
pBt
->
pPagî
,

2909 
pDb
->
ß„ty_Àvñ
 | (
db
->
Êags
 & 
PAGER_FLAGS_MASK
));

2913 if–
isO≥n
==0 ){

2914 
	`ªÀa£Page
(
pPage1
);

2915  
SQLITE_OK
;

2918 
rc
 = 
SQLITE_NOTADB
;

2928 if–
	`memcmp
(&
∑ge1
[21], "\100\040\040",3)!=0 ){

2929 
∑ge1_öô_Áûed
;

2934 
∑geSize
 = (
∑ge1
[16]<<8) | (page1[17]<<16);

2937 if–((
∑geSize
-1)&pageSize)!=0

2938 || 
∑geSize
>
SQLITE_MAX_PAGE_SIZE


2939 || 
∑geSize
<=256

2941 
∑ge1_öô_Áûed
;

2943 
	`as£π
–(
∑geSize
 & 7)==0 );

2951 
ußbÀSize
 = 
∑geSize
 - 
∑ge1
[20];

2952 if–(
u32
)
∑geSize
!=
pBt
->pageSize ){

2959 
	`ªÀa£Page
(
pPage1
);

2960 
pBt
->
ußbÀSize
 = usableSize;

2961 
pBt
->
∑geSize
 =ÖageSize;

2962 
	`‰ìTempS∑˚
(
pBt
);

2963 
rc
 = 
	`sqlôe3PagîSëPagesize
(
pBt
->
pPagî
, &pBt->
∑geSize
,

2964 
∑geSize
-
ußbÀSize
);

2965  
rc
;

2967 if–(
pBt
->
db
->
Êags
 & 
SQLITE_RecovîyMode
)==0 && 
nPage
>
nPageFûe
 ){

2968 
rc
 = 
SQLITE_CORRUPT_BKPT
;

2969 
∑ge1_öô_Áûed
;

2974 if–
ußbÀSize
<480 ){

2975 
∑ge1_öô_Áûed
;

2977 
pBt
->
∑geSize
 =ÖageSize;

2978 
pBt
->
ußbÀSize
 = usableSize;

2979 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


2980 
pBt
->
autoVacuum
 = (
	`gë4byã
(&
∑ge1
[36 + 4*4])?1:0);

2981 
pBt
->
ö¸Vacuum
 = (
	`gë4byã
(&
∑ge1
[36 + 7*4])?1:0);

2998 
pBt
->
maxLoˇl
 = (
u16
)(’Bt->
ußbÀSize
-12)*64/255 - 23);

2999 
pBt
->
möLoˇl
 = (
u16
)(’Bt->
ußbÀSize
-12)*32/255 - 23);

3000 
pBt
->
maxLóf
 = (
u16
)’Bt->
ußbÀSize
 - 35);

3001 
pBt
->
möLóf
 = (
u16
)(’Bt->
ußbÀSize
-12)*32/255 - 23);

3002 if–
pBt
->
maxLoˇl
>127 ){

3003 
pBt
->
max1byãPaylﬂd
 = 127;

3005 
pBt
->
max1byãPaylﬂd
 = (
u8
ÌBt->
maxLoˇl
;

3007 
	`as£π
–
pBt
->
maxLóf
 + 23 <
	`MX_CELL_SIZE
(pBt) );

3008 
pBt
->
pPage1
 =ÖPage1;

3009 
pBt
->
nPage
 =ÇPage;

3010  
SQLITE_OK
;

3012 
∑ge1_öô_Áûed
:

3013 
	`ªÀa£Page
(
pPage1
);

3014 
pBt
->
pPage1
 = 0;

3015  
rc
;

3016 
	}
}

3018 #i‚de‡
NDEBUG


3031 
	$cou¡VÆidCurs‹s
(
BtSh¨ed
 *
pBt
, 
wrO∆y
){

3032 
BtCurs‹
 *
pCur
;

3033 
r
 = 0;

3034 
pCur
=
pBt
->
pCurs‹
;ÖCur;ÖCurıCur->
pNext
){

3035 if–(
wrO∆y
==0 || (
pCur
->
curFœgs
 & 
BTCF_WrôeFœg
)!=0)

3036 && 
pCur
->
eSèã
!=
CURSOR_FAULT
 ) 
r
++;

3038  
r
;

3039 
	}
}

3050 
	$u∆ockBåìIfUnu£d
(
BtSh¨ed
 *
pBt
){

3051 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

3052 
	`as£π
–
	`cou¡VÆidCurs‹s
(
pBt
,0)==0 ||ÖBt->
öTønß˘i⁄
>
TRANS_NONE
 );

3053 if–
pBt
->
öTønß˘i⁄
==
TRANS_NONE
 &&ÖBt->
pPage1
!=0 ){

3054 
MemPage
 *
pPage1
 = 
pBt
->pPage1;

3055 
	`as£π
–
pPage1
->
aD©a
 );

3056 
	`as£π
–
	`sqlôe3PagîRefcou¡
(
pBt
->
pPagî
)==1 );

3057 
pBt
->
pPage1
 = 0;

3058 
	`ªÀa£PageNŸNuŒ
(
pPage1
);

3060 
	}
}

3067 
	$√wD©aba£
(
BtSh¨ed
 *
pBt
){

3068 
MemPage
 *
pP1
;

3069 *
d©a
;

3070 
rc
;

3072 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

3073 if–
pBt
->
nPage
>0 ){

3074  
SQLITE_OK
;

3076 
pP1
 = 
pBt
->
pPage1
;

3077 
	`as£π
–
pP1
!=0 );

3078 
d©a
 = 
pP1
->
aD©a
;

3079 
rc
 = 
	`sqlôe3PagîWrôe
(
pP1
->
pDbPage
);

3080 if–
rc
 ) Ñc;

3081 
	`mem˝y
(
d©a
, 
zMagicHódî
, (zMagicHeader));

3082 
	`as£π
–(
zMagicHódî
)==16 );

3083 
d©a
[16] = (
u8
)((
pBt
->
∑geSize
>>8)&0xff);

3084 
d©a
[17] = (
u8
)((
pBt
->
∑geSize
>>16)&0xff);

3085 
d©a
[18] = 1;

3086 
d©a
[19] = 1;

3087 
	`as£π
–
pBt
->
ußbÀSize
<ıBt->
∑geSize
 &&ÖBt->usableSize+255>=pBt->pageSize);

3088 
d©a
[20] = (
u8
)(
pBt
->
∑geSize
 -ÖBt->
ußbÀSize
);

3089 
d©a
[21] = 64;

3090 
d©a
[22] = 32;

3091 
d©a
[23] = 32;

3092 
	`mem£t
(&
d©a
[24], 0, 100-24);

3093 
	`zîoPage
(
pP1
, 
PTF_INTKEY
|
PTF_LEAF
|
PTF_LEAFDATA
 );

3094 
pBt
->
btsFœgs
 |
BTS_PAGESIZE_FIXED
;

3095 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


3096 
	`as£π
–
pBt
->
autoVacuum
==1 ||ÖBt->autoVacuum==0 );

3097 
	`as£π
–
pBt
->
ö¸Vacuum
==1 ||ÖBt->incrVacuum==0 );

3098 
	`put4byã
(&
d©a
[36 + 4*4], 
pBt
->
autoVacuum
);

3099 
	`put4byã
(&
d©a
[36 + 7*4], 
pBt
->
ö¸Vacuum
);

3101 
pBt
->
nPage
 = 1;

3102 
d©a
[31] = 1;

3103  
SQLITE_OK
;

3104 
	}
}

3111 
	$sqlôe3BåìNewDb
(
Båì
 *
p
){

3112 
rc
;

3113 
	`sqlôe3BåìE¡î
(
p
);

3114 
p
->
pBt
->
nPage
 = 0;

3115 
rc
 = 
	`√wD©aba£
(
p
->
pBt
);

3116 
	`sqlôe3BåìLóve
(
p
);

3117  
rc
;

3118 
	}
}

3155 
	$sqlôe3BåìBegöTøns
(
Båì
 *
p
, 
wrÊag
){

3156 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

3157 
rc
 = 
SQLITE_OK
;

3159 
	`sqlôe3LogBåìBegöTøns
(
p
, 
wrFœg
);

3160 
	`sqlôe3BåìE¡î
(
p
);

3161 
	`båìI¡egrôy
(
p
);

3167 if–
p
->
öTøns
==
TRANS_WRITE
 || (p->öTøns==
TRANS_READ
 && !
wrÊag
) ){

3168 
å™s_begun
;

3170 
	`as£π
–
pBt
->
öTønß˘i⁄
==
TRANS_WRITE
 || 
	`IfNŸOmôAV
’Bt->
bDoTrunˇã
)==0 );

3173 if–(
pBt
->
btsFœgs
 & 
BTS_READ_ONLY
)!=0 && 
wrÊag
 ){

3174 
rc
 = 
SQLITE_READONLY
;

3175 
å™s_begun
;

3178 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


3180 
sqlôe3
 *
pBlock
 = 0;

3185 if–(
wrÊag
 && 
pBt
->
öTønß˘i⁄
==
TRANS_WRITE
)

3186 || (
pBt
->
btsFœgs
 & 
BTS_PENDING
)!=0

3188 
pBlock
 = 
pBt
->
pWrôî
->
db
;

3189 }if–
wrÊag
>1 ){

3190 
BtLock
 *
pIãr
;

3191 
pIãr
=
pBt
->
pLock
;ÖIãr;ÖIãrıIãr->
pNext
){

3192 if–
pIãr
->
pBåì
!=
p
 ){

3193 
pBlock
 = 
pIãr
->
pBåì
->
db
;

3198 if–
pBlock
 ){

3199 
	`sqlôe3C⁄√˘i⁄Blocked
(
p
->
db
, 
pBlock
);

3200 
rc
 = 
SQLITE_LOCKED_SHAREDCACHE
;

3201 
å™s_begun
;

3209 
rc
 = 
	`quîySh¨edCacheTabÀLock
(
p
, 
MASTER_ROOT
, 
READ_LOCK
);

3210 if–
SQLITE_OK
!=
rc
 ) 
å™s_begun
;

3212 
pBt
->
btsFœgs
 &~
BTS_INITIALLY_EMPTY
;

3213 if–
pBt
->
nPage
==0 )ÖBt->
btsFœgs
 |
BTS_INITIALLY_EMPTY
;

3222  
pBt
->
pPage1
==0 && 
SQLITE_OK
==(
rc
 = 
	`lockBåì
(pBt)) );

3224 if–
rc
==
SQLITE_OK
 && 
wrÊag
 ){

3225 if–(
pBt
->
btsFœgs
 & 
BTS_READ_ONLY
)!=0 ){

3226 
rc
 = 
SQLITE_READONLY
;

3228 
rc
 = 
	`sqlôe3PagîBegö
(
pBt
->
pPagî
,
wrÊag
>1,
	`sqlôe3TempInMem‹y
(
p
->
db
));

3229 if–
rc
==
SQLITE_OK
 ){

3230 
rc
 = 
	`√wD©aba£
(
pBt
);

3235 if–
rc
!=
SQLITE_OK
 ){

3236 
	`u∆ockBåìIfUnu£d
(
pBt
);

3238 } (
rc
&0xFF)==
SQLITE_BUSY
 && 
pBt
->
öTønß˘i⁄
==
TRANS_NONE
 &&

3239 
	`båìInvokeBusyH™dÀr
(
pBt
) );

3241 if–
rc
==
SQLITE_OK
 ){

3242 if–
p
->
öTøns
==
TRANS_NONE
 ){

3243 
pBt
->
nTønß˘i⁄
++;

3244 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


3245 if–
p
->
sh¨abÀ
 ){

3246 
	`as£π
–
p
->
lock
.
pBåì
=ı &&Ö->lock.
iTabÀ
==1 );

3247 
p
->
lock
.
eLock
 = 
READ_LOCK
;

3248 
p
->
lock
.
pNext
 = 
pBt
->
pLock
;

3249 
pBt
->
pLock
 = &
p
->
lock
;

3253 
p
->
öTøns
 = (
wrÊag
?
TRANS_WRITE
:
TRANS_READ
);

3254 if–
p
->
öTøns
>
pBt
->
öTønß˘i⁄
 ){

3255 
pBt
->
öTønß˘i⁄
 = 
p
->
öTøns
;

3257 if–
wrÊag
 ){

3258 
MemPage
 *
pPage1
 = 
pBt
->pPage1;

3259 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


3260 
	`as£π
–!
pBt
->
pWrôî
 );

3261 
pBt
->
pWrôî
 = 
p
;

3262 
pBt
->
btsFœgs
 &~
BTS_EXCLUSIVE
;

3263 if–
wrÊag
>1 ) 
pBt
->
btsFœgs
 |
BTS_EXCLUSIVE
;

3272 if–
pBt
->
nPage
!=
	`gë4byã
(&
pPage1
->
aD©a
[28]) ){

3273 
rc
 = 
	`sqlôe3PagîWrôe
(
pPage1
->
pDbPage
);

3274 if–
rc
==
SQLITE_OK
 ){

3275 
	`put4byã
(&
pPage1
->
aD©a
[28], 
pBt
->
nPage
);

3282 
å™s_begun
:

3283 if–
rc
==
SQLITE_OK
 && 
wrÊag
 ){

3288 
rc
 = 
	`sqlôe3PagîO≥nSavïoöt
(
pBt
->
pPagî
, 
p
->
db
->
nSavïoöt
);

3291 
	`båìI¡egrôy
(
p
);

3292 
	`sqlôe3BåìLóve
(
p
);

3293  
rc
;

3294 
	}
}

3296 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


3303 
	$£tChûdPåm≠s
(
MemPage
 *
pPage
){

3304 
i
;

3305 
nCñl
;

3306 
rc
;

3307 
BtSh¨ed
 *
pBt
 = 
pPage
->pBt;

3308 
Pgno
 
pgno
 = 
pPage
->pgno;

3310 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pPage
->
pBt
->
muãx
) );

3311 
rc
 = 
	`båìInôPage
(
pPage
);

3312 if–
rc
!=
SQLITE_OK
 ) Ñc;

3313 
nCñl
 = 
pPage
->nCell;

3315 
i
=0; i<
nCñl
; i++){

3316 
u8
 *
pCñl
 = 
	`födCñl
(
pPage
, 
i
);

3318 
	`±rm≠PutOvÊPå
(
pPage
, 
pCñl
, &
rc
);

3320 if–!
pPage
->
Àaf
 ){

3321 
Pgno
 
chûdPgno
 = 
	`gë4byã
(
pCñl
);

3322 
	`±rm≠Put
(
pBt
, 
chûdPgno
, 
PTRMAP_BTREE
, 
pgno
, &
rc
);

3326 if–!
pPage
->
Àaf
 ){

3327 
Pgno
 
chûdPgno
 = 
	`gë4byã
(&
pPage
->
aD©a
[pPage->
hdrOff£t
+8]);

3328 
	`±rm≠Put
(
pBt
, 
chûdPgno
, 
PTRMAP_BTREE
, 
pgno
, &
rc
);

3331  
rc
;

3332 
	}
}

3348 
	$modifyPagePoöãr
(
MemPage
 *
pPage
, 
Pgno
 
iFrom
, Pgnÿ
iTo
, 
u8
 
eTy≥
){

3349 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pPage
->
pBt
->
muãx
) );

3350 
	`as£π
–
	`sqlôe3PagîIswrôóbÀ
(
pPage
->
pDbPage
) );

3351 if–
eTy≥
==
PTRMAP_OVERFLOW2
 ){

3353 if–
	`gë4byã
(
pPage
->
aD©a
)!=
iFrom
 ){

3354  
SQLITE_CORRUPT_BKPT
;

3356 
	`put4byã
(
pPage
->
aD©a
, 
iTo
);

3358 
i
;

3359 
nCñl
;

3360 
rc
;

3362 
rc
 = 
	`båìInôPage
(
pPage
);

3363 if–
rc
 ) Ñc;

3364 
nCñl
 = 
pPage
->nCell;

3366 
i
=0; i<
nCñl
; i++){

3367 
u8
 *
pCñl
 = 
	`födCñl
(
pPage
, 
i
);

3368 if–
eTy≥
==
PTRMAP_OVERFLOW1
 ){

3369 
CñlInfo
 
öfo
;

3370 
pPage
->
	`xP¨£Cñl
’Page, 
pCñl
, &
öfo
);

3371 if–
öfo
.
nLoˇl
<öfo.
nPaylﬂd


3372 && 
pCñl
+
öfo
.
nSize
-1<=
pPage
->
aD©a
+pPage->
maskPage


3373 && 
iFrom
==
	`gë4byã
(
pCñl
+
öfo
.
nSize
-4)

3375 
	`put4byã
(
pCñl
+
öfo
.
nSize
-4, 
iTo
);

3379 if–
	`gë4byã
(
pCñl
)==
iFrom
 ){

3380 
	`put4byã
(
pCñl
, 
iTo
);

3386 if–
i
==
nCñl
 ){

3387 if–
eTy≥
!=
PTRMAP_BTREE
 ||

3388 
	`gë4byã
(&
pPage
->
aD©a
[pPage->
hdrOff£t
+8])!=
iFrom
 ){

3389  
SQLITE_CORRUPT_BKPT
;

3391 
	`put4byã
(&
pPage
->
aD©a
[pPage->
hdrOff£t
+8], 
iTo
);

3394  
SQLITE_OK
;

3395 
	}
}

3407 
	$ªloˇãPage
(

3408 
BtSh¨ed
 *
pBt
,

3409 
MemPage
 *
pDbPage
,

3410 
u8
 
eTy≥
,

3411 
Pgno
 
iPåPage
,

3412 
Pgno
 
iFªePage
,

3413 
isCommô


3415 
MemPage
 *
pPåPage
;

3416 
Pgno
 
iDbPage
 = 
pDbPage
->
pgno
;

3417 
Pagî
 *
pPagî
 = 
pBt
->pPager;

3418 
rc
;

3420 
	`as£π
–
eTy≥
==
PTRMAP_OVERFLOW2
 ||ÉTy≥==
PTRMAP_OVERFLOW1
 ||

3421 
eTy≥
==
PTRMAP_BTREE
 ||ÉTy≥==
PTRMAP_ROOTPAGE
 );

3422 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

3423 
	`as£π
–
pDbPage
->
pBt
==pBt );

3426 
	`TRACE
(("AUTOVACUUM: Moving %dÅo freeÖage %d (ptrÖage %dÅype %d)\n",

3427 
iDbPage
, 
iFªePage
, 
iPåPage
, 
eTy≥
));

3428 
rc
 = 
	`sqlôe3PagîMovïage
(
pPagî
, 
pDbPage
->pDbPage, 
iFªePage
, 
isCommô
);

3429 if–
rc
!=
SQLITE_OK
 ){

3430  
rc
;

3432 
pDbPage
->
pgno
 = 
iFªePage
;

3442 if–
eTy≥
==
PTRMAP_BTREE
 ||ÉTy≥==
PTRMAP_ROOTPAGE
 ){

3443 
rc
 = 
	`£tChûdPåm≠s
(
pDbPage
);

3444 if–
rc
!=
SQLITE_OK
 ){

3445  
rc
;

3448 
Pgno
 
√xtOvÊ
 = 
	`gë4byã
(
pDbPage
->
aD©a
);

3449 if–
√xtOvÊ
!=0 ){

3450 
	`±rm≠Put
(
pBt
, 
√xtOvÊ
, 
PTRMAP_OVERFLOW2
, 
iFªePage
, &
rc
);

3451 if–
rc
!=
SQLITE_OK
 ){

3452  
rc
;

3461 if–
eTy≥
!=
PTRMAP_ROOTPAGE
 ){

3462 
rc
 = 
	`båìGëPage
(
pBt
, 
iPåPage
, &
pPåPage
, 0);

3463 if–
rc
!=
SQLITE_OK
 ){

3464  
rc
;

3466 
rc
 = 
	`sqlôe3PagîWrôe
(
pPåPage
->
pDbPage
);

3467 if–
rc
!=
SQLITE_OK
 ){

3468 
	`ªÀa£Page
(
pPåPage
);

3469  
rc
;

3471 
rc
 = 
	`modifyPagePoöãr
(
pPåPage
, 
iDbPage
, 
iFªePage
, 
eTy≥
);

3472 
	`ªÀa£Page
(
pPåPage
);

3473 if–
rc
==
SQLITE_OK
 ){

3474 
	`±rm≠Put
(
pBt
, 
iFªePage
, 
eTy≥
, 
iPåPage
, &
rc
);

3477  
rc
;

3478 
	}
}

3481 
ÆloˇãBåìPage
(
BtSh¨ed
 *, 
MemPage
 **, 
Pgno
 *, Pgno, 
u8
);

3500 
	$ö¸VacuumSãp
(
BtSh¨ed
 *
pBt
, 
Pgno
 
nFö
, Pgnÿ
iLa°Pg
, 
bCommô
){

3501 
Pgno
 
nFªeLi°
;

3502 
rc
;

3504 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

3505 
	`as£π
–
iLa°Pg
>
nFö
 );

3507 if–!
	`PTRMAP_ISPAGE
(
pBt
, 
iLa°Pg
Ë&& iLa°Pg!=
	`PENDING_BYTE_PAGE
(pBt) ){

3508 
u8
 
eTy≥
;

3509 
Pgno
 
iPåPage
;

3511 
nFªeLi°
 = 
	`gë4byã
(&
pBt
->
pPage1
->
aD©a
[36]);

3512 if–
nFªeLi°
==0 ){

3513  
SQLITE_DONE
;

3516 
rc
 = 
	`±rm≠Gë
(
pBt
, 
iLa°Pg
, &
eTy≥
, &
iPåPage
);

3517 if–
rc
!=
SQLITE_OK
 ){

3518  
rc
;

3520 if–
eTy≥
==
PTRMAP_ROOTPAGE
 ){

3521  
SQLITE_CORRUPT_BKPT
;

3524 if–
eTy≥
==
PTRMAP_FREEPAGE
 ){

3525 if–
bCommô
==0 ){

3531 
Pgno
 
iFªePg
;

3532 
MemPage
 *
pFªePg
;

3533 
rc
 = 
	`ÆloˇãBåìPage
(
pBt
, &
pFªePg
, &
iFªePg
, 
iLa°Pg
, 
BTALLOC_EXACT
);

3534 if–
rc
!=
SQLITE_OK
 ){

3535  
rc
;

3537 
	`as£π
–
iFªePg
==
iLa°Pg
 );

3538 
	`ªÀa£Page
(
pFªePg
);

3541 
Pgno
 
iFªePg
;

3542 
MemPage
 *
pLa°Pg
;

3543 
u8
 
eMode
 = 
BTALLOC_ANY
;

3544 
Pgno
 
iNór
 = 0;

3546 
rc
 = 
	`båìGëPage
(
pBt
, 
iLa°Pg
, &
pLa°Pg
, 0);

3547 if–
rc
!=
SQLITE_OK
 ){

3548  
rc
;

3558 if–
bCommô
==0 ){

3559 
eMode
 = 
BTALLOC_LE
;

3560 
iNór
 = 
nFö
;

3563 
MemPage
 *
pFªePg
;

3564 
rc
 = 
	`ÆloˇãBåìPage
(
pBt
, &
pFªePg
, &
iFªePg
, 
iNór
, 
eMode
);

3565 if–
rc
!=
SQLITE_OK
 ){

3566 
	`ªÀa£Page
(
pLa°Pg
);

3567  
rc
;

3569 
	`ªÀa£Page
(
pFªePg
);

3570 } 
bCommô
 && 
iFªePg
>
nFö
 );

3571 
	`as£π
–
iFªePg
<
iLa°Pg
 );

3573 
rc
 = 
	`ªloˇãPage
(
pBt
, 
pLa°Pg
, 
eTy≥
, 
iPåPage
, 
iFªePg
, 
bCommô
);

3574 
	`ªÀa£Page
(
pLa°Pg
);

3575 if–
rc
!=
SQLITE_OK
 ){

3576  
rc
;

3581 if–
bCommô
==0 ){

3583 
iLa°Pg
--;

3584 } 
iLa°Pg
==
	`PENDING_BYTE_PAGE
(
pBt
Ë|| 
	`PTRMAP_ISPAGE
(pBt, iLastPg) );

3585 
pBt
->
bDoTrunˇã
 = 1;

3586 
pBt
->
nPage
 = 
iLa°Pg
;

3588  
SQLITE_OK
;

3589 
	}
}

3596 
Pgno
 
	$föÆDbSize
(
BtSh¨ed
 *
pBt
, 
Pgno
 
nOrig
, Pgnÿ
nFªe
){

3597 
nE¡ry
;

3598 
Pgno
 
nPåm≠
;

3599 
Pgno
 
nFö
;

3601 
nE¡ry
 = 
pBt
->
ußbÀSize
/5;

3602 
nPåm≠
 = (
nFªe
-
nOrig
+
	`PTRMAP_PAGENO
(
pBt
,ÇOrig)+
nE¡ry
)/nEntry;

3603 
nFö
 = 
nOrig
 - 
nFªe
 - 
nPåm≠
;

3604 if–
nOrig
>
	`PENDING_BYTE_PAGE
(
pBt
Ë&& 
nFö
<PENDING_BYTE_PAGE(pBt) ){

3605 
nFö
--;

3607  
	`PTRMAP_ISPAGE
(
pBt
, 
nFö
Ë||ÇFö==
	`PENDING_BYTE_PAGE
(pBt) ){

3608 
nFö
--;

3611  
nFö
;

3612 
	}
}

3622 
	$sqlôe3BåìIn¸Vacuum
(
Båì
 *
p
){

3623 
rc
;

3624 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

3626 
	`sqlôe3BåìE¡î
(
p
);

3627 
	`as£π
–
pBt
->
öTønß˘i⁄
==
TRANS_WRITE
 && 
p
->
öTøns
==TRANS_WRITE );

3628 if–!
pBt
->
autoVacuum
 ){

3629 
rc
 = 
SQLITE_DONE
;

3631 
Pgno
 
nOrig
 = 
	`båìPagecou¡
(
pBt
);

3632 
Pgno
 
nFªe
 = 
	`gë4byã
(&
pBt
->
pPage1
->
aD©a
[36]);

3633 
Pgno
 
nFö
 = 
	`föÆDbSize
(
pBt
, 
nOrig
, 
nFªe
);

3635 if–
nOrig
<
nFö
 ){

3636 
rc
 = 
SQLITE_CORRUPT_BKPT
;

3637 }if–
nFªe
>0 ){

3638 
rc
 = 
	`ßveAŒCurs‹s
(
pBt
, 0, 0);

3639 if–
rc
==
SQLITE_OK
 ){

3640 
	`övÆid©eAŒOvîÊowCache
(
pBt
);

3641 
rc
 = 
	`ö¸VacuumSãp
(
pBt
, 
nFö
, 
nOrig
, 0);

3643 if–
rc
==
SQLITE_OK
 ){

3644 
rc
 = 
	`sqlôe3PagîWrôe
(
pBt
->
pPage1
->
pDbPage
);

3645 
	`put4byã
(&
pBt
->
pPage1
->
aD©a
[28],ÖBt->
nPage
);

3648 
rc
 = 
SQLITE_DONE
;

3651 
	`sqlôe3BåìLóve
(
p
);

3652  
rc
;

3653 
	}
}

3664 
	$autoVacuumCommô
(
BtSh¨ed
 *
pBt
){

3665 
rc
 = 
SQLITE_OK
;

3666 
Pagî
 *
pPagî
 = 
pBt
->pPager;

3667 
	`VVA_ONLY
–
nRef
 = 
	`sqlôe3PagîRefcou¡
(
pPagî
); )

3669 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

3670 
	`övÆid©eAŒOvîÊowCache
(
pBt
);

3671 
	`as£π
(
pBt
->
autoVacuum
);

3672 if–!
pBt
->
ö¸Vacuum
 ){

3673 
Pgno
 
nFö
;

3674 
Pgno
 
nFªe
;

3675 
Pgno
 
iFªe
;

3676 
Pgno
 
nOrig
;

3678 
nOrig
 = 
	`båìPagecou¡
(
pBt
);

3679 if–
	`PTRMAP_ISPAGE
(
pBt
, 
nOrig
Ë||ÇOrig==
	`PENDING_BYTE_PAGE
(pBt) ){

3684  
SQLITE_CORRUPT_BKPT
;

3687 
nFªe
 = 
	`gë4byã
(&
pBt
->
pPage1
->
aD©a
[36]);

3688 
nFö
 = 
	`föÆDbSize
(
pBt
, 
nOrig
, 
nFªe
);

3689 if–
nFö
>
nOrig
 )  
SQLITE_CORRUPT_BKPT
;

3690 if–
nFö
<
nOrig
 ){

3691 
rc
 = 
	`ßveAŒCurs‹s
(
pBt
, 0, 0);

3693 
iFªe
=
nOrig
; iFªe>
nFö
 && 
rc
==
SQLITE_OK
; iFree--){

3694 
rc
 = 
	`ö¸VacuumSãp
(
pBt
, 
nFö
, 
iFªe
, 1);

3696 if–(
rc
==
SQLITE_DONE
 ||Ñc==
SQLITE_OK
Ë&& 
nFªe
>0 ){

3697 
rc
 = 
	`sqlôe3PagîWrôe
(
pBt
->
pPage1
->
pDbPage
);

3698 
	`put4byã
(&
pBt
->
pPage1
->
aD©a
[32], 0);

3699 
	`put4byã
(&
pBt
->
pPage1
->
aD©a
[36], 0);

3700 
	`put4byã
(&
pBt
->
pPage1
->
aD©a
[28], 
nFö
);

3701 
pBt
->
bDoTrunˇã
 = 1;

3702 
pBt
->
nPage
 = 
nFö
;

3704 if–
rc
!=
SQLITE_OK
 ){

3705 
	`sqlôe3PagîRﬁlback
(
pPagî
);

3709 
	`as£π
–
nRef
>=
	`sqlôe3PagîRefcou¡
(
pPagî
) );

3710  
rc
;

3711 
	}
}

3714 
	#£tChûdPåm≠s
(
x
Ë
SQLITE_OK


	)

3744 
	$sqlôe3BåìCommôPha£O√
(
Båì
 *
p
, c⁄° *
zMa°î
){

3745 
Loggî
 *
pLoggî
 = 
p
->
pBt
->
pPagî
->pLogger;

3746 
rc
 = 
SQLITE_OK
;

3747 if–
p
->
öTøns
==
TRANS_WRITE
 ){

3748 
	`sqlôe3LogF‹˚AtCommô
(
p
);

3749 if(
pLoggî
->
log_fd
 > 0 &&ÖLoggî->
p_check
 < 
LOG_LIMIT
)

3750  
rc
;

3751 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

3752 
	`sqlôe3BåìE¡î
(
p
);

3753 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


3754 if–
pBt
->
autoVacuum
 ){

3755 
rc
 = 
	`autoVacuumCommô
(
pBt
);

3756 if–
rc
!=
SQLITE_OK
 ){

3757 
	`sqlôe3BåìLóve
(
p
);

3758  
rc
;

3761 if–
pBt
->
bDoTrunˇã
 ){

3762 
	`sqlôe3PagîTrunˇãImage
(
pBt
->
pPagî
,ÖBt->
nPage
);

3765 
rc
 = 
	`sqlôe3PagîCommôPha£O√
(
pBt
->
pPagî
, 
zMa°î
, 0);

3766 
	`sqlôe3BåìLóve
(
p
);

3768  
rc
;

3769 
	}
}

3775 
	$båìEndTønß˘i⁄
(
Båì
 *
p
){

3776 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

3777 
sqlôe3
 *
db
 = 
p
->db;

3778 
	`as£π
–
	`sqlôe3BåìHﬁdsMuãx
(
p
) );

3780 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


3781 
pBt
->
bDoTrunˇã
 = 0;

3783 if–
p
->
öTøns
>
TRANS_NONE
 && 
db
->
nVdbeRód
>1 ){

3787 
	`downgødeAŒSh¨edCacheTabÀLocks
(
p
);

3788 
p
->
öTøns
 = 
TRANS_READ
;

3794 if–
p
->
öTøns
!=
TRANS_NONE
 ){

3795 
	`˛órAŒSh¨edCacheTabÀLocks
(
p
);

3796 
pBt
->
nTønß˘i⁄
--;

3797 if–0==
pBt
->
nTønß˘i⁄
 ){

3798 
pBt
->
öTønß˘i⁄
 = 
TRANS_NONE
;

3804 
p
->
öTøns
 = 
TRANS_NONE
;

3805 
	`u∆ockBåìIfUnu£d
(
pBt
);

3808 
	`båìI¡egrôy
(
p
);

3809 
	}
}

3838 
	$sqlôe3BåìCommôPha£Two
(
Båì
 *
p
, 
bCÀ™up
){

3840 
Loggî
 *
pLoggî
 = 
p
->
pBt
->
pPagî
->pLogger;

3841 if–
p
->
öTøns
==
TRANS_NONE
 )  
SQLITE_OK
;

3842 if–
p
->
öTøns
==
TRANS_WRITE
 ){

3843 if(
pLoggî
->
log_fd
 > 0 &&ÖLoggî->
p_check
 < 
LOG_LIMIT
){

3844  
SQLITE_OK
;

3847 
	`sqlôe3BåìE¡î
(
p
);

3848 
	`båìI¡egrôy
(
p
);

3853 
rc
;

3854 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

3855 
	`as£π
–
pBt
->
öTønß˘i⁄
==
TRANS_WRITE
 );

3856 
	`as£π
–
pBt
->
nTønß˘i⁄
>0 );

3858 
rc
 = 
	`sqlôe3PagîCommôPha£Two
(
pBt
->
pPagî
);

3859 if–
rc
!=
SQLITE_OK
 && 
bCÀ™up
==0 ){

3860 
	`sqlôe3BåìLóve
(
p
);

3861  
rc
;

3863 
p
->
iD©aVîsi⁄
--;

3864 
pBt
->
öTønß˘i⁄
 = 
TRANS_READ
;

3865 
	`båìCÀ¨HasC⁄ã¡
(
pBt
);

3868 
	`båìEndTønß˘i⁄
(
p
);

3869 
	`sqlôe3BåìLóve
(
p
);

3870  
SQLITE_OK
;

3871 
	}
}

3878 
	$sqlôe3BåìCommô
(
Båì
 *
p
){

3879 
rc
;

3880 
	`sqlôe3BåìE¡î
(
p
);

3881 
rc
 = 
	`sqlôe3BåìCommôPha£O√
(
p
, 0);

3882 if–
rc
==
SQLITE_OK
 ){

3883 
rc
 = 
	`sqlôe3BåìCommôPha£Two
(
p
, 0);

3885 
	`sqlôe3BåìLóve
(
p
);

3886  
rc
;

3887 
	}
}

3915 
	$sqlôe3BåìTrùAŒCurs‹s
(
Båì
 *
pBåì
, 
îrCode
, 
wrôeO∆y
){

3916 
BtCurs‹
 *
p
;

3917 
rc
 = 
SQLITE_OK
;

3919 
	`as£π
–(
wrôeO∆y
==0 || wrôeO∆y==1Ë&& 
BTCF_WrôeFœg
==1 );

3920 if–
pBåì
 ){

3921 
	`sqlôe3BåìE¡î
(
pBåì
);

3922 
p
=
pBåì
->
pBt
->
pCurs‹
;Ö;Öı->
pNext
){

3923 
i
;

3924 if–
wrôeO∆y
 && (
p
->
curFœgs
 & 
BTCF_WrôeFœg
)==0 ){

3925 if–
p
->
eSèã
==
CURSOR_VALID
 ||Ö->eSèã==
CURSOR_SKIPNEXT
 ){

3926 
rc
 = 
	`ßveCurs‹Posôi⁄
(
p
);

3927 if–
rc
!=
SQLITE_OK
 ){

3928 ()
	`sqlôe3BåìTrùAŒCurs‹s
(
pBåì
, 
rc
, 0);

3933 
	`sqlôe3BåìCÀ¨Curs‹
(
p
);

3934 
p
->
eSèã
 = 
CURSOR_FAULT
;

3935 
p
->
skùNext
 = 
îrCode
;

3937 
i
=0; i<=
p
->
iPage
; i++){

3938 
	`ªÀa£Page
(
p
->
≠Page
[
i
]);

3939 
p
->
≠Page
[
i
] = 0;

3942 
	`sqlôe3BåìLóve
(
pBåì
);

3944  
rc
;

3945 
	}
}

3958 
	$sqlôe3BåìRﬁlback
(
Båì
 *
p
, 
åùCode
, 
wrôeO∆y
){

3959 
rc
;

3960 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

3961 
MemPage
 *
pPage1
;

3963 
	`as£π
–
wrôeO∆y
==1 || writeOnly==0 );

3964 
	`as£π
–
åùCode
==
SQLITE_ABORT_ROLLBACK
 ||ÅrùCode==
SQLITE_OK
 );

3965 
	`sqlôe3BåìE¡î
(
p
);

3966 if–
åùCode
==
SQLITE_OK
 ){

3967 
rc
 = 
åùCode
 = 
	`ßveAŒCurs‹s
(
pBt
, 0, 0);

3968 if–
rc
 ) 
wrôeO∆y
 = 0;

3970 
rc
 = 
SQLITE_OK
;

3972 if–
åùCode
 ){

3973 
rc2
 = 
	`sqlôe3BåìTrùAŒCurs‹s
(
p
, 
åùCode
, 
wrôeO∆y
);

3974 
	`as£π
–
rc
==
SQLITE_OK
 || (
wrôeO∆y
==0 && 
rc2
==SQLITE_OK) );

3975 if–
rc2
!=
SQLITE_OK
 ) 
rc
 =Ñc2;

3977 
	`båìI¡egrôy
(
p
);

3979 if–
p
->
öTøns
==
TRANS_WRITE
 ){

3980 
rc2
;

3982 
	`as£π
–
TRANS_WRITE
==
pBt
->
öTønß˘i⁄
 );

3983 
	`sqlôe3LogRﬁlback
(
pBt
->
pPagî
->
pLoggî
);

3984 
rc2
 = 
	`sqlôe3PagîRﬁlback
(
pBt
->
pPagî
);

3985 if–
rc2
!=
SQLITE_OK
 ){

3986 
rc
 = 
rc2
;

3992 if–
	`båìGëPage
(
pBt
, 1, &
pPage1
, 0)==
SQLITE_OK
 ){

3993 
nPage
 = 
	`gë4byã
(28+(
u8
*)
pPage1
->
aD©a
);

3994 
	`ã°ˇ£
–
nPage
==0 );

3995 if–
nPage
==0 ) 
	`sqlôe3PagîPagecou¡
(
pBt
->
pPagî
, &nPage);

3996 
	`ã°ˇ£
–
pBt
->
nPage
!=nPage );

3997 
pBt
->
nPage
 =ÇPage;

3998 
	`ªÀa£Page
(
pPage1
);

4000 
	`as£π
–
	`cou¡VÆidCurs‹s
(
pBt
, 1)==0 );

4001 
pBt
->
öTønß˘i⁄
 = 
TRANS_READ
;

4002 
	`båìCÀ¨HasC⁄ã¡
(
pBt
);

4005 
	`båìEndTønß˘i⁄
(
p
);

4006 
	`sqlôe3BåìLóve
(
p
);

4007  
rc
;

4008 
	}
}

4028 
	$sqlôe3BåìBegöStmt
(
Båì
 *
p
, 
iSèãmít
){

4029 
rc
;

4030 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

4031 
	`sqlôe3BåìE¡î
(
p
);

4032 
	`as£π
–
p
->
öTøns
==
TRANS_WRITE
 );

4033 
	`as£π
–(
pBt
->
btsFœgs
 & 
BTS_READ_ONLY
)==0 );

4034 
	`as£π
–
iSèãmít
>0 );

4035 
	`as£π
–
iSèãmít
>
p
->
db
->
nSavïoöt
 );

4036 
	`as£π
–
pBt
->
öTønß˘i⁄
==
TRANS_WRITE
 );

4042 
rc
 = 
	`sqlôe3PagîO≥nSavïoöt
(
pBt
->
pPagî
, 
iSèãmít
);

4043 
	`sqlôe3BåìLóve
(
p
);

4044  
rc
;

4045 
	}
}

4059 
	$sqlôe3BåìSavïoöt
(
Båì
 *
p
, 
›
, 
iSavïoöt
){

4060 
rc
 = 
SQLITE_OK
;

4061 
	`sqlôe3LogBåìSavïoöt
(
p
,
›
,
iSavïoöt
);

4062 if–
p
 &&Ö->
öTøns
==
TRANS_WRITE
 ){

4063 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

4064 
	`as£π
–
›
==
SAVEPOINT_RELEASE
 || op==
SAVEPOINT_ROLLBACK
 );

4065 
	`as£π
–
iSavïoöt
>=0 || (iSavïoöt==-1 && 
›
==
SAVEPOINT_ROLLBACK
) );

4066 
	`sqlôe3BåìE¡î
(
p
);

4067 
rc
 = 
	`sqlôe3PagîSavïoöt
(
pBt
->
pPagî
, 
›
, 
iSavïoöt
);

4068 if–
rc
==
SQLITE_OK
 ){

4069 if–
iSavïoöt
<0 && (
pBt
->
btsFœgs
 & 
BTS_INITIALLY_EMPTY
)!=0 ){

4070 
pBt
->
nPage
 = 0;

4072 
rc
 = 
	`√wD©aba£
(
pBt
);

4073 
pBt
->
nPage
 = 
	`gë4byã
(28 +ÖBt->
pPage1
->
aD©a
);

4078 
	`as£π
–
pBt
->
nPage
>0 );

4080 
	`sqlôe3BåìLóve
(
p
);

4082  
rc
;

4083 
	}
}

4127 
	$båìCurs‹
(

4128 
Båì
 *
p
,

4129 
iTabÀ
,

4130 
wrFœg
,

4131 
KeyInfo
 *
pKeyInfo
,

4132 
BtCurs‹
 *
pCur


4134 
idx_¨õs
 = 0;

4135 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

4136 
BtCurs‹
 *
pX
;

4138 
	`as£π
–
	`sqlôe3BåìHﬁdsMuãx
(
p
) );

4139 
	`as£π
–
wrFœg
==0

4140 || 
wrFœg
==
BTREE_WRCSR


4141 || 
wrFœg
==(
BTREE_WRCSR
|
BTREE_FORDELETE
)

4148 
	`as£π
–
	`hasSh¨edCacheTabÀLock
(
p
, 
iTabÀ
, 
pKeyInfo
!=0, (
wrFœg
?2:1)) );

4149 
	`as£π
–
wrFœg
==0 || !
	`hasRódC⁄Êi˘s
(
p
, 
iTabÀ
) );

4152 
	`as£π
–
p
->
öTøns
>
TRANS_NONE
 );

4153 
	`as£π
–
wrFœg
==0 || 
p
->
öTøns
==
TRANS_WRITE
 );

4154 
	`as£π
–
pBt
->
pPage1
 &&ÖBt->pPage1->
aD©a
 );

4155 
	`as£π
–
wrFœg
==0 || (
pBt
->
btsFœgs
 & 
BTS_READ_ONLY
)==0 );

4157 if–
wrFœg
 ){

4158 
	`ÆloˇãTempS∑˚
(
pBt
);

4159 if–
pBt
->
pTmpS∑˚
==0 )  
SQLITE_NOMEM_BKPT
;

4161 if–
iTabÀ
==1 && 
	`båìPagecou¡
(
pBt
)==0 ){

4162 
	`as£π
–
wrFœg
==0 );

4163 
iTabÀ
 = 0;

4168 
pCur
->
pgnoRoŸ
 = (
Pgno
)
iTabÀ
;

4169 
pCur
->
iPage
 = -1;

4170 
pCur
->
pKeyInfo
 =ÖKeyInfo;

4171 
pCur
->
pBåì
 = 
p
;

4172 
pCur
->
pBt
 =ÖBt;

4173 
pCur
->
idx_¨õs
 = idx_aries++;

4174 
pCur
->
curFœgs
 = 
wrFœg
 ? 
BTCF_WrôeFœg
 : 0;

4175 
pCur
->
curPagîFœgs
 = 
wrFœg
 ? 0 : 
PAGER_GET_READONLY
;

4178 
pX
=
pBt
->
pCurs‹
;ÖX;ÖXıX->
pNext
){

4179 if–
pX
->
pgnoRoŸ
==(
Pgno
)
iTabÀ
 ){

4180 
pX
->
curFœgs
 |
BTCF_Mu…ùÀ
;

4181 
pCur
->
curFœgs
 |
BTCF_Mu…ùÀ
;

4184 
pCur
->
pNext
 = 
pBt
->
pCurs‹
;

4185 
pBt
->
pCurs‹
 = 
pCur
;

4186 
pCur
->
eSèã
 = 
CURSOR_INVALID
;

4188  
SQLITE_OK
;

4189 
	}
}

4190 
	$sqlôe3BåìCurs‹
(

4191 
Båì
 *
p
,

4192 
iTabÀ
,

4193 
wrFœg
,

4194 
KeyInfo
 *
pKeyInfo
,

4195 
BtCurs‹
 *
pCur


4197 
rc
;

4198 if–
iTabÀ
<1 ){

4199 
rc
 = 
SQLITE_CORRUPT_BKPT
;

4201 
	`sqlôe3BåìE¡î
(
p
);

4202 
rc
 = 
	`båìCurs‹
(
p
, 
iTabÀ
, 
wrFœg
, 
pKeyInfo
, 
pCur
);

4204 if(
rc
 =
SQLITE_OK
)

4205 
	`sqlôe3LogCurs‹O≥n
(
wrFœg
, 
pCur
, 
p
);

4206 
	`sqlôe3BåìLóve
(
p
);

4208  
rc
;

4209 
	}
}

4219 
	$sqlôe3BåìCurs‹Size
(){

4220  
	`ROUND8
((
BtCurs‹
));

4221 
	}
}

4231 
	$sqlôe3BåìCurs‹Zîo
(
BtCurs‹
 *
p
){

4232 
	`mem£t
(
p
, 0, 
	`off£tof
(
BtCurs‹
, 
iPage
));

4233 
	}
}

4239 
	$sqlôe3BåìClo£Curs‹
(
BtCurs‹
 *
pCur
){

4240 
Båì
 *
pBåì
 = 
pCur
->pBtree;

4241 if–
pBåì
 ){

4242 
i
;

4243 
BtSh¨ed
 *
pBt
 = 
pCur
->pBt;

4244 
	`sqlôe3BåìE¡î
(
pBåì
);

4245 
	`sqlôe3BåìCÀ¨Curs‹
(
pCur
);

4246 
	`as£π
–
pBt
->
pCurs‹
!=0 );

4247 if–
pBt
->
pCurs‹
==
pCur
 ){

4248 
pBt
->
pCurs‹
 = 
pCur
->
pNext
;

4250 
BtCurs‹
 *
pPªv
 = 
pBt
->
pCurs‹
;

4252 if–
pPªv
->
pNext
==
pCur
 ){

4253 
pPªv
->
pNext
 = 
pCur
->pNext;

4256 
pPªv
 =ÖPªv->
pNext
;

4257 } 
	`ALWAYS
(
pPªv
) );

4259 
i
=0; i<=
pCur
->
iPage
; i++){

4260 
	`ªÀa£Page
(
pCur
->
≠Page
[
i
]);

4262 
	`u∆ockBåìIfUnu£d
(
pBt
);

4263 
	`sqlôe3_‰ì
(
pCur
->
aOvîÊow
);

4265 
	`sqlôe3LogCurs‹Clo£
(
pCur
);

4266 
	`sqlôe3BåìLóve
(
pBåì
);

4268  
SQLITE_OK
;

4269 
	}
}

4279 #i‚de‡
NDEBUG


4280 
	$as£πCñlInfo
(
BtCurs‹
 *
pCur
){

4281 
CñlInfo
 
öfo
;

4282 
iPage
 = 
pCur
->iPage;

4283 
	`mem£t
(&
öfo
, 0, (info));

4284 
	`båìP¨£Cñl
(
pCur
->
≠Page
[
iPage
],ÖCur->
aiIdx
[iPage], &
öfo
);

4285 
	`as£π
–
CORRUPT_DB
 || 
	`memcmp
(&
öfo
, &
pCur
->info, (info))==0 );

4286 
	}
}

4288 
	#as£πCñlInfo
(
x
)

	)

4290 
SQLITE_NOINLINE
 
	$gëCñlInfo
(
BtCurs‹
 *
pCur
){

4291 if–
pCur
->
öfo
.
nSize
==0 ){

4292 
iPage
 = 
pCur
->iPage;

4293 
pCur
->
curFœgs
 |
BTCF_VÆidNKey
;

4294 
	`båìP¨£Cñl
(
pCur
->
≠Page
[
iPage
],pCur->
aiIdx
[iPage],&pCur->
öfo
);

4296 
	`as£πCñlInfo
(
pCur
);

4298 
	}
}

4300 #i‚de‡
NDEBUG


4306 
	$sqlôe3BåìCurs‹IsVÆid
(
BtCurs‹
 *
pCur
){

4307  
pCur
 &&ÖCur->
eSèã
==
CURSOR_VALID
;

4308 
	}
}

4310 
	$sqlôe3BåìCurs‹IsVÆidNN
(
BtCurs‹
 *
pCur
){

4311 
	`as£π
–
pCur
!=0 );

4312  
pCur
->
eSèã
==
CURSOR_VALID
;

4313 
	}
}

4321 
i64
 
	$sqlôe3BåìI¡egîKey
(
BtCurs‹
 *
pCur
){

4322 
	`as£π
–
	`curs‹HﬁdsMuãx
(
pCur
) );

4323 
	`as£π
–
pCur
->
eSèã
==
CURSOR_VALID
 );

4324 
	`as£π
–
pCur
->
curI¡Key
 );

4325 
	`gëCñlInfo
(
pCur
);

4326 
	`sqlôe3LogCurs‹I¡egîKey
(
pCur
);

4327  
pCur
->
öfo
.
nKey
;

4328 
	}
}

4339 
u32
 
	$sqlôe3BåìPaylﬂdSize
(
BtCurs‹
 *
pCur
){

4340 
	`as£π
–
	`curs‹HﬁdsMuãx
(
pCur
) );

4341 
	`as£π
–
pCur
->
eSèã
==
CURSOR_VALID
 );

4342 
	`gëCñlInfo
(
pCur
);

4343 
	`sqlôe3LogCurs‹I¡egîKey
(
pCur
);

4344  
pCur
->
öfo
.
nPaylﬂd
;

4345 
	}
}

4366 
	$gëOvîÊowPage
(

4367 
BtSh¨ed
 *
pBt
,

4368 
Pgno
 
ovÊ
,

4369 
MemPage
 **
µPage
,

4370 
Pgno
 *
pPgnoNext


4372 
Pgno
 
√xt
 = 0;

4373 
MemPage
 *
pPage
 = 0;

4374 
rc
 = 
SQLITE_OK
;

4376 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

4377 
	`as£π
(
pPgnoNext
);

4379 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


4386 if–
pBt
->
autoVacuum
 ){

4387 
Pgno
 
pgno
;

4388 
Pgno
 
iGuess
 = 
ovÊ
+1;

4389 
u8
 
eTy≥
;

4391  
	`PTRMAP_ISPAGE
(
pBt
, 
iGuess
Ë|| iGuess==
	`PENDING_BYTE_PAGE
(pBt) ){

4392 
iGuess
++;

4395 if–
iGuess
<=
	`båìPagecou¡
(
pBt
) ){

4396 
rc
 = 
	`±rm≠Gë
(
pBt
, 
iGuess
, &
eTy≥
, &
pgno
);

4397 if–
rc
==
SQLITE_OK
 && 
eTy≥
==
PTRMAP_OVERFLOW2
 && 
pgno
==
ovÊ
 ){

4398 
√xt
 = 
iGuess
;

4399 
rc
 = 
SQLITE_DONE
;

4405 
	`as£π
–
√xt
==0 || 
rc
==
SQLITE_DONE
 );

4406 if–
rc
==
SQLITE_OK
 ){

4407 
rc
 = 
	`båìGëPage
(
pBt
, 
ovÊ
, &
pPage
, (
µPage
==0Ë? 
PAGER_GET_READONLY
 : 0);

4408 
	`as£π
–
rc
==
SQLITE_OK
 || 
pPage
==0 );

4409 if–
rc
==
SQLITE_OK
 ){

4410 
√xt
 = 
	`gë4byã
(
pPage
->
aD©a
);

4414 *
pPgnoNext
 = 
√xt
;

4415 if–
µPage
 ){

4416 *
µPage
 = 
pPage
;

4418 
	`ªÀa£Page
(
pPage
);

4420  (
rc
==
SQLITE_DONE
 ? 
SQLITE_OK
 :Ñc);

4421 
	}
}

4434 
	$c›yPaylﬂd
(

4435 *
pPaylﬂd
,

4436 *
pBuf
,

4437 
nByã
,

4438 
eOp
,

4439 
DbPage
 *
pDbPage


4441 if–
eOp
 ){

4443 
rc
 = 
	`sqlôe3PagîWrôe
(
pDbPage
);

4444 if–
rc
!=
SQLITE_OK
 ){

4445  
rc
;

4447 
	`mem˝y
(
pPaylﬂd
, 
pBuf
, 
nByã
);

4450 
	`mem˝y
(
pBuf
, 
pPaylﬂd
, 
nByã
);

4452  
SQLITE_OK
;

4453 
	}
}

4485 
	$ac˚ssPaylﬂd
(

4486 
BtCurs‹
 *
pCur
,

4487 
u32
 
off£t
,

4488 
u32
 
amt
,

4489 *
pBuf
,

4490 
eOp


4492 *
aPaylﬂd
;

4493 
rc
 = 
SQLITE_OK
;

4494 
iIdx
 = 0;

4495 
MemPage
 *
pPage
 = 
pCur
->
≠Page
[pCur->
iPage
];

4496 
BtSh¨ed
 *
pBt
 = 
pCur
->pBt;

4497 #ifde‡
SQLITE_DIRECT_OVERFLOW_READ


4498 * c⁄° 
pBufSèπ
 = 
pBuf
;

4499 
bEnd
;

4502 
	`as£π
–
pPage
 );

4503 
	`as£π
–
pCur
->
eSèã
==
CURSOR_VALID
 );

4504 
	`as£π
–
pCur
->
aiIdx
[pCur->
iPage
]<
pPage
->
nCñl
 );

4505 
	`as£π
–
	`curs‹HﬁdsMuãx
(
pCur
) );

4506 
	`as£π
–
eOp
!=2 || 
off£t
==0 );

4508 
	`gëCñlInfo
(
pCur
);

4509 
aPaylﬂd
 = 
pCur
->
öfo
.
pPaylﬂd
;

4510 #ifde‡
SQLITE_DIRECT_OVERFLOW_READ


4511 
bEnd
 = 
off£t
+
amt
==
pCur
->
öfo
.
nPaylﬂd
;

4513 
	`as£π
–
off£t
+
amt
 <
pCur
->
öfo
.
nPaylﬂd
 );

4515 
	`as£π
–
aPaylﬂd
 > 
pPage
->
aD©a
 );

4516 if–(
u±r
)(
aPaylﬂd
 - 
pPage
->
aD©a
Ë> (
pBt
->
ußbÀSize
 - 
pCur
->
öfo
.
nLoˇl
) ){

4522  
SQLITE_CORRUPT_BKPT
;

4526 if–
off£t
<
pCur
->
öfo
.
nLoˇl
 ){

4527 
a
 = 
amt
;

4528 if–
a
+
off£t
>
pCur
->
öfo
.
nLoˇl
 ){

4529 
a
 = 
pCur
->
öfo
.
nLoˇl
 - 
off£t
;

4531 
rc
 = 
	`c›yPaylﬂd
(&
aPaylﬂd
[
off£t
], 
pBuf
, 
a
, (
eOp
 & 0x01), 
pPage
->
pDbPage
);

4532 
off£t
 = 0;

4533 
pBuf
 +
a
;

4534 
amt
 -
a
;

4536 
off£t
 -
pCur
->
öfo
.
nLoˇl
;

4540 if–
rc
==
SQLITE_OK
 && 
amt
>0 ){

4541 c⁄° 
u32
 
ovÊSize
 = 
pBt
->
ußbÀSize
 - 4;

4542 
Pgno
 
√xtPage
;

4544 
√xtPage
 = 
	`gë4byã
(&
aPaylﬂd
[
pCur
->
öfo
.
nLoˇl
]);

4554 if–
eOp
!=2 && (
pCur
->
curFœgs
 & 
BTCF_VÆidOvÊ
)==0 ){

4555 
nOvÊ
 = (
pCur
->
öfo
.
nPaylﬂd
-pCur->öfo.
nLoˇl
+
ovÊSize
-1)/ovflSize;

4556 if–
nOvÊ
>
pCur
->
nOvÊAŒoc
 ){

4557 
Pgno
 *
aNew
 = (Pgno*)
	`sqlôe3RóŒoc
(

4558 
pCur
->
aOvîÊow
, 
nOvÊ
*2*(
Pgno
)

4560 if–
aNew
==0 ){

4561 
rc
 = 
SQLITE_NOMEM_BKPT
;

4563 
pCur
->
nOvÊAŒoc
 = 
nOvÊ
*2;

4564 
pCur
->
aOvîÊow
 = 
aNew
;

4567 if–
rc
==
SQLITE_OK
 ){

4568 
	`mem£t
(
pCur
->
aOvîÊow
, 0, 
nOvÊ
*(
Pgno
));

4569 
pCur
->
curFœgs
 |
BTCF_VÆidOvÊ
;

4577 if–(
pCur
->
curFœgs
 & 
BTCF_VÆidOvÊ
)!=0

4578 && 
pCur
->
aOvîÊow
[
off£t
/
ovÊSize
]

4580 
iIdx
 = (
off£t
/
ovÊSize
);

4581 
√xtPage
 = 
pCur
->
aOvîÊow
[
iIdx
];

4582 
off£t
 = (off£t%
ovÊSize
);

4585  ; 
rc
==
SQLITE_OK
 && 
amt
>0 && 
√xtPage
; 
iIdx
++){

4588 if–(
pCur
->
curFœgs
 & 
BTCF_VÆidOvÊ
)!=0 ){

4589 
	`as£π
–
pCur
->
aOvîÊow
[
iIdx
]==0

4590 || 
pCur
->
aOvîÊow
[
iIdx
]==
√xtPage


4591 || 
CORRUPT_DB
 );

4592 
pCur
->
aOvîÊow
[
iIdx
] = 
√xtPage
;

4595 if–
off£t
>=
ovÊSize
 ){

4605 
	`as£π
–
eOp
!=2 );

4606 
	`as£π
–
pCur
->
curFœgs
 & 
BTCF_VÆidOvÊ
 );

4607 
	`as£π
–
pCur
->
pBåì
->
db
==
pBt
->db );

4608 if–
pCur
->
aOvîÊow
[
iIdx
+1] ){

4609 
√xtPage
 = 
pCur
->
aOvîÊow
[
iIdx
+1];

4611 
rc
 = 
	`gëOvîÊowPage
(
pBt
, 
√xtPage
, 0, &nextPage);

4613 
off£t
 -
ovÊSize
;

4618 #ifde‡
SQLITE_DIRECT_OVERFLOW_READ


4619 
sqlôe3_fûe
 *
fd
;

4621 
a
 = 
amt
;

4622 if–
a
 + 
off£t
 > 
ovÊSize
 ){

4623 
a
 = 
ovÊSize
 - 
off£t
;

4626 #ifde‡
SQLITE_DIRECT_OVERFLOW_READ


4641 if–(
eOp
&0x01)==0

4642 && 
off£t
==0

4643 && (
bEnd
 || 
a
==
ovÊSize
)

4644 && 
pBt
->
öTønß˘i⁄
==
TRANS_READ


4645 && (
fd
 = 
	`sqlôe3PagîFûe
(
pBt
->
pPagî
))->
pMëhods


4646 && 0==
	`sqlôe3PagîU£WÆ
(
pBt
->
pPagî
)

4647 && &
pBuf
[-4]>=
pBufSèπ


4649 
u8
 
aSave
[4];

4650 
u8
 *
aWrôe
 = &
pBuf
[-4];

4651 
	`as£π
–
aWrôe
>=
pBufSèπ
 );

4652 
	`mem˝y
(
aSave
, 
aWrôe
, 4);

4653 
rc
 = 
	`sqlôe3OsRód
(
fd
, 
aWrôe
, 
a
+4, (
i64
)
pBt
->
∑geSize
*(
√xtPage
-1));

4654 
√xtPage
 = 
	`gë4byã
(
aWrôe
);

4655 
	`mem˝y
(
aWrôe
, 
aSave
, 4);

4660 
DbPage
 *
pDbPage
;

4661 
rc
 = 
	`sqlôe3PagîGë
(
pBt
->
pPagî
, 
√xtPage
, &
pDbPage
,

4662 ((
eOp
&0x01)==0 ? 
PAGER_GET_READONLY
 : 0)

4664 if–
rc
==
SQLITE_OK
 ){

4665 
aPaylﬂd
 = 
	`sqlôe3PagîGëD©a
(
pDbPage
);

4666 
√xtPage
 = 
	`gë4byã
(
aPaylﬂd
);

4667 
rc
 = 
	`c›yPaylﬂd
(&
aPaylﬂd
[
off£t
+4], 
pBuf
, 
a
, (
eOp
&0x01), 
pDbPage
);

4668 
	`sqlôe3PagîUƒef
(
pDbPage
);

4669 
off£t
 = 0;

4672 
amt
 -
a
;

4673 
pBuf
 +
a
;

4678 if–
rc
==
SQLITE_OK
 && 
amt
>0 ){

4679  
SQLITE_CORRUPT_BKPT
;

4681  
rc
;

4682 
	}
}

4701 
	$sqlôe3BåìPaylﬂd
(
BtCurs‹
 *
pCur
, 
u32
 
off£t
, u32 
amt
, *
pBuf
){

4702 
	`as£π
–
	`curs‹HﬁdsMuãx
(
pCur
) );

4703 
	`as£π
–
pCur
->
eSèã
==
CURSOR_VALID
 );

4704 
	`as£π
–
pCur
->
iPage
>=0 &&ÖCur->
≠Page
[pCur->iPage] );

4705 
	`as£π
–
pCur
->
aiIdx
[pCur->
iPage
]<pCur->
≠Page
[pCur->iPage]->
nCñl
 );

4706  
	`ac˚ssPaylﬂd
(
pCur
, 
off£t
, 
amt
, (*)
pBuf
, 0);

4707 
	}
}

4708 #i‚de‡
SQLITE_OMIT_INCRBLOB


4709 
	$sqlôe3BåìPaylﬂdChecked
(
BtCurs‹
 *
pCur
, 
u32
 
off£t
, u32 
amt
, *
pBuf
){

4710 
rc
;

4711 i‡–
pCur
->
eSèã
==
CURSOR_INVALID
 ){

4712  
SQLITE_ABORT
;

4714 
	`as£π
–
	`curs‹OwnsBtSh¨ed
(
pCur
) );

4715 
rc
 = 
	`ª°‹eCurs‹Posôi⁄
(
pCur
);

4716 if–
rc
==
SQLITE_OK
 ){

4717 
	`as£π
–
pCur
->
eSèã
==
CURSOR_VALID
 );

4718 
	`as£π
–
pCur
->
iPage
>=0 &&ÖCur->
≠Page
[pCur->iPage] );

4719 
	`as£π
–
pCur
->
aiIdx
[pCur->
iPage
]<pCur->
≠Page
[pCur->iPage]->
nCñl
 );

4720 
rc
 = 
	`ac˚ssPaylﬂd
(
pCur
, 
off£t
, 
amt
, 
pBuf
, 0);

4722  
rc
;

4723 
	}
}

4745 c⁄° *
	$„tchPaylﬂd
(

4746 
BtCurs‹
 *
pCur
,

4747 
u32
 *
pAmt


4749 
u32
 
amt
;

4750 
	`as£π
–
pCur
!=0 &&ÖCur->
iPage
>=0 &&ÖCur->
≠Page
[pCur->iPage]);

4751 
	`as£π
–
pCur
->
eSèã
==
CURSOR_VALID
 );

4752 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCur
->
pBåì
->
db
->
muãx
) );

4753 
	`as£π
–
	`curs‹OwnsBtSh¨ed
(
pCur
) );

4754 
	`as£π
–
pCur
->
aiIdx
[pCur->
iPage
]<pCur->
≠Page
[pCur->iPage]->
nCñl
 );

4755 
	`as£π
–
pCur
->
öfo
.
nSize
>0 );

4756 
	`as£π
–
pCur
->
öfo
.
pPaylﬂd
>pCur->
≠Page
[pCur->
iPage
]->
aD©a
 || 
CORRUPT_DB
 );

4757 
	`as£π
–
pCur
->
öfo
.
pPaylﬂd
<pCur->
≠Page
[pCur->
iPage
]->
aD©aEnd
 ||
CORRUPT_DB
);

4758 
amt
 = ()(
pCur
->
≠Page
[pCur->
iPage
]->
aD©aEnd
 -ÖCur->
öfo
.
pPaylﬂd
);

4759 if–
pCur
->
öfo
.
nLoˇl
<
amt
 )ámt =ÖCur->info.nLocal;

4760 *
pAmt
 = 
amt
;

4761  (*)
pCur
->
öfo
.
pPaylﬂd
;

4762 
	}
}

4779 c⁄° *
	$sqlôe3BåìPaylﬂdFëch
(
BtCurs‹
 *
pCur
, 
u32
 *
pAmt
){

4780  
	`„tchPaylﬂd
(
pCur
, 
pAmt
);

4781 
	}
}

4793 
	$moveToChûd
(
BtCurs‹
 *
pCur
, 
u32
 
√wPgno
){

4794 
BtSh¨ed
 *
pBt
 = 
pCur
->pBt;

4796 
	`as£π
–
	`curs‹OwnsBtSh¨ed
(
pCur
) );

4797 
	`as£π
–
pCur
->
eSèã
==
CURSOR_VALID
 );

4798 
	`as£π
–
pCur
->
iPage
<
BTCURSOR_MAX_DEPTH
 );

4799 
	`as£π
–
pCur
->
iPage
>=0 );

4800 if–
pCur
->
iPage
>=(
BTCURSOR_MAX_DEPTH
-1) ){

4801  
SQLITE_CORRUPT_BKPT
;

4803 
pCur
->
öfo
.
nSize
 = 0;

4804 
pCur
->
curFœgs
 &~(
BTCF_VÆidNKey
|
BTCF_VÆidOvÊ
);

4805 
pCur
->
iPage
++;

4806 
pCur
->
aiIdx
[pCur->
iPage
] = 0;

4807  
	`gëAndInôPage
(
pBt
, 
√wPgno
, &
pCur
->
≠Page
[pCur->
iPage
],

4808 
pCur
,ÖCur->
curPagîFœgs
);

4809 
	}
}

4811 #i‡
SQLITE_DEBUG


4819 
	$as£πP¨ítIndex
(
MemPage
 *
pP¨ít
, 
iIdx
, 
Pgno
 
iChûd
){

4820 if–
CORRUPT_DB
 ) ;

4822 
	`as£π
–
iIdx
<=
pP¨ít
->
nCñl
 );

4823 if–
iIdx
==
pP¨ít
->
nCñl
 ){

4824 
	`as£π
–
	`gë4byã
(&
pP¨ít
->
aD©a
[pP¨ít->
hdrOff£t
+8])==
iChûd
 );

4826 
	`as£π
–
	`gë4byã
(
	`födCñl
(
pP¨ít
, 
iIdx
))==
iChûd
 );

4828 
	}
}

4830 
	#as£πP¨ítIndex
(
x
,
y
,
z
)

	)

4841 
	$moveToP¨ít
(
BtCurs‹
 *
pCur
){

4842 
	`as£π
–
	`curs‹OwnsBtSh¨ed
(
pCur
) );

4843 
	`as£π
–
pCur
->
eSèã
==
CURSOR_VALID
 );

4844 
	`as£π
–
pCur
->
iPage
>0 );

4845 
	`as£π
–
pCur
->
≠Page
[pCur->
iPage
] );

4846 
	`as£πP¨ítIndex
(

4847 
pCur
->
≠Page
[pCur->
iPage
-1],

4848 
pCur
->
aiIdx
[pCur->
iPage
-1],

4849 
pCur
->
≠Page
[pCur->
iPage
]->
pgno


4851 
	`ã°ˇ£
–
pCur
->
aiIdx
[pCur->
iPage
-1] >ÖCur->
≠Page
[pCur->iPage-1]->
nCñl
 );

4852 
pCur
->
öfo
.
nSize
 = 0;

4853 
pCur
->
curFœgs
 &~(
BTCF_VÆidNKey
|
BTCF_VÆidOvÊ
);

4854 
	`ªÀa£PageNŸNuŒ
(
pCur
->
≠Page
[pCur->
iPage
--]);

4855 
	}
}

4878 
	$moveToRoŸ
(
BtCurs‹
 *
pCur
){

4879 
MemPage
 *
pRoŸ
;

4880 
rc
 = 
SQLITE_OK
;

4882 
	`as£π
–
	`curs‹OwnsBtSh¨ed
(
pCur
) );

4883 
	`as£π
–
CURSOR_INVALID
 < 
CURSOR_REQUIRESEEK
 );

4884 
	`as£π
–
CURSOR_VALID
 < 
CURSOR_REQUIRESEEK
 );

4885 
	`as£π
–
CURSOR_FAULT
 > 
CURSOR_REQUIRESEEK
 );

4886 if–
pCur
->
eSèã
>=
CURSOR_REQUIRESEEK
 ){

4887 if–
pCur
->
eSèã
==
CURSOR_FAULT
 ){

4888 
	`as£π
–
pCur
->
skùNext
!=
SQLITE_OK
 );

4889  
pCur
->
skùNext
;

4891 
	`sqlôe3BåìCÀ¨Curs‹
(
pCur
);

4893 if–
pCur
->
iPage
>=0 ){

4894 if–
pCur
->
iPage
 ){

4896 
	`as£π
–
pCur
->
≠Page
[pCur->
iPage
]!=0 );

4897 
	`ªÀa£PageNŸNuŒ
(
pCur
->
≠Page
[pCur->
iPage
--]);

4898 } 
pCur
->
iPage
);

4899 
skù_öô
;

4901 }if–
pCur
->
pgnoRoŸ
==0 ){

4902 
pCur
->
eSèã
 = 
CURSOR_INVALID
;

4903  
SQLITE_OK
;

4905 
	`as£π
–
pCur
->
iPage
==(-1) );

4906 
rc
 = 
	`gëAndInôPage
(
pCur
->
pBåì
->
pBt
,ÖCur->
pgnoRoŸ
, &pCur->
≠Page
[0],

4907 0, 
pCur
->
curPagîFœgs
);

4908 if–
rc
!=
SQLITE_OK
 ){

4909 
pCur
->
eSèã
 = 
CURSOR_INVALID
;

4910  
rc
;

4912 
pCur
->
iPage
 = 0;

4913 
pCur
->
curI¡Key
 =ÖCur->
≠Page
[0]->
ötKey
;

4915 
pRoŸ
 = 
pCur
->
≠Page
[0];

4916 
	`as£π
–
pRoŸ
->
pgno
==
pCur
->
pgnoRoŸ
 );

4928 
	`as£π
–
pRoŸ
->
ötKey
==1 ||ÖRoot->intKey==0 );

4929 if–
pRoŸ
->
isInô
==0 || (
pCur
->
pKeyInfo
==0)!ıRoŸ->
ötKey
 ){

4930  
SQLITE_CORRUPT_BKPT
;

4933 
skù_öô
:

4934 
pCur
->
aiIdx
[0] = 0;

4935 
pCur
->
öfo
.
nSize
 = 0;

4936 
pCur
->
curFœgs
 &~(
BTCF_AtLa°
|
BTCF_VÆidNKey
|
BTCF_VÆidOvÊ
);

4938 
pRoŸ
 = 
pCur
->
≠Page
[0];

4939 if–
pRoŸ
->
nCñl
>0 ){

4940 
pCur
->
eSèã
 = 
CURSOR_VALID
;

4941 }if–!
pRoŸ
->
Àaf
 ){

4942 
Pgno
 
sub∑ge
;

4943 if–
pRoŸ
->
pgno
!=1 )  
SQLITE_CORRUPT_BKPT
;

4944 
sub∑ge
 = 
	`gë4byã
(&
pRoŸ
->
aD©a
[pRoŸ->
hdrOff£t
+8]);

4945 
pCur
->
eSèã
 = 
CURSOR_VALID
;

4946 
rc
 = 
	`moveToChûd
(
pCur
, 
sub∑ge
);

4948 
pCur
->
eSèã
 = 
CURSOR_INVALID
;

4950  
rc
;

4951 
	}
}

4960 
	$moveToLe·mo°
(
BtCurs‹
 *
pCur
){

4961 
Pgno
 
pgno
;

4962 
rc
 = 
SQLITE_OK
;

4963 
MemPage
 *
pPage
;

4965 
	`as£π
–
	`curs‹OwnsBtSh¨ed
(
pCur
) );

4966 
	`as£π
–
pCur
->
eSèã
==
CURSOR_VALID
 );

4967  
rc
==
SQLITE_OK
 && !(
pPage
 = 
pCur
->
≠Page
[pCur->
iPage
])->
Àaf
 ){

4968 
	`as£π
–
pCur
->
aiIdx
[pCur->
iPage
]<
pPage
->
nCñl
 );

4969 
pgno
 = 
	`gë4byã
(
	`födCñl
(
pPage
, 
pCur
->
aiIdx
[pCur->
iPage
]));

4970 
rc
 = 
	`moveToChûd
(
pCur
, 
pgno
);

4972  
rc
;

4973 
	}
}

4985 
	$moveToRightmo°
(
BtCurs‹
 *
pCur
){

4986 
Pgno
 
pgno
;

4987 
rc
 = 
SQLITE_OK
;

4988 
MemPage
 *
pPage
 = 0;

4990 
	`as£π
–
	`curs‹OwnsBtSh¨ed
(
pCur
) );

4991 
	`as£π
–
pCur
->
eSèã
==
CURSOR_VALID
 );

4992  !(
pPage
 = 
pCur
->
≠Page
[pCur->
iPage
])->
Àaf
 ){

4993 
pgno
 = 
	`gë4byã
(&
pPage
->
aD©a
[pPage->
hdrOff£t
+8]);

4994 
pCur
->
aiIdx
[pCur->
iPage
] = 
pPage
->
nCñl
;

4995 
rc
 = 
	`moveToChûd
(
pCur
, 
pgno
);

4996 if–
rc
 ) Ñc;

4998 
pCur
->
aiIdx
[pCur->
iPage
] = 
pPage
->
nCñl
-1;

4999 
	`as£π
–
pCur
->
öfo
.
nSize
==0 );

5000 
	`as£π
–(
pCur
->
curFœgs
 & 
BTCF_VÆidNKey
)==0 );

5001  
SQLITE_OK
;

5002 
	}
}

5008 
	$sqlôe3BåìFú°
(
BtCurs‹
 *
pCur
, *
pRes
){

5009 
rc
;

5011 
	`as£π
–
	`curs‹OwnsBtSh¨ed
(
pCur
) );

5012 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCur
->
pBåì
->
db
->
muãx
) );

5013 
rc
 = 
	`moveToRoŸ
(
pCur
);

5014 if–
rc
==
SQLITE_OK
 ){

5015 if–
pCur
->
eSèã
==
CURSOR_INVALID
 ){

5016 
	`as£π
–
pCur
->
pgnoRoŸ
==0 ||ÖCur->
≠Page
[pCur->
iPage
]->
nCñl
==0 );

5017 *
pRes
 = 1;

5019 
	`as£π
–
pCur
->
≠Page
[pCur->
iPage
]->
nCñl
>0 );

5020 *
pRes
 = 0;

5021 
rc
 = 
	`moveToLe·mo°
(
pCur
);

5024 
	`sqlôe3LogCurs‹Fú°
(
pCur
, *
pRes
);

5025  
rc
;

5026 
	}
}

5032 
	$sqlôe3BåìLa°
(
BtCurs‹
 *
pCur
, *
pRes
){

5033 
rc
;

5035 
	`as£π
–
	`curs‹OwnsBtSh¨ed
(
pCur
) );

5036 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCur
->
pBåì
->
db
->
muãx
) );

5039 if–
CURSOR_VALID
==
pCur
->
eSèã
 && (pCur->
curFœgs
 & 
BTCF_AtLa°
)!=0 ){

5040 #ifde‡
SQLITE_DEBUG


5043 
ii
;

5044 
ii
=0; ii<
pCur
->
iPage
; ii++){

5045 
	`as£π
–
pCur
->
aiIdx
[
ii
]=ıCur->
≠Page
[ii]->
nCñl
 );

5047 
	`as£π
–
pCur
->
aiIdx
[pCur->
iPage
]=ıCur->
≠Page
[pCur->iPage]->
nCñl
-1 );

5048 
	`as£π
–
pCur
->
≠Page
[pCur->
iPage
]->
Àaf
 );

5050  
SQLITE_OK
;

5053 
rc
 = 
	`moveToRoŸ
(
pCur
);

5054 if–
rc
==
SQLITE_OK
 ){

5055 if–
CURSOR_INVALID
==
pCur
->
eSèã
 ){

5056 
	`as£π
–
pCur
->
pgnoRoŸ
==0 ||ÖCur->
≠Page
[pCur->
iPage
]->
nCñl
==0 );

5057 *
pRes
 = 1;

5059 
	`as£π
–
pCur
->
eSèã
==
CURSOR_VALID
 );

5060 *
pRes
 = 0;

5061 
rc
 = 
	`moveToRightmo°
(
pCur
);

5062 if–
rc
==
SQLITE_OK
 ){

5063 
pCur
->
curFœgs
 |
BTCF_AtLa°
;

5065 
pCur
->
curFœgs
 &~
BTCF_AtLa°
;

5070 
	`sqlôe3LogCurs‹La°
(
pCur
, *
pRes
);

5071  
rc
;

5072 
	}
}

5104 
	$sqlôe3BåìMovëoU≈acked
(

5105 
BtCurs‹
 *
pCur
,

5106 
U≈ackedRec‹d
 *
pIdxKey
,

5107 
i64
 
ötKey
,

5108 
büsRight
,

5109 *
pRes


5111 
rc
;

5112 
Rec‹dCom∑ª
 
xRec‹dCom∑ª
;

5114 
	`as£π
–
	`curs‹OwnsBtSh¨ed
(
pCur
) );

5115 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCur
->
pBåì
->
db
->
muãx
) );

5116 
	`as£π
–
pRes
 );

5117 
	`as£π
–(
pIdxKey
==0)==(
pCur
->
pKeyInfo
==0) );

5118 
	`as£π
–
pCur
->
eSèã
!=
CURSOR_VALID
 || (
pIdxKey
==0)==’Cur->
curI¡Key
!=0) );

5122 if–
pIdxKey
==0

5123 && 
pCur
->
eSèã
==
CURSOR_VALID
 && (pCur->
curFœgs
 & 
BTCF_VÆidNKey
)!=0

5125 if–
pCur
->
öfo
.
nKey
==
ötKey
 ){

5126 *
pRes
 = 0;

5127  
SQLITE_OK
;

5129 if–(
pCur
->
curFœgs
 & 
BTCF_AtLa°
)!=0 &&ÖCur->
öfo
.
nKey
<
ötKey
 ){

5130 *
pRes
 = -1;

5131  
SQLITE_OK
;

5135 
	`sqlôe3LogCurs‹U≈acked
(
pCur
, 
pIdxKey
, 
ötKey
, 
büsRight
);

5137 if–
pIdxKey
 ){

5138 
xRec‹dCom∑ª
 = 
	`sqlôe3VdbeFödCom∑ª
(
pIdxKey
);

5139 
pIdxKey
->
îrCode
 = 0;

5140 
	`as£π
–
pIdxKey
->
deÁu…_rc
==1

5141 || 
pIdxKey
->
deÁu…_rc
==0

5142 || 
pIdxKey
->
deÁu…_rc
==-1

5145 
xRec‹dCom∑ª
 = 0;

5148 
rc
 = 
	`moveToRoŸ
(
pCur
);

5149 if–
rc
 ){

5150  
rc
;

5152 
	`as£π
–
pCur
->
pgnoRoŸ
==0 ||ÖCur->
≠Page
[pCur->
iPage
] );

5153 
	`as£π
–
pCur
->
pgnoRoŸ
==0 ||ÖCur->
≠Page
[pCur->
iPage
]->
isInô
 );

5154 
	`as£π
–
pCur
->
eSèã
==
CURSOR_INVALID
 ||ÖCur->
≠Page
[pCur->
iPage
]->
nCñl
>0 );

5155 if–
pCur
->
eSèã
==
CURSOR_INVALID
 ){

5156 *
pRes
 = -1;

5157 
	`as£π
–
pCur
->
pgnoRoŸ
==0 ||ÖCur->
≠Page
[pCur->
iPage
]->
nCñl
==0 );

5158  
SQLITE_OK
;

5160 
	`as£π
–
pCur
->
≠Page
[0]->
ötKey
=ıCur->
curI¡Key
 );

5161 
	`as£π
–
pCur
->
curI¡Key
 || 
pIdxKey
 );

5163 
lwr
, 
u¥
, 
idx
, 
c
;

5164 
Pgno
 
chldPg
;

5165 
MemPage
 *
pPage
 = 
pCur
->
≠Page
[pCur->
iPage
];

5166 
u8
 *
pCñl
;

5174 
	`as£π
–
pPage
->
nCñl
>0 );

5175 
	`as£π
–
pPage
->
ötKey
==(
pIdxKey
==0) );

5176 
lwr
 = 0;

5177 
u¥
 = 
pPage
->
nCñl
-1;

5178 
	`as£π
–
büsRight
==0 || biasRight==1 );

5179 
idx
 = 
u¥
>>(1-
büsRight
);

5180 
pCur
->
aiIdx
[pCur->
iPage
] = (
u16
)
idx
;

5181 if–
xRec‹dCom∑ª
==0 ){

5183 
i64
 
nCñlKey
;

5184 
pCñl
 = 
	`födCñlPa°På
(
pPage
, 
idx
);

5185 if–
pPage
->
ötKeyLóf
 ){

5186  0x80 <*(
pCñl
++) ){

5187 if–
pCñl
>=
pPage
->
aD©aEnd
 )  
SQLITE_CORRUPT_BKPT
;

5190 
	`gëV¨öt
(
pCñl
, (
u64
*)&
nCñlKey
);

5191 if–
nCñlKey
<
ötKey
 ){

5192 
lwr
 = 
idx
+1;

5193 if–
lwr
>
u¥
 ){ 
c
 = -1; ; }

5194 }if–
nCñlKey
>
ötKey
 ){

5195 
u¥
 = 
idx
-1;

5196 if–
lwr
>
u¥
 ){ 
c
 = +1; ; }

5198 
	`as£π
–
nCñlKey
==
ötKey
 );

5199 
pCur
->
aiIdx
[pCur->
iPage
] = (
u16
)
idx
;

5200 if–!
pPage
->
Àaf
 ){

5201 
lwr
 = 
idx
;

5202 
movëo_√xt_œyî
;

5204 
pCur
->
curFœgs
 |
BTCF_VÆidNKey
;

5205 
pCur
->
öfo
.
nKey
 = 
nCñlKey
;

5206 
pCur
->
öfo
.
nSize
 = 0;

5207 *
pRes
 = 0;

5208  
SQLITE_OK
;

5211 
	`as£π
–
lwr
+
u¥
>=0 );

5212 
idx
 = (
lwr
+
u¥
)>>1;

5216 
nCñl
;

5217 
pCñl
 = 
	`födCñlPa°På
(
pPage
, 
idx
);

5227 
nCñl
 = 
pCñl
[0];

5228 if–
nCñl
<=
pPage
->
max1byãPaylﬂd
 ){

5232 
	`ã°ˇ£
–
pCñl
+
nCñl
+1==
pPage
->
aD©aEnd
 );

5233 
c
 = 
	`xRec‹dCom∑ª
(
nCñl
, (*)&
pCñl
[1], 
pIdxKey
);

5234 }if–!(
pCñl
[1] & 0x80)

5235 && (
nCñl
 = (“Cñl&0x7f)<<7Ë+ 
pCñl
[1])<=
pPage
->
maxLoˇl


5239 
	`ã°ˇ£
–
pCñl
+
nCñl
+2==
pPage
->
aD©aEnd
 );

5240 
c
 = 
	`xRec‹dCom∑ª
(
nCñl
, (*)&
pCñl
[2], 
pIdxKey
);

5251 *
pCñlKey
;

5252 
u8
 * c⁄° 
pCñlBody
 = 
pCñl
 - 
pPage
->
chûdPåSize
;

5253 
pPage
->
	`xP¨£Cñl
’Page, 
pCñlBody
, &
pCur
->
öfo
);

5254 
nCñl
 = ()
pCur
->
öfo
.
nKey
;

5255 
	`ã°ˇ£
–
nCñl
<0 );

5256 
	`ã°ˇ£
–
nCñl
==0 );

5257 
	`ã°ˇ£
–
nCñl
==1 );

5258 
	`ã°ˇ£
–
nCñl
==2 );

5259 if–
nCñl
<2 ){

5260 
rc
 = 
SQLITE_CORRUPT_BKPT
;

5261 
movëo_föish
;

5263 
pCñlKey
 = 
	`sqlôe3MÆloc
–
nCñl
+18 );

5264 if–
pCñlKey
==0 ){

5265 
rc
 = 
SQLITE_NOMEM_BKPT
;

5266 
movëo_föish
;

5268 
pCur
->
aiIdx
[pCur->
iPage
] = (
u16
)
idx
;

5269 
rc
 = 
	`ac˚ssPaylﬂd
(
pCur
, 0, 
nCñl
, (*)
pCñlKey
, 2);

5270 if–
rc
 ){

5271 
	`sqlôe3_‰ì
(
pCñlKey
);

5272 
movëo_föish
;

5274 
c
 = 
	`xRec‹dCom∑ª
(
nCñl
, 
pCñlKey
, 
pIdxKey
);

5275 
	`sqlôe3_‰ì
(
pCñlKey
);

5277 
	`as£π
(

5278 (
pIdxKey
->
îrCode
!=
SQLITE_CORRUPT
 || 
c
==0)

5279 && (
pIdxKey
->
îrCode
!=
SQLITE_NOMEM
 || 
pCur
->
pBåì
->
db
->
mÆlocFaûed
)

5281 if–
c
<0 ){

5282 
lwr
 = 
idx
+1;

5283 }if–
c
>0 ){

5284 
u¥
 = 
idx
-1;

5286 
	`as£π
–
c
==0 );

5287 *
pRes
 = 0;

5288 
rc
 = 
SQLITE_OK
;

5289 
pCur
->
aiIdx
[pCur->
iPage
] = (
u16
)
idx
;

5290 if–
pIdxKey
->
îrCode
 ) 
rc
 = 
SQLITE_CORRUPT
;

5291 
movëo_föish
;

5293 if–
lwr
>
u¥
 ) ;

5294 
	`as£π
–
lwr
+
u¥
>=0 );

5295 
idx
 = (
lwr
+
u¥
)>>1;

5298 
	`as£π
–
lwr
==
u¥
+1 || (
pPage
->
ötKey
 && !pPage->
Àaf
) );

5299 
	`as£π
–
pPage
->
isInô
 );

5300 if–
pPage
->
Àaf
 ){

5301 
	`as£π
–
pCur
->
aiIdx
[pCur->
iPage
]<pCur->
≠Page
[pCur->iPage]->
nCñl
 );

5302 
pCur
->
aiIdx
[pCur->
iPage
] = (
u16
)
idx
;

5303 *
pRes
 = 
c
;

5304 
rc
 = 
SQLITE_OK
;

5305 
movëo_föish
;

5307 
movëo_√xt_œyî
:

5308 if–
lwr
>=
pPage
->
nCñl
 ){

5309 
chldPg
 = 
	`gë4byã
(&
pPage
->
aD©a
[pPage->
hdrOff£t
+8]);

5311 
chldPg
 = 
	`gë4byã
(
	`födCñl
(
pPage
, 
lwr
));

5313 
pCur
->
aiIdx
[pCur->
iPage
] = (
u16
)
lwr
;

5314 
rc
 = 
	`moveToChûd
(
pCur
, 
chldPg
);

5315 if–
rc
 ) ;

5317 
movëo_föish
:

5318 
pCur
->
öfo
.
nSize
 = 0;

5319 
	`as£π
–(
pCur
->
curFœgs
 & 
BTCF_VÆidOvÊ
)==0 );

5320  
rc
;

5321 
	}
}

5331 
	$sqlôe3BåìEof
(
BtCurs‹
 *
pCur
){

5336 
	`sqlôe3LogCurs‹Eof
(
pCur
);

5337  (
CURSOR_VALID
!=
pCur
->
eSèã
);

5338 
	}
}

5361 
SQLITE_NOINLINE
 
	$båìNext
(
BtCurs‹
 *
pCur
, *
pRes
){

5362 
rc
;

5363 
idx
;

5364 
MemPage
 *
pPage
;

5366 
	`as£π
–
	`curs‹OwnsBtSh¨ed
(
pCur
) );

5367 
	`as£π
–
pCur
->
skùNext
==0 ||ÖCur->
eSèã
!=
CURSOR_VALID
 );

5368 
	`as£π
–*
pRes
==0 );

5369 if–
pCur
->
eSèã
!=
CURSOR_VALID
 ){

5370 
	`as£π
–(
pCur
->
curFœgs
 & 
BTCF_VÆidOvÊ
)==0 );

5371 
rc
 = 
	`ª°‹eCurs‹Posôi⁄
(
pCur
);

5372 if–
rc
!=
SQLITE_OK
 ){

5373  
rc
;

5375 if–
CURSOR_INVALID
==
pCur
->
eSèã
 ){

5376 *
pRes
 = 1;

5377  
SQLITE_OK
;

5379 if–
pCur
->
skùNext
 ){

5380 
	`as£π
–
pCur
->
eSèã
==
CURSOR_VALID
 ||ÖCur->eSèã==
CURSOR_SKIPNEXT
 );

5381 
pCur
->
eSèã
 = 
CURSOR_VALID
;

5382 if–
pCur
->
skùNext
>0 ){

5383 
pCur
->
skùNext
 = 0;

5384  
SQLITE_OK
;

5386 
pCur
->
skùNext
 = 0;

5390 
pPage
 = 
pCur
->
≠Page
[pCur->
iPage
];

5391 
idx
 = ++
pCur
->
aiIdx
[pCur->
iPage
];

5392 
	`as£π
–
pPage
->
isInô
 );

5399 
	`ã°ˇ£
–
idx
>
pPage
->
nCñl
 );

5401 if–
idx
>=
pPage
->
nCñl
 ){

5402 if–!
pPage
->
Àaf
 ){

5403 
rc
 = 
	`moveToChûd
(
pCur
, 
	`gë4byã
(&
pPage
->
aD©a
[pPage->
hdrOff£t
+8]));

5404 if–
rc
 ) Ñc;

5405  
	`moveToLe·mo°
(
pCur
);

5408 if–
pCur
->
iPage
==0 ){

5409 *
pRes
 = 1;

5410 
pCur
->
eSèã
 = 
CURSOR_INVALID
;

5411  
SQLITE_OK
;

5413 
	`moveToP¨ít
(
pCur
);

5414 
pPage
 = 
pCur
->
≠Page
[pCur->
iPage
];

5415 } 
pCur
->
aiIdx
[pCur->
iPage
]>=
pPage
->
nCñl
 );

5416 if–
pPage
->
ötKey
 ){

5417  
	`sqlôe3BåìNext
(
pCur
, 
pRes
);

5419  
SQLITE_OK
;

5422 if–
pPage
->
Àaf
 ){

5423  
SQLITE_OK
;

5425  
	`moveToLe·mo°
(
pCur
);

5427 
	}
}

5428 
	$sqlôe3BåìNext
(
BtCurs‹
 *
pCur
, *
pRes
){

5429 
MemPage
 *
pPage
;

5430 
rc
;

5431 
	`as£π
–
	`curs‹OwnsBtSh¨ed
(
pCur
) );

5432 
	`as£π
–
pRes
!=0 );

5433 
	`as£π
–*
pRes
==0 || *pRes==1 );

5434 
	`as£π
–
pCur
->
skùNext
==0 ||ÖCur->
eSèã
!=
CURSOR_VALID
 );

5435 
pCur
->
öfo
.
nSize
 = 0;

5436 
pCur
->
curFœgs
 &~(
BTCF_VÆidNKey
|
BTCF_VÆidOvÊ
);

5437 *
pRes
 = 0;

5438 if–
pCur
->
eSèã
!=
CURSOR_VALID
 ){

5439 
rc
 = 
	`båìNext
(
pCur
, 
pRes
);

5440 
	`sqlôe3LogCurs‹Next
(
pCur
, *
pRes
);

5441  
rc
;

5443 
pPage
 = 
pCur
->
≠Page
[pCur->
iPage
];

5444 if–(++
pCur
->
aiIdx
[pCur->
iPage
])>=
pPage
->
nCñl
 ){

5445 
pCur
->
aiIdx
[pCur->
iPage
]--;

5446 
rc
 = 
	`båìNext
(
pCur
, 
pRes
);

5447 
	`sqlôe3LogCurs‹Next
(
pCur
, *
pRes
);

5448  
rc
;

5450 if–
pPage
->
Àaf
 ){

5451 
	`sqlôe3LogCurs‹Next
(
pCur
, *
pRes
);

5452  
SQLITE_OK
;

5454 
rc
 = 
	`moveToLe·mo°
(
pCur
);

5455 
	`sqlôe3LogCurs‹Next
(
pCur
, *
pRes
);

5456  
rc
;

5458 
	}
}

5481 
SQLITE_NOINLINE
 
	$båìPªvious
(
BtCurs‹
 *
pCur
, *
pRes
){

5482 
rc
;

5483 
MemPage
 *
pPage
;

5485 
	`as£π
–
	`curs‹OwnsBtSh¨ed
(
pCur
) );

5486 
	`as£π
–
pRes
!=0 );

5487 
	`as£π
–*
pRes
==0 );

5488 
	`as£π
–
pCur
->
skùNext
==0 ||ÖCur->
eSèã
!=
CURSOR_VALID
 );

5489 
	`as£π
–(
pCur
->
curFœgs
 & (
BTCF_AtLa°
|
BTCF_VÆidOvÊ
|
BTCF_VÆidNKey
))==0 );

5490 
	`as£π
–
pCur
->
öfo
.
nSize
==0 );

5491 if–
pCur
->
eSèã
!=
CURSOR_VALID
 ){

5492 
rc
 = 
	`ª°‹eCurs‹Posôi⁄
(
pCur
);

5493 if–
rc
!=
SQLITE_OK
 ){

5494  
rc
;

5496 if–
CURSOR_INVALID
==
pCur
->
eSèã
 ){

5497 *
pRes
 = 1;

5498  
SQLITE_OK
;

5500 if–
pCur
->
skùNext
 ){

5501 
	`as£π
–
pCur
->
eSèã
==
CURSOR_VALID
 ||ÖCur->eSèã==
CURSOR_SKIPNEXT
 );

5502 
pCur
->
eSèã
 = 
CURSOR_VALID
;

5503 if–
pCur
->
skùNext
<0 ){

5504 
pCur
->
skùNext
 = 0;

5505  
SQLITE_OK
;

5507 
pCur
->
skùNext
 = 0;

5511 
pPage
 = 
pCur
->
≠Page
[pCur->
iPage
];

5512 
	`as£π
–
pPage
->
isInô
 );

5513 if–!
pPage
->
Àaf
 ){

5514 
idx
 = 
pCur
->
aiIdx
[pCur->
iPage
];

5515 
rc
 = 
	`moveToChûd
(
pCur
, 
	`gë4byã
(
	`födCñl
(
pPage
, 
idx
)));

5516 if–
rc
 ) Ñc;

5517 
rc
 = 
	`moveToRightmo°
(
pCur
);

5519  
pCur
->
aiIdx
[pCur->
iPage
]==0 ){

5520 if–
pCur
->
iPage
==0 ){

5521 
pCur
->
eSèã
 = 
CURSOR_INVALID
;

5522 *
pRes
 = 1;

5523  
SQLITE_OK
;

5525 
	`moveToP¨ít
(
pCur
);

5527 
	`as£π
–
pCur
->
öfo
.
nSize
==0 );

5528 
	`as£π
–(
pCur
->
curFœgs
 & (
BTCF_VÆidOvÊ
))==0 );

5530 
pCur
->
aiIdx
[pCur->
iPage
]--;

5531 
pPage
 = 
pCur
->
≠Page
[pCur->
iPage
];

5532 if–
pPage
->
ötKey
 && !pPage->
Àaf
 ){

5533 
rc
 = 
	`sqlôe3BåìPªvious
(
pCur
, 
pRes
);

5535 
rc
 = 
SQLITE_OK
;

5538  
rc
;

5539 
	}
}

5540 
	$sqlôe3BåìPªvious
(
BtCurs‹
 *
pCur
, *
pRes
){

5541 
rc
;

5542 
	`as£π
–
	`curs‹OwnsBtSh¨ed
(
pCur
) );

5543 
	`as£π
–
pRes
!=0 );

5544 
	`as£π
–*
pRes
==0 || *pRes==1 );

5545 
	`as£π
–
pCur
->
skùNext
==0 ||ÖCur->
eSèã
!=
CURSOR_VALID
 );

5546 *
pRes
 = 0;

5547 
pCur
->
curFœgs
 &~(
BTCF_AtLa°
|
BTCF_VÆidOvÊ
|
BTCF_VÆidNKey
);

5548 
pCur
->
öfo
.
nSize
 = 0;

5549 if–
pCur
->
eSèã
!=
CURSOR_VALID


5550 || 
pCur
->
aiIdx
[pCur->
iPage
]==0

5551 || 
pCur
->
≠Page
[pCur->
iPage
]->
Àaf
==0

5553 
rc
 = 
	`båìPªvious
(
pCur
, 
pRes
);

5554 
	`sqlôe3LogCurs‹Pªv
(
pCur
, *
pRes
);

5555  
rc
;

5557 
pCur
->
aiIdx
[pCur->
iPage
]--;

5558 
	`sqlôe3LogCurs‹Pªv
(
pCur
, *
pRes
);

5559  
SQLITE_OK
;

5560 
	}
}

5584 
	$ÆloˇãBåìPage
(

5585 
BtSh¨ed
 *
pBt
,

5586 
MemPage
 **
µPage
,

5587 
Pgno
 *
pPgno
,

5588 
Pgno
 
√¨by
,

5589 
u8
 
eMode


5591 
MemPage
 *
pPage1
;

5592 
rc
;

5593 
u32
 
n
;

5594 
u32
 
k
;

5595 
MemPage
 *
pTrunk
 = 0;

5596 
MemPage
 *
pPªvTrunk
 = 0;

5597 
Pgno
 
mxPage
;

5599 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

5600 
	`as£π
–
eMode
==
BTALLOC_ANY
 || (
√¨by
>0 && 
	`IfNŸOmôAV
(
pBt
->
autoVacuum
)) );

5601 
pPage1
 = 
pBt
->pPage1;

5602 
mxPage
 = 
	`båìPagecou¡
(
pBt
);

5605 
n
 = 
	`gë4byã
(&
pPage1
->
aD©a
[36]);

5606 
	`ã°ˇ£
–
n
==
mxPage
-1 );

5607 if–
n
>=
mxPage
 ){

5608  
SQLITE_CORRUPT_BKPT
;

5610 if–
n
>0 ){

5612 
Pgno
 
iTrunk
;

5613 
u8
 
£¨chLi°
 = 0;

5614 
u32
 
nSórch
 = 0;

5620 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


5621 if–
eMode
==
BTALLOC_EXACT
 ){

5622 if–
√¨by
<=
mxPage
 ){

5623 
u8
 
eTy≥
;

5624 
	`as£π
–
√¨by
>0 );

5625 
	`as£π
–
pBt
->
autoVacuum
 );

5626 
rc
 = 
	`±rm≠Gë
(
pBt
, 
√¨by
, &
eTy≥
, 0);

5627 if–
rc
 ) Ñc;

5628 if–
eTy≥
==
PTRMAP_FREEPAGE
 ){

5629 
£¨chLi°
 = 1;

5632 }if–
eMode
==
BTALLOC_LE
 ){

5633 
£¨chLi°
 = 1;

5640 
rc
 = 
	`sqlôe3PagîWrôe
(
pPage1
->
pDbPage
);

5641 if–
rc
 ) Ñc;

5642 
	`put4byã
(&
pPage1
->
aD©a
[36], 
n
-1);

5650 
pPªvTrunk
 = 
pTrunk
;

5651 if–
pPªvTrunk
 ){

5655 
iTrunk
 = 
	`gë4byã
(&
pPªvTrunk
->
aD©a
[0]);

5660 
iTrunk
 = 
	`gë4byã
(&
pPage1
->
aD©a
[32]);

5662 
	`ã°ˇ£
–
iTrunk
==
mxPage
 );

5663 if–
iTrunk
>
mxPage
 || 
nSórch
++ > 
n
 ){

5664 
rc
 = 
SQLITE_CORRUPT_BKPT
;

5666 
rc
 = 
	`båìGëUnu£dPage
(
pBt
, 
iTrunk
, &
pTrunk
, 0);

5668 if–
rc
 ){

5669 
pTrunk
 = 0;

5670 
íd_Æloˇã_∑ge
;

5672 
	`as£π
–
pTrunk
!=0 );

5673 
	`as£π
–
pTrunk
->
aD©a
!=0 );

5676 
k
 = 
	`gë4byã
(&
pTrunk
->
aD©a
[4]);

5677 if–
k
==0 && !
£¨chLi°
 ){

5681 
	`as£π
–
pPªvTrunk
==0 );

5682 
rc
 = 
	`sqlôe3PagîWrôe
(
pTrunk
->
pDbPage
);

5683 if–
rc
 ){

5684 
íd_Æloˇã_∑ge
;

5686 *
pPgno
 = 
iTrunk
;

5687 
	`mem˝y
(&
pPage1
->
aD©a
[32], &
pTrunk
->aData[0], 4);

5688 *
µPage
 = 
pTrunk
;

5689 
pTrunk
 = 0;

5690 
	`TRACE
(("ALLOCATE: %dÅrunk - %d fªê∑ge†À·\n", *
pPgno
, 
n
-1));

5691 }if–
k
>(
u32
)(
pBt
->
ußbÀSize
/4 - 2) ){

5693 
rc
 = 
SQLITE_CORRUPT_BKPT
;

5694 
íd_Æloˇã_∑ge
;

5695 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


5696 }if–
£¨chLi°


5697 && (
√¨by
==
iTrunk
 || (iTrunk<√¨by && 
eMode
==
BTALLOC_LE
))

5702 *
pPgno
 = 
iTrunk
;

5703 *
µPage
 = 
pTrunk
;

5704 
£¨chLi°
 = 0;

5705 
rc
 = 
	`sqlôe3PagîWrôe
(
pTrunk
->
pDbPage
);

5706 if–
rc
 ){

5707 
íd_Æloˇã_∑ge
;

5709 if–
k
==0 ){

5710 if–!
pPªvTrunk
 ){

5711 
	`mem˝y
(&
pPage1
->
aD©a
[32], &
pTrunk
->aData[0], 4);

5713 
rc
 = 
	`sqlôe3PagîWrôe
(
pPªvTrunk
->
pDbPage
);

5714 if–
rc
!=
SQLITE_OK
 ){

5715 
íd_Æloˇã_∑ge
;

5717 
	`mem˝y
(&
pPªvTrunk
->
aD©a
[0], &
pTrunk
->aData[0], 4);

5724 
MemPage
 *
pNewTrunk
;

5725 
Pgno
 
iNewTrunk
 = 
	`gë4byã
(&
pTrunk
->
aD©a
[8]);

5726 if–
iNewTrunk
>
mxPage
 ){

5727 
rc
 = 
SQLITE_CORRUPT_BKPT
;

5728 
íd_Æloˇã_∑ge
;

5730 
	`ã°ˇ£
–
iNewTrunk
==
mxPage
 );

5731 
rc
 = 
	`båìGëUnu£dPage
(
pBt
, 
iNewTrunk
, &
pNewTrunk
, 0);

5732 if–
rc
!=
SQLITE_OK
 ){

5733 
íd_Æloˇã_∑ge
;

5735 
rc
 = 
	`sqlôe3PagîWrôe
(
pNewTrunk
->
pDbPage
);

5736 if–
rc
!=
SQLITE_OK
 ){

5737 
	`ªÀa£Page
(
pNewTrunk
);

5738 
íd_Æloˇã_∑ge
;

5740 
	`mem˝y
(&
pNewTrunk
->
aD©a
[0], &
pTrunk
->aData[0], 4);

5741 
	`put4byã
(&
pNewTrunk
->
aD©a
[4], 
k
-1);

5742 
	`mem˝y
(&
pNewTrunk
->
aD©a
[8], &
pTrunk
->aD©a[12], (
k
-1)*4);

5743 
	`ªÀa£Page
(
pNewTrunk
);

5744 if–!
pPªvTrunk
 ){

5745 
	`as£π
–
	`sqlôe3PagîIswrôóbÀ
(
pPage1
->
pDbPage
) );

5746 
	`put4byã
(&
pPage1
->
aD©a
[32], 
iNewTrunk
);

5748 
rc
 = 
	`sqlôe3PagîWrôe
(
pPªvTrunk
->
pDbPage
);

5749 if–
rc
 ){

5750 
íd_Æloˇã_∑ge
;

5752 
	`put4byã
(&
pPªvTrunk
->
aD©a
[0], 
iNewTrunk
);

5755 
pTrunk
 = 0;

5756 
	`TRACE
(("ALLOCATE: %dÅrunk - %d fªê∑ge†À·\n", *
pPgno
, 
n
-1));

5758 }if–
k
>0 ){

5760 
u32
 
˛o£°
;

5761 
Pgno
 
iPage
;

5762 *
aD©a
 = 
pTrunk
->aData;

5763 if–
√¨by
>0 ){

5764 
u32
 
i
;

5765 
˛o£°
 = 0;

5766 if–
eMode
==
BTALLOC_LE
 ){

5767 
i
=0; i<
k
; i++){

5768 
iPage
 = 
	`gë4byã
(&
aD©a
[8+
i
*4]);

5769 if–
iPage
<=
√¨by
 ){

5770 
˛o£°
 = 
i
;

5775 
di°
;

5776 
di°
 = 
	`sqlôe3AbsI¡32
(
	`gë4byã
(&
aD©a
[8]Ë- 
√¨by
);

5777 
i
=1; i<
k
; i++){

5778 
d2
 = 
	`sqlôe3AbsI¡32
(
	`gë4byã
(&
aD©a
[8+
i
*4]Ë- 
√¨by
);

5779 if–
d2
<
di°
 ){

5780 
˛o£°
 = 
i
;

5781 
di°
 = 
d2
;

5786 
˛o£°
 = 0;

5789 
iPage
 = 
	`gë4byã
(&
aD©a
[8+
˛o£°
*4]);

5790 
	`ã°ˇ£
–
iPage
==
mxPage
 );

5791 if–
iPage
>
mxPage
 ){

5792 
rc
 = 
SQLITE_CORRUPT_BKPT
;

5793 
íd_Æloˇã_∑ge
;

5795 
	`ã°ˇ£
–
iPage
==
mxPage
 );

5796 if–!
£¨chLi°


5797 || (
iPage
==
√¨by
 || (iPage<√¨by && 
eMode
==
BTALLOC_LE
))

5799 
noC⁄ã¡
;

5800 *
pPgno
 = 
iPage
;

5801 
	`TRACE
(("ALLOCATE: %d wasÜeaf %d of %d onÅrunk %d"

5803 *
pPgno
, 
˛o£°
+1, 
k
, 
pTrunk
->
pgno
, 
n
-1));

5804 
rc
 = 
	`sqlôe3PagîWrôe
(
pTrunk
->
pDbPage
);

5805 if–
rc
 ) 
íd_Æloˇã_∑ge
;

5806 if–
˛o£°
<
k
-1 ){

5807 
	`mem˝y
(&
aD©a
[8+
˛o£°
*4], &aD©a[4+
k
*4], 4);

5809 
	`put4byã
(&
aD©a
[4], 
k
-1);

5810 
noC⁄ã¡
 = !
	`båìGëHasC⁄ã¡
(
pBt
, *
pPgno
)? 
PAGER_GET_NOCONTENT
 : 0;

5811 
rc
 = 
	`båìGëUnu£dPage
(
pBt
, *
pPgno
, 
µPage
, 
noC⁄ã¡
);

5812 if–
rc
==
SQLITE_OK
 ){

5813 
rc
 = 
	`sqlôe3PagîWrôe
((*
µPage
)->
pDbPage
);

5814 if–
rc
!=
SQLITE_OK
 ){

5815 
	`ªÀa£Page
(*
µPage
);

5816 *
µPage
 = 0;

5819 
£¨chLi°
 = 0;

5822 
	`ªÀa£Page
(
pPªvTrunk
);

5823 
pPªvTrunk
 = 0;

5824 } 
£¨chLi°
 );

5844 
bNoC⁄ã¡
 = (0==
	`IfNŸOmôAV
(
pBt
->
bDoTrunˇã
))? 
PAGER_GET_NOCONTENT
:0;

5846 
rc
 = 
	`sqlôe3PagîWrôe
(
pBt
->
pPage1
->
pDbPage
);

5847 if–
rc
 ) Ñc;

5848 
pBt
->
nPage
++;

5849 if–
pBt
->
nPage
==
	`PENDING_BYTE_PAGE
(pBt) )ÖBt->nPage++;

5851 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


5852 if–
pBt
->
autoVacuum
 && 
	`PTRMAP_ISPAGE
’Bt,ÖBt->
nPage
) ){

5857 
MemPage
 *
pPg
 = 0;

5858 
	`TRACE
(("ALLOCATE: %d fromÉnd o‡fûê’oöãr-m≠Öage)\n", 
pBt
->
nPage
));

5859 
	`as£π
–
pBt
->
nPage
!=
	`PENDING_BYTE_PAGE
(pBt) );

5860 
rc
 = 
	`båìGëUnu£dPage
(
pBt
,ÖBt->
nPage
, &
pPg
, 
bNoC⁄ã¡
);

5861 if–
rc
==
SQLITE_OK
 ){

5862 
rc
 = 
	`sqlôe3PagîWrôe
(
pPg
->
pDbPage
);

5863 
	`ªÀa£Page
(
pPg
);

5865 if–
rc
 ) Ñc;

5866 
pBt
->
nPage
++;

5867 if–
pBt
->
nPage
==
	`PENDING_BYTE_PAGE
(pBt) ){ÖBt->nPage++; }

5870 
	`put4byã
(28 + (
u8
*)
pBt
->
pPage1
->
aD©a
,ÖBt->
nPage
);

5871 *
pPgno
 = 
pBt
->
nPage
;

5873 
	`as£π
–*
pPgno
!=
	`PENDING_BYTE_PAGE
(
pBt
) );

5874 
rc
 = 
	`båìGëUnu£dPage
(
pBt
, *
pPgno
, 
µPage
, 
bNoC⁄ã¡
);

5875 if–
rc
 ) Ñc;

5876 
rc
 = 
	`sqlôe3PagîWrôe
((*
µPage
)->
pDbPage
);

5877 if–
rc
!=
SQLITE_OK
 ){

5878 
	`ªÀa£Page
(*
µPage
);

5879 *
µPage
 = 0;

5881 
	`TRACE
(("ALLOCATE: %d fromÉnd o‡fûe\n", *
pPgno
));

5884 
	`as£π
–*
pPgno
!=
	`PENDING_BYTE_PAGE
(
pBt
) );

5886 
íd_Æloˇã_∑ge
:

5887 
	`ªÀa£Page
(
pTrunk
);

5888 
	`ªÀa£Page
(
pPªvTrunk
);

5889 
	`as£π
–
rc
!=
SQLITE_OK
 || 
	`sqlôe3PagîPageRefcou¡
((*
µPage
)->
pDbPage
)<=1 );

5890 
	`as£π
–
rc
!=
SQLITE_OK
 || (*
µPage
)->
isInô
==0 );

5891  
rc
;

5892 
	}
}

5906 
	$‰ìPage2
(
BtSh¨ed
 *
pBt
, 
MemPage
 *
pMemPage
, 
Pgno
 
iPage
){

5907 
MemPage
 *
pTrunk
 = 0;

5908 
Pgno
 
iTrunk
 = 0;

5909 
MemPage
 *
pPage1
 = 
pBt
->pPage1;

5910 
MemPage
 *
pPage
;

5911 
rc
;

5912 
nFªe
;

5914 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

5915 
	`as£π
–
CORRUPT_DB
 || 
iPage
>1 );

5916 
	`as£π
–!
pMemPage
 ||ÖMemPage->
pgno
==
iPage
 );

5918 if–
iPage
<2 )  
SQLITE_CORRUPT_BKPT
;

5919 if–
pMemPage
 ){

5920 
pPage
 = 
pMemPage
;

5921 
	`sqlôe3PagîRef
(
pPage
->
pDbPage
);

5923 
pPage
 = 
	`båìPageLookup
(
pBt
, 
iPage
);

5927 
rc
 = 
	`sqlôe3PagîWrôe
(
pPage1
->
pDbPage
);

5928 if–
rc
 ) 
‰ì∑ge_out
;

5929 
nFªe
 = 
	`gë4byã
(&
pPage1
->
aD©a
[36]);

5930 
	`put4byã
(&
pPage1
->
aD©a
[36], 
nFªe
+1);

5932 if–
pBt
->
btsFœgs
 & 
BTS_SECURE_DELETE
 ){

5936 if–(!
pPage
 && ((
rc
 = 
	`båìGëPage
(
pBt
, 
iPage
, &pPage, 0))!=0) )

5937 || ((
rc
 = 
	`sqlôe3PagîWrôe
(
pPage
->
pDbPage
))!=0)

5939 
‰ì∑ge_out
;

5941 
	`mem£t
(
pPage
->
aD©a
, 0,ÖPage->
pBt
->
∑geSize
);

5947 if–
ISAUTOVACUUM
 ){

5948 
	`±rm≠Put
(
pBt
, 
iPage
, 
PTRMAP_FREEPAGE
, 0, &
rc
);

5949 if–
rc
 ) 
‰ì∑ge_out
;

5959 if–
nFªe
!=0 ){

5960 
u32
 
nLóf
;

5962 
iTrunk
 = 
	`gë4byã
(&
pPage1
->
aD©a
[32]);

5963 
rc
 = 
	`båìGëPage
(
pBt
, 
iTrunk
, &
pTrunk
, 0);

5964 if–
rc
!=
SQLITE_OK
 ){

5965 
‰ì∑ge_out
;

5968 
nLóf
 = 
	`gë4byã
(&
pTrunk
->
aD©a
[4]);

5969 
	`as£π
–
pBt
->
ußbÀSize
>32 );

5970 if–
nLóf
 > (
u32
)
pBt
->
ußbÀSize
/4 - 2 ){

5971 
rc
 = 
SQLITE_CORRUPT_BKPT
;

5972 
‰ì∑ge_out
;

5974 if–
nLóf
 < (
u32
)
pBt
->
ußbÀSize
/4 - 8 ){

5994 
rc
 = 
	`sqlôe3PagîWrôe
(
pTrunk
->
pDbPage
);

5995 if–
rc
==
SQLITE_OK
 ){

5996 
	`put4byã
(&
pTrunk
->
aD©a
[4], 
nLóf
+1);

5997 
	`put4byã
(&
pTrunk
->
aD©a
[8+
nLóf
*4], 
iPage
);

5998 if–
pPage
 && (
pBt
->
btsFœgs
 & 
BTS_SECURE_DELETE
)==0 ){

5999 
	`sqlôe3PagîD⁄tWrôe
(
pPage
->
pDbPage
);

6001 
rc
 = 
	`båìSëHasC⁄ã¡
(
pBt
, 
iPage
);

6003 
	`TRACE
(("FREE-PAGE: %dÜó‡⁄ÅrunkÖagê%d\n",
pPage
->
pgno
,
pTrunk
->pgno));

6004 
‰ì∑ge_out
;

6014 if–
pPage
==0 && 
SQLITE_OK
!=(
rc
 = 
	`båìGëPage
(
pBt
, 
iPage
, &pPage, 0)) ){

6015 
‰ì∑ge_out
;

6017 
rc
 = 
	`sqlôe3PagîWrôe
(
pPage
->
pDbPage
);

6018 if–
rc
!=
SQLITE_OK
 ){

6019 
‰ì∑ge_out
;

6021 
	`put4byã
(
pPage
->
aD©a
, 
iTrunk
);

6022 
	`put4byã
(&
pPage
->
aD©a
[4], 0);

6023 
	`put4byã
(&
pPage1
->
aD©a
[32], 
iPage
);

6024 
	`TRACE
(("FREE-PAGE: %dÇewÅrunkÖagêª∂acög %d\n", 
pPage
->
pgno
, 
iTrunk
));

6026 
‰ì∑ge_out
:

6027 if–
pPage
 ){

6028 
pPage
->
isInô
 = 0;

6030 
	`ªÀa£Page
(
pPage
);

6031 
	`ªÀa£Page
(
pTrunk
);

6032  
rc
;

6033 
	}
}

6034 
	$‰ìPage
(
MemPage
 *
pPage
, *
pRC
){

6035 if–(*
pRC
)==
SQLITE_OK
 ){

6036 *
pRC
 = 
	`‰ìPage2
(
pPage
->
pBt
,ÖPage,ÖPage->
pgno
);

6038 
	}
}

6045 
	$˛órCñl
(

6046 
MemPage
 *
pPage
,

6047 *
pCñl
,

6048 
CñlInfo
 *
pInfo


6050 
BtSh¨ed
 *
pBt
 = 
pPage
->pBt;

6051 
Pgno
 
ovÊPgno
;

6052 
rc
;

6053 
nOvÊ
;

6054 
u32
 
ovÊPageSize
;

6056 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pPage
->
pBt
->
muãx
) );

6057 
pPage
->
	`xP¨£Cñl
’Page, 
pCñl
, 
pInfo
);

6058 if–
pInfo
->
nLoˇl
=ıInfo->
nPaylﬂd
 ){

6059  
SQLITE_OK
;

6061 if–
pCñl
+
pInfo
->
nSize
-1 > 
pPage
->
aD©a
+pPage->
maskPage
 ){

6062  
SQLITE_CORRUPT_BKPT
;

6064 
ovÊPgno
 = 
	`gë4byã
(
pCñl
 + 
pInfo
->
nSize
 - 4);

6065 
	`as£π
–
pBt
->
ußbÀSize
 > 4 );

6066 
ovÊPageSize
 = 
pBt
->
ußbÀSize
 - 4;

6067 
nOvÊ
 = (
pInfo
->
nPaylﬂd
 -ÖInfo->
nLoˇl
 + 
ovÊPageSize
 - 1)/ovflPageSize;

6068 
	`as£π
–
nOvÊ
>0 ||

6069 (
CORRUPT_DB
 && (
pInfo
->
nPaylﬂd
 + 
ovÊPageSize
)<ovflPageSize)

6071  
nOvÊ
-- ){

6072 
Pgno
 
iNext
 = 0;

6073 
MemPage
 *
pOvÊ
 = 0;

6074 if–
ovÊPgno
<2 || ovÊPgno>
	`båìPagecou¡
(
pBt
) ){

6078  
SQLITE_CORRUPT_BKPT
;

6080 if–
nOvÊ
 ){

6081 
rc
 = 
	`gëOvîÊowPage
(
pBt
, 
ovÊPgno
, &
pOvÊ
, &
iNext
);

6082 if–
rc
 ) Ñc;

6085 if––
pOvÊ
 || (’OvÊ = 
	`båìPageLookup
(
pBt
, 
ovÊPgno
))!=0) )

6086 && 
	`sqlôe3PagîPageRefcou¡
(
pOvÊ
->
pDbPage
)!=1

6098 
rc
 = 
SQLITE_CORRUPT_BKPT
;

6100 
rc
 = 
	`‰ìPage2
(
pBt
, 
pOvÊ
, 
ovÊPgno
);

6103 if–
pOvÊ
 ){

6104 
	`sqlôe3PagîUƒef
(
pOvÊ
->
pDbPage
);

6106 if–
rc
 ) Ñc;

6107 
ovÊPgno
 = 
iNext
;

6109  
SQLITE_OK
;

6110 
	}
}

6124 
	$fûlInCñl
(

6125 
MemPage
 *
pPage
,

6126 *
pCñl
,

6127 c⁄° 
BåìPaylﬂd
 *
pX
,

6128 *
≤Size


6130 
nPaylﬂd
;

6131 c⁄° 
u8
 *
pSrc
;

6132 
nSrc
, 
n
, 
rc
;

6133 
•a˚Le·
;

6134 
MemPage
 *
pOvÊ
 = 0;

6135 
MemPage
 *
pToRñó£
 = 0;

6136 *
pPri‹
;

6137 *
pPaylﬂd
;

6138 
BtSh¨ed
 *
pBt
 = 
pPage
->pBt;

6139 
Pgno
 
pgnoOvÊ
 = 0;

6140 
nHódî
;

6142 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pPage
->
pBt
->
muãx
) );

6146 
	`as£π
–
pCñl
<
pPage
->
aD©a
 ||ÖCñl>=&pPage->aD©a[
pBt
->
∑geSize
]

6147 || 
	`sqlôe3PagîIswrôóbÀ
(
pPage
->
pDbPage
) );

6150 
nHódî
 = 
pPage
->
chûdPåSize
;

6151 if–
pPage
->
ötKey
 ){

6152 
nPaylﬂd
 = 
pX
->
nD©a
 +ÖX->
nZîo
;

6153 
pSrc
 = 
pX
->
pD©a
;

6154 
nSrc
 = 
pX
->
nD©a
;

6155 
	`as£π
–
pPage
->
ötKeyLóf
 );

6156 
nHódî
 +
	`putV¨öt32
(&
pCñl
[nHódî], 
nPaylﬂd
);

6157 
nHódî
 +
	`putV¨öt
(&
pCñl
[nHódî], *(
u64
*)&
pX
->
nKey
);

6159 
	`as£π
–
pX
->
nKey
<=0x7ffffff‡&&ÖX->
pKey
!=0 );

6160 
nSrc
 = 
nPaylﬂd
 = ()
pX
->
nKey
;

6161 
pSrc
 = 
pX
->
pKey
;

6162 
nHódî
 +
	`putV¨öt32
(&
pCñl
[nHódî], 
nPaylﬂd
);

6166 if–
nPaylﬂd
<=
pPage
->
maxLoˇl
 ){

6167 
n
 = 
nHódî
 + 
nPaylﬂd
;

6168 
	`ã°ˇ£
–
n
==3 );

6169 
	`ã°ˇ£
–
n
==4 );

6170 if–
n
<4 )Ç = 4;

6171 *
≤Size
 = 
n
;

6172 
•a˚Le·
 = 
nPaylﬂd
;

6173 
pPri‹
 = 
pCñl
;

6175 
mn
 = 
pPage
->
möLoˇl
;

6176 
n
 = 
mn
 + (
nPaylﬂd
 - mnË% (
pPage
->
pBt
->
ußbÀSize
 - 4);

6177 
	`ã°ˇ£
–
n
==
pPage
->
maxLoˇl
 );

6178 
	`ã°ˇ£
–
n
==
pPage
->
maxLoˇl
+1 );

6179 if–
n
 > 
pPage
->
maxLoˇl
 )Ç = 
mn
;

6180 
•a˚Le·
 = 
n
;

6181 *
≤Size
 = 
n
 + 
nHódî
 + 4;

6182 
pPri‹
 = &
pCñl
[
nHódî
+
n
];

6184 
pPaylﬂd
 = &
pCñl
[
nHódî
];

6198 #i‡
SQLITE_DEBUG


6200 
CñlInfo
 
öfo
;

6201 
pPage
->
	`xP¨£Cñl
’Page, 
pCñl
, &
öfo
);

6202 
	`as£π
–
nHódî
==()(
öfo
.
pPaylﬂd
 - 
pCñl
) );

6203 
	`as£π
–
öfo
.
nKey
==
pX
->nKey );

6204 
	`as£π
–*
≤Size
 =
öfo
.
nSize
 );

6205 
	`as£π
–
•a˚Le·
 =
öfo
.
nLoˇl
 );

6210  
nPaylﬂd
>0 ){

6211 if–
•a˚Le·
==0 ){

6212 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


6213 
Pgno
 
pgnoPåm≠
 = 
pgnoOvÊ
;

6214 if–
pBt
->
autoVacuum
 ){

6216 
pgnoOvÊ
++;

6218 
	`PTRMAP_ISPAGE
(
pBt
, 
pgnoOvÊ
Ë||ÖgnoOvÊ==
	`PENDING_BYTE_PAGE
(pBt)

6222 
rc
 = 
	`ÆloˇãBåìPage
(
pBt
, &
pOvÊ
, &
pgnoOvÊ
,ÖgnoOvfl, 0);

6223 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


6234 if–
pBt
->
autoVacuum
 && 
rc
==
SQLITE_OK
 ){

6235 
u8
 
eTy≥
 = (
pgnoPåm≠
?
PTRMAP_OVERFLOW2
:
PTRMAP_OVERFLOW1
);

6236 
	`±rm≠Put
(
pBt
, 
pgnoOvÊ
, 
eTy≥
, 
pgnoPåm≠
, &
rc
);

6237 if–
rc
 ){

6238 
	`ªÀa£Page
(
pOvÊ
);

6242 if–
rc
 ){

6243 
	`ªÀa£Page
(
pToRñó£
);

6244  
rc
;

6249 
	`as£π
–
pToRñó£
==0 || 
	`sqlôe3PagîIswrôóbÀ
’ToRñó£->
pDbPage
) );

6253 
	`as£π
–
pPri‹
<
pPage
->
aD©a
 ||ÖPri‹>=&pPage->aD©a[
pBt
->
∑geSize
]

6254 || 
	`sqlôe3PagîIswrôóbÀ
(
pPage
->
pDbPage
) );

6256 
	`put4byã
(
pPri‹
, 
pgnoOvÊ
);

6257 
	`ªÀa£Page
(
pToRñó£
);

6258 
pToRñó£
 = 
pOvÊ
;

6259 
pPri‹
 = 
pOvÊ
->
aD©a
;

6260 
	`put4byã
(
pPri‹
, 0);

6261 
pPaylﬂd
 = &
pOvÊ
->
aD©a
[4];

6262 
•a˚Le·
 = 
pBt
->
ußbÀSize
 - 4;

6264 
n
 = 
nPaylﬂd
;

6265 if–
n
>
•a˚Le·
 )Ç = spaceLeft;

6269 
	`as£π
–
pToRñó£
==0 || 
	`sqlôe3PagîIswrôóbÀ
’ToRñó£->
pDbPage
) );

6273 
	`as£π
–
pPaylﬂd
<
pPage
->
aD©a
 ||ÖPaylﬂd>=&pPage->aD©a[
pBt
->
∑geSize
]

6274 || 
	`sqlôe3PagîIswrôóbÀ
(
pPage
->
pDbPage
) );

6276 if–
nSrc
>0 ){

6277 if–
n
>
nSrc
 )Ç =ÇSrc;

6278 
	`as£π
–
pSrc
 );

6279 
	`mem˝y
(
pPaylﬂd
, 
pSrc
, 
n
);

6281 
	`mem£t
(
pPaylﬂd
, 0, 
n
);

6283 
nPaylﬂd
 -
n
;

6284 
pPaylﬂd
 +
n
;

6285 
pSrc
 +
n
;

6286 
nSrc
 -
n
;

6287 
•a˚Le·
 -
n
;

6289 
	`ªÀa£Page
(
pToRñó£
);

6290  
SQLITE_OK
;

6291 
	}
}

6301 
	$dr›Cñl
(
MemPage
 *
pPage
, 
idx
, 
sz
, *
pRC
){

6302 
u32
 
pc
;

6303 
u8
 *
d©a
;

6304 
u8
 *
±r
;

6305 
rc
;

6306 
hdr
;

6308 if–*
pRC
 ) ;

6309 
	`as£π
–
idx
>=0 && idx<
pPage
->
nCñl
 );

6310 
	`as£π
–
CORRUPT_DB
 || 
sz
==
	`˚ŒSize
(
pPage
, 
idx
) );

6311 
	`as£π
–
	`sqlôe3PagîIswrôóbÀ
(
pPage
->
pDbPage
) );

6312 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pPage
->
pBt
->
muãx
) );

6313 
d©a
 = 
pPage
->
aD©a
;

6314 
±r
 = &
pPage
->
aCñlIdx
[2*
idx
];

6315 
pc
 = 
	`gë2byã
(
±r
);

6316 
hdr
 = 
pPage
->
hdrOff£t
;

6317 
	`ã°ˇ£
–
pc
==
	`gë2byã
(&
d©a
[
hdr
+5]) );

6318 
	`ã°ˇ£
–
pc
+
sz
==
pPage
->
pBt
->
ußbÀSize
 );

6319 if–
pc
 < (
u32
)
	`gë2byã
(&
d©a
[
hdr
+5]Ë||Öc+
sz
 > 
pPage
->
pBt
->
ußbÀSize
 ){

6320 *
pRC
 = 
SQLITE_CORRUPT_BKPT
;

6323 
rc
 = 
	`‰ìS∑˚
(
pPage
, 
pc
, 
sz
);

6324 if–
rc
 ){

6325 *
pRC
 = 
rc
;

6328 
pPage
->
nCñl
--;

6329 if–
pPage
->
nCñl
==0 ){

6330 
	`mem£t
(&
d©a
[
hdr
+1], 0, 4);

6331 
d©a
[
hdr
+7] = 0;

6332 
	`put2byã
(&
d©a
[
hdr
+5], 
pPage
->
pBt
->
ußbÀSize
);

6333 
pPage
->
nFªe
 =ÖPage->
pBt
->
ußbÀSize
 -ÖPage->
hdrOff£t


6334 - 
pPage
->
chûdPåSize
 - 8;

6336 
	`memmove
(
±r
,Öå+2, 2*(
pPage
->
nCñl
 - 
idx
));

6337 
	`put2byã
(&
d©a
[
hdr
+3], 
pPage
->
nCñl
);

6338 
pPage
->
nFªe
 += 2;

6340 
	}
}

6356 
	$ö£πCñl
(

6357 
MemPage
 *
pPage
,

6358 
i
,

6359 
u8
 *
pCñl
,

6360 
sz
,

6361 
u8
 *
pTemp
,

6362 
Pgno
 
iChûd
,

6363 *
pRC


6365 
idx
 = 0;

6366 
j
;

6367 
u8
 *
d©a
;

6368 
u8
 *
pIns
;

6370 
	`as£π
–*
pRC
==
SQLITE_OK
 );

6371 
	`as£π
–
i
>=0 && i<=
pPage
->
nCñl
+pPage->
nOvîÊow
 );

6372 
	`as£π
–
	`MX_CELL
(
pPage
->
pBt
)<=10921 );

6373 
	`as£π
–
pPage
->
nCñl
<=
	`MX_CELL
’Page->
pBt
Ë|| 
CORRUPT_DB
 );

6374 
	`as£π
–
pPage
->
nOvîÊow
<=
	`AºaySize
’Page->
≠OvÊ
) );

6375 
	`as£π
–
	`AºaySize
(
pPage
->
≠OvÊ
)==AºaySize’Page->
aiOvÊ
) );

6376 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pPage
->
pBt
->
muãx
) );

6382 
	`as£π
–
sz
==
pPage
->
	`xCñlSize
’Page, 
pCñl
Ë|| (sz==8 && 
iChûd
>0) );

6383 if–
pPage
->
nOvîÊow
 || 
sz
+2>pPage->
nFªe
 ){

6384 if–
pTemp
 ){

6385 
	`mem˝y
(
pTemp
, 
pCñl
, 
sz
);

6386 
pCñl
 = 
pTemp
;

6388 if–
iChûd
 ){

6389 
	`put4byã
(
pCñl
, 
iChûd
);

6391 
j
 = 
pPage
->
nOvîÊow
++;

6395 
	`as£π
–
j
 < 
	`AºaySize
(
pPage
->
≠OvÊ
)-1 );

6396 
pPage
->
≠OvÊ
[
j
] = 
pCñl
;

6397 
pPage
->
aiOvÊ
[
j
] = (
u16
)
i
;

6404 
	`as£π
–
j
==0 || 
pPage
->
aiOvÊ
[j-1]<(
u16
)
i
 );

6405 
	`as£π
–
j
==0 || 
i
==
pPage
->
aiOvÊ
[j-1]+1 );

6407 
rc
 = 
	`sqlôe3PagîWrôe
(
pPage
->
pDbPage
);

6408 if–
rc
!=
SQLITE_OK
 ){

6409 *
pRC
 = 
rc
;

6412 
	`as£π
–
	`sqlôe3PagîIswrôóbÀ
(
pPage
->
pDbPage
) );

6413 
d©a
 = 
pPage
->
aD©a
;

6414 
	`as£π
–&
d©a
[
pPage
->
˚ŒOff£t
]=ıPage->
aCñlIdx
 );

6415 
rc
 = 
	`ÆloˇãS∑˚
(
pPage
, 
sz
, &
idx
);

6416 if–
rc
 ){ *
pRC
 =Ñc; ; }

6419 
	`as£π
–
idx
 >= 0 );

6420 
	`as£π
–
idx
 >
pPage
->
˚ŒOff£t
+2*pPage->
nCñl
+2 || 
CORRUPT_DB
 );

6421 
	`as£π
–
idx
+
sz
 <()
pPage
->
pBt
->
ußbÀSize
 );

6422 
pPage
->
nFªe
 -(
u16
)(2 + 
sz
);

6423 
	`mem˝y
(&
d©a
[
idx
], 
pCñl
, 
sz
);

6424 if–
iChûd
 ){

6425 
	`put4byã
(&
d©a
[
idx
], 
iChûd
);

6427 
pIns
 = 
pPage
->
aCñlIdx
 + 
i
*2;

6428 
	`memmove
(
pIns
+2,ÖIns, 2*(
pPage
->
nCñl
 - 
i
));

6429 
	`put2byã
(
pIns
, 
idx
);

6430 
pPage
->
nCñl
++;

6432 if–(++
d©a
[
pPage
->
hdrOff£t
+4])==0 ) data[pPage->hdrOffset+3]++;

6433 
	`as£π
–
	`gë2byã
(&
d©a
[
pPage
->
hdrOff£t
+3])=ıPage->
nCñl
 );

6434 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


6435 if–
pPage
->
pBt
->
autoVacuum
 ){

6439 
	`±rm≠PutOvÊPå
(
pPage
, 
pCñl
, 
pRC
);

6443 
	}
}

6449 
CñlAºay
 
	tCñlAºay
;

6450 
	sCñlAºay
 {

6451 
	mnCñl
;

6452 
MemPage
 *
	mpRef
;

6453 
u8
 **
	m≠Cñl
;

6454 
u16
 *
	mszCñl
;

6461 
	$p›uœãCñlCache
(
CñlAºay
 *
p
, 
idx
, 
N
){

6462 
	`as£π
–
idx
>=0 && idx+
N
<=
p
->
nCñl
 );

6463  
N
>0 ){

6464 
	`as£π
–
p
->
≠Cñl
[
idx
]!=0 );

6465 if–
p
->
szCñl
[
idx
]==0 ){

6466 
p
->
szCñl
[
idx
] =Ö->
pRef
->
	`xCñlSize
’->pRef,Ö->
≠Cñl
[idx]);

6468 
	`as£π
–
CORRUPT_DB
 ||

6469 
p
->
szCñl
[
idx
]=ı->
pRef
->
	`xCñlSize
’->pRef,Ö->
≠Cñl
[idx]) );

6471 
idx
++;

6472 
N
--;

6474 
	}
}

6479 
SQLITE_NOINLINE
 
u16
 
	$compuãCñlSize
(
CñlAºay
 *
p
, 
N
){

6480 
	`as£π
–
N
>=0 && N<
p
->
nCñl
 );

6481 
	`as£π
–
p
->
szCñl
[
N
]==0 );

6482 
p
->
szCñl
[
N
] =Ö->
pRef
->
	`xCñlSize
’->pRef,Ö->
≠Cñl
[N]);

6483  
p
->
szCñl
[
N
];

6484 
	}
}

6485 
u16
 
	$ˇchedCñlSize
(
CñlAºay
 *
p
, 
N
){

6486 
	`as£π
–
N
>=0 && N<
p
->
nCñl
 );

6487 if–
p
->
szCñl
[
N
] ) Ö->szCell[N];

6488  
	`compuãCñlSize
(
p
, 
N
);

6489 
	}
}

6504 
	$ªbuûdPage
(

6505 
MemPage
 *
pPg
,

6506 
nCñl
,

6507 
u8
 **
≠Cñl
,

6508 
u16
 *
szCñl


6510 c⁄° 
hdr
 = 
pPg
->
hdrOff£t
;

6511 
u8
 * c⁄° 
aD©a
 = 
pPg
->aData;

6512 c⁄° 
ußbÀSize
 = 
pPg
->
pBt
->usableSize;

6513 
u8
 * c⁄° 
pEnd
 = &
aD©a
[
ußbÀSize
];

6514 
i
;

6515 
u8
 *
pCñÕå
 = 
pPg
->
aCñlIdx
;

6516 
u8
 *
pTmp
 = 
	`sqlôe3PagîTempS∑˚
(
pPg
->
pBt
->
pPagî
);

6517 
u8
 *
pD©a
;

6519 
i
 = 
	`gë2byã
(&
aD©a
[
hdr
+5]);

6520 
	`mem˝y
(&
pTmp
[
i
], &
aD©a
[i], 
ußbÀSize
 - i);

6522 
pD©a
 = 
pEnd
;

6523 
i
=0; i<
nCñl
; i++){

6524 
u8
 *
pCñl
 = 
≠Cñl
[
i
];

6525 if–
	`SQLITE_WITHIN
(
pCñl
,
aD©a
,
pEnd
) ){

6526 
pCñl
 = &
pTmp
[pCñ»- 
aD©a
];

6528 
pD©a
 -
szCñl
[
i
];

6529 
	`put2byã
(
pCñÕå
, (
pD©a
 - 
aD©a
));

6530 
pCñÕå
 += 2;

6531 if–
pD©a
 < 
pCñÕå
 )  
SQLITE_CORRUPT_BKPT
;

6532 
	`mem˝y
(
pD©a
, 
pCñl
, 
szCñl
[
i
]);

6533 
	`as£π
–
szCñl
[
i
]==
pPg
->
	`xCñlSize
’Pg, 
pCñl
Ë|| 
CORRUPT_DB
 );

6534 
	`ã°ˇ£
–
szCñl
[
i
]!=
pPg
->
	`xCñlSize
’Pg,
pCñl
) );

6538 
pPg
->
nCñl
 =ÇCell;

6539 
pPg
->
nOvîÊow
 = 0;

6541 
	`put2byã
(&
aD©a
[
hdr
+1], 0);

6542 
	`put2byã
(&
aD©a
[
hdr
+3], 
pPg
->
nCñl
);

6543 
	`put2byã
(&
aD©a
[
hdr
+5], 
pD©a
 -áData);

6544 
aD©a
[
hdr
+7] = 0x00;

6545  
SQLITE_OK
;

6546 
	}
}

6573 
	$∑geIn£πAºay
(

6574 
MemPage
 *
pPg
,

6575 
u8
 *
pBegö
,

6576 
u8
 **
µD©a
,

6577 
u8
 *
pCñÕå
,

6578 
iFú°
,

6579 
nCñl
,

6580 
CñlAºay
 *
pCAºay


6582 
i
;

6583 
u8
 *
aD©a
 = 
pPg
->aData;

6584 
u8
 *
pD©a
 = *
µD©a
;

6585 
iEnd
 = 
iFú°
 + 
nCñl
;

6586 
	`as£π
–
CORRUPT_DB
 || 
pPg
->
hdrOff£t
==0 );

6587 
i
=
iFú°
; i<
iEnd
; i++){

6588 
sz
, 
rc
;

6589 
u8
 *
pSlŸ
;

6590 
sz
 = 
	`ˇchedCñlSize
(
pCAºay
, 
i
);

6591 if–(
aD©a
[1]==0 &&áD©a[2]==0Ë|| (
pSlŸ
 = 
	`∑geFödSlŸ
(
pPg
,
sz
,&
rc
))==0 ){

6592 if–(
pD©a
 - 
pBegö
)<
sz
 )  1;

6593 
pD©a
 -
sz
;

6594 
pSlŸ
 = 
pD©a
;

6599 
	`as£π
–(
pSlŸ
+
sz
)<=
pCAºay
->
≠Cñl
[
i
]

6600 || 
pSlŸ
>=(
pCAºay
->
≠Cñl
[
i
]+
sz
)

6601 || 
CORRUPT_DB
 );

6602 
	`memmove
(
pSlŸ
, 
pCAºay
->
≠Cñl
[
i
], 
sz
);

6603 
	`put2byã
(
pCñÕå
, (
pSlŸ
 - 
aD©a
));

6604 
pCñÕå
 += 2;

6606 *
µD©a
 = 
pD©a
;

6608 
	}
}

6619 
	$∑geFªeAºay
(

6620 
MemPage
 *
pPg
,

6621 
iFú°
,

6622 
nCñl
,

6623 
CñlAºay
 *
pCAºay


6625 
u8
 * c⁄° 
aD©a
 = 
pPg
->aData;

6626 
u8
 * c⁄° 
pEnd
 = &
aD©a
[
pPg
->
pBt
->
ußbÀSize
];

6627 
u8
 * c⁄° 
pSèπ
 = &
aD©a
[
pPg
->
hdrOff£t
 + 8 +ÖPg->
chûdPåSize
];

6628 
nRë
 = 0;

6629 
i
;

6630 
iEnd
 = 
iFú°
 + 
nCñl
;

6631 
u8
 *
pFªe
 = 0;

6632 
szFªe
 = 0;

6634 
i
=
iFú°
; i<
iEnd
; i++){

6635 
u8
 *
pCñl
 = 
pCAºay
->
≠Cñl
[
i
];

6636 if–
	`SQLITE_WITHIN
(
pCñl
, 
pSèπ
, 
pEnd
) ){

6637 
sz
;

6641 
sz
 = 
pCAºay
->
szCñl
[
i
]; 
	`as£π
( sz>0 );

6642 if–
pFªe
!=(
pCñl
 + 
sz
) ){

6643 if–
pFªe
 ){

6644 
	`as£π
–
pFªe
>
aD©a
 && (pFree -áData)<65536 );

6645 
	`‰ìS∑˚
(
pPg
, (
u16
)(
pFªe
 - 
aD©a
), 
szFªe
);

6647 
pFªe
 = 
pCñl
;

6648 
szFªe
 = 
sz
;

6649 if–
pFªe
+
sz
>
pEnd
 )  0;

6651 
pFªe
 = 
pCñl
;

6652 
szFªe
 +
sz
;

6654 
nRë
++;

6657 if–
pFªe
 ){

6658 
	`as£π
–
pFªe
>
aD©a
 && (pFree -áData)<65536 );

6659 
	`‰ìS∑˚
(
pPg
, (
u16
)(
pFªe
 - 
aD©a
), 
szFªe
);

6661  
nRë
;

6662 
	}
}

6676 
	$edôPage
(

6677 
MemPage
 *
pPg
,

6678 
iOld
,

6679 
iNew
,

6680 
nNew
,

6681 
CñlAºay
 *
pCAºay


6683 
u8
 * c⁄° 
aD©a
 = 
pPg
->aData;

6684 c⁄° 
hdr
 = 
pPg
->
hdrOff£t
;

6685 
u8
 *
pBegö
 = &
pPg
->
aCñlIdx
[
nNew
 * 2];

6686 
nCñl
 = 
pPg
->nCell;

6687 
u8
 *
pD©a
;

6688 
u8
 *
pCñÕå
;

6689 
i
;

6690 
iOldEnd
 = 
iOld
 + 
pPg
->
nCñl
 +ÖPg->
nOvîÊow
;

6691 
iNewEnd
 = 
iNew
 + 
nNew
;

6693 #ifde‡
SQLITE_DEBUG


6694 
u8
 *
pTmp
 = 
	`sqlôe3PagîTempS∑˚
(
pPg
->
pBt
->
pPagî
);

6695 
	`mem˝y
(
pTmp
, 
aD©a
, 
pPg
->
pBt
->
ußbÀSize
);

6699 if–
iOld
<
iNew
 ){

6700 
nShi·
 = 
	`∑geFªeAºay
(
pPg
, 
iOld
, 
iNew
-iOld, 
pCAºay
);

6701 
	`memmove
(
pPg
->
aCñlIdx
, &pPg->aCñlIdx[
nShi·
*2], 
nCñl
*2);

6702 
nCñl
 -
nShi·
;

6704 if–
iNewEnd
 < 
iOldEnd
 ){

6705 
nCñl
 -
	`∑geFªeAºay
(
pPg
, 
iNewEnd
, 
iOldEnd
 - iNewEnd, 
pCAºay
);

6708 
pD©a
 = &
aD©a
[
	`gë2byãNŸZîo
(&aD©a[
hdr
+5])];

6709 if–
pD©a
<
pBegö
 ) 
edô∑ge_Áû
;

6712 if–
iNew
<
iOld
 ){

6713 
nAdd
 = 
	`MIN
(
nNew
,
iOld
-
iNew
);

6714 
	`as£π
–(
iOld
-
iNew
)<
nNew
 || 
nCñl
==0 || 
CORRUPT_DB
 );

6715 
pCñÕå
 = 
pPg
->
aCñlIdx
;

6716 
	`memmove
(&
pCñÕå
[
nAdd
*2],ÖCñÕå, 
nCñl
*2);

6717 if–
	`∑geIn£πAºay
(

6718 
pPg
, 
pBegö
, &
pD©a
, 
pCñÕå
,

6719 
iNew
, 
nAdd
, 
pCAºay


6720 ËË
edô∑ge_Áû
;

6721 
nCñl
 +
nAdd
;

6725 
i
=0; i<
pPg
->
nOvîÊow
; i++){

6726 
iCñl
 = (
iOld
 + 
pPg
->
aiOvÊ
[
i
]Ë- 
iNew
;

6727 if–
iCñl
>=0 && iCñl<
nNew
 ){

6728 
pCñÕå
 = &
pPg
->
aCñlIdx
[
iCñl
 * 2];

6729 
	`memmove
(&
pCñÕå
[2],ÖCñÕå, (
nCñl
 - 
iCñl
) * 2);

6730 
nCñl
++;

6731 if–
	`∑geIn£πAºay
(

6732 
pPg
, 
pBegö
, &
pD©a
, 
pCñÕå
,

6733 
iCñl
+
iNew
, 1, 
pCAºay


6734 ËË
edô∑ge_Áû
;

6739 
pCñÕå
 = &
pPg
->
aCñlIdx
[
nCñl
*2];

6740 if–
	`∑geIn£πAºay
(

6741 
pPg
, 
pBegö
, &
pD©a
, 
pCñÕå
,

6742 
iNew
+
nCñl
, 
nNew
-nCñl, 
pCAºay


6743 ËË
edô∑ge_Áû
;

6745 
pPg
->
nCñl
 = 
nNew
;

6746 
pPg
->
nOvîÊow
 = 0;

6748 
	`put2byã
(&
aD©a
[
hdr
+3], 
pPg
->
nCñl
);

6749 
	`put2byã
(&
aD©a
[
hdr
+5], 
pD©a
 -áData);

6751 #ifde‡
SQLITE_DEBUG


6752 
i
=0; i<
nNew
 && !
CORRUPT_DB
; i++){

6753 
u8
 *
pCñl
 = 
pCAºay
->
≠Cñl
[
i
+
iNew
];

6754 
iOff
 = 
	`gë2byãAlig√d
(&
pPg
->
aCñlIdx
[
i
*2]);

6755 if–
	`SQLITE_WITHIN
(
pCñl
, 
aD©a
, &aD©a[
pPg
->
pBt
->
ußbÀSize
]) ){

6756 
pCñl
 = &
pTmp
[pCñ»- 
aD©a
];

6758 
	`as£π
–0==
	`memcmp
(
pCñl
, &
aD©a
[
iOff
],

6759 
pCAºay
->
pRef
->
	`xCñlSize
’CAºay->pRef,ÖCAºay->
≠Cñl
[
i
+
iNew
])) );

6763  
SQLITE_OK
;

6764 
edô∑ge_Áû
:

6766 
	`p›uœãCñlCache
(
pCAºay
, 
iNew
, 
nNew
);

6767  
	`ªbuûdPage
(
pPg
, 
nNew
, &
pCAºay
->
≠Cñl
[
iNew
], &pCAºay->
szCñl
[iNew]);

6768 
	}
}

6782 
	#NN
 1

	)

6783 
	#NB
 (
NN
*2+1Ë

	)

6786 #i‚de‡
SQLITE_OMIT_QUICKBALANCE


6810 
	$bÆ™˚_quick
(
MemPage
 *
pP¨ít
, MemPagê*
pPage
, 
u8
 *
pS∑˚
){

6811 
BtSh¨ed
 *c⁄° 
pBt
 = 
pPage
->pBt;

6812 
MemPage
 *
pNew
;

6813 
rc
;

6814 
Pgno
 
pgnoNew
;

6816 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pPage
->
pBt
->
muãx
) );

6817 
	`as£π
–
	`sqlôe3PagîIswrôóbÀ
(
pP¨ít
->
pDbPage
) );

6818 
	`as£π
–
pPage
->
nOvîÊow
==1 );

6821 if–
	`NEVER
(
pPage
->
nCñl
==0ËË 
SQLITE_CORRUPT_BKPT
;

6827 
rc
 = 
	`ÆloˇãBåìPage
(
pBt
, &
pNew
, &
pgnoNew
, 0, 0);

6829 if–
rc
==
SQLITE_OK
 ){

6831 
u8
 *
pOut
 = &
pS∑˚
[4];

6832 
u8
 *
pCñl
 = 
pPage
->
≠OvÊ
[0];

6833 
u16
 
szCñl
 = 
pPage
->
	`xCñlSize
’Page, 
pCñl
);

6834 
u8
 *
pSt›
;

6836 
	`as£π
–
	`sqlôe3PagîIswrôóbÀ
(
pNew
->
pDbPage
) );

6837 
	`as£π
–
pPage
->
aD©a
[0]==(
PTF_INTKEY
|
PTF_LEAFDATA
|
PTF_LEAF
) );

6838 
	`zîoPage
(
pNew
, 
PTF_INTKEY
|
PTF_LEAFDATA
|
PTF_LEAF
);

6839 
rc
 = 
	`ªbuûdPage
(
pNew
, 1, &
pCñl
, &
szCñl
);

6840 if–
	`NEVER
(
rc
) ) Ñc;

6841 
pNew
->
nFªe
 = 
pBt
->
ußbÀSize
 -ÖNew->
˚ŒOff£t
 - 2 - 
szCñl
;

6852 if–
ISAUTOVACUUM
 ){

6853 
	`±rm≠Put
(
pBt
, 
pgnoNew
, 
PTRMAP_BTREE
, 
pP¨ít
->
pgno
, &
rc
);

6854 if–
szCñl
>
pNew
->
möLoˇl
 ){

6855 
	`±rm≠PutOvÊPå
(
pNew
, 
pCñl
, &
rc
);

6872 
pCñl
 = 
	`födCñl
(
pPage
,ÖPage->
nCñl
-1);

6873 
pSt›
 = &
pCñl
[9];

6874  (*(
pCñl
++)&0x80Ë&&ÖCñl<
pSt›
 );

6875 
pSt›
 = &
pCñl
[9];

6876  ((*(
pOut
++Ë*(
pCñl
++))&0x80Ë&&ÖCñl<
pSt›
 );

6879 if–
rc
==
SQLITE_OK
 ){

6880 
	`ö£πCñl
(
pP¨ít
,ÖP¨ít->
nCñl
, 
pS∑˚
, ()(
pOut
-pSpace),

6881 0, 
pPage
->
pgno
, &
rc
);

6885 
	`put4byã
(&
pP¨ít
->
aD©a
[pP¨ít->
hdrOff£t
+8], 
pgnoNew
);

6888 
	`ªÀa£Page
(
pNew
);

6891  
rc
;

6892 
	}
}

6901 
	$±rm≠CheckPages
(
MemPage
 **
≠Page
, 
nPage
){

6902 
i
, 
j
;

6903 
i
=0; i<
nPage
; i++){

6904 
Pgno
 
n
;

6905 
u8
 
e
;

6906 
MemPage
 *
pPage
 = 
≠Page
[
i
];

6907 
BtSh¨ed
 *
pBt
 = 
pPage
->pBt;

6908 
	`as£π
–
pPage
->
isInô
 );

6910 
j
=0; j<
pPage
->
nCñl
; j++){

6911 
CñlInfo
 
öfo
;

6912 
u8
 *
z
;

6914 
z
 = 
	`födCñl
(
pPage
, 
j
);

6915 
pPage
->
	`xP¨£Cñl
’Page, 
z
, &
öfo
);

6916 if–
öfo
.
nLoˇl
<öfo.
nPaylﬂd
 ){

6917 
Pgno
 
ovÊ
 = 
	`gë4byã
(&
z
[
öfo
.
nSize
-4]);

6918 
	`±rm≠Gë
(
pBt
, 
ovÊ
, &
e
, &
n
);

6919 
	`as£π
–
n
==
pPage
->
pgno
 && 
e
==
PTRMAP_OVERFLOW1
 );

6921 if–!
pPage
->
Àaf
 ){

6922 
Pgno
 
chûd
 = 
	`gë4byã
(
z
);

6923 
	`±rm≠Gë
(
pBt
, 
chûd
, &
e
, &
n
);

6924 
	`as£π
–
n
==
pPage
->
pgno
 && 
e
==
PTRMAP_BTREE
 );

6927 if–!
pPage
->
Àaf
 ){

6928 
Pgno
 
chûd
 = 
	`gë4byã
(&
pPage
->
aD©a
[pPage->
hdrOff£t
+8]);

6929 
	`±rm≠Gë
(
pBt
, 
chûd
, &
e
, &
n
);

6930 
	`as£π
–
n
==
pPage
->
pgno
 && 
e
==
PTRMAP_BTREE
 );

6934 
	}
}

6954 
	$c›yNodeC⁄ã¡
(
MemPage
 *
pFrom
, MemPagê*
pTo
, *
pRC
){

6955 if–(*
pRC
)==
SQLITE_OK
 ){

6956 
BtSh¨ed
 * c⁄° 
pBt
 = 
pFrom
->pBt;

6957 
u8
 * c⁄° 
aFrom
 = 
pFrom
->
aD©a
;

6958 
u8
 * c⁄° 
aTo
 = 
pTo
->
aD©a
;

6959 c⁄° 
iFromHdr
 = 
pFrom
->
hdrOff£t
;

6960 c⁄° 
iToHdr
 = ((
pTo
->
pgno
==1) ? 100 : 0);

6961 
rc
;

6962 
iD©a
;

6965 
	`as£π
–
pFrom
->
isInô
 );

6966 
	`as£π
–
pFrom
->
nFªe
>=
iToHdr
 );

6967 
	`as£π
–
	`gë2byã
(&
aFrom
[
iFromHdr
+5]Ë<()
pBt
->
ußbÀSize
 );

6970 
iD©a
 = 
	`gë2byã
(&
aFrom
[
iFromHdr
+5]);

6971 
	`mem˝y
(&
aTo
[
iD©a
], &
aFrom
[iD©a], 
pBt
->
ußbÀSize
-iData);

6972 
	`mem˝y
(&
aTo
[
iToHdr
], &
aFrom
[
iFromHdr
], 
pFrom
->
˚ŒOff£t
 + 2*pFrom->
nCñl
);

6979 
pTo
->
isInô
 = 0;

6980 
rc
 = 
	`båìInôPage
(
pTo
);

6981 if–
rc
!=
SQLITE_OK
 ){

6982 *
pRC
 = 
rc
;

6989 if–
ISAUTOVACUUM
 ){

6990 *
pRC
 = 
	`£tChûdPåm≠s
(
pTo
);

6993 
	}
}

7035 
	$bÆ™˚_n⁄roŸ
(

7036 
MemPage
 *
pP¨ít
,

7037 
iP¨ítIdx
,

7038 
u8
 *
aOvÊS∑˚
,

7039 
isRoŸ
,

7040 
bBulk


7042 
BtSh¨ed
 *
pBt
;

7043 
nMaxCñls
 = 0;

7044 
nNew
 = 0;

7045 
nOld
;

7046 
i
, 
j
, 
k
;

7047 
nxDiv
;

7048 
rc
 = 
SQLITE_OK
;

7049 
u16
 
ÀafC‹ª˘i⁄
;

7050 
ÀafD©a
;

7051 
ußbÀS∑˚
;

7052 
∑geFœgs
;

7053 
iS∑˚1
 = 0;

7054 
iOvÊS∑˚
 = 0;

7055 
szS¸©ch
;

7056 
MemPage
 *
≠Old
[
NB
];

7057 
MemPage
 *
≠New
[
NB
+2];

7058 
u8
 *
pRight
;

7059 
u8
 *
≠Div
[
NB
-1];

7060 
˙tNew
[
NB
+2];

7061 
˙tOld
[
NB
+2];

7062 
szNew
[
NB
+2];

7063 
u8
 *
aS∑˚1
;

7064 
Pgno
 
pgno
;

7065 
u8
 
abD⁄e
[
NB
+2];

7066 
Pgno
 
aPgno
[
NB
+2];

7067 
Pgno
 
aPgOrdî
[
NB
+2];

7068 
u16
 
aPgFœgs
[
NB
+2];

7069 
CñlAºay
 
b
;

7071 
	`mem£t
(
abD⁄e
, 0, (abDone));

7072 
b
.
nCñl
 = 0;

7073 
b
.
≠Cñl
 = 0;

7074 
pBt
 = 
pP¨ít
->pBt;

7075 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

7076 
	`as£π
–
	`sqlôe3PagîIswrôóbÀ
(
pP¨ít
->
pDbPage
) );

7079 
	`TRACE
(("BALANCE: begöÖagê%d chûd o‡%d\n", 
pPage
->
pgno
, 
pP¨ít
->pgno));

7087 
	`as£π
–
pP¨ít
->
nOvîÊow
==0 ||ÖParent->nOverflow==1 );

7088 
	`as£π
–
pP¨ít
->
nOvîÊow
==0 ||ÖP¨ít->
aiOvÊ
[0]==
iP¨ítIdx
 );

7090 if–!
aOvÊS∑˚
 ){

7091  
SQLITE_NOMEM_BKPT
;

7105 
i
 = 
pP¨ít
->
nOvîÊow
 +ÖP¨ít->
nCñl
;

7106 if–
i
<2 ){

7107 
nxDiv
 = 0;

7109 
	`as£π
–
bBulk
==0 || bBulk==1 );

7110 if–
iP¨ítIdx
==0 ){

7111 
nxDiv
 = 0;

7112 }if–
iP¨ítIdx
==
i
 ){

7113 
nxDiv
 = 
i
-2+
bBulk
;

7115 
nxDiv
 = 
iP¨ítIdx
-1;

7117 
i
 = 2-
bBulk
;

7119 
nOld
 = 
i
+1;

7120 if–(
i
+
nxDiv
-
pP¨ít
->
nOvîÊow
)=ıP¨ít->
nCñl
 ){

7121 
pRight
 = &
pP¨ít
->
aD©a
[pP¨ít->
hdrOff£t
+8];

7123 
pRight
 = 
	`födCñl
(
pP¨ít
, 
i
+
nxDiv
-pP¨ít->
nOvîÊow
);

7125 
pgno
 = 
	`gë4byã
(
pRight
);

7127 
rc
 = 
	`gëAndInôPage
(
pBt
, 
pgno
, &
≠Old
[
i
], 0, 0);

7128 if–
rc
 ){

7129 
	`mem£t
(
≠Old
, 0, (
i
+1)*(
MemPage
*));

7130 
bÆ™˚_˛ónup
;

7132 
nMaxCñls
 +1+
≠Old
[
i
]->
nCñl
+≠Old[i]->
nOvîÊow
;

7133 if–(
i
--)==0 ) ;

7135 if–
pP¨ít
->
nOvîÊow
 && 
i
+
nxDiv
=ıP¨ít->
aiOvÊ
[0] ){

7136 
≠Div
[
i
] = 
pP¨ít
->
≠OvÊ
[0];

7137 
pgno
 = 
	`gë4byã
(
≠Div
[
i
]);

7138 
szNew
[
i
] = 
pP¨ít
->
	`xCñlSize
’P¨ít, 
≠Div
[i]);

7139 
pP¨ít
->
nOvîÊow
 = 0;

7141 
≠Div
[
i
] = 
	`födCñl
(
pP¨ít
, i+
nxDiv
-pP¨ít->
nOvîÊow
);

7142 
pgno
 = 
	`gë4byã
(
≠Div
[
i
]);

7143 
szNew
[
i
] = 
pP¨ít
->
	`xCñlSize
’P¨ít, 
≠Div
[i]);

7157 if–
pBt
->
btsFœgs
 & 
BTS_SECURE_DELETE
 ){

7158 
iOff
;

7160 
iOff
 = 
	`SQLITE_PTR_TO_INT
(
≠Div
[
i
]Ë- SQLITE_PTR_TO_INT(
pP¨ít
->
aD©a
);

7161 if–(
iOff
+
szNew
[
i
])>()
pBt
->
ußbÀSize
 ){

7162 
rc
 = 
SQLITE_CORRUPT_BKPT
;

7163 
	`mem£t
(
≠Old
, 0, (
i
+1)*(
MemPage
*));

7164 
bÆ™˚_˛ónup
;

7166 
	`mem˝y
(&
aOvÊS∑˚
[
iOff
], 
≠Div
[
i
], 
szNew
[i]);

7167 
≠Div
[
i
] = &
aOvÊS∑˚
[≠Div[i]-
pP¨ít
->
aD©a
];

7170 
	`dr›Cñl
(
pP¨ít
, 
i
+
nxDiv
-pP¨ít->
nOvîÊow
, 
szNew
[i], &
rc
);

7176 
nMaxCñls
 = (nMaxCells + 3)&~3;

7181 
szS¸©ch
 =

7182 
nMaxCñls
*(
u8
*)

7183 + 
nMaxCñls
*(
u16
)

7184 + 
pBt
->
∑geSize
;

7188 
	`as£π
–
szS¸©ch
<=6*()
pBt
->
∑geSize
 );

7189 
b
.
≠Cñl
 = 
	`sqlôe3S¸©chMÆloc
–
szS¸©ch
 );

7190 if–
b
.
≠Cñl
==0 ){

7191 
rc
 = 
SQLITE_NOMEM_BKPT
;

7192 
bÆ™˚_˛ónup
;

7194 
b
.
szCñl
 = (
u16
*)&b.
≠Cñl
[
nMaxCñls
];

7195 
aS∑˚1
 = (
u8
*)&
b
.
szCñl
[
nMaxCñls
];

7196 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(
aS∑˚1
) );

7214 
b
.
pRef
 = 
≠Old
[0];

7215 
ÀafC‹ª˘i⁄
 = 
b
.
pRef
->
Àaf
*4;

7216 
ÀafD©a
 = 
b
.
pRef
->
ötKeyLóf
;

7217 
i
=0; i<
nOld
; i++){

7218 
MemPage
 *
pOld
 = 
≠Old
[
i
];

7219 
limô
 = 
pOld
->
nCñl
;

7220 
u8
 *
aD©a
 = 
pOld
->aData;

7221 
u16
 
maskPage
 = 
pOld
->maskPage;

7222 
u8
 *
piCñl
 = 
aD©a
 + 
pOld
->
˚ŒOff£t
;

7223 
u8
 *
piEnd
;

7228 if–
pOld
->
aD©a
[0]!=
≠Old
[0]->aData[0] ){

7229 
rc
 = 
SQLITE_CORRUPT_BKPT
;

7230 
bÆ™˚_˛ónup
;

7250 
	`mem£t
(&
b
.
szCñl
[b.
nCñl
], 0, (b.szCñl[0])*(
limô
+
pOld
->
nOvîÊow
));

7251 if–
pOld
->
nOvîÊow
>0 ){

7252 
limô
 = 
pOld
->
aiOvÊ
[0];

7253 
j
=0; j<
limô
; j++){

7254 
b
.
≠Cñl
[b.
nCñl
] = 
aD©a
 + (
maskPage
 & 
	`gë2byãAlig√d
(
piCñl
));

7255 
piCñl
 += 2;

7256 
b
.
nCñl
++;

7258 
k
=0; k<
pOld
->
nOvîÊow
; k++){

7259 
	`as£π
–
k
==0 || 
pOld
->
aiOvÊ
[k-1]+1==pOld->aiOvfl[k] );

7260 
b
.
≠Cñl
[b.
nCñl
] = 
pOld
->
≠OvÊ
[
k
];

7261 
b
.
nCñl
++;

7264 
piEnd
 = 
aD©a
 + 
pOld
->
˚ŒOff£t
 + 2*pOld->
nCñl
;

7265  
piCñl
<
piEnd
 ){

7266 
	`as£π
–
b
.
nCñl
<
nMaxCñls
 );

7267 
b
.
≠Cñl
[b.
nCñl
] = 
aD©a
 + (
maskPage
 & 
	`gë2byãAlig√d
(
piCñl
));

7268 
piCñl
 += 2;

7269 
b
.
nCñl
++;

7272 
˙tOld
[
i
] = 
b
.
nCñl
;

7273 if–
i
<
nOld
-1 && !
ÀafD©a
){

7274 
u16
 
sz
 = (u16)
szNew
[
i
];

7275 
u8
 *
pTemp
;

7276 
	`as£π
–
b
.
nCñl
<
nMaxCñls
 );

7277 
b
.
szCñl
[b.
nCñl
] = 
sz
;

7278 
pTemp
 = &
aS∑˚1
[
iS∑˚1
];

7279 
iS∑˚1
 +
sz
;

7280 
	`as£π
–
sz
<=
pBt
->
maxLoˇl
+23 );

7281 
	`as£π
–
iS∑˚1
 <()
pBt
->
∑geSize
 );

7282 
	`mem˝y
(
pTemp
, 
≠Div
[
i
], 
sz
);

7283 
b
.
≠Cñl
[b.
nCñl
] = 
pTemp
+
ÀafC‹ª˘i⁄
;

7284 
	`as£π
–
ÀafC‹ª˘i⁄
==0 ||ÜeafCorrection==4 );

7285 
b
.
szCñl
[b.
nCñl
] = b.szCñl[b.nCñl] - 
ÀafC‹ª˘i⁄
;

7286 if–!
pOld
->
Àaf
 ){

7287 
	`as£π
–
ÀafC‹ª˘i⁄
==0 );

7288 
	`as£π
–
pOld
->
hdrOff£t
==0 );

7291 
	`mem˝y
(
b
.
≠Cñl
[b.
nCñl
], &
pOld
->
aD©a
[8], 4);

7293 
	`as£π
–
ÀafC‹ª˘i⁄
==4 );

7294  
b
.
szCñl
[b.
nCñl
]<4 ){

7297 
	`as£π
–
b
.
szCñl
[b.
nCñl
]==3 || 
CORRUPT_DB
 );

7298 
	`as£π
–
b
.
≠Cñl
[b.
nCñl
]==&
aS∑˚1
[
iS∑˚1
-3] || 
CORRUPT_DB
 );

7299 
aS∑˚1
[
iS∑˚1
++] = 0x00;

7300 
b
.
szCñl
[b.
nCñl
]++;

7303 
b
.
nCñl
++;

7323 
ußbÀS∑˚
 = 
pBt
->
ußbÀSize
 - 12 + 
ÀafC‹ª˘i⁄
;

7324 
i
=0; i<
nOld
; i++){

7325 
MemPage
 *
p
 = 
≠Old
[
i
];

7326 
szNew
[
i
] = 
ußbÀS∑˚
 - 
p
->
nFªe
;

7327 if–
szNew
[
i
]<0 ){ 
rc
 = 
SQLITE_CORRUPT_BKPT
; 
bÆ™˚_˛ónup
; }

7328 
j
=0; j<
p
->
nOvîÊow
; j++){

7329 
szNew
[
i
] +2 + 
p
->
	`xCñlSize
’,Ö->
≠OvÊ
[
j
]);

7331 
˙tNew
[
i
] = 
˙tOld
[i];

7333 
k
 = 
nOld
;

7334 
i
=0; i<
k
; i++){

7335 
sz
;

7336  
szNew
[
i
]>
ußbÀS∑˚
 ){

7337 if–
i
+1>=
k
 ){

7338 
k
 = 
i
+2;

7339 if–
k
>
NB
+2 ){ 
rc
 = 
SQLITE_CORRUPT_BKPT
; 
bÆ™˚_˛ónup
; }

7340 
szNew
[
k
-1] = 0;

7341 
˙tNew
[
k
-1] = 
b
.
nCñl
;

7343 
sz
 = 2 + 
	`ˇchedCñlSize
(&
b
, 
˙tNew
[
i
]-1);

7344 
szNew
[
i
] -
sz
;

7345 if–!
ÀafD©a
 ){

7346 if–
˙tNew
[
i
]<
b
.
nCñl
 ){

7347 
sz
 = 2 + 
	`ˇchedCñlSize
(&
b
, 
˙tNew
[
i
]);

7349 
sz
 = 0;

7352 
szNew
[
i
+1] +
sz
;

7353 
˙tNew
[
i
]--;

7355  
˙tNew
[
i
]<
b
.
nCñl
 ){

7356 
sz
 = 2 + 
	`ˇchedCñlSize
(&
b
, 
˙tNew
[
i
]);

7357 if–
szNew
[
i
]+
sz
>
ußbÀS∑˚
 ) ;

7358 
szNew
[
i
] +
sz
;

7359 
˙tNew
[
i
]++;

7360 if–!
ÀafD©a
 ){

7361 if–
˙tNew
[
i
]<
b
.
nCñl
 ){

7362 
sz
 = 2 + 
	`ˇchedCñlSize
(&
b
, 
˙tNew
[
i
]);

7364 
sz
 = 0;

7367 
szNew
[
i
+1] -
sz
;

7369 if–
˙tNew
[
i
]>=
b
.
nCñl
 ){

7370 
k
 = 
i
+1;

7371 }if–
˙tNew
[
i
] <= (i>0 ? cntNew[i-1] : 0) ){

7372 
rc
 = 
SQLITE_CORRUPT_BKPT
;

7373 
bÆ™˚_˛ónup
;

7388 
i
=
k
-1; i>0; i--){

7389 
szRight
 = 
szNew
[
i
];

7390 
szLe·
 = 
szNew
[
i
-1];

7391 
r
;

7392 
d
;

7394 
r
 = 
˙tNew
[
i
-1] - 1;

7395 
d
 = 
r
 + 1 - 
ÀafD©a
;

7396 ()
	`ˇchedCñlSize
(&
b
, 
d
);

7398 
	`as£π
–
d
<
nMaxCñls
 );

7399 
	`as£π
–
r
<
nMaxCñls
 );

7400 ()
	`ˇchedCñlSize
(&
b
, 
r
);

7401 if–
szRight
!=0

7402 && (
bBulk
 || 
szRight
+
b
.
szCñl
[
d
]+2 > 
szLe·
-(b.szCñl[
r
]+(
i
==
k
-1?0:2)))){

7405 
szRight
 +
b
.
szCñl
[
d
] + 2;

7406 
szLe·
 -
b
.
szCñl
[
r
] + 2;

7407 
˙tNew
[
i
-1] = 
r
;

7408 
r
--;

7409 
d
--;

7410 } 
r
>=0 );

7411 
szNew
[
i
] = 
szRight
;

7412 
szNew
[
i
-1] = 
szLe·
;

7413 if–
˙tNew
[
i
-1] <= (i>1 ? cntNew[i-2] : 0) ){

7414 
rc
 = 
SQLITE_CORRUPT_BKPT
;

7415 
bÆ™˚_˛ónup
;

7426 
	`as£π
–
˙tNew
[0]>0 || (
pP¨ít
->
pgno
==1 &&ÖP¨ít->
nCñl
==0Ë|| 
CORRUPT_DB
);

7427 
	`TRACE
(("BALANCE: old: %d(nc=%d) %d(nc=%d) %d(nc=%d)\n",

7428 
≠Old
[0]->
pgno
,ápOld[0]->
nCñl
,

7429 
nOld
>=2 ? 
≠Old
[1]->
pgno
 : 0,ÇOld>=2 ?ápOld[1]->
nCñl
 : 0,

7430 
nOld
>=3 ? 
≠Old
[2]->
pgno
 : 0,ÇOld>=3 ?ápOld[2]->
nCñl
 : 0

7436 
∑geFœgs
 = 
≠Old
[0]->
aD©a
[0];

7437 
i
=0; i<
k
; i++){

7438 
MemPage
 *
pNew
;

7439 if–
i
<
nOld
 ){

7440 
pNew
 = 
≠New
[
i
] = 
≠Old
[i];

7441 
≠Old
[
i
] = 0;

7442 
rc
 = 
	`sqlôe3PagîWrôe
(
pNew
->
pDbPage
);

7443 
nNew
++;

7444 if–
rc
 ) 
bÆ™˚_˛ónup
;

7446 
	`as£π
–
i
>0 );

7447 
rc
 = 
	`ÆloˇãBåìPage
(
pBt
, &
pNew
, &
pgno
, (
bBulk
 ? 1 :Ögno), 0);

7448 if–
rc
 ) 
bÆ™˚_˛ónup
;

7449 
	`zîoPage
(
pNew
, 
∑geFœgs
);

7450 
≠New
[
i
] = 
pNew
;

7451 
nNew
++;

7452 
˙tOld
[
i
] = 
b
.
nCñl
;

7455 if–
ISAUTOVACUUM
 ){

7456 
	`±rm≠Put
(
pBt
, 
pNew
->
pgno
, 
PTRMAP_BTREE
, 
pP¨ít
->pgno, &
rc
);

7457 if–
rc
!=
SQLITE_OK
 ){

7458 
bÆ™˚_˛ónup
;

7476 
i
=0; i<
nNew
; i++){

7477 
aPgOrdî
[
i
] = 
aPgno
[i] = 
≠New
[i]->
pgno
;

7478 
aPgFœgs
[
i
] = 
≠New
[i]->
pDbPage
->
Êags
;

7479 
j
=0; j<
i
; j++){

7480 if–
aPgno
[
j
]=˜Pgno[
i
] ){

7487 
	`as£π
–
CORRUPT_DB
 );

7488 
rc
 = 
SQLITE_CORRUPT_BKPT
;

7489 
bÆ™˚_˛ónup
;

7493 
i
=0; i<
nNew
; i++){

7494 
iBe°
 = 0;

7495 
j
=1; j<
nNew
; j++){

7496 if–
aPgOrdî
[
j
]<aPgOrdî[
iBe°
] ) iBest = j;

7498 
pgno
 = 
aPgOrdî
[
iBe°
];

7499 
aPgOrdî
[
iBe°
] = 0xffffffff;

7500 if–
iBe°
!=
i
 ){

7501 if–
iBe°
>
i
 ){

7502 
	`sqlôe3PagîRekey
(
≠New
[
iBe°
]->
pDbPage
, 
pBt
->
nPage
+iBest+1, 0);

7504 
	`sqlôe3PagîRekey
(
≠New
[
i
]->
pDbPage
, 
pgno
, 
aPgFœgs
[
iBe°
]);

7505 
≠New
[
i
]->
pgno
 =Ögno;

7509 
	`TRACE
(("BALANCE:Çew: %d(%dÇc=%d) %d(%dÇc=%d) %d(%dÇc=%d) "

7511 
≠New
[0]->
pgno
, 
szNew
[0], 
˙tNew
[0],

7512 
nNew
>=2 ? 
≠New
[1]->
pgno
 : 0,ÇNew>=2 ? 
szNew
[1] : 0,

7513 
nNew
>=2 ? 
˙tNew
[1] - c¡New[0] - !
ÀafD©a
 : 0,

7514 
nNew
>=3 ? 
≠New
[2]->
pgno
 : 0,ÇNew>=3 ? 
szNew
[2] : 0,

7515 
nNew
>=3 ? 
˙tNew
[2] - c¡New[1] - !
ÀafD©a
 : 0,

7516 
nNew
>=4 ? 
≠New
[3]->
pgno
 : 0,ÇNew>=4 ? 
szNew
[3] : 0,

7517 
nNew
>=4 ? 
˙tNew
[3] - c¡New[2] - !
ÀafD©a
 : 0,

7518 
nNew
>=5 ? 
≠New
[4]->
pgno
 : 0,ÇNew>=5 ? 
szNew
[4] : 0,

7519 
nNew
>=5 ? 
˙tNew
[4] - c¡New[3] - !
ÀafD©a
 : 0

7522 
	`as£π
–
	`sqlôe3PagîIswrôóbÀ
(
pP¨ít
->
pDbPage
) );

7523 
	`put4byã
(
pRight
, 
≠New
[
nNew
-1]->
pgno
);

7528 if–(
∑geFœgs
 & 
PTF_LEAF
)==0 && 
nOld
!=
nNew
 ){

7529 
MemPage
 *
pOld
 = (
nNew
>
nOld
 ? 
≠New
 : 
≠Old
)[nOld-1];

7530 
	`mem˝y
(&
≠New
[
nNew
-1]->
aD©a
[8], &
pOld
->aData[8], 4);

7549 if–
ISAUTOVACUUM
 ){

7550 
MemPage
 *
pNew
 = 
≠New
[0];

7551 
u8
 *
aOld
 = 
pNew
->
aD©a
;

7552 
˙tOldNext
 = 
pNew
->
nCñl
 +ÖNew->
nOvîÊow
;

7553 
ußbÀSize
 = 
pBt
->usableSize;

7554 
iNew
 = 0;

7555 
iOld
 = 0;

7557 
i
=0; i<
b
.
nCñl
; i++){

7558 
u8
 *
pCñl
 = 
b
.
≠Cñl
[
i
];

7559 if–
i
==
˙tOldNext
 ){

7560 
MemPage
 *
pOld
 = (++
iOld
)<
nNew
 ? 
≠New
[iOld] : 
≠Old
[iOld];

7561 
˙tOldNext
 +
pOld
->
nCñl
 +ÖOld->
nOvîÊow
 + !
ÀafD©a
;

7562 
aOld
 = 
pOld
->
aD©a
;

7564 if–
i
==
˙tNew
[
iNew
] ){

7565 
pNew
 = 
≠New
[++
iNew
];

7566 if–!
ÀafD©a
 ) ;

7575 if–
iOld
>=
nNew


7576 || 
pNew
->
pgno
!=
aPgno
[
iOld
]

7577 || !
	`SQLITE_WITHIN
(
pCñl
,
aOld
,&aOld[
ußbÀSize
])

7579 if–!
ÀafC‹ª˘i⁄
 ){

7580 
	`±rm≠Put
(
pBt
, 
	`gë4byã
(
pCñl
), 
PTRMAP_BTREE
, 
pNew
->
pgno
, &
rc
);

7582 if–
	`ˇchedCñlSize
(&
b
,
i
)>
pNew
->
möLoˇl
 ){

7583 
	`±rm≠PutOvÊPå
(
pNew
, 
pCñl
, &
rc
);

7585 if–
rc
 ) 
bÆ™˚_˛ónup
;

7591 
i
=0; i<
nNew
-1; i++){

7592 
u8
 *
pCñl
;

7593 
u8
 *
pTemp
;

7594 
sz
;

7595 
MemPage
 *
pNew
 = 
≠New
[
i
];

7596 
j
 = 
˙tNew
[
i
];

7598 
	`as£π
–
j
<
nMaxCñls
 );

7599 
	`as£π
–
b
.
≠Cñl
[
j
]!=0 );

7600 
pCñl
 = 
b
.
≠Cñl
[
j
];

7601 
sz
 = 
b
.
szCñl
[
j
] + 
ÀafC‹ª˘i⁄
;

7602 
pTemp
 = &
aOvÊS∑˚
[
iOvÊS∑˚
];

7603 if–!
pNew
->
Àaf
 ){

7604 
	`mem˝y
(&
pNew
->
aD©a
[8], 
pCñl
, 4);

7605 }if–
ÀafD©a
 ){

7611 
CñlInfo
 
öfo
;

7612 
j
--;

7613 
pNew
->
	`xP¨£Cñl
’New, 
b
.
≠Cñl
[
j
], &
öfo
);

7614 
pCñl
 = 
pTemp
;

7615 
sz
 = 4 + 
	`putV¨öt
(&
pCñl
[4], 
öfo
.
nKey
);

7616 
pTemp
 = 0;

7618 
pCñl
 -= 4;

7630 if–
b
.
szCñl
[
j
]==4 ){

7631 
	`as£π
(
ÀafC‹ª˘i⁄
==4);

7632 
sz
 = 
pP¨ít
->
	`xCñlSize
’P¨ít, 
pCñl
);

7635 
iOvÊS∑˚
 +
sz
;

7636 
	`as£π
–
sz
<=
pBt
->
maxLoˇl
+23 );

7637 
	`as£π
–
iOvÊS∑˚
 <()
pBt
->
∑geSize
 );

7638 
	`ö£πCñl
(
pP¨ít
, 
nxDiv
+
i
, 
pCñl
, 
sz
, 
pTemp
, 
pNew
->
pgno
, &
rc
);

7639 if–
rc
!=
SQLITE_OK
 ) 
bÆ™˚_˛ónup
;

7640 
	`as£π
–
	`sqlôe3PagîIswrôóbÀ
(
pP¨ít
->
pDbPage
) );

7665 
i
=1-
nNew
; i<nNew; i++){

7666 
iPg
 = 
i
<0 ? -i : i;

7667 
	`as£π
–
iPg
>=0 && iPg<
nNew
 );

7668 if–
abD⁄e
[
iPg
] ) ;

7669 if–
i
>=0

7670 || 
˙tOld
[
iPg
-1]>=
˙tNew
[iPg-1]

7672 
iNew
;

7673 
iOld
;

7674 
nNewCñl
;

7678 
	`as£π
–
iPg
==0 || 
˙tOld
[iPg-1]>=
˙tNew
[iPg-1] || 
abD⁄e
[iPg-1] );

7682 
	`as£π
–
˙tNew
[
iPg
]>=
˙tOld
[iPg] || 
abD⁄e
[iPg+1] );

7684 if–
iPg
==0 ){

7685 
iNew
 = 
iOld
 = 0;

7686 
nNewCñl
 = 
˙tNew
[0];

7688 
iOld
 = 
iPg
<
nOld
 ? (
˙tOld
[iPg-1] + !
ÀafD©a
Ë: 
b
.
nCñl
;

7689 
iNew
 = 
˙tNew
[
iPg
-1] + !
ÀafD©a
;

7690 
nNewCñl
 = 
˙tNew
[
iPg
] - 
iNew
;

7693 
rc
 = 
	`edôPage
(
≠New
[
iPg
], 
iOld
, 
iNew
, 
nNewCñl
, &
b
);

7694 if–
rc
 ) 
bÆ™˚_˛ónup
;

7695 
abD⁄e
[
iPg
]++;

7696 
≠New
[
iPg
]->
nFªe
 = 
ußbÀS∑˚
-
szNew
[iPg];

7697 
	`as£π
–
≠New
[
iPg
]->
nOvîÊow
==0 );

7698 
	`as£π
–
≠New
[
iPg
]->
nCñl
==
nNewCñl
 );

7703 
	`as£π
–
	`memcmp
(
abD⁄e
, "\01\01\01\01\01", 
nNew
)==0 );

7705 
	`as£π
–
nOld
>0 );

7706 
	`as£π
–
nNew
>0 );

7708 if–
isRoŸ
 && 
pP¨ít
->
nCñl
==0 &&ÖP¨ít->
hdrOff£t
<=
≠New
[0]->
nFªe
 ){

7724 
	`as£π
–
nNew
==1 || 
CORRUPT_DB
 );

7725 
rc
 = 
	`de‰agmítPage
(
≠New
[0]);

7726 
	`ã°ˇ£
–
rc
!=
SQLITE_OK
 );

7727 
	`as£π
–
≠New
[0]->
nFªe
 ==

7728 (
	`gë2byã
(&
≠New
[0]->
aD©a
[5])-≠New[0]->
˚ŒOff£t
-≠New[0]->
nCñl
*2)

7729 || 
rc
!=
SQLITE_OK


7731 
	`c›yNodeC⁄ã¡
(
≠New
[0], 
pP¨ít
, &
rc
);

7732 
	`‰ìPage
(
≠New
[0], &
rc
);

7733 }if–
ISAUTOVACUUM
 && !
ÀafC‹ª˘i⁄
 ){

7737 
i
=0; i<
nNew
; i++){

7738 
u32
 
key
 = 
	`gë4byã
(&
≠New
[
i
]->
aD©a
[8]);

7739 
	`±rm≠Put
(
pBt
, 
key
, 
PTRMAP_BTREE
, 
≠New
[
i
]->
pgno
, &
rc
);

7743 
	`as£π
–
pP¨ít
->
isInô
 );

7744 
	`TRACE
(("BALANCE: finished: old=%dÇew=%d cells=%d\n",

7745 
nOld
, 
nNew
, 
b
.
nCñl
));

7749 
i
=
nNew
; i<
nOld
; i++){

7750 
	`‰ìPage
(
≠Old
[
i
], &
rc
);

7754 if–
ISAUTOVACUUM
 && 
rc
==
SQLITE_OK
 && 
≠New
[0]->
isInô
 ){

7759 
	`±rm≠CheckPages
(
≠New
, 
nNew
);

7760 
	`±rm≠CheckPages
(&
pP¨ít
, 1);

7767 
bÆ™˚_˛ónup
:

7768 
	`sqlôe3S¸©chFªe
(
b
.
≠Cñl
);

7769 
i
=0; i<
nOld
; i++){

7770 
	`ªÀa£Page
(
≠Old
[
i
]);

7772 
i
=0; i<
nNew
; i++){

7773 
	`ªÀa£Page
(
≠New
[
i
]);

7776  
rc
;

7777 
	}
}

7799 
	$bÆ™˚_dì≥r
(
MemPage
 *
pRoŸ
, MemPagê**
µChûd
){

7800 
rc
;

7801 
MemPage
 *
pChûd
 = 0;

7802 
Pgno
 
pgnoChûd
 = 0;

7803 
BtSh¨ed
 *
pBt
 = 
pRoŸ
->pBt;

7805 
	`as£π
–
pRoŸ
->
nOvîÊow
>0 );

7806 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

7812 
rc
 = 
	`sqlôe3PagîWrôe
(
pRoŸ
->
pDbPage
);

7813 if–
rc
==
SQLITE_OK
 ){

7814 
rc
 = 
	`ÆloˇãBåìPage
(
pBt
,&
pChûd
,&
pgnoChûd
,
pRoŸ
->
pgno
,0);

7815 
	`c›yNodeC⁄ã¡
(
pRoŸ
, 
pChûd
, &
rc
);

7816 if–
ISAUTOVACUUM
 ){

7817 
	`±rm≠Put
(
pBt
, 
pgnoChûd
, 
PTRMAP_BTREE
, 
pRoŸ
->
pgno
, &
rc
);

7820 if–
rc
 ){

7821 *
µChûd
 = 0;

7822 
	`ªÀa£Page
(
pChûd
);

7823  
rc
;

7825 
	`as£π
–
	`sqlôe3PagîIswrôóbÀ
(
pChûd
->
pDbPage
) );

7826 
	`as£π
–
	`sqlôe3PagîIswrôóbÀ
(
pRoŸ
->
pDbPage
) );

7827 
	`as£π
–
pChûd
->
nCñl
==
pRoŸ
->nCell );

7829 
	`TRACE
(("BALANCE: c›yÑoŸ %d i¡ÿ%d\n", 
pRoŸ
->
pgno
, 
pChûd
->pgno));

7832 
	`mem˝y
(
pChûd
->
aiOvÊ
, 
pRoŸ
->aiOvfl,

7833 
pRoŸ
->
nOvîÊow
*’RoŸ->
aiOvÊ
[0]));

7834 
	`mem˝y
(
pChûd
->
≠OvÊ
, 
pRoŸ
->apOvfl,

7835 
pRoŸ
->
nOvîÊow
*’RoŸ->
≠OvÊ
[0]));

7836 
pChûd
->
nOvîÊow
 = 
pRoŸ
->nOverflow;

7839 
	`zîoPage
(
pRoŸ
, 
pChûd
->
aD©a
[0] & ~
PTF_LEAF
);

7840 
	`put4byã
(&
pRoŸ
->
aD©a
[pRoŸ->
hdrOff£t
+8], 
pgnoChûd
);

7842 *
µChûd
 = 
pChûd
;

7843  
SQLITE_OK
;

7844 
	}
}

7856 
	$bÆ™˚
(
BtCurs‹
 *
pCur
){

7857 
rc
 = 
SQLITE_OK
;

7858 c⁄° 
nMö
 = 
pCur
->
pBt
->
ußbÀSize
 * 2 / 3;

7859 
u8
 
aBÆ™˚QuickS∑˚
[13];

7860 
u8
 *
pFªe
 = 0;

7862 
	`VVA_ONLY
–
bÆ™˚_quick_ˇŒed
 = 0 );

7863 
	`VVA_ONLY
–
bÆ™˚_dì≥r_ˇŒed
 = 0 );

7866 
iPage
 = 
pCur
->iPage;

7867 
MemPage
 *
pPage
 = 
pCur
->
≠Page
[
iPage
];

7869 if–
iPage
==0 ){

7870 if–
pPage
->
nOvîÊow
 ){

7876 
	`as£π
–
bÆ™˚_dì≥r_ˇŒed
==0 );

7877 
	`VVA_ONLY
–
bÆ™˚_dì≥r_ˇŒed
++ );

7878 
rc
 = 
	`bÆ™˚_dì≥r
(
pPage
, &
pCur
->
≠Page
[1]);

7879 if–
rc
==
SQLITE_OK
 ){

7880 
pCur
->
iPage
 = 1;

7881 
pCur
->
aiIdx
[0] = 0;

7882 
pCur
->
aiIdx
[1] = 0;

7883 
	`as£π
–
pCur
->
≠Page
[1]->
nOvîÊow
 );

7888 }if–
pPage
->
nOvîÊow
==0 &&ÖPage->
nFªe
<=
nMö
 ){

7891 
MemPage
 * c⁄° 
pP¨ít
 = 
pCur
->
≠Page
[
iPage
-1];

7892 c⁄° 
iIdx
 = 
pCur
->
aiIdx
[
iPage
-1];

7894 
rc
 = 
	`sqlôe3PagîWrôe
(
pP¨ít
->
pDbPage
);

7895 if–
rc
==
SQLITE_OK
 ){

7896 #i‚de‡
SQLITE_OMIT_QUICKBALANCE


7897 if–
pPage
->
ötKeyLóf


7898 && 
pPage
->
nOvîÊow
==1

7899 && 
pPage
->
aiOvÊ
[0]=ıPage->
nCñl


7900 && 
pP¨ít
->
pgno
!=1

7901 && 
pP¨ít
->
nCñl
==
iIdx


7916 
	`as£π
–
bÆ™˚_quick_ˇŒed
==0 );

7917 
	`VVA_ONLY
–
bÆ™˚_quick_ˇŒed
++ );

7918 
rc
 = 
	`bÆ™˚_quick
(
pP¨ít
, 
pPage
, 
aBÆ™˚QuickS∑˚
);

7939 
u8
 *
pS∑˚
 = 
	`sqlôe3PageMÆloc
(
pCur
->
pBt
->
∑geSize
);

7940 
rc
 = 
	`bÆ™˚_n⁄roŸ
(
pP¨ít
, 
iIdx
, 
pS∑˚
, 
iPage
==1,

7941 
pCur
->
höts
&
BTREE_BULKLOAD
);

7942 if–
pFªe
 ){

7947 
	`sqlôe3PageFªe
(
pFªe
);

7953 
pFªe
 = 
pS∑˚
;

7957 
pPage
->
nOvîÊow
 = 0;

7960 
	`ªÀa£Page
(
pPage
);

7961 
pCur
->
iPage
--;

7962 
	`as£π
–
pCur
->
iPage
>=0 );

7964 } 
rc
==
SQLITE_OK
 );

7966 if–
pFªe
 ){

7967 
	`sqlôe3PageFªe
(
pFªe
);

7969  
rc
;

7970 
	}
}

8003 
	$sqlôe3BåìIn£π
(

8004 
BtCurs‹
 *
pCur
,

8005 c⁄° 
BåìPaylﬂd
 *
pX
,

8006 
≠≥ndBüs
,

8007 
£ekResu…


8010 
	`sqlôe3LogCurs‹In£π
(
pCur
, 
pX
, 
≠≥ndBüs
, 
£ekResu…
);

8011 
ªs
;

8012 
rc
;

8013 
loc
 = 
£ekResu…
;

8014 
szNew
 = 0;

8015 
idx
;

8016 
MemPage
 *
pPage
;

8017 
Båì
 *
p
 = 
pCur
->
pBåì
;

8018 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

8019 *
ﬁdCñl
;

8020 *
√wCñl
 = 0;

8021 if–
pCur
->
eSèã
==
CURSOR_FAULT
 ){

8022 
	`as£π
–
pCur
->
skùNext
!=
SQLITE_OK
 );

8023  
pCur
->
skùNext
;

8026 
	`as£π
–
	`curs‹OwnsBtSh¨ed
(
pCur
) );

8027 
	`as£π
–(
pCur
->
curFœgs
 & 
BTCF_WrôeFœg
)!=0

8028 && 
pBt
->
öTønß˘i⁄
==
TRANS_WRITE


8029 && (
pBt
->
btsFœgs
 & 
BTS_READ_ONLY
)==0 );

8030 
	`as£π
–
	`hasSh¨edCacheTabÀLock
(
p
, 
pCur
->
pgnoRoŸ
,ÖCur->
pKeyInfo
!=0, 2) );

8037 
	`as£π
–(
pX
->
pKey
==0)==(
pCur
->
pKeyInfo
==0) );

8050 if–
pCur
->
curFœgs
 & 
BTCF_Mu…ùÀ
 ){

8051 
rc
 = 
	`ßveAŒCurs‹s
(
pBt
, 
pCur
->
pgnoRoŸ
,ÖCur);

8052 if–
rc
 ) Ñc;

8056 if–
pCur
->
pKeyInfo
==0 ){

8057 
	`as£π
–
pX
->
pKey
==0 );

8060 
	`övÆid©eIn¸blobCurs‹s
(
p
, 
pX
->
nKey
, 0);

8065 if–(
pCur
->
curFœgs
&
BTCF_VÆidNKey
)!=0 && 
pX
->
nKey
=ıCur->
öfo
.nKey ){

8066 
loc
 = 0;

8067 }if–(
pCur
->
curFœgs
&
BTCF_VÆidNKey
)!=0 && 
pX
->
nKey
>0

8068 && 
pCur
->
öfo
.
nKey
==
pX
->nKey-1 ){

8069 
loc
 = -1;

8070 }if–
loc
==0 ){

8071 
rc
 = 
	`sqlôe3BåìMovëoU≈acked
(
pCur
, 0, 
pX
->
nKey
, 
≠≥ndBüs
, &
loc
);

8072 if–
rc
 ) Ñc;

8074 }if–
loc
==0 ){

8075 if–
pX
->
nMem
 ){

8076 
U≈ackedRec‹d
 
r
;

8077 
r
.
pKeyInfo
 = 
pCur
->pKeyInfo;

8078 
r
.
aMem
 = 
pX
->aMem;

8079 
r
.
nFõld
 = 
pX
->
nMem
;

8080 
r
.
deÁu…_rc
 = 0;

8081 
r
.
îrCode
 = 0;

8082 
r
.
r1
 = 0;

8083 
r
.
r2
 = 0;

8084 
r
.
eqSìn
 = 0;

8085 
rc
 = 
	`sqlôe3BåìMovëoU≈acked
(
pCur
, &
r
, 0, 
≠≥ndBüs
, &
loc
);

8087 
rc
 = 
	`båìMovëo
(
pCur
, 
pX
->
pKey
,ÖX->
nKey
, 
≠≥ndBüs
, &
loc
);

8089 if–
rc
 ) Ñc;

8091 
	`as£π
–
pCur
->
eSèã
==
CURSOR_VALID
 || (pCur->eSèã==
CURSOR_INVALID
 && 
loc
) );

8093 
pPage
 = 
pCur
->
≠Page
[pCur->
iPage
];

8094 
	`as£π
–
pPage
->
ötKey
 || 
pX
->
nKey
>=0 );

8095 
	`as£π
–
pPage
->
Àaf
 || !pPage->
ötKey
 );

8097 
	`TRACE
(("INSERT:Åable=%dÇkey=%lldÇdata=%dÖage=%d %s\n",

8098 
pCur
->
pgnoRoŸ
, 
pX
->
nKey
,ÖX->
nD©a
, 
pPage
->
pgno
,

8099 
loc
==0 ? "overwrite" : "newÉntry"));

8100 
	`as£π
–
pPage
->
isInô
 );

8101 
√wCñl
 = 
pBt
->
pTmpS∑˚
;

8102 
	`as£π
–
√wCñl
!=0 );

8103 
rc
 = 
	`fûlInCñl
(
pPage
, 
√wCñl
, 
pX
, &
szNew
);

8104 if–
rc
 ) 
íd_ö£π
;

8105 
	`as£π
–
szNew
==
pPage
->
	`NULLlSize
’Page, 
√wCñl
) );

8106 
	`as£π
–
szNew
 <
	`MX_CELL_SIZE
(
pBt
) );

8107 
idx
 = 
pCur
->
aiIdx
[pCur->
iPage
];

8110 if–
loc
==0 ){

8111 
CñlInfo
 
öfo
;

8112 
	`as£π
–
idx
<
pPage
->
nCñl
 );

8113 
rc
 = 
	`sqlôe3PagîWrôe
(
pPage
->
pDbPage
);

8114 if–
rc
 ){

8115 
íd_ö£π
;

8117 
ﬁdCñl
 = 
	`födCñl
(
pPage
, 
idx
);

8118 if–!
pPage
->
Àaf
 ){

8119 
	`mem˝y
(
√wCñl
, 
ﬁdCñl
, 4);

8121 
rc
 = 
	`˛órCñl
(
pPage
, 
ﬁdCñl
, &
öfo
);

8122 if–
öfo
.
nSize
==
szNew
 && info.
nLoˇl
==öfo.
nPaylﬂd
 ){

8129 
	`as£π
–
rc
==
SQLITE_OK
 );

8130 if–
ﬁdCñl
+
szNew
 > 
pPage
->
aD©aEnd
 )  
SQLITE_CORRUPT_BKPT
;

8131 
	`mem˝y
(
ﬁdCñl
, 
√wCñl
, 
szNew
);

8135  
SQLITE_OK
;

8137 
	`dr›Cñl
(
pPage
, 
idx
, 
öfo
.
nSize
, &
rc
);

8138 if–
rc
 ) 
íd_ö£π
;

8139 }if–
loc
<0 && 
pPage
->
nCñl
>0 ){

8140 
	`as£π
–
pPage
->
Àaf
 );

8141 
idx
 = ++
pCur
->
aiIdx
[pCur->
iPage
];

8143 
	`as£π
–
pPage
->
Àaf
 );

8146 
	`ö£πCñl
(
pPage
, 
idx
, 
√wCñl
, 
szNew
, 0, 0, &
rc
);

8147 
	`as£π
–
pPage
->
nOvîÊow
==0 || 
rc
==
SQLITE_OK
 );

8148 
	`as£π
–
rc
!=
SQLITE_OK
 || 
pPage
->
nCñl
>0 ||ÖPage->
nOvîÊow
>0 );

8170 
pCur
->
öfo
.
nSize
 = 0;

8171 if–
pPage
->
nOvîÊow
 ||ÖPage->
nCñl
 == 1){

8178 if–
pPage
->
nOvîÊow
 ){

8179 
	`as£π
–
rc
==
SQLITE_OK
 );

8180 
pCur
->
curFœgs
 &~(
BTCF_VÆidNKey
);

8181 
rc
 = 
	`bÆ™˚
(
pCur
);

8187 
pCur
->
≠Page
[pCur->
iPage
]->
nOvîÊow
 = 0;

8188 
pCur
->
eSèã
 = 
CURSOR_INVALID
;

8191 
	`as£π
–
pCur
->
≠Page
[pCur->
iPage
]->
nOvîÊow
==0 );

8193 
íd_ö£π
:

8198  
rc
;

8199 
	}
}

8218 
	$sqlôe3BåìDñëe
(
BtCurs‹
 *
pCur
, 
u8
 
Êags
){

8219 
Båì
 *
p
 = 
pCur
->
pBåì
;

8220 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

8221 
rc
;

8222 
MemPage
 *
pPage
;

8223 *
pCñl
;

8224 
iCñlIdx
;

8225 
iCñlDïth
;

8226 
CñlInfo
 
öfo
;

8227 
bSkù√xt
 = 0;

8228 
u8
 
bPª£rve
 = 
Êags
 & 
BTREE_SAVEPOSITION
;

8229 
	`sqlôe3LogCurs‹Dñëe
(
pCur
, 
Êags
);

8231 
	`as£π
–
	`curs‹OwnsBtSh¨ed
(
pCur
) );

8232 
	`as£π
–
pBt
->
öTønß˘i⁄
==
TRANS_WRITE
 );

8233 
	`as£π
–(
pBt
->
btsFœgs
 & 
BTS_READ_ONLY
)==0 );

8234 
	`as£π
–
pCur
->
curFœgs
 & 
BTCF_WrôeFœg
 );

8235 
	`as£π
–
	`hasSh¨edCacheTabÀLock
(
p
, 
pCur
->
pgnoRoŸ
,ÖCur->
pKeyInfo
!=0, 2) );

8236 
	`as£π
–!
	`hasRódC⁄Êi˘s
(
p
, 
pCur
->
pgnoRoŸ
) );

8237 
	`as£π
–
pCur
->
aiIdx
[pCur->
iPage
]<pCur->
≠Page
[pCur->iPage]->
nCñl
 );

8238 
	`as£π
–
pCur
->
eSèã
==
CURSOR_VALID
 );

8239 
	`as£π
–(
Êags
 & ~(
BTREE_SAVEPOSITION
 | 
BTREE_AUXDELETE
))==0 );

8241 
iCñlDïth
 = 
pCur
->
iPage
;

8242 
iCñlIdx
 = 
pCur
->
aiIdx
[
iCñlDïth
];

8243 
pPage
 = 
pCur
->
≠Page
[
iCñlDïth
];

8244 
pCñl
 = 
	`födCñl
(
pPage
, 
iCñlIdx
);

8246 
	`sqlôe3LogInô
(
pCur
);

8247 
	`sqlôe3LogCurs‹
(
pCur
, 0,ÖCur->
pgnoRoŸ
, 4,pCur->
pKeyInfo
);

8248 
	`sqlôe3LogiCñl
(
pCur
, 
iCñlDïth
, 
iCñlIdx
, 
pPage
->
pgno
, 
Êags
);

8251 
	`sqlôe3Log
(
p
->
pBt
->
pPagî
->
pLoggî
, &
pCur
->
idxDñLog
,ÖCur->
pKeyInfo
 =0 ? 
DELETE
:
IDXDELETE
);

8254 
	`båìP¨£Cñl
(
pPage
,
iCñlIdx
,&
öfo
);

8267 if–
bPª£rve
 ){

8268 if–!
pPage
->
Àaf


8269 || (
pPage
->
nFªe
+
	`˚ŒSizePå
’Page,
pCñl
)+2)>()(
pBt
->
ußbÀSize
*2/3)

8273 
rc
 = 
	`ßveCurs‹Key
(
pCur
);

8274 if–
rc
 ) Ñc;

8276 
bSkù√xt
 = 1;

8287 if–!
pPage
->
Àaf
 ){

8288 
nŸU£d
 = 0;

8289 
rc
 = 
	`sqlôe3BåìPªvious
(
pCur
, &
nŸU£d
);

8290 if–
rc
 ) Ñc;

8295 if–
pCur
->
curFœgs
 & 
BTCF_Mu…ùÀ
 ){

8296 
rc
 = 
	`ßveAŒCurs‹s
(
pBt
, 
pCur
->
pgnoRoŸ
,ÖCur);

8297 if–
rc
 ) Ñc;

8302 if–
pCur
->
pKeyInfo
==0 ){

8303 
	`övÆid©eIn¸blobCurs‹s
(
p
, 
pCur
->
öfo
.
nKey
, 0);

8309 
rc
 = 
	`sqlôe3PagîWrôe
(
pPage
->
pDbPage
);

8310 if–
rc
 ) Ñc;

8311 
rc
 = 
	`˛órCñl
(
pPage
, 
pCñl
, &
öfo
);

8312 
	`dr›Cñl
(
pPage
, 
iCñlIdx
, 
öfo
.
nSize
, &
rc
);

8313 if–
rc
 ) Ñc;

8320 if–!
pPage
->
Àaf
 ){

8321 
MemPage
 *
pLóf
 = 
pCur
->
≠Page
[pCur->
iPage
];

8322 
nCñl
;

8323 
Pgno
 
n
 = 
pCur
->
≠Page
[
iCñlDïth
+1]->
pgno
;

8324 *
pTmp
;

8326 
pCñl
 = 
	`födCñl
(
pLóf
,ÖLóf->
nCñl
-1);

8327 if–
pCñl
<&
pLóf
->
aD©a
[4] )  
SQLITE_CORRUPT_BKPT
;

8328 
nCñl
 = 
pLóf
->
	`xCñlSize
’Lóf, 
pCñl
);

8329 
	`as£π
–
	`MX_CELL_SIZE
(
pBt
Ë>
nCñl
 );

8330 
pTmp
 = 
pBt
->
pTmpS∑˚
;

8331 
	`as£π
–
pTmp
!=0 );

8332 
rc
 = 
	`sqlôe3PagîWrôe
(
pLóf
->
pDbPage
);

8333 if–
rc
==
SQLITE_OK
 ){

8334 
	`ö£πCñl
(
pPage
, 
iCñlIdx
, 
pCñl
-4, 
nCñl
+4, 
pTmp
, 
n
, &
rc
);

8336 
	`dr›Cñl
(
pLóf
,ÖLóf->
nCñl
-1,ÇCñl, &
rc
);

8337 if–
rc
 ) Ñc;

8355 
rc
 = 
	`bÆ™˚
(
pCur
);

8356 if–
rc
==
SQLITE_OK
 && 
pCur
->
iPage
>
iCñlDïth
 ){

8357  
pCur
->
iPage
>
iCñlDïth
 ){

8358 
	`ªÀa£Page
(
pCur
->
≠Page
[pCur->
iPage
--]);

8360 
rc
 = 
	`bÆ™˚
(
pCur
);

8363 if–
rc
==
SQLITE_OK
 ){

8364 if–
bSkù√xt
 ){

8365 
	`as£π
–
bPª£rve
 && (
pCur
->
iPage
==
iCñlDïth
 || 
CORRUPT_DB
) );

8366 
	`as£π
–
pPage
==
pCur
->
≠Page
[pCur->
iPage
] || 
CORRUPT_DB
 );

8367 
	`as£π
–(
pPage
->
nCñl
>0 || 
CORRUPT_DB
Ë&& 
iCñlIdx
<=pPage->nCell );

8368 
pCur
->
eSèã
 = 
CURSOR_SKIPNEXT
;

8369 if–
iCñlIdx
>=
pPage
->
nCñl
 ){

8370 
pCur
->
skùNext
 = -1;

8371 
pCur
->
aiIdx
[
iCñlDïth
] = 
pPage
->
nCñl
-1;

8373 
pCur
->
skùNext
 = 1;

8376 
rc
 = 
	`moveToRoŸ
(
pCur
);

8377 if–
bPª£rve
 ){

8378 
pCur
->
eSèã
 = 
CURSOR_REQUIRESEEK
;

8382  
rc
;

8383 
	}
}

8396 
	$båìCª©eTabÀ
(
Båì
 *
p
, *
piTabÀ
, 
¸óãTabFœgs
){

8397 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

8398 
MemPage
 *
pRoŸ
;

8399 
Pgno
 
pgnoRoŸ
;

8400 
rc
;

8401 
±fFœgs
;

8403 
	`as£π
–
	`sqlôe3BåìHﬁdsMuãx
(
p
) );

8404 
	`as£π
–
pBt
->
öTønß˘i⁄
==
TRANS_WRITE
 );

8405 
	`as£π
–(
pBt
->
btsFœgs
 & 
BTS_READ_ONLY
)==0 );

8407 #ifde‡
SQLITE_OMIT_AUTOVACUUM


8408 
rc
 = 
	`ÆloˇãBåìPage
(
pBt
, &
pRoŸ
, &
pgnoRoŸ
, 1, 0);

8409 if–
rc
 ){

8410  
rc
;

8413 if–
pBt
->
autoVacuum
 ){

8414 
Pgno
 
pgnoMove
;

8415 
MemPage
 *
pPageMove
;

8422 
	`övÆid©eAŒOvîÊowCache
(
pBt
);

8428 
	`sqlôe3BåìGëMëa
(
p
, 
BTREE_LARGEST_ROOT_PAGE
, &
pgnoRoŸ
);

8429 
pgnoRoŸ
++;

8434  
pgnoRoŸ
==
	`PTRMAP_PAGENO
(
pBt
,ÖgnoRoot) ||

8435 
pgnoRoŸ
==
	`PENDING_BYTE_PAGE
(
pBt
) ){

8436 
pgnoRoŸ
++;

8438 
	`as£π
–
pgnoRoŸ
>=3 || 
CORRUPT_DB
 );

8439 
	`ã°ˇ£
–
pgnoRoŸ
<3 );

8445 
rc
 = 
	`ÆloˇãBåìPage
(
pBt
, &
pPageMove
, &
pgnoMove
, 
pgnoRoŸ
, 
BTALLOC_EXACT
);

8446 if–
rc
!=
SQLITE_OK
 ){

8447  
rc
;

8450 if–
pgnoMove
!=
pgnoRoŸ
 ){

8457 
u8
 
eTy≥
 = 0;

8458 
Pgno
 
iPåPage
 = 0;

8463 
rc
 = 
	`ßveAŒCurs‹s
(
pBt
, 0, 0);

8464 
	`ªÀa£Page
(
pPageMove
);

8465 if–
rc
!=
SQLITE_OK
 ){

8466  
rc
;

8470 
rc
 = 
	`båìGëPage
(
pBt
, 
pgnoRoŸ
, &
pRoŸ
, 0);

8471 if–
rc
!=
SQLITE_OK
 ){

8472  
rc
;

8474 
rc
 = 
	`±rm≠Gë
(
pBt
, 
pgnoRoŸ
, &
eTy≥
, &
iPåPage
);

8475 if–
eTy≥
==
PTRMAP_ROOTPAGE
 ||ÉTy≥==
PTRMAP_FREEPAGE
 ){

8476 
rc
 = 
SQLITE_CORRUPT_BKPT
;

8478 if–
rc
!=
SQLITE_OK
 ){

8479 
	`ªÀa£Page
(
pRoŸ
);

8480  
rc
;

8482 
	`as£π
–
eTy≥
!=
PTRMAP_ROOTPAGE
 );

8483 
	`as£π
–
eTy≥
!=
PTRMAP_FREEPAGE
 );

8484 
rc
 = 
	`ªloˇãPage
(
pBt
, 
pRoŸ
, 
eTy≥
, 
iPåPage
, 
pgnoMove
, 0);

8485 
	`ªÀa£Page
(
pRoŸ
);

8488 if–
rc
!=
SQLITE_OK
 ){

8489  
rc
;

8491 
rc
 = 
	`båìGëPage
(
pBt
, 
pgnoRoŸ
, &
pRoŸ
, 0);

8492 if–
rc
!=
SQLITE_OK
 ){

8493  
rc
;

8495 
rc
 = 
	`sqlôe3PagîWrôe
(
pRoŸ
->
pDbPage
);

8496 if–
rc
!=
SQLITE_OK
 ){

8497 
	`ªÀa£Page
(
pRoŸ
);

8498  
rc
;

8501 
pRoŸ
 = 
pPageMove
;

8505 
	`±rm≠Put
(
pBt
, 
pgnoRoŸ
, 
PTRMAP_ROOTPAGE
, 0, &
rc
);

8506 if–
rc
 ){

8507 
	`ªÀa£Page
(
pRoŸ
);

8508  
rc
;

8515 
	`as£π
–
	`sqlôe3PagîIswrôóbÀ
(
pBt
->
pPage1
->
pDbPage
) );

8516 
rc
 = 
	`sqlôe3BåìUpd©eMëa
(
p
, 4, 
pgnoRoŸ
);

8517 if–
	`NEVER
(
rc
) ){

8518 
	`ªÀa£Page
(
pRoŸ
);

8519  
rc
;

8523 
rc
 = 
	`ÆloˇãBåìPage
(
pBt
, &
pRoŸ
, &
pgnoRoŸ
, 1, 0);

8524 if–
rc
 ) Ñc;

8527 
	`as£π
–
	`sqlôe3PagîIswrôóbÀ
(
pRoŸ
->
pDbPage
) );

8528 if–
¸óãTabFœgs
 & 
BTREE_INTKEY
 ){

8529 
±fFœgs
 = 
PTF_INTKEY
 | 
PTF_LEAFDATA
 | 
PTF_LEAF
;

8531 
±fFœgs
 = 
PTF_ZERODATA
 | 
PTF_LEAF
;

8533 
	`zîoPage
(
pRoŸ
, 
±fFœgs
);

8534 
	`sqlôe3PagîUƒef
(
pRoŸ
->
pDbPage
);

8535 
	`as£π
–(
pBt
->
›íFœgs
 & 
BTREE_SINGLE
)==0 || 
pgnoRoŸ
==2 );

8536 *
piTabÀ
 = ()
pgnoRoŸ
;

8537  
SQLITE_OK
;

8538 
	}
}

8539 
	$sqlôe3BåìCª©eTabÀ
(
Båì
 *
p
, *
piTabÀ
, 
Êags
){

8540 
	`sqlôe3LogBåìCª©e
(
p
, 
Êags
);

8541 
rc
;

8542 
	`sqlôe3BåìE¡î
(
p
);

8543 
rc
 = 
	`båìCª©eTabÀ
(
p
, 
piTabÀ
, 
Êags
);

8544 
	`sqlôe3LogCª©eTabÀ
(
p
->
pBt
, 
Êags
);

8545 
	`sqlôe3Log
(
p
->
pBt
->
pPagî
->
pLoggî
, &p->pBt->
cLog
, 
CREATETABLE
);

8546 
	`sqlôe3BåìLóve
(
p
);

8547  
rc
;

8548 
	}
}

8554 
	$˛órD©aba£Page
(

8555 
BtSh¨ed
 *
pBt
,

8556 
Pgno
 
pgno
,

8557 
‰ìPageFœg
,

8558 *
≤Ch™ge


8560 
MemPage
 *
pPage
;

8561 
rc
;

8562 *
pCñl
;

8563 
i
;

8564 
hdr
;

8565 
CñlInfo
 
öfo
;

8567 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

8568 if–
pgno
>
	`båìPagecou¡
(
pBt
) ){

8569  
SQLITE_CORRUPT_BKPT
;

8571 
rc
 = 
	`gëAndInôPage
(
pBt
, 
pgno
, &
pPage
, 0, 0);

8572 if–
rc
 ) Ñc;

8573 if–
pPage
->
bBusy
 ){

8574 
rc
 = 
SQLITE_CORRUPT_BKPT
;

8575 
˛órd©aba£∑ge_out
;

8577 
pPage
->
bBusy
 = 1;

8578 
hdr
 = 
pPage
->
hdrOff£t
;

8579 
i
=0; i<
pPage
->
nCñl
; i++){

8580 
pCñl
 = 
	`födCñl
(
pPage
, 
i
);

8581 if–!
pPage
->
Àaf
 ){

8582 
rc
 = 
	`˛órD©aba£Page
(
pBt
, 
	`gë4byã
(
pCñl
), 1, 
≤Ch™ge
);

8583 if–
rc
 ) 
˛órd©aba£∑ge_out
;

8585 
rc
 = 
	`˛órCñl
(
pPage
, 
pCñl
, &
öfo
);

8586 if–
rc
 ) 
˛órd©aba£∑ge_out
;

8588 if–!
pPage
->
Àaf
 ){

8589 
rc
 = 
	`˛órD©aba£Page
(
pBt
, 
	`gë4byã
(&
pPage
->
aD©a
[
hdr
+8]), 1, 
≤Ch™ge
);

8590 if–
rc
 ) 
˛órd©aba£∑ge_out
;

8591 }if–
≤Ch™ge
 ){

8592 
	`as£π
–
pPage
->
ötKey
 || 
CORRUPT_DB
 );

8593 
	`ã°ˇ£
–!
pPage
->
ötKey
 );

8594 *
≤Ch™ge
 +
pPage
->
nCñl
;

8596 if–
‰ìPageFœg
 ){

8597 
	`‰ìPage
(
pPage
, &
rc
);

8598 }if–(
rc
 = 
	`sqlôe3PagîWrôe
(
pPage
->
pDbPage
))==0 ){

8599 
	`zîoPage
(
pPage
,ÖPage->
aD©a
[
hdr
] | 
PTF_LEAF
);

8602 
˛órd©aba£∑ge_out
:

8603 
pPage
->
bBusy
 = 0;

8604 
	`ªÀa£Page
(
pPage
);

8605  
rc
;

8606 
	}
}

8621 
	$sqlôe3BåìCÀ¨TabÀ
(
Båì
 *
p
, 
iTabÀ
, *
≤Ch™ge
){

8622 
rc
;

8623 
	`sqlôe3LogBåìCÀ¨
(
p
,
iTabÀ
);

8624 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

8625 
	`sqlôe3BåìE¡î
(
p
);

8626 
	`as£π
–
p
->
öTøns
==
TRANS_WRITE
 );

8628 
rc
 = 
	`ßveAŒCurs‹s
(
pBt
, (
Pgno
)
iTabÀ
, 0);

8630 if–
SQLITE_OK
==
rc
 ){

8634 
	`övÆid©eIn¸blobCurs‹s
(
p
, 0, 1);

8635 
rc
 = 
	`˛órD©aba£Page
(
pBt
, (
Pgno
)
iTabÀ
, 0, 
≤Ch™ge
);

8637 
	`sqlôe3BåìLóve
(
p
);

8638  
rc
;

8639 
	}
}

8646 
	$sqlôe3BåìCÀ¨TabÀOfCurs‹
(
BtCurs‹
 *
pCur
){

8647  
	`sqlôe3BåìCÀ¨TabÀ
(
pCur
->
pBåì
,ÖCur->
pgnoRoŸ
, 0);

8648 
	}
}

8670 
	$båìDr›TabÀ
(
Båì
 *
p
, 
Pgno
 
iTabÀ
, *
piMoved
){

8671 
rc
;

8672 
MemPage
 *
pPage
 = 0;

8673 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

8675 
	`as£π
–
	`sqlôe3BåìHﬁdsMuãx
(
p
) );

8676 
	`as£π
–
p
->
öTøns
==
TRANS_WRITE
 );

8677 
	`as£π
–
iTabÀ
>=2 );

8679 
rc
 = 
	`båìGëPage
(
pBt
, (
Pgno
)
iTabÀ
, &
pPage
, 0);

8680 if–
rc
 ) Ñc;

8681 
rc
 = 
	`sqlôe3BåìCÀ¨TabÀ
(
p
, 
iTabÀ
, 0);

8682 if–
rc
 ){

8683 
	`ªÀa£Page
(
pPage
);

8684  
rc
;

8687 *
piMoved
 = 0;

8689 #ifde‡
SQLITE_OMIT_AUTOVACUUM


8690 
	`‰ìPage
(
pPage
, &
rc
);

8691 
	`ªÀa£Page
(
pPage
);

8693 if–
pBt
->
autoVacuum
 ){

8694 
Pgno
 
maxRoŸPgno
;

8695 
	`sqlôe3BåìGëMëa
(
p
, 
BTREE_LARGEST_ROOT_PAGE
, &
maxRoŸPgno
);

8697 if–
iTabÀ
==
maxRoŸPgno
 ){

8701 
	`‰ìPage
(
pPage
, &
rc
);

8702 
	`ªÀa£Page
(
pPage
);

8703 if–
rc
!=
SQLITE_OK
 ){

8704  
rc
;

8711 
MemPage
 *
pMove
;

8712 
	`ªÀa£Page
(
pPage
);

8713 
rc
 = 
	`båìGëPage
(
pBt
, 
maxRoŸPgno
, &
pMove
, 0);

8714 if–
rc
!=
SQLITE_OK
 ){

8715  
rc
;

8717 
rc
 = 
	`ªloˇãPage
(
pBt
, 
pMove
, 
PTRMAP_ROOTPAGE
, 0, 
iTabÀ
, 0);

8718 
	`ªÀa£Page
(
pMove
);

8719 if–
rc
!=
SQLITE_OK
 ){

8720  
rc
;

8722 
pMove
 = 0;

8723 
rc
 = 
	`båìGëPage
(
pBt
, 
maxRoŸPgno
, &
pMove
, 0);

8724 
	`‰ìPage
(
pMove
, &
rc
);

8725 
	`ªÀa£Page
(
pMove
);

8726 if–
rc
!=
SQLITE_OK
 ){

8727  
rc
;

8729 *
piMoved
 = 
maxRoŸPgno
;

8737 
maxRoŸPgno
--;

8738  
maxRoŸPgno
==
	`PENDING_BYTE_PAGE
(
pBt
)

8739 || 
	`PTRMAP_ISPAGE
(
pBt
, 
maxRoŸPgno
) ){

8740 
maxRoŸPgno
--;

8742 
	`as£π
–
maxRoŸPgno
!=
	`PENDING_BYTE_PAGE
(
pBt
) );

8744 
rc
 = 
	`sqlôe3BåìUpd©eMëa
(
p
, 4, 
maxRoŸPgno
);

8746 
	`‰ìPage
(
pPage
, &
rc
);

8747 
	`ªÀa£Page
(
pPage
);

8750  
rc
;

8751 
	}
}

8752 
	$sqlôe3BåìDr›TabÀ
(
Båì
 *
p
, 
iTabÀ
, *
piMoved
){

8753 
rc
;

8754 
	`sqlôe3LogBåìDr›
(
p
, 
iTabÀ
);

8755 
	`sqlôe3BåìE¡î
(
p
);

8756 
rc
 = 
	`båìDr›TabÀ
(
p
, 
iTabÀ
, 
piMoved
);

8757 
	`sqlôe3BåìLóve
(
p
);

8758  
rc
;

8759 
	}
}

8782 
	$sqlôe3BåìGëMëa
(
Båì
 *
p
, 
idx
, 
u32
 *
pMëa
){

8783 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

8785 
	`sqlôe3BåìE¡î
(
p
);

8786 
	`as£π
–
p
->
öTøns
>
TRANS_NONE
 );

8787 
	`as£π
–
SQLITE_OK
==
	`quîySh¨edCacheTabÀLock
(
p
, 
MASTER_ROOT
, 
READ_LOCK
) );

8788 
	`as£π
–
pBt
->
pPage1
 );

8789 
	`as£π
–
idx
>=0 && idx<=15 );

8791 if–
idx
==
BTREE_DATA_VERSION
 ){

8792 *
pMëa
 = 
	`sqlôe3PagîD©aVîsi⁄
(
pBt
->
pPagî
Ë+ 
p
->
iD©aVîsi⁄
;

8794 *
pMëa
 = 
	`gë4byã
(&
pBt
->
pPage1
->
aD©a
[36 + 
idx
*4]);

8799 #ifde‡
SQLITE_OMIT_AUTOVACUUM


8800 if–
idx
==
BTREE_LARGEST_ROOT_PAGE
 && *
pMëa
>0 ){

8801 
pBt
->
btsFœgs
 |
BTS_READ_ONLY
;

8805 
	`sqlôe3BåìLóve
(
p
);

8806 
	}
}

8812 
	$sqlôe3BåìUpd©eMëa
(
Båì
 *
p
, 
idx
, 
u32
 
iMëa
){

8813 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

8814 *
pP1
;

8815 
rc
;

8816 
	`as£π
–
idx
>=1 && idx<=15 );

8817 
	`sqlôe3BåìE¡î
(
p
);

8818 
	`as£π
–
p
->
öTøns
==
TRANS_WRITE
 );

8819 
	`as£π
–
pBt
->
pPage1
!=0 );

8820 
pP1
 = 
pBt
->
pPage1
->
aD©a
;

8821 
rc
 = 
	`sqlôe3PagîWrôe
(
pBt
->
pPage1
->
pDbPage
);

8822 if–
rc
==
SQLITE_OK
 ){

8823 
	`put4byã
(&
pP1
[36 + 
idx
*4], 
iMëa
);

8824 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


8825 if–
idx
==
BTREE_INCR_VACUUM
 ){

8826 
	`as£π
–
pBt
->
autoVacuum
 || 
iMëa
==0 );

8827 
	`as£π
–
iMëa
==0 || iMeta==1 );

8828 
pBt
->
ö¸Vacuum
 = (
u8
)
iMëa
;

8832 
	`sqlôe3BåìLóve
(
p
);

8833  
rc
;

8834 
	}
}

8836 #i‚de‡
SQLITE_OMIT_BTREECOUNT


8845 
	$sqlôe3BåìCou¡
(
BtCurs‹
 *
pCur
, 
i64
 *
≤E¡ry
){

8846 
i64
 
nE¡ry
 = 0;

8847 
rc
;

8849 if–
pCur
->
pgnoRoŸ
==0 ){

8850 *
≤E¡ry
 = 0;

8851  
SQLITE_OK
;

8853 
rc
 = 
	`moveToRoŸ
(
pCur
);

8858  
rc
==
SQLITE_OK
 ){

8859 
iIdx
;

8860 
MemPage
 *
pPage
;

8866 
pPage
 = 
pCur
->
≠Page
[pCur->
iPage
];

8867 if–
pPage
->
Àaf
 || !pPage->
ötKey
 ){

8868 
nE¡ry
 +
pPage
->
nCñl
;

8881 if–
pPage
->
Àaf
 ){

8883 if–
pCur
->
iPage
==0 ){

8885 *
≤E¡ry
 = 
nE¡ry
;

8886  
	`moveToRoŸ
(
pCur
);

8888 
	`moveToP¨ít
(
pCur
);

8889 } 
pCur
->
aiIdx
[pCur->
iPage
]>ıCur->
≠Page
[pCur->iPage]->
nCñl
 );

8891 
pCur
->
aiIdx
[pCur->
iPage
]++;

8892 
pPage
 = 
pCur
->
≠Page
[pCur->
iPage
];

8898 
iIdx
 = 
pCur
->
aiIdx
[pCur->
iPage
];

8899 if–
iIdx
==
pPage
->
nCñl
 ){

8900 
rc
 = 
	`moveToChûd
(
pCur
, 
	`gë4byã
(&
pPage
->
aD©a
[pPage->
hdrOff£t
+8]));

8902 
rc
 = 
	`moveToChûd
(
pCur
, 
	`gë4byã
(
	`födCñl
(
pPage
, 
iIdx
)));

8907  
rc
;

8908 
	}
}

8915 
Pagî
 *
	$sqlôe3BåìPagî
(
Båì
 *
p
){

8916  
p
->
pBt
->
pPagî
;

8917 
	}
}

8919 #i‚de‡
SQLITE_OMIT_INTEGRITY_CHECK


8923 
	$checkAµídMsg
(

8924 
I¡egrôyCk
 *
pCheck
,

8925 c⁄° *
zF‹m©
,

8928 
va_li°
 
≠
;

8929 if–!
pCheck
->
mxEº
 ) ;

8930 
pCheck
->
mxEº
--;

8931 
pCheck
->
nEº
++;

8932 
	`va_°¨t
(
≠
, 
zF‹m©
);

8933 if–
pCheck
->
îrMsg
.
nCh¨
 ){

8934 
	`sqlôe3SåAccumAµíd
(&
pCheck
->
îrMsg
, "\n", 1);

8936 if–
pCheck
->
zPfx
 ){

8937 
	`sqlôe3XPrötf
(&
pCheck
->
îrMsg
,ÖCheck->
zPfx
,ÖCheck->
v1
,ÖCheck->
v2
);

8939 
	`sqlôe3VXPrötf
(&
pCheck
->
îrMsg
, 
zF‹m©
, 
≠
);

8940 
	`va_íd
(
≠
);

8941 if–
pCheck
->
îrMsg
.
accEº‹
==
STRACCUM_NOMEM
 ){

8942 
pCheck
->
mÆlocFaûed
 = 1;

8944 
	}
}

8947 #i‚de‡
SQLITE_OMIT_INTEGRITY_CHECK


8953 
	$gëPageRe„ªn˚d
(
I¡egrôyCk
 *
pCheck
, 
Pgno
 
iPg
){

8954 
	`as£π
–
iPg
<=
pCheck
->
nPage
 && ’Check->
aPgRef
[0])==1 );

8955  (
pCheck
->
aPgRef
[
iPg
/8] & (1 << (iPg & 0x07)));

8956 
	}
}

8961 
	$£tPageRe„ªn˚d
(
I¡egrôyCk
 *
pCheck
, 
Pgno
 
iPg
){

8962 
	`as£π
–
iPg
<=
pCheck
->
nPage
 && ’Check->
aPgRef
[0])==1 );

8963 
pCheck
->
aPgRef
[
iPg
/8] |= (1 << (iPg & 0x07));

8964 
	}
}

8975 
	$checkRef
(
I¡egrôyCk
 *
pCheck
, 
Pgno
 
iPage
){

8976 if–
iPage
==0 )  1;

8977 if–
iPage
>
pCheck
->
nPage
 ){

8978 
	`checkAµídMsg
(
pCheck
, "övÆidÖagênumbî %d", 
iPage
);

8981 if–
	`gëPageRe„ªn˚d
(
pCheck
, 
iPage
) ){

8982 
	`checkAµídMsg
(
pCheck
, "2ndÑe„ªn˚Åÿ∑gê%d", 
iPage
);

8985 
	`£tPageRe„ªn˚d
(
pCheck
, 
iPage
);

8987 
	}
}

8989 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


8995 
	$checkPåm≠
(

8996 
I¡egrôyCk
 *
pCheck
,

8997 
Pgno
 
iChûd
,

8998 
u8
 
eTy≥
,

8999 
Pgno
 
iP¨ít


9001 
rc
;

9002 
u8
 
ePåm≠Ty≥
;

9003 
Pgno
 
iPåm≠P¨ít
;

9005 
rc
 = 
	`±rm≠Gë
(
pCheck
->
pBt
, 
iChûd
, &
ePåm≠Ty≥
, &
iPåm≠P¨ít
);

9006 if–
rc
!=
SQLITE_OK
 ){

9007 if–
rc
==
SQLITE_NOMEM
 ||Ñc==
SQLITE_IOERR_NOMEM
 ) 
pCheck
->
mÆlocFaûed
 = 1;

9008 
	`checkAµídMsg
(
pCheck
, "FaûedÅÿªadÖåm≠ key=%d", 
iChûd
);

9012 if–
ePåm≠Ty≥
!=
eTy≥
 || 
iPåm≠P¨ít
!=
iP¨ít
 ){

9013 
	`checkAµídMsg
(
pCheck
,

9015 
iChûd
, 
eTy≥
, 
iP¨ít
, 
ePåm≠Ty≥
, 
iPåm≠P¨ít
);

9017 
	}
}

9024 
	$checkLi°
(

9025 
I¡egrôyCk
 *
pCheck
,

9026 
isFªeLi°
,

9027 
iPage
,

9028 
N


9030 
i
;

9031 
ex≥˘ed
 = 
N
;

9032 
iFú°
 = 
iPage
;

9033  
N
-- > 0 && 
pCheck
->
mxEº
 ){

9034 
DbPage
 *
pOvÊPage
;

9035 *
pOvÊD©a
;

9036 if–
iPage
<1 ){

9037 
	`checkAµídMsg
(
pCheck
,

9039 
N
+1, 
ex≥˘ed
, 
iFú°
);

9042 if–
	`checkRef
(
pCheck
, 
iPage
) ) ;

9043 if–
	`sqlôe3PagîGë
(
pCheck
->
pPagî
, (
Pgno
)
iPage
, &
pOvÊPage
, 0) ){

9044 
	`checkAµídMsg
(
pCheck
, "ÁûedÅÿgëÖagê%d", 
iPage
);

9047 
pOvÊD©a
 = (*)
	`sqlôe3PagîGëD©a
(
pOvÊPage
);

9048 if–
isFªeLi°
 ){

9049 
n
 = 
	`gë4byã
(&
pOvÊD©a
[4]);

9050 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


9051 if–
pCheck
->
pBt
->
autoVacuum
 ){

9052 
	`checkPåm≠
(
pCheck
, 
iPage
, 
PTRMAP_FREEPAGE
, 0);

9055 if–
n
>()
pCheck
->
pBt
->
ußbÀSize
/4-2 ){

9056 
	`checkAµídMsg
(
pCheck
,

9057 "‰ìli°Üó‡cou¡Åoÿbig o¿∑gê%d", 
iPage
);

9058 
N
--;

9060 
i
=0; i<
n
; i++){

9061 
Pgno
 
iFªePage
 = 
	`gë4byã
(&
pOvÊD©a
[8+
i
*4]);

9062 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


9063 if–
pCheck
->
pBt
->
autoVacuum
 ){

9064 
	`checkPåm≠
(
pCheck
, 
iFªePage
, 
PTRMAP_FREEPAGE
, 0);

9067 
	`checkRef
(
pCheck
, 
iFªePage
);

9069 
N
 -
n
;

9072 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


9078 if–
pCheck
->
pBt
->
autoVacuum
 && 
N
>0 ){

9079 
i
 = 
	`gë4byã
(
pOvÊD©a
);

9080 
	`checkPåm≠
(
pCheck
, 
i
, 
PTRMAP_OVERFLOW2
, 
iPage
);

9084 
iPage
 = 
	`gë4byã
(
pOvÊD©a
);

9085 
	`sqlôe3PagîUƒef
(
pOvÊPage
);

9087 if–
isFªeLi°
 && 
N
<(
iPage
!=0) ){

9088 
	`checkAµídMsg
(
pCheck
, "free-page count in header isÅoo small");

9091 
	}
}

9116 
	$båìHópIn£π
(
u32
 *
aHóp
, u32 
x
){

9117 
u32
 
j
, 
i
 = ++
aHóp
[0];

9118 
aHóp
[
i
] = 
x
;

9119  (
j
 = 
i
/2)>0 && 
aHóp
[j]>aHeap[i] ){

9120 
x
 = 
aHóp
[
j
];

9121 
aHóp
[
j
] =áHóp[
i
];

9122 
aHóp
[
i
] = 
x
;

9123 
i
 = 
j
;

9125 
	}
}

9126 
	$båìHópPuŒ
(
u32
 *
aHóp
, u32 *
pOut
){

9127 
u32
 
j
, 
i
, 
x
;

9128 if–(
x
 = 
aHóp
[0])==0 )  0;

9129 *
pOut
 = 
aHóp
[1];

9130 
aHóp
[1] =áHóp[
x
];

9131 
aHóp
[
x
] = 0xffffffff;

9132 
aHóp
[0]--;

9133 
i
 = 1;

9134  (
j
 = 
i
*2)<=
aHóp
[0] ){

9135 if–
aHóp
[
j
]>aHeap[j+1] ) j++;

9136 if–
aHóp
[
i
]<aHóp[
j
] ) ;

9137 
x
 = 
aHóp
[
i
];

9138 
aHóp
[
i
] =áHóp[
j
];

9139 
aHóp
[
j
] = 
x
;

9140 
i
 = 
j
;

9143 
	}
}

9145 #i‚de‡
SQLITE_OMIT_INTEGRITY_CHECK


9160 
	$checkTªePage
(

9161 
I¡egrôyCk
 *
pCheck
,

9162 
iPage
,

9163 
i64
 *
piMöKey
,

9164 
i64
 
maxKey


9166 
MemPage
 *
pPage
 = 0;

9167 
i
;

9168 
rc
;

9169 
dïth
 = -1, 
d2
;

9170 
pgno
;

9171 
nFøg
;

9172 
hdr
;

9173 
˚ŒSèπ
;

9174 
nCñl
;

9175 
doCovîageCheck
 = 1;

9176 
keyC™BeEquÆ
 = 1;

9178 
u8
 *
d©a
;

9179 
u8
 *
pCñl
;

9180 
u8
 *
pCñlIdx
;

9181 
BtSh¨ed
 *
pBt
;

9182 
u32
 
pc
;

9183 
u32
 
ußbÀSize
;

9184 
u32
 
c⁄ã¡Off£t
;

9185 
u32
 *
hóp
 = 0;

9186 
u32
 
x
, 
¥ev
 = 0;

9187 c⁄° *
ßved_zPfx
 = 
pCheck
->
zPfx
;

9188 
ßved_v1
 = 
pCheck
->
v1
;

9189 
ßved_v2
 = 
pCheck
->
v2
;

9190 
u8
 
ßvedIsInô
 = 0;

9194 
pBt
 = 
pCheck
->pBt;

9195 
ußbÀSize
 = 
pBt
->usableSize;

9196 if–
iPage
==0 )  0;

9197 if–
	`checkRef
(
pCheck
, 
iPage
) )  0;

9198 
pCheck
->
zPfx
 = "Page %d: ";

9199 
pCheck
->
v1
 = 
iPage
;

9200 if–(
rc
 = 
	`båìGëPage
(
pBt
, (
Pgno
)
iPage
, &
pPage
, 0))!=0 ){

9201 
	`checkAµídMsg
(
pCheck
,

9202 "u«bÀÅÿgëÅhê∑ge.Éº‹ code=%d", 
rc
);

9203 
íd_of_check
;

9208 
ßvedIsInô
 = 
pPage
->
isInô
;

9209 
pPage
->
isInô
 = 0;

9210 if–(
rc
 = 
	`båìInôPage
(
pPage
))!=0 ){

9211 
	`as£π
–
rc
==
SQLITE_CORRUPT
 );

9212 
	`checkAµídMsg
(
pCheck
,

9213 "båìInôPage(Ëªtu∫†îr‹ codê%d", 
rc
);

9214 
íd_of_check
;

9216 
d©a
 = 
pPage
->
aD©a
;

9217 
hdr
 = 
pPage
->
hdrOff£t
;

9220 
pCheck
->
zPfx
 = "OnÅreeÖage %d cell %d: ";

9221 
c⁄ã¡Off£t
 = 
	`gë2byãNŸZîo
(&
d©a
[
hdr
+5]);

9222 
	`as£π
–
c⁄ã¡Off£t
<=
ußbÀSize
 );

9226 
nCñl
 = 
	`gë2byã
(&
d©a
[
hdr
+3]);

9227 
	`as£π
–
pPage
->
nCñl
==nCell );

9231 
˚ŒSèπ
 = 
hdr
 + 12 - 4*
pPage
->
Àaf
;

9232 
	`as£π
–
pPage
->
aCñlIdx
==&
d©a
[
˚ŒSèπ
] );

9233 
pCñlIdx
 = &
d©a
[
˚ŒSèπ
 + 2*(
nCñl
-1)];

9235 if–!
pPage
->
Àaf
 ){

9237 
pgno
 = 
	`gë4byã
(&
d©a
[
hdr
+8]);

9238 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


9239 if–
pBt
->
autoVacuum
 ){

9240 
pCheck
->
zPfx
 = "OnÖage %dátÑight child: ";

9241 
	`checkPåm≠
(
pCheck
, 
pgno
, 
PTRMAP_BTREE
, 
iPage
);

9244 
dïth
 = 
	`checkTªePage
(
pCheck
, 
pgno
, &
maxKey
, maxKey);

9245 
keyC™BeEquÆ
 = 0;

9249 
hóp
 = 
pCheck
->heap;

9250 
hóp
[0] = 0;

9255 
i
=
nCñl
-1; i>=0 && 
pCheck
->
mxEº
; i--){

9256 
CñlInfo
 
öfo
;

9259 
pCheck
->
v2
 = 
i
;

9260 
	`as£π
–
pCñlIdx
==&
d©a
[
˚ŒSèπ
 + 
i
*2] );

9261 
pc
 = 
	`gë2byãAlig√d
(
pCñlIdx
);

9262 
pCñlIdx
 -= 2;

9263 if–
pc
<
c⁄ã¡Off£t
 ||Öc>
ußbÀSize
-4 ){

9264 
	`checkAµídMsg
(
pCheck
, "Offset %d out ofÑange %d..%d",

9265 
pc
, 
c⁄ã¡Off£t
, 
ußbÀSize
-4);

9266 
doCovîageCheck
 = 0;

9269 
pCñl
 = &
d©a
[
pc
];

9270 
pPage
->
	`xP¨£Cñl
’Page, 
pCñl
, &
öfo
);

9271 if–
pc
+
öfo
.
nSize
>
ußbÀSize
 ){

9272 
	`checkAµídMsg
(
pCheck
, "Extends offÉnd ofÖage");

9273 
doCovîageCheck
 = 0;

9278 if–
pPage
->
ötKey
 ){

9279 if–
keyC™BeEquÆ
 ? (
öfo
.
nKey
 > 
maxKey
) : (info.nKey >= maxKey) ){

9280 
	`checkAµídMsg
(
pCheck
, "Rowid %Œd ouào‡‹dî", 
öfo
.
nKey
);

9282 
maxKey
 = 
öfo
.
nKey
;

9286 if–
öfo
.
nPaylﬂd
>öfo.
nLoˇl
 ){

9287 
nPage
;

9288 
Pgno
 
pgnoOvÊ
;

9289 
	`as£π
–
pc
 + 
öfo
.
nSize
 - 4 <
ußbÀSize
 );

9290 
nPage
 = (
öfo
.
nPaylﬂd
 - info.
nLoˇl
 + 
ußbÀSize
 - 5)/(usableSize - 4);

9291 
pgnoOvÊ
 = 
	`gë4byã
(&
pCñl
[
öfo
.
nSize
 - 4]);

9292 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


9293 if–
pBt
->
autoVacuum
 ){

9294 
	`checkPåm≠
(
pCheck
, 
pgnoOvÊ
, 
PTRMAP_OVERFLOW1
, 
iPage
);

9297 
	`checkLi°
(
pCheck
, 0, 
pgnoOvÊ
, 
nPage
);

9300 if–!
pPage
->
Àaf
 ){

9302 
pgno
 = 
	`gë4byã
(
pCñl
);

9303 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


9304 if–
pBt
->
autoVacuum
 ){

9305 
	`checkPåm≠
(
pCheck
, 
pgno
, 
PTRMAP_BTREE
, 
iPage
);

9308 
d2
 = 
	`checkTªePage
(
pCheck
, 
pgno
, &
maxKey
, maxKey);

9309 
keyC™BeEquÆ
 = 0;

9310 if–
d2
!=
dïth
 ){

9311 
	`checkAµídMsg
(
pCheck
, "ChildÖage depth differs");

9312 
dïth
 = 
d2
;

9316 
	`båìHópIn£π
(
hóp
, (
pc
<<16)|’c+
öfo
.
nSize
-1));

9319 *
piMöKey
 = 
maxKey
;

9323 
pCheck
->
zPfx
 = 0;

9324 if–
doCovîageCheck
 && 
pCheck
->
mxEº
>0 ){

9328 if–!
pPage
->
Àaf
 ){

9329 
hóp
 = 
pCheck
->heap;

9330 
hóp
[0] = 0;

9331 
i
=
nCñl
-1; i>=0; i--){

9332 
u32
 
size
;

9333 
pc
 = 
	`gë2byãAlig√d
(&
d©a
[
˚ŒSèπ
+
i
*2]);

9334 
size
 = 
pPage
->
	`xCñlSize
’Page, &
d©a
[
pc
]);

9335 
	`båìHópIn£π
(
hóp
, (
pc
<<16)|’c+
size
-1));

9344 
i
 = 
	`gë2byã
(&
d©a
[
hdr
+1]);

9345  
i
>0 ){

9346 
size
, 
j
;

9347 
	`as£π
–(
u32
)
i
<=
ußbÀSize
-4 );

9348 
size
 = 
	`gë2byã
(&
d©a
[
i
+2]);

9349 
	`as£π
–(
u32
)(
i
+
size
)<=
ußbÀSize
 );

9350 
	`båìHópIn£π
(
hóp
, (((
u32
)
i
)<<16)|(i+
size
-1));

9355 
j
 = 
	`gë2byã
(&
d©a
[
i
]);

9358 
	`as£π
–
j
==0 || j>
i
+
size
 );

9359 
	`as£π
–(
u32
)
j
<=
ußbÀSize
-4 );

9360 
i
 = 
j
;

9375 
nFøg
 = 0;

9376 
¥ev
 = 
c⁄ã¡Off£t
 - 1;

9377  
	`båìHópPuŒ
(
hóp
,&
x
) ){

9378 if–(
¥ev
&0xffff)>=(
x
>>16) ){

9379 
	`checkAµídMsg
(
pCheck
,

9380 "Mu…ùÀ u£†f‹ byã %u o‡∑gê%d", 
x
>>16, 
iPage
);

9383 
nFøg
 +(
x
>>16Ë- (
¥ev
&0xffff) - 1;

9384 
¥ev
 = 
x
;

9387 
nFøg
 +
ußbÀSize
 - (
¥ev
&0xffff) - 1;

9393 if–
hóp
[0]==0 && 
nFøg
!=
d©a
[
hdr
+7] ){

9394 
	`checkAµídMsg
(
pCheck
,

9396 
nFøg
, 
d©a
[
hdr
+7], 
iPage
);

9400 
íd_of_check
:

9401 if–!
doCovîageCheck
 ) 
pPage
->
isInô
 = 
ßvedIsInô
;

9402 
	`ªÀa£Page
(
pPage
);

9403 
pCheck
->
zPfx
 = 
ßved_zPfx
;

9404 
pCheck
->
v1
 = 
ßved_v1
;

9405 
pCheck
->
v2
 = 
ßved_v2
;

9406  
dïth
+1;

9407 
	}
}

9410 #i‚de‡
SQLITE_OMIT_INTEGRITY_CHECK


9424 *
	$sqlôe3BåìI¡egrôyCheck
(

9425 
Båì
 *
p
,

9426 *
aRoŸ
,

9427 
nRoŸ
,

9428 
mxEº
,

9429 *
≤Eº


9431 
Pgno
 
i
;

9432 
I¡egrôyCk
 
sCheck
;

9433 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

9434 
ßvedDbFœgs
 = 
pBt
->
db
->
Êags
;

9435 
zEº
[100];

9436 
	`VVA_ONLY
–
nRef
 );

9438 
	`sqlôe3BåìE¡î
(
p
);

9439 
	`as£π
–
p
->
öTøns
>
TRANS_NONE
 && 
pBt
->
öTønß˘i⁄
>TRANS_NONE );

9440 
	`VVA_ONLY
–
nRef
 = 
	`sqlôe3PagîRefcou¡
(
pBt
->
pPagî
) );

9441 
	`as£π
–
nRef
>=0 );

9442 
sCheck
.
pBt
 =ÖBt;

9443 
sCheck
.
pPagî
 = 
pBt
->pPager;

9444 
sCheck
.
nPage
 = 
	`båìPagecou¡
(sCheck.
pBt
);

9445 
sCheck
.
mxEº
 = mxErr;

9446 
sCheck
.
nEº
 = 0;

9447 
sCheck
.
mÆlocFaûed
 = 0;

9448 
sCheck
.
zPfx
 = 0;

9449 
sCheck
.
v1
 = 0;

9450 
sCheck
.
v2
 = 0;

9451 
sCheck
.
aPgRef
 = 0;

9452 
sCheck
.
hóp
 = 0;

9453 
	`sqlôe3SåAccumInô
(&
sCheck
.
îrMsg
, 0, 
zEº
, (zEº), 
SQLITE_MAX_LENGTH
);

9454 
sCheck
.
îrMsg
.
¥ötfFœgs
 = 
SQLITE_PRINTF_INTERNAL
;

9455 if–
sCheck
.
nPage
==0 ){

9456 
öãgrôy_ck_˛ónup
;

9459 
sCheck
.
aPgRef
 = 
	`sqlôe3MÆlocZîo
((sCheck.
nPage
 / 8)+ 1);

9460 if–!
sCheck
.
aPgRef
 ){

9461 
sCheck
.
mÆlocFaûed
 = 1;

9462 
öãgrôy_ck_˛ónup
;

9464 
sCheck
.
hóp
 = (
u32
*)
	`sqlôe3PageMÆloc
–
pBt
->
∑geSize
 );

9465 if–
sCheck
.
hóp
==0 ){

9466 
sCheck
.
mÆlocFaûed
 = 1;

9467 
öãgrôy_ck_˛ónup
;

9470 
i
 = 
	`PENDING_BYTE_PAGE
(
pBt
);

9471 if–
i
<=
sCheck
.
nPage
 ) 
	`£tPageRe„ªn˚d
(&sCheck, i);

9475 
sCheck
.
zPfx
 = "Main freelist: ";

9476 
	`checkLi°
(&
sCheck
, 1, 
	`gë4byã
(&
pBt
->
pPage1
->
aD©a
[32]),

9477 
	`gë4byã
(&
pBt
->
pPage1
->
aD©a
[36]));

9478 
sCheck
.
zPfx
 = 0;

9482 
	`ã°ˇ£
–
pBt
->
db
->
Êags
 & 
SQLITE_CñlSizeCk
 );

9483 
pBt
->
db
->
Êags
 &~
SQLITE_CñlSizeCk
;

9484 
i
=0; ()i<
nRoŸ
 && 
sCheck
.
mxEº
; i++){

9485 
i64
 
nŸU£d
;

9486 if–
aRoŸ
[
i
]==0 ) ;

9487 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


9488 if–
pBt
->
autoVacuum
 && 
aRoŸ
[
i
]>1 ){

9489 
	`checkPåm≠
(&
sCheck
, 
aRoŸ
[
i
], 
PTRMAP_ROOTPAGE
, 0);

9492 
	`checkTªePage
(&
sCheck
, 
aRoŸ
[
i
], &
nŸU£d
, 
LARGEST_INT64
);

9494 
pBt
->
db
->
Êags
 = 
ßvedDbFœgs
;

9498 
i
=1; i<=
sCheck
.
nPage
 && sCheck.
mxEº
; i++){

9499 #ifde‡
SQLITE_OMIT_AUTOVACUUM


9500 if–
	`gëPageRe„ªn˚d
(&
sCheck
, 
i
)==0 ){

9501 
	`checkAµídMsg
(&
sCheck
, "Pagê%d i†√vî u£d", 
i
);

9507 if–
	`gëPageRe„ªn˚d
(&
sCheck
, 
i
)==0 &&

9508 (
	`PTRMAP_PAGENO
(
pBt
, 
i
)!=ò|| !pBt->
autoVacuum
) ){

9509 
	`checkAµídMsg
(&
sCheck
, "Pagê%d i†√vî u£d", 
i
);

9511 if–
	`gëPageRe„ªn˚d
(&
sCheck
, 
i
)!=0 &&

9512 (
	`PTRMAP_PAGENO
(
pBt
, 
i
)==ò&&ÖBt->
autoVacuum
) ){

9513 
	`checkAµídMsg
(&
sCheck
, "Poöã∏m≠Öagê%d i†ª„ªn˚d", 
i
);

9520 
öãgrôy_ck_˛ónup
:

9521 
	`sqlôe3PageFªe
(
sCheck
.
hóp
);

9522 
	`sqlôe3_‰ì
(
sCheck
.
aPgRef
);

9523 if–
sCheck
.
mÆlocFaûed
 ){

9524 
	`sqlôe3SåAccumRe£t
(&
sCheck
.
îrMsg
);

9525 
sCheck
.
nEº
++;

9527 *
≤Eº
 = 
sCheck
.
nEº
;

9528 if–
sCheck
.
nEº
==0 ) 
	`sqlôe3SåAccumRe£t
(&sCheck.
îrMsg
);

9530 
	`as£π
–
nRef
==
	`sqlôe3PagîRefcou¡
(
pBt
->
pPagî
) );

9531 
	`sqlôe3BåìLóve
(
p
);

9532  
	`sqlôe3SåAccumFöish
(&
sCheck
.
îrMsg
);

9533 
	}
}

9543 c⁄° *
	$sqlôe3BåìGëFûíame
(
Båì
 *
p
){

9544 
	`as£π
–
p
->
pBt
->
pPagî
!=0 );

9545  
	`sqlôe3PagîFûíame
(
p
->
pBt
->
pPagî
, 1);

9546 
	}
}

9556 c⁄° *
	$sqlôe3BåìGëJou∫Æ«me
(
Båì
 *
p
){

9557 
	`as£π
–
p
->
pBt
->
pPagî
!=0 );

9558  
	`sqlôe3PagîJou∫Æ«me
(
p
->
pBt
->
pPagî
);

9559 
	}
}

9564 
	$sqlôe3BåìIsInTøns
(
Båì
 *
p
){

9565 
	`as£π
–
p
==0 || 
	`sqlôe3_muãx_hñd
’->
db
->
muãx
) );

9566  (
p
 && (p->
öTøns
==
TRANS_WRITE
));

9567 
	}
}

9569 #i‚de‡
SQLITE_OMIT_WAL


9578 
	$sqlôe3BåìCheckpoöt
(
Båì
 *
p
, 
eMode
, *
≤Log
, *
≤Ck±
){

9579 
rc
 = 
SQLITE_OK
;

9580 if–
p
 ){

9581 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

9582 
	`sqlôe3BåìE¡î
(
p
);

9583 if–
pBt
->
öTønß˘i⁄
!=
TRANS_NONE
 ){

9584 
rc
 = 
SQLITE_LOCKED
;

9586 
rc
 = 
	`sqlôe3PagîCheckpoöt
(
pBt
->
pPagî
, 
p
->
db
, 
eMode
, 
≤Log
, 
≤Ck±
);

9588 
	`sqlôe3BåìLóve
(
p
);

9590  
rc
;

9591 
	}
}

9597 
	$sqlôe3BåìIsInRódTøns
(
Båì
 *
p
){

9598 
	`as£π
–
p
 );

9599 
	`as£π
–
	`sqlôe3_muãx_hñd
(
p
->
db
->
muãx
) );

9600  
p
->
öTøns
!=
TRANS_NONE
;

9601 
	}
}

9603 
	$sqlôe3BåìIsInBackup
(
Båì
 *
p
){

9604 
	`as£π
–
p
 );

9605 
	`as£π
–
	`sqlôe3_muãx_hñd
(
p
->
db
->
muãx
) );

9606  
p
->
nBackup
!=0;

9607 
	}
}

9629 *
	$sqlôe3BåìSchema
(
Båì
 *
p
, 
nByãs
, (*
xFªe
)(*)){

9630 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

9631 
	`sqlôe3BåìE¡î
(
p
);

9632 if–!
pBt
->
pSchema
 && 
nByãs
 ){

9633 
pBt
->
pSchema
 = 
	`sqlôe3DbMÆlocZîo
(0, 
nByãs
);

9634 
pBt
->
xFªeSchema
 = 
xFªe
;

9636 
	`sqlôe3BåìLóve
(
p
);

9637  
pBt
->
pSchema
;

9638 
	}
}

9645 
	$sqlôe3BåìSchemaLocked
(
Båì
 *
p
){

9646 
rc
;

9647 
	`as£π
–
	`sqlôe3_muãx_hñd
(
p
->
db
->
muãx
) );

9648 
	`sqlôe3BåìE¡î
(
p
);

9649 
rc
 = 
	`quîySh¨edCacheTabÀLock
(
p
, 
MASTER_ROOT
, 
READ_LOCK
);

9650 
	`as£π
–
rc
==
SQLITE_OK
 ||Ñc==
SQLITE_LOCKED_SHAREDCACHE
 );

9651 
	`sqlôe3BåìLóve
(
p
);

9652  
rc
;

9653 
	}
}

9656 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


9662 
	$sqlôe3BåìLockTabÀ
(
Båì
 *
p
, 
iTab
, 
u8
 
isWrôeLock
){

9663 
rc
 = 
SQLITE_OK
;

9664 
	`as£π
–
p
->
öTøns
!=
TRANS_NONE
 );

9665 if–
p
->
sh¨abÀ
 ){

9666 
u8
 
lockTy≥
 = 
READ_LOCK
 + 
isWrôeLock
;

9667 
	`as£π
–
READ_LOCK
+1==
WRITE_LOCK
 );

9668 
	`as£π
–
isWrôeLock
==0 || isWriteLock==1 );

9670 
	`sqlôe3BåìE¡î
(
p
);

9671 
rc
 = 
	`quîySh¨edCacheTabÀLock
(
p
, 
iTab
, 
lockTy≥
);

9672 if–
rc
==
SQLITE_OK
 ){

9673 
rc
 = 
	`£tSh¨edCacheTabÀLock
(
p
, 
iTab
, 
lockTy≥
);

9675 
	`sqlôe3BåìLóve
(
p
);

9677  
rc
;

9678 
	}
}

9681 #i‚de‡
SQLITE_OMIT_INCRBLOB


9692 
	$sqlôe3BåìPutD©a
(
BtCurs‹
 *
pC§
, 
u32
 
off£t
, u32 
amt
, *
z
){

9693 
rc
;

9694 
	`as£π
–
	`curs‹OwnsBtSh¨ed
(
pC§
) );

9695 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pC§
->
pBåì
->
db
->
muãx
) );

9696 
	`as£π
–
pC§
->
curFœgs
 & 
BTCF_In¸blob
 );

9698 
rc
 = 
	`ª°‹eCurs‹Posôi⁄
(
pC§
);

9699 if–
rc
!=
SQLITE_OK
 ){

9700  
rc
;

9702 
	`as£π
–
pC§
->
eSèã
!=
CURSOR_REQUIRESEEK
 );

9703 if–
pC§
->
eSèã
!=
CURSOR_VALID
 ){

9704  
SQLITE_ABORT
;

9715 
	`VVA_ONLY
(
rc
 =Ë
	`ßveAŒCurs‹s
(
pC§
->
pBt
,ÖC§->
pgnoRoŸ
,ÖCsr);

9716 
	`as£π
–
rc
==
SQLITE_OK
 );

9725 if–(
pC§
->
curFœgs
 & 
BTCF_WrôeFœg
)==0 ){

9726  
SQLITE_READONLY
;

9728 
	`as£π
–(
pC§
->
pBt
->
btsFœgs
 & 
BTS_READ_ONLY
)==0

9729 && 
pC§
->
pBt
->
öTønß˘i⁄
==
TRANS_WRITE
 );

9730 
	`as£π
–
	`hasSh¨edCacheTabÀLock
(
pC§
->
pBåì
,ÖC§->
pgnoRoŸ
, 0, 2) );

9731 
	`as£π
–!
	`hasRódC⁄Êi˘s
(
pC§
->
pBåì
,ÖC§->
pgnoRoŸ
) );

9732 
	`as£π
–
pC§
->
≠Page
[pC§->
iPage
]->
ötKey
 );

9734  
	`ac˚ssPaylﬂd
(
pC§
, 
off£t
, 
amt
, (*)
z
, 1);

9735 
	}
}

9740 
	$sqlôe3BåìIn¸blobCurs‹
(
BtCurs‹
 *
pCur
){

9741 
	`sqlôe3LogCurs‹In¸Blob
(
pCur
);

9742 
pCur
->
curFœgs
 |
BTCF_In¸blob
;

9743 
pCur
->
pBåì
->
hasIn¸blobCur
 = 1;

9744 
	}
}

9752 
	$sqlôe3BåìSëVîsi⁄
(
Båì
 *
pBåì
, 
iVîsi⁄
){

9753 
BtSh¨ed
 *
pBt
 = 
pBåì
->pBt;

9754 
rc
;

9756 
	`as£π
–
iVîsi⁄
==1 || iVersion==2 );

9761 
pBt
->
btsFœgs
 &~
BTS_NO_WAL
;

9762 if–
iVîsi⁄
==1 ) 
pBt
->
btsFœgs
 |
BTS_NO_WAL
;

9764 
rc
 = 
	`sqlôe3BåìBegöTøns
(
pBåì
, 0);

9765 if–
rc
==
SQLITE_OK
 ){

9766 
u8
 *
aD©a
 = 
pBt
->
pPage1
->aData;

9767 if–
aD©a
[18]!=(
u8
)
iVîsi⁄
 ||áData[19]!=(u8)iVersion ){

9768 
rc
 = 
	`sqlôe3BåìBegöTøns
(
pBåì
, 2);

9769 if–
rc
==
SQLITE_OK
 ){

9770 
rc
 = 
	`sqlôe3PagîWrôe
(
pBt
->
pPage1
->
pDbPage
);

9771 if–
rc
==
SQLITE_OK
 ){

9772 
aD©a
[18] = (
u8
)
iVîsi⁄
;

9773 
aD©a
[19] = (
u8
)
iVîsi⁄
;

9779 
pBt
->
btsFœgs
 &~
BTS_NO_WAL
;

9780  
rc
;

9781 
	}
}

9787 
	$sqlôe3BåìCurs‹HasHöt
(
BtCurs‹
 *
pC§
, 
mask
){

9788  (
pC§
->
höts
 & 
mask
)!=0;

9789 
	}
}

9794 
	$sqlôe3BåìIsRód⁄ly
(
Båì
 *
p
){

9795  (
p
->
pBt
->
btsFœgs
 & 
BTS_READ_ONLY
)!=0;

9796 
	}
}

9801 
	$sqlôe3HódîSizeBåì
(){  
	`ROUND8
((
MemPage
)); 
	}
}

9803 #i‡!
deföed
(
SQLITE_OMIT_SHARED_CACHE
)

9807 
	$sqlôe3BåìSh¨abÀ
(
Båì
 *
p
){

9808  
p
->
sh¨abÀ
;

9809 
	}
}

9816 
	$sqlôe3BåìC⁄√˘i⁄Cou¡
(
Båì
 *
p
){

9817 
	`ã°ˇ£
–
p
->
sh¨abÀ
 );

9818  
p
->
pBt
->
nRef
;

9819 
	}
}

	@btree.h

16 #i‚de‡
SQLITE_BTREE_H


17 
	#SQLITE_BTREE_H


	)

22 
	#SQLITE_N_BTREE_META
 16

	)

28 #i‚de‡
SQLITE_DEFAULT_AUTOVACUUM


29 
	#SQLITE_DEFAULT_AUTOVACUUM
 0

	)

32 
	#BTREE_AUTOVACUUM_NONE
 0

	)

33 
	#BTREE_AUTOVACUUM_FULL
 1

	)

34 
	#BTREE_AUTOVACUUM_INCR
 2

	)

39 
Båì
 
	tBåì
;

40 
BtCurs‹
 
	tBtCurs‹
;

41 
BtSh¨ed
 
	tBtSh¨ed
;

42 
BåìPaylﬂd
 
	tBåìPaylﬂd
;

45 
sqlôe3BåìO≥n
(

46 
sqlôe3_vfs
 *
pVfs
,

47 c⁄° *
zFûíame
,

48 
sqlôe3
 *
db
,

49 
Båì
 **
µBåì
,

50 
Êags
,

51 
vfsFœgs


60 
	#BTREE_OMIT_JOURNAL
 1

	)

61 
	#BTREE_MEMORY
 2

	)

62 
	#BTREE_SINGLE
 4

	)

63 
	#BTREE_UNORDERED
 8

	)

65 
sqlôe3BåìClo£
(
Båì
*);

66 
sqlôe3BåìSëCacheSize
(
Båì
*,);

67 
sqlôe3BåìSëSpûlSize
(
Båì
*,);

68 #i‡
SQLITE_MAX_MMAP_SIZE
>0

69 
sqlôe3BåìSëMm≠Limô
(
Båì
*,
sqlôe3_öt64
);

71 
sqlôe3BåìSëPagîFœgs
(
Båì
*,);

72 
sqlôe3BåìSëPageSize
(
Båì
 *
p
, 
nPagesize
, 
nRe£rve
, 
eFix
);

73 
sqlôe3BåìGëPageSize
(
Båì
*);

74 
sqlôe3BåìMaxPageCou¡
(
Båì
*,);

75 
u32
 
sqlôe3BåìLa°Page
(
Båì
*);

76 
sqlôe3BåìSecuªDñëe
(
Båì
*,);

77 
sqlôe3BåìGëO±imÆRe£rve
(
Båì
*);

78 
sqlôe3BåìGëRe£rveNoMuãx
(
Båì
 *
p
);

79 
sqlôe3BåìSëAutoVacuum
(
Båì
 *, );

80 
sqlôe3BåìGëAutoVacuum
(
Båì
 *);

81 
sqlôe3BåìBegöTøns
(
Båì
*,);

82 
sqlôe3BåìCommôPha£O√
(
Båì
*, c⁄° *
zMa°î
);

83 
sqlôe3BåìCommôPha£Two
(
Båì
*, );

84 
sqlôe3BåìCommô
(
Båì
*);

85 
sqlôe3BåìRﬁlback
(
Båì
*,,);

86 
sqlôe3BåìBegöStmt
(
Båì
*,);

87 
sqlôe3BåìCª©eTabÀ
(
Båì
*, *, 
Êags
);

88 
sqlôe3BåìIsInTøns
(
Båì
*);

89 
sqlôe3BåìIsInRódTøns
(
Båì
*);

90 
sqlôe3BåìIsInBackup
(
Båì
*);

91 *
sqlôe3BåìSchema
(
Båì
 *, , (*)(*));

92 
	`sqlôe3BåìSchemaLocked
(
Båì
 *
pBåì
);

93 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


94 
	`sqlôe3BåìLockTabÀ
(
Båì
 *
pBåì
, 
iTab
, 
u8
 
isWrôeLock
);

96 
	`sqlôe3BåìSavïoöt
(
Båì
 *, , );

98 c⁄° *
	`sqlôe3BåìGëFûíame
(
Båì
 *);

99 c⁄° *
	`sqlôe3BåìGëJou∫Æ«me
(
Båì
 *);

100 
	`sqlôe3BåìC›yFûe
(
Båì
 *, Btree *);

102 
	`sqlôe3BåìIn¸Vacuum
(
Båì
 *);

114 
	#BTREE_INTKEY
 1

	)

115 
	#BTREE_BLOBKEY
 2

	)

117 
	`sqlôe3BåìDr›TabÀ
(
Båì
*, , *);

118 
	`sqlôe3BåìCÀ¨TabÀ
(
Båì
*, , *);

119 
	`sqlôe3BåìCÀ¨TabÀOfCurs‹
(
BtCurs‹
*);

120 
	`sqlôe3BåìTrùAŒCurs‹s
(
Båì
*, , );

122 
	`sqlôe3BåìGëMëa
(
Båì
 *
pBåì
, 
idx
, 
u32
 *
pVÆue
);

123 
	`sqlôe3BåìUpd©eMëa
(
Båì
*, 
idx
, 
u32
 
vÆue
);

125 
	`sqlôe3BåìNewDb
(
Båì
 *
p
);

144 
	#BTREE_FREE_PAGE_COUNT
 0

	)

145 
	#BTREE_SCHEMA_VERSION
 1

	)

146 
	#BTREE_FILE_FORMAT
 2

	)

147 
	#BTREE_DEFAULT_CACHE_SIZE
 3

	)

148 
	#BTREE_LARGEST_ROOT_PAGE
 4

	)

149 
	#BTREE_TEXT_ENCODING
 5

	)

150 
	#BTREE_USER_VERSION
 6

	)

151 
	#BTREE_INCR_VACUUM
 7

	)

152 
	#BTREE_APPLICATION_ID
 8

	)

153 
	#BTREE_DATA_VERSION
 15

	)

182 
	#BTREE_HINT_RANGE
 0

	)

197 
	#BTREE_BULKLOAD
 0x00000001

	)

198 
	#BTREE_SEEK_EQ
 0x00000002

	)

223 
	#BTREE_WRCSR
 0x00000004

	)

224 
	#BTREE_FORDELETE
 0x00000008

	)

226 
	`sqlôe3BåìCurs‹
(

227 
Båì
*,

228 
iTabÀ
,

229 
wrFœg
,

230 
KeyInfo
*,

231 
BtCurs‹
 *
pCurs‹


233 
	`sqlôe3BåìCurs‹Size
();

234 
	`sqlôe3BåìCurs‹Zîo
(
BtCurs‹
*);

235 
	`sqlôe3BåìCurs‹HötFœgs
(
BtCurs‹
*, );

236 #ifde‡
SQLITE_ENABLE_CURSOR_HINTS


237 
	`sqlôe3BåìCurs‹Höt
(
BtCurs‹
*, , ...);

240 
	`sqlôe3BåìClo£Curs‹
(
BtCurs‹
*);

241 
	`sqlôe3BåìMovëoU≈acked
(

242 
BtCurs‹
*,

243 
U≈ackedRec‹d
 *
pUnKey
,

244 
i64
 
ötKey
,

245 
büs
,

246 *
pRes


248 
	`sqlôe3BåìCurs‹HasMoved
(
BtCurs‹
*);

249 
	`sqlôe3BåìCurs‹Re°‹e
(
BtCurs‹
*, *);

250 
	`sqlôe3BåìDñëe
(
BtCurs‹
*, 
u8
 
Êags
);

253 
	#BTREE_SAVEPOSITION
 0x02

	)

254 
	#BTREE_AUXDELETE
 0x04

	)

274 
	sBåìPaylﬂd
 {

275 c⁄° *
pKey
;

276 
sqlôe3_öt64
 
nKey
;

277 c⁄° *
pD©a
;

278 
Mem
 *
aMem
;

279 
u16
 
nMem
;

280 
nD©a
;

281 
nZîo
;

284 
	`sqlôe3BåìIn£π
(
BtCurs‹
*, c⁄° 
BåìPaylﬂd
 *
pPaylﬂd
,

285 
büs
, 
£ekResu…
);

286 
	`sqlôe3BåìFú°
(
BtCurs‹
*, *
pRes
);

287 
	`sqlôe3BåìLa°
(
BtCurs‹
*, *
pRes
);

288 
	`sqlôe3BåìNext
(
BtCurs‹
*, *
pRes
);

289 
	`sqlôe3BåìEof
(
BtCurs‹
*);

290 
	`sqlôe3BåìPªvious
(
BtCurs‹
*, *
pRes
);

291 
i64
 
	`sqlôe3BåìI¡egîKey
(
BtCurs‹
*);

292 
	`sqlôe3BåìPaylﬂd
(
BtCurs‹
*, 
u32
 
off£t
, u32 
amt
, *);

293 c⁄° *
	`sqlôe3BåìPaylﬂdFëch
(
BtCurs‹
*, 
u32
 *
pAmt
);

294 
u32
 
	`sqlôe3BåìPaylﬂdSize
(
BtCurs‹
*);

296 *
	`sqlôe3BåìI¡egrôyCheck
(
Båì
*, *
aRoŸ
, 
nRoŸ
, , *);

297 
Pagî
 *
	`sqlôe3BåìPagî
(
Båì
*);

299 #i‚de‡
SQLITE_OMIT_INCRBLOB


300 
	`sqlôe3BåìPaylﬂdChecked
(
BtCurs‹
*, 
u32
 
off£t
, u32 
amt
, *);

301 
	`sqlôe3BåìPutD©a
(
BtCurs‹
*, 
u32
 
off£t
, u32 
amt
, *);

302 
	`sqlôe3BåìIn¸blobCurs‹
(
BtCurs‹
 *);

304 
	`sqlôe3BåìCÀ¨Curs‹
(
BtCurs‹
 *);

305 
	`sqlôe3BåìSëVîsi⁄
(
Båì
 *
pBt
, 
iVîsi⁄
);

306 
	`sqlôe3BåìCurs‹HasHöt
(
BtCurs‹
*, 
mask
);

307 
	`sqlôe3BåìIsRód⁄ly
(
Båì
 *
pBt
);

308 
	`sqlôe3HódîSizeBåì
();

310 #i‚de‡
NDEBUG


311 
	`sqlôe3BåìCurs‹IsVÆid
(
BtCurs‹
*);

313 
	`sqlôe3BåìCurs‹IsVÆidNN
(
BtCurs‹
*);

315 #i‚de‡
SQLITE_OMIT_BTREECOUNT


316 
	`sqlôe3BåìCou¡
(
BtCurs‹
 *, 
i64
 *);

319 #ifde‡
SQLITE_TEST


320 
	`sqlôe3BåìCurs‹Info
(
BtCurs‹
*, *, );

321 
	`sqlôe3BåìCurs‹Li°
(
Båì
*);

324 #i‚de‡
SQLITE_OMIT_WAL


325 
	`sqlôe3BåìCheckpoöt
(
Båì
*, , *, *);

333 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


334 
	`sqlôe3BåìE¡î
(
Båì
*);

335 
	`sqlôe3BåìE¡îAŒ
(
sqlôe3
*);

336 
	`sqlôe3BåìSh¨abÀ
(
Båì
*);

337 
	`sqlôe3BåìE¡îCurs‹
(
BtCurs‹
*);

338 
	`sqlôe3BåìC⁄√˘i⁄Cou¡
(
Båì
*);

340 
	#sqlôe3BåìE¡î
(
X
)

	)

341 
	#sqlôe3BåìE¡îAŒ
(
X
)

	)

342 
	#sqlôe3BåìSh¨abÀ
(
X
Ë0

	)

343 
	#sqlôe3BåìE¡îCurs‹
(
X
)

	)

344 
	#sqlôe3BåìC⁄√˘i⁄Cou¡
(
X
Ë1

	)

347 #i‡!
	`deföed
(
SQLITE_OMIT_SHARED_CACHE
Ë&& 
SQLITE_THREADSAFE


348 
	`sqlôe3BåìLóve
(
Båì
*);

349 
	`sqlôe3BåìLóveCurs‹
(
BtCurs‹
*);

350 
	`sqlôe3BåìLóveAŒ
(
sqlôe3
*);

351 #i‚de‡
NDEBUG


353 
	`sqlôe3BåìHﬁdsMuãx
(
Båì
*);

354 
	`sqlôe3BåìHﬁdsAŒMuãxes
(
sqlôe3
*);

355 
	`sqlôe3SchemaMuãxHñd
(
sqlôe3
*,,
Schema
*);

359 
	#sqlôe3BåìLóve
(
X
)

	)

360 
	#sqlôe3BåìLóveCurs‹
(
X
)

	)

361 
	#sqlôe3BåìLóveAŒ
(
X
)

	)

363 
	#sqlôe3BåìHﬁdsMuãx
(
X
Ë1

	)

364 
	#sqlôe3BåìHﬁdsAŒMuãxes
(
X
Ë1

	)

365 
	#sqlôe3SchemaMuãxHñd
(
X
,
Y
,
Z
Ë1

	)

	@btreeInt.h

216 
	~"sqlôeI¡.h
"

217 
	~"log.h
"

223 
	#MX_CELL_SIZE
(
pBt
Ë(()’Bt->
∑geSize
-8))

	)

230 
	#MX_CELL
(
pBt
Ë(’Bt->
∑geSize
-8)/6)

	)

233 
MemPage
 
	tMemPage
;

234 
BtLock
 
	tBtLock
;

235 
CñlInfo
 
	tCñlInfo
;

237 
IdxIn£πLog
 
	tidxIn£πLog
;

238 
IdxDñëeLog
 
	tidxDñëeLog
;

239 
Cª©eLog
 
	t¸óãLog
;

253 #i‚de‡
SQLITE_FILE_HEADER


254 
	#SQLITE_FILE_HEADER
 "SQLôêf‹m© 3"

	)

261 
	#PTF_INTKEY
 0x01

	)

262 
	#PTF_ZERODATA
 0x02

	)

263 
	#PTF_LEAFDATA
 0x04

	)

264 
	#PTF_LEAF
 0x08

	)

278 
	sMemPage
 {

279 
u8
 
	misInô
;

280 
u8
 
	mbBusy
;

281 
u8
 
	mötKey
;

282 
u8
 
	mötKeyLóf
;

283 
Pgno
 
	mpgno
;

286 
u8
 
	mÀaf
;

287 
u8
 
	mhdrOff£t
;

288 
u8
 
	mchûdPåSize
;

289 
u8
 
	mmax1byãPaylﬂd
;

290 
u8
 
	mnOvîÊow
;

291 
u16
 
	mmaxLoˇl
;

292 
u16
 
	mmöLoˇl
;

293 
u16
 
	m˚ŒOff£t
;

294 
u16
 
	mnFªe
;

295 
u16
 
	mnCñl
;

296 
u16
 
	mmaskPage
;

297 
u16
 
	maiOvÊ
[4];

299 
u8
 *
	m≠OvÊ
[4];

300 
BtSh¨ed
 *
	mpBt
;

301 
u8
 *
	maD©a
;

302 
u8
 *
	maD©aEnd
;

303 
u8
 *
	maCñlIdx
;

304 
u8
 *
	maD©aOf°
;

305 
DbPage
 *
	mpDbPage
;

306 
u16
 (*
xCñlSize
)(
	mMemPage
*,
	mu8
*);

307 (*
	mxP¨£Cñl
)(
	mMemPage
*,
	mu8
*,
	mCñlInfo
*);

317 
	sBtLock
 {

318 
Båì
 *
	mpBåì
;

319 
Pgno
 
	miTabÀ
;

320 
u8
 
	meLock
;

321 
BtLock
 *
	mpNext
;

325 
	#READ_LOCK
 1

	)

326 
	#WRITE_LOCK
 2

	)

349 
	sBåì
 {

350 
sqlôe3
 *
	mdb
;

351 
BtSh¨ed
 *
	mpBt
;

352 
u8
 
	möTøns
;

353 
u8
 
	msh¨abÀ
;

354 
u8
 
	mlocked
;

355 
u8
 
	mhasIn¸blobCur
;

356 
	mw™tToLock
;

357 
	mnBackup
;

358 
u32
 
	miD©aVîsi⁄
;

359 
Båì
 *
	mpNext
;

360 
Båì
 *
	mpPªv
;

361 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


362 
BtLock
 
	mlock
;

364 
	midx_¨õs
;

366 
BtO≥nLog
 
	mbt_›í_log
;

367 
BtIbtLog
 
	mbt_iBt_log
;

368 
BtFœgLog
 
	mbt_Êag_log
;

369 
BtSaveLog
 
	mbt_ßve_log
;

370 } 
	mÆ
;

380 
	#TRANS_NONE
 0

	)

381 
	#TRANS_READ
 1

	)

382 
	#TRANS_WRITE
 2

	)

419 
	sBtSh¨ed
 {

420 
Pagî
 *
	mpPagî
;

421 
sqlôe3
 *
	mdb
;

422 
BtCurs‹
 *
	mpCurs‹
;

423 
MemPage
 *
	mpPage1
;

424 
u8
 
	m›íFœgs
;

425 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


426 
u8
 
	mautoVacuum
;

427 
u8
 
	mö¸Vacuum
;

428 
u8
 
	mbDoTrunˇã
;

430 
u8
 
	möTønß˘i⁄
;

431 
u8
 
	mmax1byãPaylﬂd
;

432 #ifde‡
SQLITE_HAS_CODEC


433 
u8
 
	m›timÆRe£rve
;

435 
u16
 
	mbtsFœgs
;

436 
u16
 
	mmaxLoˇl
;

437 
u16
 
	mmöLoˇl
;

438 
u16
 
	mmaxLóf
;

439 
u16
 
	mmöLóf
;

440 
u32
 
	m∑geSize
;

441 
u32
 
	mußbÀSize
;

442 
	mnTønß˘i⁄
;

443 
u32
 
	mnPage
;

444 *
	mpSchema
;

445 (*
	mxFªeSchema
)(*);

446 
sqlôe3_muãx
 *
	mmuãx
;

447 
Bôvec
 *
	mpHasC⁄ã¡
;

448 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


449 
	mnRef
;

450 
BtSh¨ed
 *
	mpNext
;

451 
BtLock
 *
	mpLock
;

452 
Båì
 *
	mpWrôî
;

454 
u8
 *
	mpTmpS∑˚
;

455 
Loggî
 *
	mpLoggî
;

461 
	#BTS_READ_ONLY
 0x0001

	)

462 
	#BTS_PAGESIZE_FIXED
 0x0002

	)

463 
	#BTS_SECURE_DELETE
 0x0004

	)

464 
	#BTS_INITIALLY_EMPTY
 0x0008

	)

465 
	#BTS_NO_WAL
 0x0010

	)

466 
	#BTS_EXCLUSIVE
 0x0020

	)

467 
	#BTS_PENDING
 0x0040

	)

474 
	sCñlInfo
 {

475 
i64
 
	mnKey
;

476 
u8
 *
	mpPaylﬂd
;

477 
u32
 
	mnPaylﬂd
;

478 
u16
 
	mnLoˇl
;

479 
u16
 
	mnSize
;

491 
	#BTCURSOR_MAX_DEPTH
 20

	)

512 
	sBtCurs‹
 {

513 
Båì
 *
	mpBåì
;

514 
BtSh¨ed
 *
	mpBt
;

515 
BtCurs‹
 *
	mpNext
;

516 
Pgno
 *
	maOvîÊow
;

517 
CñlInfo
 
	möfo
;

518 
i64
 
	mnKey
;

519 *
	mpKey
;

520 
Pgno
 
	mpgnoRoŸ
;

521 
	mnOvÊAŒoc
;

522 
	mskùNext
;

524 
u8
 
	mcurFœgs
;

525 
u8
 
	mcurPagîFœgs
;

526 
u8
 
	meSèã
;

527 
u8
 
	mhöts
;

531 
i8
 
	miPage
;

532 
u8
 
	mcurI¡Key
;

533 
KeyInfo
 *
	mpKeyInfo
;

534 *
	m∑ddög1
;

535 
u16
 
	maiIdx
[
BTCURSOR_MAX_DEPTH
];

536 
MemPage
 *
	m≠Page
[
BTCURSOR_MAX_DEPTH
];

537 
	midx_¨õs
;

541 
C§O≥nLog
 
	mc§_›í_log
;

542 
C§Ic§Log
 
	mc§_ic§_log
;

543 
C§U≈ackedLog
 
	mc§_u≈acked_log
;

544 
C§In£πLog
 
	mc§_ö£π_log
;

545 
C§FœgLog
 
	mc§_Êag_log
;

546 } 
	mÆ
;

552 
	#BTCF_WrôeFœg
 0x01

	)

553 
	#BTCF_VÆidNKey
 0x02

	)

554 
	#BTCF_VÆidOvÊ
 0x04

	)

555 
	#BTCF_AtLa°
 0x08

	)

556 
	#BTCF_In¸blob
 0x10

	)

557 
	#BTCF_Mu…ùÀ
 0x20

	)

589 
	#CURSOR_INVALID
 0

	)

590 
	#CURSOR_VALID
 1

	)

591 
	#CURSOR_SKIPNEXT
 2

	)

592 
	#CURSOR_REQUIRESEEK
 3

	)

593 
	#CURSOR_FAULT
 4

	)

598 
	#PENDING_BYTE_PAGE
(
pBt
Ë
	`PAGER_MJ_PGNO
’Bt)

	)

615 
	#PTRMAP_PAGENO
(
pBt
, 
pgno
Ë
	`±rm≠Pagío
’Bt,Ögno)

	)

616 
	#PTRMAP_PTROFFSET
(
pg±rm≠
, 
pgno
Ë(5*’gno-pg±rm≠-1))

	)

617 
	#PTRMAP_ISPAGE
(
pBt
, 
pgno
Ë(
	`PTRMAP_PAGENO
(’Bt),’gno))==’gno))

	)

650 
	#PTRMAP_ROOTPAGE
 1

	)

651 
	#PTRMAP_FREEPAGE
 2

	)

652 
	#PTRMAP_OVERFLOW1
 3

	)

653 
	#PTRMAP_OVERFLOW2
 4

	)

654 
	#PTRMAP_BTREE
 5

	)

659 
	#båìI¡egrôy
(
p
) \

660 
	`as£π
–
p
->
pBt
->
öTønß˘i⁄
!=
TRANS_NONE
 ||Ö->pBt->
nTønß˘i⁄
==0 ); \

661 
	`as£π
–
p
->
pBt
->
öTønß˘i⁄
>ı->
öTøns
 );

	)

671 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


672 
	#ISAUTOVACUUM
 (
pBt
->
autoVacuum
)

	)

674 
	#ISAUTOVACUUM
 0

	)

688 
I¡egrôyCk
 
	tI¡egrôyCk
;

689 
	sI¡egrôyCk
 {

690 
BtSh¨ed
 *
	mpBt
;

691 
Pagî
 *
	mpPagî
;

692 
u8
 *
	maPgRef
;

693 
Pgno
 
	mnPage
;

694 
	mmxEº
;

695 
	mnEº
;

696 
	mmÆlocFaûed
;

697 c⁄° *
	mzPfx
;

698 
	mv1
, 
	mv2
;

699 
SåAccum
 
	mîrMsg
;

700 
u32
 *
	mhóp
;

706 
	#gë2byã
(
x
Ë((x)[0]<<8 | (x)[1])

	)

707 
	#put2byã
(
p
,
v
Ë(’)[0] = (
u8
)((v)>>8), (p)[1] = (u8)(v))

	)

708 
	#gë4byã
 
sqlôe3Gë4byã


	)

709 
	#put4byã
 
sqlôe3Put4byã


	)

716 #i‡
SQLITE_BYTEORDER
==4321

717 
	#gë2byãAlig√d
(
x
Ë(*(
u16
*)(x))

	)

718 #ñi‡
SQLITE_BYTEORDER
==1234 && !
deföed
(
SQLITE_DISABLE_INTRINSIC
) \

719 && 
	gGCC_VERSION
>=4008000

720 
	#gë2byãAlig√d
(
x
Ë
	`__buûtö_bsw≠16
(*(
u16
*)(x))

	)

721 #ñi‡
SQLITE_BYTEORDER
==1234 && !
deföed
(
SQLITE_DISABLE_INTRINSIC
) \

722 && 
deföed
(
_MSC_VER
) && _MSC_VER>=1300

723 
	#gë2byãAlig√d
(
x
Ë
	`_byãsw≠_ush‹t
(*(
u16
*)(x))

	)

725 
	#gë2byãAlig√d
(
x
Ë((x)[0]<<8 | (x)[1])

	)

	@build.c

25 
	~"sqlôeI¡.h
"

27 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


32 
	sTabÀLock
 {

33 
	miDb
;

34 
	miTab
;

35 
u8
 
	misWrôeLock
;

36 c⁄° *
	mzLockName
;

49 
	$sqlôe3TabÀLock
(

50 
P¨£
 *
pP¨£
,

51 
iDb
,

52 
iTab
,

53 
u8
 
isWrôeLock
,

54 c⁄° *
zName


56 
P¨£
 *
pT›Àvñ
 = 
	`sqlôe3P¨£T›Àvñ
(
pP¨£
);

57 
i
;

58 
nByãs
;

59 
TabÀLock
 *
p
;

60 
	`as£π
–
iDb
>=0 );

62 if–
iDb
==1 ) ;

63 if–!
	`sqlôe3BåìSh¨abÀ
(
pP¨£
->
db
->
aDb
[
iDb
].
pBt
) ) ;

64 
i
=0; i<
pT›Àvñ
->
nTabÀLock
; i++){

65 
p
 = &
pT›Àvñ
->
aTabÀLock
[
i
];

66 if–
p
->
iDb
==iDb &&Ö->
iTab
==iTab ){

67 
p
->
isWrôeLock
 = (p->isWriteLock || isWriteLock);

72 
nByãs
 = (
TabÀLock
Ë* (
pT›Àvñ
->
nTabÀLock
+1);

73 
pT›Àvñ
->
aTabÀLock
 =

74 
	`sqlôe3DbRóŒocOrFªe
(
pT›Àvñ
->
db
,ÖT›Àvñ->
aTabÀLock
, 
nByãs
);

75 if–
pT›Àvñ
->
aTabÀLock
 ){

76 
p
 = &
pT›Àvñ
->
aTabÀLock
[pT›Àvñ->
nTabÀLock
++];

77 
p
->
iDb
 = iDb;

78 
p
->
iTab
 = iTab;

79 
p
->
isWrôeLock
 = isWriteLock;

80 
p
->
zLockName
 = 
zName
;

82 
pT›Àvñ
->
nTabÀLock
 = 0;

83 
	`sqlôe3OomFau…
(
pT›Àvñ
->
db
);

85 
	}
}

91 
	$codeTabÀLocks
(
P¨£
 *
pP¨£
){

92 
i
;

93 
Vdbe
 *
pVdbe
;

95 
pVdbe
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

96 
	`as£π
–
pVdbe
!=0 );

98 
i
=0; i<
pP¨£
->
nTabÀLock
; i++){

99 
TabÀLock
 *
p
 = &
pP¨£
->
aTabÀLock
[
i
];

100 
p1
 = 
p
->
iDb
;

101 
	`sqlôe3VdbeAddOp4
(
pVdbe
, 
OP_TabÀLock
, 
p1
, 
p
->
iTab
,Ö->
isWrôeLock
,

102 
p
->
zLockName
, 
P4_STATIC
);

104 
	}
}

106 
	#codeTabÀLocks
(
x
)

	)

114 #i‡
SQLITE_MAX_ATTACHED
>30

115 
	$sqlôe3DbMaskAŒZîo
(
yDbMask
 
m
){

116 
i
;

117 
i
=0; i<(
yDbMask
); i++Ëif–
m
[i] )  0;

119 
	}
}

132 
	$sqlôe3FöishCodög
(
P¨£
 *
pP¨£
){

133 
sqlôe3
 *
db
;

134 
Vdbe
 *
v
;

136 
	`as£π
–
pP¨£
->
pT›Àvñ
==0 );

137 
db
 = 
pP¨£
->db;

138 if–
pP¨£
->
√°ed
 ) ;

139 if–
db
->
mÆlocFaûed
 || 
pP¨£
->
nEº
 ){

140 if–
pP¨£
->
rc
==
SQLITE_OK
 )ÖP¨£->r¯
SQLITE_ERROR
;

147 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

148 
	`as£π
–!
pP¨£
->
isMu…iWrôe


149 || 
	`sqlôe3VdbeAs£πMayAb‹t
(
v
, 
pP¨£
->
mayAb‹t
));

150 if–
v
 ){

151 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_HÆt
);

153 #i‡
SQLITE_USER_AUTHENTICATION


154 if–
pP¨£
->
nTabÀLock
>0 && 
db
->
öô
.
busy
==0 ){

155 
	`sqlôe3U£rAuthInô
(
db
);

156 if–
db
->
auth
.
authLevñ
<
UAUTH_U£r
 ){

157 
	`sqlôe3Eº‹Msg
(
pP¨£
, "userÇotáuthenticated");

158 
pP¨£
->
rc
 = 
SQLITE_AUTH_USER
;

170 if–
db
->
mÆlocFaûed
==0

171 && (
	`DbMaskN⁄Zîo
(
pP¨£
->
cookõMask
Ë||ÖP¨£->
pC⁄°Ex¥
)

173 
iDb
, 
i
;

174 
	`as£π
–
	`sqlôe3VdbeGëOp
(
v
, 0)->
›code
==
OP_Inô
 );

175 
	`sqlôe3VdbeJumpHîe
(
v
, 0);

176 
iDb
=0; iDb<
db
->
nDb
; iDb++){

177 
Schema
 *
pSchema
;

178 if–
	`DbMaskTe°
(
pP¨£
->
cookõMask
, 
iDb
)==0 ) ;

179 
	`sqlôe3VdbeU£sBåì
(
v
, 
iDb
);

180 
pSchema
 = 
db
->
aDb
[
iDb
].pSchema;

181 
	`sqlôe3VdbeAddOp4I¡
(
v
,

182 
OP_Tønß˘i⁄
,

183 
iDb
,

184 
	`DbMaskTe°
(
pP¨£
->
wrôeMask
,
iDb
),

185 
pSchema
->
schema_cookõ
,

186 
pSchema
->
iGíî©i⁄


188 if–
db
->
öô
.
busy
==0 ) 
	`sqlôe3VdbeCh™geP5
(
v
, 1);

189 
	`VdbeCommít
((
v
,

190 "u£sStmtJou∫Æ=%d", 
pP¨£
->
mayAb‹t
 &&ÖP¨£->
isMu…iWrôe
));

192 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


193 
i
=0; i<
pP¨£
->
nVèbLock
; i++){

194 *
vèb
 = (*)
	`sqlôe3GëVTabÀ
(
db
, 
pP¨£
->
≠VèbLock
[
i
]);

195 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_VBegö
, 0, 0, 0, 
vèb
, 
P4_VTAB
);

197 
pP¨£
->
nVèbLock
 = 0;

204 
	`codeTabÀLocks
(
pP¨£
);

208 
	`sqlôe3Autoö¸emítBegö
(
pP¨£
);

211 if–
pP¨£
->
pC⁄°Ex¥
 ){

212 
Ex¥Li°
 *
pEL
 = 
pP¨£
->
pC⁄°Ex¥
;

213 
pP¨£
->
okC⁄°Fa˘‹
 = 0;

214 
i
=0; i<
pEL
->
nEx¥
; i++){

215 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pEL
->
a
[
i
].
pEx¥
,ÖEL->a[i].
u
.
iC⁄°Ex¥Reg
);

220 
	`sqlôe3VdbeGŸo
(
v
, 1);

227 if–
v
 && 
pP¨£
->
nEº
==0 && !
db
->
mÆlocFaûed
 ){

228 
	`as£π
–
pP¨£
->
iCacheLevñ
==0 );

231 if–
pP¨£
->
pAöc
!=0 &&ÖP¨£->
nTab
==0 )ÖParse->nTab = 1;

232 
	`sqlôe3VdbeMakeRódy
(
v
, 
pP¨£
);

233 
pP¨£
->
rc
 = 
SQLITE_DONE
;

235 
pP¨£
->
rc
 = 
SQLITE_ERROR
;

237 
	}
}

251 
	$sqlôe3Ne°edP¨£
(
P¨£
 *
pP¨£
, c⁄° *
zF‹m©
, ...){

252 
va_li°
 
≠
;

253 *
zSql
;

254 *
zEºMsg
 = 0;

255 
sqlôe3
 *
db
 = 
pP¨£
->db;

256 
ßveBuf
[
PARSE_TAIL_SZ
];

258 if–
pP¨£
->
nEº
 ) ;

259 
	`as£π
–
pP¨£
->
√°ed
<10 );

260 
	`va_°¨t
(
≠
, 
zF‹m©
);

261 
zSql
 = 
	`sqlôe3VMPrötf
(
db
, 
zF‹m©
, 
≠
);

262 
	`va_íd
(
≠
);

263 if–
zSql
==0 ){

266 
pP¨£
->
√°ed
++;

267 
	`mem˝y
(
ßveBuf
, 
	`PARSE_TAIL
(
pP¨£
), 
PARSE_TAIL_SZ
);

268 
	`mem£t
(
	`PARSE_TAIL
(
pP¨£
), 0, 
PARSE_TAIL_SZ
);

269 
	`sqlôe3RunP¨£r
(
pP¨£
, 
zSql
, &
zEºMsg
);

270 
	`sqlôe3DbFªe
(
db
, 
zEºMsg
);

271 
	`sqlôe3DbFªe
(
db
, 
zSql
);

272 
	`mem˝y
(
	`PARSE_TAIL
(
pP¨£
), 
ßveBuf
, 
PARSE_TAIL_SZ
);

273 
pP¨£
->
√°ed
--;

274 
	}
}

276 #i‡
SQLITE_USER_AUTHENTICATION


281 
	$sqlôe3U£rAuthTabÀ
(c⁄° *
zTabÀ
){

282  
	`sqlôe3_°ricmp
(
zTabÀ
, "sqlite_user")==0;

283 
	}
}

298 
TabÀ
 *
	$sqlôe3FödTabÀ
(
sqlôe3
 *
db
, c⁄° *
zName
, c⁄° *
zD©aba£
){

299 
TabÀ
 *
p
 = 0;

300 
i
;

303 
	`as£π
–
zD©aba£
!=0 || 
	`sqlôe3BåìHﬁdsAŒMuãxes
(
db
) );

304 #i‡
SQLITE_USER_AUTHENTICATION


307 if–
db
->
auth
.
authLevñ
<
UAUTH_Admö
 && 
	`sqlôe3U£rAuthTabÀ
(
zName
)!=0 ){

312 
i
=
OMIT_TEMPDB
; i<
db
->
nDb
; i++){

313 
j
 = (
i
<2) ? i^1 : i;

314 if–
zD©aba£
==0 || 
	`sqlôe3SåICmp
(zD©aba£, 
db
->
aDb
[
j
].
zDbSName
)==0 ){

315 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
j
, 0) );

316 
p
 = 
	`sqlôe3HashFöd
(&
db
->
aDb
[
j
].
pSchema
->
tblHash
, 
zName
);

317 if–
p
 ) Ö;

322 if–
	`sqlôe3SåICmp
(
zName
, 
MASTER_NAME
)!=0 ) ;

323 if–
	`sqlôe3_°ricmp
(
zD©aba£
, 
db
->
aDb
[1].
zDbSName
)!=0 ) ;

324 
zName
 = 
TEMP_MASTER_NAME
;

327 
	}
}

339 
TabÀ
 *
	$sqlôe3LoˇãTabÀ
(

340 
P¨£
 *
pP¨£
,

341 
u32
 
Êags
,

342 c⁄° *
zName
,

343 c⁄° *
zDba£


345 
TabÀ
 *
p
;

349 if–
SQLITE_OK
!=
	`sqlôe3RódSchema
(
pP¨£
) ){

353 
p
 = 
	`sqlôe3FödTabÀ
(
pP¨£
->
db
, 
zName
, 
zDba£
);

354 if–
p
==0 ){

355 c⁄° *
zMsg
 = 
Êags
 & 
LOCATE_VIEW
 ? "no such view" : "no suchÅable";

356 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


357 if–
	`sqlôe3FödDbName
(
pP¨£
->
db
, 
zDba£
)<1 ){

361 
ModuÀ
 *
pMod
 = (ModuÀ*)
	`sqlôe3HashFöd
(&
pP¨£
->
db
->
aModuÀ
, 
zName
);

362 if–
pMod
==0 && 
	`sqlôe3_°∫icmp
(
zName
, "pragma_", 7)==0 ){

363 
pMod
 = 
	`sqlôe3PøgmaVèbRegi°î
(
pP¨£
->
db
, 
zName
);

365 if–
pMod
 && 
	`sqlôe3VèbEp⁄ymousTabÀInô
(
pP¨£
,ÖMod) ){

366  
pMod
->
pEpoTab
;

370 if–(
Êags
 & 
LOCATE_NOERR
)==0 ){

371 if–
zDba£
 ){

372 
	`sqlôe3Eº‹Msg
(
pP¨£
, "%s: %s.%s", 
zMsg
, 
zDba£
, 
zName
);

374 
	`sqlôe3Eº‹Msg
(
pP¨£
, "%s: %s", 
zMsg
, 
zName
);

376 
pP¨£
->
checkSchema
 = 1;

380  
p
;

381 
	}
}

392 
TabÀ
 *
	$sqlôe3LoˇãTabÀIãm
(

393 
P¨£
 *
pP¨£
,

394 
u32
 
Êags
,

395 
SrcLi°_ôem
 *
p


397 c⁄° *
zDb
;

398 
	`as£π
–
p
->
pSchema
==0 ||Ö->
zD©aba£
==0 );

399 if–
p
->
pSchema
 ){

400 
iDb
 = 
	`sqlôe3SchemaToIndex
(
pP¨£
->
db
, 
p
->
pSchema
);

401 
zDb
 = 
pP¨£
->
db
->
aDb
[
iDb
].
zDbSName
;

403 
zDb
 = 
p
->
zD©aba£
;

405  
	`sqlôe3LoˇãTabÀ
(
pP¨£
, 
Êags
, 
p
->
zName
, 
zDb
);

406 
	}
}

420 
Index
 *
	$sqlôe3FödIndex
(
sqlôe3
 *
db
, c⁄° *
zName
, c⁄° *
zDb
){

421 
Index
 *
p
 = 0;

422 
i
;

424 
	`as£π
–
zDb
!=0 || 
	`sqlôe3BåìHﬁdsAŒMuãxes
(
db
) );

425 
i
=
OMIT_TEMPDB
; i<
db
->
nDb
; i++){

426 
j
 = (
i
<2) ? i^1 : i;

427 
Schema
 *
pSchema
 = 
db
->
aDb
[
j
].pSchema;

428 
	`as£π
–
pSchema
 );

429 if–
zDb
 && 
	`sqlôe3SåICmp
(zDb, 
db
->
aDb
[
j
].
zDbSName
) ) ;

430 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
j
, 0) );

431 
p
 = 
	`sqlôe3HashFöd
(&
pSchema
->
idxHash
, 
zName
);

432 if–
p
 ) ;

434  
p
;

435 
	}
}

440 
	$‰ìIndex
(
sqlôe3
 *
db
, 
Index
 *
p
){

441 #i‚de‡
SQLITE_OMIT_ANALYZE


442 
	`sqlôe3DñëeIndexSam∂es
(
db
, 
p
);

444 
	`sqlôe3Ex¥Dñëe
(
db
, 
p
->
pP¨tIdxWhîe
);

445 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
p
->
aCﬁEx¥
);

446 
	`sqlôe3DbFªe
(
db
, 
p
->
zCﬁAff
);

447 if–
p
->
isResized
 ) 
	`sqlôe3DbFªe
(
db
, (*Ì->
azCﬁl
);

448 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


449 
	`sqlôe3_‰ì
(
p
->
aiRowE°
);

451 
	`sqlôe3DbFªe
(
db
, 
p
);

452 
	}
}

460 
	$sqlôe3U∆ökAndDñëeIndex
(
sqlôe3
 *
db
, 
iDb
, c⁄° *
zIdxName
){

461 
Index
 *
pIndex
;

462 
Hash
 *
pHash
;

464 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

465 
pHash
 = &
db
->
aDb
[
iDb
].
pSchema
->
idxHash
;

466 
pIndex
 = 
	`sqlôe3HashIn£π
(
pHash
, 
zIdxName
, 0);

467 if–
	`ALWAYS
(
pIndex
) ){

468 if–
pIndex
->
pTabÀ
->pIndex==pIndex ){

469 
pIndex
->
pTabÀ
->pIndex =ÖIndex->
pNext
;

471 
Index
 *
p
;

474 
p
 = 
pIndex
->
pTabÀ
->pIndex;

475  
	`ALWAYS
(
p
Ë&&Ö->
pNext
!=
pIndex
 ){Ö =Ö->pNext; }

476 if–
	`ALWAYS
(
p
 &&Ö->
pNext
==
pIndex
) ){

477 
p
->
pNext
 = 
pIndex
->pNext;

480 
	`‰ìIndex
(
db
, 
pIndex
);

482 
db
->
Êags
 |
SQLITE_I¡înCh™ges
;

483 
	}
}

493 
	$sqlôe3Cﬁœp£D©aba£Aºay
(
sqlôe3
 *
db
){

494 
i
, 
j
;

495 
i
=
j
=2; i<
db
->
nDb
; i++){

496 
Db
 *
pDb
 = &
db
->
aDb
[
i
];

497 if–
pDb
->
pBt
==0 ){

498 
	`sqlôe3DbFªe
(
db
, 
pDb
->
zDbSName
);

499 
pDb
->
zDbSName
 = 0;

502 if–
j
<
i
 ){

503 
db
->
aDb
[
j
] = db->aDb[
i
];

505 
j
++;

507 
db
->
nDb
 = 
j
;

508 if–
db
->
nDb
<=2 && db->
aDb
!=db->
aDbSètic
 ){

509 
	`mem˝y
(
db
->
aDbSètic
, db->
aDb
, 2*(db->aDb[0]));

510 
	`sqlôe3DbFªe
(
db
, db->
aDb
);

511 
db
->
aDb
 = db->
aDbSètic
;

513 
	}
}

519 
	$sqlôe3Re£tO√Schema
(
sqlôe3
 *
db
, 
iDb
){

520 
Db
 *
pDb
;

521 
	`as£π
–
iDb
<
db
->
nDb
 );

524 
pDb
 = &
db
->
aDb
[
iDb
];

525 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

526 
	`as£π
–
pDb
->
pSchema
!=0 );

527 
	`sqlôe3SchemaCÀ¨
(
pDb
->
pSchema
);

533 if–
iDb
!=1 ){

534 
pDb
 = &
db
->
aDb
[1];

535 
	`as£π
–
pDb
->
pSchema
!=0 );

536 
	`sqlôe3SchemaCÀ¨
(
pDb
->
pSchema
);

539 
	}
}

545 
	$sqlôe3Re£tAŒSchemasOfC⁄√˘i⁄
(
sqlôe3
 *
db
){

546 
i
;

547 
	`sqlôe3BåìE¡îAŒ
(
db
);

548 
i
=0; i<
db
->
nDb
; i++){

549 
Db
 *
pDb
 = &
db
->
aDb
[
i
];

550 if–
pDb
->
pSchema
 ){

551 
	`sqlôe3SchemaCÀ¨
(
pDb
->
pSchema
);

554 
db
->
Êags
 &~
SQLITE_I¡înCh™ges
;

555 
	`sqlôe3VèbU∆ockLi°
(
db
);

556 
	`sqlôe3BåìLóveAŒ
(
db
);

557 
	`sqlôe3Cﬁœp£D©aba£Aºay
(
db
);

558 
	}
}

563 
	$sqlôe3CommôI¡î«lCh™ges
(
sqlôe3
 *
db
){

564 
db
->
Êags
 &~
SQLITE_I¡înCh™ges
;

565 
	}
}

571 
	$sqlôe3DñëeCﬁumnNames
(
sqlôe3
 *
db
, 
TabÀ
 *
pTabÀ
){

572 
i
;

573 
Cﬁumn
 *
pCﬁ
;

574 
	`as£π
–
pTabÀ
!=0 );

575 if–(
pCﬁ
 = 
pTabÀ
->
aCﬁ
)!=0 ){

576 
i
=0; i<
pTabÀ
->
nCﬁ
; i++, 
pCﬁ
++){

577 
	`sqlôe3DbFªe
(
db
, 
pCﬁ
->
zName
);

578 
	`sqlôe3Ex¥Dñëe
(
db
, 
pCﬁ
->
pDÊt
);

579 
	`sqlôe3DbFªe
(
db
, 
pCﬁ
->
zCﬁl
);

581 
	`sqlôe3DbFªe
(
db
, 
pTabÀ
->
aCﬁ
);

583 
	}
}

600 
SQLITE_NOINLINE
 
	$dñëeTabÀ
(
sqlôe3
 *
db
, 
TabÀ
 *
pTabÀ
){

601 
Index
 *
pIndex
, *
pNext
;

602 
	`TESTONLY
–
nLookaside
; )

607 
	`TESTONLY
–
nLookaside
 = (
db
 && (
pTabÀ
->
èbFœgs
 & 
TF_EphemîÆ
)==0) ?

608 
db
->
lookaside
.
nOut
 : 0 );

611 
pIndex
 = 
pTabÀ
->pIndex;ÖIndex;ÖIndex=
pNext
){

612 
pNext
 = 
pIndex
->pNext;

613 
	`as£π
–
pIndex
->
pSchema
==
pTabÀ
->pSchema

614 || (
	`IsVútuÆ
(
pTabÀ
Ë&& 
pIndex
->
idxTy≥
!=
SQLITE_IDXTYPE_APPDEF
) );

615 if–(
db
==0 || db->
≤ByãsFªed
==0Ë&& !
	`IsVútuÆ
(
pTabÀ
) ){

616 *
zName
 = 
pIndex
->zName;

617 
	`TESTONLY
 ( 
Index
 *
pOld
 = ) 
	`sqlôe3HashIn£π
(

618 &
pIndex
->
pSchema
->
idxHash
, 
zName
, 0

620 
	`as£π
–
db
==0 || 
	`sqlôe3SchemaMuãxHñd
(db, 0, 
pIndex
->
pSchema
) );

621 
	`as£π
–
pOld
==
pIndex
 ||ÖOld==0 );

623 
	`‰ìIndex
(
db
, 
pIndex
);

627 
	`sqlôe3FkDñëe
(
db
, 
pTabÀ
);

631 
	`sqlôe3DñëeCﬁumnNames
(
db
, 
pTabÀ
);

632 
	`sqlôe3DbFªe
(
db
, 
pTabÀ
->
zName
);

633 
	`sqlôe3DbFªe
(
db
, 
pTabÀ
->
zCﬁAff
);

634 
	`sqlôe3Sñe˘Dñëe
(
db
, 
pTabÀ
->
pSñe˘
);

635 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pTabÀ
->
pCheck
);

636 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


637 
	`sqlôe3VèbCÀ¨
(
db
, 
pTabÀ
);

639 
	`sqlôe3DbFªe
(
db
, 
pTabÀ
);

642 
	`as£π
–
nLookaside
==0 ||ÇLookaside==
db
->
lookaside
.
nOut
 );

643 
	}
}

644 
	$sqlôe3DñëeTabÀ
(
sqlôe3
 *
db
, 
TabÀ
 *
pTabÀ
){

646 if–!
pTabÀ
 ) ;

647 if–((!
db
 || db->
≤ByãsFªed
==0Ë&& (--
pTabÀ
->
nTabRef
)>0) ) ;

648 
	`dñëeTabÀ
(
db
, 
pTabÀ
);

649 
	}
}

656 
	$sqlôe3U∆ökAndDñëeTabÀ
(
sqlôe3
 *
db
, 
iDb
, c⁄° *
zTabName
){

657 
TabÀ
 *
p
;

658 
Db
 *
pDb
;

660 
	`as£π
–
db
!=0 );

661 
	`as£π
–
iDb
>=0 && iDb<
db
->
nDb
 );

662 
	`as£π
–
zTabName
 );

663 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

664 
	`ã°ˇ£
–
zTabName
[0]==0 );

665 
pDb
 = &
db
->
aDb
[
iDb
];

666 
p
 = 
	`sqlôe3HashIn£π
(&
pDb
->
pSchema
->
tblHash
, 
zTabName
, 0);

667 
	`sqlôe3DñëeTabÀ
(
db
, 
p
);

668 
db
->
Êags
 |
SQLITE_I¡înCh™ges
;

669 
	}
}

684 *
	$sqlôe3NameFromTokí
(
sqlôe3
 *
db
, 
Tokí
 *
pName
){

685 *
zName
;

686 if–
pName
 ){

687 
zName
 = 
	`sqlôe3DbSåNDup
(
db
, (*)
pName
->
z
,ÖName->
n
);

688 
	`sqlôe3DequŸe
(
zName
);

690 
zName
 = 0;

692  
zName
;

693 
	}
}

699 
	$sqlôe3O≥nMa°îTabÀ
(
P¨£
 *
p
, 
iDb
){

700 
Vdbe
 *
v
 = 
	`sqlôe3GëVdbe
(
p
);

701 
	`sqlôe3TabÀLock
(
p
, 
iDb
, 
MASTER_ROOT
, 1, 
MASTER_NAME
);

702 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_O≥nWrôe
, 0, 
MASTER_ROOT
, 
iDb
, 5);

703 if–
p
->
nTab
==0 ){

704 
p
->
nTab
 = 1;

706 
	}
}

714 
	$sqlôe3FödDbName
(
sqlôe3
 *
db
, c⁄° *
zName
){

715 
i
 = -1;

716 if–
zName
 ){

717 
Db
 *
pDb
;

718 
i
=(
db
->
nDb
-1), 
pDb
=&db->
aDb
[i]; i>=0; i--,ÖDb--){

719 if–0==
	`sqlôe3_°ricmp
(
pDb
->
zDbSName
, 
zName
) ) ;

722 if–
i
==0 && 0==
	`sqlôe3_°ricmp
("maö", 
zName
) ) ;

725  
i
;

726 
	}
}

734 
	$sqlôe3FödDb
(
sqlôe3
 *
db
, 
Tokí
 *
pName
){

735 
i
;

736 *
zName
;

737 
zName
 = 
	`sqlôe3NameFromTokí
(
db
, 
pName
);

738 
i
 = 
	`sqlôe3FödDbName
(
db
, 
zName
);

739 
	`sqlôe3DbFªe
(
db
, 
zName
);

740  
i
;

741 
	}
}

759 
	$sqlôe3TwoP¨tName
(

760 
P¨£
 *
pP¨£
,

761 
Tokí
 *
pName1
,

762 
Tokí
 *
pName2
,

763 
Tokí
 **
pUnquÆ


765 
iDb
;

766 
sqlôe3
 *
db
 = 
pP¨£
->db;

768 
	`as£π
–
pName2
!=0 );

769 if–
pName2
->
n
>0 ){

770 if–
db
->
öô
.
busy
 ) {

771 
	`sqlôe3Eº‹Msg
(
pP¨£
, "corrupt database");

774 *
pUnquÆ
 = 
pName2
;

775 
iDb
 = 
	`sqlôe3FödDb
(
db
, 
pName1
);

776 if–
iDb
<0 ){

777 
	`sqlôe3Eº‹Msg
(
pP¨£
, "unknow¿d©aba£ %T", 
pName1
);

781 
	`as£π
–
db
->
öô
.
iDb
==0 || db->öô.
busy
 || (db->
Êags
 & 
SQLITE_Vacuum
)!=0);

782 
iDb
 = 
db
->
öô
.iDb;

783 *
pUnquÆ
 = 
pName1
;

785  
iDb
;

786 
	}
}

795 
	$sqlôe3CheckObje˘Name
(
P¨£
 *
pP¨£
, c⁄° *
zName
){

796 if–!
pP¨£
->
db
->
öô
.
busy
 &&ÖP¨£->
√°ed
==0

797 && (
pP¨£
->
db
->
Êags
 & 
SQLITE_WrôeSchema
)==0

798 && 0==
	`sqlôe3SåNICmp
(
zName
, "sqlite_", 7) ){

799 
	`sqlôe3Eº‹Msg
(
pP¨£
, "obje˘Çamêª£rved f‹ i¡î«»u£: %s", 
zName
);

800  
SQLITE_ERROR
;

802  
SQLITE_OK
;

803 
	}
}

808 
Index
 *
	$sqlôe3Prim¨yKeyIndex
(
TabÀ
 *
pTab
){

809 
Index
 *
p
;

810 
p
=
pTab
->
pIndex
;Ö && !
	`IsPrim¨yKeyIndex
’);Öı->
pNext
){}

811  
p
;

812 
	}
}

818 
i16
 
	$sqlôe3CﬁumnOfIndex
(
Index
 *
pIdx
, 
i16
 
iCﬁ
){

819 
i
;

820 
i
=0; i<
pIdx
->
nCﬁumn
; i++){

821 if–
iCﬁ
==
pIdx
->
aiCﬁumn
[
i
] )  i;

824 
	}
}

842 
	$sqlôe3SèπTabÀ
(

843 
P¨£
 *
pP¨£
,

844 
Tokí
 *
pName1
,

845 
Tokí
 *
pName2
,

846 
isTemp
,

847 
isVõw
,

848 
isVútuÆ
,

849 
noEº


851 
TabÀ
 *
pTabÀ
;

852 *
zName
 = 0;

853 
sqlôe3
 *
db
 = 
pP¨£
->db;

854 
Vdbe
 *
v
;

855 
iDb
;

856 
Tokí
 *
pName
;

858 if–
db
->
öô
.
busy
 && db->öô.
√wTnum
==1 ){

860 
iDb
 = 
db
->
öô
.iDb;

861 
zName
 = 
	`sqlôe3DbSåDup
(
db
, 
	`SCHEMA_TABLE
(
iDb
));

862 
pName
 = 
pName1
;

865 
iDb
 = 
	`sqlôe3TwoP¨tName
(
pP¨£
, 
pName1
, 
pName2
, &
pName
);

866 if–
iDb
<0 ) ;

867 if–!
OMIT_TEMPDB
 && 
isTemp
 && 
pName2
->
n
>0 && 
iDb
!=1 ){

870 
	`sqlôe3Eº‹Msg
(
pP¨£
, "temporaryÅableÇame must be unqualified");

873 if–!
OMIT_TEMPDB
 && 
isTemp
 ) 
iDb
 = 1;

874 
zName
 = 
	`sqlôe3NameFromTokí
(
db
, 
pName
);

876 
pP¨£
->
sNameTokí
 = *
pName
;

877 if–
zName
==0 ) ;

878 if–
SQLITE_OK
!=
	`sqlôe3CheckObje˘Name
(
pP¨£
, 
zName
) ){

879 
begö_èbÀ_îr‹
;

881 if–
db
->
öô
.
iDb
==1 ) 
isTemp
 = 1;

882 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


883 
	`as£π
–
isTemp
==0 || isTemp==1 );

884 
	`as£π
–
isVõw
==0 || isView==1 );

886 c⁄° 
u8
 
aCode
[] = {

887 
SQLITE_CREATE_TABLE
,

888 
SQLITE_CREATE_TEMP_TABLE
,

889 
SQLITE_CREATE_VIEW
,

890 
SQLITE_CREATE_TEMP_VIEW


892 *
zDb
 = 
db
->
aDb
[
iDb
].
zDbSName
;

893 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_INSERT
, 
	`SCHEMA_TABLE
(
isTemp
), 0, 
zDb
) ){

894 
begö_èbÀ_îr‹
;

896 if–!
isVútuÆ
 && 
	`sqlôe3AuthCheck
(
pP¨£
, ()
aCode
[
isTemp
+2*
isVõw
],

897 
zName
, 0, 
zDb
) ){

898 
begö_èbÀ_îr‹
;

910 if–!
IN_DECLARE_VTAB
 ){

911 *
zDb
 = 
db
->
aDb
[
iDb
].
zDbSName
;

912 if–
SQLITE_OK
!=
	`sqlôe3RódSchema
(
pP¨£
) ){

913 
begö_èbÀ_îr‹
;

915 
pTabÀ
 = 
	`sqlôe3FödTabÀ
(
db
, 
zName
, 
zDb
);

916 if–
pTabÀ
 ){

917 if–!
noEº
 ){

918 
	`sqlôe3Eº‹Msg
(
pP¨£
, "èbÀ %TáÃódyÉxi°s", 
pName
);

920 
	`as£π
–!
db
->
öô
.
busy
 || 
CORRUPT_DB
 );

921 
	`sqlôe3CodeVîifySchema
(
pP¨£
, 
iDb
);

923 
begö_èbÀ_îr‹
;

925 if–
	`sqlôe3FödIndex
(
db
, 
zName
, 
zDb
)!=0 ){

926 
	`sqlôe3Eº‹Msg
(
pP¨£
, "thîêi†Æªadyá¿ödexÇamed %s", 
zName
);

927 
begö_èbÀ_îr‹
;

931 
pTabÀ
 = 
	`sqlôe3DbMÆlocZîo
(
db
, (
TabÀ
));

932 if–
pTabÀ
==0 ){

933 
	`as£π
–
db
->
mÆlocFaûed
 );

934 
pP¨£
->
rc
 = 
SQLITE_NOMEM_BKPT
;

935 
pP¨£
->
nEº
++;

936 
begö_èbÀ_îr‹
;

938 
pTabÀ
->
zName
 = zName;

939 
pTabÀ
->
iPKey
 = -1;

940 
pTabÀ
->
pSchema
 = 
db
->
aDb
[
iDb
].pSchema;

941 
pTabÀ
->
nTabRef
 = 1;

942 
pTabÀ
->
nRowLogE°
 = 200; 
	`as£π
–200==
	`sqlôe3LogE°
(1048576) );

943 
	`as£π
–
pP¨£
->
pNewTabÀ
==0 );

944 
pP¨£
->
pNewTabÀ
 = 
pTabÀ
;

950 #i‚de‡
SQLITE_OMIT_AUTOINCREMENT


951 if–!
pP¨£
->
√°ed
 && 
	`°rcmp
(
zName
, "sqlite_sequence")==0 ){

952 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

953 
pTabÀ
->
pSchema
->
pSeqTab
 =ÖTable;

965 if–!
db
->
öô
.
busy
 && (
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
))!=0 ){

966 
addr1
;

967 
fûeF‹m©
;

968 
ªg1
, 
ªg2
, 
ªg3
;

970 c⁄° 
nuŒRow
[] = { 6, 0, 0, 0, 0, 0 };

971 
	`sqlôe3BegöWrôeO≥øti⁄
(
pP¨£
, 1, 
iDb
);

973 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


974 if–
isVútuÆ
 ){

975 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_VBegö
);

982 
ªg1
 = 
pP¨£
->
ªgRowid
 = ++pP¨£->
nMem
;

983 
ªg2
 = 
pP¨£
->
ªgRoŸ
 = ++pP¨£->
nMem
;

984 
ªg3
 = ++
pP¨£
->
nMem
;

985 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_RódCookõ
, 
iDb
, 
ªg3
, 
BTREE_FILE_FORMAT
);

986 
	`sqlôe3VdbeU£sBåì
(
v
, 
iDb
);

987 
addr1
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_If
, 
ªg3
); 
	`VdbeCovîage
(v);

988 
fûeF‹m©
 = (
db
->
Êags
 & 
SQLITE_LegacyFûeFmt
)!=0 ?

989 1 : 
SQLITE_MAX_FILE_FORMAT
;

990 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_SëCookõ
, 
iDb
, 
BTREE_FILE_FORMAT
, 
fûeF‹m©
);

991 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_SëCookõ
, 
iDb
, 
BTREE_TEXT_ENCODING
, 
	`ENC
(
db
));

992 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr1
);

1003 #i‡!
	`deföed
(
SQLITE_OMIT_VIEW
Ë|| !deföed(
SQLITE_OMIT_VIRTUALTABLE
)

1004 if–
isVõw
 || 
isVútuÆ
 ){

1005 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 0, 
ªg2
);

1009 
pP¨£
->
addrCrTab
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Cª©eTabÀ
, 
iDb
, 
ªg2
);

1011 
	`sqlôe3O≥nMa°îTabÀ
(
pP¨£
, 
iDb
);

1012 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NewRowid
, 0, 
ªg1
);

1013 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Blob
, 6, 
ªg3
, 0, 
nuŒRow
, 
P4_STATIC
);

1014 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_In£π
, 0, 
ªg3
, 
ªg1
);

1015 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_APPEND
);

1016 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_Clo£
);

1023 
begö_èbÀ_îr‹
:

1024 
	`sqlôe3DbFªe
(
db
, 
zName
);

1026 
	}
}

1031 #i‡
SQLITE_ENABLE_HIDDEN_COLUMNS


1032 
	$sqlôe3CﬁumnPr›îtõsFromName
(
TabÀ
 *
pTab
, 
Cﬁumn
 *
pCﬁ
){

1033 if–
	`sqlôe3_°∫icmp
(
pCﬁ
->
zName
, "__hidden__", 10)==0 ){

1034 
pCﬁ
->
cﬁFœgs
 |
COLFLAG_HIDDEN
;

1035 }if–
pTab
 && 
pCﬁ
!ıTab->
aCﬁ
 && (pCﬁ[-1].
cﬁFœgs
 & 
COLFLAG_HIDDEN
) ){

1036 
pTab
->
èbFœgs
 |
TF_OOOHiddí
;

1038 
	}
}

1050 
	$sqlôe3AddCﬁumn
(
P¨£
 *
pP¨£
, 
Tokí
 *
pName
, Tokí *
pTy≥
){

1051 
TabÀ
 *
p
;

1052 
i
;

1053 *
z
;

1054 *
zTy≥
;

1055 
Cﬁumn
 *
pCﬁ
;

1056 
sqlôe3
 *
db
 = 
pP¨£
->db;

1057 if–(
p
 = 
pP¨£
->
pNewTabÀ
)==0 ) ;

1058 #i‡
SQLITE_MAX_COLUMN


1059 if–
p
->
nCﬁ
+1>
db
->
aLimô
[
SQLITE_LIMIT_COLUMN
] ){

1060 
	`sqlôe3Eº‹Msg
(
pP¨£
, "toÿm™y cﬁumn†⁄ %s", 
p
->
zName
);

1064 
z
 = 
	`sqlôe3DbMÆlocRaw
(
db
, 
pName
->
n
 + 
pTy≥
->n + 2);

1065 if–
z
==0 ) ;

1066 
	`mem˝y
(
z
, 
pName
->z,ÖName->
n
);

1067 
z
[
pName
->
n
] = 0;

1068 
	`sqlôe3DequŸe
(
z
);

1069 
i
=0; i<
p
->
nCﬁ
; i++){

1070 if–
	`sqlôe3_°ricmp
(
z
, 
p
->
aCﬁ
[
i
].
zName
)==0 ){

1071 
	`sqlôe3Eº‹Msg
(
pP¨£
, "du∂iˇã cﬁum¿«me: %s", 
z
);

1072 
	`sqlôe3DbFªe
(
db
, 
z
);

1076 if–(
p
->
nCﬁ
 & 0x7)==0 ){

1077 
Cﬁumn
 *
aNew
;

1078 
aNew
 = 
	`sqlôe3DbRóŒoc
(
db
,
p
->
aCﬁ
,’->
nCﬁ
+8)*(p->aCol[0]));

1079 if–
aNew
==0 ){

1080 
	`sqlôe3DbFªe
(
db
, 
z
);

1083 
p
->
aCﬁ
 = 
aNew
;

1085 
pCﬁ
 = &
p
->
aCﬁ
[p->
nCﬁ
];

1086 
	`mem£t
(
pCﬁ
, 0, (
p
->
aCﬁ
[0]));

1087 
pCﬁ
->
zName
 = 
z
;

1088 
	`sqlôe3CﬁumnPr›îtõsFromName
(
p
, 
pCﬁ
);

1090 if–
pTy≥
->
n
==0 ){

1093 
pCﬁ
->
afföôy
 = 
SQLITE_AFF_BLOB
;

1094 
pCﬁ
->
szE°
 = 1;

1096 
zTy≥
 = 
z
 + 
	`sqlôe3SåÀn30
(z) + 1;

1097 
	`mem˝y
(
zTy≥
, 
pTy≥
->
z
,ÖTy≥->
n
);

1098 
zTy≥
[
pTy≥
->
n
] = 0;

1099 
	`sqlôe3DequŸe
(
zTy≥
);

1100 
pCﬁ
->
afföôy
 = 
	`sqlôe3AfföôyTy≥
(
zTy≥
, &pCﬁ->
szE°
);

1101 
pCﬁ
->
cﬁFœgs
 |
COLFLAG_HASTYPE
;

1103 
p
->
nCﬁ
++;

1104 
pP¨£
->
c⁄°øötName
.
n
 = 0;

1105 
	}
}

1113 
	$sqlôe3AddNŸNuŒ
(
P¨£
 *
pP¨£
, 
⁄Eº‹
){

1114 
TabÀ
 *
p
;

1115 
p
 = 
pP¨£
->
pNewTabÀ
;

1116 if–
p
==0 || 
	`NEVER
’->
nCﬁ
<1) ) ;

1117 
p
->
aCﬁ
[p->
nCﬁ
-1].
nŸNuŒ
 = (
u8
)
⁄Eº‹
;

1118 
	}
}

1145 
	$sqlôe3AfföôyTy≥
(c⁄° *
zIn
, 
u8
 *
pszE°
){

1146 
u32
 
h
 = 0;

1147 
aff
 = 
SQLITE_AFF_NUMERIC
;

1148 c⁄° *
zCh¨
 = 0;

1150 
	`as£π
–
zIn
!=0 );

1151  
zIn
[0] ){

1152 
h
 = (h<<8Ë+ 
sqlôe3UµîToLowî
[(*
zIn
)&0xff];

1153 
zIn
++;

1154 if–
h
==(('c'<<24)+('h'<<16)+('a'<<8)+'r') ){

1155 
aff
 = 
SQLITE_AFF_TEXT
;

1156 
zCh¨
 = 
zIn
;

1157 }if–
h
==(('c'<<24)+('l'<<16)+('o'<<8)+'b') ){

1158 
aff
 = 
SQLITE_AFF_TEXT
;

1159 }if–
h
==(('t'<<24)+('e'<<16)+('x'<<8)+'t') ){

1160 
aff
 = 
SQLITE_AFF_TEXT
;

1161 }if–
h
==(('b'<<24)+('l'<<16)+('o'<<8)+'b')

1162 && (
aff
==
SQLITE_AFF_NUMERIC
 ||áff==
SQLITE_AFF_REAL
) ){

1163 
aff
 = 
SQLITE_AFF_BLOB
;

1164 if–
zIn
[0]=='(' ) 
zCh¨
 = zIn;

1165 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


1166 }if–
h
==(('r'<<24)+('e'<<16)+('a'<<8)+'l')

1167 && 
aff
==
SQLITE_AFF_NUMERIC
 ){

1168 
aff
 = 
SQLITE_AFF_REAL
;

1169 }if–
h
==(('f'<<24)+('l'<<16)+('o'<<8)+'a')

1170 && 
aff
==
SQLITE_AFF_NUMERIC
 ){

1171 
aff
 = 
SQLITE_AFF_REAL
;

1172 }if–
h
==(('d'<<24)+('o'<<16)+('u'<<8)+'b')

1173 && 
aff
==
SQLITE_AFF_NUMERIC
 ){

1174 
aff
 = 
SQLITE_AFF_REAL
;

1176 }if–(
h
&0x00FFFFFF)==(('i'<<16)+('n'<<8)+'t') ){

1177 
aff
 = 
SQLITE_AFF_INTEGER
;

1184 if–
pszE°
 ){

1185 *
pszE°
 = 1;

1186 if–
aff
<
SQLITE_AFF_NUMERIC
 ){

1187 if–
zCh¨
 ){

1188  
zCh¨
[0] ){

1189 if–
	`sqlôe3Isdigô
(
zCh¨
[0]) ){

1190 
v
 = 0;

1191 
	`sqlôe3GëI¡32
(
zCh¨
, &
v
);

1192 
v
 = v/4 + 1;

1193 if–
v
>255 ) v = 255;

1194 *
pszE°
 = 
v
;

1197 
zCh¨
++;

1200 *
pszE°
 = 5;

1204  
aff
;

1205 
	}
}

1217 
	$sqlôe3AddDeÁu…VÆue
(
P¨£
 *
pP¨£
, 
Ex¥S∑n
 *
pS∑n
){

1218 
TabÀ
 *
p
;

1219 
Cﬁumn
 *
pCﬁ
;

1220 
sqlôe3
 *
db
 = 
pP¨£
->db;

1221 
p
 = 
pP¨£
->
pNewTabÀ
;

1222 if–
p
!=0 ){

1223 
pCﬁ
 = &(
p
->
aCﬁ
[p->
nCﬁ
-1]);

1224 if–!
	`sqlôe3Ex¥IsC⁄°™tOrFun˘i⁄
(
pS∑n
->
pEx¥
, 
db
->
öô
.
busy
) ){

1225 
	`sqlôe3Eº‹Msg
(
pP¨£
, "default value of column [%s] isÇot constant",

1226 
pCﬁ
->
zName
);

1232 
Ex¥
 
x
;

1233 
	`sqlôe3Ex¥Dñëe
(
db
, 
pCﬁ
->
pDÊt
);

1234 
	`mem£t
(&
x
, 0, (x));

1235 
x
.
›
 = 
TK_SPAN
;

1236 
x
.
u
.
zTokí
 = 
	`sqlôe3DbSåNDup
(
db
, (*)
pS∑n
->
zSèπ
,

1237 ()(
pS∑n
->
zEnd
 -ÖS∑n->
zSèπ
));

1238 
x
.
pLe·
 = 
pS∑n
->
pEx¥
;

1239 
x
.
Êags
 = 
EP_Skù
;

1240 
pCﬁ
->
pDÊt
 = 
	`sqlôe3Ex¥Dup
(
db
, &
x
, 
EXPRDUP_REDUCE
);

1241 
	`sqlôe3DbFªe
(
db
, 
x
.
u
.
zTokí
);

1244 
	`sqlôe3Ex¥Dñëe
(
db
, 
pS∑n
->
pEx¥
);

1245 
	}
}

1263 
	$sqlôe3SåögToId
(
Ex¥
 *
p
){

1264 if–
p
->
›
==
TK_STRING
 ){

1265 
p
->
›
 = 
TK_ID
;

1266 }if–
p
->
›
==
TK_COLLATE
 &&Ö->
pLe·
->›==
TK_STRING
 ){

1267 
p
->
pLe·
->
›
 = 
TK_ID
;

1269 
	}
}

1289 
	$sqlôe3AddPrim¨yKey
(

1290 
P¨£
 *
pP¨£
,

1291 
Ex¥Li°
 *
pLi°
,

1292 
⁄Eº‹
,

1293 
autoInc
,

1294 
s‹tOrdî


1296 
TabÀ
 *
pTab
 = 
pP¨£
->
pNewTabÀ
;

1297 
Cﬁumn
 *
pCﬁ
 = 0;

1298 
iCﬁ
 = -1, 
i
;

1299 
nTîm
;

1300 if–
pTab
==0 ) 
¥im¨y_key_exô
;

1301 if–
pTab
->
èbFœgs
 & 
TF_HasPrim¨yKey
 ){

1302 
	`sqlôe3Eº‹Msg
(
pP¨£
,

1303 "èbÀ \"%s\" ha†m‹êth™ o√Örim¨y key", 
pTab
->
zName
);

1304 
¥im¨y_key_exô
;

1306 
pTab
->
èbFœgs
 |
TF_HasPrim¨yKey
;

1307 if–
pLi°
==0 ){

1308 
iCﬁ
 = 
pTab
->
nCﬁ
 - 1;

1309 
pCﬁ
 = &
pTab
->
aCﬁ
[
iCﬁ
];

1310 
pCﬁ
->
cﬁFœgs
 |
COLFLAG_PRIMKEY
;

1311 
nTîm
 = 1;

1313 
nTîm
 = 
pLi°
->
nEx¥
;

1314 
i
=0; i<
nTîm
; i++){

1315 
Ex¥
 *
pCEx¥
 = 
	`sqlôe3Ex¥SkùCﬁœã
(
pLi°
->
a
[
i
].
pEx¥
);

1316 
	`as£π
–
pCEx¥
!=0 );

1317 
	`sqlôe3SåögToId
(
pCEx¥
);

1318 if–
pCEx¥
->
›
==
TK_ID
 ){

1319 c⁄° *
zCName
 = 
pCEx¥
->
u
.
zTokí
;

1320 
iCﬁ
=0; iCﬁ<
pTab
->
nCﬁ
; iCol++){

1321 if–
	`sqlôe3SåICmp
(
zCName
, 
pTab
->
aCﬁ
[
iCﬁ
].
zName
)==0 ){

1322 
pCﬁ
 = &
pTab
->
aCﬁ
[
iCﬁ
];

1323 
pCﬁ
->
cﬁFœgs
 |
COLFLAG_PRIMKEY
;

1330 if–
nTîm
==1

1331 && 
pCﬁ


1332 && 
	`sqlôe3SåICmp
(
	`sqlôe3CﬁumnTy≥
(
pCﬁ
,""), "INTEGER")==0

1333 && 
s‹tOrdî
!=
SQLITE_SO_DESC


1335 
pTab
->
iPKey
 = 
iCﬁ
;

1336 
pTab
->
keyC⁄f
 = (
u8
)
⁄Eº‹
;

1337 
	`as£π
–
autoInc
==0 ||áutoInc==1 );

1338 
pTab
->
èbFœgs
 |
autoInc
*
TF_Autoö¸emít
;

1339 if–
pLi°
 ) 
pP¨£
->
iPkS‹tOrdî
 =ÖLi°->
a
[0].
s‹tOrdî
;

1340 }if–
autoInc
 ){

1341 #i‚de‡
SQLITE_OMIT_AUTOINCREMENT


1342 
	`sqlôe3Eº‹Msg
(
pP¨£
, "AUTOINCREMENT is onlyállowed onán "

1346 
	`sqlôe3Cª©eIndex
(
pP¨£
, 0, 0, 0, 
pLi°
, 
⁄Eº‹
, 0,

1347 0, 
s‹tOrdî
, 0, 
SQLITE_IDXTYPE_PRIMARYKEY
);

1348 
pLi°
 = 0;

1351 
¥im¨y_key_exô
:

1352 
	`sqlôe3Ex¥Li°Dñëe
(
pP¨£
->
db
, 
pLi°
);

1354 
	}
}

1359 
	$sqlôe3AddCheckC⁄°øöt
(

1360 
P¨£
 *
pP¨£
,

1361 
Ex¥
 *
pCheckEx¥


1363 #i‚de‡
SQLITE_OMIT_CHECK


1364 
TabÀ
 *
pTab
 = 
pP¨£
->
pNewTabÀ
;

1365 
sqlôe3
 *
db
 = 
pP¨£
->db;

1366 if–
pTab
 && !
IN_DECLARE_VTAB


1367 && !
	`sqlôe3BåìIsRód⁄ly
(
db
->
aDb
[db->
öô
.
iDb
].
pBt
)

1369 
pTab
->
pCheck
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
,ÖTab->pCheck, 
pCheckEx¥
);

1370 if–
pP¨£
->
c⁄°øötName
.
n
 ){

1371 
	`sqlôe3Ex¥Li°SëName
(
pP¨£
, 
pTab
->
pCheck
, &pP¨£->
c⁄°øötName
, 1);

1376 
	`sqlôe3Ex¥Dñëe
(
pP¨£
->
db
, 
pCheckEx¥
);

1378 
	}
}

1384 
	$sqlôe3AddCﬁœãTy≥
(
P¨£
 *
pP¨£
, 
Tokí
 *
pTokí
){

1385 
TabÀ
 *
p
;

1386 
i
;

1387 *
zCﬁl
;

1388 
sqlôe3
 *
db
;

1390 if–(
p
 = 
pP¨£
->
pNewTabÀ
)==0 ) ;

1391 
i
 = 
p
->
nCﬁ
-1;

1392 
db
 = 
pP¨£
->db;

1393 
zCﬁl
 = 
	`sqlôe3NameFromTokí
(
db
, 
pTokí
);

1394 if–!
zCﬁl
 ) ;

1396 if–
	`sqlôe3LoˇãCﬁlSeq
(
pP¨£
, 
zCﬁl
) ){

1397 
Index
 *
pIdx
;

1398 
	`sqlôe3DbFªe
(
db
, 
p
->
aCﬁ
[
i
].
zCﬁl
);

1399 
p
->
aCﬁ
[
i
].
zCﬁl
 = zColl;

1405 
pIdx
=
p
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
){

1406 
	`as£π
–
pIdx
->
nKeyCﬁ
==1 );

1407 if–
pIdx
->
aiCﬁumn
[0]==
i
 ){

1408 
pIdx
->
azCﬁl
[0] = 
p
->
aCﬁ
[
i
].
zCﬁl
;

1412 
	`sqlôe3DbFªe
(
db
, 
zCﬁl
);

1414 
	}
}

1436 
CﬁlSeq
 *
	$sqlôe3LoˇãCﬁlSeq
(
P¨£
 *
pP¨£
, c⁄° *
zName
){

1437 
sqlôe3
 *
db
 = 
pP¨£
->db;

1438 
u8
 
íc
 = 
	`ENC
(
db
);

1439 
u8
 
öôbusy
 = 
db
->
öô
.
busy
;

1440 
CﬁlSeq
 *
pCﬁl
;

1442 
pCﬁl
 = 
	`sqlôe3FödCﬁlSeq
(
db
, 
íc
, 
zName
, 
öôbusy
);

1443 if–!
öôbusy
 && (!
pCﬁl
 || !pCﬁl->
xCmp
) ){

1444 
pCﬁl
 = 
	`sqlôe3GëCﬁlSeq
(
pP¨£
, 
íc
,ÖCﬁl, 
zName
);

1447  
pCﬁl
;

1448 
	}
}

1470 
	$sqlôe3Ch™geCookõ
(
P¨£
 *
pP¨£
, 
iDb
){

1471 
sqlôe3
 *
db
 = 
pP¨£
->db;

1472 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

1473 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

1474 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_SëCookõ
, 
iDb
, 
BTREE_SCHEMA_VERSION
,

1475 
db
->
aDb
[
iDb
].
pSchema
->
schema_cookõ
+1);

1476 
	}
}

1486 
	$idítLígth
(c⁄° *
z
){

1487 
n
;

1488 
n
=0; *
z
;Ç++, z++){

1489 if–*
z
=='"' ){ 
n
++; }

1491  
n
 + 2;

1492 
	}
}

1507 
	$idítPut
(*
z
, *
pIdx
, *
zSig√dIdít
){

1508 *
zIdít
 = (*)
zSig√dIdít
;

1509 
i
, 
j
, 
√edQuŸe
;

1510 
i
 = *
pIdx
;

1512 
j
=0; 
zIdít
[j]; j++){

1513 if–!
	`sqlôe3Iß um
(
zIdít
[
j
]) && zIdent[j]!='_' ) ;

1515 
√edQuŸe
 = 
	`sqlôe3Isdigô
(
zIdít
[0])

1516 || 
	`sqlôe3Keyw‹dCode
(
zIdít
, 
j
)!=
TK_ID


1517 || 
zIdít
[
j
]!=0

1518 || 
j
==0;

1520 if–
√edQuŸe
 ) 
z
[
i
++] = '"';

1521 
j
=0; 
zIdít
[j]; j++){

1522 
z
[
i
++] = 
zIdít
[
j
];

1523 if–
zIdít
[
j
]=='"' ) 
z
[
i
++] = '"';

1525 if–
√edQuŸe
 ) 
z
[
i
++] = '"';

1526 
z
[
i
] = 0;

1527 *
pIdx
 = 
i
;

1528 
	}
}

1535 *
	$¸óãTabÀStmt
(
sqlôe3
 *
db
, 
TabÀ
 *
p
){

1536 
i
, 
k
, 
n
;

1537 *
zStmt
;

1538 *
zSï
, *
zSï2
, *
zEnd
;

1539 
Cﬁumn
 *
pCﬁ
;

1540 
n
 = 0;

1541 
pCﬁ
 = 
p
->
aCﬁ
, 
i
=0; i<p->
nCﬁ
; i++,ÖCol++){

1542 
n
 +
	`idítLígth
(
pCﬁ
->
zName
) + 5;

1544 
n
 +
	`idítLígth
(
p
->
zName
);

1545 if–
n
<50 ){

1546 
zSï
 = "";

1547 
zSï2
 = ",";

1548 
zEnd
 = ")";

1550 
zSï
 = "\n ";

1551 
zSï2
 = ",\n ";

1552 
zEnd
 = "\n)";

1554 
n
 +35 + 6*
p
->
nCﬁ
;

1555 
zStmt
 = 
	`sqlôe3DbMÆlocRaw
(0, 
n
);

1556 if–
zStmt
==0 ){

1557 
	`sqlôe3OomFau…
(
db
);

1560 
	`sqlôe3_¢¥ötf
(
n
, 
zStmt
, "CREATE TABLE ");

1561 
k
 = 
	`sqlôe3SåÀn30
(
zStmt
);

1562 
	`idítPut
(
zStmt
, &
k
, 
p
->
zName
);

1563 
zStmt
[
k
++] = '(';

1564 
pCﬁ
=
p
->
aCﬁ
, 
i
=0; i<p->
nCﬁ
; i++,ÖCol++){

1565 c⁄° * c⁄° 
azTy≥
[] = {

1572 
Àn
;

1573 c⁄° *
zTy≥
;

1575 
	`sqlôe3_¢¥ötf
(
n
-
k
, &
zStmt
[k], 
zSï
);

1576 
k
 +
	`sqlôe3SåÀn30
(&
zStmt
[k]);

1577 
zSï
 = 
zSï2
;

1578 
	`idítPut
(
zStmt
, &
k
, 
pCﬁ
->
zName
);

1579 
	`as£π
–
pCﬁ
->
afföôy
-
SQLITE_AFF_BLOB
 >= 0 );

1580 
	`as£π
–
pCﬁ
->
afföôy
-
SQLITE_AFF_BLOB
 < 
	`AºaySize
(
azTy≥
) );

1581 
	`ã°ˇ£
–
pCﬁ
->
afföôy
==
SQLITE_AFF_BLOB
 );

1582 
	`ã°ˇ£
–
pCﬁ
->
afföôy
==
SQLITE_AFF_TEXT
 );

1583 
	`ã°ˇ£
–
pCﬁ
->
afföôy
==
SQLITE_AFF_NUMERIC
 );

1584 
	`ã°ˇ£
–
pCﬁ
->
afföôy
==
SQLITE_AFF_INTEGER
 );

1585 
	`ã°ˇ£
–
pCﬁ
->
afföôy
==
SQLITE_AFF_REAL
 );

1587 
zTy≥
 = 
azTy≥
[
pCﬁ
->
afföôy
 - 
SQLITE_AFF_BLOB
];

1588 
Àn
 = 
	`sqlôe3SåÀn30
(
zTy≥
);

1589 
	`as£π
–
pCﬁ
->
afföôy
==
SQLITE_AFF_BLOB


1590 || 
pCﬁ
->
afföôy
==
	`sqlôe3AfföôyTy≥
(
zTy≥
, 0) );

1591 
	`mem˝y
(&
zStmt
[
k
], 
zTy≥
, 
Àn
);

1592 
k
 +
Àn
;

1593 
	`as£π
–
k
<=
n
 );

1595 
	`sqlôe3_¢¥ötf
(
n
-
k
, &
zStmt
[k], "%s", 
zEnd
);

1596  
zStmt
;

1597 
	}
}

1603 
	$ªsizeIndexObje˘
(
sqlôe3
 *
db
, 
Index
 *
pIdx
, 
N
){

1604 *
zExåa
;

1605 
nByã
;

1606 if–
pIdx
->
nCﬁumn
>=
N
 )  
SQLITE_OK
;

1607 
	`as£π
–
pIdx
->
isResized
==0 );

1608 
nByã
 = ((*Ë+ (
i16
Ë+ 1)*
N
;

1609 
zExåa
 = 
	`sqlôe3DbMÆlocZîo
(
db
, 
nByã
);

1610 if–
zExåa
==0 )  
SQLITE_NOMEM_BKPT
;

1611 
	`mem˝y
(
zExåa
, 
pIdx
->
azCﬁl
, (*)*pIdx->
nCﬁumn
);

1612 
pIdx
->
azCﬁl
 = (c⁄° **)
zExåa
;

1613 
zExåa
 +(*)*
N
;

1614 
	`mem˝y
(
zExåa
, 
pIdx
->
aiCﬁumn
, (
i16
)*pIdx->
nCﬁumn
);

1615 
pIdx
->
aiCﬁumn
 = (
i16
*)
zExåa
;

1616 
zExåa
 +(
i16
)*
N
;

1617 
	`mem˝y
(
zExåa
, 
pIdx
->
aS‹tOrdî
,ÖIdx->
nCﬁumn
);

1618 
pIdx
->
aS‹tOrdî
 = (
u8
*)
zExåa
;

1619 
pIdx
->
nCﬁumn
 = 
N
;

1620 
pIdx
->
isResized
 = 1;

1621  
SQLITE_OK
;

1622 
	}
}

1627 
	$e°im©eTabÀWidth
(
TabÀ
 *
pTab
){

1628 
wTabÀ
 = 0;

1629 c⁄° 
Cﬁumn
 *
pTabCﬁ
;

1630 
i
;

1631 
i
=
pTab
->
nCﬁ
, 
pTabCﬁ
ıTab->
aCﬁ
; i>0; i--,ÖTabCol++){

1632 
wTabÀ
 +
pTabCﬁ
->
szE°
;

1634 if–
pTab
->
iPKey
<0 ) 
wTabÀ
++;

1635 
pTab
->
szTabRow
 = 
	`sqlôe3LogE°
(
wTabÀ
*4);

1636 
	}
}

1641 
	$e°im©eIndexWidth
(
Index
 *
pIdx
){

1642 
wIndex
 = 0;

1643 
i
;

1644 c⁄° 
Cﬁumn
 *
aCﬁ
 = 
pIdx
->
pTabÀ
->aCol;

1645 
i
=0; i<
pIdx
->
nCﬁumn
; i++){

1646 
i16
 
x
 = 
pIdx
->
aiCﬁumn
[
i
];

1647 
	`as£π
–
x
<
pIdx
->
pTabÀ
->
nCﬁ
 );

1648 
wIndex
 +
x
<0 ? 1 : 
aCﬁ
[
pIdx
->
aiCﬁumn
[
i
]].
szE°
;

1650 
pIdx
->
szIdxRow
 = 
	`sqlôe3LogE°
(
wIndex
*4);

1651 
	}
}

1655 
	$hasCﬁumn
(c⁄° 
i16
 *
aiCﬁ
, 
nCﬁ
, 
x
){

1656  
nCﬁ
-- > 0 ) if–
x
==*(
aiCﬁ
++) )  1;

1658 
	}
}

1685 
	$c⁄vîtToWôhoutRowidTabÀ
(
P¨£
 *
pP¨£
, 
TabÀ
 *
pTab
){

1686 
Index
 *
pIdx
;

1687 
Index
 *
pPk
;

1688 
nPk
;

1689 
i
, 
j
;

1690 
sqlôe3
 *
db
 = 
pP¨£
->db;

1691 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

1695 if–!
db
->
öô
.
impo°îTabÀ
 ){

1696 
i
=0; i<
pTab
->
nCﬁ
; i++){

1697 if–(
pTab
->
aCﬁ
[
i
].
cﬁFœgs
 & 
COLFLAG_PRIMKEY
)!=0 ){

1698 
pTab
->
aCﬁ
[
i
].
nŸNuŒ
 = 
OE_Ab‹t
;

1705 if–
IN_DECLARE_VTAB
 ) ;

1711 if–
pP¨£
->
addrCrTab
 ){

1712 
	`as£π
–
v
 );

1713 
	`sqlôe3VdbeCh™geOpcode
(
v
, 
pP¨£
->
addrCrTab
, 
OP_Cª©eIndex
);

1719 if–
pTab
->
iPKey
>=0 ){

1720 
Ex¥Li°
 *
pLi°
;

1721 
Tokí
 
ùkTokí
;

1722 
	`sqlôe3TokíInô
(&
ùkTokí
, 
pTab
->
aCﬁ
[pTab->
iPKey
].
zName
);

1723 
pLi°
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
, 0,

1724 
	`sqlôe3Ex¥AŒoc
(
db
, 
TK_ID
, &
ùkTokí
, 0));

1725 if–
pLi°
==0 ) ;

1726 
pLi°
->
a
[0].
s‹tOrdî
 = 
pP¨£
->
iPkS‹tOrdî
;

1727 
	`as£π
–
pP¨£
->
pNewTabÀ
==
pTab
 );

1728 
	`sqlôe3Cª©eIndex
(
pP¨£
, 0, 0, 0, 
pLi°
, 
pTab
->
keyC⁄f
, 0, 0, 0, 0,

1729 
SQLITE_IDXTYPE_PRIMARYKEY
);

1730 if–
db
->
mÆlocFaûed
 ) ;

1731 
pPk
 = 
	`sqlôe3Prim¨yKeyIndex
(
pTab
);

1732 
pTab
->
iPKey
 = -1;

1734 
pPk
 = 
	`sqlôe3Prim¨yKeyIndex
(
pTab
);

1740 if–
v
 ){

1741 
	`as£π
–
db
->
öô
.
busy
==0 );

1742 
	`sqlôe3VdbeCh™geOpcode
(
v
, 
pPk
->
äum
, 
OP_GŸo
);

1750 
i
=
j
=1; i<
pPk
->
nKeyCﬁ
; i++){

1751 if–
	`hasCﬁumn
(
pPk
->
aiCﬁumn
, 
j
,ÖPk->aiCﬁumn[
i
]) ){

1752 
pPk
->
nCﬁumn
--;

1754 
pPk
->
aiCﬁumn
[
j
++] =ÖPk->aiCﬁumn[
i
];

1757 
pPk
->
nKeyCﬁ
 = 
j
;

1759 
	`as£π
–
pPk
!=0 );

1760 
pPk
->
isCovîög
 = 1;

1761 if–!
db
->
öô
.
impo°îTabÀ
 ) 
pPk
->
uniqNŸNuŒ
 = 1;

1762 
nPk
 = 
pPk
->
nKeyCﬁ
;

1765 
pPk
->
äum
 = 
pTab
->tnum;

1770 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
){

1771 
n
;

1772 if–
	`IsPrim¨yKeyIndex
(
pIdx
) ) ;

1773 
i
=
n
=0; i<
nPk
; i++){

1774 if–!
	`hasCﬁumn
(
pIdx
->
aiCﬁumn
,ÖIdx->
nKeyCﬁ
, 
pPk
->aiCﬁumn[
i
]ËË
n
++;

1776 if–
n
==0 ){

1778 
pIdx
->
nCﬁumn
 =ÖIdx->
nKeyCﬁ
;

1781 if–
	`ªsizeIndexObje˘
(
db
, 
pIdx
,ÖIdx->
nKeyCﬁ
+
n
) ) ;

1782 
i
=0, 
j
=
pIdx
->
nKeyCﬁ
; i<
nPk
; i++){

1783 if–!
	`hasCﬁumn
(
pIdx
->
aiCﬁumn
,ÖIdx->
nKeyCﬁ
, 
pPk
->aiCﬁumn[
i
]) ){

1784 
pIdx
->
aiCﬁumn
[
j
] = 
pPk
->aiCﬁumn[
i
];

1785 
pIdx
->
azCﬁl
[
j
] = 
pPk
->azCﬁl[
i
];

1786 
j
++;

1789 
	`as£π
–
pIdx
->
nCﬁumn
>ıIdx->
nKeyCﬁ
+
n
 );

1790 
	`as£π
–
pIdx
->
nCﬁumn
>=
j
 );

1795 if–
nPk
<
pTab
->
nCﬁ
 ){

1796 if–
	`ªsizeIndexObje˘
(
db
, 
pPk
, 
pTab
->
nCﬁ
) ) ;

1797 
i
=0, 
j
=
nPk
; i<
pTab
->
nCﬁ
; i++){

1798 if–!
	`hasCﬁumn
(
pPk
->
aiCﬁumn
, 
j
, 
i
) ){

1799 
	`as£π
–
j
<
pPk
->
nCﬁumn
 );

1800 
pPk
->
aiCﬁumn
[
j
] = 
i
;

1801 
pPk
->
azCﬁl
[
j
] = 
sqlôe3SåBINARY
;

1802 
j
++;

1805 
	`as£π
–
pPk
->
nCﬁumn
==
j
 );

1806 
	`as£π
–
pTab
->
nCﬁ
==
j
 );

1808 
pPk
->
nCﬁumn
 = 
pTab
->
nCﬁ
;

1810 
	}
}

1832 
	$sqlôe3EndTabÀ
(

1833 
P¨£
 *
pP¨£
,

1834 
Tokí
 *
pC⁄s
,

1835 
Tokí
 *
pEnd
,

1836 
u8
 
èbO±s
,

1837 
Sñe˘
 *
pSñe˘


1839 
TabÀ
 *
p
;

1840 
sqlôe3
 *
db
 = 
pP¨£
->db;

1841 
iDb
;

1842 
Index
 *
pIdx
;

1844 if–
pEnd
==0 && 
pSñe˘
==0 ){

1847 
	`as£π
–!
db
->
mÆlocFaûed
 );

1848 
p
 = 
pP¨£
->
pNewTabÀ
;

1849 if–
p
==0 ) ;

1851 
	`as£π
–!
db
->
öô
.
busy
 || !
pSñe˘
 );

1862 if–
db
->
öô
.
busy
 ){

1863 
p
->
äum
 = 
db
->
öô
.
√wTnum
;

1864 if–
p
->
äum
==1 )Ö->
èbFœgs
 |
TF_Ród⁄ly
;

1868 if–
èbO±s
 & 
TF_WôhoutRowid
 ){

1869 if–(
p
->
èbFœgs
 & 
TF_Autoö¸emít
) ){

1870 
	`sqlôe3Eº‹Msg
(
pP¨£
,

1874 if–(
p
->
èbFœgs
 & 
TF_HasPrim¨yKey
)==0 ){

1875 
	`sqlôe3Eº‹Msg
(
pP¨£
, "PRIMARY KEY missög o¿èbÀ %s", 
p
->
zName
);

1877 
p
->
èbFœgs
 |
TF_WôhoutRowid
 | 
TF_NoVisibÀRowid
;

1878 
	`c⁄vîtToWôhoutRowidTabÀ
(
pP¨£
, 
p
);

1882 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
p
->
pSchema
);

1884 #i‚de‡
SQLITE_OMIT_CHECK


1887 if–
p
->
pCheck
 ){

1888 
	`sqlôe3ResﬁveSñfRe„ªn˚
(
pP¨£
, 
p
, 
NC_IsCheck
, 0,Ö->
pCheck
);

1893 
	`e°im©eTabÀWidth
(
p
);

1894 
pIdx
=
p
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
){

1895 
	`e°im©eIndexWidth
(
pIdx
);

1904 if–!
db
->
öô
.
busy
 ){

1905 
n
;

1906 
Vdbe
 *
v
;

1907 *
zTy≥
;

1908 *
zTy≥2
;

1909 *
zStmt
;

1911 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

1912 if–
	`NEVER
(
v
==0) ) ;

1914 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Clo£
, 0);

1919 if–
p
->
pSñe˘
==0 ){

1921 
zTy≥
 = "table";

1922 
zTy≥2
 = "TABLE";

1923 #i‚de‡
SQLITE_OMIT_VIEW


1926 
zTy≥
 = "view";

1927 
zTy≥2
 = "VIEW";

1944 if–
pSñe˘
 ){

1945 
Sñe˘De°
 
de°
;

1946 
ªgYõld
;

1947 
addrT›
;

1948 
ªgRec
;

1949 
ªgRowid
;

1950 
addrInsLo›
;

1951 
TabÀ
 *
pSñTab
;

1953 
ªgYõld
 = ++
pP¨£
->
nMem
;

1954 
ªgRec
 = ++
pP¨£
->
nMem
;

1955 
ªgRowid
 = ++
pP¨£
->
nMem
;

1956 
	`as£π
(
pP¨£
->
nTab
==1);

1957 
	`sqlôe3MayAb‹t
(
pP¨£
);

1958 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_O≥nWrôe
, 1, 
pP¨£
->
ªgRoŸ
, 
iDb
);

1959 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_P2ISREG
);

1960 
pP¨£
->
nTab
 = 2;

1961 
addrT›
 = 
	`sqlôe3VdbeCuºítAddr
(
v
) + 1;

1962 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_InôC‹outöe
, 
ªgYõld
, 0, 
addrT›
);

1963 
	`sqlôe3Sñe˘De°Inô
(&
de°
, 
SRT_C‹outöe
, 
ªgYõld
);

1964 
	`sqlôe3Sñe˘
(
pP¨£
, 
pSñe˘
, &
de°
);

1965 
	`sqlôe3VdbeEndC‹outöe
(
v
, 
ªgYõld
);

1966 
	`sqlôe3VdbeJumpHîe
(
v
, 
addrT›
 - 1);

1967 if–
pP¨£
->
nEº
 ) ;

1968 
pSñTab
 = 
	`sqlôe3Resu…SëOfSñe˘
(
pP¨£
, 
pSñe˘
);

1969 if–
pSñTab
==0 ) ;

1970 
	`as£π
–
p
->
aCﬁ
==0 );

1971 
p
->
nCﬁ
 = 
pSñTab
->nCol;

1972 
p
->
aCﬁ
 = 
pSñTab
->aCol;

1973 
pSñTab
->
nCﬁ
 = 0;

1974 
pSñTab
->
aCﬁ
 = 0;

1975 
	`sqlôe3DñëeTabÀ
(
db
, 
pSñTab
);

1976 
addrInsLo›
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Yõld
, 
de°
.
iSDP¨m
);

1977 
	`VdbeCovîage
(
v
);

1978 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MakeRec‹d
, 
de°
.
iSd°
, de°.
nSd°
, 
ªgRec
);

1979 
	`sqlôe3TabÀAfföôy
(
v
, 
p
, 0);

1980 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NewRowid
, 1, 
ªgRowid
);

1981 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_In£π
, 1, 
ªgRec
, 
ªgRowid
);

1982 
	`sqlôe3VdbeGŸo
(
v
, 
addrInsLo›
);

1983 
	`sqlôe3VdbeJumpHîe
(
v
, 
addrInsLo›
);

1984 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Clo£
, 1);

1988 if–
pSñe˘
 ){

1989 
zStmt
 = 
	`¸óãTabÀStmt
(
db
, 
p
);

1991 
Tokí
 *
pEnd2
 = 
èbO±s
 ? &
pP¨£
->
sLa°Tokí
 : 
pEnd
;

1992 
n
 = ()(
pEnd2
->
z
 - 
pP¨£
->
sNameTokí
.z);

1993 if–
pEnd2
->
z
[0]!=';' ) 
n
 +=ÖEnd2->n;

1994 
zStmt
 = 
	`sqlôe3MPrötf
(
db
,

1995 "CREATE %†%.*s", 
zTy≥2
, 
n
, 
pP¨£
->
sNameTokí
.
z


2003 
	`sqlôe3Ne°edP¨£
(
pP¨£
,

2007 
db
->
aDb
[
iDb
].
zDbSName
, 
MASTER_NAME
,

2008 
zTy≥
,

2009 
p
->
zName
,

2010 
p
->
zName
,

2011 
pP¨£
->
ªgRoŸ
,

2012 
zStmt
,

2013 
pP¨£
->
ªgRowid


2015 
	`sqlôe3DbFªe
(
db
, 
zStmt
);

2016 
	`sqlôe3Ch™geCookõ
(
pP¨£
, 
iDb
);

2018 #i‚de‡
SQLITE_OMIT_AUTOINCREMENT


2022 if–(
p
->
èbFœgs
 & 
TF_Autoö¸emít
)!=0 ){

2023 
Db
 *
pDb
 = &
db
->
aDb
[
iDb
];

2024 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

2025 if–
pDb
->
pSchema
->
pSeqTab
==0 ){

2026 
	`sqlôe3Ne°edP¨£
(
pP¨£
,

2028 
pDb
->
zDbSName


2035 
	`sqlôe3VdbeAddP¨£SchemaOp
(
v
, 
iDb
,

2036 
	`sqlôe3MPrötf
(
db
, "tbl_«me='%q' ANDÅy≥!='åiggî'", 
p
->
zName
));

2042 if–
db
->
öô
.
busy
 ){

2043 
TabÀ
 *
pOld
;

2044 
Schema
 *
pSchema
 = 
p
->pSchema;

2045 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

2046 
pOld
 = 
	`sqlôe3HashIn£π
(&
pSchema
->
tblHash
, 
p
->
zName
,Ö);

2047 if–
pOld
 ){

2048 
	`as£π
–
p
==
pOld
 );

2049 
	`sqlôe3OomFau…
(
db
);

2052 
pP¨£
->
pNewTabÀ
 = 0;

2053 
db
->
Êags
 |
SQLITE_I¡înCh™ges
;

2055 #i‚de‡
SQLITE_OMIT_ALTERTABLE


2056 if–!
p
->
pSñe˘
 ){

2057 c⁄° *
zName
 = (c⁄° *)
pP¨£
->
sNameTokí
.
z
;

2058 
nName
;

2059 
	`as£π
–!
pSñe˘
 && 
pC⁄s
 && 
pEnd
 );

2060 if–
pC⁄s
->
z
==0 ){

2061 
pC⁄s
 = 
pEnd
;

2063 
nName
 = ()((c⁄° *)
pC⁄s
->
z
 - 
zName
);

2064 
p
->
addCﬁOff£t
 = 13 + 
	`sqlôe3Utf8Ch¨Lí
(
zName
, 
nName
);

2068 
	}
}

2070 #i‚de‡
SQLITE_OMIT_VIEW


2074 
	$sqlôe3Cª©eVõw
(

2075 
P¨£
 *
pP¨£
,

2076 
Tokí
 *
pBegö
,

2077 
Tokí
 *
pName1
,

2078 
Tokí
 *
pName2
,

2079 
Ex¥Li°
 *
pCNames
,

2080 
Sñe˘
 *
pSñe˘
,

2081 
isTemp
,

2082 
noEº


2084 
TabÀ
 *
p
;

2085 
n
;

2086 c⁄° *
z
;

2087 
Tokí
 
sEnd
;

2088 
DbFixî
 
sFix
;

2089 
Tokí
 *
pName
 = 0;

2090 
iDb
;

2091 
sqlôe3
 *
db
 = 
pP¨£
->db;

2093 if–
pP¨£
->
nV¨
>0 ){

2094 
	`sqlôe3Eº‹Msg
(
pP¨£
, "parametersáreÇotállowed in views");

2095 
¸óã_võw_Áû
;

2097 
	`sqlôe3SèπTabÀ
(
pP¨£
, 
pName1
, 
pName2
, 
isTemp
, 1, 0, 
noEº
);

2098 
p
 = 
pP¨£
->
pNewTabÀ
;

2099 if–
p
==0 || 
pP¨£
->
nEº
 ) 
¸óã_võw_Áû
;

2100 
	`sqlôe3TwoP¨tName
(
pP¨£
, 
pName1
, 
pName2
, &
pName
);

2101 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
p
->
pSchema
);

2102 
	`sqlôe3FixInô
(&
sFix
, 
pP¨£
, 
iDb
, "võw", 
pName
);

2103 if–
	`sqlôe3FixSñe˘
(&
sFix
, 
pSñe˘
ËË
¸óã_võw_Áû
;

2110 
p
->
pSñe˘
 = 
	`sqlôe3Sñe˘Dup
(
db
,ÖSñe˘, 
EXPRDUP_REDUCE
);

2111 
p
->
pCheck
 = 
	`sqlôe3Ex¥Li°Dup
(
db
, 
pCNames
, 
EXPRDUP_REDUCE
);

2112 if–
db
->
mÆlocFaûed
 ) 
¸óã_võw_Áû
;

2117 
sEnd
 = 
pP¨£
->
sLa°Tokí
;

2118 
	`as£π
–
sEnd
.
z
[0]!=0 );

2119 if–
sEnd
.
z
[0]!=';' ){

2120 
sEnd
.
z
 +sEnd.
n
;

2122 
sEnd
.
n
 = 0;

2123 
n
 = ()(
sEnd
.
z
 - 
pBegö
->z);

2124 
	`as£π
–
n
>0 );

2125 
z
 = 
pBegö
->z;

2126  
	`sqlôe3Is•a˚
(
z
[
n
-1]) ){Ç--; }

2127 
sEnd
.
z
 = &z[
n
-1];

2128 
sEnd
.
n
 = 1;

2131 
	`sqlôe3EndTabÀ
(
pP¨£
, 0, &
sEnd
, 0, 0);

2133 
¸óã_võw_Áû
:

2134 
	`sqlôe3Sñe˘Dñëe
(
db
, 
pSñe˘
);

2135 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pCNames
);

2137 
	}
}

2140 #i‡!
deföed
(
SQLITE_OMIT_VIEW
Ë|| !deföed(
SQLITE_OMIT_VIRTUALTABLE
)

2146 
	$sqlôe3VõwGëCﬁumnNames
(
P¨£
 *
pP¨£
, 
TabÀ
 *
pTabÀ
){

2147 
TabÀ
 *
pSñTab
;

2148 
Sñe˘
 *
pSñ
;

2149 
nEº
 = 0;

2150 
n
;

2151 
sqlôe3
 *
db
 = 
pP¨£
->db;

2152 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


2153 
sqlôe3_xauth
 
xAuth
;

2156 
	`as£π
–
pTabÀ
 );

2158 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


2159 if–
	`sqlôe3VèbCÆlC⁄√˘
(
pP¨£
, 
pTabÀ
) ){

2160  
SQLITE_ERROR
;

2162 if–
	`IsVútuÆ
(
pTabÀ
) )  0;

2165 #i‚de‡
SQLITE_OMIT_VIEW


2169 if–
pTabÀ
->
nCﬁ
>0 )  0;

2186 if–
pTabÀ
->
nCﬁ
<0 ){

2187 
	`sqlôe3Eº‹Msg
(
pP¨£
, "võw %†i†cúcuœæy deföed", 
pTabÀ
->
zName
);

2190 
	`as£π
–
pTabÀ
->
nCﬁ
>=0 );

2199 
	`as£π
–
pTabÀ
->
pSñe˘
 );

2200 
pSñ
 = 
	`sqlôe3Sñe˘Dup
(
db
, 
pTabÀ
->
pSñe˘
, 0);

2201 if–
pSñ
 ){

2202 
n
 = 
pP¨£
->
nTab
;

2203 
	`sqlôe3SrcLi°AssignCurs‹s
(
pP¨£
, 
pSñ
->
pSrc
);

2204 
pTabÀ
->
nCﬁ
 = -1;

2205 
db
->
lookaside
.
bDißbÀ
++;

2206 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


2207 
xAuth
 = 
db
->xAuth;

2208 
db
->
xAuth
 = 0;

2209 
pSñTab
 = 
	`sqlôe3Resu…SëOfSñe˘
(
pP¨£
, 
pSñ
);

2210 
db
->
xAuth
 = xAuth;

2212 
pSñTab
 = 
	`sqlôe3Resu…SëOfSñe˘
(
pP¨£
, 
pSñ
);

2214 
pP¨£
->
nTab
 = 
n
;

2215 if–
pTabÀ
->
pCheck
 ){

2222 
	`sqlôe3CﬁumnsFromEx¥Li°
(
pP¨£
, 
pTabÀ
->
pCheck
,

2223 &
pTabÀ
->
nCﬁ
, &pTabÀ->
aCﬁ
);

2224 if–
db
->
mÆlocFaûed
==0

2225 && 
pP¨£
->
nEº
==0

2226 && 
pTabÀ
->
nCﬁ
==
pSñ
->
pELi°
->
nEx¥


2228 
	`sqlôe3Sñe˘AddCﬁumnTy≥AndCﬁœti⁄
(
pP¨£
, 
pTabÀ
, 
pSñ
);

2230 }if–
pSñTab
 ){

2234 
	`as£π
–
pTabÀ
->
aCﬁ
==0 );

2235 
pTabÀ
->
nCﬁ
 = 
pSñTab
->nCol;

2236 
pTabÀ
->
aCﬁ
 = 
pSñTab
->aCol;

2237 
pSñTab
->
nCﬁ
 = 0;

2238 
pSñTab
->
aCﬁ
 = 0;

2239 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 0, 
pTabÀ
->
pSchema
) );

2241 
pTabÀ
->
nCﬁ
 = 0;

2242 
nEº
++;

2244 
	`sqlôe3DñëeTabÀ
(
db
, 
pSñTab
);

2245 
	`sqlôe3Sñe˘Dñëe
(
db
, 
pSñ
);

2246 
db
->
lookaside
.
bDißbÀ
--;

2248 
nEº
++;

2250 
pTabÀ
->
pSchema
->
schemaFœgs
 |
DB_Uƒe£tVõws
;

2252  
nEº
;

2253 
	}
}

2256 #i‚de‡
SQLITE_OMIT_VIEW


2260 
	$sqlôeVõwRe£tAŒ
(
sqlôe3
 *
db
, 
idx
){

2261 
HashEÀm
 *
i
;

2262 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
idx
, 0) );

2263 if–!
	`DbHasPr›îty
(
db
, 
idx
, 
DB_Uƒe£tVõws
) ) ;

2264 
i
=
	`sqlôeHashFú°
(&
db
->
aDb
[
idx
].
pSchema
->
tblHash
); i;i=
	`sqlôeHashNext
(i)){

2265 
TabÀ
 *
pTab
 = 
	`sqlôeHashD©a
(
i
);

2266 if–
pTab
->
pSñe˘
 ){

2267 
	`sqlôe3DñëeCﬁumnNames
(
db
, 
pTab
);

2268 
pTab
->
aCﬁ
 = 0;

2269 
pTab
->
nCﬁ
 = 0;

2272 
	`DbCÀ¨Pr›îty
(
db
, 
idx
, 
DB_Uƒe£tVõws
);

2273 
	}
}

2275 
	#sqlôeVõwRe£tAŒ
(
A
,
B
)

	)

2295 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


2296 
	$sqlôe3RoŸPageMoved
(
sqlôe3
 *
db
, 
iDb
, 
iFrom
, 
iTo
){

2297 
HashEÀm
 *
pEÀm
;

2298 
Hash
 *
pHash
;

2299 
Db
 *
pDb
;

2301 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

2302 
pDb
 = &
db
->
aDb
[
iDb
];

2303 
pHash
 = &
pDb
->
pSchema
->
tblHash
;

2304 
pEÀm
=
	`sqlôeHashFú°
(
pHash
);ÖEÀm;ÖEÀm=
	`sqlôeHashNext
(pElem)){

2305 
TabÀ
 *
pTab
 = 
	`sqlôeHashD©a
(
pEÀm
);

2306 if–
pTab
->
äum
==
iFrom
 ){

2307 
pTab
->
äum
 = 
iTo
;

2310 
pHash
 = &
pDb
->
pSchema
->
idxHash
;

2311 
pEÀm
=
	`sqlôeHashFú°
(
pHash
);ÖEÀm;ÖEÀm=
	`sqlôeHashNext
(pElem)){

2312 
Index
 *
pIdx
 = 
	`sqlôeHashD©a
(
pEÀm
);

2313 if–
pIdx
->
äum
==
iFrom
 ){

2314 
pIdx
->
äum
 = 
iTo
;

2317 
	}
}

2326 
	$de°royRoŸPage
(
P¨£
 *
pP¨£
, 
iTabÀ
, 
iDb
){

2327 
Vdbe
 *
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

2328 
r1
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

2329 
	`as£π
–
iTabÀ
>1 );

2330 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_De°roy
, 
iTabÀ
, 
r1
, 
iDb
);

2331 
	`sqlôe3MayAb‹t
(
pP¨£
);

2332 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


2342 
	`sqlôe3Ne°edP¨£
(
pP¨£
,

2344 
pP¨£
->
db
->
aDb
[
iDb
].
zDbSName
, 
MASTER_NAME
, 
iTabÀ
, 
r1
,Ñ1);

2346 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
r1
);

2347 
	}
}

2355 
	$de°royTabÀ
(
P¨£
 *
pP¨£
, 
TabÀ
 *
pTab
){

2356 #ifde‡
SQLITE_OMIT_AUTOVACUUM


2357 
Index
 *
pIdx
;

2358 
iDb
 = 
	`sqlôe3SchemaToIndex
(
pP¨£
->
db
, 
pTab
->
pSchema
);

2359 
	`de°royRoŸPage
(
pP¨£
, 
pTab
->
äum
, 
iDb
);

2360 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
){

2361 
	`de°royRoŸPage
(
pP¨£
, 
pIdx
->
äum
, 
iDb
);

2380 
iTab
 = 
pTab
->
äum
;

2381 
iDe°royed
 = 0;

2384 
Index
 *
pIdx
;

2385 
iL¨ge°
 = 0;

2387 if–
iDe°royed
==0 || 
iTab
<iDestroyed ){

2388 
iL¨ge°
 = 
iTab
;

2390 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
){

2391 
iIdx
 = 
pIdx
->
äum
;

2392 
	`as£π
–
pIdx
->
pSchema
==
pTab
->pSchema );

2393 if–(
iDe°royed
==0 || (
iIdx
<iDe°royed)Ë&& iIdx>
iL¨ge°
 ){

2394 
iL¨ge°
 = 
iIdx
;

2397 if–
iL¨ge°
==0 ){

2400 
iDb
 = 
	`sqlôe3SchemaToIndex
(
pP¨£
->
db
, 
pTab
->
pSchema
);

2401 
	`as£π
–
iDb
>=0 && iDb<
pP¨£
->
db
->
nDb
 );

2402 
	`de°royRoŸPage
(
pP¨£
, 
iL¨ge°
, 
iDb
);

2403 
iDe°royed
 = 
iL¨ge°
;

2407 
	}
}

2413 
	$sqlôe3CÀ¨SètTabÀs
(

2414 
P¨£
 *
pP¨£
,

2415 
iDb
,

2416 c⁄° *
zTy≥
,

2417 c⁄° *
zName


2419 
i
;

2420 c⁄° *
zDbName
 = 
pP¨£
->
db
->
aDb
[
iDb
].
zDbSName
;

2421 
i
=1; i<=4; i++){

2422 
zTab
[24];

2423 
	`sqlôe3_¢¥ötf
((
zTab
),zTab,"sqlôe_°©%d",
i
);

2424 if–
	`sqlôe3FödTabÀ
(
pP¨£
->
db
, 
zTab
, 
zDbName
) ){

2425 
	`sqlôe3Ne°edP¨£
(
pP¨£
,

2427 
zDbName
, 
zTab
, 
zTy≥
, 
zName


2431 
	}
}

2436 
	$sqlôe3CodeDr›TabÀ
(
P¨£
 *
pP¨£
, 
TabÀ
 *
pTab
, 
iDb
, 
isVõw
){

2437 
Vdbe
 *
v
;

2438 
sqlôe3
 *
db
 = 
pP¨£
->db;

2439 
Triggî
 *
pTriggî
;

2440 
Db
 *
pDb
 = &
db
->
aDb
[
iDb
];

2442 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

2443 
	`as£π
–
v
!=0 );

2444 
	`sqlôe3BegöWrôeO≥øti⁄
(
pP¨£
, 1, 
iDb
);

2446 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


2447 if–
	`IsVútuÆ
(
pTab
) ){

2448 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_VBegö
);

2456 
pTriggî
 = 
	`sqlôe3TriggîLi°
(
pP¨£
, 
pTab
);

2457  
pTriggî
 ){

2458 
	`as£π
–
pTriggî
->
pSchema
==
pTab
->pSchema ||

2459 
pTriggî
->
pSchema
==
db
->
aDb
[1].pSchema );

2460 
	`sqlôe3Dr›TriggîPå
(
pP¨£
, 
pTriggî
);

2461 
pTriggî
 =ÖTriggî->
pNext
;

2464 #i‚de‡
SQLITE_OMIT_AUTOINCREMENT


2470 if–
pTab
->
èbFœgs
 & 
TF_Autoö¸emít
 ){

2471 
	`sqlôe3Ne°edP¨£
(
pP¨£
,

2473 
pDb
->
zDbSName
, 
pTab
->
zName


2485 
	`sqlôe3Ne°edP¨£
(
pP¨£
,

2487 
pDb
->
zDbSName
, 
MASTER_NAME
, 
pTab
->
zName
);

2488 if–!
isVõw
 && !
	`IsVútuÆ
(
pTab
) ){

2489 
	`de°royTabÀ
(
pP¨£
, 
pTab
);

2495 if–
	`IsVútuÆ
(
pTab
) ){

2496 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_VDe°roy
, 
iDb
, 0, 0, 
pTab
->
zName
, 0);

2498 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Dr›TabÀ
, 
iDb
, 0, 0, 
pTab
->
zName
, 0);

2499 
	`sqlôe3Ch™geCookõ
(
pP¨£
, 
iDb
);

2500 
	`sqlôeVõwRe£tAŒ
(
db
, 
iDb
);

2501 
	}
}

2507 
	$sqlôe3Dr›TabÀ
(
P¨£
 *
pP¨£
, 
SrcLi°
 *
pName
, 
isVõw
, 
noEº
){

2508 
TabÀ
 *
pTab
;

2509 
Vdbe
 *
v
;

2510 
sqlôe3
 *
db
 = 
pP¨£
->db;

2511 
iDb
;

2513 if–
db
->
mÆlocFaûed
 ){

2514 
exô_dr›_èbÀ
;

2516 
	`as£π
–
pP¨£
->
nEº
==0 );

2517 
	`as£π
–
pName
->
nSrc
==1 );

2518 if–
	`sqlôe3RódSchema
(
pP¨£
ËË
exô_dr›_èbÀ
;

2519 if–
noEº
 ) 
db
->
suµªssEº
++;

2520 
	`as£π
–
isVõw
==0 || isVõw==
LOCATE_VIEW
 );

2521 
pTab
 = 
	`sqlôe3LoˇãTabÀIãm
(
pP¨£
, 
isVõw
, &
pName
->
a
[0]);

2522 if–
noEº
 ) 
db
->
suµªssEº
--;

2524 if–
pTab
==0 ){

2525 if–
noEº
 ) 
	`sqlôe3CodeVîifyNamedSchema
(
pP¨£
, 
pName
->
a
[0].
zD©aba£
);

2526 
exô_dr›_èbÀ
;

2528 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pTab
->
pSchema
);

2529 
	`as£π
–
iDb
>=0 && iDb<
db
->
nDb
 );

2534 if–
	`IsVútuÆ
(
pTab
Ë&& 
	`sqlôe3VõwGëCﬁumnNames
(
pP¨£
,ÖTab) ){

2535 
exô_dr›_èbÀ
;

2537 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


2539 
code
;

2540 c⁄° *
zTab
 = 
	`SCHEMA_TABLE
(
iDb
);

2541 c⁄° *
zDb
 = 
db
->
aDb
[
iDb
].
zDbSName
;

2542 c⁄° *
zArg2
 = 0;

2543 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_DELETE
, 
zTab
, 0, 
zDb
)){

2544 
exô_dr›_èbÀ
;

2546 if–
isVõw
 ){

2547 if–!
OMIT_TEMPDB
 && 
iDb
==1 ){

2548 
code
 = 
SQLITE_DROP_TEMP_VIEW
;

2550 
code
 = 
SQLITE_DROP_VIEW
;

2552 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


2553 }if–
	`IsVútuÆ
(
pTab
) ){

2554 
code
 = 
SQLITE_DROP_VTABLE
;

2555 
zArg2
 = 
	`sqlôe3GëVTabÀ
(
db
, 
pTab
)->
pMod
->
zName
;

2558 if–!
OMIT_TEMPDB
 && 
iDb
==1 ){

2559 
code
 = 
SQLITE_DROP_TEMP_TABLE
;

2561 
code
 = 
SQLITE_DROP_TABLE
;

2564 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
code
, 
pTab
->
zName
, 
zArg2
, 
zDb
) ){

2565 
exô_dr›_èbÀ
;

2567 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_DELETE
, 
pTab
->
zName
, 0, 
zDb
) ){

2568 
exô_dr›_èbÀ
;

2572 if–
	`sqlôe3SåNICmp
(
pTab
->
zName
, "sqlite_", 7)==0

2573 && 
	`sqlôe3SåNICmp
(
pTab
->
zName
, "sqlite_stat", 11)!=0 ){

2574 
	`sqlôe3Eº‹Msg
(
pP¨£
, "èbÀ %†mayÇŸ bêdr›≥d", 
pTab
->
zName
);

2575 
exô_dr›_èbÀ
;

2578 #i‚de‡
SQLITE_OMIT_VIEW


2582 if–
isVõw
 && 
pTab
->
pSñe˘
==0 ){

2583 
	`sqlôe3Eº‹Msg
(
pP¨£
, "u£ DROP TABLEÅÿdñëêèbÀ %s", 
pTab
->
zName
);

2584 
exô_dr›_èbÀ
;

2586 if–!
isVõw
 && 
pTab
->
pSñe˘
 ){

2587 
	`sqlôe3Eº‹Msg
(
pP¨£
, "u£ DROP VIEWÅÿdñëêvõw %s", 
pTab
->
zName
);

2588 
exô_dr›_èbÀ
;

2595 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

2596 if–
v
 ){

2597 
	`sqlôe3BegöWrôeO≥øti⁄
(
pP¨£
, 1, 
iDb
);

2598 
	`sqlôe3CÀ¨SètTabÀs
(
pP¨£
, 
iDb
, "tbl", 
pTab
->
zName
);

2599 
	`sqlôe3FkDr›TabÀ
(
pP¨£
, 
pName
, 
pTab
);

2600 
	`sqlôe3CodeDr›TabÀ
(
pP¨£
, 
pTab
, 
iDb
, 
isVõw
);

2603 
exô_dr›_èbÀ
:

2604 
	`sqlôe3SrcLi°Dñëe
(
db
, 
pName
);

2605 
	}
}

2623 
	$sqlôe3Cª©eF‹eignKey
(

2624 
P¨£
 *
pP¨£
,

2625 
Ex¥Li°
 *
pFromCﬁ
,

2626 
Tokí
 *
pTo
,

2627 
Ex¥Li°
 *
pToCﬁ
,

2628 
Êags


2630 
sqlôe3
 *
db
 = 
pP¨£
->db;

2631 #i‚de‡
SQLITE_OMIT_FOREIGN_KEY


2632 
FKey
 *
pFKey
 = 0;

2633 
FKey
 *
pNextTo
;

2634 
TabÀ
 *
p
 = 
pP¨£
->
pNewTabÀ
;

2635 
nByã
;

2636 
i
;

2637 
nCﬁ
;

2638 *
z
;

2640 
	`as£π
–
pTo
!=0 );

2641 if–
p
==0 || 
IN_DECLARE_VTAB
 ) 
fk_íd
;

2642 if–
pFromCﬁ
==0 ){

2643 
iCﬁ
 = 
p
->
nCﬁ
-1;

2644 if–
	`NEVER
(
iCﬁ
<0ËË
fk_íd
;

2645 if–
pToCﬁ
 &&ÖToCﬁ->
nEx¥
!=1 ){

2646 
	`sqlôe3Eº‹Msg
(
pP¨£
, "foreign key on %s"

2648 
p
->
aCﬁ
[
iCﬁ
].
zName
, 
pTo
);

2649 
fk_íd
;

2651 
nCﬁ
 = 1;

2652 }if–
pToCﬁ
 &&ÖToCﬁ->
nEx¥
!=
pFromCﬁ
->nExpr ){

2653 
	`sqlôe3Eº‹Msg
(
pP¨£
,

2656 
fk_íd
;

2658 
nCﬁ
 = 
pFromCﬁ
->
nEx¥
;

2660 
nByã
 = (*
pFKey
Ë+ (
nCﬁ
-1)*’FKey->
aCﬁ
[0]Ë+ 
pTo
->
n
 + 1;

2661 if–
pToCﬁ
 ){

2662 
i
=0; i<
pToCﬁ
->
nEx¥
; i++){

2663 
nByã
 +
	`sqlôe3SåÀn30
(
pToCﬁ
->
a
[
i
].
zName
) + 1;

2666 
pFKey
 = 
	`sqlôe3DbMÆlocZîo
(
db
, 
nByã
 );

2667 if–
pFKey
==0 ){

2668 
fk_íd
;

2670 
pFKey
->
pFrom
 = 
p
;

2671 
pFKey
->
pNextFrom
 = 
p
->pFKey;

2672 
z
 = (*)&
pFKey
->
aCﬁ
[
nCﬁ
];

2673 
pFKey
->
zTo
 = 
z
;

2674 
	`mem˝y
(
z
, 
pTo
->z,ÖTo->
n
);

2675 
z
[
pTo
->
n
] = 0;

2676 
	`sqlôe3DequŸe
(
z
);

2677 
z
 +
pTo
->
n
+1;

2678 
pFKey
->
nCﬁ
 =ÇCol;

2679 if–
pFromCﬁ
==0 ){

2680 
pFKey
->
aCﬁ
[0].
iFrom
 = 
p
->
nCﬁ
-1;

2682 
i
=0; i<
nCﬁ
; i++){

2683 
j
;

2684 
j
=0; j<
p
->
nCﬁ
; j++){

2685 if–
	`sqlôe3SåICmp
(
p
->
aCﬁ
[
j
].
zName
, 
pFromCﬁ
->
a
[
i
].zName)==0 ){

2686 
pFKey
->
aCﬁ
[
i
].
iFrom
 = 
j
;

2690 if–
j
>=
p
->
nCﬁ
 ){

2691 
	`sqlôe3Eº‹Msg
(
pP¨£
,

2693 
pFromCﬁ
->
a
[
i
].
zName
);

2694 
fk_íd
;

2698 if–
pToCﬁ
 ){

2699 
i
=0; i<
nCﬁ
; i++){

2700 
n
 = 
	`sqlôe3SåÀn30
(
pToCﬁ
->
a
[
i
].
zName
);

2701 
pFKey
->
aCﬁ
[
i
].
zCﬁ
 = 
z
;

2702 
	`mem˝y
(
z
, 
pToCﬁ
->
a
[
i
].
zName
, 
n
);

2703 
z
[
n
] = 0;

2704 
z
 +
n
+1;

2707 
pFKey
->
isDe„ºed
 = 0;

2708 
pFKey
->
aA˘i⁄
[0] = (
u8
)(
Êags
 & 0xff);

2709 
pFKey
->
aA˘i⁄
[1] = (
u8
)((
Êags
 >> 8 ) & 0xff);

2711 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 0, 
p
->
pSchema
) );

2712 
pNextTo
 = (
FKey
 *)
	`sqlôe3HashIn£π
(&
p
->
pSchema
->
fkeyHash
,

2713 
pFKey
->
zTo
, (*)pFKey

2715 if–
pNextTo
==
pFKey
 ){

2716 
	`sqlôe3OomFau…
(
db
);

2717 
fk_íd
;

2719 if–
pNextTo
 ){

2720 
	`as£π
–
pNextTo
->
pPªvTo
==0 );

2721 
pFKey
->
pNextTo
 =ÖNextTo;

2722 
pNextTo
->
pPªvTo
 = 
pFKey
;

2727 
p
->
pFKey
 =ÖFKey;

2728 
pFKey
 = 0;

2730 
fk_íd
:

2731 
	`sqlôe3DbFªe
(
db
, 
pFKey
);

2733 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pFromCﬁ
);

2734 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pToCﬁ
);

2735 
	}
}

2744 
	$sqlôe3De„rF‹eignKey
(
P¨£
 *
pP¨£
, 
isDe„ºed
){

2745 #i‚de‡
SQLITE_OMIT_FOREIGN_KEY


2746 
TabÀ
 *
pTab
;

2747 
FKey
 *
pFKey
;

2748 if–(
pTab
 = 
pP¨£
->
pNewTabÀ
)==0 || (
pFKey
 =ÖTab->pFKey)==0 ) ;

2749 
	`as£π
–
isDe„ºed
==0 || isDeferred==1 );

2750 
pFKey
->
isDe„ºed
 = (
u8
)isDeferred;

2752 
	}
}

2765 
	$sqlôe3RefûlIndex
(
P¨£
 *
pP¨£
, 
Index
 *
pIndex
, 
memRoŸPage
){

2766 
TabÀ
 *
pTab
 = 
pIndex
->
pTabÀ
;

2767 
iTab
 = 
pP¨£
->
nTab
++;

2768 
iIdx
 = 
pP¨£
->
nTab
++;

2769 
iS‹ãr
;

2770 
addr1
;

2771 
addr2
;

2772 
äum
;

2773 
iP¨tIdxLabñ
;

2774 
Vdbe
 *
v
;

2775 
KeyInfo
 *
pKey
;

2776 
ªgRec‹d
;

2777 
sqlôe3
 *
db
 = 
pP¨£
->db;

2778 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pIndex
->
pSchema
);

2780 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


2781 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_REINDEX
, 
pIndex
->
zName
, 0,

2782 
db
->
aDb
[
iDb
].
zDbSName
 ) ){

2788 
	`sqlôe3TabÀLock
(
pP¨£
, 
iDb
, 
pTab
->
äum
, 1,ÖTab->
zName
);

2790 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

2791 if–
v
==0 ) ;

2792 if–
memRoŸPage
>=0 ){

2793 
äum
 = 
memRoŸPage
;

2795 
äum
 = 
pIndex
->tnum;

2797 
pKey
 = 
	`sqlôe3KeyInfoOfIndex
(
pP¨£
, 
pIndex
);

2798 
	`as£π
–
pKey
!=0 || 
db
->
mÆlocFaûed
 || 
pP¨£
->
nEº
 );

2801 
iS‹ãr
 = 
pP¨£
->
nTab
++;

2802 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_S‹ãrO≥n
, 
iS‹ãr
, 0, 
pIndex
->
nKeyCﬁ
, (*)

2803 
	`sqlôe3KeyInfoRef
(
pKey
), 
P4_KEYINFO
);

2807 
	`sqlôe3O≥nTabÀ
(
pP¨£
, 
iTab
, 
iDb
, 
pTab
, 
OP_O≥nRód
);

2808 
addr1
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rewöd
, 
iTab
, 0); 
	`VdbeCovîage
(v);

2809 
ªgRec‹d
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

2811 
	`sqlôe3Gíî©eIndexKey
(
pP¨£
,
pIndex
,
iTab
,
ªgRec‹d
,0,&
iP¨tIdxLabñ
,0,0);

2812 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_S‹ãrIn£π
, 
iS‹ãr
, 
ªgRec‹d
);

2813 
	`sqlôe3ResﬁveP¨tIdxLabñ
(
pP¨£
, 
iP¨tIdxLabñ
);

2814 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Next
, 
iTab
, 
addr1
+1); 
	`VdbeCovîage
(v);

2815 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr1
);

2816 if–
memRoŸPage
<0 ) 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_CÀ¨
, 
äum
, 
iDb
);

2817 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_O≥nWrôe
, 
iIdx
, 
äum
, 
iDb
,

2818 (*)
pKey
, 
P4_KEYINFO
);

2819 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_BULKCSR
|((
memRoŸPage
>=0)?
OPFLAG_P2ISREG
:0));

2821 
addr1
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_S‹ãrS‹t
, 
iS‹ãr
, 0); 
	`VdbeCovîage
(v);

2822 if–
	`IsUniqueIndex
(
pIndex
) ){

2823 
j2
 = 
	`sqlôe3VdbeCuºítAddr
(
v
) + 3;

2824 
	`sqlôe3VdbeGŸo
(
v
, 
j2
);

2825 
addr2
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

2826 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_S‹ãrCom∑ª
, 
iS‹ãr
, 
j2
, 
ªgRec‹d
,

2827 
pIndex
->
nKeyCﬁ
); 
	`VdbeCovîage
(
v
);

2828 
	`sqlôe3UniqueC⁄°øöt
(
pP¨£
, 
OE_Ab‹t
, 
pIndex
);

2830 
addr2
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

2832 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_S‹ãrD©a
, 
iS‹ãr
, 
ªgRec‹d
, 
iIdx
);

2833 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_La°
, 
iIdx
, 0, -1);

2834 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IdxIn£π
, 
iIdx
, 
ªgRec‹d
);

2835 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_USESEEKRESULT
);

2836 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgRec‹d
);

2837 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_S‹ãrNext
, 
iS‹ãr
, 
addr2
); 
	`VdbeCovîage
(v);

2838 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr1
);

2840 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Clo£
, 
iTab
);

2841 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Clo£
, 
iIdx
);

2842 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Clo£
, 
iS‹ãr
);

2843 
	}
}

2852 
Index
 *
	$sqlôe3AŒoˇãIndexObje˘
(

2853 
sqlôe3
 *
db
,

2854 
i16
 
nCﬁ
,

2855 
nExåa
,

2856 **
µExåa


2858 
Index
 *
p
;

2859 
nByã
;

2861 
nByã
 = 
	`ROUND8
((
Index
)) +

2862 
	`ROUND8
((*)*
nCﬁ
) +

2863 
	`ROUND8
((
LogE°
)*(
nCﬁ
+1) +

2864 (
i16
)*
nCﬁ
 +

2865 (
u8
)*
nCﬁ
);

2866 
p
 = 
	`sqlôe3DbMÆlocZîo
(
db
, 
nByã
 + 
nExåa
);

2867 if–
p
 ){

2868 *
pExåa
 = ((*)
p
)+
	`ROUND8
((
Index
));

2869 
p
->
azCﬁl
 = (c⁄° **)
pExåa
;ÖExå®+
	`ROUND8
((*)*
nCﬁ
);

2870 
p
->
aiRowLogE°
 = (
LogE°
*)
pExåa
;ÖExå®+(LogE°)*(
nCﬁ
+1);

2871 
p
->
aiCﬁumn
 = (
i16
*)
pExåa
;ÖExå®+(i16)*
nCﬁ
;

2872 
p
->
aS‹tOrdî
 = (
u8
*)
pExåa
;

2873 
p
->
nCﬁumn
 = 
nCﬁ
;

2874 
p
->
nKeyCﬁ
 = 
nCﬁ
 - 1;

2875 *
µExåa
 = ((*)
p
Ë+ 
nByã
;

2877  
p
;

2878 
	}
}

2892 
	$sqlôe3Cª©eIndex
(

2893 
P¨£
 *
pP¨£
,

2894 
Tokí
 *
pName1
,

2895 
Tokí
 *
pName2
,

2896 
SrcLi°
 *
pTblName
,

2897 
Ex¥Li°
 *
pLi°
,

2898 
⁄Eº‹
,

2899 
Tokí
 *
pSèπ
,

2900 
Ex¥
 *
pPIWhîe
,

2901 
s‹tOrdî
,

2902 
ifNŸExi°
,

2903 
u8
 
idxTy≥


2905 
TabÀ
 *
pTab
 = 0;

2906 
Index
 *
pIndex
 = 0;

2907 *
zName
 = 0;

2908 
nName
;

2909 
i
, 
j
;

2910 
DbFixî
 
sFix
;

2911 
s‹tOrdîMask
;

2912 
sqlôe3
 *
db
 = 
pP¨£
->db;

2913 
Db
 *
pDb
;

2914 
iDb
;

2915 
Tokí
 *
pName
 = 0;

2916 
Ex¥Li°_ôem
 *
pLi°Iãm
;

2917 
nExåa
 = 0;

2918 
nExåaCﬁ
;

2919 *
zExåa
 = 0;

2920 
Index
 *
pPk
 = 0;

2922 if–
db
->
mÆlocFaûed
 || 
pP¨£
->
nEº
>0 ){

2923 
exô_¸óã_ödex
;

2925 if–
IN_DECLARE_VTAB
 && 
idxTy≥
!=
SQLITE_IDXTYPE_PRIMARYKEY
 ){

2926 
exô_¸óã_ödex
;

2928 if–
SQLITE_OK
!=
	`sqlôe3RódSchema
(
pP¨£
) ){

2929 
exô_¸óã_ödex
;

2935 if–
pTblName
!=0 ){

2941 
	`as£π
–
pName1
 && 
pName2
 );

2942 
iDb
 = 
	`sqlôe3TwoP¨tName
(
pP¨£
, 
pName1
, 
pName2
, &
pName
);

2943 if–
iDb
<0 ) 
exô_¸óã_ödex
;

2944 
	`as£π
–
pName
 &&ÖName->
z
 );

2946 #i‚de‡
SQLITE_OMIT_TEMPDB


2951 if–!
db
->
öô
.
busy
 ){

2952 
pTab
 = 
	`sqlôe3SrcLi°Lookup
(
pP¨£
, 
pTblName
);

2953 if–
pName2
->
n
==0 && 
pTab
 &&ÖTab->
pSchema
==
db
->
aDb
[1].pSchema ){

2954 
iDb
 = 1;

2959 
	`sqlôe3FixInô
(&
sFix
, 
pP¨£
, 
iDb
, "ödex", 
pName
);

2960 if–
	`sqlôe3FixSrcLi°
(&
sFix
, 
pTblName
) ){

2963 
	`as£π
(0);

2965 
pTab
 = 
	`sqlôe3LoˇãTabÀIãm
(
pP¨£
, 0, &
pTblName
->
a
[0]);

2966 
	`as£π
–
db
->
mÆlocFaûed
==0 || 
pTab
==0 );

2967 if–
pTab
==0 ) 
exô_¸óã_ödex
;

2968 if–
iDb
==1 && 
db
->
aDb
[iDb].
pSchema
!=
pTab
->pSchema ){

2969 
	`sqlôe3Eº‹Msg
(
pP¨£
,

2971 
pTab
->
zName
);

2972 
exô_¸óã_ödex
;

2974 if–!
	`HasRowid
(
pTab
ËË
pPk
 = 
	`sqlôe3Prim¨yKeyIndex
(pTab);

2976 
	`as£π
–
pName
==0 );

2977 
	`as£π
–
pSèπ
==0 );

2978 
pTab
 = 
pP¨£
->
pNewTabÀ
;

2979 if–!
pTab
 ) 
exô_¸óã_ödex
;

2980 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pTab
->
pSchema
);

2982 
pDb
 = &
db
->
aDb
[
iDb
];

2984 
	`as£π
–
pTab
!=0 );

2985 
	`as£π
–
pP¨£
->
nEº
==0 );

2986 if–
	`sqlôe3SåNICmp
(
pTab
->
zName
, "sqlite_", 7)==0

2987 && 
db
->
öô
.
busy
==0

2988 #i‡
SQLITE_USER_AUTHENTICATION


2989 && 
	`sqlôe3U£rAuthTabÀ
(
pTab
->
zName
)==0

2991 && 
	`sqlôe3SåNICmp
(&
pTab
->
zName
[7],"altertab_",9)!=0 ){

2992 
	`sqlôe3Eº‹Msg
(
pP¨£
, "èbÀ %†mayÇŸ bêödexed", 
pTab
->
zName
);

2993 
exô_¸óã_ödex
;

2995 #i‚de‡
SQLITE_OMIT_VIEW


2996 if–
pTab
->
pSñe˘
 ){

2997 
	`sqlôe3Eº‹Msg
(
pP¨£
, "views mayÇot be indexed");

2998 
exô_¸óã_ödex
;

3001 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


3002 if–
	`IsVútuÆ
(
pTab
) ){

3003 
	`sqlôe3Eº‹Msg
(
pP¨£
, "virtualÅables mayÇot be indexed");

3004 
exô_¸óã_ödex
;

3021 if–
pName
 ){

3022 
zName
 = 
	`sqlôe3NameFromTokí
(
db
, 
pName
);

3023 if–
zName
==0 ) 
exô_¸óã_ödex
;

3024 
	`as£π
–
pName
->
z
!=0 );

3025 if–
SQLITE_OK
!=
	`sqlôe3CheckObje˘Name
(
pP¨£
, 
zName
) ){

3026 
exô_¸óã_ödex
;

3028 if–!
db
->
öô
.
busy
 ){

3029 if–
	`sqlôe3FödTabÀ
(
db
, 
zName
, 0)!=0 ){

3030 
	`sqlôe3Eº‹Msg
(
pP¨£
, "thîêi†ÆªadyáÅabÀÇamed %s", 
zName
);

3031 
exô_¸óã_ödex
;

3034 if–
	`sqlôe3FödIndex
(
db
, 
zName
, 
pDb
->
zDbSName
)!=0 ){

3035 if–!
ifNŸExi°
 ){

3036 
	`sqlôe3Eº‹Msg
(
pP¨£
, "ödex %†ÆªadyÉxi°s", 
zName
);

3038 
	`as£π
–!
db
->
öô
.
busy
 );

3039 
	`sqlôe3CodeVîifySchema
(
pP¨£
, 
iDb
);

3041 
exô_¸óã_ödex
;

3044 
n
;

3045 
Index
 *
pLo›
;

3046 
pLo›
=
pTab
->
pIndex
, 
n
=1;ÖLo›;ÖLo›ıLo›->
pNext
,Ç++){}

3047 
zName
 = 
	`sqlôe3MPrötf
(
db
, "sqlôe_autoödex_%s_%d", 
pTab
->zName, 
n
);

3048 if–
zName
==0 ){

3049 
exô_¸óã_ödex
;

3057 if–
IN_DECLARE_VTAB
 ) 
zName
[7]++;

3062 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


3064 c⁄° *
zDb
 = 
pDb
->
zDbSName
;

3065 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_INSERT
, 
	`SCHEMA_TABLE
(
iDb
), 0, 
zDb
) ){

3066 
exô_¸óã_ödex
;

3068 
i
 = 
SQLITE_CREATE_INDEX
;

3069 if–!
OMIT_TEMPDB
 && 
iDb
==1 ) 
i
 = 
SQLITE_CREATE_TEMP_INDEX
;

3070 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
i
, 
zName
, 
pTab
->zName, 
zDb
) ){

3071 
exô_¸óã_ödex
;

3080 if–
pLi°
==0 ){

3081 
Tokí
 
¥evCﬁ
;

3082 
	`sqlôe3TokíInô
(&
¥evCﬁ
, 
pTab
->
aCﬁ
[pTab->
nCﬁ
-1].
zName
);

3083 
pLi°
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
, 0,

3084 
	`sqlôe3Ex¥AŒoc
(
db
, 
TK_ID
, &
¥evCﬁ
, 0));

3085 if–
pLi°
==0 ) 
exô_¸óã_ödex
;

3086 
	`as£π
–
pLi°
->
nEx¥
==1 );

3087 
	`sqlôe3Ex¥Li°SëS‹tOrdî
(
pLi°
, 
s‹tOrdî
);

3089 
	`sqlôe3Ex¥Li°CheckLígth
(
pP¨£
, 
pLi°
, "index");

3095 
i
=0; i<
pLi°
->
nEx¥
; i++){

3096 
Ex¥
 *
pEx¥
 = 
pLi°
->
a
[
i
].pExpr;

3097 
	`as£π
–
pEx¥
!=0 );

3098 if–
pEx¥
->
›
==
TK_COLLATE
 ){

3099 
nExåa
 +(1 + 
	`sqlôe3SåÀn30
(
pEx¥
->
u
.
zTokí
));

3106 
nName
 = 
	`sqlôe3SåÀn30
(
zName
);

3107 
nExåaCﬁ
 = 
pPk
 ?ÖPk->
nKeyCﬁ
 : 1;

3108 
pIndex
 = 
	`sqlôe3AŒoˇãIndexObje˘
(
db
, 
pLi°
->
nEx¥
 + 
nExåaCﬁ
,

3109 
nName
 + 
nExåa
 + 1, &
zExåa
);

3110 if–
db
->
mÆlocFaûed
 ){

3111 
exô_¸óã_ödex
;

3113 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(
pIndex
->
aiRowLogE°
) );

3114 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(
pIndex
->
azCﬁl
) );

3115 
pIndex
->
zName
 = 
zExåa
;

3116 
zExåa
 +
nName
 + 1;

3117 
	`mem˝y
(
pIndex
->
zName
, zName, 
nName
+1);

3118 
pIndex
->
pTabÀ
 = 
pTab
;

3119 
pIndex
->
⁄Eº‹
 = (
u8
)onError;

3120 
pIndex
->
uniqNŸNuŒ
 = 
⁄Eº‹
!=
OE_N⁄e
;

3121 
pIndex
->
idxTy≥
 = idxType;

3122 
pIndex
->
pSchema
 = 
db
->
aDb
[
iDb
].pSchema;

3123 
pIndex
->
nKeyCﬁ
 = 
pLi°
->
nEx¥
;

3124 if–
pPIWhîe
 ){

3125 
	`sqlôe3ResﬁveSñfRe„ªn˚
(
pP¨£
, 
pTab
, 
NC_P¨tIdx
, 
pPIWhîe
, 0);

3126 
pIndex
->
pP¨tIdxWhîe
 = 
pPIWhîe
;

3127 
pPIWhîe
 = 0;

3129 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

3133 if–
pDb
->
pSchema
->
fûe_f‹m©
>=4 ){

3134 
s‹tOrdîMask
 = -1;

3136 
s‹tOrdîMask
 = 0;

3148 
i
=0, 
pLi°Iãm
=
pLi°
->
a
; i<pLi°->
nEx¥
; i++,ÖListItem++){

3149 
Ex¥
 *
pCEx¥
;

3150 
ªque°edS‹tOrdî
;

3151 c⁄° *
zCﬁl
;

3153 
	`sqlôe3SåögToId
(
pLi°Iãm
->
pEx¥
);

3154 
	`sqlôe3ResﬁveSñfRe„ªn˚
(
pP¨£
, 
pTab
, 
NC_IdxEx¥
, 
pLi°Iãm
->
pEx¥
, 0);

3155 if–
pP¨£
->
nEº
 ) 
exô_¸óã_ödex
;

3156 
pCEx¥
 = 
	`sqlôe3Ex¥SkùCﬁœã
(
pLi°Iãm
->
pEx¥
);

3157 if–
pCEx¥
->
›
!=
TK_COLUMN
 ){

3158 if–
pTab
==
pP¨£
->
pNewTabÀ
 ){

3159 
	`sqlôe3Eº‹Msg
(
pP¨£
, "expressionsÖrohibited in PRIMARY KEYánd "

3161 
exô_¸óã_ödex
;

3163 if–
pIndex
->
aCﬁEx¥
==0 ){

3164 
Ex¥Li°
 *
pC›y
 = 
	`sqlôe3Ex¥Li°Dup
(
db
, 
pLi°
, 0);

3165 
pIndex
->
aCﬁEx¥
 = 
pC›y
;

3166 if–!
db
->
mÆlocFaûed
 ){

3167 
	`as£π
–
pC›y
!=0 );

3168 
pLi°Iãm
 = &
pC›y
->
a
[
i
];

3171 
j
 = 
XN_EXPR
;

3172 
pIndex
->
aiCﬁumn
[
i
] = 
XN_EXPR
;

3173 
pIndex
->
uniqNŸNuŒ
 = 0;

3175 
j
 = 
pCEx¥
->
iCﬁumn
;

3176 
	`as£π
–
j
<=0x7fff );

3177 if–
j
<0 ){

3178 
j
 = 
pTab
->
iPKey
;

3179 }if–
pTab
->
aCﬁ
[
j
].
nŸNuŒ
==0 ){

3180 
pIndex
->
uniqNŸNuŒ
 = 0;

3182 
pIndex
->
aiCﬁumn
[
i
] = (
i16
)
j
;

3184 
zCﬁl
 = 0;

3185 if–
pLi°Iãm
->
pEx¥
->
›
==
TK_COLLATE
 ){

3186 
nCﬁl
;

3187 
zCﬁl
 = 
pLi°Iãm
->
pEx¥
->
u
.
zTokí
;

3188 
nCﬁl
 = 
	`sqlôe3SåÀn30
(
zCﬁl
) + 1;

3189 
	`as£π
–
nExåa
>=
nCﬁl
 );

3190 
	`mem˝y
(
zExåa
, 
zCﬁl
, 
nCﬁl
);

3191 
zCﬁl
 = 
zExåa
;

3192 
zExåa
 +
nCﬁl
;

3193 
nExåa
 -
nCﬁl
;

3194 }if–
j
>=0 ){

3195 
zCﬁl
 = 
pTab
->
aCﬁ
[
j
].zColl;

3197 if–!
zCﬁl
 ) zCﬁ»
sqlôe3SåBINARY
;

3198 if–!
db
->
öô
.
busy
 && !
	`sqlôe3LoˇãCﬁlSeq
(
pP¨£
, 
zCﬁl
) ){

3199 
exô_¸óã_ödex
;

3201 
pIndex
->
azCﬁl
[
i
] = 
zCﬁl
;

3202 
ªque°edS‹tOrdî
 = 
pLi°Iãm
->
s‹tOrdî
 & 
s‹tOrdîMask
;

3203 
pIndex
->
aS‹tOrdî
[
i
] = (
u8
)
ªque°edS‹tOrdî
;

3210 if–
pPk
 ){

3211 
j
=0; j<
pPk
->
nKeyCﬁ
; j++){

3212 
x
 = 
pPk
->
aiCﬁumn
[
j
];

3213 
	`as£π
–
x
>=0 );

3214 if–
	`hasCﬁumn
(
pIndex
->
aiCﬁumn
,ÖIndex->
nKeyCﬁ
, 
x
) ){

3215 
pIndex
->
nCﬁumn
--;

3217 
pIndex
->
aiCﬁumn
[
i
] = 
x
;

3218 
pIndex
->
azCﬁl
[
i
] = 
pPk
->azCﬁl[
j
];

3219 
pIndex
->
aS‹tOrdî
[
i
] = 
pPk
->aS‹tOrdî[
j
];

3220 
i
++;

3223 
	`as£π
–
i
==
pIndex
->
nCﬁumn
 );

3225 
pIndex
->
aiCﬁumn
[
i
] = 
XN_ROWID
;

3226 
pIndex
->
azCﬁl
[
i
] = 
sqlôe3SåBINARY
;

3228 
	`sqlôe3DeÁu…RowE°
(
pIndex
);

3229 if–
pP¨£
->
pNewTabÀ
==0 ) 
	`e°im©eIndexWidth
(
pIndex
);

3233 
	`as£π
–
	`HasRowid
(
pTab
)

3234 || 
pTab
->
iPKey
<0 || 
	`sqlôe3CﬁumnOfIndex
(
pIndex
,ÖTab->iPKey)>=0 );

3235 if–
pTblName
!=0 && 
pIndex
->
nCﬁumn
>=
pTab
->
nCﬁ
 ){

3236 
pIndex
->
isCovîög
 = 1;

3237 
j
=0; j<
pTab
->
nCﬁ
; j++){

3238 if–
j
==
pTab
->
iPKey
 ) ;

3239 if–
	`sqlôe3CﬁumnOfIndex
(
pIndex
,
j
)>=0 ) ;

3240 
pIndex
->
isCovîög
 = 0;

3245 if–
pTab
==
pP¨£
->
pNewTabÀ
 ){

3267 
Index
 *
pIdx
;

3268 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
){

3269 
k
;

3270 
	`as£π
–
	`IsUniqueIndex
(
pIdx
) );

3271 
	`as£π
–
pIdx
->
idxTy≥
!=
SQLITE_IDXTYPE_APPDEF
 );

3272 
	`as£π
–
	`IsUniqueIndex
(
pIndex
) );

3274 if–
pIdx
->
nKeyCﬁ
!=
pIndex
->nKeyCol ) ;

3275 
k
=0; k<
pIdx
->
nKeyCﬁ
; k++){

3276 c⁄° *
z1
;

3277 c⁄° *
z2
;

3278 
	`as£π
–
pIdx
->
aiCﬁumn
[
k
]>=0 );

3279 if–
pIdx
->
aiCﬁumn
[
k
]!=
pIndex
->aiColumn[k] ) ;

3280 
z1
 = 
pIdx
->
azCﬁl
[
k
];

3281 
z2
 = 
pIndex
->
azCﬁl
[
k
];

3282 if–
	`sqlôe3SåICmp
(
z1
, 
z2
) ) ;

3284 if–
k
==
pIdx
->
nKeyCﬁ
 ){

3285 if–
pIdx
->
⁄Eº‹
!=
pIndex
->onError ){

3293 if–!(
pIdx
->
⁄Eº‹
==
OE_DeÁu…
 || 
pIndex
->onError==OE_Default) ){

3294 
	`sqlôe3Eº‹Msg
(
pP¨£
,

3297 if–
pIdx
->
⁄Eº‹
==
OE_DeÁu…
 ){

3298 
pIdx
->
⁄Eº‹
 = 
pIndex
->onError;

3301 if–
idxTy≥
==
SQLITE_IDXTYPE_PRIMARYKEY
 ) 
pIdx
->idxType = idxType;

3302 
exô_¸óã_ödex
;

3310 
	`as£π
–
pP¨£
->
nEº
==0 );

3311 if–
db
->
öô
.
busy
 ){

3312 
Index
 *
p
;

3313 
	`as£π
–!
IN_DECLARE_VTAB
 );

3314 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 0, 
pIndex
->
pSchema
) );

3315 
p
 = 
	`sqlôe3HashIn£π
(&
pIndex
->
pSchema
->
idxHash
,

3316 
pIndex
->
zName
,ÖIndex);

3317 if–
p
 ){

3318 
	`as£π
–
p
==
pIndex
 );

3319 
	`sqlôe3OomFau…
(
db
);

3320 
exô_¸óã_ödex
;

3322 
db
->
Êags
 |
SQLITE_I¡înCh™ges
;

3323 if–
pTblName
!=0 ){

3324 
pIndex
->
äum
 = 
db
->
öô
.
√wTnum
;

3341 if–
	`HasRowid
(
pTab
Ë|| 
pTblName
!=0 ){

3342 
Vdbe
 *
v
;

3343 *
zStmt
;

3344 
iMem
 = ++
pP¨£
->
nMem
;

3346 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

3347 if–
v
==0 ) 
exô_¸óã_ödex
;

3349 
	`sqlôe3BegöWrôeO≥øti⁄
(
pP¨£
, 1, 
iDb
);

3357 
pIndex
->
äum
 = 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_No›
);

3358 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Cª©eIndex
, 
iDb
, 
iMem
);

3363 if–
pSèπ
 ){

3364 
n
 = ()(
pP¨£
->
sLa°Tokí
.
z
 - 
pName
->z) +ÖParse->sLastToken.n;

3365 if–
pName
->
z
[
n
-1]==';' )Ç--;

3367 
zStmt
 = 
	`sqlôe3MPrötf
(
db
, "CREATE%s INDEX %.*s",

3368 
⁄Eº‹
==
OE_N⁄e
 ? "" : " UNIQUE", 
n
, 
pName
->
z
);

3372 
zStmt
 = 0;

3377 
	`sqlôe3Ne°edP¨£
(
pP¨£
,

3379 
db
->
aDb
[
iDb
].
zDbSName
, 
MASTER_NAME
,

3380 
pIndex
->
zName
,

3381 
pTab
->
zName
,

3382 
iMem
,

3383 
zStmt


3385 
	`sqlôe3DbFªe
(
db
, 
zStmt
);

3390 if–
pTblName
 ){

3391 
	`sqlôe3RefûlIndex
(
pP¨£
, 
pIndex
, 
iMem
);

3392 
	`sqlôe3Ch™geCookõ
(
pP¨£
, 
iDb
);

3393 
	`sqlôe3VdbeAddP¨£SchemaOp
(
v
, 
iDb
,

3394 
	`sqlôe3MPrötf
(
db
, "«me='%q' ANDÅy≥='ödex'", 
pIndex
->
zName
));

3395 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_Expúe
);

3398 
	`sqlôe3VdbeJumpHîe
(
v
, 
pIndex
->
äum
);

3407 if–
db
->
öô
.
busy
 || 
pTblName
==0 ){

3408 if–
⁄Eº‹
!=
OE_Rïœ˚
 || 
pTab
->
pIndex
==0

3409 || 
pTab
->
pIndex
->
⁄Eº‹
==
OE_Rïœ˚
){

3410 
pIndex
->
pNext
 = 
pTab
->pIndex;

3411 
pTab
->
pIndex
 =ÖIndex;

3413 
Index
 *
pOthî
 = 
pTab
->
pIndex
;

3414  
pOthî
->
pNext
 &&ÖOthî->pNext->
⁄Eº‹
!=
OE_Rïœ˚
 ){

3415 
pOthî
 =ÖOthî->
pNext
;

3417 
pIndex
->
pNext
 = 
pOthî
->pNext;

3418 
pOthî
->
pNext
 = 
pIndex
;

3420 
pIndex
 = 0;

3424 
exô_¸óã_ödex
:

3425 if–
pIndex
 ) 
	`‰ìIndex
(
db
,ÖIndex);

3426 
	`sqlôe3Ex¥Dñëe
(
db
, 
pPIWhîe
);

3427 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pLi°
);

3428 
	`sqlôe3SrcLi°Dñëe
(
db
, 
pTblName
);

3429 
	`sqlôe3DbFªe
(
db
, 
zName
);

3430 
	}
}

3450 
	$sqlôe3DeÁu…RowE°
(
Index
 *
pIdx
){

3452 
LogE°
 
aVÆ
[] = { 33, 32, 30, 28, 26 };

3453 
LogE°
 *
a
 = 
pIdx
->
aiRowLogE°
;

3454 
nC›y
 = 
	`MIN
(
	`AºaySize
(
aVÆ
), 
pIdx
->
nKeyCﬁ
);

3455 
i
;

3460 
a
[0] = 
pIdx
->
pTabÀ
->
nRowLogE°
;

3461 if–
pIdx
->
pP¨tIdxWhîe
!=0 ) 
a
[0] -10; 
	`as£π
–10==
	`sqlôe3LogE°
(2) );

3462 if–
a
[0]<33 )á[0] = 33; 
	`as£π
–33==
	`sqlôe3LogE°
(10) );

3466 
	`mem˝y
(&
a
[1], 
aVÆ
, 
nC›y
*(
LogE°
));

3467 
i
=
nC›y
+1; i<=
pIdx
->
nKeyCﬁ
; i++){

3468 
a
[
i
] = 23; 
	`as£π
–23==
	`sqlôe3LogE°
(5) );

3471 
	`as£π
–0==
	`sqlôe3LogE°
(1) );

3472 if–
	`IsUniqueIndex
(
pIdx
ËË
a
[pIdx->
nKeyCﬁ
] = 0;

3473 
	}
}

3479 
	$sqlôe3Dr›Index
(
P¨£
 *
pP¨£
, 
SrcLi°
 *
pName
, 
ifExi°s
){

3480 
Index
 *
pIndex
;

3481 
Vdbe
 *
v
;

3482 
sqlôe3
 *
db
 = 
pP¨£
->db;

3483 
iDb
;

3485 
	`as£π
–
pP¨£
->
nEº
==0 );

3486 if–
db
->
mÆlocFaûed
 ){

3487 
exô_dr›_ödex
;

3489 
	`as£π
–
pName
->
nSrc
==1 );

3490 if–
SQLITE_OK
!=
	`sqlôe3RódSchema
(
pP¨£
) ){

3491 
exô_dr›_ödex
;

3493 
pIndex
 = 
	`sqlôe3FödIndex
(
db
, 
pName
->
a
[0].
zName
,ÖName->a[0].
zD©aba£
);

3494 if–
pIndex
==0 ){

3495 if–!
ifExi°s
 ){

3496 
	`sqlôe3Eº‹Msg
(
pP¨£
, "nÿsuch index: %S", 
pName
, 0);

3498 
	`sqlôe3CodeVîifyNamedSchema
(
pP¨£
, 
pName
->
a
[0].
zD©aba£
);

3500 
pP¨£
->
checkSchema
 = 1;

3501 
exô_dr›_ödex
;

3503 if–
pIndex
->
idxTy≥
!=
SQLITE_IDXTYPE_APPDEF
 ){

3504 
	`sqlôe3Eº‹Msg
(
pP¨£
, "indexássociated with UNIQUE "

3506 
exô_dr›_ödex
;

3508 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pIndex
->
pSchema
);

3509 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


3511 
code
 = 
SQLITE_DROP_INDEX
;

3512 
TabÀ
 *
pTab
 = 
pIndex
->
pTabÀ
;

3513 c⁄° *
zDb
 = 
db
->
aDb
[
iDb
].
zDbSName
;

3514 c⁄° *
zTab
 = 
	`SCHEMA_TABLE
(
iDb
);

3515 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_DELETE
, 
zTab
, 0, 
zDb
) ){

3516 
exô_dr›_ödex
;

3518 if–!
OMIT_TEMPDB
 && 
iDb
 ) 
code
 = 
SQLITE_DROP_TEMP_INDEX
;

3519 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
code
, 
pIndex
->
zName
, 
pTab
->zName, 
zDb
) ){

3520 
exô_dr›_ödex
;

3526 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

3527 if–
v
 ){

3528 
	`sqlôe3BegöWrôeO≥øti⁄
(
pP¨£
, 1, 
iDb
);

3529 
	`sqlôe3Ne°edP¨£
(
pP¨£
,

3531 
db
->
aDb
[
iDb
].
zDbSName
, 
MASTER_NAME
, 
pIndex
->
zName


3533 
	`sqlôe3CÀ¨SètTabÀs
(
pP¨£
, 
iDb
, "idx", 
pIndex
->
zName
);

3534 
	`sqlôe3Ch™geCookõ
(
pP¨£
, 
iDb
);

3535 
	`de°royRoŸPage
(
pP¨£
, 
pIndex
->
äum
, 
iDb
);

3536 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Dr›Index
, 
iDb
, 0, 0, 
pIndex
->
zName
, 0);

3539 
exô_dr›_ödex
:

3540 
	`sqlôe3SrcLi°Dñëe
(
db
, 
pName
);

3541 
	}
}

3560 *
	$sqlôe3AºayAŒoˇã
(

3561 
sqlôe3
 *
db
,

3562 *
pAºay
,

3563 
szE¡ry
,

3564 *
≤E¡ry
,

3565 *
pIdx


3567 *
z
;

3568 
n
 = *
≤E¡ry
;

3569 if–(
n
 & (n-1))==0 ){

3570 
sz
 = (
n
==0) ? 1 : 2*n;

3571 *
pNew
 = 
	`sqlôe3DbRóŒoc
(
db
, 
pAºay
, 
sz
*
szE¡ry
);

3572 if–
pNew
==0 ){

3573 *
pIdx
 = -1;

3574  
pAºay
;

3576 
pAºay
 = 
pNew
;

3578 
z
 = (*)
pAºay
;

3579 
	`mem£t
(&
z
[
n
 * 
szE¡ry
], 0, szEntry);

3580 *
pIdx
 = 
n
;

3581 ++*
≤E¡ry
;

3582  
pAºay
;

3583 
	}
}

3591 
IdLi°
 *
	$sqlôe3IdLi°Aµíd
(
sqlôe3
 *
db
, 
IdLi°
 *
pLi°
, 
Tokí
 *
pTokí
){

3592 
i
;

3593 if–
pLi°
==0 ){

3594 
pLi°
 = 
	`sqlôe3DbMÆlocZîo
(
db
, (
IdLi°
) );

3595 if–
pLi°
==0 )  0;

3597 
pLi°
->
a
 = 
	`sqlôe3AºayAŒoˇã
(

3598 
db
,

3599 
pLi°
->
a
,

3600 (
pLi°
->
a
[0]),

3601 &
pLi°
->
nId
,

3602 &
i


3604 if–
i
<0 ){

3605 
	`sqlôe3IdLi°Dñëe
(
db
, 
pLi°
);

3608 
pLi°
->
a
[
i
].
zName
 = 
	`sqlôe3NameFromTokí
(
db
, 
pTokí
);

3609  
pLi°
;

3610 
	}
}

3615 
	$sqlôe3IdLi°Dñëe
(
sqlôe3
 *
db
, 
IdLi°
 *
pLi°
){

3616 
i
;

3617 if–
pLi°
==0 ) ;

3618 
i
=0; i<
pLi°
->
nId
; i++){

3619 
	`sqlôe3DbFªe
(
db
, 
pLi°
->
a
[
i
].
zName
);

3621 
	`sqlôe3DbFªe
(
db
, 
pLi°
->
a
);

3622 
	`sqlôe3DbFªe
(
db
, 
pLi°
);

3623 
	}
}

3629 
	$sqlôe3IdLi°Index
(
IdLi°
 *
pLi°
, c⁄° *
zName
){

3630 
i
;

3631 if–
pLi°
==0 )  -1;

3632 
i
=0; i<
pLi°
->
nId
; i++){

3633 if–
	`sqlôe3SåICmp
(
pLi°
->
a
[
i
].
zName
, zName)==0 )  i;

3636 
	}
}

3657 
SrcLi°
 *
	$sqlôe3SrcLi°E∆¨ge
(

3658 
sqlôe3
 *
db
,

3659 
SrcLi°
 *
pSrc
,

3660 
nExåa
,

3661 
iSèπ


3663 
i
;

3666 
	`as£π
–
iSèπ
>=0 );

3667 
	`as£π
–
nExåa
>=1 );

3668 
	`as£π
–
pSrc
!=0 );

3669 
	`as£π
–
iSèπ
<=
pSrc
->
nSrc
 );

3672 if–(
u32
)
pSrc
->
nSrc
+
nExåa
>pSrc->
nAŒoc
 ){

3673 
SrcLi°
 *
pNew
;

3674 
nAŒoc
 = 
pSrc
->
nSrc
*2+
nExåa
;

3675 
nGŸ
;

3676 
pNew
 = 
	`sqlôe3DbRóŒoc
(
db
, 
pSrc
,

3677 (*
pSrc
Ë+ (
nAŒoc
-1)*’Src->
a
[0]) );

3678 if–
pNew
==0 ){

3679 
	`as£π
–
db
->
mÆlocFaûed
 );

3680  
pSrc
;

3682 
pSrc
 = 
pNew
;

3683 
nGŸ
 = (
	`sqlôe3DbMÆlocSize
(
db
, 
pNew
Ë- (*
pSrc
))/’Src->
a
[0])+1;

3684 
pSrc
->
nAŒoc
 = 
nGŸ
;

3689 
i
=
pSrc
->
nSrc
-1; i>=
iSèπ
; i--){

3690 
pSrc
->
a
[
i
+
nExåa
] =ÖSrc->a[i];

3692 
pSrc
->
nSrc
 +
nExåa
;

3695 
	`mem£t
(&
pSrc
->
a
[
iSèπ
], 0, ’Src->a[0])*
nExåa
);

3696 
i
=
iSèπ
; i<iSèπ+
nExåa
; i++){

3697 
pSrc
->
a
[
i
].
iCurs‹
 = -1;

3701  
pSrc
;

3702 
	}
}

3739 
SrcLi°
 *
	$sqlôe3SrcLi°Aµíd
(

3740 
sqlôe3
 *
db
,

3741 
SrcLi°
 *
pLi°
,

3742 
Tokí
 *
pTabÀ
,

3743 
Tokí
 *
pD©aba£


3745 
SrcLi°_ôem
 *
pIãm
;

3746 
	`as£π
–
pD©aba£
==0 || 
pTabÀ
!=0 );

3747 
	`as£π
–
db
!=0 );

3748 if–
pLi°
==0 ){

3749 
pLi°
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, (
SrcLi°
) );

3750 if–
pLi°
==0 )  0;

3751 
pLi°
->
nAŒoc
 = 1;

3752 
pLi°
->
nSrc
 = 1;

3753 
	`mem£t
(&
pLi°
->
a
[0], 0, (pList->a[0]));

3754 
pLi°
->
a
[0].
iCurs‹
 = -1;

3756 
pLi°
 = 
	`sqlôe3SrcLi°E∆¨ge
(
db
,ÖLi°, 1,ÖLi°->
nSrc
);

3758 if–
db
->
mÆlocFaûed
 ){

3759 
	`sqlôe3SrcLi°Dñëe
(
db
, 
pLi°
);

3762 
pIãm
 = &
pLi°
->
a
[pLi°->
nSrc
-1];

3763 if–
pD©aba£
 &&ÖD©aba£->
z
==0 ){

3764 
pD©aba£
 = 0;

3766 if–
pD©aba£
 ){

3767 
Tokí
 *
pTemp
 = 
pD©aba£
;

3768 
pD©aba£
 = 
pTabÀ
;

3769 
pTabÀ
 = 
pTemp
;

3771 
pIãm
->
zName
 = 
	`sqlôe3NameFromTokí
(
db
, 
pTabÀ
);

3772 
pIãm
->
zD©aba£
 = 
	`sqlôe3NameFromTokí
(
db
, 
pD©aba£
);

3773  
pLi°
;

3774 
	}
}

3779 
	$sqlôe3SrcLi°AssignCurs‹s
(
P¨£
 *
pP¨£
, 
SrcLi°
 *
pLi°
){

3780 
i
;

3781 
SrcLi°_ôem
 *
pIãm
;

3782 
	`as£π
(
pLi°
 || 
pP¨£
->
db
->
mÆlocFaûed
 );

3783 if–
pLi°
 ){

3784 
i
=0, 
pIãm
=
pLi°
->
a
; i<pLi°->
nSrc
; i++,ÖItem++){

3785 if–
pIãm
->
iCurs‹
>=0 ) ;

3786 
pIãm
->
iCurs‹
 = 
pP¨£
->
nTab
++;

3787 if–
pIãm
->
pSñe˘
 ){

3788 
	`sqlôe3SrcLi°AssignCurs‹s
(
pP¨£
, 
pIãm
->
pSñe˘
->
pSrc
);

3792 
	}
}

3797 
	$sqlôe3SrcLi°Dñëe
(
sqlôe3
 *
db
, 
SrcLi°
 *
pLi°
){

3798 
i
;

3799 
SrcLi°_ôem
 *
pIãm
;

3800 if–
pLi°
==0 ) ;

3801 
pIãm
=
pLi°
->
a
, 
i
=0; i<pLi°->
nSrc
; i++,ÖItem++){

3802 
	`sqlôe3DbFªe
(
db
, 
pIãm
->
zD©aba£
);

3803 
	`sqlôe3DbFªe
(
db
, 
pIãm
->
zName
);

3804 
	`sqlôe3DbFªe
(
db
, 
pIãm
->
zAlüs
);

3805 if–
pIãm
->
fg
.
isIndexedBy
 ) 
	`sqlôe3DbFªe
(
db
,ÖIãm->
u1
.
zIndexedBy
);

3806 if–
pIãm
->
fg
.
isTabFunc
 ) 
	`sqlôe3Ex¥Li°Dñëe
(
db
,ÖIãm->
u1
.
pFuncArg
);

3807 
	`sqlôe3DñëeTabÀ
(
db
, 
pIãm
->
pTab
);

3808 
	`sqlôe3Sñe˘Dñëe
(
db
, 
pIãm
->
pSñe˘
);

3809 
	`sqlôe3Ex¥Dñëe
(
db
, 
pIãm
->
pOn
);

3810 
	`sqlôe3IdLi°Dñëe
(
db
, 
pIãm
->
pUsög
);

3812 
	`sqlôe3DbFªe
(
db
, 
pLi°
);

3813 
	}
}

3831 
SrcLi°
 *
	$sqlôe3SrcLi°AµídFromTîm
(

3832 
P¨£
 *
pP¨£
,

3833 
SrcLi°
 *
p
,

3834 
Tokí
 *
pTabÀ
,

3835 
Tokí
 *
pD©aba£
,

3836 
Tokí
 *
pAlüs
,

3837 
Sñe˘
 *
pSubquîy
,

3838 
Ex¥
 *
pOn
,

3839 
IdLi°
 *
pUsög


3841 
SrcLi°_ôem
 *
pIãm
;

3842 
sqlôe3
 *
db
 = 
pP¨£
->db;

3843 if–!
p
 && (
pOn
 || 
pUsög
) ){

3844 
	`sqlôe3Eº‹Msg
(
pP¨£
, "a JOIN clause isÑequired before %s",

3845 (
pOn
 ? "ON" : "USING")

3847 
≠≥nd_‰om_îr‹
;

3849 
p
 = 
	`sqlôe3SrcLi°Aµíd
(
db
,Ö, 
pTabÀ
, 
pD©aba£
);

3850 if–
p
==0 || 
	`NEVER
’->
nSrc
==0) ){

3851 
≠≥nd_‰om_îr‹
;

3853 
pIãm
 = &
p
->
a
[p->
nSrc
-1];

3854 
	`as£π
–
pAlüs
!=0 );

3855 if–
pAlüs
->
n
 ){

3856 
pIãm
->
zAlüs
 = 
	`sqlôe3NameFromTokí
(
db
, 
pAlüs
);

3858 
pIãm
->
pSñe˘
 = 
pSubquîy
;

3859 
pIãm
->
pOn
 =ÖOn;

3860 
pIãm
->
pUsög
 =ÖUsing;

3861  
p
;

3863 
≠≥nd_‰om_îr‹
:

3864 
	`as£π
–
p
==0 );

3865 
	`sqlôe3Ex¥Dñëe
(
db
, 
pOn
);

3866 
	`sqlôe3IdLi°Dñëe
(
db
, 
pUsög
);

3867 
	`sqlôe3Sñe˘Dñëe
(
db
, 
pSubquîy
);

3869 
	}
}

3875 
	$sqlôe3SrcLi°IndexedBy
(
P¨£
 *
pP¨£
, 
SrcLi°
 *
p
, 
Tokí
 *
pIndexedBy
){

3876 
	`as£π
–
pIndexedBy
!=0 );

3877 if–
p
 && 
	`ALWAYS
’->
nSrc
>0) ){

3878 
SrcLi°_ôem
 *
pIãm
 = &
p
->
a
[p->
nSrc
-1];

3879 
	`as£π
–
pIãm
->
fg
.
nŸIndexed
==0 );

3880 
	`as£π
–
pIãm
->
fg
.
isIndexedBy
==0 );

3881 
	`as£π
–
pIãm
->
fg
.
isTabFunc
==0 );

3882 if–
pIndexedBy
->
n
==1 && !pIndexedBy->
z
 ){

3885 
pIãm
->
fg
.
nŸIndexed
 = 1;

3887 
pIãm
->
u1
.
zIndexedBy
 = 
	`sqlôe3NameFromTokí
(
pP¨£
->
db
, 
pIndexedBy
);

3888 
pIãm
->
fg
.
isIndexedBy
 = (pIãm->
u1
.
zIndexedBy
!=0);

3891 
	}
}

3897 
	$sqlôe3SrcLi°FuncArgs
(
P¨£
 *
pP¨£
, 
SrcLi°
 *
p
, 
Ex¥Li°
 *
pLi°
){

3898 if–
p
 ){

3899 
SrcLi°_ôem
 *
pIãm
 = &
p
->
a
[p->
nSrc
-1];

3900 
	`as£π
–
pIãm
->
fg
.
nŸIndexed
==0 );

3901 
	`as£π
–
pIãm
->
fg
.
isIndexedBy
==0 );

3902 
	`as£π
–
pIãm
->
fg
.
isTabFunc
==0 );

3903 
pIãm
->
u1
.
pFuncArg
 = 
pLi°
;

3904 
pIãm
->
fg
.
isTabFunc
 = 1;

3906 
	`sqlôe3Ex¥Li°Dñëe
(
pP¨£
->
db
, 
pLi°
);

3908 
	}
}

3925 
	$sqlôe3SrcLi°Shi·JoöTy≥
(
SrcLi°
 *
p
){

3926 if–
p
 ){

3927 
i
;

3928 
i
=
p
->
nSrc
-1; i>0; i--){

3929 
p
->
a
[
i
].
fg
.
joöty≥
 =Ö->a[i-1].fg.jointype;

3931 
p
->
a
[0].
fg
.
joöty≥
 = 0;

3933 
	}
}

3938 
	$sqlôe3BegöTønß˘i⁄
(
P¨£
 *
pP¨£
, 
ty≥
){

3939 
sqlôe3
 *
db
;

3940 
Vdbe
 *
v
;

3941 
i
;

3943 
	`as£π
–
pP¨£
!=0 );

3944 
db
 = 
pP¨£
->db;

3945 
	`as£π
–
db
!=0 );

3946 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_TRANSACTION
, "BEGIN", 0, 0) ){

3949 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

3950 if–!
v
 ) ;

3951 if–
ty≥
!=
TK_DEFERRED
 ){

3952 
i
=0; i<
db
->
nDb
; i++){

3953 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Tønß˘i⁄
, 
i
, (
ty≥
==
TK_EXCLUSIVE
)+1);

3954 
	`sqlôe3VdbeU£sBåì
(
v
, 
i
);

3957 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_AutoCommô
);

3958 
	}
}

3963 
	$sqlôe3CommôTønß˘i⁄
(
P¨£
 *
pP¨£
){

3964 
Vdbe
 *
v
;

3966 
	`as£π
–
pP¨£
!=0 );

3967 
	`as£π
–
pP¨£
->
db
!=0 );

3968 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_TRANSACTION
, "COMMIT", 0, 0) ){

3971 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

3972 if–
v
 ){

3973 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_AutoCommô
, 1);

3975 
	}
}

3980 
	$sqlôe3RﬁlbackTønß˘i⁄
(
P¨£
 *
pP¨£
){

3981 
Vdbe
 *
v
;

3983 
	`as£π
–
pP¨£
!=0 );

3984 
	`as£π
–
pP¨£
->
db
!=0 );

3985 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_TRANSACTION
, "ROLLBACK", 0, 0) ){

3988 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

3989 if–
v
 ){

3990 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_AutoCommô
, 1, 1);

3992 
	}
}

3998 
	$sqlôe3Savïoöt
(
P¨£
 *
pP¨£
, 
›
, 
Tokí
 *
pName
){

3999 *
zName
 = 
	`sqlôe3NameFromTokí
(
pP¨£
->
db
, 
pName
);

4000 if–
zName
 ){

4001 
Vdbe
 *
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

4002 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


4003 c⁄° * c⁄° 
az
[] = { "BEGIN", "RELEASE", "ROLLBACK" };

4004 
	`as£π
–!
SAVEPOINT_BEGIN
 && 
SAVEPOINT_RELEASE
==1 && 
SAVEPOINT_ROLLBACK
==2 );

4006 if–!
v
 || 
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_SAVEPOINT
, 
az
[
›
], 
zName
, 0) ){

4007 
	`sqlôe3DbFªe
(
pP¨£
->
db
, 
zName
);

4010 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Savïoöt
, 
›
, 0, 0, 
zName
, 
P4_DYNAMIC
);

4012 
	}
}

4018 
	$sqlôe3O≥nTempD©aba£
(
P¨£
 *
pP¨£
){

4019 
sqlôe3
 *
db
 = 
pP¨£
->db;

4020 if–
db
->
aDb
[1].
pBt
==0 && !
pP¨£
->
ex∂aö
 ){

4021 
rc
;

4022 
Båì
 *
pBt
;

4023 c⁄° 
Êags
 =

4024 
SQLITE_OPEN_READWRITE
 |

4025 
SQLITE_OPEN_CREATE
 |

4026 
SQLITE_OPEN_EXCLUSIVE
 |

4027 
SQLITE_OPEN_DELETEONCLOSE
 |

4028 
SQLITE_OPEN_TEMP_DB
;

4030 
rc
 = 
	`sqlôe3BåìO≥n
(
db
->
pVfs
, 0, db, &
pBt
, 0, 
Êags
);

4031 if–
rc
!=
SQLITE_OK
 ){

4032 
	`sqlôe3Eº‹Msg
(
pP¨£
, "unableÅo openáÅemporary database "

4034 
pP¨£
->
rc
 =Ñc;

4037 
db
->
aDb
[1].
pBt
 =ÖBt;

4038 
	`as£π
–
db
->
aDb
[1].
pSchema
 );

4039 if–
SQLITE_NOMEM
==
	`sqlôe3BåìSëPageSize
(
pBt
, 
db
->
√xtPagesize
, -1, 0) ){

4040 
	`sqlôe3OomFau…
(
db
);

4045 
	}
}

4053 
	$sqlôe3CodeVîifySchema
(
P¨£
 *
pP¨£
, 
iDb
){

4054 
P¨£
 *
pT›Àvñ
 = 
	`sqlôe3P¨£T›Àvñ
(
pP¨£
);

4056 
	`as£π
–
iDb
>=0 && iDb<
pP¨£
->
db
->
nDb
 );

4057 
	`as£π
–
pP¨£
->
db
->
aDb
[
iDb
].
pBt
!=0 || iDb==1 );

4058 
	`as£π
–
iDb
<
SQLITE_MAX_ATTACHED
+2 );

4059 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
pP¨£
->
db
, 
iDb
, 0) );

4060 if–
	`DbMaskTe°
(
pT›Àvñ
->
cookõMask
, 
iDb
)==0 ){

4061 
	`DbMaskSë
(
pT›Àvñ
->
cookõMask
, 
iDb
);

4062 if–!
OMIT_TEMPDB
 && 
iDb
==1 ){

4063 
	`sqlôe3O≥nTempD©aba£
(
pT›Àvñ
);

4066 
	}
}

4072 
	$sqlôe3CodeVîifyNamedSchema
(
P¨£
 *
pP¨£
, c⁄° *
zDb
){

4073 
sqlôe3
 *
db
 = 
pP¨£
->db;

4074 
i
;

4075 
i
=0; i<
db
->
nDb
; i++){

4076 
Db
 *
pDb
 = &
db
->
aDb
[
i
];

4077 if–
pDb
->
pBt
 && (!
zDb
 || 0==
	`sqlôe3SåICmp
(zDb,ÖDb->
zDbSName
)) ){

4078 
	`sqlôe3CodeVîifySchema
(
pP¨£
, 
i
);

4081 
	}
}

4096 
	$sqlôe3BegöWrôeO≥øti⁄
(
P¨£
 *
pP¨£
, 
£tSèãmít
, 
iDb
){

4097 
P¨£
 *
pT›Àvñ
 = 
	`sqlôe3P¨£T›Àvñ
(
pP¨£
);

4098 
	`sqlôe3CodeVîifySchema
(
pP¨£
, 
iDb
);

4099 
	`DbMaskSë
(
pT›Àvñ
->
wrôeMask
, 
iDb
);

4100 
pT›Àvñ
->
isMu…iWrôe
 |
£tSèãmít
;

4101 
	}
}

4110 
	$sqlôe3Mu…iWrôe
(
P¨£
 *
pP¨£
){

4111 
P¨£
 *
pT›Àvñ
 = 
	`sqlôe3P¨£T›Àvñ
(
pP¨£
);

4112 
pT›Àvñ
->
isMu…iWrôe
 = 1;

4113 
	}
}

4131 
	$sqlôe3MayAb‹t
(
P¨£
 *
pP¨£
){

4132 
P¨£
 *
pT›Àvñ
 = 
	`sqlôe3P¨£T›Àvñ
(
pP¨£
);

4133 
pT›Àvñ
->
mayAb‹t
 = 1;

4134 
	}
}

4141 
	$sqlôe3HÆtC⁄°øöt
(

4142 
P¨£
 *
pP¨£
,

4143 
îrCode
,

4144 
⁄Eº‹
,

4145 *
p4
,

4146 
i8
 
p4ty≥
,

4147 
u8
 
p5Eºmsg


4149 
Vdbe
 *
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

4150 
	`as£π
–(
îrCode
&0xff)==
SQLITE_CONSTRAINT
 );

4151 if–
⁄Eº‹
==
OE_Ab‹t
 ){

4152 
	`sqlôe3MayAb‹t
(
pP¨£
);

4154 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_HÆt
, 
îrCode
, 
⁄Eº‹
, 0, 
p4
, 
p4ty≥
);

4155 
	`sqlôe3VdbeCh™geP5
(
v
, 
p5Eºmsg
);

4156 
	}
}

4161 
	$sqlôe3UniqueC⁄°øöt
(

4162 
P¨£
 *
pP¨£
,

4163 
⁄Eº‹
,

4164 
Index
 *
pIdx


4166 *
zEº
;

4167 
j
;

4168 
SåAccum
 
îrMsg
;

4169 
TabÀ
 *
pTab
 = 
pIdx
->
pTabÀ
;

4171 
	`sqlôe3SåAccumInô
(&
îrMsg
, 
pP¨£
->
db
, 0, 0, 200);

4172 if–
pIdx
->
aCﬁEx¥
 ){

4173 
	`sqlôe3XPrötf
(&
îrMsg
, "ödex '%q'", 
pIdx
->
zName
);

4175 
j
=0; j<
pIdx
->
nKeyCﬁ
; j++){

4176 *
zCﬁ
;

4177 
	`as£π
–
pIdx
->
aiCﬁumn
[
j
]>=0 );

4178 
zCﬁ
 = 
pTab
->
aCﬁ
[
pIdx
->
aiCﬁumn
[
j
]].
zName
;

4179 if–
j
 ) 
	`sqlôe3SåAccumAµíd
(&
îrMsg
, ", ", 2);

4180 
	`sqlôe3XPrötf
(&
îrMsg
, "%s.%s", 
pTab
->
zName
, 
zCﬁ
);

4183 
zEº
 = 
	`sqlôe3SåAccumFöish
(&
îrMsg
);

4184 
	`sqlôe3HÆtC⁄°øöt
(
pP¨£
,

4185 
	`IsPrim¨yKeyIndex
(
pIdx
Ë? 
SQLITE_CONSTRAINT_PRIMARYKEY


4186 : 
SQLITE_CONSTRAINT_UNIQUE
,

4187 
⁄Eº‹
, 
zEº
, 
P4_DYNAMIC
, 
P5_C⁄°øötUnique
);

4188 
	}
}

4194 
	$sqlôe3RowidC⁄°øöt
(

4195 
P¨£
 *
pP¨£
,

4196 
⁄Eº‹
,

4197 
TabÀ
 *
pTab


4199 *
zMsg
;

4200 
rc
;

4201 if–
pTab
->
iPKey
>=0 ){

4202 
zMsg
 = 
	`sqlôe3MPrötf
(
pP¨£
->
db
, "%s.%s", 
pTab
->
zName
,

4203 
pTab
->
aCﬁ
[pTab->
iPKey
].
zName
);

4204 
rc
 = 
SQLITE_CONSTRAINT_PRIMARYKEY
;

4206 
zMsg
 = 
	`sqlôe3MPrötf
(
pP¨£
->
db
, "%s.rowid", 
pTab
->
zName
);

4207 
rc
 = 
SQLITE_CONSTRAINT_ROWID
;

4209 
	`sqlôe3HÆtC⁄°øöt
(
pP¨£
, 
rc
, 
⁄Eº‹
, 
zMsg
, 
P4_DYNAMIC
,

4210 
P5_C⁄°øötUnique
);

4211 
	}
}

4217 #i‚de‡
SQLITE_OMIT_REINDEX


4218 
	$cﬁœti⁄M©ch
(c⁄° *
zCﬁl
, 
Index
 *
pIndex
){

4219 
i
;

4220 
	`as£π
–
zCﬁl
!=0 );

4221 
i
=0; i<
pIndex
->
nCﬁumn
; i++){

4222 c⁄° *
z
 = 
pIndex
->
azCﬁl
[
i
];

4223 
	`as£π
–
z
!=0 || 
pIndex
->
aiCﬁumn
[
i
]<0 );

4224 if–
pIndex
->
aiCﬁumn
[
i
]>=0 && 0==
	`sqlôe3SåICmp
(
z
, 
zCﬁl
) ){

4229 
	}
}

4236 #i‚de‡
SQLITE_OMIT_REINDEX


4237 
	$ªödexTabÀ
(
P¨£
 *
pP¨£
, 
TabÀ
 *
pTab
, c⁄° *
zCﬁl
){

4238 
Index
 *
pIndex
;

4240 
pIndex
=
pTab
->pIndex;ÖIndex;ÖIndexıIndex->
pNext
){

4241 if–
zCﬁl
==0 || 
	`cﬁœti⁄M©ch
(zCﬁl, 
pIndex
) ){

4242 
iDb
 = 
	`sqlôe3SchemaToIndex
(
pP¨£
->
db
, 
pTab
->
pSchema
);

4243 
	`sqlôe3BegöWrôeO≥øti⁄
(
pP¨£
, 0, 
iDb
);

4244 
	`sqlôe3RefûlIndex
(
pP¨£
, 
pIndex
, -1);

4247 
	}
}

4255 #i‚de‡
SQLITE_OMIT_REINDEX


4256 
	$ªödexD©aba£s
(
P¨£
 *
pP¨£
, c⁄° *
zCﬁl
){

4257 
Db
 *
pDb
;

4258 
iDb
;

4259 
sqlôe3
 *
db
 = 
pP¨£
->db;

4260 
HashEÀm
 *
k
;

4261 
TabÀ
 *
pTab
;

4263 
	`as£π
–
	`sqlôe3BåìHﬁdsAŒMuãxes
(
db
) );

4264 
iDb
=0, 
pDb
=
db
->
aDb
; iDb<db->
nDb
; iDb++,ÖDb++){

4265 
	`as£π
–
pDb
!=0 );

4266 
k
=
	`sqlôeHashFú°
(&
pDb
->
pSchema
->
tblHash
); k; k=
	`sqlôeHashNext
(k)){

4267 
pTab
 = (
TabÀ
*)
	`sqlôeHashD©a
(
k
);

4268 
	`ªödexTabÀ
(
pP¨£
, 
pTab
, 
zCﬁl
);

4271 
	}
}

4287 #i‚de‡
SQLITE_OMIT_REINDEX


4288 
	$sqlôe3Reödex
(
P¨£
 *
pP¨£
, 
Tokí
 *
pName1
, Tokí *
pName2
){

4289 
CﬁlSeq
 *
pCﬁl
;

4290 *
z
;

4291 c⁄° *
zDb
;

4292 
TabÀ
 *
pTab
;

4293 
Index
 *
pIndex
;

4294 
iDb
;

4295 
sqlôe3
 *
db
 = 
pP¨£
->db;

4296 
Tokí
 *
pObjName
;

4300 if–
SQLITE_OK
!=
	`sqlôe3RódSchema
(
pP¨£
) ){

4304 if–
pName1
==0 ){

4305 
	`ªödexD©aba£s
(
pP¨£
, 0);

4307 }if–
	`NEVER
(
pName2
==0Ë||ÖName2->
z
==0 ){

4308 *
zCﬁl
;

4309 
	`as£π
–
pName1
->
z
 );

4310 
zCﬁl
 = 
	`sqlôe3NameFromTokí
(
pP¨£
->
db
, 
pName1
);

4311 if–!
zCﬁl
 ) ;

4312 
pCﬁl
 = 
	`sqlôe3FödCﬁlSeq
(
db
, 
	`ENC
(db), 
zCﬁl
, 0);

4313 if–
pCﬁl
 ){

4314 
	`ªödexD©aba£s
(
pP¨£
, 
zCﬁl
);

4315 
	`sqlôe3DbFªe
(
db
, 
zCﬁl
);

4318 
	`sqlôe3DbFªe
(
db
, 
zCﬁl
);

4320 
iDb
 = 
	`sqlôe3TwoP¨tName
(
pP¨£
, 
pName1
, 
pName2
, &
pObjName
);

4321 if–
iDb
<0 ) ;

4322 
z
 = 
	`sqlôe3NameFromTokí
(
db
, 
pObjName
);

4323 if–
z
==0 ) ;

4324 
zDb
 = 
db
->
aDb
[
iDb
].
zDbSName
;

4325 
pTab
 = 
	`sqlôe3FödTabÀ
(
db
, 
z
, 
zDb
);

4326 if–
pTab
 ){

4327 
	`ªödexTabÀ
(
pP¨£
, 
pTab
, 0);

4328 
	`sqlôe3DbFªe
(
db
, 
z
);

4331 
pIndex
 = 
	`sqlôe3FödIndex
(
db
, 
z
, 
zDb
);

4332 
	`sqlôe3DbFªe
(
db
, 
z
);

4333 if–
pIndex
 ){

4334 
	`sqlôe3BegöWrôeO≥øti⁄
(
pP¨£
, 0, 
iDb
);

4335 
	`sqlôe3RefûlIndex
(
pP¨£
, 
pIndex
, -1);

4338 
	`sqlôe3Eº‹Msg
(
pP¨£
, "unableÅo identifyÅhe objectÅo beÑeindexed");

4339 
	}
}

4348 
KeyInfo
 *
	$sqlôe3KeyInfoOfIndex
(
P¨£
 *
pP¨£
, 
Index
 *
pIdx
){

4349 
i
;

4350 
nCﬁ
 = 
pIdx
->
nCﬁumn
;

4351 
nKey
 = 
pIdx
->
nKeyCﬁ
;

4352 
KeyInfo
 *
pKey
;

4353 if–
pP¨£
->
nEº
 )  0;

4354 if–
pIdx
->
uniqNŸNuŒ
 ){

4355 
pKey
 = 
	`sqlôe3KeyInfoAŒoc
(
pP¨£
->
db
, 
nKey
, 
nCﬁ
-nKey);

4357 
pKey
 = 
	`sqlôe3KeyInfoAŒoc
(
pP¨£
->
db
, 
nCﬁ
, 0);

4359 if–
pKey
 ){

4360 
	`as£π
–
	`sqlôe3KeyInfoIsWrôóbÀ
(
pKey
) );

4361 
i
=0; i<
nCﬁ
; i++){

4362 c⁄° *
zCﬁl
 = 
pIdx
->
azCﬁl
[
i
];

4363 
pKey
->
aCﬁl
[
i
] = 
zCﬁl
==
sqlôe3SåBINARY
 ? 0 :

4364 
	`sqlôe3LoˇãCﬁlSeq
(
pP¨£
, 
zCﬁl
);

4365 
pKey
->
aS‹tOrdî
[
i
] = 
pIdx
->aSortOrder[i];

4367 if–
pP¨£
->
nEº
 ){

4368 
	`sqlôe3KeyInfoUƒef
(
pKey
);

4369 
pKey
 = 0;

4372  
pKey
;

4373 
	}
}

4375 #i‚de‡
SQLITE_OMIT_CTE


4380 
Wôh
 *
	$sqlôe3WôhAdd
(

4381 
P¨£
 *
pP¨£
,

4382 
Wôh
 *
pWôh
,

4383 
Tokí
 *
pName
,

4384 
Ex¥Li°
 *
pArgli°
,

4385 
Sñe˘
 *
pQuîy


4387 
sqlôe3
 *
db
 = 
pP¨£
->db;

4388 
Wôh
 *
pNew
;

4389 *
zName
;

4393 
zName
 = 
	`sqlôe3NameFromTokí
(
pP¨£
->
db
, 
pName
);

4394 if–
zName
 && 
pWôh
 ){

4395 
i
;

4396 
i
=0; i<
pWôh
->
nCã
; i++){

4397 if–
	`sqlôe3SåICmp
(
zName
, 
pWôh
->
a
[
i
].zName)==0 ){

4398 
	`sqlôe3Eº‹Msg
(
pP¨£
, "du∂iˇã WITHÅabÀÇame: %s", 
zName
);

4403 if–
pWôh
 ){

4404 
nByã
 = (*
pWôh
Ë+ (’Wôh->
a
[1]Ë*ÖWôh->
nCã
);

4405 
pNew
 = 
	`sqlôe3DbRóŒoc
(
db
, 
pWôh
, 
nByã
);

4407 
pNew
 = 
	`sqlôe3DbMÆlocZîo
(
db
, (*
pWôh
));

4409 
	`as£π
–(
pNew
!=0 && 
zName
!=0Ë|| 
db
->
mÆlocFaûed
 );

4411 if–
db
->
mÆlocFaûed
 ){

4412 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pArgli°
);

4413 
	`sqlôe3Sñe˘Dñëe
(
db
, 
pQuîy
);

4414 
	`sqlôe3DbFªe
(
db
, 
zName
);

4415 
pNew
 = 
pWôh
;

4417 
pNew
->
a
[pNew->
nCã
].
pSñe˘
 = 
pQuîy
;

4418 
pNew
->
a
[pNew->
nCã
].
pCﬁs
 = 
pArgli°
;

4419 
pNew
->
a
[pNew->
nCã
].
zName
 = zName;

4420 
pNew
->
a
[pNew->
nCã
].
zCãEº
 = 0;

4421 
pNew
->
nCã
++;

4424  
pNew
;

4425 
	}
}

4430 
	$sqlôe3WôhDñëe
(
sqlôe3
 *
db
, 
Wôh
 *
pWôh
){

4431 if–
pWôh
 ){

4432 
i
;

4433 
i
=0; i<
pWôh
->
nCã
; i++){

4434 
Cã
 *
pCã
 = &
pWôh
->
a
[
i
];

4435 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pCã
->
pCﬁs
);

4436 
	`sqlôe3Sñe˘Dñëe
(
db
, 
pCã
->
pSñe˘
);

4437 
	`sqlôe3DbFªe
(
db
, 
pCã
->
zName
);

4439 
	`sqlôe3DbFªe
(
db
, 
pWôh
);

4441 
	}
}

	@callback.c

17 
	~"sqlôeI¡.h
"

23 
	$ˇŒCﬁlNìded
(
sqlôe3
 *
db
, 
íc
, c⁄° *
zName
){

24 
	`as£π
–!
db
->
xCﬁlNìded
 || !db->
xCﬁlNìded16
 );

25 if–
db
->
xCﬁlNìded
 ){

26 *
zExã∫Æ
 = 
	`sqlôe3DbSåDup
(
db
, 
zName
);

27 if–!
zExã∫Æ
 ) ;

28 
db
->
	`xCﬁlNìded
(db->
pCﬁlNìdedArg
, db, 
íc
, 
zExã∫Æ
);

29 
	`sqlôe3DbFªe
(
db
, 
zExã∫Æ
);

31 #i‚de‡
SQLITE_OMIT_UTF16


32 if–
db
->
xCﬁlNìded16
 ){

33 c⁄° *
zExã∫Æ
;

34 
sqlôe3_vÆue
 *
pTmp
 = 
	`sqlôe3VÆueNew
(
db
);

35 
	`sqlôe3VÆueSëSå
(
pTmp
, -1, 
zName
, 
SQLITE_UTF8
, 
SQLITE_STATIC
);

36 
zExã∫Æ
 = 
	`sqlôe3VÆueText
(
pTmp
, 
SQLITE_UTF16NATIVE
);

37 if–
zExã∫Æ
 ){

38 
db
->
	`xCﬁlNìded16
(db->
pCﬁlNìdedArg
, db, ()
	`ENC
(db), 
zExã∫Æ
);

40 
	`sqlôe3VÆueFªe
(
pTmp
);

43 
	}
}

52 
	$sy¡hCﬁlSeq
(
sqlôe3
 *
db
, 
CﬁlSeq
 *
pCﬁl
){

53 
CﬁlSeq
 *
pCﬁl2
;

54 *
z
 = 
pCﬁl
->
zName
;

55 
i
;

56 c⁄° 
u8
 
aEnc
[] = { 
SQLITE_UTF16BE
, 
SQLITE_UTF16LE
, 
SQLITE_UTF8
 };

57 
i
=0; i<3; i++){

58 
pCﬁl2
 = 
	`sqlôe3FödCﬁlSeq
(
db
, 
aEnc
[
i
], 
z
, 0);

59 if–
pCﬁl2
->
xCmp
!=0 ){

60 
	`mem˝y
(
pCﬁl
, 
pCﬁl2
, (
CﬁlSeq
));

61 
pCﬁl
->
xDñ
 = 0;

62  
SQLITE_OK
;

65  
SQLITE_ERROR
;

66 
	}
}

82 
CﬁlSeq
 *
	$sqlôe3GëCﬁlSeq
(

83 
P¨£
 *
pP¨£
,

84 
u8
 
íc
,

85 
CﬁlSeq
 *
pCﬁl
,

86 c⁄° *
zName


88 
CﬁlSeq
 *
p
;

89 
sqlôe3
 *
db
 = 
pP¨£
->db;

91 
p
 = 
pCﬁl
;

92 if–!
p
 ){

93 
p
 = 
	`sqlôe3FödCﬁlSeq
(
db
, 
íc
, 
zName
, 0);

95 if–!
p
 || !p->
xCmp
 ){

99 
	`ˇŒCﬁlNìded
(
db
, 
íc
, 
zName
);

100 
p
 = 
	`sqlôe3FödCﬁlSeq
(
db
, 
íc
, 
zName
, 0);

102 if–
p
 && !p->
xCmp
 && 
	`sy¡hCﬁlSeq
(
db
,Ö) ){

103 
p
 = 0;

105 
	`as£π
–!
p
 ||Ö->
xCmp
 );

106 if–
p
==0 ){

107 
	`sqlôe3Eº‹Msg
(
pP¨£
, "nÿsuch cﬁœti⁄ sequí˚: %s", 
zName
);

109  
p
;

110 
	}
}

123 
	$sqlôe3CheckCﬁlSeq
(
P¨£
 *
pP¨£
, 
CﬁlSeq
 *
pCﬁl
){

124 if–
pCﬁl
 ){

125 c⁄° *
zName
 = 
pCﬁl
->zName;

126 
sqlôe3
 *
db
 = 
pP¨£
->db;

127 
CﬁlSeq
 *
p
 = 
	`sqlôe3GëCﬁlSeq
(
pP¨£
, 
	`ENC
(
db
), 
pCﬁl
, 
zName
);

128 if–!
p
 ){

129  
SQLITE_ERROR
;

131 
	`as£π
–
p
==
pCﬁl
 );

133  
SQLITE_OK
;

134 
	}
}

151 
CﬁlSeq
 *
	$födCﬁlSeqE¡ry
(

152 
sqlôe3
 *
db
,

153 c⁄° *
zName
,

154 
¸óã


156 
CﬁlSeq
 *
pCﬁl
;

157 
pCﬁl
 = 
	`sqlôe3HashFöd
(&
db
->
aCﬁlSeq
, 
zName
);

159 if–0==
pCﬁl
 && 
¸óã
 ){

160 
nName
 = 
	`sqlôe3SåÀn30
(
zName
);

161 
pCﬁl
 = 
	`sqlôe3DbMÆlocZîo
(
db
, 3*(*pCﬁlË+ 
nName
 + 1);

162 if–
pCﬁl
 ){

163 
CﬁlSeq
 *
pDñ
 = 0;

164 
pCﬁl
[0].
zName
 = (*)&pColl[3];

165 
pCﬁl
[0].
íc
 = 
SQLITE_UTF8
;

166 
pCﬁl
[1].
zName
 = (*)&pColl[3];

167 
pCﬁl
[1].
íc
 = 
SQLITE_UTF16LE
;

168 
pCﬁl
[2].
zName
 = (*)&pColl[3];

169 
pCﬁl
[2].
íc
 = 
SQLITE_UTF16BE
;

170 
	`mem˝y
(
pCﬁl
[0].
zName
, zName, 
nName
);

171 
pCﬁl
[0].
zName
[
nName
] = 0;

172 
pDñ
 = 
	`sqlôe3HashIn£π
(&
db
->
aCﬁlSeq
, 
pCﬁl
[0].
zName
,ÖColl);

178 
	`as£π
–
pDñ
==0 ||ÖDñ==
pCﬁl
 );

179 if–
pDñ
!=0 ){

180 
	`sqlôe3OomFau…
(
db
);

181 
	`sqlôe3DbFªe
(
db
, 
pDñ
);

182 
pCﬁl
 = 0;

186  
pCﬁl
;

187 
	}
}

204 
CﬁlSeq
 *
	$sqlôe3FödCﬁlSeq
(

205 
sqlôe3
 *
db
,

206 
u8
 
íc
,

207 c⁄° *
zName
,

208 
¸óã


210 
CﬁlSeq
 *
pCﬁl
;

211 if–
zName
 ){

212 
pCﬁl
 = 
	`födCﬁlSeqE¡ry
(
db
, 
zName
, 
¸óã
);

214 
pCﬁl
 = 
db
->
pDÊtCﬁl
;

216 
	`as£π
–
SQLITE_UTF8
==1 && 
SQLITE_UTF16LE
==2 && 
SQLITE_UTF16BE
==3 );

217 
	`as£π
–
íc
>=
SQLITE_UTF8
 &&Énc<=
SQLITE_UTF16BE
 );

218 if–
pCﬁl
 )ÖCﬁ»+
íc
-1;

219  
pCﬁl
;

220 
	}
}

250 
	#FUNC_PERFECT_MATCH
 6

	)

251 
	$m©chQuÆôy
(

252 
FuncDef
 *
p
,

253 
nArg
,

254 
u8
 
íc


256 
m©ch
;

259 if–
nArg
==(-2ËË (
p
->
xSFunc
==0Ë? 0 : 
FUNC_PERFECT_MATCH
;

262 if–
p
->
nArg
!=nArg &&Ö->nArg>=0 )  0;

266 if–
p
->
nArg
==nArg ){

267 
m©ch
 = 4;

269 
m©ch
 = 1;

273 if–
íc
==(
p
->
funcFœgs
 & 
SQLITE_FUNC_ENCMASK
) ){

274 
m©ch
 += 2;

275 }if–(
íc
 & 
p
->
funcFœgs
 & 2)!=0 ){

276 
m©ch
 += 1;

279  
m©ch
;

280 
	}
}

286 
FuncDef
 *
	$fun˘i⁄Sórch
(

287 
h
,

288 c⁄° *
zFunc


290 
FuncDef
 *
p
;

291 
p
=
sqlôe3BuûtöFun˘i⁄s
.
a
[
h
];Ö;Öı->
u
.
pHash
){

292 if–
	`sqlôe3SåICmp
(
p
->
zName
, 
zFunc
)==0 ){

293  
p
;

297 
	}
}

302 
	$sqlôe3In£πBuûtöFuncs
(

303 
FuncDef
 *
aDef
,

304 
nDef


306 
i
;

307 
i
=0; i<
nDef
; i++){

308 
FuncDef
 *
pOthî
;

309 c⁄° *
zName
 = 
aDef
[
i
].zName;

310 
nName
 = 
	`sqlôe3SåÀn30
(
zName
);

311 
h
 = (
sqlôe3UµîToLowî
[(
u8
)
zName
[0]] + 
nName
Ë% 
SQLITE_FUNC_HASH_SZ
;

312 
pOthî
 = 
	`fun˘i⁄Sórch
(
h
, 
zName
);

313 if–
pOthî
 ){

314 
	`as£π
–
pOthî
!=&
aDef
[
i
] &&ÖOthî->
pNext
!=&aDef[i] );

315 
aDef
[
i
].
pNext
 = 
pOthî
->pNext;

316 
pOthî
->
pNext
 = &
aDef
[
i
];

318 
aDef
[
i
].
pNext
 = 0;

319 
aDef
[
i
].
u
.
pHash
 = 
sqlôe3BuûtöFun˘i⁄s
.
a
[
h
];

320 
sqlôe3BuûtöFun˘i⁄s
.
a
[
h
] = &
aDef
[
i
];

323 
	}
}

346 
FuncDef
 *
	$sqlôe3FödFun˘i⁄
(

347 
sqlôe3
 *
db
,

348 c⁄° *
zName
,

349 
nArg
,

350 
u8
 
íc
,

351 
u8
 
¸óãFœg


353 
FuncDef
 *
p
;

354 
FuncDef
 *
pBe°
 = 0;

355 
be°Sc‹e
 = 0;

356 
h
;

357 
nName
;

359 
	`as£π
–
nArg
>=(-2) );

360 
	`as£π
–
nArg
>=(-1Ë|| 
¸óãFœg
==0 );

361 
nName
 = 
	`sqlôe3SåÀn30
(
zName
);

365 
p
 = (
FuncDef
*)
	`sqlôe3HashFöd
(&
db
->
aFunc
, 
zName
);

366  
p
 ){

367 
sc‹e
 = 
	`m©chQuÆôy
(
p
, 
nArg
, 
íc
);

368 if–
sc‹e
>
be°Sc‹e
 ){

369 
pBe°
 = 
p
;

370 
be°Sc‹e
 = 
sc‹e
;

372 
p
 =Ö->
pNext
;

387 if–!
¸óãFœg
 && (
pBe°
==0 || (
db
->
Êags
 & 
SQLITE_Pª„rBuûtö
)!=0) ){

388 
be°Sc‹e
 = 0;

389 
h
 = (
sqlôe3UµîToLowî
[(
u8
)
zName
[0]] + 
nName
Ë% 
SQLITE_FUNC_HASH_SZ
;

390 
p
 = 
	`fun˘i⁄Sórch
(
h
, 
zName
);

391  
p
 ){

392 
sc‹e
 = 
	`m©chQuÆôy
(
p
, 
nArg
, 
íc
);

393 if–
sc‹e
>
be°Sc‹e
 ){

394 
pBe°
 = 
p
;

395 
be°Sc‹e
 = 
sc‹e
;

397 
p
 =Ö->
pNext
;

405 if–
¸óãFœg
 && 
be°Sc‹e
<
FUNC_PERFECT_MATCH
 &&

406 (
pBe°
 = 
	`sqlôe3DbMÆlocZîo
(
db
, (*pBe°)+
nName
+1))!=0 ){

407 
FuncDef
 *
pOthî
;

408 
pBe°
->
zName
 = (const *)&pBest[1];

409 
pBe°
->
nArg
 = (
u16
)nArg;

410 
pBe°
->
funcFœgs
 = 
íc
;

411 
	`mem˝y
((*)&
pBe°
[1], 
zName
, 
nName
+1);

412 
pOthî
 = (
FuncDef
*)
	`sqlôe3HashIn£π
(&
db
->
aFunc
, 
pBe°
->
zName
,ÖBest);

413 if–
pOthî
==
pBe°
 ){

414 
	`sqlôe3DbFªe
(
db
, 
pBe°
);

415 
	`sqlôe3OomFau…
(
db
);

418 
pBe°
->
pNext
 = 
pOthî
;

422 if–
pBe°
 && (pBe°->
xSFunc
 || 
¸óãFœg
) ){

423  
pBe°
;

426 
	}
}

436 
	$sqlôe3SchemaCÀ¨
(*
p
){

437 
Hash
 
ãmp1
;

438 
Hash
 
ãmp2
;

439 
HashEÀm
 *
pEÀm
;

440 
Schema
 *
pSchema
 = (Schem®*)
p
;

442 
ãmp1
 = 
pSchema
->
tblHash
;

443 
ãmp2
 = 
pSchema
->
åigHash
;

444 
	`sqlôe3HashInô
(&
pSchema
->
åigHash
);

445 
	`sqlôe3HashCÀ¨
(&
pSchema
->
idxHash
);

446 
pEÀm
=
	`sqlôeHashFú°
(&
ãmp2
);ÖEÀm;ÖEÀm=
	`sqlôeHashNext
(pElem)){

447 
	`sqlôe3DñëeTriggî
(0, (
Triggî
*)
	`sqlôeHashD©a
(
pEÀm
));

449 
	`sqlôe3HashCÀ¨
(&
ãmp2
);

450 
	`sqlôe3HashInô
(&
pSchema
->
tblHash
);

451 
pEÀm
=
	`sqlôeHashFú°
(&
ãmp1
);ÖEÀm;ÖEÀm=
	`sqlôeHashNext
(pElem)){

452 
TabÀ
 *
pTab
 = 
	`sqlôeHashD©a
(
pEÀm
);

453 
	`sqlôe3DñëeTabÀ
(0, 
pTab
);

455 
	`sqlôe3HashCÀ¨
(&
ãmp1
);

456 
	`sqlôe3HashCÀ¨
(&
pSchema
->
fkeyHash
);

457 
pSchema
->
pSeqTab
 = 0;

458 if–
pSchema
->
schemaFœgs
 & 
DB_SchemaLﬂded
 ){

459 
pSchema
->
iGíî©i⁄
++;

460 
pSchema
->
schemaFœgs
 &~
DB_SchemaLﬂded
;

462 
	}
}

468 
Schema
 *
	$sqlôe3SchemaGë
(
sqlôe3
 *
db
, 
Båì
 *
pBt
){

469 
Schema
 * 
p
;

470 if–
pBt
 ){

471 
p
 = (
Schema
 *)
	`sqlôe3BåìSchema
(
pBt
, (Schema), 
sqlôe3SchemaCÀ¨
);

473 
p
 = (
Schema
 *)
	`sqlôe3DbMÆlocZîo
(0, (Schema));

475 if–!
p
 ){

476 
	`sqlôe3OomFau…
(
db
);

477 }i‡–0==
p
->
fûe_f‹m©
 ){

478 
	`sqlôe3HashInô
(&
p
->
tblHash
);

479 
	`sqlôe3HashInô
(&
p
->
idxHash
);

480 
	`sqlôe3HashInô
(&
p
->
åigHash
);

481 
	`sqlôe3HashInô
(&
p
->
fkeyHash
);

482 
p
->
íc
 = 
SQLITE_UTF8
;

484  
p
;

485 
	}
}

	@complete.c

19 
	~"sqlôeI¡.h
"

20 #i‚de‡
SQLITE_OMIT_COMPLETE


25 #i‚de‡
SQLITE_AMALGAMATION


26 #ifde‡
SQLITE_ASCII


27 
	#IdCh¨
(
C
Ë((
sqlôe3Cty≥M≠
[()C]&0x46)!=0)

	)

29 #ifde‡
SQLITE_EBCDIC


30 c⁄° 
sqlôe3IsEbcdicIdCh¨
[];

31 
	#IdCh¨
(
C
Ë(((
c
=C)>=0x42 && 
sqlôe3IsEbcdicIdCh¨
[c-0x40]))

	)

40 
	#tkSEMI
 0

	)

41 
	#tkWS
 1

	)

42 
	#tkOTHER
 2

	)

43 #i‚de‡
SQLITE_OMIT_TRIGGER


44 
	#tkEXPLAIN
 3

	)

45 
	#tkCREATE
 4

	)

46 
	#tkTEMP
 5

	)

47 
	#tkTRIGGER
 6

	)

48 
	#tkEND
 7

	)

104 
	$sqlôe3_com∂ëe
(c⁄° *
zSql
){

105 
u8
 
°©e
 = 0;

106 
u8
 
tokí
;

108 #i‚de‡
SQLITE_OMIT_TRIGGER


112 c⁄° 
u8
 
å™s
[8][8] = {

128 c⁄° 
u8
 
å™s
[3][3] = {

137 #ifde‡
SQLITE_ENABLE_API_ARMOR


138 if–
zSql
==0 ){

139 ()
SQLITE_MISUSE_BKPT
;

144  *
zSql
 ){

145  *
zSql
 ){

147 
tokí
 = 
tkSEMI
;

155 
tokí
 = 
tkWS
;

159 if–
zSql
[1]!='*' ){

160 
tokí
 = 
tkOTHER
;

163 
zSql
 += 2;

164  
zSql
[0] && (zSql[0]!='*' || zSql[1]!='/') ){ zSql++; }

165 if–
zSql
[0]==0 )  0;

166 
zSql
++;

167 
tokí
 = 
tkWS
;

171 if–
zSql
[1]!='-' ){

172 
tokí
 = 
tkOTHER
;

175  *
zSql
 && *zSql!='\n' ){ zSql++; }

176 if–*
zSql
==0 )  
°©e
==1;

177 
tokí
 = 
tkWS
;

181 
zSql
++;

182  *
zSql
 && *zSql!=']' ){ zSql++; }

183 if–*
zSql
==0 )  0;

184 
tokí
 = 
tkOTHER
;

190 
c
 = *
zSql
;

191 
zSql
++;

192  *
zSql
 && *zSql!=
c
 ){ zSql++; }

193 if–*
zSql
==0 )  0;

194 
tokí
 = 
tkOTHER
;

198 #ifde‡
SQLITE_EBCDIC


199 
c
;

201 if–
	`IdCh¨
((
u8
)*
zSql
) ){

203 
nId
;

204 
nId
=1; 
	`IdCh¨
(
zSql
[nId]);ÇId++){}

205 #ifde‡
SQLITE_OMIT_TRIGGER


206 
tokí
 = 
tkOTHER
;

208  *
zSql
 ){

210 if–
nId
==6 && 
	`sqlôe3SåNICmp
(
zSql
, "create", 6)==0 ){

211 
tokí
 = 
tkCREATE
;

213 
tokí
 = 
tkOTHER
;

218 if–
nId
==7 && 
	`sqlôe3SåNICmp
(
zSql
, "trigger", 7)==0 ){

219 
tokí
 = 
tkTRIGGER
;

220 }if–
nId
==4 && 
	`sqlôe3SåNICmp
(
zSql
, "temp", 4)==0 ){

221 
tokí
 = 
tkTEMP
;

222 }if–
nId
==9 && 
	`sqlôe3SåNICmp
(
zSql
, "temporary", 9)==0 ){

223 
tokí
 = 
tkTEMP
;

225 
tokí
 = 
tkOTHER
;

230 if–
nId
==3 && 
	`sqlôe3SåNICmp
(
zSql
, "end", 3)==0 ){

231 
tokí
 = 
tkEND
;

233 #i‚de‡
SQLITE_OMIT_EXPLAIN


234 if–
nId
==7 && 
	`sqlôe3SåNICmp
(
zSql
, "explain", 7)==0 ){

235 
tokí
 = 
tkEXPLAIN
;

239 
tokí
 = 
tkOTHER
;

244 
tokí
 = 
tkOTHER
;

249 
zSql
 +
nId
-1;

252 
tokí
 = 
tkOTHER
;

257 
°©e
 = 
å™s
[°©e][
tokí
];

258 
zSql
++;

260  
°©e
==1;

261 
	}
}

263 #i‚de‡
SQLITE_OMIT_UTF16


269 
	$sqlôe3_com∂ëe16
(c⁄° *
zSql
){

270 
sqlôe3_vÆue
 *
pVÆ
;

271 c⁄° *
zSql8
;

272 
rc
;

274 #i‚de‡
SQLITE_OMIT_AUTOINIT


275 
rc
 = 
	`sqlôe3_öôülize
();

276 if–
rc
 ) Ñc;

278 
pVÆ
 = 
	`sqlôe3VÆueNew
(0);

279 
	`sqlôe3VÆueSëSå
(
pVÆ
, -1, 
zSql
, 
SQLITE_UTF16NATIVE
, 
SQLITE_STATIC
);

280 
zSql8
 = 
	`sqlôe3VÆueText
(
pVÆ
, 
SQLITE_UTF8
);

281 if–
zSql8
 ){

282 
rc
 = 
	`sqlôe3_com∂ëe
(
zSql8
);

284 
rc
 = 
SQLITE_NOMEM_BKPT
;

286 
	`sqlôe3VÆueFªe
(
pVÆ
);

287  
rc
 & 0xff;

288 
	}
}

	@ctime.c

17 #i‚de‡
SQLITE_OMIT_COMPILEOPTION_DIAGS


19 
	~"sqlôeI¡.h
"

29 c⁄° * c⁄° 
	gazCompûeO±
[] = {

33 
	#CTIMEOPT_VAL_
(
›t
Ë#›t

	)

34 
	#CTIMEOPT_VAL
(
›t
Ë
	`CTIMEOPT_VAL_
(›t)

	)

36 #i‡
SQLITE_32BIT_ROWID


39 #i‡
SQLITE_4_BYTE_ALIGNED_MALLOC


42 #i‡
SQLITE_CASE_SENSITIVE_LIKE


45 #i‡
SQLITE_CHECK_PAGES


48 #i‡
deföed
(
__˛™g__
Ë&& deföed(
__˛™g_maj‹__
)

49 "COMPILER=˛™g-" 
CTIMEOPT_VAL
(
__˛™g_maj‹__
) "."

50 
CTIMEOPT_VAL
(
__˛™g_mö‹__
) "."

51 
CTIMEOPT_VAL
(
__˛™g_∑tchÀvñ__
),

52 #ñi‡
deföed
(
_MSC_VER
)

53 "COMPILER=msvc-" 
CTIMEOPT_VAL
(
_MSC_VER
),

54 #ñi‡
deföed
(
__GNUC__
Ë&& deföed(
__VERSION__
)

55 "COMPILER=gcc-" 
__VERSION__
,

57 #i‡
SQLITE_COVERAGE_TEST


60 #i‡
SQLITE_DEBUG


63 #i‡
SQLITE_DEFAULT_LOCKING_MODE


64 "DEFAULT_LOCKING_MODE=" 
CTIMEOPT_VAL
(
SQLITE_DEFAULT_LOCKING_MODE
),

66 #i‡
deföed
(
SQLITE_DEFAULT_MMAP_SIZE
Ë&& !deföed(
SQLITE_DEFAULT_MMAP_SIZE_xc
)

67 "DEFAULT_MMAP_SIZE=" 
CTIMEOPT_VAL
(
SQLITE_DEFAULT_MMAP_SIZE
),

69 #i‡
SQLITE_DIRECT_OVERFLOW_READ


72 #i‡
SQLITE_DISABLE_DIRSYNC


75 #i‡
SQLITE_DISABLE_LFS


78 #i‡
SQLITE_ENABLE_8_3_NAMES


79 "ENABLE_8_3_NAMES=" 
CTIMEOPT_VAL
(
SQLITE_ENABLE_8_3_NAMES
),

81 #i‡
SQLITE_ENABLE_API_ARMOR


84 #i‡
SQLITE_ENABLE_ATOMIC_WRITE


87 #i‡
SQLITE_ENABLE_CEROD


90 #i‡
SQLITE_ENABLE_COLUMN_METADATA


93 #i‡
SQLITE_ENABLE_DBSTAT_VTAB


96 #i‡
SQLITE_ENABLE_EXPENSIVE_ASSERT


99 #i‡
SQLITE_ENABLE_FTS1


102 #i‡
SQLITE_ENABLE_FTS2


105 #i‡
SQLITE_ENABLE_FTS3


108 #i‡
SQLITE_ENABLE_FTS3_PARENTHESIS


111 #i‡
SQLITE_ENABLE_FTS4


114 #i‡
SQLITE_ENABLE_FTS5


117 #i‡
SQLITE_ENABLE_ICU


120 #i‡
SQLITE_ENABLE_IOTRACE


123 #i‡
SQLITE_ENABLE_JSON1


126 #i‡
SQLITE_ENABLE_LOAD_EXTENSION


129 #i‡
SQLITE_ENABLE_LOCKING_STYLE


130 "ENABLE_LOCKING_STYLE=" 
CTIMEOPT_VAL
(
SQLITE_ENABLE_LOCKING_STYLE
),

132 #i‡
SQLITE_ENABLE_MEMORY_MANAGEMENT


135 #i‡
SQLITE_ENABLE_MEMSYS3


138 #i‡
SQLITE_ENABLE_MEMSYS5


141 #i‡
SQLITE_ENABLE_OVERSIZE_CELL_CHECK


144 #i‡
SQLITE_ENABLE_RTREE


147 #i‡
deföed
(
SQLITE_ENABLE_STAT4
)

149 #ñi‡
deföed
(
SQLITE_ENABLE_STAT3
)

152 #i‡
SQLITE_ENABLE_UNLOCK_NOTIFY


155 #i‡
SQLITE_ENABLE_UPDATE_DELETE_LIMIT


158 #i‡
deföed
(
SQLITE_ENABLE_URI_00_ERROR
)

161 #i‡
SQLITE_HAS_CODEC


164 #i‡
HAVE_ISNAN
 || 
SQLITE_HAVE_ISNAN


167 #i‡
SQLITE_HOMEGROWN_RECURSIVE_MUTEX


170 #i‡
SQLITE_IGNORE_AFP_LOCK_ERRORS


173 #i‡
SQLITE_IGNORE_FLOCK_LOCK_ERRORS


176 #ifde‡
SQLITE_INT64_TYPE


179 #ifde‡
SQLITE_LIKE_DOESNT_MATCH_BLOBS


182 #i‡
SQLITE_LOCK_TRACE


185 #i‡
deföed
(
SQLITE_MAX_MMAP_SIZE
Ë&& !deföed(
SQLITE_MAX_MMAP_SIZE_xc
)

186 "MAX_MMAP_SIZE=" 
CTIMEOPT_VAL
(
SQLITE_MAX_MMAP_SIZE
),

188 #ifde‡
SQLITE_MAX_SCHEMA_RETRY


189 "MAX_SCHEMA_RETRY=" 
CTIMEOPT_VAL
(
SQLITE_MAX_SCHEMA_RETRY
),

191 #i‡
SQLITE_MEMDEBUG


194 #i‡
SQLITE_MIXED_ENDIAN_64BIT_FLOAT


197 #i‡
SQLITE_NO_SYNC


200 #i‡
SQLITE_OMIT_ALTERTABLE


203 #i‡
SQLITE_OMIT_ANALYZE


206 #i‡
SQLITE_OMIT_ATTACH


209 #i‡
SQLITE_OMIT_AUTHORIZATION


212 #i‡
SQLITE_OMIT_AUTOINCREMENT


215 #i‡
SQLITE_OMIT_AUTOINIT


218 #i‡
SQLITE_OMIT_AUTOMATIC_INDEX


221 #i‡
SQLITE_OMIT_AUTORESET


224 #i‡
SQLITE_OMIT_AUTOVACUUM


227 #i‡
SQLITE_OMIT_BETWEEN_OPTIMIZATION


230 #i‡
SQLITE_OMIT_BLOB_LITERAL


233 #i‡
SQLITE_OMIT_BTREECOUNT


236 #i‡
SQLITE_OMIT_CAST


239 #i‡
SQLITE_OMIT_CHECK


242 #i‡
SQLITE_OMIT_COMPLETE


245 #i‡
SQLITE_OMIT_COMPOUND_SELECT


248 #i‡
SQLITE_OMIT_CTE


251 #i‡
SQLITE_OMIT_DATETIME_FUNCS


254 #i‡
SQLITE_OMIT_DECLTYPE


257 #i‡
SQLITE_OMIT_DEPRECATED


260 #i‡
SQLITE_OMIT_DISKIO


263 #i‡
SQLITE_OMIT_EXPLAIN


266 #i‡
SQLITE_OMIT_FLAG_PRAGMAS


269 #i‡
SQLITE_OMIT_FLOATING_POINT


272 #i‡
SQLITE_OMIT_FOREIGN_KEY


275 #i‡
SQLITE_OMIT_GET_TABLE


278 #i‡
SQLITE_OMIT_INCRBLOB


281 #i‡
SQLITE_OMIT_INTEGRITY_CHECK


284 #i‡
SQLITE_OMIT_LIKE_OPTIMIZATION


287 #i‡
SQLITE_OMIT_LOAD_EXTENSION


290 #i‡
SQLITE_OMIT_LOCALTIME


293 #i‡
SQLITE_OMIT_LOOKASIDE


296 #i‡
SQLITE_OMIT_MEMORYDB


299 #i‡
SQLITE_OMIT_OR_OPTIMIZATION


302 #i‡
SQLITE_OMIT_PAGER_PRAGMAS


305 #i‡
SQLITE_OMIT_PRAGMA


308 #i‡
SQLITE_OMIT_PROGRESS_CALLBACK


311 #i‡
SQLITE_OMIT_QUICKBALANCE


314 #i‡
SQLITE_OMIT_REINDEX


317 #i‡
SQLITE_OMIT_SCHEMA_PRAGMAS


320 #i‡
SQLITE_OMIT_SCHEMA_VERSION_PRAGMAS


323 #i‡
SQLITE_OMIT_SHARED_CACHE


326 #i‡
SQLITE_OMIT_SUBQUERY


329 #i‡
SQLITE_OMIT_TCL_VARIABLE


332 #i‡
SQLITE_OMIT_TEMPDB


335 #i‡
SQLITE_OMIT_TRACE


338 #i‡
SQLITE_OMIT_TRIGGER


341 #i‡
SQLITE_OMIT_TRUNCATE_OPTIMIZATION


344 #i‡
SQLITE_OMIT_UTF16


347 #i‡
SQLITE_OMIT_VACUUM


350 #i‡
SQLITE_OMIT_VIEW


353 #i‡
SQLITE_OMIT_VIRTUALTABLE


356 #i‡
SQLITE_OMIT_WAL


359 #i‡
SQLITE_OMIT_WSD


362 #i‡
SQLITE_OMIT_XFER_OPT


365 #i‡
SQLITE_PERFORMANCE_TRACE


368 #i‡
SQLITE_PROXY_DEBUG


371 #i‡
SQLITE_RTREE_INT_ONLY


374 #i‡
SQLITE_SECURE_DELETE


377 #i‡
SQLITE_SMALL_STACK


380 #i‡
SQLITE_SOUNDEX


383 #i‡
SQLITE_SYSTEM_MALLOC


386 #i‡
SQLITE_TCL


389 #i‡
deföed
(
SQLITE_TEMP_STORE
Ë&& !deföed(
SQLITE_TEMP_STORE_xc
)

390 "TEMP_STORE=" 
CTIMEOPT_VAL
(
SQLITE_TEMP_STORE
),

392 #i‡
SQLITE_TEST


395 #i‡
deföed
(
SQLITE_THREADSAFE
)

396 "THREADSAFE=" 
CTIMEOPT_VAL
(
SQLITE_THREADSAFE
),

398 #i‡
SQLITE_UNTESTABLE


401 #i‡
SQLITE_USE_ALLOCA


404 #i‡
SQLITE_USER_AUTHENTICATION


407 #i‡
SQLITE_WIN32_MALLOC


410 #i‡
SQLITE_ZERO_MALLOC


422 
	$sqlôe3_compûe›ti⁄_u£d
(c⁄° *
zO±Name
){

423 
i
, 
n
;

425 #i‡
SQLITE_ENABLE_API_ARMOR


426 if–
zO±Name
==0 ){

427 ()
SQLITE_MISUSE_BKPT
;

431 if–
	`sqlôe3SåNICmp
(
zO±Name
, "SQLITE_", 7)==0 ) zOptName += 7;

432 
n
 = 
	`sqlôe3SåÀn30
(
zO±Name
);

436 
i
=0; i<
	`AºaySize
(
azCompûeO±
); i++){

437 if–
	`sqlôe3SåNICmp
(
zO±Name
, 
azCompûeO±
[
i
], 
n
)==0

438 && 
	`sqlôe3IsIdCh¨
(()
azCompûeO±
[
i
][
n
])==0

444 
	}
}

450 c⁄° *
	$sqlôe3_compûe›ti⁄_gë
(
N
){

451 if–
N
>=0 && N<
	`AºaySize
(
azCompûeO±
) ){

452  
azCompûeO±
[
N
];

455 
	}
}

	@date.c

46 
	~"sqlôeI¡.h
"

47 
	~<°dlib.h
>

48 
	~<as£π.h
>

49 
	~<time.h
>

51 #i‚de‡
SQLITE_OMIT_DATETIME_FUNCS


58 #i‡!
deföed
(
SQLITE_OMIT_LOCALTIME
Ë&& deföed(
_WIN32_WCE
) && \

59 (!
deföed
(
SQLITE_MSVC_LOCALTIME_API
Ë|| !
	gSQLITE_MSVC_LOCALTIME_API
)

60 
tm
 *
__cde˛
 
loˇ…ime
(c⁄° 
time_t
 *);

66 
D©eTime
 
	tD©eTime
;

67 
	sD©eTime
 {

68 
sqlôe3_öt64
 
	miJD
;

69 
	mY
, 
	mM
, 
	mD
;

70 
	mh
, 
	mm
;

71 
	mtz
;

72 
	ms
;

73 
	mvÆidJD
;

74 
	møwS
;

75 
	mvÆidYMD
;

76 
	mvÆidHMS
;

77 
	mvÆidTZ
;

78 
	mtzSë
;

79 
	misEº‹
;

110 
	$gëDigôs
(c⁄° *
zD©e
, c⁄° *
zF‹m©
, ...){

113 c⁄° 
u16
 
aMx
[] = { 12, 14, 24, 31, 59, 9999 };

114 
va_li°
 
≠
;

115 
˙t
 = 0;

116 
√xtC
;

117 
	`va_°¨t
(
≠
, 
zF‹m©
);

119 
N
 = 
zF‹m©
[0] - '0';

120 
mö
 = 
zF‹m©
[1] - '0';

121 
vÆ
 = 0;

122 
u16
 
max
;

124 
	`as£π
–
zF‹m©
[2]>='a' && zFormat[2]<='f' );

125 
max
 = 
aMx
[
zF‹m©
[2] - 'a'];

126 
√xtC
 = 
zF‹m©
[3];

127 
vÆ
 = 0;

128  
N
-- ){

129 if–!
	`sqlôe3Isdigô
(*
zD©e
) ){

130 
íd_gëDigôs
;

132 
vÆ
 = vÆ*10 + *
zD©e
 - '0';

133 
zD©e
++;

135 if–
vÆ
<()
mö
 || vÆ>()
max
 || (
√xtC
!=0 &&ÇextC!=*
zD©e
) ){

136 
íd_gëDigôs
;

138 *
	`va_¨g
(
≠
,*Ë
vÆ
;

139 
zD©e
++;

140 
˙t
++;

141 
zF‹m©
 += 4;

142 } 
√xtC
 );

143 
íd_gëDigôs
:

144 
	`va_íd
(
≠
);

145  
˙t
;

146 
	}
}

164 
	$∑r£Timez⁄e
(c⁄° *
zD©e
, 
D©eTime
 *
p
){

165 
sgn
 = 0;

166 
nHr
, 
nMn
;

167 
c
;

168  
	`sqlôe3Is•a˚
(*
zD©e
) ){ zDate++; }

169 
p
->
tz
 = 0;

170 
c
 = *
zD©e
;

171 if–
c
=='-' ){

172 
sgn
 = -1;

173 }if–
c
=='+' ){

174 
sgn
 = +1;

175 }if–
c
=='Z' || c=='z' ){

176 
zD©e
++;

177 
zulu_time
;

179  
c
!=0;

181 
zD©e
++;

182 if–
	`gëDigôs
(
zD©e
, "20b:20e", &
nHr
, &
nMn
)!=2 ){

185 
zD©e
 += 5;

186 
p
->
tz
 = 
sgn
*(
nMn
 + 
nHr
*60);

187 
zulu_time
:

188  
	`sqlôe3Is•a˚
(*
zD©e
) ){ zDate++; }

189 
p
->
tzSë
 = 1;

190  *
zD©e
!=0;

191 
	}
}

200 
	$∑r£HhMmSs
(c⁄° *
zD©e
, 
D©eTime
 *
p
){

201 
h
, 
m
, 
s
;

202 
ms
 = 0.0;

203 if–
	`gëDigôs
(
zD©e
, "20c:20e", &
h
, &
m
)!=2 ){

206 
zD©e
 += 5;

207 if–*
zD©e
==':' ){

208 
zD©e
++;

209 if–
	`gëDigôs
(
zD©e
, "20e", &
s
)!=1 ){

212 
zD©e
 += 2;

213 if–*
zD©e
=='.' && 
	`sqlôe3Isdigô
(zDate[1]) ){

214 
rSˇÀ
 = 1.0;

215 
zD©e
++;

216  
	`sqlôe3Isdigô
(*
zD©e
) ){

217 
ms
 = ms*10.0 + *
zD©e
 - '0';

218 
rSˇÀ
 *= 10.0;

219 
zD©e
++;

221 
ms
 /
rSˇÀ
;

224 
s
 = 0;

226 
p
->
vÆidJD
 = 0;

227 
p
->
øwS
 = 0;

228 
p
->
vÆidHMS
 = 1;

229 
p
->
h
 = h;

230 
p
->
m
 = m;

231 
p
->
s
 = s + 
ms
;

232 if–
	`∑r£Timez⁄e
(
zD©e
, 
p
) )  1;

233 
p
->
vÆidTZ
 = (p->
tz
!=0)?1:0;

235 
	}
}

240 
	$d©ëimeEº‹
(
D©eTime
 *
p
){

241 
	`mem£t
(
p
, 0, (*p));

242 
p
->
isEº‹
 = 1;

243 
	}
}

251 
	$compuãJD
(
D©eTime
 *
p
){

252 
Y
, 
M
, 
D
, 
A
, 
B
, 
X1
, 
X2
;

254 if–
p
->
vÆidJD
 ) ;

255 if–
p
->
vÆidYMD
 ){

256 
Y
 = 
p
->Y;

257 
M
 = 
p
->M;

258 
D
 = 
p
->D;

260 
Y
 = 2000;

261 
M
 = 1;

262 
D
 = 1;

264 if–
Y
<-4713 || Y>9999 || 
p
->
øwS
 ){

265 
	`d©ëimeEº‹
(
p
);

268 if–
M
<=2 ){

269 
Y
--;

270 
M
 += 12;

272 
A
 = 
Y
/100;

273 
B
 = 2 - 
A
 + (A/4);

274 
X1
 = 36525*(
Y
+4716)/100;

275 
X2
 = 306001*(
M
+1)/10000;

276 
p
->
iJD
 = (
sqlôe3_öt64
)((
X1
 + 
X2
 + 
D
 + 
B
 - 1524.5 ) * 86400000);

277 
p
->
vÆidJD
 = 1;

278 if–
p
->
vÆidHMS
 ){

279 
p
->
iJD
 +p->
h
*3600000 +Ö->
m
*60000 + (
sqlôe3_öt64
)’->
s
*1000);

280 if–
p
->
vÆidTZ
 ){

281 
p
->
iJD
 -p->
tz
*60000;

282 
p
->
vÆidYMD
 = 0;

283 
p
->
vÆidHMS
 = 0;

284 
p
->
vÆidTZ
 = 0;

287 
	}
}

301 
	$∑r£YyyyMmDd
(c⁄° *
zD©e
, 
D©eTime
 *
p
){

302 
Y
, 
M
, 
D
, 
√g
;

304 if–
zD©e
[0]=='-' ){

305 
zD©e
++;

306 
√g
 = 1;

308 
√g
 = 0;

310 if–
	`gëDigôs
(
zD©e
, "40f-21a-21d", &
Y
, &
M
, &
D
)!=3 ){

313 
zD©e
 += 10;

314  
	`sqlôe3Is•a˚
(*
zD©e
Ë|| 'T'==*(
u8
*)zDate ){ zDate++; }

315 if–
	`∑r£HhMmSs
(
zD©e
, 
p
)==0 ){

317 }if–*
zD©e
==0 ){

318 
p
->
vÆidHMS
 = 0;

322 
p
->
vÆidJD
 = 0;

323 
p
->
vÆidYMD
 = 1;

324 
p
->
Y
 = 
√g
 ? -Y : Y;

325 
p
->
M
 = M;

326 
p
->
D
 = D;

327 if–
p
->
vÆidTZ
 ){

328 
	`compuãJD
(
p
);

331 
	}
}

338 
	$£tD©eTimeToCuºít
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
, 
D©eTime
 *
p
){

339 
p
->
iJD
 = 
	`sqlôe3StmtCuºítTime
(
c⁄ãxt
);

340 if–
p
->
iJD
>0 ){

341 
p
->
vÆidJD
 = 1;

346 
	}
}

354 
	$£tRawD©eNumbî
(
D©eTime
 *
p
, 
r
){

355 
p
->
s
 = 
r
;

356 
p
->
øwS
 = 1;

357 if–
r
>=0.0 &&Ñ<5373484.5 ){

358 
p
->
iJD
 = (
sqlôe3_öt64
)(
r
*86400000.0 + 0.5);

359 
p
->
vÆidJD
 = 1;

361 
	}
}

379 
	$∑r£D©eOrTime
(

380 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

381 c⁄° *
zD©e
,

382 
D©eTime
 *
p


384 
r
;

385 if–
	`∑r£YyyyMmDd
(
zD©e
,
p
)==0 ){

387 }if–
	`∑r£HhMmSs
(
zD©e
, 
p
)==0 ){

389 }if–
	`sqlôe3SåICmp
(
zD©e
,"now")==0){

390  
	`£tD©eTimeToCuºít
(
c⁄ãxt
, 
p
);

391 }if–
	`sqlôe3AtoF
(
zD©e
, &
r
, 
	`sqlôe3SåÀn30
(zD©e), 
SQLITE_UTF8
) ){

392 
	`£tRawD©eNumbî
(
p
, 
r
);

396 
	}
}

405 
	#INT_464269060799999
 ((((
i64
)0x1a640)<<32)|0x1072fdff)

	)

412 
	$vÆidJulünDay
(
sqlôe3_öt64
 
iJD
){

413  
iJD
>=0 && iJD<=
INT_464269060799999
;

414 
	}
}

419 
	$compuãYMD
(
D©eTime
 *
p
){

420 
Z
, 
A
, 
B
, 
C
, 
D
, 
E
, 
X1
;

421 if–
p
->
vÆidYMD
 ) ;

422 if–!
p
->
vÆidJD
 ){

423 
p
->
Y
 = 2000;

424 
p
->
M
 = 1;

425 
p
->
D
 = 1;

427 
	`as£π
–
	`vÆidJulünDay
(
p
->
iJD
) );

428 
Z
 = ()((
p
->
iJD
 + 43200000)/86400000);

429 
A
 = ()((
Z
 - 1867216.25)/36524.25);

430 
A
 = 
Z
 + 1 + A - (A/4);

431 
B
 = 
A
 + 1524;

432 
C
 = ()((
B
 - 122.1)/365.25);

433 
D
 = (36525*(
C
&32767))/100;

434 
E
 = ()((
B
-
D
)/30.6001);

435 
X1
 = ()(30.6001*
E
);

436 
p
->
D
 = 
B
 - D - 
X1
;

437 
p
->
M
 = 
E
<14 ? E-1 : E-13;

438 
p
->
Y
 =Ö->
M
>2 ? 
C
 - 4716 : C - 4715;

440 
p
->
vÆidYMD
 = 1;

441 
	}
}

446 
	$compuãHMS
(
D©eTime
 *
p
){

447 
s
;

448 if–
p
->
vÆidHMS
 ) ;

449 
	`compuãJD
(
p
);

450 
s
 = ()((
p
->
iJD
 + 43200000) % 86400000);

451 
p
->
s
 = s/1000.0;

452 
s
 = ()
p
->s;

453 
p
->
s
 -= s;

454 
p
->
h
 = 
s
/3600;

455 
s
 -
p
->
h
*3600;

456 
p
->
m
 = 
s
/60;

457 
p
->
s
 +†-Ö->
m
*60;

458 
p
->
øwS
 = 0;

459 
p
->
vÆidHMS
 = 1;

460 
	}
}

465 
	$compuãYMD_HMS
(
D©eTime
 *
p
){

466 
	`compuãYMD
(
p
);

467 
	`compuãHMS
(
p
);

468 
	}
}

473 
	$˛órYMD_HMS_TZ
(
D©eTime
 *
p
){

474 
p
->
vÆidYMD
 = 0;

475 
p
->
vÆidHMS
 = 0;

476 
p
->
vÆidTZ
 = 0;

477 
	}
}

479 #i‚de‡
SQLITE_OMIT_LOCALTIME


492 #i‡!
HAVE_LOCALTIME_R
 && !
HAVE_LOCALTIME_S
 \

493 && 
deföed
(
_MSC_VER
Ë&& 
	$deföed
(
_CRT_INSECURE_DEPRECATE
)

494 #unde‡
HAVE_LOCALTIME_S


495 
	#HAVE_LOCALTIME_S
 1

	)

511 
	$osLoˇ…ime
(
time_t
 *
t
, 
tm
 *
pTm
){

512 
rc
;

513 #i‡!
HAVE_LOCALTIME_R
 && !
HAVE_LOCALTIME_S


514 
tm
 *
pX
;

515 #i‡
SQLITE_THREADSAFE
>0

516 
sqlôe3_muãx
 *
muãx
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
);

518 
	`sqlôe3_muãx_íãr
(
muãx
);

519 
pX
 = 
	`loˇ…ime
(
t
);

520 #i‚de‡
SQLITE_UNTESTABLE


521 if–
sqlôe3GlobÆC⁄fig
.
bLoˇ…imeFau…
 ) 
pX
 = 0;

523 if–
pX
 ) *
pTm
 = *pX;

524 
	`sqlôe3_muãx_Àave
(
muãx
);

525 
rc
 = 
pX
==0;

527 #i‚de‡
SQLITE_UNTESTABLE


528 if–
sqlôe3GlobÆC⁄fig
.
bLoˇ…imeFau…
 )  1;

530 #i‡
HAVE_LOCALTIME_R


531 
rc
 = 
	`loˇ…ime_r
(
t
, 
pTm
)==0;

533 
rc
 = 
	`loˇ…ime_s
(
pTm
, 
t
);

536  
rc
;

537 
	}
}

541 #i‚de‡
SQLITE_OMIT_LOCALTIME


550 
sqlôe3_öt64
 
	$loˇ…imeOff£t
(

551 
D©eTime
 *
p
,

552 
sqlôe3_c⁄ãxt
 *
pCtx
,

553 *
pRc


555 
D©eTime
 
x
, 
y
;

556 
time_t
 
t
;

557 
tm
 
sLoˇl
;

560 
	`mem£t
(&
sLoˇl
, 0, (sLocal));

562 
x
 = *
p
;

563 
	`compuãYMD_HMS
(&
x
);

564 if–
x
.
Y
<1971 || x.Y>=2038 ){

570 
x
.
Y
 = 2000;

571 
x
.
M
 = 1;

572 
x
.
D
 = 1;

573 
x
.
h
 = 0;

574 
x
.
m
 = 0;

575 
x
.
s
 = 0.0;

577 
s
 = ()(
x
.s + 0.5);

578 
x
.
s
 = s;

580 
x
.
tz
 = 0;

581 
x
.
vÆidJD
 = 0;

582 
	`compuãJD
(&
x
);

583 
t
 = (
time_t
)(
x
.
iJD
/1000 - 21086676*(
i64
)10000);

584 if–
	`osLoˇ…ime
(&
t
, &
sLoˇl
) ){

585 
	`sqlôe3_ªsu…_îr‹
(
pCtx
, "localÅime unavailable", -1);

586 *
pRc
 = 
SQLITE_ERROR
;

589 
y
.
Y
 = 
sLoˇl
.
tm_yór
 + 1900;

590 
y
.
M
 = 
sLoˇl
.
tm_m⁄
 + 1;

591 
y
.
D
 = 
sLoˇl
.
tm_mday
;

592 
y
.
h
 = 
sLoˇl
.
tm_hour
;

593 
y
.
m
 = 
sLoˇl
.
tm_mö
;

594 
y
.
s
 = 
sLoˇl
.
tm_£c
;

595 
y
.
vÆidYMD
 = 1;

596 
y
.
vÆidHMS
 = 1;

597 
y
.
vÆidJD
 = 0;

598 
y
.
øwS
 = 0;

599 
y
.
vÆidTZ
 = 0;

600 
y
.
isEº‹
 = 0;

601 
	`compuãJD
(&
y
);

602 *
pRc
 = 
SQLITE_OK
;

603  
y
.
iJD
 - 
x
.iJD;

604 
	}
}

616 
u8
 
	meTy≥
;

617 
u8
 
	mnName
;

618 *
	mzName
;

619 
	mrLimô
;

620 
	mrXf‹m
;

621 } 
	gaXf‹mTy≥
[] = {

654 
	$∑r£Modifõr
(

655 
sqlôe3_c⁄ãxt
 *
pCtx
,

656 c⁄° *
z
,

657 
n
,

658 
D©eTime
 *
p


660 
rc
 = 1;

661 
r
;

662 
sqlôe3UµîToLowî
[(
u8
)
z
[0]] ){

663 #i‚de‡
SQLITE_OMIT_LOCALTIME


670 if–
	`sqlôe3_°ricmp
(
z
, "localtime")==0 ){

671 
	`compuãJD
(
p
);

672 
p
->
iJD
 +
	`loˇ…imeOff£t
’, 
pCtx
, &
rc
);

673 
	`˛órYMD_HMS_TZ
(
p
);

685 if–
	`sqlôe3_°ricmp
(
z
, "unixïoch")==0 && 
p
->
øwS
 ){

686 
r
 = 
p
->
s
*1000.0 + 210866760000000.0;

687 if–
r
>=0.0 &&Ñ<464269060800000.0 ){

688 
	`˛órYMD_HMS_TZ
(
p
);

689 
p
->
iJD
 = (
sqlôe3_öt64
)
r
;

690 
p
->
vÆidJD
 = 1;

691 
p
->
øwS
 = 0;

692 
rc
 = 0;

695 #i‚de‡
SQLITE_OMIT_LOCALTIME


696 if–
	`sqlôe3_°ricmp
(
z
, "utc")==0 ){

697 if–
p
->
tzSë
==0 ){

698 
sqlôe3_öt64
 
c1
;

699 
	`compuãJD
(
p
);

700 
c1
 = 
	`loˇ…imeOff£t
(
p
, 
pCtx
, &
rc
);

701 if–
rc
==
SQLITE_OK
 ){

702 
p
->
iJD
 -
c1
;

703 
	`˛órYMD_HMS_TZ
(
p
);

704 
p
->
iJD
 +
c1
 - 
	`loˇ…imeOff£t
’, 
pCtx
, &
rc
);

706 
p
->
tzSë
 = 1;

708 
rc
 = 
SQLITE_OK
;

722 if–
	`sqlôe3_°∫icmp
(
z
, "weekday ", 8)==0

723 && 
	`sqlôe3AtoF
(&
z
[8], &
r
, 
	`sqlôe3SåÀn30
(&z[8]), 
SQLITE_UTF8
)

724 && (
n
=()
r
)==r &&Ç>=0 &&Ñ<7 ){

725 
sqlôe3_öt64
 
Z
;

726 
	`compuãYMD_HMS
(
p
);

727 
p
->
vÆidTZ
 = 0;

728 
p
->
vÆidJD
 = 0;

729 
	`compuãJD
(
p
);

730 
Z
 = ((
p
->
iJD
 + 129600000)/86400000) % 7;

731 if–
Z
>
n
 ) Z -= 7;

732 
p
->
iJD
 +(
n
 - 
Z
)*86400000;

733 
	`˛órYMD_HMS_TZ
(
p
);

734 
rc
 = 0;

745 if–
	`sqlôe3_°∫icmp
(
z
, "start of ", 9)!=0 ) ;

746 
z
 += 9;

747 
	`compuãYMD
(
p
);

748 
p
->
vÆidHMS
 = 1;

749 
p
->
h
 =Ö->
m
 = 0;

750 
p
->
s
 = 0.0;

751 
p
->
vÆidTZ
 = 0;

752 
p
->
vÆidJD
 = 0;

753 if–
	`sqlôe3_°ricmp
(
z
,"month")==0 ){

754 
p
->
D
 = 1;

755 
rc
 = 0;

756 }if–
	`sqlôe3_°ricmp
(
z
,"year")==0 ){

757 
	`compuãYMD
(
p
);

758 
p
->
M
 = 1;

759 
p
->
D
 = 1;

760 
rc
 = 0;

761 }if–
	`sqlôe3_°ricmp
(
z
,"day")==0 ){

762 
rc
 = 0;

778 
rRoundî
;

779 
i
;

780 
n
=1; 
z
[n] && z[n]!=':' && !
	`sqlôe3Is•a˚
(z[n]);Ç++){}

781 if–!
	`sqlôe3AtoF
(
z
, &
r
, 
n
, 
SQLITE_UTF8
) ){

782 
rc
 = 1;

785 if–
z
[
n
]==':' ){

791 c⁄° *
z2
 = 
z
;

792 
D©eTime
 
tx
;

793 
sqlôe3_öt64
 
day
;

794 if–!
	`sqlôe3Isdigô
(*
z2
) ) z2++;

795 
	`mem£t
(&
tx
, 0, (tx));

796 if–
	`∑r£HhMmSs
(
z2
, &
tx
) ) ;

797 
	`compuãJD
(&
tx
);

798 
tx
.
iJD
 -= 43200000;

799 
day
 = 
tx
.
iJD
/86400000;

800 
tx
.
iJD
 -
day
*86400000;

801 if–
z
[0]=='-' ) 
tx
.
iJD
 = -tx.iJD;

802 
	`compuãJD
(
p
);

803 
	`˛órYMD_HMS_TZ
(
p
);

804 
p
->
iJD
 +
tx
.iJD;

805 
rc
 = 0;

811 
z
 +
n
;

812  
	`sqlôe3Is•a˚
(*
z
) ) z++;

813 
n
 = 
	`sqlôe3SåÀn30
(
z
);

814 if–
n
>10 ||Ç<3 ) ;

815 if–
sqlôe3UµîToLowî
[(
u8
)
z
[
n
-1]]=='s' )Ç--;

816 
	`compuãJD
(
p
);

817 
rc
 = 1;

818 
rRoundî
 = 
r
<0 ? -0.5 : +0.5;

819 
i
=0; i<
	`AºaySize
(
aXf‹mTy≥
); i++){

820 if–
aXf‹mTy≥
[
i
].
nName
==
n


821 && 
	`sqlôe3_°∫icmp
(
aXf‹mTy≥
[
i
].
zName
, 
z
, 
n
)==0

822 && 
r
>-
aXf‹mTy≥
[
i
].
rLimô
 &&Ñ<aXformType[i].rLimit

824  
aXf‹mTy≥
[
i
].
eTy≥
 ){

826 
x
;

827 
	`compuãYMD_HMS
(
p
);

828 
p
->
M
 +()
r
;

829 
x
 = 
p
->
M
>0 ? (p->M-1)/12 : (p->M-12)/12;

830 
p
->
Y
 +
x
;

831 
p
->
M
 -
x
*12;

832 
p
->
vÆidJD
 = 0;

833 
r
 -= ()r;

837 
y
 = ()
r
;

838 
	`compuãYMD_HMS
(
p
);

839 
p
->
Y
 +
y
;

840 
p
->
vÆidJD
 = 0;

841 
r
 -= ()r;

845 
	`compuãJD
(
p
);

846 
p
->
iJD
 +(
sqlôe3_öt64
)(
r
*
aXf‹mTy≥
[
i
].
rXf‹m
 + 
rRoundî
);

847 
rc
 = 0;

851 
	`˛órYMD_HMS_TZ
(
p
);

858  
rc
;

859 
	}
}

870 
	$isD©e
(

871 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

872 
¨gc
,

873 
sqlôe3_vÆue
 **
¨gv
,

874 
D©eTime
 *
p


876 
i
, 
n
;

877 c⁄° *
z
;

878 
eTy≥
;

879 
	`mem£t
(
p
, 0, (*p));

880 if–
¨gc
==0 ){

881  
	`£tD©eTimeToCuºít
(
c⁄ãxt
, 
p
);

883 if–(
eTy≥
 = 
	`sqlôe3_vÆue_ty≥
(
¨gv
[0]))==
SQLITE_FLOAT


884 || 
eTy≥
==
SQLITE_INTEGER
 ){

885 
	`£tRawD©eNumbî
(
p
, 
	`sqlôe3_vÆue_doubÀ
(
¨gv
[0]));

887 
z
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

888 if–!
z
 || 
	`∑r£D©eOrTime
(
c⁄ãxt
, (*)z, 
p
) ){

892 
i
=1; i<
¨gc
; i++){

893 
z
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[
i
]);

894 
n
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[
i
]);

895 if–
z
==0 || 
	`∑r£Modifõr
(
c⁄ãxt
, (*)z, 
n
, 
p
) )  1;

897 
	`compuãJD
(
p
);

898 if–
p
->
isEº‹
 || !
	`vÆidJulünDay
’->
iJD
) )  1;

900 
	}
}

913 
	$julündayFunc
(

914 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

915 
¨gc
,

916 
sqlôe3_vÆue
 **
¨gv


918 
D©eTime
 
x
;

919 if–
	`isD©e
(
c⁄ãxt
, 
¨gc
, 
¨gv
, &
x
)==0 ){

920 
	`compuãJD
(&
x
);

921 
	`sqlôe3_ªsu…_doubÀ
(
c⁄ãxt
, 
x
.
iJD
/86400000.0);

923 
	}
}

930 
	$d©ëimeFunc
(

931 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

932 
¨gc
,

933 
sqlôe3_vÆue
 **
¨gv


935 
D©eTime
 
x
;

936 if–
	`isD©e
(
c⁄ãxt
, 
¨gc
, 
¨gv
, &
x
)==0 ){

937 
zBuf
[100];

938 
	`compuãYMD_HMS
(&
x
);

939 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%04d-%02d-%02d %02d:%02d:%02d",

940 
x
.
Y
, x.
M
, x.
D
, x.
h
, x.
m
, ()(x.
s
));

941 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
zBuf
, -1, 
SQLITE_TRANSIENT
);

943 
	}
}

950 
	$timeFunc
(

951 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

952 
¨gc
,

953 
sqlôe3_vÆue
 **
¨gv


955 
D©eTime
 
x
;

956 if–
	`isD©e
(
c⁄ãxt
, 
¨gc
, 
¨gv
, &
x
)==0 ){

957 
zBuf
[100];

958 
	`compuãHMS
(&
x
);

959 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%02d:%02d:%02d", 
x
.
h
, x.
m
, ()x.
s
);

960 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
zBuf
, -1, 
SQLITE_TRANSIENT
);

962 
	}
}

969 
	$d©eFunc
(

970 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

971 
¨gc
,

972 
sqlôe3_vÆue
 **
¨gv


974 
D©eTime
 
x
;

975 if–
	`isD©e
(
c⁄ãxt
, 
¨gc
, 
¨gv
, &
x
)==0 ){

976 
zBuf
[100];

977 
	`compuãYMD
(&
x
);

978 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%04d-%02d-%02d", 
x
.
Y
, x.
M
, x.
D
);

979 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
zBuf
, -1, 
SQLITE_TRANSIENT
);

981 
	}
}

1002 
	$°r·imeFunc
(

1003 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

1004 
¨gc
,

1005 
sqlôe3_vÆue
 **
¨gv


1007 
D©eTime
 
x
;

1008 
u64
 
n
;

1009 
size_t
 
i
,
j
;

1010 *
z
;

1011 
sqlôe3
 *
db
;

1012 c⁄° *
zFmt
;

1013 
zBuf
[100];

1014 if–
¨gc
==0 ) ;

1015 
zFmt
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

1016 if–
zFmt
==0 || 
	`isD©e
(
c⁄ãxt
, 
¨gc
-1, 
¨gv
+1, &
x
) ) ;

1017 
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

1018 
i
=0, 
n
=1; 
zFmt
[i]; i++,Ç++){

1019 if–
zFmt
[
i
]=='%' ){

1020  
zFmt
[
i
+1] ){

1027 
n
++;

1033 
n
 += 8;

1036 
n
 += 3;

1039 
n
 += 8;

1043 
n
 += 50;

1048 
i
++;

1051 
	`ã°ˇ£
–
n
==(
zBuf
)-1 );

1052 
	`ã°ˇ£
–
n
==(
zBuf
) );

1053 
	`ã°ˇ£
–
n
==(
u64
)
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
]+1 );

1054 
	`ã°ˇ£
–
n
==(
u64
)
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
] );

1055 if–
n
<(
zBuf
) ){

1056 
z
 = 
zBuf
;

1057 }if–
n
>(
u64
)
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
] ){

1058 
	`sqlôe3_ªsu…_îr‹_toobig
(
c⁄ãxt
);

1061 
z
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, ()
n
);

1062 if–
z
==0 ){

1063 
	`sqlôe3_ªsu…_îr‹_nomem
(
c⁄ãxt
);

1067 
	`compuãJD
(&
x
);

1068 
	`compuãYMD_HMS
(&
x
);

1069 
i
=
j
=0; 
zFmt
[i]; i++){

1070 if–
zFmt
[
i
]!='%' ){

1071 
z
[
j
++] = 
zFmt
[
i
];

1073 
i
++;

1074  
zFmt
[
i
] ){

1075 'd': 
	`sqlôe3_¢¥ötf
(3, &
z
[
j
],"%02d",
x
.
D
); j+=2; ;

1077 
s
 = 
x
.s;

1078 if–
s
>59.999 ) s = 59.999;

1079 
	`sqlôe3_¢¥ötf
(7, &
z
[
j
],"%06.3f", 
s
);

1080 
j
 +
	`sqlôe3SåÀn30
(&
z
[j]);

1083 'H': 
	`sqlôe3_¢¥ötf
(3, &
z
[
j
],"%02d",
x
.
h
); j+=2; ;

1086 
nDay
;

1087 
D©eTime
 
y
 = 
x
;

1088 
y
.
vÆidJD
 = 0;

1089 
y
.
M
 = 1;

1090 
y
.
D
 = 1;

1091 
	`compuãJD
(&
y
);

1092 
nDay
 = ()((
x
.
iJD
-
y
.iJD+43200000)/86400000);

1093 if–
zFmt
[
i
]=='W' ){

1094 
wd
;

1095 
wd
 = ()(((
x
.
iJD
+43200000)/86400000)%7);

1096 
	`sqlôe3_¢¥ötf
(3, &
z
[
j
],"%02d",(
nDay
+7-
wd
)/7);

1097 
j
 += 2;

1099 
	`sqlôe3_¢¥ötf
(4, &
z
[
j
],"%03d",
nDay
+1);

1100 
j
 += 3;

1105 
	`sqlôe3_¢¥ötf
(20, &
z
[
j
],"%.16g",
x
.
iJD
/86400000.0);

1106 
j
+=
	`sqlôe3SåÀn30
(&
z
[j]);

1109 'm': 
	`sqlôe3_¢¥ötf
(3, &
z
[
j
],"%02d",
x
.
M
); j+=2; ;

1110 'M': 
	`sqlôe3_¢¥ötf
(3, &
z
[
j
],"%02d",
x
.
m
); j+=2; ;

1112 
	`sqlôe3_¢¥ötf
(30,&
z
[
j
],"%lld",

1113 (
i64
)(
x
.
iJD
/1000 - 21086676*(i64)10000));

1114 
j
 +
	`sqlôe3SåÀn30
(&
z
[j]);

1117 'S': 
	`sqlôe3_¢¥ötf
(3,&
z
[
j
],"%02d",()
x
.
s
); j+=2; ;

1119 
z
[
j
++] = ()(((
x
.
iJD
+129600000)/86400000) % 7) + '0';

1123 
	`sqlôe3_¢¥ötf
(5,&
z
[
j
],"%04d",
x
.
Y
); j+=
	`sqlôe3SåÀn30
(&z[j]);

1126 : 
z
[
j
++] = '%'; ;

1130 
z
[
j
] = 0;

1131 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
z
, -1,

1132 
z
==
zBuf
 ? 
SQLITE_TRANSIENT
 : 
SQLITE_DYNAMIC
);

1133 
	}
}

1140 
	$˘imeFunc
(

1141 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

1142 
NŸU£d
,

1143 
sqlôe3_vÆue
 **
NŸU£d2


1145 
	`UNUSED_PARAMETER2
(
NŸU£d
, 
NŸU£d2
);

1146 
	`timeFunc
(
c⁄ãxt
, 0, 0);

1147 
	}
}

1154 
	$cd©eFunc
(

1155 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

1156 
NŸU£d
,

1157 
sqlôe3_vÆue
 **
NŸU£d2


1159 
	`UNUSED_PARAMETER2
(
NŸU£d
, 
NŸU£d2
);

1160 
	`d©eFunc
(
c⁄ãxt
, 0, 0);

1161 
	}
}

1168 
	$˘ime°ampFunc
(

1169 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

1170 
NŸU£d
,

1171 
sqlôe3_vÆue
 **
NŸU£d2


1173 
	`UNUSED_PARAMETER2
(
NŸU£d
, 
NŸU£d2
);

1174 
	`d©ëimeFunc
(
c⁄ãxt
, 0, 0);

1175 
	}
}

1178 #ifde‡
SQLITE_OMIT_DATETIME_FUNCS


1190 
	$cuºítTimeFunc
(

1191 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

1192 
¨gc
,

1193 
sqlôe3_vÆue
 **
¨gv


1195 
time_t
 
t
;

1196 *
zF‹m©
 = (*)
	`sqlôe3_u£r_d©a
(
c⁄ãxt
);

1197 
sqlôe3_öt64
 
iT
;

1198 
tm
 *
pTm
;

1199 
tm
 
sNow
;

1200 
zBuf
[20];

1202 
	`UNUSED_PARAMETER
(
¨gc
);

1203 
	`UNUSED_PARAMETER
(
¨gv
);

1205 
iT
 = 
	`sqlôe3StmtCuºítTime
(
c⁄ãxt
);

1206 if–
iT
<=0 ) ;

1207 
t
 = 
iT
/1000 - 10000*(
sqlôe3_öt64
)21086676;

1208 #i‡
HAVE_GMTIME_R


1209 
pTm
 = 
	`gmtime_r
(&
t
, &
sNow
);

1211 
	`sqlôe3_muãx_íãr
(
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
));

1212 
pTm
 = 
	`gmtime
(&
t
);

1213 if–
pTm
 ) 
	`mem˝y
(&
sNow
,ÖTm, (sNow));

1214 
	`sqlôe3_muãx_Àave
(
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
));

1216 if–
pTm
 ){

1217 
	`°r·ime
(
zBuf
, 20, 
zF‹m©
, &
sNow
);

1218 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
zBuf
, -1, 
SQLITE_TRANSIENT
);

1220 
	}
}

1228 
	$sqlôe3Regi°îD©eTimeFun˘i⁄s
(){

1229 
FuncDef
 
aD©eTimeFuncs
[] = {

1230 #i‚de‡
SQLITE_OMIT_DATETIME_FUNCS


1231 
	`DFUNCTION
(
julünday
, -1, 0, 0, 
julündayFunc
 ),

1232 
	`DFUNCTION
(
d©e
, -1, 0, 0, 
d©eFunc
 ),

1233 
	`DFUNCTION
(
time
, -1, 0, 0, 
timeFunc
 ),

1234 
	`DFUNCTION
(
d©ëime
, -1, 0, 0, 
d©ëimeFunc
 ),

1235 
	`DFUNCTION
(
°r·ime
, -1, 0, 0, 
°r·imeFunc
 ),

1236 
	`DFUNCTION
(
cuºít_time
, 0, 0, 0, 
˘imeFunc
 ),

1237 
	`DFUNCTION
(
cuºít_time°amp
, 0, 0, 0, 
˘ime°ampFunc
),

1238 
	`DFUNCTION
(
cuºít_d©e
, 0, 0, 0, 
cd©eFunc
 ),

1240 
	`STR_FUNCTION
(
cuºít_time
, 0, "%H:%M:%S", 0, 
cuºítTimeFunc
),

1241 
	`STR_FUNCTION
(
cuºít_d©e
, 0, "%Y-%m-%d", 0, 
cuºítTimeFunc
),

1242 
	`STR_FUNCTION
(
cuºít_time°amp
, 0, "%Y-%m-%d %H:%M:%S", 0, 
cuºítTimeFunc
),

1245 
	`sqlôe3In£πBuûtöFuncs
(
aD©eTimeFuncs
, 
	`AºaySize
(aDateTimeFuncs));

1246 
	}
}

	@dbstat.c

24 
	~"sqlôeI¡.h
"

25 #i‡(
deföed
(
SQLITE_ENABLE_DBSTAT_VTAB
Ë|| deföed(
SQLITE_TEST
)) \

26 && !
	$deföed
(
SQLITE_OMIT_VIRTUALTABLE
)

59 
	#VTAB_SCHEMA
 \

72 ");"

	)

75 
SètTabÀ
 
	tSètTabÀ
;

76 
SètCurs‹
 
	tSètCurs‹
;

77 
SètPage
 
	tSètPage
;

78 
SètCñl
 
	tSètCñl
;

80 
	sSètCñl
 {

81 
nLoˇl
;

82 
u32
 
iChûdPg
;

83 
nOvÊ
;

84 
u32
 *
aOvÊ
;

85 
nLa°OvÊ
;

86 
iOvÊ
;

89 
	sSètPage
 {

90 
u32
 
iPgno
;

91 
DbPage
 *
pPg
;

92 
iCñl
;

94 *
zP©h
;

97 
u8
 
Êags
;

98 
nCñl
;

99 
nUnu£d
;

100 
SètCñl
 *
aCñl
;

101 
u32
 
iRightChûdPg
;

102 
nMxPaylﬂd
;

105 
	sSètCurs‹
 {

106 
sqlôe3_vèb_curs‹
 
ba£
;

107 
sqlôe3_°mt
 *
pStmt
;

108 
isEof
;

109 
iDb
;

111 
SètPage
 
aPage
[32];

112 
iPage
;

115 *
zName
;

116 *
zP©h
;

117 
u32
 
iPagío
;

118 *
zPagëy≥
;

119 
nCñl
;

120 
nPaylﬂd
;

121 
nUnu£d
;

122 
nMxPaylﬂd
;

123 
i64
 
iOff£t
;

124 
szPage
;

127 
	sSètTabÀ
 {

128 
sqlôe3_vèb
 
ba£
;

129 
sqlôe3
 *
db
;

130 
iDb
;

133 #i‚de‡
gë2byã


134 
	#gë2byã
(
x
Ë((x)[0]<<8 | (x)[1])

	)

140 
	$°©C⁄√˘
(

141 
sqlôe3
 *
db
,

142 *
pAux
,

143 
¨gc
, c⁄° *c⁄°*
¨gv
,

144 
sqlôe3_vèb
 **
µVèb
,

145 **
pzEº


147 
SètTabÀ
 *
pTab
 = 0;

148 
rc
 = 
SQLITE_OK
;

149 
iDb
;

151 if–
¨gc
>=4 ){

152 
Tokí
 
nm
;

153 
	`sqlôe3TokíInô
(&
nm
, (*)
¨gv
[3]);

154 
iDb
 = 
	`sqlôe3FödDb
(
db
, &
nm
);

155 if–
iDb
<0 ){

156 *
pzEº
 = 
	`sqlôe3_m¥ötf
("nÿsuch d©aba£: %s", 
¨gv
[3]);

157  
SQLITE_ERROR
;

160 
iDb
 = 0;

162 
rc
 = 
	`sqlôe3_de˛¨e_vèb
(
db
, 
VTAB_SCHEMA
);

163 if–
rc
==
SQLITE_OK
 ){

164 
pTab
 = (
SètTabÀ
 *)
	`sqlôe3_mÆloc64
((StatTable));

165 if–
pTab
==0 ) 
rc
 = 
SQLITE_NOMEM_BKPT
;

168 
	`as£π
–
rc
==
SQLITE_OK
 || 
pTab
==0 );

169 if–
rc
==
SQLITE_OK
 ){

170 
	`mem£t
(
pTab
, 0, (
SètTabÀ
));

171 
pTab
->
db
 = db;

172 
pTab
->
iDb
 = iDb;

175 *
µVèb
 = (
sqlôe3_vèb
*)
pTab
;

176  
rc
;

177 
	}
}

182 
	$°©Disc⁄√˘
(
sqlôe3_vèb
 *
pVèb
){

183 
	`sqlôe3_‰ì
(
pVèb
);

184  
SQLITE_OK
;

185 
	}
}

194 
	$°©Be°Index
(
sqlôe3_vèb
 *
èb
, 
sqlôe3_ödex_öfo
 *
pIdxInfo
){

195 
i
;

197 
pIdxInfo
->
e°im©edCo°
 = 1.0e6;

204 
i
=0; i<
pIdxInfo
->
nC⁄°øöt
; i++){

205 if–
pIdxInfo
->
aC⁄°øöt
[
i
].
ußbÀ
==0 ) ;

206 if–
pIdxInfo
->
aC⁄°øöt
[
i
].
›
!=
SQLITE_INDEX_CONSTRAINT_EQ
 ) ;

207 if–
pIdxInfo
->
aC⁄°øöt
[
i
].
iCﬁumn
!=10 ) ;

208 
pIdxInfo
->
idxNum
 = 1;

209 
pIdxInfo
->
e°im©edCo°
 = 1.0;

210 
pIdxInfo
->
aC⁄°øötUßge
[
i
].
¨gvIndex
 = 1;

211 
pIdxInfo
->
aC⁄°øötUßge
[
i
].
omô
 = 1;

220 if––
pIdxInfo
->
nOrdîBy
==1

221 && 
pIdxInfo
->
aOrdîBy
[0].
iCﬁumn
==0

222 && 
pIdxInfo
->
aOrdîBy
[0].
desc
==0

224 –
pIdxInfo
->
nOrdîBy
==2

225 && 
pIdxInfo
->
aOrdîBy
[0].
iCﬁumn
==0

226 && 
pIdxInfo
->
aOrdîBy
[0].
desc
==0

227 && 
pIdxInfo
->
aOrdîBy
[1].
iCﬁumn
==1

228 && 
pIdxInfo
->
aOrdîBy
[1].
desc
==0

231 
pIdxInfo
->
‹dîByC⁄sumed
 = 1;

234  
SQLITE_OK
;

235 
	}
}

240 
	$°©O≥n
(
sqlôe3_vèb
 *
pVTab
, 
sqlôe3_vèb_curs‹
 **
µCurs‹
){

241 
SètTabÀ
 *
pTab
 = (SètTabÀ *)
pVTab
;

242 
SètCurs‹
 *
pC§
;

244 
pC§
 = (
SètCurs‹
 *)
	`sqlôe3_mÆloc64
((StatCursor));

245 if–
pC§
==0 ){

246  
SQLITE_NOMEM_BKPT
;

248 
	`mem£t
(
pC§
, 0, (
SètCurs‹
));

249 
pC§
->
ba£
.
pVèb
 = 
pVTab
;

250 
pC§
->
iDb
 = 
pTab
->iDb;

253 *
µCurs‹
 = (
sqlôe3_vèb_curs‹
 *)
pC§
;

254  
SQLITE_OK
;

255 
	}
}

257 
	$°©CÀ¨Page
(
SètPage
 *
p
){

258 
i
;

259 if–
p
->
aCñl
 ){

260 
i
=0; i<
p
->
nCñl
; i++){

261 
	`sqlôe3_‰ì
(
p
->
aCñl
[
i
].
aOvÊ
);

263 
	`sqlôe3_‰ì
(
p
->
aCñl
);

265 
	`sqlôe3PagîUƒef
(
p
->
pPg
);

266 
	`sqlôe3_‰ì
(
p
->
zP©h
);

267 
	`mem£t
(
p
, 0, (
SètPage
));

268 
	}
}

270 
	$°©Re£tC§
(
SètCurs‹
 *
pC§
){

271 
i
;

272 
	`sqlôe3_ª£t
(
pC§
->
pStmt
);

273 
i
=0; i<
	`AºaySize
(
pC§
->
aPage
); i++){

274 
	`°©CÀ¨Page
(&
pC§
->
aPage
[
i
]);

276 
pC§
->
iPage
 = 0;

277 
	`sqlôe3_‰ì
(
pC§
->
zP©h
);

278 
pC§
->
zP©h
 = 0;

279 
pC§
->
isEof
 = 0;

280 
	}
}

285 
	$°©Clo£
(
sqlôe3_vèb_curs‹
 *
pCurs‹
){

286 
SètCurs‹
 *
pC§
 = (SètCurs‹ *)
pCurs‹
;

287 
	`°©Re£tC§
(
pC§
);

288 
	`sqlôe3_föÆize
(
pC§
->
pStmt
);

289 
	`sqlôe3_‰ì
(
pC§
);

290  
SQLITE_OK
;

291 
	}
}

293 
	$gëLoˇlPaylﬂd
(

294 
nUßbÀ
,

295 
u8
 
Êags
,

296 
nTŸÆ
,

297 *
≤Loˇl


299 
nLoˇl
;

300 
nMöLoˇl
;

301 
nMaxLoˇl
;

303 if–
Êags
==0x0D ){

304 
nMöLoˇl
 = (
nUßbÀ
 - 12) * 32 / 255 - 23;

305 
nMaxLoˇl
 = 
nUßbÀ
 - 35;

307 
nMöLoˇl
 = (
nUßbÀ
 - 12) * 32 / 255 - 23;

308 
nMaxLoˇl
 = (
nUßbÀ
 - 12) * 64 / 255 - 23;

311 
nLoˇl
 = 
nMöLoˇl
 + (
nTŸÆ
 -ÇMöLoˇlË% (
nUßbÀ
 - 4);

312 if–
nLoˇl
>
nMaxLoˇl
 )ÇLoˇ»
nMöLoˇl
;

313 *
≤Loˇl
 = 
nLoˇl
;

314 
	}
}

316 
	$°©DecodePage
(
Båì
 *
pBt
, 
SètPage
 *
p
){

317 
nUnu£d
;

318 
iOff
;

319 
nHdr
;

320 
isLóf
;

321 
szPage
;

323 
u8
 *
aD©a
 = 
	`sqlôe3PagîGëD©a
(
p
->
pPg
);

324 
u8
 *
aHdr
 = &
aD©a
[
p
->
iPgno
==1 ? 100 : 0];

326 
p
->
Êags
 = 
aHdr
[0];

327 
p
->
nCñl
 = 
	`gë2byã
(&
aHdr
[3]);

328 
p
->
nMxPaylﬂd
 = 0;

330 
isLóf
 = (
p
->
Êags
==0x0A ||Ö->flags==0x0D);

331 
nHdr
 = 12 - 
isLóf
*4 + (
p
->
iPgno
==1)*100;

333 
nUnu£d
 = 
	`gë2byã
(&
aHdr
[5]Ë- 
nHdr
 - 2*
p
->
nCñl
;

334 
nUnu£d
 +()
aHdr
[7];

335 
iOff
 = 
	`gë2byã
(&
aHdr
[1]);

336  
iOff
 ){

337 
nUnu£d
 +
	`gë2byã
(&
aD©a
[
iOff
+2]);

338 
iOff
 = 
	`gë2byã
(&
aD©a
[iOff]);

340 
p
->
nUnu£d
 =ÇUnused;

341 
p
->
iRightChûdPg
 = 
isLóf
 ? 0 : 
	`sqlôe3Gë4byã
(&
aHdr
[8]);

342 
szPage
 = 
	`sqlôe3BåìGëPageSize
(
pBt
);

344 if–
p
->
nCñl
 ){

345 
i
;

346 
nUßbÀ
;

348 
	`sqlôe3BåìE¡î
(
pBt
);

349 
nUßbÀ
 = 
szPage
 - 
	`sqlôe3BåìGëRe£rveNoMuãx
(
pBt
);

350 
	`sqlôe3BåìLóve
(
pBt
);

351 
p
->
aCñl
 = 
	`sqlôe3_mÆloc64
(’->
nCñl
+1Ë* (
SètCñl
));

352 if–
p
->
aCñl
==0 )  
SQLITE_NOMEM_BKPT
;

353 
	`mem£t
(
p
->
aCñl
, 0, (p->
nCñl
+1Ë* (
SètCñl
));

355 
i
=0; i<
p
->
nCñl
; i++){

356 
SètCñl
 *
pCñl
 = &
p
->
aCñl
[
i
];

358 
iOff
 = 
	`gë2byã
(&
aD©a
[
nHdr
+
i
*2]);

359 if–!
isLóf
 ){

360 
pCñl
->
iChûdPg
 = 
	`sqlôe3Gë4byã
(&
aD©a
[
iOff
]);

361 
iOff
 += 4;

363 if–
p
->
Êags
==0x05 ){

366 
u32
 
nPaylﬂd
;

367 
nLoˇl
;

368 
iOff
 +
	`gëV¨öt32
(&
aD©a
[iOff], 
nPaylﬂd
);

369 if–
p
->
Êags
==0x0D ){

370 
u64
 
dummy
;

371 
iOff
 +
	`sqlôe3GëV¨öt
(&
aD©a
[iOff], &
dummy
);

373 if–
nPaylﬂd
>(
u32
)
p
->
nMxPaylﬂd
 )Ö->nMxPayload =ÇPayload;

374 
	`gëLoˇlPaylﬂd
(
nUßbÀ
, 
p
->
Êags
, 
nPaylﬂd
, &
nLoˇl
);

375 
pCñl
->
nLoˇl
 =ÇLocal;

376 
	`as£π
–
nLoˇl
>=0 );

377 
	`as£π
–
nPaylﬂd
>=(
u32
)
nLoˇl
 );

378 
	`as£π
–
nLoˇl
<=(
nUßbÀ
-35) );

379 if–
nPaylﬂd
>(
u32
)
nLoˇl
 ){

380 
j
;

381 
nOvÊ
 = ((
nPaylﬂd
 - 
nLoˇl
Ë+ 
nUßbÀ
-4 - 1) / (nUsable - 4);

382 
pCñl
->
nLa°OvÊ
 = (
nPaylﬂd
-
nLoˇl
Ë- (
nOvÊ
-1Ë* (
nUßbÀ
-4);

383 
pCñl
->
nOvÊ
 =ÇOvfl;

384 
pCñl
->
aOvÊ
 = 
	`sqlôe3_mÆloc64
((
u32
)*
nOvÊ
);

385 if–
pCñl
->
aOvÊ
==0 )  
SQLITE_NOMEM_BKPT
;

386 
pCñl
->
aOvÊ
[0] = 
	`sqlôe3Gë4byã
(&
aD©a
[
iOff
+
nLoˇl
]);

387 
j
=1; j<
nOvÊ
; j++){

388 
rc
;

389 
u32
 
iPªv
 = 
pCñl
->
aOvÊ
[
j
-1];

390 
DbPage
 *
pPg
 = 0;

391 
rc
 = 
	`sqlôe3PagîGë
(
	`sqlôe3BåìPagî
(
pBt
), 
iPªv
, &
pPg
, 0);

392 if–
rc
!=
SQLITE_OK
 ){

393 
	`as£π
–
pPg
==0 );

394  
rc
;

396 
pCñl
->
aOvÊ
[
j
] = 
	`sqlôe3Gë4byã
(
	`sqlôe3PagîGëD©a
(
pPg
));

397 
	`sqlôe3PagîUƒef
(
pPg
);

404  
SQLITE_OK
;

405 
	}
}

411 
	$°©SizeAndOff£t
(
SètCurs‹
 *
pC§
){

412 
SètTabÀ
 *
pTab
 = (SètTabÀ *)((
sqlôe3_vèb_curs‹
 *)
pC§
)->
pVèb
;

413 
Båì
 *
pBt
 = 
pTab
->
db
->
aDb
[pTab->
iDb
].pBt;

414 
Pagî
 *
pPagî
 = 
	`sqlôe3BåìPagî
(
pBt
);

415 
sqlôe3_fûe
 *
fd
;

416 
sqlôe3_öt64
 
x
[2];

419 
pC§
->
szPage
 = 
	`sqlôe3BåìGëPageSize
(
pBt
);

420 
pC§
->
iOff£t
 = (
i64
ÌC§->
szPage
 * (pC§->
iPagío
 - 1);

425 
fd
 = 
	`sqlôe3PagîFûe
(
pPagî
);

426 
x
[0] = 
pC§
->
iPagío
;

427 if–
fd
->
pMëhods
!=0 && 
	`sqlôe3OsFûeC⁄åﬁ
(fd, 230440, &
x
)==
SQLITE_OK
 ){

428 
pC§
->
iOff£t
 = 
x
[0];

429 
pC§
->
szPage
 = ()
x
[1];

431 
	}
}

436 
	$°©Next
(
sqlôe3_vèb_curs‹
 *
pCurs‹
){

437 
rc
;

438 
nPaylﬂd
;

439 *
z
;

440 
SètCurs‹
 *
pC§
 = (SètCurs‹ *)
pCurs‹
;

441 
SètTabÀ
 *
pTab
 = (SètTabÀ *)
pCurs‹
->
pVèb
;

442 
Båì
 *
pBt
 = 
pTab
->
db
->
aDb
[
pC§
->
iDb
].pBt;

443 
Pagî
 *
pPagî
 = 
	`sqlôe3BåìPagî
(
pBt
);

445 
	`sqlôe3_‰ì
(
pC§
->
zP©h
);

446 
pC§
->
zP©h
 = 0;

448 
°©NextRe°¨t
:

449 if–
pC§
->
aPage
[0].
pPg
==0 ){

450 
rc
 = 
	`sqlôe3_°ï
(
pC§
->
pStmt
);

451 if–
rc
==
SQLITE_ROW
 ){

452 
nPage
;

453 
u32
 
iRoŸ
 = (u32)
	`sqlôe3_cﬁumn_öt64
(
pC§
->
pStmt
, 1);

454 
	`sqlôe3PagîPagecou¡
(
pPagî
, &
nPage
);

455 if–
nPage
==0 ){

456 
pC§
->
isEof
 = 1;

457  
	`sqlôe3_ª£t
(
pC§
->
pStmt
);

459 
rc
 = 
	`sqlôe3PagîGë
(
pPagî
, 
iRoŸ
, &
pC§
->
aPage
[0].
pPg
, 0);

460 
pC§
->
aPage
[0].
iPgno
 = 
iRoŸ
;

461 
pC§
->
aPage
[0].
iCñl
 = 0;

462 
pC§
->
aPage
[0].
zP©h
 = 
z
 = 
	`sqlôe3_m¥ötf
("/");

463 
pC§
->
iPage
 = 0;

464 if–
z
==0 ) 
rc
 = 
SQLITE_NOMEM_BKPT
;

466 
pC§
->
isEof
 = 1;

467  
	`sqlôe3_ª£t
(
pC§
->
pStmt
);

472 
SètPage
 *
p
 = &
pC§
->
aPage
[pC§->
iPage
];

474  
p
->
iCñl
<p->
nCñl
 ){

475 
SètCñl
 *
pCñl
 = &
p
->
aCñl
[p->
iCñl
];

476 if–
pCñl
->
iOvÊ
<pCñl->
nOvÊ
 ){

477 
nUßbÀ
;

478 
	`sqlôe3BåìE¡î
(
pBt
);

479 
nUßbÀ
 = 
	`sqlôe3BåìGëPageSize
(
pBt
) -

480 
	`sqlôe3BåìGëRe£rveNoMuãx
(
pBt
);

481 
	`sqlôe3BåìLóve
(
pBt
);

482 
pC§
->
zName
 = (*)
	`sqlôe3_cﬁumn_ãxt
’C§->
pStmt
, 0);

483 
pC§
->
iPagío
 = 
pCñl
->
aOvÊ
[pCñl->
iOvÊ
];

484 
pC§
->
zPagëy≥
 = "overflow";

485 
pC§
->
nCñl
 = 0;

486 
pC§
->
nMxPaylﬂd
 = 0;

487 
pC§
->
zP©h
 = 
z
 = 
	`sqlôe3_m¥ötf
(

488 "%s%.3x+%.6x", 
p
->
zP©h
,Ö->
iCñl
, 
pCñl
->
iOvÊ


490 if–
pCñl
->
iOvÊ
<pCñl->
nOvÊ
-1 ){

491 
pC§
->
nUnu£d
 = 0;

492 
pC§
->
nPaylﬂd
 = 
nUßbÀ
 - 4;

494 
pC§
->
nPaylﬂd
 = 
pCñl
->
nLa°OvÊ
;

495 
pC§
->
nUnu£d
 = 
nUßbÀ
 - 4 -ÖC§->
nPaylﬂd
;

497 
pCñl
->
iOvÊ
++;

498 
	`°©SizeAndOff£t
(
pC§
);

499  
z
==0 ? 
SQLITE_NOMEM_BKPT
 : 
SQLITE_OK
;

501 if–
p
->
iRightChûdPg
 ) ;

502 
p
->
iCñl
++;

505 if–!
p
->
iRightChûdPg
 ||Ö->
iCñl
>p->
nCñl
 ){

506 
	`°©CÀ¨Page
(
p
);

507 if–
pC§
->
iPage
==0 )  
	`°©Next
(
pCurs‹
);

508 
pC§
->
iPage
--;

509 
°©NextRe°¨t
;

511 
pC§
->
iPage
++;

512 
	`as£π
–
p
==&
pC§
->
aPage
[pC§->
iPage
-1] );

514 if–
p
->
iCñl
=ı->
nCñl
 ){

515 
p
[1].
iPgno
 =Ö->
iRightChûdPg
;

517 
p
[1].
iPgno
 =Ö->
aCñl
[p->
iCñl
].
iChûdPg
;

519 
rc
 = 
	`sqlôe3PagîGë
(
pPagî
, 
p
[1].
iPgno
, &p[1].
pPg
, 0);

520 
p
[1].
iCñl
 = 0;

521 
p
[1].
zP©h
 = 
z
 = 
	`sqlôe3_m¥ötf
("%s%.3x/",Ö->zP©h,Ö->
iCñl
);

522 
p
->
iCñl
++;

523 if–
z
==0 ) 
rc
 = 
SQLITE_NOMEM_BKPT
;

530 if–
rc
==
SQLITE_OK
 ){

531 
i
;

532 
SètPage
 *
p
 = &
pC§
->
aPage
[pC§->
iPage
];

533 
pC§
->
zName
 = (*)
	`sqlôe3_cﬁumn_ãxt
’C§->
pStmt
, 0);

534 
pC§
->
iPagío
 = 
p
->
iPgno
;

536 
rc
 = 
	`°©DecodePage
(
pBt
, 
p
);

537 if–
rc
==
SQLITE_OK
 ){

538 
	`°©SizeAndOff£t
(
pC§
);

540  
p
->
Êags
 ){

543 
pC§
->
zPagëy≥
 = "internal";

547 
pC§
->
zPagëy≥
 = "leaf";

550 
pC§
->
zPagëy≥
 = "corrupted";

553 
pC§
->
nCñl
 = 
p
->nCell;

554 
pC§
->
nUnu£d
 = 
p
->nUnused;

555 
pC§
->
nMxPaylﬂd
 = 
p
->nMxPayload;

556 
pC§
->
zP©h
 = 
z
 = 
	`sqlôe3_m¥ötf
("%s", 
p
->zPath);

557 if–
z
==0 ) 
rc
 = 
SQLITE_NOMEM_BKPT
;

558 
nPaylﬂd
 = 0;

559 
i
=0; i<
p
->
nCñl
; i++){

560 
nPaylﬂd
 +
p
->
aCñl
[
i
].
nLoˇl
;

562 
pC§
->
nPaylﬂd
 =ÇPayload;

566  
rc
;

567 
	}
}

569 
	$°©Eof
(
sqlôe3_vèb_curs‹
 *
pCurs‹
){

570 
SètCurs‹
 *
pC§
 = (SètCurs‹ *)
pCurs‹
;

571  
pC§
->
isEof
;

572 
	}
}

574 
	$°©Fûãr
(

575 
sqlôe3_vèb_curs‹
 *
pCurs‹
,

576 
idxNum
, c⁄° *
idxSå
,

577 
¨gc
, 
sqlôe3_vÆue
 **
¨gv


579 
SètCurs‹
 *
pC§
 = (SètCurs‹ *)
pCurs‹
;

580 
SètTabÀ
 *
pTab
 = (SètTabÀ*)(
pCurs‹
->
pVèb
);

581 *
zSql
;

582 
rc
 = 
SQLITE_OK
;

583 *
zMa°î
;

585 if–
idxNum
==1 ){

586 c⁄° *
zDba£
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

587 
pC§
->
iDb
 = 
	`sqlôe3FödDbName
(
pTab
->
db
, 
zDba£
);

588 if–
pC§
->
iDb
<0 ){

589 
	`sqlôe3_‰ì
(
pCurs‹
->
pVèb
->
zEºMsg
);

590 
pCurs‹
->
pVèb
->
zEºMsg
 = 
	`sqlôe3_m¥ötf
("nÿsuch schema: %s", 
zDba£
);

591  
pCurs‹
->
pVèb
->
zEºMsg
 ? 
SQLITE_ERROR
 : 
SQLITE_NOMEM_BKPT
;

594 
pC§
->
iDb
 = 
pTab
->iDb;

596 
	`°©Re£tC§
(
pC§
);

597 
	`sqlôe3_föÆize
(
pC§
->
pStmt
);

598 
pC§
->
pStmt
 = 0;

599 
zMa°î
 = 
pC§
->
iDb
==1 ? "sqlite_temp_master" : "sqlite_master";

600 
zSql
 = 
	`sqlôe3_m¥ötf
(

605 " ORDER BYÇame", 
pTab
->
db
->
aDb
[
pC§
->
iDb
].
zDbSName
, 
zMa°î
);

606 if–
zSql
==0 ){

607  
SQLITE_NOMEM_BKPT
;

609 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
pTab
->
db
, 
zSql
, -1, &
pC§
->
pStmt
, 0);

610 
	`sqlôe3_‰ì
(
zSql
);

613 if–
rc
==
SQLITE_OK
 ){

614 
rc
 = 
	`°©Next
(
pCurs‹
);

616  
rc
;

617 
	}
}

619 
	$°©Cﬁumn
(

620 
sqlôe3_vèb_curs‹
 *
pCurs‹
,

621 
sqlôe3_c⁄ãxt
 *
˘x
,

622 
i


624 
SètCurs‹
 *
pC§
 = (SètCurs‹ *)
pCurs‹
;

625  
i
 ){

627 
	`sqlôe3_ªsu…_ãxt
(
˘x
, 
pC§
->
zName
, -1, 
SQLITE_TRANSIENT
);

630 
	`sqlôe3_ªsu…_ãxt
(
˘x
, 
pC§
->
zP©h
, -1, 
SQLITE_TRANSIENT
);

633 
	`sqlôe3_ªsu…_öt64
(
˘x
, 
pC§
->
iPagío
);

636 
	`sqlôe3_ªsu…_ãxt
(
˘x
, 
pC§
->
zPagëy≥
, -1, 
SQLITE_STATIC
);

639 
	`sqlôe3_ªsu…_öt
(
˘x
, 
pC§
->
nCñl
);

642 
	`sqlôe3_ªsu…_öt
(
˘x
, 
pC§
->
nPaylﬂd
);

645 
	`sqlôe3_ªsu…_öt
(
˘x
, 
pC§
->
nUnu£d
);

648 
	`sqlôe3_ªsu…_öt
(
˘x
, 
pC§
->
nMxPaylﬂd
);

651 
	`sqlôe3_ªsu…_öt64
(
˘x
, 
pC§
->
iOff£t
);

654 
	`sqlôe3_ªsu…_öt
(
˘x
, 
pC§
->
szPage
);

657 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
˘x
);

658 
iDb
 = 
pC§
->iDb;

659 
	`sqlôe3_ªsu…_ãxt
(
˘x
, 
db
->
aDb
[
iDb
].
zDbSName
, -1, 
SQLITE_STATIC
);

663  
SQLITE_OK
;

664 
	}
}

666 
	$°©Rowid
(
sqlôe3_vèb_curs‹
 *
pCurs‹
, 
sqlôe_öt64
 *
pRowid
){

667 
SètCurs‹
 *
pC§
 = (SètCurs‹ *)
pCurs‹
;

668 *
pRowid
 = 
pC§
->
iPagío
;

669  
SQLITE_OK
;

670 
	}
}

675 
	$sqlôe3Db°©Regi°î
(
sqlôe3
 *
db
){

676 
sqlôe3_moduÀ
 
db°©_moduÀ
 = {

678 
°©C⁄√˘
,

679 
°©C⁄√˘
,

680 
°©Be°Index
,

681 
°©Disc⁄√˘
,

682 
°©Disc⁄√˘
,

683 
°©O≥n
,

684 
°©Clo£
,

685 
°©Fûãr
,

686 
°©Next
,

687 
°©Eof
,

688 
°©Cﬁumn
,

689 
°©Rowid
,

698  
	`sqlôe3_¸óã_moduÀ
(
db
, "db°©", &
db°©_moduÀ
, 0);

699 
	}
}

700 #ñi‡
deföed
(
SQLITE_ENABLE_DBSTAT_VTAB
)

701 
	$sqlôe3Db°©Regi°î
(
sqlôe3
 *
db
){  
SQLITE_OK
; 
	}
}

	@delete.c

15 
	~"sqlôeI¡.h
"

31 
TabÀ
 *
	$sqlôe3SrcLi°Lookup
(
P¨£
 *
pP¨£
, 
SrcLi°
 *
pSrc
){

32 
SrcLi°_ôem
 *
pIãm
 = 
pSrc
->
a
;

33 
TabÀ
 *
pTab
;

34 
	`as£π
–
pIãm
 && 
pSrc
->
nSrc
==1 );

35 
pTab
 = 
	`sqlôe3LoˇãTabÀIãm
(
pP¨£
, 0, 
pIãm
);

36 
	`sqlôe3DñëeTabÀ
(
pP¨£
->
db
, 
pIãm
->
pTab
);

37 
pIãm
->
pTab
 =ÖTab;

38 if–
pTab
 ){

39 
pTab
->
nTabRef
++;

41 if–
	`sqlôe3IndexedByLookup
(
pP¨£
, 
pIãm
) ){

42 
pTab
 = 0;

44  
pTab
;

45 
	}
}

52 
	$sqlôe3IsRódO∆y
(
P¨£
 *
pP¨£
, 
TabÀ
 *
pTab
, 
võwOk
){

63 if––
	`IsVútuÆ
(
pTab
)

64 && 
	`sqlôe3GëVTabÀ
(
pP¨£
->
db
, 
pTab
)->
pMod
->
pModuÀ
->
xUpd©e
==0 )

65 || ( (
pTab
->
èbFœgs
 & 
TF_Ród⁄ly
)!=0

66 && (
pP¨£
->
db
->
Êags
 & 
SQLITE_WrôeSchema
)==0

67 && 
pP¨£
->
√°ed
==0 )

69 
	`sqlôe3Eº‹Msg
(
pP¨£
, "èbÀ %†mayÇŸ bêmodifõd", 
pTab
->
zName
);

73 #i‚de‡
SQLITE_OMIT_VIEW


74 if–!
võwOk
 && 
pTab
->
pSñe˘
 ){

75 
	`sqlôe3Eº‹Msg
(
pP¨£
,"ˇ¬Ÿ modify %†beˇu£ iài†®võw",
pTab
->
zName
);

80 
	}
}

83 #i‡!
deföed
(
SQLITE_OMIT_VIEW
Ë&& !deföed(
SQLITE_OMIT_TRIGGER
)

89 
	$sqlôe3M©îülizeVõw
(

90 
P¨£
 *
pP¨£
,

91 
TabÀ
 *
pVõw
,

92 
Ex¥
 *
pWhîe
,

93 
iCur


95 
Sñe˘De°
 
de°
;

96 
Sñe˘
 *
pSñ
;

97 
SrcLi°
 *
pFrom
;

98 
sqlôe3
 *
db
 = 
pP¨£
->db;

99 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pVõw
->
pSchema
);

100 
pWhîe
 = 
	`sqlôe3Ex¥Dup
(
db
,ÖWhere, 0);

101 
pFrom
 = 
	`sqlôe3SrcLi°Aµíd
(
db
, 0, 0, 0);

102 if–
pFrom
 ){

103 
	`as£π
–
pFrom
->
nSrc
==1 );

104 
pFrom
->
a
[0].
zName
 = 
	`sqlôe3DbSåDup
(
db
, 
pVõw
->zName);

105 
pFrom
->
a
[0].
zD©aba£
 = 
	`sqlôe3DbSåDup
(
db
, db->
aDb
[
iDb
].
zDbSName
);

106 
	`as£π
–
pFrom
->
a
[0].
pOn
==0 );

107 
	`as£π
–
pFrom
->
a
[0].
pUsög
==0 );

109 
pSñ
 = 
	`sqlôe3Sñe˘New
(
pP¨£
, 0, 
pFrom
, 
pWhîe
, 0, 0, 0,

110 
SF_In˛udeHiddí
, 0, 0);

111 
	`sqlôe3Sñe˘De°Inô
(&
de°
, 
SRT_EphemTab
, 
iCur
);

112 
	`sqlôe3Sñe˘
(
pP¨£
, 
pSñ
, &
de°
);

113 
	`sqlôe3Sñe˘Dñëe
(
db
, 
pSñ
);

114 
	}
}

117 #i‡
deföed
(
SQLITE_ENABLE_UPDATE_DELETE_LIMIT
Ë&& !deföed(
SQLITE_OMIT_SUBQUERY
)

126 
Ex¥
 *
	$sqlôe3LimôWhîe
(

127 
P¨£
 *
pP¨£
,

128 
SrcLi°
 *
pSrc
,

129 
Ex¥
 *
pWhîe
,

130 
Ex¥Li°
 *
pOrdîBy
,

131 
Ex¥
 *
pLimô
,

132 
Ex¥
 *
pOff£t
,

133 *
zStmtTy≥


135 
Ex¥
 *
pWhîeRowid
 = 
NULL
;

136 
Ex¥
 *
pInCœu£
 = 
NULL
;

137 
Ex¥
 *
pSñe˘Rowid
 = 
NULL
;

138 
Ex¥Li°
 *
pELi°
 = 
NULL
;

139 
SrcLi°
 *
pSñe˘Src
 = 
NULL
;

140 
Sñe˘
 *
pSñe˘
 = 
NULL
;

144 if–
pOrdîBy
 && (
pLimô
 == 0) ) {

145 
	`sqlôe3Eº‹Msg
(
pP¨£
, "ORDER BY wôhouàLIMIT o¿%s", 
zStmtTy≥
);

146 
limô_whîe_˛ónup
;

152 if–
pLimô
 == 0 ) {

154 
	`as£π
–
pOff£t
 == 0 );

155  
pWhîe
;

167 
pSñe˘Rowid
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_ROW
, 0, 0);

168 if–
pSñe˘Rowid
 =0 ) 
limô_whîe_˛ónup
;

169 
pELi°
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
, 0, 
pSñe˘Rowid
);

170 if–
pELi°
 =0 ) 
limô_whîe_˛ónup
;

174 
pSñe˘Src
 = 
	`sqlôe3SrcLi°Dup
(
pP¨£
->
db
, 
pSrc
, 0);

175 if–
pSñe˘Src
 == 0 ) {

176 
	`sqlôe3Ex¥Li°Dñëe
(
pP¨£
->
db
, 
pELi°
);

177 
limô_whîe_˛ónup
;

181 
pSñe˘
 = 
	`sqlôe3Sñe˘New
(
pP¨£
,
pELi°
,
pSñe˘Src
,
pWhîe
,0,0,

182 
pOrdîBy
,0,
pLimô
,
pOff£t
);

183 if–
pSñe˘
 == 0 )  0;

186 
pWhîeRowid
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_ROW
, 0, 0);

187 
pInCœu£
 = 
pWhîeRowid
 ? 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_IN
,ÖWhereRowid, 0) : 0;

188 
	`sqlôe3PEx¥AddSñe˘
(
pP¨£
, 
pInCœu£
, 
pSñe˘
);

189  
pInCœu£
;

191 
limô_whîe_˛ónup
:

192 
	`sqlôe3Ex¥Dñëe
(
pP¨£
->
db
, 
pWhîe
);

193 
	`sqlôe3Ex¥Li°Dñëe
(
pP¨£
->
db
, 
pOrdîBy
);

194 
	`sqlôe3Ex¥Dñëe
(
pP¨£
->
db
, 
pLimô
);

195 
	`sqlôe3Ex¥Dñëe
(
pP¨£
->
db
, 
pOff£t
);

197 
	}
}

208 
	$sqlôe3DñëeFrom
(

209 
P¨£
 *
pP¨£
,

210 
SrcLi°
 *
pTabLi°
,

211 
Ex¥
 *
pWhîe


213 
Vdbe
 *
v
;

214 
TabÀ
 *
pTab
;

215 
i
;

216 
WhîeInfo
 *
pWInfo
;

217 
Index
 *
pIdx
;

218 
iTabCur
;

219 
iD©aCur
 = 0;

220 
iIdxCur
 = 0;

221 
nIdx
;

222 
sqlôe3
 *
db
;

223 
AuthC⁄ãxt
 
sC⁄ãxt
;

224 
NameC⁄ãxt
 
sNC
;

225 
iDb
;

226 
memC¡
 = -1;

227 
rˇuth
;

228 
eO√Pass
;

229 
aiCurO√Pass
[2];

230 
u8
 *
aToO≥n
 = 0;

231 
Index
 *
pPk
;

232 
iPk
 = 0;

233 
i16
 
nPk
 = 1;

234 
iKey
;

235 
i16
 
nKey
;

236 
iEphCur
 = 0;

237 
iRowSë
 = 0;

238 
addrBy∑ss
 = 0;

239 
addrLo›
 = 0;

240 
addrEphO≥n
 = 0;

241 
bCom∂ex
;

244 #i‚de‡
SQLITE_OMIT_TRIGGER


245 
isVõw
;

246 
Triggî
 *
pTriggî
;

249 
	`mem£t
(&
sC⁄ãxt
, 0, (sContext));

250 
db
 = 
pP¨£
->db;

251 if–
pP¨£
->
nEº
 || 
db
->
mÆlocFaûed
 ){

252 
dñëe_‰om_˛ónup
;

254 
	`as£π
–
pTabLi°
->
nSrc
==1 );

261 
pTab
 = 
	`sqlôe3SrcLi°Lookup
(
pP¨£
, 
pTabLi°
);

262 if–
pTab
==0 ) 
dñëe_‰om_˛ónup
;

267 #i‚de‡
SQLITE_OMIT_TRIGGER


268 
pTriggî
 = 
	`sqlôe3TriggîsExi°
(
pP¨£
, 
pTab
, 
TK_DELETE
, 0, 0);

269 
isVõw
 = 
pTab
->
pSñe˘
!=0;

270 
bCom∂ex
 = 
pTriggî
 || 
	`sqlôe3FkRequúed
(
pP¨£
, 
pTab
, 0, 0);

272 
	#pTriggî
 0

	)

273 
	#isVõw
 0

	)

275 #ifde‡
SQLITE_OMIT_VIEW


276 #unde‡
isVõw


277 
	#isVõw
 0

	)

282 if–
	`sqlôe3VõwGëCﬁumnNames
(
pP¨£
, 
pTab
) ){

283 
dñëe_‰om_˛ónup
;

286 if–
	`sqlôe3IsRódO∆y
(
pP¨£
, 
pTab
, (
pTriggî
?1:0)) ){

287 
dñëe_‰om_˛ónup
;

289 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pTab
->
pSchema
);

290 
	`as£π
–
iDb
<
db
->
nDb
 );

291 
rˇuth
 = 
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_DELETE
, 
pTab
->
zName
, 0,

292 
db
->
aDb
[
iDb
].
zDbSName
);

293 
	`as£π
–
rˇuth
==
SQLITE_OK
 ||Ñˇuth==
SQLITE_DENY
 ||Ñˇuth==
SQLITE_IGNORE
 );

294 if–
rˇuth
==
SQLITE_DENY
 ){

295 
dñëe_‰om_˛ónup
;

297 
	`as£π
(!
isVõw
 || 
pTriggî
);

301 
	`as£π
–
pTabLi°
->
nSrc
==1 );

302 
iTabCur
 = 
pTabLi°
->
a
[0].
iCurs‹
 = 
pP¨£
->
nTab
++;

303 
nIdx
=0, 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
,ÇIdx++){

304 
pP¨£
->
nTab
++;

309 if–
isVõw
 ){

310 
	`sqlôe3AuthC⁄ãxtPush
(
pP¨£
, &
sC⁄ãxt
, 
pTab
->
zName
);

315 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

316 if–
v
==0 ){

317 
dñëe_‰om_˛ónup
;

319 if–
pP¨£
->
√°ed
==0 ) 
	`sqlôe3VdbeCou¡Ch™ges
(
v
);

320 
	`sqlôe3BegöWrôeO≥øti⁄
(
pP¨£
, 1, 
iDb
);

325 #i‡!
	`deföed
(
SQLITE_OMIT_VIEW
Ë&& !deföed(
SQLITE_OMIT_TRIGGER
)

326 if–
isVõw
 ){

327 
	`sqlôe3M©îülizeVõw
(
pP¨£
, 
pTab
, 
pWhîe
, 
iTabCur
);

328 
iD©aCur
 = 
iIdxCur
 = 
iTabCur
;

334 
	`mem£t
(&
sNC
, 0, (sNC));

335 
sNC
.
pP¨£
 =ÖParse;

336 
sNC
.
pSrcLi°
 = 
pTabLi°
;

337 if–
	`sqlôe3ResﬁveEx¥Names
(&
sNC
, 
pWhîe
) ){

338 
dñëe_‰om_˛ónup
;

344 if–
db
->
Êags
 & 
SQLITE_Cou¡Rows
 ){

345 
memC¡
 = ++
pP¨£
->
nMem
;

346 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 0, 
memC¡
);

349 #i‚de‡
SQLITE_OMIT_TRUNCATE_OPTIMIZATION


354 if–
rˇuth
==
SQLITE_OK


355 && 
pWhîe
==0

356 && !
bCom∂ex


357 && !
	`IsVútuÆ
(
pTab
)

358 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


359 && 
db
->
xPªUpd©eCÆlback
==0

362 
	`as£π
–!
isVõw
 );

363 
	`sqlôe3TabÀLock
(
pP¨£
, 
iDb
, 
pTab
->
äum
, 1,ÖTab->
zName
);

364 if–
	`HasRowid
(
pTab
) ){

365 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_CÀ¨
, 
pTab
->
äum
, 
iDb
, 
memC¡
,

366 
pTab
->
zName
, 
P4_STATIC
);

368 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
){

369 
	`as£π
–
pIdx
->
pSchema
==
pTab
->pSchema );

370 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_CÀ¨
, 
pIdx
->
äum
, 
iDb
);

375 
u16
 
wcf
 = 
WHERE_ONEPASS_DESIRED
|
WHERE_DUPLICATES_OK
|
WHERE_SEEK_TABLE
;

376 if–
sNC
.
ncFœgs
 & 
NC_V¨Sñe˘
 ) 
bCom∂ex
 = 1;

377 
wcf
 |(
bCom∂ex
 ? 0 : 
WHERE_ONEPASS_MULTIROW
);

378 if–
	`HasRowid
(
pTab
) ){

380 
pPk
 = 0;

381 
nPk
 = 1;

382 
iRowSë
 = ++
pP¨£
->
nMem
;

383 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NuŒ
, 0, 
iRowSë
);

387 
pPk
 = 
	`sqlôe3Prim¨yKeyIndex
(
pTab
);

388 
	`as£π
–
pPk
!=0 );

389 
nPk
 = 
pPk
->
nKeyCﬁ
;

390 
iPk
 = 
pP¨£
->
nMem
+1;

391 
pP¨£
->
nMem
 +
nPk
;

392 
iEphCur
 = 
pP¨£
->
nTab
++;

393 
addrEphO≥n
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_O≥nEphemîÆ
, 
iEphCur
, 
nPk
);

394 
	`sqlôe3VdbeSëP4KeyInfo
(
pP¨£
, 
pPk
);

405 
pWInfo
 = 
	`sqlôe3WhîeBegö
(
pP¨£
, 
pTabLi°
, 
pWhîe
, 0, 0, 
wcf
, 
iTabCur
+1);

406 if–
pWInfo
==0 ) 
dñëe_‰om_˛ónup
;

407 
eO√Pass
 = 
	`sqlôe3WhîeOkO√Pass
(
pWInfo
, 
aiCurO√Pass
);

408 
	`as£π
–
	`IsVútuÆ
(
pTab
)==0 || 
eO√Pass
!=
ONEPASS_MULTI
 );

409 
	`as£π
–
	`IsVútuÆ
(
pTab
Ë|| 
bCom∂ex
 || 
eO√Pass
!=
ONEPASS_OFF
 );

412 if–
db
->
Êags
 & 
SQLITE_Cou¡Rows
 ){

413 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_AddImm
, 
memC¡
, 1);

417 if–
pPk
 ){

418 
i
=0; i<
nPk
; i++){

419 
	`as£π
–
pPk
->
aiCﬁumn
[
i
]>=0 );

420 
	`sqlôe3Ex¥CodeGëCﬁumnOfTabÀ
(
v
, 
pTab
, 
iTabCur
,

421 
pPk
->
aiCﬁumn
[
i
], 
iPk
+i);

423 
iKey
 = 
iPk
;

425 
iKey
 = 
pP¨£
->
nMem
 + 1;

426 
iKey
 = 
	`sqlôe3Ex¥CodeGëCﬁumn
(
pP¨£
, 
pTab
, -1, 
iTabCur
, iKey, 0);

427 if–
iKey
>
pP¨£
->
nMem
 )ÖParse->nMem = iKey;

430 if–
eO√Pass
!=
ONEPASS_OFF
 ){

434 
nKey
 = 
nPk
;

435 
aToO≥n
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, 
nIdx
+2);

436 if–
aToO≥n
==0 ){

437 
	`sqlôe3WhîeEnd
(
pWInfo
);

438 
dñëe_‰om_˛ónup
;

440 
	`mem£t
(
aToO≥n
, 1, 
nIdx
+1);

441 
aToO≥n
[
nIdx
+1] = 0;

442 if–
aiCurO√Pass
[0]>=0 ) 
aToO≥n
[aiCurO√Pass[0]-
iTabCur
] = 0;

443 if–
aiCurO√Pass
[1]>=0 ) 
aToO≥n
[aiCurO√Pass[1]-
iTabCur
] = 0;

444 if–
addrEphO≥n
 ) 
	`sqlôe3VdbeCh™geToNo›
(
v
,áddrEphOpen);

446 if–
pPk
 ){

448 
iKey
 = ++
pP¨£
->
nMem
;

449 
nKey
 = 0;

450 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_MakeRec‹d
, 
iPk
, 
nPk
, 
iKey
,

451 
	`sqlôe3IndexAfföôySå
(
pP¨£
->
db
, 
pPk
), 
nPk
);

452 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_IdxIn£π
, 
iEphCur
, 
iKey
, 
iPk
, 
nPk
);

455 
nKey
 = 1;

456 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_RowSëAdd
, 
iRowSë
, 
iKey
);

462 if–
eO√Pass
!=
ONEPASS_OFF
 ){

463 
addrBy∑ss
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

465 
	`sqlôe3WhîeEnd
(
pWInfo
);

473 if–!
isVõw
 ){

474 
iAddrOn˚
 = 0;

475 if–
eO√Pass
==
ONEPASS_MULTI
 ){

476 
iAddrOn˚
 = 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_On˚
); 
	`VdbeCovîage
(v);

478 
	`ã°ˇ£
–
	`IsVútuÆ
(
pTab
) );

479 
	`sqlôe3O≥nTabÀAndIndi˚s
(
pP¨£
, 
pTab
, 
OP_O≥nWrôe
, 
OPFLAG_FORDELETE
,

480 
iTabCur
, 
aToO≥n
, &
iD©aCur
, &
iIdxCur
);

481 
	`as£π
–
pPk
 || 
	`IsVútuÆ
(
pTab
Ë|| 
iD©aCur
==
iTabCur
 );

482 
	`as£π
–
pPk
 || 
	`IsVútuÆ
(
pTab
Ë|| 
iIdxCur
==
iD©aCur
+1 );

483 if–
eO√Pass
==
ONEPASS_MULTI
 ) 
	`sqlôe3VdbeJumpHîe
(
v
, 
iAddrOn˚
);

489 if–
eO√Pass
!=
ONEPASS_OFF
 ){

490 
	`as£π
–
nKey
==
nPk
 );

491 if–!
	`IsVútuÆ
(
pTab
Ë&& 
aToO≥n
[
iD©aCur
-
iTabCur
] ){

492 
	`as£π
–
pPk
!=0 || 
pTab
->
pSñe˘
!=0 );

493 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_NŸFound
, 
iD©aCur
, 
addrBy∑ss
, 
iKey
, 
nKey
);

494 
	`VdbeCovîage
(
v
);

496 }if–
pPk
 ){

497 
addrLo›
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Rewöd
, 
iEphCur
); 
	`VdbeCovîage
(v);

498 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_RowD©a
, 
iEphCur
, 
iKey
);

499 
	`as£π
–
nKey
==0 );

501 
addrLo›
 = 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_RowSëRód
, 
iRowSë
, 0, 
iKey
);

502 
	`VdbeCovîage
(
v
);

503 
	`as£π
–
nKey
==1 );

507 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


508 if–
	`IsVútuÆ
(
pTab
) ){

509 c⁄° *
pVTab
 = (c⁄° *)
	`sqlôe3GëVTabÀ
(
db
, 
pTab
);

510 
	`sqlôe3VèbMakeWrôabÀ
(
pP¨£
, 
pTab
);

511 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_VUpd©e
, 0, 1, 
iKey
, 
pVTab
, 
P4_VTAB
);

512 
	`sqlôe3VdbeCh™geP5
(
v
, 
OE_Ab‹t
);

513 
	`as£π
–
eO√Pass
==
ONEPASS_OFF
 ||ÉO√Pass==
ONEPASS_SINGLE
 );

514 
	`sqlôe3MayAb‹t
(
pP¨£
);

515 if–
eO√Pass
==
ONEPASS_SINGLE
 && 
	`sqlôe3IsT›Àvñ
(
pP¨£
) ){

516 
pP¨£
->
isMu…iWrôe
 = 0;

521 
cou¡
 = (
pP¨£
->
√°ed
==0);

522 
iIdxNoSìk
 = -1;

523 if–
bCom∂ex
==0 && 
aiCurO√Pass
[1]!=
iD©aCur
 ){

524 
iIdxNoSìk
 = 
aiCurO√Pass
[1];

526 
	`sqlôe3Gíî©eRowDñëe
(
pP¨£
, 
pTab
, 
pTriggî
, 
iD©aCur
, 
iIdxCur
,

527 
iKey
, 
nKey
, 
cou¡
, 
OE_DeÁu…
, 
eO√Pass
, 
iIdxNoSìk
);

531 if–
eO√Pass
!=
ONEPASS_OFF
 ){

532 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
addrBy∑ss
);

533 
	`sqlôe3WhîeEnd
(
pWInfo
);

534 }if–
pPk
 ){

535 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Next
, 
iEphCur
, 
addrLo›
+1); 
	`VdbeCovîage
(v);

536 
	`sqlôe3VdbeJumpHîe
(
v
, 
addrLo›
);

538 
	`sqlôe3VdbeGŸo
(
v
, 
addrLo›
);

539 
	`sqlôe3VdbeJumpHîe
(
v
, 
addrLo›
);

547 if–
pP¨£
->
√°ed
==0 &&ÖP¨£->
pTriggîTab
==0 ){

548 
	`sqlôe3Autoö¸emítEnd
(
pP¨£
);

555 if–(
db
->
Êags
&
SQLITE_Cou¡Rows
Ë&& !
pP¨£
->
√°ed
 && !pP¨£->
pTriggîTab
 ){

556 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 
memC¡
, 1);

557 
	`sqlôe3VdbeSëNumCﬁs
(
v
, 1);

558 
	`sqlôe3VdbeSëCﬁName
(
v
, 0, 
COLNAME_NAME
, "row†dñëed", 
SQLITE_STATIC
);

561 
dñëe_‰om_˛ónup
:

562 
	`sqlôe3AuthC⁄ãxtP›
(&
sC⁄ãxt
);

563 
	`sqlôe3SrcLi°Dñëe
(
db
, 
pTabLi°
);

564 
	`sqlôe3Ex¥Dñëe
(
db
, 
pWhîe
);

565 
	`sqlôe3DbFªe
(
db
, 
aToO≥n
);

567 
	}
}

571 #ifde‡
isVõw


572 #unde‡
isVõw


574 #ifde‡
pTriggî


575 #unde‡
pTriggî


617 
	$sqlôe3Gíî©eRowDñëe
(

618 
P¨£
 *
pP¨£
,

619 
TabÀ
 *
pTab
,

620 
Triggî
 *
pTriggî
,

621 
iD©aCur
,

622 
iIdxCur
,

623 
iPk
,

624 
i16
 
nPk
,

625 
u8
 
cou¡
,

626 
u8
 
⁄c⁄f
,

627 
u8
 
eMode
,

628 
iIdxNoSìk


630 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

631 
iOld
 = 0;

632 
iLabñ
;

633 
u8
 
›Sìk
;

636 
	`as£π
–
v
 );

637 
	`VdbeModuÀCommít
((
v
, "BEGIN: GenRowDel(%d,%d,%d,%d)",

638 
iD©aCur
, 
iIdxCur
, 
iPk
, ()
nPk
));

643 
iLabñ
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

644 
›Sìk
 = 
	`HasRowid
(
pTab
Ë? 
OP_NŸExi°s
 : 
OP_NŸFound
;

645 if–
eMode
==
ONEPASS_OFF
 ){

646 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
›Sìk
, 
iD©aCur
, 
iLabñ
, 
iPk
, 
nPk
);

647 
	`VdbeCovîageIf
(
v
, 
›Sìk
==
OP_NŸExi°s
);

648 
	`VdbeCovîageIf
(
v
, 
›Sìk
==
OP_NŸFound
);

653 if–
	`sqlôe3FkRequúed
(
pP¨£
, 
pTab
, 0, 0Ë|| 
pTriggî
 ){

654 
u32
 
mask
;

655 
iCﬁ
;

656 
addrSèπ
;

660 
mask
 = 
	`sqlôe3TriggîCﬁmask
(

661 
pP¨£
, 
pTriggî
, 0, 0, 
TRIGGER_BEFORE
|
TRIGGER_AFTER
, 
pTab
, 
⁄c⁄f


663 
mask
 |
	`sqlôe3FkOldmask
(
pP¨£
, 
pTab
);

664 
iOld
 = 
pP¨£
->
nMem
+1;

665 
pP¨£
->
nMem
 +(1 + 
pTab
->
nCﬁ
);

669 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_C›y
, 
iPk
, 
iOld
);

670 
iCﬁ
=0; iCﬁ<
pTab
->
nCﬁ
; iCol++){

671 
	`ã°ˇ£
–
mask
!=0xfffffff‡&& 
iCﬁ
==31 );

672 
	`ã°ˇ£
–
mask
!=0xfffffff‡&& 
iCﬁ
==32 );

673 if–
mask
==0xfffffff‡|| (
iCﬁ
<=31 && (mask & 
	`MASKBIT32
(iCol))!=0) ){

674 
	`sqlôe3Ex¥CodeGëCﬁumnOfTabÀ
(
v
, 
pTab
, 
iD©aCur
, 
iCﬁ
, 
iOld
+iCol+1);

679 
addrSèπ
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

680 
	`sqlôe3CodeRowTriggî
(
pP¨£
, 
pTriggî
,

681 
TK_DELETE
, 0, 
TRIGGER_BEFORE
, 
pTab
, 
iOld
, 
⁄c⁄f
, 
iLabñ


689 if–
addrSèπ
<
	`sqlôe3VdbeCuºítAddr
(
v
) ){

690 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
›Sìk
, 
iD©aCur
, 
iLabñ
, 
iPk
, 
nPk
);

691 
	`VdbeCovîageIf
(
v
, 
›Sìk
==
OP_NŸExi°s
);

692 
	`VdbeCovîageIf
(
v
, 
›Sìk
==
OP_NŸFound
);

698 
	`sqlôe3FkCheck
(
pP¨£
, 
pTab
, 
iOld
, 0, 0, 0);

711 if–
pTab
->
pSñe˘
==0 ){

712 
u8
 
p5
 = 0;

713 
	`sqlôe3Gíî©eRowIndexDñëe
(
pP¨£
, 
pTab
, 
iD©aCur
, 
iIdxCur
,0,
iIdxNoSìk
);

714 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Dñëe
, 
iD©aCur
, (
cou¡
?
OPFLAG_NCHANGE
:0));

715 
	`sqlôe3VdbeAµídP4
(
v
, (*)
pTab
, 
P4_TABLE
);

716 if–
eMode
!=
ONEPASS_OFF
 ){

717 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_AUXDELETE
);

719 if–
iIdxNoSìk
>=0 ){

720 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Dñëe
, 
iIdxNoSìk
);

722 if–
eMode
==
ONEPASS_MULTI
 ) 
p5
 |
OPFLAG_SAVEPOSITION
;

723 
	`sqlôe3VdbeCh™geP5
(
v
, 
p5
);

729 
	`sqlôe3FkA˘i⁄s
(
pP¨£
, 
pTab
, 0, 
iOld
, 0, 0);

732 
	`sqlôe3CodeRowTriggî
(
pP¨£
, 
pTriggî
,

733 
TK_DELETE
, 0, 
TRIGGER_AFTER
, 
pTab
, 
iOld
, 
⁄c⁄f
, 
iLabñ


739 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
iLabñ
);

740 
	`VdbeModuÀCommít
((
v
, "END: GenRowDel()"));

741 
	}
}

761 
	$sqlôe3Gíî©eRowIndexDñëe
(

762 
P¨£
 *
pP¨£
,

763 
TabÀ
 *
pTab
,

764 
iD©aCur
,

765 
iIdxCur
,

766 *
aRegIdx
,

767 
iIdxNoSìk


769 
i
;

770 
r1
 = -1;

771 
iP¨tIdxLabñ
;

772 
Index
 *
pIdx
;

773 
Index
 *
pPri‹
 = 0;

774 
Vdbe
 *
v
;

775 
Index
 *
pPk
;

777 
v
 = 
pP¨£
->
pVdbe
;

778 
pPk
 = 
	`HasRowid
(
pTab
Ë? 0 : 
	`sqlôe3Prim¨yKeyIndex
(pTab);

779 
i
=0, 
pIdx
=
pTab
->
pIndex
;ÖIdx; i++,ÖIdxıIdx->
pNext
){

780 
	`as£π
–
iIdxCur
+
i
!=
iD©aCur
 || 
pPk
==
pIdx
 );

781 if–
aRegIdx
!=0 &&áRegIdx[
i
]==0 ) ;

782 if–
pIdx
==
pPk
 ) ;

783 if–
iIdxCur
+
i
==
iIdxNoSìk
 ) ;

784 
	`VdbeModuÀCommít
((
v
, "GíRowIdxDñ f‹ %s", 
pIdx
->
zName
));

785 
r1
 = 
	`sqlôe3Gíî©eIndexKey
(
pP¨£
, 
pIdx
, 
iD©aCur
, 0, 1,

786 &
iP¨tIdxLabñ
, 
pPri‹
, 
r1
);

787 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_IdxDñëe
, 
iIdxCur
+
i
, 
r1
,

788 
pIdx
->
uniqNŸNuŒ
 ?ÖIdx->
nKeyCﬁ
 :ÖIdx->
nCﬁumn
);

789 
	`sqlôe3ResﬁveP¨tIdxLabñ
(
pP¨£
, 
iP¨tIdxLabñ
);

790 
pPri‹
 = 
pIdx
;

792 
	}
}

825 
	$sqlôe3Gíî©eIndexKey
(

826 
P¨£
 *
pP¨£
,

827 
Index
 *
pIdx
,

828 
iD©aCur
,

829 
ªgOut
,

830 
¥efixO∆y
,

831 *
piP¨tIdxLabñ
,

832 
Index
 *
pPri‹
,

833 
ªgPri‹


835 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

836 
j
;

837 
ªgBa£
;

838 
nCﬁ
;

840 if–
piP¨tIdxLabñ
 ){

841 if–
pIdx
->
pP¨tIdxWhîe
 ){

842 *
piP¨tIdxLabñ
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

843 
pP¨£
->
iSñfTab
 = 
iD©aCur
;

844 
	`sqlôe3Ex¥CachePush
(
pP¨£
);

845 
	`sqlôe3Ex¥IfFÆ£Dup
(
pP¨£
, 
pIdx
->
pP¨tIdxWhîe
, *
piP¨tIdxLabñ
,

846 
SQLITE_JUMPIFNULL
);

848 *
piP¨tIdxLabñ
 = 0;

851 
nCﬁ
 = (
¥efixO∆y
 && 
pIdx
->
uniqNŸNuŒ
Ë?ÖIdx->
nKeyCﬁ
 :ÖIdx->
nCﬁumn
;

852 
ªgBa£
 = 
	`sqlôe3GëTempR™ge
(
pP¨£
, 
nCﬁ
);

853 if–
pPri‹
 && (
ªgBa£
!=
ªgPri‹
 ||ÖPri‹->
pP¨tIdxWhîe
) )ÖPrior = 0;

854 
j
=0; j<
nCﬁ
; j++){

855 if–
pPri‹


856 && 
pPri‹
->
aiCﬁumn
[
j
]==
pIdx
->aiColumn[j]

857 && 
pPri‹
->
aiCﬁumn
[
j
]!=
XN_EXPR


862 
	`sqlôe3Ex¥CodeLﬂdIndexCﬁumn
(
pP¨£
, 
pIdx
, 
iD©aCur
, 
j
, 
ªgBa£
+j);

869 
	`sqlôe3VdbeDñëePri‹Opcode
(
v
, 
OP_RólAfföôy
);

871 if–
ªgOut
 ){

872 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MakeRec‹d
, 
ªgBa£
, 
nCﬁ
, 
ªgOut
);

874 
	`sqlôe3Rñó£TempR™ge
(
pP¨£
, 
ªgBa£
, 
nCﬁ
);

875  
ªgBa£
;

876 
	}
}

883 
	$sqlôe3ResﬁveP¨tIdxLabñ
(
P¨£
 *
pP¨£
, 
iLabñ
){

884 if–
iLabñ
 ){

885 
	`sqlôe3VdbeResﬁveLabñ
(
pP¨£
->
pVdbe
, 
iLabñ
);

886 
	`sqlôe3Ex¥CacheP›
(
pP¨£
);

888 
	}
}

	@expr.c

15 
	~"sqlôeI¡.h
"

18 
ex¥CodeBëwìn
(
P¨£
*,
Ex¥
*,,(*)(Parse*,Expr*,,),);

19 
	`ex¥CodeVe˘‹
(
P¨£
 *
pP¨£
, 
Ex¥
 *
p
, *
piToFªe
);

24 
	$sqlôe3TabÀCﬁumnAfföôy
(
TabÀ
 *
pTab
, 
iCﬁ
){

25 
	`as£π
–
iCﬁ
<
pTab
->
nCﬁ
 );

26  
iCﬁ
>=0 ? 
pTab
->
aCﬁ
[iCﬁ].
afföôy
 : 
SQLITE_AFF_INTEGER
;

27 
	}
}

45 
	$sqlôe3Ex¥Afföôy
(
Ex¥
 *
pEx¥
){

46 
›
;

47 
pEx¥
 = 
	`sqlôe3Ex¥SkùCﬁœã
(pExpr);

48 if–
pEx¥
->
Êags
 & 
EP_Gíîic
 )  0;

49 
›
 = 
pEx¥
->op;

50 if–
›
==
TK_SELECT
 ){

51 
	`as£π
–
pEx¥
->
Êags
&
EP_xIsSñe˘
 );

52  
	`sqlôe3Ex¥Afföôy
(
pEx¥
->
x
.
pSñe˘
->
pELi°
->
a
[0].pExpr);

54 if–
›
==
TK_REGISTER
 ) o∞
pEx¥
->
›2
;

55 #i‚de‡
SQLITE_OMIT_CAST


56 if–
›
==
TK_CAST
 ){

57 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_I¡VÆue
) );

58  
	`sqlôe3AfföôyTy≥
(
pEx¥
->
u
.
zTokí
, 0);

61 if–
›
==
TK_AGG_COLUMN
 || op==
TK_COLUMN
 ){

62  
	`sqlôe3TabÀCﬁumnAfföôy
(
pEx¥
->
pTab
,ÖEx¥->
iCﬁumn
);

64 if–
›
==
TK_SELECT_COLUMN
 ){

65 
	`as£π
–
pEx¥
->
pLe·
->
Êags
&
EP_xIsSñe˘
 );

66  
	`sqlôe3Ex¥Afföôy
(

67 
pEx¥
->
pLe·
->
x
.
pSñe˘
->
pELi°
->
a
[pEx¥->
iCﬁumn
].pExpr

70  
pEx¥
->
afföôy
;

71 
	}
}

81 
Ex¥
 *
	$sqlôe3Ex¥AddCﬁœãTokí
(

82 
P¨£
 *
pP¨£
,

83 
Ex¥
 *
pEx¥
,

84 c⁄° 
Tokí
 *
pCﬁlName
,

85 
dequŸe


87 if–
pCﬁlName
->
n
>0 ){

88 
Ex¥
 *
pNew
 = 
	`sqlôe3Ex¥AŒoc
(
pP¨£
->
db
, 
TK_COLLATE
, 
pCﬁlName
, 
dequŸe
);

89 if–
pNew
 ){

90 
pNew
->
pLe·
 = 
pEx¥
;

91 
pNew
->
Êags
 |
EP_Cﬁœã
|
EP_Skù
;

92 
pEx¥
 = 
pNew
;

95  
pEx¥
;

96 
	}
}

97 
Ex¥
 *
	$sqlôe3Ex¥AddCﬁœãSåög
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pEx¥
, c⁄° *
zC
){

98 
Tokí
 
s
;

99 
	`as£π
–
zC
!=0 );

100 
	`sqlôe3TokíInô
(&
s
, (*)
zC
);

101  
	`sqlôe3Ex¥AddCﬁœãTokí
(
pP¨£
, 
pEx¥
, &
s
, 0);

102 
	}
}

108 
Ex¥
 *
	$sqlôe3Ex¥SkùCﬁœã
(
Ex¥
 *
pEx¥
){

109  
pEx¥
 && 
	`Ex¥HasPr›îty
’Ex¥, 
EP_Skù
) ){

110 if–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_U∆ikñy
) ){

111 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
) );

112 
	`as£π
–
pEx¥
->
x
.
pLi°
->
nEx¥
>0 );

113 
	`as£π
–
pEx¥
->
›
==
TK_FUNCTION
 );

114 
pEx¥
 =ÖEx¥->
x
.
pLi°
->
a
[0].pExpr;

116 
	`as£π
–
pEx¥
->
›
==
TK_COLLATE
 );

117 
pEx¥
 =ÖEx¥->
pLe·
;

120  
pEx¥
;

121 
	}
}

132 
CﬁlSeq
 *
	$sqlôe3Ex¥CﬁlSeq
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pEx¥
){

133 
sqlôe3
 *
db
 = 
pP¨£
->db;

134 
CﬁlSeq
 *
pCﬁl
 = 0;

135 
Ex¥
 *
p
 = 
pEx¥
;

136  
p
 ){

137 
›
 = 
p
->op;

138 if–
p
->
Êags
 & 
EP_Gíîic
 ) ;

139 if–
›
==
TK_CAST
 || op==
TK_UPLUS
 ){

140 
p
 =Ö->
pLe·
;

143 if–
›
==
TK_COLLATE
 || (›==
TK_REGISTER
 && 
p
->
›2
==TK_COLLATE) ){

144 
pCﬁl
 = 
	`sqlôe3GëCﬁlSeq
(
pP¨£
, 
	`ENC
(
db
), 0, 
p
->
u
.
zTokí
);

147 if–(
›
==
TK_AGG_COLUMN
 || op==
TK_COLUMN


148 || 
›
==
TK_REGISTER
 || op==
TK_TRIGGER
)

149 && 
p
->
pTab
!=0

153 
j
 = 
p
->
iCﬁumn
;

154 if–
j
>=0 ){

155 c⁄° *
zCﬁl
 = 
p
->
pTab
->
aCﬁ
[
j
].zColl;

156 
pCﬁl
 = 
	`sqlôe3FödCﬁlSeq
(
db
, 
	`ENC
(db), 
zCﬁl
, 0);

160 if–
p
->
Êags
 & 
EP_Cﬁœã
 ){

161 if–
p
->
pLe·
 && (p->pLe·->
Êags
 & 
EP_Cﬁœã
)!=0 ){

162 
p
 =Ö->
pLe·
;

164 
Ex¥
 *
pNext
 = 
p
->
pRight
;

166 
	`as£π
–
p
->
x
.
pLi°
==0 ||Ö->
pRight
==0 );

170 if–
p
->
x
.
pLi°
!=0 && 
	`ALWAYS
(!
	`Ex¥HasPr›îty
’, 
EP_xIsSñe˘
)) ){

171 
i
;

172 
i
=0; 
	`ALWAYS
(i<
p
->
x
.
pLi°
->
nEx¥
); i++){

173 if–
	`Ex¥HasPr›îty
(
p
->
x
.
pLi°
->
a
[
i
].
pEx¥
, 
EP_Cﬁœã
) ){

174 
pNext
 = 
p
->
x
.
pLi°
->
a
[
i
].
pEx¥
;

179 
p
 = 
pNext
;

185 if–
	`sqlôe3CheckCﬁlSeq
(
pP¨£
, 
pCﬁl
) ){

186 
pCﬁl
 = 0;

188  
pCﬁl
;

189 
	}
}

196 
	$sqlôe3Com∑ªAfföôy
(
Ex¥
 *
pEx¥
, 
aff2
){

197 
aff1
 = 
	`sqlôe3Ex¥Afföôy
(
pEx¥
);

198 if–
aff1
 && 
aff2
 ){

202 if–
	`sqlôe3IsNumîicAfföôy
(
aff1
Ë|| sqlôe3IsNumîicAfföôy(
aff2
) ){

203  
SQLITE_AFF_NUMERIC
;

205  
SQLITE_AFF_BLOB
;

207 }if–!
aff1
 && !
aff2
 ){

211  
SQLITE_AFF_BLOB
;

214 
	`as£π
–
aff1
==0 || 
aff2
==0 );

215  (
aff1
 + 
aff2
);

217 
	}
}

223 
	$com∑ris⁄Afföôy
(
Ex¥
 *
pEx¥
){

224 
aff
;

225 
	`as£π
–
pEx¥
->
›
==
TK_EQ
 ||ÖEx¥->›==
TK_IN
 ||ÖEx¥->›==
TK_LT
 ||

226 
pEx¥
->
›
==
TK_GT
 ||ÖEx¥->›==
TK_GE
 ||ÖEx¥->›==
TK_LE
 ||

227 
pEx¥
->
›
==
TK_NE
 ||ÖEx¥->›==
TK_IS
 ||ÖEx¥->›==
TK_ISNOT
 );

228 
	`as£π
–
pEx¥
->
pLe·
 );

229 
aff
 = 
	`sqlôe3Ex¥Afföôy
(
pEx¥
->
pLe·
);

230 if–
pEx¥
->
pRight
 ){

231 
aff
 = 
	`sqlôe3Com∑ªAfföôy
(
pEx¥
->
pRight
,áff);

232 }if–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
) ){

233 
aff
 = 
	`sqlôe3Com∑ªAfföôy
(
pEx¥
->
x
.
pSñe˘
->
pELi°
->
a
[0].pExpr,áff);

234 }if–
	`NEVER
(
aff
==0) ){

235 
aff
 = 
SQLITE_AFF_BLOB
;

237  
aff
;

238 
	}
}

246 
	$sqlôe3IndexAfföôyOk
(
Ex¥
 *
pEx¥
, 
idx_afföôy
){

247 
aff
 = 
	`com∑ris⁄Afföôy
(
pEx¥
);

248  
aff
 ){

249 
SQLITE_AFF_BLOB
:

251 
SQLITE_AFF_TEXT
:

252  
idx_afföôy
==
SQLITE_AFF_TEXT
;

254  
	`sqlôe3IsNumîicAfföôy
(
idx_afföôy
);

256 
	}
}

262 
u8
 
	$bö¨yCom∑ªP5
(
Ex¥
 *
pEx¥1
, Ex¥ *
pEx¥2
, 
jumpIfNuŒ
){

263 
u8
 
aff
 = ()
	`sqlôe3Ex¥Afföôy
(
pEx¥2
);

264 
aff
 = (
u8
)
	`sqlôe3Com∑ªAfföôy
(
pEx¥1
,áffË| (u8)
jumpIfNuŒ
;

265  
aff
;

266 
	}
}

280 
CﬁlSeq
 *
	$sqlôe3Bö¨yCom∑ªCﬁlSeq
(

281 
P¨£
 *
pP¨£
,

282 
Ex¥
 *
pLe·
,

283 
Ex¥
 *
pRight


285 
CﬁlSeq
 *
pCﬁl
;

286 
	`as£π
–
pLe·
 );

287 if–
pLe·
->
Êags
 & 
EP_Cﬁœã
 ){

288 
pCﬁl
 = 
	`sqlôe3Ex¥CﬁlSeq
(
pP¨£
, 
pLe·
);

289 }if–
pRight
 && (pRight->
Êags
 & 
EP_Cﬁœã
)!=0 ){

290 
pCﬁl
 = 
	`sqlôe3Ex¥CﬁlSeq
(
pP¨£
, 
pRight
);

292 
pCﬁl
 = 
	`sqlôe3Ex¥CﬁlSeq
(
pP¨£
, 
pLe·
);

293 if–!
pCﬁl
 ){

294 
pCﬁl
 = 
	`sqlôe3Ex¥CﬁlSeq
(
pP¨£
, 
pRight
);

297  
pCﬁl
;

298 
	}
}

303 
	$codeCom∑ª
(

304 
P¨£
 *
pP¨£
,

305 
Ex¥
 *
pLe·
,

306 
Ex¥
 *
pRight
,

307 
›code
,

308 
ö1
, 
ö2
,

309 
de°
,

310 
jumpIfNuŒ


312 
p5
;

313 
addr
;

314 
CﬁlSeq
 *
p4
;

316 
p4
 = 
	`sqlôe3Bö¨yCom∑ªCﬁlSeq
(
pP¨£
, 
pLe·
, 
pRight
);

317 
p5
 = 
	`bö¨yCom∑ªP5
(
pLe·
, 
pRight
, 
jumpIfNuŒ
);

318 
addr
 = 
	`sqlôe3VdbeAddOp4
(
pP¨£
->
pVdbe
, 
›code
, 
ö2
, 
de°
, 
ö1
,

319 (*)
p4
, 
P4_COLLSEQ
);

320 
	`sqlôe3VdbeCh™geP5
(
pP¨£
->
pVdbe
, (
u8
)
p5
);

321  
addr
;

322 
	}
}

333 
	$sqlôe3Ex¥IsVe˘‹
(
Ex¥
 *
pEx¥
){

334  
	`sqlôe3Ex¥Ve˘‹Size
(
pEx¥
)>1;

335 
	}
}

343 
	$sqlôe3Ex¥Ve˘‹Size
(
Ex¥
 *
pEx¥
){

344 
u8
 
›
 = 
pEx¥
->op;

345 if–
›
==
TK_REGISTER
 ) o∞
pEx¥
->
›2
;

346 if–
›
==
TK_VECTOR
 ){

347  
pEx¥
->
x
.
pLi°
->
nEx¥
;

348 }if–
›
==
TK_SELECT
 ){

349  
pEx¥
->
x
.
pSñe˘
->
pELi°
->
nEx¥
;

353 
	}
}

355 #i‚de‡
SQLITE_OMIT_SUBQUERY


371 
Ex¥
 *
	$sqlôe3Ve˘‹FõldSubex¥
(
Ex¥
 *
pVe˘‹
, 
i
){

372 
	`as£π
–
i
<
	`sqlôe3Ex¥Ve˘‹Size
(
pVe˘‹
) );

373 if–
	`sqlôe3Ex¥IsVe˘‹
(
pVe˘‹
) ){

374 
	`as£π
–
pVe˘‹
->
›2
==0 ||ÖVe˘‹->
›
==
TK_REGISTER
 );

375 if–
pVe˘‹
->
›
==
TK_SELECT
 ||ÖVe˘‹->
›2
==TK_SELECT ){

376  
pVe˘‹
->
x
.
pSñe˘
->
pELi°
->
a
[
i
].
pEx¥
;

378  
pVe˘‹
->
x
.
pLi°
->
a
[
i
].
pEx¥
;

381  
pVe˘‹
;

382 
	}
}

385 #i‚de‡
SQLITE_OMIT_SUBQUERY


407 
Ex¥
 *
	$sqlôe3Ex¥F‹Ve˘‹Fõld
(

408 
P¨£
 *
pP¨£
,

409 
Ex¥
 *
pVe˘‹
,

410 
iFõld


412 
Ex¥
 *
pRë
;

413 if–
pVe˘‹
->
›
==
TK_SELECT
 ){

414 
	`as£π
–
pVe˘‹
->
Êags
 & 
EP_xIsSñe˘
 );

430 
pRë
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_SELECT_COLUMN
, 0, 0);

431 if–
pRë
 ){

432 
pRë
->
iCﬁumn
 = 
iFõld
;

433 
pRë
->
pLe·
 = 
pVe˘‹
;

435 
	`as£π
–
pRë
==0 ||ÖRë->
iTabÀ
==0 );

437 if–
pVe˘‹
->
›
==
TK_VECTOR
 )ÖVe˘‹ =ÖVe˘‹->
x
.
pLi°
->
a
[
iFõld
].
pEx¥
;

438 
pRë
 = 
	`sqlôe3Ex¥Dup
(
pP¨£
->
db
, 
pVe˘‹
, 0);

440  
pRë
;

441 
	}
}

452 
	$ex¥CodeSub£À˘
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pEx¥
){

453 
ªg
 = 0;

454 #i‚de‡
SQLITE_OMIT_SUBQUERY


455 if–
pEx¥
->
›
==
TK_SELECT
 ){

456 
ªg
 = 
	`sqlôe3CodeSub£À˘
(
pP¨£
, 
pEx¥
, 0, 0);

459  
ªg
;

460 
	}
}

480 
	$ex¥Ve˘‹Regi°î
(

481 
P¨£
 *
pP¨£
,

482 
Ex¥
 *
pVe˘‹
,

483 
iFõld
,

484 
ªgSñe˘
,

485 
Ex¥
 **
µEx¥
,

486 *
pRegFªe


488 
u8
 
›
 = 
pVe˘‹
->op;

489 
	`as£π
–
›
==
TK_VECTOR
 || op==
TK_REGISTER
 || op==
TK_SELECT
 );

490 if–
›
==
TK_REGISTER
 ){

491 *
µEx¥
 = 
	`sqlôe3Ve˘‹FõldSubex¥
(
pVe˘‹
, 
iFõld
);

492  
pVe˘‹
->
iTabÀ
+
iFõld
;

494 if–
›
==
TK_SELECT
 ){

495 *
µEx¥
 = 
pVe˘‹
->
x
.
pSñe˘
->
pELi°
->
a
[
iFõld
].
pEx¥
;

496  
ªgSñe˘
+
iFõld
;

498 *
µEx¥
 = 
pVe˘‹
->
x
.
pLi°
->
a
[
iFõld
].
pEx¥
;

499  
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, *
µEx¥
, 
pRegFªe
);

500 
	}
}

513 
	$codeVe˘‹Com∑ª
(

514 
P¨£
 *
pP¨£
,

515 
Ex¥
 *
pEx¥
,

516 
de°
,

517 
u8
 
›
,

518 
u8
 
p5


520 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

521 
Ex¥
 *
pLe·
 = 
pEx¥
->pLeft;

522 
Ex¥
 *
pRight
 = 
pEx¥
->pRight;

523 
nLe·
 = 
	`sqlôe3Ex¥Ve˘‹Size
(
pLe·
);

524 
i
;

525 
ªgLe·
 = 0;

526 
ªgRight
 = 0;

527 
u8
 
›x
 = 
›
;

528 
addrD⁄e
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

530 if–
nLe·
!=
	`sqlôe3Ex¥Ve˘‹Size
(
pRight
) ){

531 
	`sqlôe3Eº‹Msg
(
pP¨£
, "row value misused");

534 
	`as£π
–
pEx¥
->
›
==
TK_EQ
 ||ÖEx¥->›==
TK_NE


535 || 
pEx¥
->
›
==
TK_IS
 ||ÖEx¥->›==
TK_ISNOT


536 || 
pEx¥
->
›
==
TK_LT
 ||ÖEx¥->›==
TK_GT


537 || 
pEx¥
->
›
==
TK_LE
 ||ÖEx¥->›==
TK_GE


539 
	`as£π
–
pEx¥
->
›
==› || (pEx¥->›==
TK_IS
 && op==
TK_EQ
)

540 || (
pEx¥
->
›
==
TK_ISNOT
 && op==
TK_NE
) );

541 
	`as£π
–
p5
==0 || 
pEx¥
->
›
!=op );

542 
	`as£π
–
p5
==
SQLITE_NULLEQ
 || 
pEx¥
->
›
==op );

544 
p5
 |
SQLITE_STOREP2
;

545 if–
›x
==
TK_LE
 ) opx = 
TK_LT
;

546 if–
›x
==
TK_GE
 ) opx = 
TK_GT
;

548 
ªgLe·
 = 
	`ex¥CodeSub£À˘
(
pP¨£
, 
pLe·
);

549 
ªgRight
 = 
	`ex¥CodeSub£À˘
(
pP¨£
, 
pRight
);

551 
i
=0; 1 ; i++){

552 
ªgFªe1
 = 0, 
ªgFªe2
 = 0;

553 
Ex¥
 *
pL
, *
pR
;

554 
r1
, 
r2
;

555 
	`as£π
–
i
>=0 && i<
nLe·
 );

556 if–
i
>0 ) 
	`sqlôe3Ex¥CachePush
(
pP¨£
);

557 
r1
 = 
	`ex¥Ve˘‹Regi°î
(
pP¨£
, 
pLe·
, 
i
, 
ªgLe·
, &
pL
, &
ªgFªe1
);

558 
r2
 = 
	`ex¥Ve˘‹Regi°î
(
pP¨£
, 
pRight
, 
i
, 
ªgRight
, &
pR
, &
ªgFªe2
);

559 
	`codeCom∑ª
(
pP¨£
, 
pL
, 
pR
, 
›x
, 
r1
, 
r2
, 
de°
, 
p5
);

560 
	`ã°ˇ£
(
›
==
OP_Lt
); 
	`VdbeCovîageIf
(
v
,op==OP_Lt);

561 
	`ã°ˇ£
(
›
==
OP_Le
); 
	`VdbeCovîageIf
(
v
,op==OP_Le);

562 
	`ã°ˇ£
(
›
==
OP_Gt
); 
	`VdbeCovîageIf
(
v
,op==OP_Gt);

563 
	`ã°ˇ£
(
›
==
OP_Ge
); 
	`VdbeCovîageIf
(
v
,op==OP_Ge);

564 
	`ã°ˇ£
(
›
==
OP_Eq
); 
	`VdbeCovîageIf
(
v
,op==OP_Eq);

565 
	`ã°ˇ£
(
›
==
OP_Ne
); 
	`VdbeCovîageIf
(
v
,op==OP_Ne);

566 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgFªe1
);

567 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgFªe2
);

568 if–
i
>0 ) 
	`sqlôe3Ex¥CacheP›
(
pP¨£
);

569 if–
i
==
nLe·
-1 ){

572 if–
›x
==
TK_EQ
 ){

573 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IfNŸ
, 
de°
, 
addrD⁄e
); 
	`VdbeCovîage
(v);

574 
p5
 |
SQLITE_KEEPNULL
;

575 }if–
›x
==
TK_NE
 ){

576 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_If
, 
de°
, 
addrD⁄e
); 
	`VdbeCovîage
(v);

577 
p5
 |
SQLITE_KEEPNULL
;

579 
	`as£π
–
›
==
TK_LT
 || op==
TK_GT
 || op==
TK_LE
 || op==
TK_GE
 );

580 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_El£NŸEq
, 0, 
addrD⁄e
);

581 
	`VdbeCovîageIf
(
v
, 
›
==
TK_LT
);

582 
	`VdbeCovîageIf
(
v
, 
›
==
TK_GT
);

583 
	`VdbeCovîageIf
(
v
, 
›
==
TK_LE
);

584 
	`VdbeCovîageIf
(
v
, 
›
==
TK_GE
);

585 if–
i
==
nLe·
-2 ) 
›x
 = 
›
;

588 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
addrD⁄e
);

589 
	}
}

591 #i‡
SQLITE_MAX_EXPR_DEPTH
>0

597 
	$sqlôe3Ex¥CheckHeight
(
P¨£
 *
pP¨£
, 
nHeight
){

598 
rc
 = 
SQLITE_OK
;

599 
mxHeight
 = 
pP¨£
->
db
->
aLimô
[
SQLITE_LIMIT_EXPR_DEPTH
];

600 if–
nHeight
>
mxHeight
 ){

601 
	`sqlôe3Eº‹Msg
(
pP¨£
,

602 "Ex¥essi⁄Åªêi†toÿœrgê(maximum dïth %d)", 
mxHeight


604 
rc
 = 
SQLITE_ERROR
;

606  
rc
;

607 
	}
}

618 
	$heightOfEx¥
(
Ex¥
 *
p
, *
≤Height
){

619 if–
p
 ){

620 if–
p
->
nHeight
>*
≤Height
 ){

621 *
≤Height
 = 
p
->
nHeight
;

624 
	}
}

625 
	$heightOfEx¥Li°
(
Ex¥Li°
 *
p
, *
≤Height
){

626 if–
p
 ){

627 
i
;

628 
i
=0; i<
p
->
nEx¥
; i++){

629 
	`heightOfEx¥
(
p
->
a
[
i
].
pEx¥
, 
≤Height
);

632 
	}
}

633 
	$heightOfSñe˘
(
Sñe˘
 *
p
, *
≤Height
){

634 if–
p
 ){

635 
	`heightOfEx¥
(
p
->
pWhîe
, 
≤Height
);

636 
	`heightOfEx¥
(
p
->
pHavög
, 
≤Height
);

637 
	`heightOfEx¥
(
p
->
pLimô
, 
≤Height
);

638 
	`heightOfEx¥
(
p
->
pOff£t
, 
≤Height
);

639 
	`heightOfEx¥Li°
(
p
->
pELi°
, 
≤Height
);

640 
	`heightOfEx¥Li°
(
p
->
pGroupBy
, 
≤Height
);

641 
	`heightOfEx¥Li°
(
p
->
pOrdîBy
, 
≤Height
);

642 
	`heightOfSñe˘
(
p
->
pPri‹
, 
≤Height
);

644 
	}
}

656 
	$ex¥SëHeight
(
Ex¥
 *
p
){

657 
nHeight
 = 0;

658 
	`heightOfEx¥
(
p
->
pLe·
, &
nHeight
);

659 
	`heightOfEx¥
(
p
->
pRight
, &
nHeight
);

660 if–
	`Ex¥HasPr›îty
(
p
, 
EP_xIsSñe˘
) ){

661 
	`heightOfSñe˘
(
p
->
x
.
pSñe˘
, &
nHeight
);

662 }if–
p
->
x
.
pLi°
 ){

663 
	`heightOfEx¥Li°
(
p
->
x
.
pLi°
, &
nHeight
);

664 
p
->
Êags
 |
EP_Pr›ag©e
 & 
	`sqlôe3Ex¥Li°Fœgs
’->
x
.
pLi°
);

666 
p
->
nHeight
 =ÇHeight + 1;

667 
	}
}

677 
	$sqlôe3Ex¥SëHeightAndFœgs
(
P¨£
 *
pP¨£
, 
Ex¥
 *
p
){

678 if–
pP¨£
->
nEº
 ) ;

679 
	`ex¥SëHeight
(
p
);

680 
	`sqlôe3Ex¥CheckHeight
(
pP¨£
, 
p
->
nHeight
);

681 
	}
}

687 
	$sqlôe3Sñe˘Ex¥Height
(
Sñe˘
 *
p
){

688 
nHeight
 = 0;

689 
	`heightOfSñe˘
(
p
, &
nHeight
);

690  
nHeight
;

691 
	}
}

697 
	$sqlôe3Ex¥SëHeightAndFœgs
(
P¨£
 *
pP¨£
, 
Ex¥
 *
p
){

698 if–
p
 &&Ö->
x
.
pLi°
 && !
	`Ex¥HasPr›îty
’, 
EP_xIsSñe˘
) ){

699 
p
->
Êags
 |
EP_Pr›ag©e
 & 
	`sqlôe3Ex¥Li°Fœgs
’->
x
.
pLi°
);

701 
	}
}

702 
	#ex¥SëHeight
(
y
)

	)

725 
Ex¥
 *
	$sqlôe3Ex¥AŒoc
(

726 
sqlôe3
 *
db
,

727 
›
,

728 c⁄° 
Tokí
 *
pTokí
,

729 
dequŸe


731 
Ex¥
 *
pNew
;

732 
nExåa
 = 0;

733 
iVÆue
 = 0;

735 
	`as£π
–
db
!=0 );

736 if–
pTokí
 ){

737 if–
›
!=
TK_INTEGER
 || 
pTokí
->
z
==0

738 || 
	`sqlôe3GëI¡32
(
pTokí
->
z
, &
iVÆue
)==0 ){

739 
nExåa
 = 
pTokí
->
n
+1;

740 
	`as£π
–
iVÆue
>=0 );

743 
pNew
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, (
Ex¥
)+
nExåa
);

744 if–
pNew
 ){

745 
	`mem£t
(
pNew
, 0, (
Ex¥
));

746 
pNew
->
›
 = (
u8
)op;

747 
pNew
->
iAgg
 = -1;

748 if–
pTokí
 ){

749 if–
nExåa
==0 ){

750 
pNew
->
Êags
 |
EP_I¡VÆue
;

751 
pNew
->
u
.
iVÆue
 = iValue;

753 
pNew
->
u
.
zTokí
 = (*)&pNew[1];

754 
	`as£π
–
pTokí
->
z
!=0 ||ÖTokí->
n
==0 );

755 if–
pTokí
->
n
 ) 
	`mem˝y
(
pNew
->
u
.
zTokí
,ÖTokí->
z
,ÖToken->n);

756 
pNew
->
u
.
zTokí
[
pTokí
->
n
] = 0;

757 if–
dequŸe
 && 
	`sqlôe3IsquŸe
(
pNew
->
u
.
zTokí
[0]) ){

758 if–
pNew
->
u
.
zTokí
[0]=='"' )ÖNew->
Êags
 |
EP_DblQuŸed
;

759 
	`sqlôe3DequŸe
(
pNew
->
u
.
zTokí
);

763 #i‡
SQLITE_MAX_EXPR_DEPTH
>0

764 
pNew
->
nHeight
 = 1;

767  
pNew
;

768 
	}
}

774 
Ex¥
 *
	$sqlôe3Ex¥
(

775 
sqlôe3
 *
db
,

776 
›
,

777 c⁄° *
zTokí


779 
Tokí
 
x
;

780 
x
.
z
 = 
zTokí
;

781 
x
.
n
 = 
zTokí
 ? 
	`sqlôe3SåÀn30
(zToken) : 0;

782  
	`sqlôe3Ex¥AŒoc
(
db
, 
›
, &
x
, 0);

783 
	}
}

791 
	$sqlôe3Ex¥AâachSubåìs
(

792 
sqlôe3
 *
db
,

793 
Ex¥
 *
pRoŸ
,

794 
Ex¥
 *
pLe·
,

795 
Ex¥
 *
pRight


797 if–
pRoŸ
==0 ){

798 
	`as£π
–
db
->
mÆlocFaûed
 );

799 
	`sqlôe3Ex¥Dñëe
(
db
, 
pLe·
);

800 
	`sqlôe3Ex¥Dñëe
(
db
, 
pRight
);

802 if–
pRight
 ){

803 
pRoŸ
->
pRight
 =ÖRight;

804 
pRoŸ
->
Êags
 |
EP_Pr›ag©e
 & 
pRight
->flags;

806 if–
pLe·
 ){

807 
pRoŸ
->
pLe·
 =ÖLeft;

808 
pRoŸ
->
Êags
 |
EP_Pr›ag©e
 & 
pLe·
->flags;

810 
	`ex¥SëHeight
(
pRoŸ
);

812 
	}
}

821 
Ex¥
 *
	$sqlôe3PEx¥
(

822 
P¨£
 *
pP¨£
,

823 
›
,

824 
Ex¥
 *
pLe·
,

825 
Ex¥
 *
pRight


827 
Ex¥
 *
p
;

828 if–
›
==
TK_AND
 && 
pP¨£
->
nEº
==0 ){

830 
p
 = 
	`sqlôe3Ex¥And
(
pP¨£
->
db
, 
pLe·
, 
pRight
);

832 
p
 = 
	`sqlôe3DbMÆlocRawNN
(
pP¨£
->
db
, (
Ex¥
));

833 if–
p
 ){

834 
	`mem£t
(
p
, 0, (
Ex¥
));

835 
p
->
›
 = o∞& 
TKFLG_MASK
;

836 
p
->
iAgg
 = -1;

838 
	`sqlôe3Ex¥AâachSubåìs
(
pP¨£
->
db
, 
p
, 
pLe·
, 
pRight
);

840 if–
p
 ) {

841 
	`sqlôe3Ex¥CheckHeight
(
pP¨£
, 
p
->
nHeight
);

843  
p
;

844 
	}
}

850 
	$sqlôe3PEx¥AddSñe˘
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pEx¥
, 
Sñe˘
 *
pSñe˘
){

851 if–
pEx¥
 ){

852 
pEx¥
->
x
.
pSñe˘
 =ÖSelect;

853 
	`Ex¥SëPr›îty
(
pEx¥
, 
EP_xIsSñe˘
|
EP_Subquîy
);

854 
	`sqlôe3Ex¥SëHeightAndFœgs
(
pP¨£
, 
pEx¥
);

856 
	`as£π
–
pP¨£
->
db
->
mÆlocFaûed
 );

857 
	`sqlôe3Sñe˘Dñëe
(
pP¨£
->
db
, 
pSñe˘
);

859 
	}
}

876 
	$ex¥AlwaysTrue
(
Ex¥
 *
p
){

877 
v
 = 0;

878 if–
	`Ex¥HasPr›îty
(
p
, 
EP_FromJoö
) )  0;

879 if–!
	`sqlôe3Ex¥IsI¡egî
(
p
, &
v
) )  0;

880  
v
!=0;

881 
	}
}

882 
	$ex¥AlwaysFÆ£
(
Ex¥
 *
p
){

883 
v
 = 0;

884 if–
	`Ex¥HasPr›îty
(
p
, 
EP_FromJoö
) )  0;

885 if–!
	`sqlôe3Ex¥IsI¡egî
(
p
, &
v
) )  0;

886  
v
==0;

887 
	}
}

897 
Ex¥
 *
	$sqlôe3Ex¥And
(
sqlôe3
 *
db
, 
Ex¥
 *
pLe·
, Ex¥ *
pRight
){

898 if–
pLe·
==0 ){

899  
pRight
;

900 }if–
pRight
==0 ){

901  
pLe·
;

902 }if–
	`ex¥AlwaysFÆ£
(
pLe·
Ë||Éx¥AlwaysFÆ£(
pRight
) ){

903 
	`sqlôe3Ex¥Dñëe
(
db
, 
pLe·
);

904 
	`sqlôe3Ex¥Dñëe
(
db
, 
pRight
);

905  
	`sqlôe3Ex¥AŒoc
(
db
, 
TK_INTEGER
, &
sqlôe3I¡Tokís
[0], 0);

907 
Ex¥
 *
pNew
 = 
	`sqlôe3Ex¥AŒoc
(
db
, 
TK_AND
, 0, 0);

908 
	`sqlôe3Ex¥AâachSubåìs
(
db
, 
pNew
, 
pLe·
, 
pRight
);

909  
pNew
;

911 
	}
}

917 
Ex¥
 *
	$sqlôe3Ex¥Fun˘i⁄
(
P¨£
 *
pP¨£
, 
Ex¥Li°
 *
pLi°
, 
Tokí
 *
pTokí
){

918 
Ex¥
 *
pNew
;

919 
sqlôe3
 *
db
 = 
pP¨£
->db;

920 
	`as£π
–
pTokí
 );

921 
pNew
 = 
	`sqlôe3Ex¥AŒoc
(
db
, 
TK_FUNCTION
, 
pTokí
, 1);

922 if–
pNew
==0 ){

923 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pLi°
);

926 
pNew
->
x
.
pLi°
 =ÖList;

927 
	`as£π
–!
	`Ex¥HasPr›îty
(
pNew
, 
EP_xIsSñe˘
) );

928 
	`sqlôe3Ex¥SëHeightAndFœgs
(
pP¨£
, 
pNew
);

929  
pNew
;

930 
	}
}

948 
	$sqlôe3Ex¥AssignV¨Numbî
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pEx¥
, 
u32
 
n
){

949 
sqlôe3
 *
db
 = 
pP¨£
->db;

950 c⁄° *
z
;

951 
ynV¨
 
x
;

953 if–
pEx¥
==0 ) ;

954 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_I¡VÆue
|
EP_Redu˚d
|
EP_TokíO∆y
) );

955 
z
 = 
pEx¥
->
u
.
zTokí
;

956 
	`as£π
–
z
!=0 );

957 
	`as£π
–
z
[0]!=0 );

958 
	`as£π
–
n
==
	`sqlôe3SåÀn30
(
z
) );

959 if–
z
[1]==0 ){

961 
	`as£π
–
z
[0]=='?' );

962 
x
 = (
ynV¨
)(++
pP¨£
->
nV¨
);

964 
doAdd
 = 0;

965 if–
z
[0]=='?' ){

968 
i64
 
i
;

969 
bOk
 = 0==
	`sqlôe3Atoi64
(&
z
[1], &
i
, 
n
-1, 
SQLITE_UTF8
);

970 
x
 = (
ynV¨
)
i
;

971 
	`ã°ˇ£
–
i
==0 );

972 
	`ã°ˇ£
–
i
==1 );

973 
	`ã°ˇ£
–
i
==
db
->
aLimô
[
SQLITE_LIMIT_VARIABLE_NUMBER
]-1 );

974 
	`ã°ˇ£
–
i
==
db
->
aLimô
[
SQLITE_LIMIT_VARIABLE_NUMBER
] );

975 if–
bOk
==0 || 
i
<1 || i>
db
->
aLimô
[
SQLITE_LIMIT_VARIABLE_NUMBER
] ){

976 
	`sqlôe3Eº‹Msg
(
pP¨£
, "variableÇumber must be between ?1ánd ?%d",

977 
db
->
aLimô
[
SQLITE_LIMIT_VARIABLE_NUMBER
]);

980 if–
x
>
pP¨£
->
nV¨
 ){

981 
pP¨£
->
nV¨
 = ()
x
;

982 
doAdd
 = 1;

983 }if–
	`sqlôe3VLi°NumToName
(
pP¨£
->
pVLi°
, 
x
)==0 ){

984 
doAdd
 = 1;

991 
x
 = (
ynV¨
)
	`sqlôe3VLi°NameToNum
(
pP¨£
->
pVLi°
, 
z
, 
n
);

992 if–
x
==0 ){

993 
x
 = (
ynV¨
)(++
pP¨£
->
nV¨
);

994 
doAdd
 = 1;

997 if–
doAdd
 ){

998 
pP¨£
->
pVLi°
 = 
	`sqlôe3VLi°Add
(
db
,ÖP¨£->pVLi°, 
z
, 
n
, 
x
);

1001 
pEx¥
->
iCﬁumn
 = 
x
;

1002 if–
x
>
db
->
aLimô
[
SQLITE_LIMIT_VARIABLE_NUMBER
] ){

1003 
	`sqlôe3Eº‹Msg
(
pP¨£
, "too many SQL variables");

1005 
	}
}

1010 
SQLITE_NOINLINE
 
	$sqlôe3Ex¥DñëeNN
(
sqlôe3
 *
db
, 
Ex¥
 *
p
){

1011 
	`as£π
–
p
!=0 );

1013 
	`as£π
–!
	`Ex¥HasPr›îty
(
p
, 
EP_I¡VÆue
Ë||Ö->
u
.
iVÆue
>=0 );

1014 #ifde‡
SQLITE_DEBUG


1015 if–
	`Ex¥HasPr›îty
(
p
, 
EP_Lóf
Ë&& !Ex¥HasPr›îty’, 
EP_TokíO∆y
) ){

1016 
	`as£π
–
p
->
pLe·
==0 );

1017 
	`as£π
–
p
->
pRight
==0 );

1018 
	`as£π
–
p
->
x
.
pSñe˘
==0 );

1021 if–!
	`Ex¥HasPr›îty
(
p
, (
EP_TokíO∆y
|
EP_Lóf
)) ){

1023 
	`as£π
–
p
->
x
.
pLi°
==0 ||Ö->
pRight
==0 );

1024 if–
p
->
pLe·
 &&Ö->
›
!=
TK_SELECT_COLUMN
 ) 
	`sqlôe3Ex¥DñëeNN
(
db
,Ö->pLeft);

1025 
	`sqlôe3Ex¥Dñëe
(
db
, 
p
->
pRight
);

1026 if–
	`Ex¥HasPr›îty
(
p
, 
EP_xIsSñe˘
) ){

1027 
	`sqlôe3Sñe˘Dñëe
(
db
, 
p
->
x
.
pSñe˘
);

1029 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
p
->
x
.
pLi°
);

1032 if–
	`Ex¥HasPr›îty
(
p
, 
EP_MemTokí
ËË
	`sqlôe3DbFªe
(
db
,Ö->
u
.
zTokí
);

1033 if–!
	`Ex¥HasPr›îty
(
p
, 
EP_Sètic
) ){

1034 
	`sqlôe3DbFªe
(
db
, 
p
);

1036 
	}
}

1037 
	$sqlôe3Ex¥Dñëe
(
sqlôe3
 *
db
, 
Ex¥
 *
p
){

1038 if–
p
 ) 
	`sqlôe3Ex¥DñëeNN
(
db
,Ö);

1039 
	}
}

1046 
	$ex¥Såu˘Size
(
Ex¥
 *
p
){

1047 if–
	`Ex¥HasPr›îty
(
p
, 
EP_TokíO∆y
ËË 
EXPR_TOKENONLYSIZE
;

1048 if–
	`Ex¥HasPr›îty
(
p
, 
EP_Redu˚d
ËË 
EXPR_REDUCEDSIZE
;

1049  
EXPR_FULLSIZE
;

1050 
	}
}

1086 
	$du≥dEx¥Såu˘Size
(
Ex¥
 *
p
, 
Êags
){

1087 
nSize
;

1088 
	`as£π
–
Êags
==
EXPRDUP_REDUCE
 || flags==0 );

1089 
	`as£π
–
EXPR_FULLSIZE
<=0xfff );

1090 
	`as£π
–(0xff‡& (
EP_Redu˚d
|
EP_TokíO∆y
))==0 );

1091 if–0==
Êags
 ){

1092 
nSize
 = 
EXPR_FULLSIZE
;

1094 
	`as£π
–!
	`Ex¥HasPr›îty
(
p
, 
EP_TokíO∆y
|
EP_Redu˚d
) );

1095 
	`as£π
–!
	`Ex¥HasPr›îty
(
p
, 
EP_FromJoö
) );

1096 
	`as£π
–!
	`Ex¥HasPr›îty
(
p
, 
EP_MemTokí
) );

1097 
	`as£π
–!
	`Ex¥HasPr›îty
(
p
, 
EP_NoRedu˚
) );

1098 if–
p
->
pLe·
 ||Ö->
x
.
pLi°
 ){

1099 
nSize
 = 
EXPR_REDUCEDSIZE
 | 
EP_Redu˚d
;

1101 
	`as£π
–
p
->
pRight
==0 );

1102 
nSize
 = 
EXPR_TOKENONLYSIZE
 | 
EP_TokíO∆y
;

1105  
nSize
;

1106 
	}
}

1113 
	$du≥dEx¥NodeSize
(
Ex¥
 *
p
, 
Êags
){

1114 
nByã
 = 
	`du≥dEx¥Såu˘Size
(
p
, 
Êags
) & 0xfff;

1115 if–!
	`Ex¥HasPr›îty
(
p
, 
EP_I¡VÆue
Ë&&Ö->
u
.
zTokí
 ){

1116 
nByã
 +
	`sqlôe3SåÀn30
(
p
->
u
.
zTokí
)+1;

1118  
	`ROUND8
(
nByã
);

1119 
	}
}

1134 
	$du≥dEx¥Size
(
Ex¥
 *
p
, 
Êags
){

1135 
nByã
 = 0;

1136 if–
p
 ){

1137 
nByã
 = 
	`du≥dEx¥NodeSize
(
p
, 
Êags
);

1138 if–
Êags
&
EXPRDUP_REDUCE
 ){

1139 
nByã
 +
	`du≥dEx¥Size
(
p
->
pLe·
, 
Êags
Ë+ du≥dEx¥Size’->
pRight
, flags);

1142  
nByã
;

1143 
	}
}

1153 
Ex¥
 *
	$ex¥Dup
(
sqlôe3
 *
db
, 
Ex¥
 *
p
, 
dupFœgs
, 
u8
 **
pzBuf„r
){

1154 
Ex¥
 *
pNew
;

1155 
u8
 *
zAŒoc
;

1156 
u32
 
°©icFœg
;

1158 
	`as£π
–
db
!=0 );

1159 
	`as£π
–
p
 );

1160 
	`as£π
–
dupFœgs
==0 || dupFœgs==
EXPRDUP_REDUCE
 );

1161 
	`as£π
–
pzBuf„r
==0 || 
dupFœgs
==
EXPRDUP_REDUCE
 );

1164 if–
pzBuf„r
 ){

1165 
zAŒoc
 = *
pzBuf„r
;

1166 
°©icFœg
 = 
EP_Sètic
;

1168 
zAŒoc
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, 
	`du≥dEx¥Size
(
p
, 
dupFœgs
));

1169 
°©icFœg
 = 0;

1171 
pNew
 = (
Ex¥
 *)
zAŒoc
;

1173 if–
pNew
 ){

1179 c⁄° 
nSåu˘Size
 = 
	`du≥dEx¥Såu˘Size
(
p
, 
dupFœgs
);

1180 c⁄° 
nNewSize
 = 
nSåu˘Size
 & 0xfff;

1181 
nTokí
;

1182 if–!
	`Ex¥HasPr›îty
(
p
, 
EP_I¡VÆue
Ë&&Ö->
u
.
zTokí
 ){

1183 
nTokí
 = 
	`sqlôe3SåÀn30
(
p
->
u
.
zTokí
) + 1;

1185 
nTokí
 = 0;

1187 if–
dupFœgs
 ){

1188 
	`as£π
–
	`Ex¥HasPr›îty
(
p
, 
EP_Redu˚d
)==0 );

1189 
	`mem˝y
(
zAŒoc
, 
p
, 
nNewSize
);

1191 
u32
 
nSize
 = (u32)
	`ex¥Såu˘Size
(
p
);

1192 
	`mem˝y
(
zAŒoc
, 
p
, 
nSize
);

1193 if–
nSize
<
EXPR_FULLSIZE
 ){

1194 
	`mem£t
(&
zAŒoc
[
nSize
], 0, 
EXPR_FULLSIZE
-nSize);

1199 
pNew
->
Êags
 &~(
EP_Redu˚d
|
EP_TokíO∆y
|
EP_Sètic
|
EP_MemTokí
);

1200 
pNew
->
Êags
 |
nSåu˘Size
 & (
EP_Redu˚d
|
EP_TokíO∆y
);

1201 
pNew
->
Êags
 |
°©icFœg
;

1204 if–
nTokí
 ){

1205 *
zTokí
 = 
pNew
->
u
.zTokí = (*)&
zAŒoc
[
nNewSize
];

1206 
	`mem˝y
(
zTokí
, 
p
->
u
.zTokí, 
nTokí
);

1209 if–0==((
p
->
Êags
|
pNew
->ÊagsË& (
EP_TokíO∆y
|
EP_Lóf
)) ){

1211 if–
	`Ex¥HasPr›îty
(
p
, 
EP_xIsSñe˘
) ){

1212 
pNew
->
x
.
pSñe˘
 = 
	`sqlôe3Sñe˘Dup
(
db
, 
p
->x.pSñe˘, 
dupFœgs
);

1214 
pNew
->
x
.
pLi°
 = 
	`sqlôe3Ex¥Li°Dup
(
db
, 
p
->x.pLi°, 
dupFœgs
);

1219 if–
	`Ex¥HasPr›îty
(
pNew
, 
EP_Redu˚d
|
EP_TokíO∆y
) ){

1220 
zAŒoc
 +
	`du≥dEx¥NodeSize
(
p
, 
dupFœgs
);

1221 if–!
	`Ex¥HasPr›îty
(
pNew
, 
EP_TokíO∆y
|
EP_Lóf
) ){

1222 
pNew
->
pLe·
 = 
p
->pLeft ?

1223 
	`ex¥Dup
(
db
, 
p
->
pLe·
, 
EXPRDUP_REDUCE
, &
zAŒoc
) : 0;

1224 
pNew
->
pRight
 = 
p
->pRight ?

1225 
	`ex¥Dup
(
db
, 
p
->
pRight
, 
EXPRDUP_REDUCE
, &
zAŒoc
) : 0;

1227 if–
pzBuf„r
 ){

1228 *
pzBuf„r
 = 
zAŒoc
;

1231 if–!
	`Ex¥HasPr›îty
(
p
, 
EP_TokíO∆y
|
EP_Lóf
) ){

1232 if–
pNew
->
›
==
TK_SELECT_COLUMN
 ){

1233 
pNew
->
pLe·
 = 
p
->pLeft;

1235 
pNew
->
pLe·
 = 
	`sqlôe3Ex¥Dup
(
db
, 
p
->pLeft, 0);

1237 
pNew
->
pRight
 = 
	`sqlôe3Ex¥Dup
(
db
, 
p
->pRight, 0);

1241  
pNew
;

1242 
	}
}

1249 #i‚de‡
SQLITE_OMIT_CTE


1250 
Wôh
 *
	$wôhDup
(
sqlôe3
 *
db
, 
Wôh
 *
p
){

1251 
Wôh
 *
pRë
 = 0;

1252 if–
p
 ){

1253 
nByã
 = (*
p
Ë+ ’->
a
[0]Ë* (p->
nCã
-1);

1254 
pRë
 = 
	`sqlôe3DbMÆlocZîo
(
db
, 
nByã
);

1255 if–
pRë
 ){

1256 
i
;

1257 
pRë
->
nCã
 = 
p
->nCte;

1258 
i
=0; i<
p
->
nCã
; i++){

1259 
pRë
->
a
[
i
].
pSñe˘
 = 
	`sqlôe3Sñe˘Dup
(
db
, 
p
->a[i].pSelect, 0);

1260 
pRë
->
a
[
i
].
pCﬁs
 = 
	`sqlôe3Ex¥Li°Dup
(
db
, 
p
->a[i].pCols, 0);

1261 
pRë
->
a
[
i
].
zName
 = 
	`sqlôe3DbSåDup
(
db
, 
p
->a[i].zName);

1265  
pRë
;

1266 
	}
}

1268 
	#wôhDup
(
x
,
y
Ë0

	)

1288 
Ex¥
 *
	$sqlôe3Ex¥Dup
(
sqlôe3
 *
db
, 
Ex¥
 *
p
, 
Êags
){

1289 
	`as£π
–
Êags
==0 || fœgs==
EXPRDUP_REDUCE
 );

1290  
p
 ? 
	`ex¥Dup
(
db
,Ö, 
Êags
, 0) : 0;

1291 
	}
}

1292 
Ex¥Li°
 *
	$sqlôe3Ex¥Li°Dup
(
sqlôe3
 *
db
, 
Ex¥Li°
 *
p
, 
Êags
){

1293 
Ex¥Li°
 *
pNew
;

1294 
Ex¥Li°_ôem
 *
pIãm
, *
pOldIãm
;

1295 
i
;

1296 
	`as£π
–
db
!=0 );

1297 if–
p
==0 )  0;

1298 
pNew
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, (*pNew) );

1299 if–
pNew
==0 )  0;

1300 
pNew
->
nEx¥
 = 
i
 = 
p
->nExpr;

1301 if–(
Êags
 & 
EXPRDUP_REDUCE
)==0 ) 
i
=1; i<
p
->
nEx¥
; i+=i){}

1302 
pNew
->
a
 = 
pIãm
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, 
i
*(
p
->a[0]) );

1303 if–
pIãm
==0 ){

1304 
	`sqlôe3DbFªe
(
db
, 
pNew
);

1307 
pOldIãm
 = 
p
->
a
;

1308 
i
=0; i<
p
->
nEx¥
; i++, 
pIãm
++, 
pOldIãm
++){

1309 
Ex¥
 *
pOldEx¥
 = 
pOldIãm
->
pEx¥
;

1310 
pIãm
->
pEx¥
 = 
	`sqlôe3Ex¥Dup
(
db
, 
pOldEx¥
, 
Êags
);

1311 
pIãm
->
zName
 = 
	`sqlôe3DbSåDup
(
db
, 
pOldIãm
->zName);

1312 
pIãm
->
zS∑n
 = 
	`sqlôe3DbSåDup
(
db
, 
pOldIãm
->zSpan);

1313 
pIãm
->
s‹tOrdî
 = 
pOldIãm
->sortOrder;

1314 
pIãm
->
d⁄e
 = 0;

1315 
pIãm
->
bS∑nIsTab
 = 
pOldIãm
->bSpanIsTab;

1316 
pIãm
->
u
 = 
pOldIãm
->u;

1318  
pNew
;

1319 
	}
}

1327 #i‡!
deföed
(
SQLITE_OMIT_VIEW
Ë|| !deföed(
SQLITE_OMIT_TRIGGER
) \

1328 || !
	$deföed
(
SQLITE_OMIT_SUBQUERY
)

1329 
SrcLi°
 *
	$sqlôe3SrcLi°Dup
(
sqlôe3
 *
db
, 
SrcLi°
 *
p
, 
Êags
){

1330 
SrcLi°
 *
pNew
;

1331 
i
;

1332 
nByã
;

1333 
	`as£π
–
db
!=0 );

1334 if–
p
==0 )  0;

1335 
nByã
 = (*
p
Ë+ (p->
nSrc
>0 ? ’->
a
[0]) * (p->nSrc-1) : 0);

1336 
pNew
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, 
nByã
 );

1337 if–
pNew
==0 )  0;

1338 
pNew
->
nSrc
 =ÖNew->
nAŒoc
 = 
p
->nSrc;

1339 
i
=0; i<
p
->
nSrc
; i++){

1340 
SrcLi°_ôem
 *
pNewIãm
 = &
pNew
->
a
[
i
];

1341 
SrcLi°_ôem
 *
pOldIãm
 = &
p
->
a
[
i
];

1342 
TabÀ
 *
pTab
;

1343 
pNewIãm
->
pSchema
 = 
pOldIãm
->pSchema;

1344 
pNewIãm
->
zD©aba£
 = 
	`sqlôe3DbSåDup
(
db
, 
pOldIãm
->zDatabase);

1345 
pNewIãm
->
zName
 = 
	`sqlôe3DbSåDup
(
db
, 
pOldIãm
->zName);

1346 
pNewIãm
->
zAlüs
 = 
	`sqlôe3DbSåDup
(
db
, 
pOldIãm
->zAlias);

1347 
pNewIãm
->
fg
 = 
pOldIãm
->fg;

1348 
pNewIãm
->
iCurs‹
 = 
pOldIãm
->iCursor;

1349 
pNewIãm
->
addrFûlSub
 = 
pOldIãm
->addrFillSub;

1350 
pNewIãm
->
ªgRëu∫
 = 
pOldIãm
->regReturn;

1351 if–
pNewIãm
->
fg
.
isIndexedBy
 ){

1352 
pNewIãm
->
u1
.
zIndexedBy
 = 
	`sqlôe3DbSåDup
(
db
, 
pOldIãm
->u1.zIndexedBy);

1354 
pNewIãm
->
pIBIndex
 = 
pOldIãm
->pIBIndex;

1355 if–
pNewIãm
->
fg
.
isTabFunc
 ){

1356 
pNewIãm
->
u1
.
pFuncArg
 =

1357 
	`sqlôe3Ex¥Li°Dup
(
db
, 
pOldIãm
->
u1
.
pFuncArg
, 
Êags
);

1359 
pTab
 = 
pNewIãm
->pTab = 
pOldIãm
->pTab;

1360 if–
pTab
 ){

1361 
pTab
->
nTabRef
++;

1363 
pNewIãm
->
pSñe˘
 = 
	`sqlôe3Sñe˘Dup
(
db
, 
pOldIãm
->pSñe˘, 
Êags
);

1364 
pNewIãm
->
pOn
 = 
	`sqlôe3Ex¥Dup
(
db
, 
pOldIãm
->pOn, 
Êags
);

1365 
pNewIãm
->
pUsög
 = 
	`sqlôe3IdLi°Dup
(
db
, 
pOldIãm
->pUsing);

1366 
pNewIãm
->
cﬁU£d
 = 
pOldIãm
->colUsed;

1368  
pNew
;

1369 
	}
}

1370 
IdLi°
 *
	$sqlôe3IdLi°Dup
(
sqlôe3
 *
db
, 
IdLi°
 *
p
){

1371 
IdLi°
 *
pNew
;

1372 
i
;

1373 
	`as£π
–
db
!=0 );

1374 if–
p
==0 )  0;

1375 
pNew
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, (*pNew) );

1376 if–
pNew
==0 )  0;

1377 
pNew
->
nId
 = 
p
->nId;

1378 
pNew
->
a
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, 
p
->
nId
*(p->a[0]) );

1379 if–
pNew
->
a
==0 ){

1380 
	`sqlôe3DbFªe
(
db
, 
pNew
);

1386 
i
=0; i<
p
->
nId
; i++){

1387 
IdLi°_ôem
 *
pNewIãm
 = &
pNew
->
a
[
i
];

1388 
IdLi°_ôem
 *
pOldIãm
 = &
p
->
a
[
i
];

1389 
pNewIãm
->
zName
 = 
	`sqlôe3DbSåDup
(
db
, 
pOldIãm
->zName);

1390 
pNewIãm
->
idx
 = 
pOldIãm
->idx;

1392  
pNew
;

1393 
	}
}

1394 
Sñe˘
 *
	$sqlôe3Sñe˘Dup
(
sqlôe3
 *
db
, 
Sñe˘
 *
p
, 
Êags
){

1395 
Sñe˘
 *
pNew
, *
pPri‹
;

1396 
	`as£π
–
db
!=0 );

1397 if–
p
==0 )  0;

1398 
pNew
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, (*
p
) );

1399 if–
pNew
==0 )  0;

1400 
pNew
->
pELi°
 = 
	`sqlôe3Ex¥Li°Dup
(
db
, 
p
->pELi°, 
Êags
);

1401 
pNew
->
pSrc
 = 
	`sqlôe3SrcLi°Dup
(
db
, 
p
->pSrc, 
Êags
);

1402 
pNew
->
pWhîe
 = 
	`sqlôe3Ex¥Dup
(
db
, 
p
->pWhîe, 
Êags
);

1403 
pNew
->
pGroupBy
 = 
	`sqlôe3Ex¥Li°Dup
(
db
, 
p
->pGroupBy, 
Êags
);

1404 
pNew
->
pHavög
 = 
	`sqlôe3Ex¥Dup
(
db
, 
p
->pHavög, 
Êags
);

1405 
pNew
->
pOrdîBy
 = 
	`sqlôe3Ex¥Li°Dup
(
db
, 
p
->pOrdîBy, 
Êags
);

1406 
pNew
->
›
 = 
p
->op;

1407 
pNew
->
pPri‹
 =ÖPri‹ = 
	`sqlôe3Sñe˘Dup
(
db
, 
p
->pPri‹, 
Êags
);

1408 if–
pPri‹
 )ÖPri‹->
pNext
 = 
pNew
;

1409 
pNew
->
pNext
 = 0;

1410 
pNew
->
pLimô
 = 
	`sqlôe3Ex¥Dup
(
db
, 
p
->pLimô, 
Êags
);

1411 
pNew
->
pOff£t
 = 
	`sqlôe3Ex¥Dup
(
db
, 
p
->pOff£t, 
Êags
);

1412 
pNew
->
iLimô
 = 0;

1413 
pNew
->
iOff£t
 = 0;

1414 
pNew
->
£lFœgs
 = 
p
->£lFœg†& ~
SF_U£sEphemîÆ
;

1415 
pNew
->
addrO≥nEphm
[0] = -1;

1416 
pNew
->
addrO≥nEphm
[1] = -1;

1417 
pNew
->
nSñe˘Row
 = 
p
->nSelectRow;

1418 
pNew
->
pWôh
 = 
	`wôhDup
(
db
, 
p
->pWith);

1419 
	`sqlôe3Sñe˘SëName
(
pNew
, 
p
->
zSñName
);

1420  
pNew
;

1421 
	}
}

1423 
Sñe˘
 *
	$sqlôe3Sñe˘Dup
(
sqlôe3
 *
db
, 
Sñe˘
 *
p
, 
Êags
){

1424 
	`as£π
–
p
==0 );

1426 
	}
}

1438 
Ex¥Li°
 *
	$sqlôe3Ex¥Li°Aµíd
(

1439 
P¨£
 *
pP¨£
,

1440 
Ex¥Li°
 *
pLi°
,

1441 
Ex¥
 *
pEx¥


1443 
sqlôe3
 *
db
 = 
pP¨£
->db;

1444 
	`as£π
–
db
!=0 );

1445 if–
pLi°
==0 ){

1446 
pLi°
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, (
Ex¥Li°
) );

1447 if–
pLi°
==0 ){

1448 
no_mem
;

1450 
pLi°
->
nEx¥
 = 0;

1451 
pLi°
->
a
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, (pList->a[0]));

1452 if–
pLi°
->
a
==0 ) 
no_mem
;

1453 }if–(
pLi°
->
nEx¥
 & (pList->nExpr-1))==0 ){

1454 
Ex¥Li°_ôem
 *
a
;

1455 
	`as£π
–
pLi°
->
nEx¥
>0 );

1456 
a
 = 
	`sqlôe3DbRóŒoc
(
db
, 
pLi°
->a,ÖLi°->
nEx¥
*2*(pList->a[0]));

1457 if–
a
==0 ){

1458 
no_mem
;

1460 
pLi°
->
a
 =á;

1462 
	`as£π
–
pLi°
->
a
!=0 );

1464 
Ex¥Li°_ôem
 *
pIãm
 = &
pLi°
->
a
[pLi°->
nEx¥
++];

1465 
	`mem£t
(
pIãm
, 0, (*pItem));

1466 
pIãm
->
pEx¥
 =ÖExpr;

1468  
pLi°
;

1470 
no_mem
:

1472 
	`sqlôe3Ex¥Dñëe
(
db
, 
pEx¥
);

1473 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pLi°
);

1475 
	}
}

1488 
Ex¥Li°
 *
	$sqlôe3Ex¥Li°AµídVe˘‹
(

1489 
P¨£
 *
pP¨£
,

1490 
Ex¥Li°
 *
pLi°
,

1491 
IdLi°
 *
pCﬁumns
,

1492 
Ex¥
 *
pEx¥


1494 
sqlôe3
 *
db
 = 
pP¨£
->db;

1495 
n
;

1496 
i
;

1497 
iFú°
 = 
pLi°
 ?ÖLi°->
nEx¥
 : 0;

1500 if–
	`NEVER
(
pCﬁumns
==0ËË
ve˘‹_≠≥nd_îr‹
;

1501 if–
pEx¥
==0 ) 
ve˘‹_≠≥nd_îr‹
;

1502 
n
 = 
	`sqlôe3Ex¥Ve˘‹Size
(
pEx¥
);

1503 if–
pCﬁumns
->
nId
!=
n
 ){

1504 
	`sqlôe3Eº‹Msg
(
pP¨£
, "%d columnsássigned %d values",

1505 
pCﬁumns
->
nId
, 
n
);

1506 
ve˘‹_≠≥nd_îr‹
;

1508 
i
=0; i<
n
; i++){

1509 
Ex¥
 *
pSubEx¥
 = 
	`sqlôe3Ex¥F‹Ve˘‹Fõld
(
pP¨£
, 
pEx¥
, 
i
);

1510 
pLi°
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
,ÖLi°, 
pSubEx¥
);

1511 if–
pLi°
 ){

1512 
	`as£π
–
pLi°
->
nEx¥
==
iFú°
+
i
+1 );

1513 
pLi°
->
a
[pLi°->
nEx¥
-1].
zName
 = 
pCﬁumns
->a[
i
].zName;

1514 
pCﬁumns
->
a
[
i
].
zName
 = 0;

1517 if–
pEx¥
->
›
==
TK_SELECT
 ){

1518 if–
pLi°
 &&ÖLi°->
a
[
iFú°
].
pEx¥
 ){

1519 
	`as£π
–
pLi°
->
a
[
iFú°
].
pEx¥
->
›
==
TK_SELECT_COLUMN
 );

1520 
pLi°
->
a
[
iFú°
].
pEx¥
->
pRight
 =ÖExpr;

1521 
pEx¥
 = 0;

1525 
ve˘‹_≠≥nd_îr‹
:

1526 
	`sqlôe3Ex¥Dñëe
(
db
, 
pEx¥
);

1527 
	`sqlôe3IdLi°Dñëe
(
db
, 
pCﬁumns
);

1528  
pLi°
;

1529 
	}
}

1534 
	$sqlôe3Ex¥Li°SëS‹tOrdî
(
Ex¥Li°
 *
p
, 
iS‹tOrdî
){

1535 if–
p
==0 ) ;

1536 
	`as£π
–
SQLITE_SO_UNDEFINED
<0 && 
SQLITE_SO_ASC
>=0 && 
SQLITE_SO_DESC
>0 );

1537 
	`as£π
–
p
->
nEx¥
>0 );

1538 if–
iS‹tOrdî
<0 ){

1539 
	`as£π
–
p
->
a
[p->
nEx¥
-1].
s‹tOrdî
==
SQLITE_SO_ASC
 );

1542 
p
->
a
[p->
nEx¥
-1].
s‹tOrdî
 = (
u8
)
iS‹tOrdî
;

1543 
	}
}

1553 
	$sqlôe3Ex¥Li°SëName
(

1554 
P¨£
 *
pP¨£
,

1555 
Ex¥Li°
 *
pLi°
,

1556 
Tokí
 *
pName
,

1557 
dequŸe


1559 
	`as£π
–
pLi°
!=0 || 
pP¨£
->
db
->
mÆlocFaûed
!=0 );

1560 if–
pLi°
 ){

1561 
Ex¥Li°_ôem
 *
pIãm
;

1562 
	`as£π
–
pLi°
->
nEx¥
>0 );

1563 
pIãm
 = &
pLi°
->
a
[pLi°->
nEx¥
-1];

1564 
	`as£π
–
pIãm
->
zName
==0 );

1565 
pIãm
->
zName
 = 
	`sqlôe3DbSåNDup
(
pP¨£
->
db
, 
pName
->
z
,ÖName->
n
);

1566 if–
dequŸe
 ) 
	`sqlôe3DequŸe
(
pIãm
->
zName
);

1568 
	}
}

1578 
	$sqlôe3Ex¥Li°SëS∑n
(

1579 
P¨£
 *
pP¨£
,

1580 
Ex¥Li°
 *
pLi°
,

1581 
Ex¥S∑n
 *
pS∑n


1583 
sqlôe3
 *
db
 = 
pP¨£
->db;

1584 
	`as£π
–
pLi°
!=0 || 
db
->
mÆlocFaûed
!=0 );

1585 if–
pLi°
 ){

1586 
Ex¥Li°_ôem
 *
pIãm
 = &
pLi°
->
a
[pLi°->
nEx¥
-1];

1587 
	`as£π
–
pLi°
->
nEx¥
>0 );

1588 
	`as£π
–
db
->
mÆlocFaûed
 || 
pIãm
->
pEx¥
==
pS∑n
->pExpr );

1589 
	`sqlôe3DbFªe
(
db
, 
pIãm
->
zS∑n
);

1590 
pIãm
->
zS∑n
 = 
	`sqlôe3DbSåNDup
(
db
, (*)
pS∑n
->
zSèπ
,

1591 ()(
pS∑n
->
zEnd
 -ÖS∑n->
zSèπ
));

1593 
	}
}

1599 
	$sqlôe3Ex¥Li°CheckLígth
(

1600 
P¨£
 *
pP¨£
,

1601 
Ex¥Li°
 *
pELi°
,

1602 c⁄° *
zObje˘


1604 
mx
 = 
pP¨£
->
db
->
aLimô
[
SQLITE_LIMIT_COLUMN
];

1605 
	`ã°ˇ£
–
pELi°
 &&ÖELi°->
nEx¥
==
mx
 );

1606 
	`ã°ˇ£
–
pELi°
 &&ÖELi°->
nEx¥
==
mx
+1 );

1607 if–
pELi°
 &&ÖELi°->
nEx¥
>
mx
 ){

1608 
	`sqlôe3Eº‹Msg
(
pP¨£
, "toÿm™y cﬁumn†ö %s", 
zObje˘
);

1610 
	}
}

1615 
SQLITE_NOINLINE
 
	$ex¥Li°DñëeNN
(
sqlôe3
 *
db
, 
Ex¥Li°
 *
pLi°
){

1616 
i
;

1617 
Ex¥Li°_ôem
 *
pIãm
;

1618 
	`as£π
–
pLi°
->
a
!=0 ||ÖLi°->
nEx¥
==0 );

1619 
pIãm
=
pLi°
->
a
, 
i
=0; i<pLi°->
nEx¥
; i++,ÖItem++){

1620 
	`sqlôe3Ex¥Dñëe
(
db
, 
pIãm
->
pEx¥
);

1621 
	`sqlôe3DbFªe
(
db
, 
pIãm
->
zName
);

1622 
	`sqlôe3DbFªe
(
db
, 
pIãm
->
zS∑n
);

1624 
	`sqlôe3DbFªe
(
db
, 
pLi°
->
a
);

1625 
	`sqlôe3DbFªe
(
db
, 
pLi°
);

1626 
	}
}

1627 
	$sqlôe3Ex¥Li°Dñëe
(
sqlôe3
 *
db
, 
Ex¥Li°
 *
pLi°
){

1628 if–
pLi°
 ) 
	`ex¥Li°DñëeNN
(
db
,ÖList);

1629 
	}
}

1635 
u32
 
	$sqlôe3Ex¥Li°Fœgs
(c⁄° 
Ex¥Li°
 *
pLi°
){

1636 
i
;

1637 
u32
 
m
 = 0;

1638 if–
pLi°
 ){

1639 
i
=0; i<
pLi°
->
nEx¥
; i++){

1640 
Ex¥
 *
pEx¥
 = 
pLi°
->
a
[
i
].pExpr;

1641 
	`as£π
–
pEx¥
!=0 );

1642 
m
 |
pEx¥
->
Êags
;

1645  
m
;

1646 
	}
}

1673 
	$ex¥NodeIsC⁄°™t
(
WÆkî
 *
pWÆkî
, 
Ex¥
 *
pEx¥
){

1678 if–
pWÆkî
->
eCode
==2 && 
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_FromJoö
) ){

1679 
pWÆkî
->
eCode
 = 0;

1680  
WRC_Ab‹t
;

1683  
pEx¥
->
›
 ){

1687 
TK_FUNCTION
:

1688 if–
pWÆkî
->
eCode
>=4 || 
	`Ex¥HasPr›îty
(
pEx¥
,
EP_C⁄°Func
) ){

1689  
WRC_C⁄töue
;

1691 
pWÆkî
->
eCode
 = 0;

1692  
WRC_Ab‹t
;

1694 
TK_ID
:

1695 
TK_COLUMN
:

1696 
TK_AGG_FUNCTION
:

1697 
TK_AGG_COLUMN
:

1698 
	`ã°ˇ£
–
pEx¥
->
›
==
TK_ID
 );

1699 
	`ã°ˇ£
–
pEx¥
->
›
==
TK_COLUMN
 );

1700 
	`ã°ˇ£
–
pEx¥
->
›
==
TK_AGG_FUNCTION
 );

1701 
	`ã°ˇ£
–
pEx¥
->
›
==
TK_AGG_COLUMN
 );

1702 if–
pWÆkî
->
eCode
==3 && 
pEx¥
->
iTabÀ
=ıWÆkî->
u
.
iCur
 ){

1703  
WRC_C⁄töue
;

1705 
pWÆkî
->
eCode
 = 0;

1706  
WRC_Ab‹t
;

1708 
TK_VARIABLE
:

1709 if–
pWÆkî
->
eCode
==5 ){

1713 
pEx¥
->
›
 = 
TK_NULL
;

1714 }if–
pWÆkî
->
eCode
==4 ){

1717 
pWÆkî
->
eCode
 = 0;

1718  
WRC_Ab‹t
;

1722 
	`ã°ˇ£
–
pEx¥
->
›
==
TK_SELECT
 );

1723 
	`ã°ˇ£
–
pEx¥
->
›
==
TK_EXISTS
 );

1724  
WRC_C⁄töue
;

1726 
	}
}

1727 
	$£À˘NodeIsC⁄°™t
(
WÆkî
 *
pWÆkî
, 
Sñe˘
 *
NŸU£d
){

1728 
	`UNUSED_PARAMETER
(
NŸU£d
);

1729 
pWÆkî
->
eCode
 = 0;

1730  
WRC_Ab‹t
;

1731 
	}
}

1732 
	$ex¥IsC⁄°
(
Ex¥
 *
p
, 
öôFœg
, 
iCur
){

1733 
WÆkî
 
w
;

1734 
	`mem£t
(&
w
, 0, (w));

1735 
w
.
eCode
 = 
öôFœg
;

1736 
w
.
xEx¥CÆlback
 = 
ex¥NodeIsC⁄°™t
;

1737 
w
.
xSñe˘CÆlback
 = 
£À˘NodeIsC⁄°™t
;

1738 
w
.
u
.
iCur
 = iCur;

1739 
	`sqlôe3WÆkEx¥
(&
w
, 
p
);

1740  
w
.
eCode
;

1741 
	}
}

1751 
	$sqlôe3Ex¥IsC⁄°™t
(
Ex¥
 *
p
){

1752  
	`ex¥IsC⁄°
(
p
, 1, 0);

1753 
	}
}

1761 
	$sqlôe3Ex¥IsC⁄°™tNŸJoö
(
Ex¥
 *
p
){

1762  
	`ex¥IsC⁄°
(
p
, 2, 0);

1763 
	}
}

1771 
	$sqlôe3Ex¥IsTabÀC⁄°™t
(
Ex¥
 *
p
, 
iCur
){

1772  
	`ex¥IsC⁄°
(
p
, 3, 
iCur
);

1773 
	}
}

1784 
	$sqlôe3Ex¥IsC⁄°™tOrFun˘i⁄
(
Ex¥
 *
p
, 
u8
 
isInô
){

1785 
	`as£π
–
isInô
==0 || isInit==1 );

1786  
	`ex¥IsC⁄°
(
p
, 4+
isInô
, 0);

1787 
	}
}

1789 #ifde‡
SQLITE_ENABLE_CURSOR_HINTS


1794 
	$sqlôe3Ex¥C⁄èösSubquîy
(
Ex¥
 *
p
){

1795 
WÆkî
 
w
;

1796 
	`mem£t
(&
w
, 0, (w));

1797 
w
.
eCode
 = 1;

1798 
w
.
xEx¥CÆlback
 = 
sqlôe3Ex¥WÆkNo›
;

1799 
w
.
xSñe˘CÆlback
 = 
£À˘NodeIsC⁄°™t
;

1800 
	`sqlôe3WÆkEx¥
(&
w
, 
p
);

1801  
w
.
eCode
==0;

1802 
	}
}

1811 
	$sqlôe3Ex¥IsI¡egî
(
Ex¥
 *
p
, *
pVÆue
){

1812 
rc
 = 0;

1816 
	`as£π
–
p
->
›
!=
TK_INTEGER
 || (p->
Êags
 & 
EP_I¡VÆue
)!=0

1817 || 
	`sqlôe3GëI¡32
(
p
->
u
.
zTokí
, &
rc
)==0 );

1819 if–
p
->
Êags
 & 
EP_I¡VÆue
 ){

1820 *
pVÆue
 = 
p
->
u
.
iVÆue
;

1823  
p
->
›
 ){

1824 
TK_UPLUS
: {

1825 
rc
 = 
	`sqlôe3Ex¥IsI¡egî
(
p
->
pLe·
, 
pVÆue
);

1828 
TK_UMINUS
: {

1829 
v
;

1830 if–
	`sqlôe3Ex¥IsI¡egî
(
p
->
pLe·
, &
v
) ){

1831 
	`as£π
–
v
!=(-2147483647-1) );

1832 *
pVÆue
 = -
v
;

1833 
rc
 = 1;

1839  
rc
;

1840 
	}
}

1856 
	$sqlôe3Ex¥C™BeNuŒ
(c⁄° 
Ex¥
 *
p
){

1857 
u8
 
›
;

1858  
p
->
›
==
TK_UPLUS
 ||Ö->›==
TK_UMINUS
 ){Ö =Ö->
pLe·
; }

1859 
›
 = 
p
->op;

1860 if–
›
==
TK_REGISTER
 ) o∞
p
->
›2
;

1861  
›
 ){

1862 
TK_INTEGER
:

1863 
TK_STRING
:

1864 
TK_FLOAT
:

1865 
TK_BLOB
:

1867 
TK_COLUMN
:

1868 
	`as£π
–
p
->
pTab
!=0 );

1869  
	`Ex¥HasPr›îty
(
p
, 
EP_C™BeNuŒ
) ||

1870 (
p
->
iCﬁumn
>=0 &&Ö->
pTab
->
aCﬁ
[p->iCﬁumn].
nŸNuŒ
==0);

1874 
	}
}

1886 
	$sqlôe3Ex¥NìdsNoAfföôyCh™ge
(c⁄° 
Ex¥
 *
p
, 
aff
){

1887 
u8
 
›
;

1888 if–
aff
==
SQLITE_AFF_BLOB
 )  1;

1889  
p
->
›
==
TK_UPLUS
 ||Ö->›==
TK_UMINUS
 ){Ö =Ö->
pLe·
; }

1890 
›
 = 
p
->op;

1891 if–
›
==
TK_REGISTER
 ) o∞
p
->
›2
;

1892  
›
 ){

1893 
TK_INTEGER
: {

1894  
aff
==
SQLITE_AFF_INTEGER
 ||áff==
SQLITE_AFF_NUMERIC
;

1896 
TK_FLOAT
: {

1897  
aff
==
SQLITE_AFF_REAL
 ||áff==
SQLITE_AFF_NUMERIC
;

1899 
TK_STRING
: {

1900  
aff
==
SQLITE_AFF_TEXT
;

1902 
TK_BLOB
: {

1905 
TK_COLUMN
: {

1906 
	`as£π
–
p
->
iTabÀ
>=0 );

1907  
p
->
iCﬁumn
<0

1908 && (
aff
==
SQLITE_AFF_INTEGER
 ||áff==
SQLITE_AFF_NUMERIC
);

1914 
	}
}

1919 
	$sqlôe3IsRowid
(c⁄° *
z
){

1920 if–
	`sqlôe3SåICmp
(
z
, "_ROWID_")==0 )  1;

1921 if–
	`sqlôe3SåICmp
(
z
, "ROWID")==0 )  1;

1922 if–
	`sqlôe3SåICmp
(
z
, "OID")==0 )  1;

1924 
	}
}

1933 #i‚de‡
SQLITE_OMIT_SUBQUERY


1934 
Sñe˘
 *
	$isC™did©eF‹InO±
(
Ex¥
 *
pX
){

1935 
Sñe˘
 *
p
;

1936 
SrcLi°
 *
pSrc
;

1937 
Ex¥Li°
 *
pELi°
;

1938 
TabÀ
 *
pTab
;

1939 
i
;

1940 if–!
	`Ex¥HasPr›îty
(
pX
, 
EP_xIsSñe˘
) )  0;

1941 if–
	`Ex¥HasPr›îty
(
pX
, 
EP_V¨Sñe˘
) )  0;

1942 
p
 = 
pX
->
x
.
pSñe˘
;

1943 if–
p
->
pPri‹
 )  0;

1944 if–
p
->
£lFœgs
 & (
SF_Di°ö˘
|
SF_Aggªg©e
) ){

1945 
	`ã°ˇ£
–(
p
->
£lFœgs
 & (
SF_Di°ö˘
|
SF_Aggªg©e
))==SF_Distinct );

1946 
	`ã°ˇ£
–(
p
->
£lFœgs
 & (
SF_Di°ö˘
|
SF_Aggªg©e
))==SF_Aggregate );

1949 
	`as£π
–
p
->
pGroupBy
==0 );

1950 if–
p
->
pLimô
 )  0;

1951 
	`as£π
–
p
->
pOff£t
==0 );

1952 if–
p
->
pWhîe
 )  0;

1953 
pSrc
 = 
p
->pSrc;

1954 
	`as£π
–
pSrc
!=0 );

1955 if–
pSrc
->
nSrc
!=1 )  0;

1956 if–
pSrc
->
a
[0].
pSñe˘
 )  0;

1957 
pTab
 = 
pSrc
->
a
[0].pTab;

1958 
	`as£π
–
pTab
!=0 );

1959 
	`as£π
–
pTab
->
pSñe˘
==0 );

1960 if–
	`IsVútuÆ
(
pTab
) )  0;

1961 
pELi°
 = 
p
->pEList;

1962 
	`as£π
–
pELi°
!=0 );

1964 
i
=0; i<
pELi°
->
nEx¥
; i++){

1965 
Ex¥
 *
pRes
 = 
pELi°
->
a
[
i
].
pEx¥
;

1966 if–
pRes
->
›
!=
TK_COLUMN
 )  0;

1967 
	`as£π
–
pRes
->
iTabÀ
==
pSrc
->
a
[0].
iCurs‹
 );

1969  
p
;

1970 
	}
}

1973 #i‚de‡
SQLITE_OMIT_SUBQUERY


1980 
	$sqlôe3SëHasNuŒFœg
(
Vdbe
 *
v
, 
iCur
, 
ªgHasNuŒ
){

1981 
addr1
;

1982 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 0, 
ªgHasNuŒ
);

1983 
addr1
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Rewöd
, 
iCur
); 
	`VdbeCovîage
(v);

1984 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
iCur
, 0, 
ªgHasNuŒ
);

1985 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_TYPEOFARG
);

1986 
	`VdbeCommít
((
v
, "fú°_íåy_ö(%d)", 
iCur
));

1987 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr1
);

1988 
	}
}

1992 #i‚de‡
SQLITE_OMIT_SUBQUERY


1997 
	$sqlôe3InRhsIsC⁄°™t
(
Ex¥
 *
pIn
){

1998 
Ex¥
 *
pLHS
;

1999 
ªs
;

2000 
	`as£π
–!
	`Ex¥HasPr›îty
(
pIn
, 
EP_xIsSñe˘
) );

2001 
pLHS
 = 
pIn
->
pLe·
;

2002 
pIn
->
pLe·
 = 0;

2003 
ªs
 = 
	`sqlôe3Ex¥IsC⁄°™t
(
pIn
);

2004 
pIn
->
pLe·
 = 
pLHS
;

2005  
ªs
;

2006 
	}
}

2090 #i‚de‡
SQLITE_OMIT_SUBQUERY


2091 
	$sqlôe3FödInIndex
(

2092 
P¨£
 *
pP¨£
,

2093 
Ex¥
 *
pX
,

2094 
u32
 
öFœgs
,

2095 *
¥RhsHasNuŒ
,

2096 *
aiM≠


2098 
Sñe˘
 *
p
;

2099 
eTy≥
 = 0;

2100 
iTab
 = 
pP¨£
->
nTab
++;

2101 
mu°BeUnique
;

2102 
Vdbe
 *
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

2104 
	`as£π
–
pX
->
›
==
TK_IN
 );

2105 
mu°BeUnique
 = (
öFœgs
 & 
IN_INDEX_LOOP
)!=0;

2112 if–
¥RhsHasNuŒ
 && (
pX
->
Êags
 & 
EP_xIsSñe˘
) ){

2113 
i
;

2114 
Ex¥Li°
 *
pELi°
 = 
pX
->
x
.
pSñe˘
->pEList;

2115 
i
=0; i<
pELi°
->
nEx¥
; i++){

2116 if–
	`sqlôe3Ex¥C™BeNuŒ
(
pELi°
->
a
[
i
].
pEx¥
) ) ;

2118 if–
i
==
pELi°
->
nEx¥
 ){

2119 
¥RhsHasNuŒ
 = 0;

2126 if–
pP¨£
->
nEº
==0 && (
p
 = 
	`isC™did©eF‹InO±
(
pX
))!=0 ){

2127 
sqlôe3
 *
db
 = 
pP¨£
->db;

2128 
TabÀ
 *
pTab
;

2129 
i16
 
iDb
;

2130 
Ex¥Li°
 *
pELi°
 = 
p
->pEList;

2131 
nEx¥
 = 
pELi°
->nExpr;

2133 
	`as£π
–
p
->
pELi°
!=0 );

2134 
	`as£π
–
p
->
pELi°
->
a
[0].
pEx¥
!=0 );

2135 
	`as£π
–
p
->
pSrc
!=0 );

2136 
pTab
 = 
p
->
pSrc
->
a
[0].pTab;

2139 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pTab
->
pSchema
);

2140 
	`sqlôe3CodeVîifySchema
(
pP¨£
, 
iDb
);

2141 
	`sqlôe3TabÀLock
(
pP¨£
, 
iDb
, 
pTab
->
äum
, 0,ÖTab->
zName
);

2143 
	`as£π
(
v
);

2144 if–
nEx¥
==1 && 
pELi°
->
a
[0].
pEx¥
->
iCﬁumn
<0 ){

2146 
iAddr
 = 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_On˚
);

2147 
	`VdbeCovîage
(
v
);

2149 
	`sqlôe3O≥nTabÀ
(
pP¨£
, 
iTab
, 
iDb
, 
pTab
, 
OP_O≥nRód
);

2150 
eTy≥
 = 
IN_INDEX_ROWID
;

2152 
	`sqlôe3VdbeJumpHîe
(
v
, 
iAddr
);

2154 
Index
 *
pIdx
;

2155 
afföôy_ok
 = 1;

2156 
i
;

2162 
i
=0; i<
nEx¥
 && 
afföôy_ok
; i++){

2163 
Ex¥
 *
pLhs
 = 
	`sqlôe3Ve˘‹FõldSubex¥
(
pX
->
pLe·
, 
i
);

2164 
iCﬁ
 = 
pELi°
->
a
[
i
].
pEx¥
->
iCﬁumn
;

2165 
idxaff
 = 
	`sqlôe3TabÀCﬁumnAfföôy
(
pTab
,
iCﬁ
);

2166 
cm∑ff
 = 
	`sqlôe3Com∑ªAfföôy
(
pLhs
, 
idxaff
);

2167 
	`ã°ˇ£
–
cm∑ff
==
SQLITE_AFF_BLOB
 );

2168 
	`ã°ˇ£
–
cm∑ff
==
SQLITE_AFF_TEXT
 );

2169  
cm∑ff
 ){

2170 
SQLITE_AFF_BLOB
:

2172 
SQLITE_AFF_TEXT
:

2177 
	`as£π
–
idxaff
==
SQLITE_AFF_TEXT
 );

2180 
afföôy_ok
 = 
	`sqlôe3IsNumîicAfföôy
(
idxaff
);

2184 if–
afföôy_ok
 ){

2186 
pIdx
=
pTab
->
pIndex
;ÖIdx && 
eTy≥
==0;ÖIdxıIdx->
pNext
){

2187 
Bômask
 
cﬁU£d
;

2188 
Bômask
 
mCﬁ
;

2189 if–
pIdx
->
nCﬁumn
<
nEx¥
 ) ;

2192 
	`ã°ˇ£
–
pIdx
->
nCﬁumn
==
BMS
-2 );

2193 
	`ã°ˇ£
–
pIdx
->
nCﬁumn
==
BMS
-1 );

2194 if–
pIdx
->
nCﬁumn
>=
BMS
-1 ) ;

2195 if–
mu°BeUnique
 ){

2196 if–
pIdx
->
nKeyCﬁ
>
nEx¥


2197 ||(
pIdx
->
nCﬁumn
>
nEx¥
 && !
	`IsUniqueIndex
(pIdx))

2203 
cﬁU£d
 = 0;

2204 
i
=0; i<
nEx¥
; i++){

2205 
Ex¥
 *
pLhs
 = 
	`sqlôe3Ve˘‹FõldSubex¥
(
pX
->
pLe·
, 
i
);

2206 
Ex¥
 *
pRhs
 = 
pELi°
->
a
[
i
].
pEx¥
;

2207 
CﬁlSeq
 *
pReq
 = 
	`sqlôe3Bö¨yCom∑ªCﬁlSeq
(
pP¨£
, 
pLhs
, 
pRhs
);

2208 
j
;

2210 
	`as£π
–
pReq
!=0 || 
pRhs
->
iCﬁumn
==
XN_ROWID
 || 
pP¨£
->
nEº
 );

2211 
j
=0; j<
nEx¥
; j++){

2212 if–
pIdx
->
aiCﬁumn
[
j
]!=
pRhs
->
iCﬁumn
 ) ;

2213 
	`as£π
–
pIdx
->
azCﬁl
[
j
] );

2214 if–
pReq
!=0 && 
	`sqlôe3SåICmp
’Req->
zName
, 
pIdx
->
azCﬁl
[
j
])!=0 ){

2219 if–
j
==
nEx¥
 ) ;

2220 
mCﬁ
 = 
	`MASKBIT
(
j
);

2221 if–
mCﬁ
 & 
cﬁU£d
 ) ;

2222 
cﬁU£d
 |
mCﬁ
;

2223 if–
aiM≠
 )áiM≠[
i
] = 
j
;

2226 
	`as£π
–
i
==
nEx¥
 || 
cﬁU£d
!=(
	`MASKBIT
(nExpr)-1) );

2227 if–
cﬁU£d
==(
	`MASKBIT
(
nEx¥
)-1) ){

2229 
iAddr
 = 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_On˚
); 
	`VdbeCovîage
(v);

2230 #i‚de‡
SQLITE_OMIT_EXPLAIN


2231 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Ex∂aö
, 0, 0, 0,

2232 
	`sqlôe3MPrötf
(
db
, "USING INDEX %†FOR IN-OPERATOR",
pIdx
->
zName
),

2233 
P4_DYNAMIC
);

2235 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_O≥nRód
, 
iTab
, 
pIdx
->
äum
, 
iDb
);

2236 
	`sqlôe3VdbeSëP4KeyInfo
(
pP¨£
, 
pIdx
);

2237 
	`VdbeCommít
((
v
, "%s", 
pIdx
->
zName
));

2238 
	`as£π
–
IN_INDEX_INDEX_DESC
 =
IN_INDEX_INDEX_ASC
+1 );

2239 
eTy≥
 = 
IN_INDEX_INDEX_ASC
 + 
pIdx
->
aS‹tOrdî
[0];

2241 if–
¥RhsHasNuŒ
 ){

2242 #ifde‡
SQLITE_ENABLE_COLUMN_USED_MASK


2243 
i64
 
mask
 = (1<<
nEx¥
)-1;

2244 
	`sqlôe3VdbeAddOp4Dup8
(
v
, 
OP_CﬁumnsU£d
,

2245 
iTab
, 0, 0, (
u8
*)&
mask
, 
P4_INT64
);

2247 *
¥RhsHasNuŒ
 = ++
pP¨£
->
nMem
;

2248 if–
nEx¥
==1 ){

2249 
	`sqlôe3SëHasNuŒFœg
(
v
, 
iTab
, *
¥RhsHasNuŒ
);

2252 
	`sqlôe3VdbeJumpHîe
(
v
, 
iAddr
);

2266 if–
eTy≥
==0

2267 && (
öFœgs
 & 
IN_INDEX_NOOP_OK
)

2268 && !
	`Ex¥HasPr›îty
(
pX
, 
EP_xIsSñe˘
)

2269 && (!
	`sqlôe3InRhsIsC⁄°™t
(
pX
Ë||ÖX->
x
.
pLi°
->
nEx¥
<=2)

2271 
eTy≥
 = 
IN_INDEX_NOOP
;

2274 if–
eTy≥
==0 ){

2278 
u32
 
ßvedNQuîyLo›
 = 
pP¨£
->
nQuîyLo›
;

2279 
rMayHaveNuŒ
 = 0;

2280 
eTy≥
 = 
IN_INDEX_EPH
;

2281 if–
öFœgs
 & 
IN_INDEX_LOOP
 ){

2282 
pP¨£
->
nQuîyLo›
 = 0;

2283 if–
pX
->
pLe·
->
iCﬁumn
<0 && !
	`Ex¥HasPr›îty
’X, 
EP_xIsSñe˘
) ){

2284 
eTy≥
 = 
IN_INDEX_ROWID
;

2286 }if–
¥RhsHasNuŒ
 ){

2287 *
¥RhsHasNuŒ
 = 
rMayHaveNuŒ
 = ++
pP¨£
->
nMem
;

2289 
	`sqlôe3CodeSub£À˘
(
pP¨£
, 
pX
, 
rMayHaveNuŒ
, 
eTy≥
==
IN_INDEX_ROWID
);

2290 
pP¨£
->
nQuîyLo›
 = 
ßvedNQuîyLo›
;

2292 
pX
->
iTabÀ
 = 
iTab
;

2295 if–
aiM≠
 && 
eTy≥
!=
IN_INDEX_INDEX_ASC
 &&ÉTy≥!=
IN_INDEX_INDEX_DESC
 ){

2296 
i
, 
n
;

2297 
n
 = 
	`sqlôe3Ex¥Ve˘‹Size
(
pX
->
pLe·
);

2298 
i
=0; i<
n
; i++Ë
aiM≠
[i] = i;

2300  
eTy≥
;

2301 
	}
}

2304 #i‚de‡
SQLITE_OMIT_SUBQUERY


2313 *
	$ex¥INAfföôy
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pEx¥
){

2314 
Ex¥
 *
pLe·
 = 
pEx¥
->pLeft;

2315 
nVÆ
 = 
	`sqlôe3Ex¥Ve˘‹Size
(
pLe·
);

2316 
Sñe˘
 *
pSñe˘
 = (
pEx¥
->
Êags
 & 
EP_xIsSñe˘
Ë?ÖEx¥->
x
.pSelect : 0;

2317 *
zRë
;

2319 
	`as£π
–
pEx¥
->
›
==
TK_IN
 );

2320 
zRë
 = 
	`sqlôe3DbMÆlocZîo
(
pP¨£
->
db
, 
nVÆ
+1);

2321 if–
zRë
 ){

2322 
i
;

2323 
i
=0; i<
nVÆ
; i++){

2324 
Ex¥
 *
pA
 = 
	`sqlôe3Ve˘‹FõldSubex¥
(
pLe·
, 
i
);

2325 
a
 = 
	`sqlôe3Ex¥Afföôy
(
pA
);

2326 if–
pSñe˘
 ){

2327 
zRë
[
i
] = 
	`sqlôe3Com∑ªAfföôy
(
pSñe˘
->
pELi°
->
a
[i].
pEx¥
,á);

2329 
zRë
[
i
] = 
a
;

2332 
zRë
[
nVÆ
] = '\0';

2334  
zRë
;

2335 
	}
}

2338 #i‚de‡
SQLITE_OMIT_SUBQUERY


2345 
	$sqlôe3Sub£À˘Eº‹
(
P¨£
 *
pP¨£
, 
nA˘uÆ
, 
nEx≥˘
){

2346 c⁄° *
zFmt
 = "sub-selectÑeturns %d columns -Éxpected %d";

2347 
	`sqlôe3Eº‹Msg
(
pP¨£
, 
zFmt
, 
nA˘uÆ
, 
nEx≥˘
);

2348 
	}
}

2362 
	$sqlôe3Ve˘‹Eº‹Msg
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pEx¥
){

2363 #i‚de‡
SQLITE_OMIT_SUBQUERY


2364 if–
pEx¥
->
Êags
 & 
EP_xIsSñe˘
 ){

2365 
	`sqlôe3Sub£À˘Eº‹
(
pP¨£
, 
pEx¥
->
x
.
pSñe˘
->
pELi°
->
nEx¥
, 1);

2369 
	`sqlôe3Eº‹Msg
(
pP¨£
, "row value misused");

2371 
	}
}

2402 #i‚de‡
SQLITE_OMIT_SUBQUERY


2403 
	$sqlôe3CodeSub£À˘
(

2404 
P¨£
 *
pP¨£
,

2405 
Ex¥
 *
pEx¥
,

2406 
rHasNuŒFœg
,

2407 
isRowid


2409 
jmpIfDy«mic
 = -1;

2410 
rReg
 = 0;

2411 
Vdbe
 *
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

2412 if–
	`NEVER
(
v
==0) )  0;

2413 
	`sqlôe3Ex¥CachePush
(
pP¨£
);

2425 if–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_V¨Sñe˘
) ){

2426 
jmpIfDy«mic
 = 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_On˚
); 
	`VdbeCovîage
(v);

2429 #i‚de‡
SQLITE_OMIT_EXPLAIN


2430 if–
pP¨£
->
ex∂aö
==2 ){

2431 *
zMsg
 = 
	`sqlôe3MPrötf
(
pP¨£
->
db
, "EXECUTE %s%s SUBQUERY %d",

2432 
jmpIfDy«mic
>=0?"":"CORRELATED ",

2433 
pEx¥
->
›
==
TK_IN
?"LIST":"SCALAR",

2434 
pP¨£
->
iNextSñe˘Id


2436 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Ex∂aö
, 
pP¨£
->
iSñe˘Id
, 0, 0, 
zMsg
, 
P4_DYNAMIC
);

2440  
pEx¥
->
›
 ){

2441 
TK_IN
: {

2442 
addr
;

2443 
Ex¥
 *
pLe·
 = 
pEx¥
->pLeft;

2444 
KeyInfo
 *
pKeyInfo
 = 0;

2445 
nVÆ
;

2447 
nVÆ
 = 
	`sqlôe3Ex¥Ve˘‹Size
(
pLe·
);

2448 
	`as£π
–!
isRowid
 || 
nVÆ
==1 );

2463 
pEx¥
->
iTabÀ
 = 
pP¨£
->
nTab
++;

2464 
addr
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_O≥nEphemîÆ
,

2465 
pEx¥
->
iTabÀ
, (
isRowid
?0:
nVÆ
));

2466 
pKeyInfo
 = 
isRowid
 ? 0 : 
	`sqlôe3KeyInfoAŒoc
(
pP¨£
->
db
, 
nVÆ
, 1);

2468 if–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
) ){

2474 
Sñe˘
 *
pSñe˘
 = 
pEx¥
->
x
.pSelect;

2475 
Ex¥Li°
 *
pELi°
 = 
pSñe˘
->pEList;

2477 
	`as£π
–!
isRowid
 );

2480 if–
	`ALWAYS
(
pELi°
->
nEx¥
==
nVÆ
) ){

2481 
Sñe˘De°
 
de°
;

2482 
i
;

2483 
	`sqlôe3Sñe˘De°Inô
(&
de°
, 
SRT_Së
, 
pEx¥
->
iTabÀ
);

2484 
de°
.
zAffSd°
 = 
	`ex¥INAfföôy
(
pP¨£
, 
pEx¥
);

2485 
	`as£π
–(
pEx¥
->
iTabÀ
&0x0000FFFF)==pExpr->iTable );

2486 
pSñe˘
->
iLimô
 = 0;

2487 
	`ã°ˇ£
–
pSñe˘
->
£lFœgs
 & 
SF_Di°ö˘
 );

2488 
	`ã°ˇ£
–
pKeyInfo
==0 );

2489 if–
	`sqlôe3Sñe˘
(
pP¨£
, 
pSñe˘
, &
de°
) ){

2490 
	`sqlôe3DbFªe
(
pP¨£
->
db
, 
de°
.
zAffSd°
);

2491 
	`sqlôe3KeyInfoUƒef
(
pKeyInfo
);

2494 
	`sqlôe3DbFªe
(
pP¨£
->
db
, 
de°
.
zAffSd°
);

2495 
	`as£π
–
pKeyInfo
!=0 );

2496 
	`as£π
–
pELi°
!=0 );

2497 
	`as£π
–
pELi°
->
nEx¥
>0 );

2498 
	`as£π
–
	`sqlôe3KeyInfoIsWrôóbÀ
(
pKeyInfo
) );

2499 
i
=0; i<
nVÆ
; i++){

2500 
Ex¥
 *
p
 = 
	`sqlôe3Ve˘‹FõldSubex¥
(
pLe·
, 
i
);

2501 
pKeyInfo
->
aCﬁl
[
i
] = 
	`sqlôe3Bö¨yCom∑ªCﬁlSeq
(

2502 
pP¨£
, 
p
, 
pELi°
->
a
[
i
].
pEx¥


2506 }if–
	`ALWAYS
(
pEx¥
->
x
.
pLi°
!=0) ){

2514 
afföôy
;

2515 
i
;

2516 
Ex¥Li°
 *
pLi°
 = 
pEx¥
->
x
.pList;

2517 
Ex¥Li°_ôem
 *
pIãm
;

2518 
r1
, 
r2
, 
r3
;

2520 
afföôy
 = 
	`sqlôe3Ex¥Afföôy
(
pLe·
);

2521 if–!
afföôy
 ){

2522 
afföôy
 = 
SQLITE_AFF_BLOB
;

2524 if–
pKeyInfo
 ){

2525 
	`as£π
–
	`sqlôe3KeyInfoIsWrôóbÀ
(
pKeyInfo
) );

2526 
pKeyInfo
->
aCﬁl
[0] = 
	`sqlôe3Ex¥CﬁlSeq
(
pP¨£
, 
pEx¥
->
pLe·
);

2530 
r1
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

2531 
r2
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

2532 if–
isRowid
 ) 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NuŒ
, 0, 
r2
);

2533 
i
=
pLi°
->
nEx¥
, 
pIãm
ıLi°->
a
; i>0; i--,ÖItem++){

2534 
Ex¥
 *
pE2
 = 
pIãm
->
pEx¥
;

2535 
iVÆToIns
;

2542 if–
jmpIfDy«mic
>=0 && !
	`sqlôe3Ex¥IsC⁄°™t
(
pE2
) ){

2543 
	`sqlôe3VdbeCh™geToNo›
(
v
, 
jmpIfDy«mic
);

2544 
jmpIfDy«mic
 = -1;

2548 if–
isRowid
 && 
	`sqlôe3Ex¥IsI¡egî
(
pE2
, &
iVÆToIns
) ){

2549 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_In£πI¡
, 
pEx¥
->
iTabÀ
, 
r2
, 
iVÆToIns
);

2551 
r3
 = 
	`sqlôe3Ex¥CodeT¨gë
(
pP¨£
, 
pE2
, 
r1
);

2552 if–
isRowid
 ){

2553 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Mu°BeI¡
, 
r3
,

2554 
	`sqlôe3VdbeCuºítAddr
(
v
)+2);

2555 
	`VdbeCovîage
(
v
);

2556 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_In£π
, 
pEx¥
->
iTabÀ
, 
r2
, 
r3
);

2558 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_MakeRec‹d
, 
r3
, 1, 
r2
, &
afföôy
, 1);

2559 
	`sqlôe3Ex¥CacheAfföôyCh™ge
(
pP¨£
, 
r3
, 1);

2560 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_IdxIn£π
, 
pEx¥
->
iTabÀ
, 
r2
, 
r3
, 1);

2564 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
r1
);

2565 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
r2
);

2567 if–
pKeyInfo
 ){

2568 
	`sqlôe3VdbeCh™geP4
(
v
, 
addr
, (*)
pKeyInfo
, 
P4_KEYINFO
);

2573 
TK_EXISTS
:

2574 
TK_SELECT
:

2589 
Sñe˘
 *
pSñ
;

2590 
Sñe˘De°
 
de°
;

2591 
nReg
;

2593 
	`ã°ˇ£
–
pEx¥
->
›
==
TK_EXISTS
 );

2594 
	`ã°ˇ£
–
pEx¥
->
›
==
TK_SELECT
 );

2595 
	`as£π
–
pEx¥
->
›
==
TK_EXISTS
 ||ÖEx¥->›==
TK_SELECT
 );

2596 
	`as£π
–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
) );

2598 
pSñ
 = 
pEx¥
->
x
.
pSñe˘
;

2599 
nReg
 = 
pEx¥
->
›
==
TK_SELECT
 ? 
pSñ
->
pELi°
->
nEx¥
 : 1;

2600 
	`sqlôe3Sñe˘De°Inô
(&
de°
, 0, 
pP¨£
->
nMem
+1);

2601 
pP¨£
->
nMem
 +
nReg
;

2602 if–
pEx¥
->
›
==
TK_SELECT
 ){

2603 
de°
.
eDe°
 = 
SRT_Mem
;

2604 
de°
.
iSd°
 = de°.
iSDP¨m
;

2605 
de°
.
nSd°
 = 
nReg
;

2606 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_NuŒ
, 0, 
de°
.
iSDP¨m
, de°.iSDP¨m+
nReg
-1);

2607 
	`VdbeCommít
((
v
, "Init subqueryÑesult"));

2609 
de°
.
eDe°
 = 
SRT_Exi°s
;

2610 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 0, 
de°
.
iSDP¨m
);

2611 
	`VdbeCommít
((
v
, "Init EXISTSÑesult"));

2613 
	`sqlôe3Ex¥Dñëe
(
pP¨£
->
db
, 
pSñ
->
pLimô
);

2614 
pSñ
->
pLimô
 = 
	`sqlôe3Ex¥AŒoc
(
pP¨£
->
db
, 
TK_INTEGER
,

2615 &
sqlôe3I¡Tokís
[1], 0);

2616 
pSñ
->
iLimô
 = 0;

2617 
pSñ
->
£lFœgs
 &~
SF_Mu…iVÆue
;

2618 if–
	`sqlôe3Sñe˘
(
pP¨£
, 
pSñ
, &
de°
) ){

2621 
rReg
 = 
de°
.
iSDP¨m
;

2622 
	`Ex¥SëVVAPr›îty
(
pEx¥
, 
EP_NoRedu˚
);

2627 if–
rHasNuŒFœg
 ){

2628 
	`sqlôe3SëHasNuŒFœg
(
v
, 
pEx¥
->
iTabÀ
, 
rHasNuŒFœg
);

2631 if–
jmpIfDy«mic
>=0 ){

2632 
	`sqlôe3VdbeJumpHîe
(
v
, 
jmpIfDy«mic
);

2634 
	`sqlôe3Ex¥CacheP›
(
pP¨£
);

2636  
rReg
;

2637 
	}
}

2640 #i‚de‡
SQLITE_OMIT_SUBQUERY


2647 
	$sqlôe3Ex¥CheckIN
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pIn
){

2648 
nVe˘‹
 = 
	`sqlôe3Ex¥Ve˘‹Size
(
pIn
->
pLe·
);

2649 if–(
pIn
->
Êags
 & 
EP_xIsSñe˘
) ){

2650 if–
nVe˘‹
!=
pIn
->
x
.
pSñe˘
->
pELi°
->
nEx¥
 ){

2651 
	`sqlôe3Sub£À˘Eº‹
(
pP¨£
, 
pIn
->
x
.
pSñe˘
->
pELi°
->
nEx¥
, 
nVe˘‹
);

2654 }if–
nVe˘‹
!=1 ){

2655 
	`sqlôe3Ve˘‹Eº‹Msg
(
pP¨£
, 
pIn
->
pLe·
);

2659 
	}
}

2662 #i‚de‡
SQLITE_OMIT_SUBQUERY


2688 
	$sqlôe3Ex¥CodeIN
(

2689 
P¨£
 *
pP¨£
,

2690 
Ex¥
 *
pEx¥
,

2691 
de°IfFÆ£
,

2692 
de°IfNuŒ


2694 
rRhsHasNuŒ
 = 0;

2695 
eTy≥
;

2696 
rLhs
;

2697 
rLhsOrig
;

2698 
Vdbe
 *
v
;

2699 *
aiM≠
 = 0;

2700 *
zAff
 = 0;

2701 
nVe˘‹
;

2702 
iDummy
;

2703 
Ex¥
 *
pLe·
;

2704 
i
;

2705 
de°Sãp2
;

2706 
de°Sãp6
 = 0;

2707 
addrTruthOp
;

2708 
de°NŸNuŒ
;

2709 
addrT›
;

2711 
pLe·
 = 
pEx¥
->pLeft;

2712 if–
	`sqlôe3Ex¥CheckIN
(
pP¨£
, 
pEx¥
) ) ;

2713 
zAff
 = 
	`ex¥INAfföôy
(
pP¨£
, 
pEx¥
);

2714 
nVe˘‹
 = 
	`sqlôe3Ex¥Ve˘‹Size
(
pEx¥
->
pLe·
);

2715 
aiM≠
 = (*)
	`sqlôe3DbMÆlocZîo
(

2716 
pP¨£
->
db
, 
nVe˘‹
*(() + ()) + 1

2718 if–
pP¨£
->
db
->
mÆlocFaûed
 ) 
sqlôe3Ex¥CodeIN_oom_îr‹
;

2724 
v
 = 
pP¨£
->
pVdbe
;

2725 
	`as£π
–
v
!=0 );

2726 
	`VdbeNo›Commít
((
v
, "begin INÉxpr"));

2727 
eTy≥
 = 
	`sqlôe3FödInIndex
(
pP¨£
, 
pEx¥
,

2728 
IN_INDEX_MEMBERSHIP
 | 
IN_INDEX_NOOP_OK
,

2729 
de°IfFÆ£
==
de°IfNuŒ
 ? 0 : &
rRhsHasNuŒ
, 
aiM≠
);

2731 
	`as£π
–
pP¨£
->
nEº
 || 
nVe˘‹
==1 || 
eTy≥
==
IN_INDEX_EPH


2732 || 
eTy≥
==
IN_INDEX_INDEX_ASC
 ||ÉTy≥==
IN_INDEX_INDEX_DESC


2734 #ifde‡
SQLITE_DEBUG


2737 
i
=0; i<
nVe˘‹
; i++){

2738 
j
, 
˙t
;

2739 
˙t
=
j
=0; j<
nVe˘‹
; j++Ëif–
aiM≠
[j]==
i
 ) cnt++;

2740 
	`as£π
–
˙t
==1 );

2753 
	`sqlôe3Ex¥CachePush
(
pP¨£
);

2754 
rLhsOrig
 = 
	`ex¥CodeVe˘‹
(
pP¨£
, 
pLe·
, &
iDummy
);

2755 
i
=0; i<
nVe˘‹
 && 
aiM≠
[i]==i; i++){}

2756 if–
i
==
nVe˘‹
 ){

2758 
rLhs
 = 
rLhsOrig
;

2761 
rLhs
 = 
	`sqlôe3GëTempR™ge
(
pP¨£
, 
nVe˘‹
);

2762 
i
=0; i<
nVe˘‹
; i++){

2763 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_C›y
, 
rLhsOrig
+
i
, 
rLhs
+
aiM≠
[i], 0);

2773 if–
eTy≥
==
IN_INDEX_NOOP
 ){

2774 
Ex¥Li°
 *
pLi°
 = 
pEx¥
->
x
.pList;

2775 
CﬁlSeq
 *
pCﬁl
 = 
	`sqlôe3Ex¥CﬁlSeq
(
pP¨£
, 
pEx¥
->
pLe·
);

2776 
œbñOk
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

2777 
r2
, 
ªgToFªe
;

2778 
ªgCkNuŒ
 = 0;

2779 
ii
;

2780 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
) );

2781 if–
de°IfNuŒ
!=
de°IfFÆ£
 ){

2782 
ªgCkNuŒ
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

2783 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_BôAnd
, 
rLhs
,ÑLhs, 
ªgCkNuŒ
);

2785 
ii
=0; ii<
pLi°
->
nEx¥
; ii++){

2786 
r2
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pLi°
->
a
[
ii
].
pEx¥
, &
ªgToFªe
);

2787 if–
ªgCkNuŒ
 && 
	`sqlôe3Ex¥C™BeNuŒ
(
pLi°
->
a
[
ii
].
pEx¥
) ){

2788 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_BôAnd
, 
ªgCkNuŒ
, 
r2
,ÑegCkNull);

2790 if–
ii
<
pLi°
->
nEx¥
-1 || 
de°IfNuŒ
!=
de°IfFÆ£
 ){

2791 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Eq
, 
rLhs
, 
œbñOk
, 
r2
,

2792 (*)
pCﬁl
, 
P4_COLLSEQ
);

2793 
	`VdbeCovîageIf
(
v
, 
ii
<
pLi°
->
nEx¥
-1);

2794 
	`VdbeCovîageIf
(
v
, 
ii
==
pLi°
->
nEx¥
-1);

2795 
	`sqlôe3VdbeCh™geP5
(
v
, 
zAff
[0]);

2797 
	`as£π
–
de°IfNuŒ
==
de°IfFÆ£
 );

2798 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Ne
, 
rLhs
, 
de°IfFÆ£
, 
r2
,

2799 (*)
pCﬁl
, 
P4_COLLSEQ
); 
	`VdbeCovîage
(
v
);

2800 
	`sqlôe3VdbeCh™geP5
(
v
, 
zAff
[0] | 
SQLITE_JUMPIFNULL
);

2802 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgToFªe
);

2804 if–
ªgCkNuŒ
 ){

2805 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IsNuŒ
, 
ªgCkNuŒ
, 
de°IfNuŒ
); 
	`VdbeCovîage
(v);

2806 
	`sqlôe3VdbeGŸo
(
v
, 
de°IfFÆ£
);

2808 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
œbñOk
);

2809 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgCkNuŒ
);

2810 
sqlôe3Ex¥CodeIN_föished
;

2817 if–
de°IfNuŒ
==
de°IfFÆ£
 ){

2818 
de°Sãp2
 = 
de°IfFÆ£
;

2820 
de°Sãp2
 = 
de°Sãp6
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

2822 
i
=0; i<
nVe˘‹
; i++){

2823 
Ex¥
 *
p
 = 
	`sqlôe3Ve˘‹FõldSubex¥
(
pEx¥
->
pLe·
, 
i
);

2824 if–
	`sqlôe3Ex¥C™BeNuŒ
(
p
) ){

2825 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IsNuŒ
, 
rLhs
+
i
, 
de°Sãp2
);

2826 
	`VdbeCovîage
(
v
);

2834 if–
eTy≥
==
IN_INDEX_ROWID
 ){

2838 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_SìkRowid
, 
pEx¥
->
iTabÀ
, 
de°IfFÆ£
, 
rLhs
);

2839 
	`VdbeCovîage
(
v
);

2840 
addrTruthOp
 = 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_GŸo
);

2842 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Afföôy
, 
rLhs
, 
nVe˘‹
, 0, 
zAff
,ÇVector);

2843 if–
de°IfFÆ£
==
de°IfNuŒ
 ){

2845 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_NŸFound
, 
pEx¥
->
iTabÀ
, 
de°IfFÆ£
,

2846 
rLhs
, 
nVe˘‹
); 
	`VdbeCovîage
(
v
);

2847 
sqlôe3Ex¥CodeIN_föished
;

2850 
addrTruthOp
 = 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_Found
, 
pEx¥
->
iTabÀ
, 0,

2851 
rLhs
, 
nVe˘‹
); 
	`VdbeCovîage
(
v
);

2857 if–
rRhsHasNuŒ
 && 
nVe˘‹
==1 ){

2858 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NŸNuŒ
, 
rRhsHasNuŒ
, 
de°IfFÆ£
);

2859 
	`VdbeCovîage
(
v
);

2865 if–
de°IfFÆ£
==
de°IfNuŒ
 ) 
	`sqlôe3VdbeGŸo
(
v
, destIfFalse);

2874 if–
de°Sãp6
 ) 
	`sqlôe3VdbeResﬁveLabñ
(
v
, destStep6);

2875 
addrT›
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rewöd
, 
pEx¥
->
iTabÀ
, 
de°IfFÆ£
);

2876 
	`VdbeCovîage
(
v
);

2877 if–
nVe˘‹
>1 ){

2878 
de°NŸNuŒ
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

2882 
de°NŸNuŒ
 = 
de°IfFÆ£
;

2884 
i
=0; i<
nVe˘‹
; i++){

2885 
Ex¥
 *
p
;

2886 
CﬁlSeq
 *
pCﬁl
;

2887 
r3
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

2888 
p
 = 
	`sqlôe3Ve˘‹FõldSubex¥
(
pLe·
, 
i
);

2889 
pCﬁl
 = 
	`sqlôe3Ex¥CﬁlSeq
(
pP¨£
, 
p
);

2890 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
pEx¥
->
iTabÀ
, 
i
, 
r3
);

2891 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Ne
, 
rLhs
+
i
, 
de°NŸNuŒ
, 
r3
,

2892 (*)
pCﬁl
, 
P4_COLLSEQ
);

2893 
	`VdbeCovîage
(
v
);

2894 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
r3
);

2896 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_GŸo
, 0, 
de°IfNuŒ
);

2897 if–
nVe˘‹
>1 ){

2898 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
de°NŸNuŒ
);

2899 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Next
, 
pEx¥
->
iTabÀ
, 
addrT›
+1);

2900 
	`VdbeCovîage
(
v
);

2904 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_GŸo
, 0, 
de°IfFÆ£
);

2908 
	`sqlôe3VdbeJumpHîe
(
v
, 
addrTruthOp
);

2910 
sqlôe3Ex¥CodeIN_föished
:

2911 if–
rLhs
!=
rLhsOrig
 ) 
	`sqlôe3Rñó£TempReg
(
pP¨£
,ÑLhs);

2912 
	`sqlôe3Ex¥CacheP›
(
pP¨£
);

2913 
	`VdbeCommít
((
v
, "end INÉxpr"));

2914 
sqlôe3Ex¥CodeIN_oom_îr‹
:

2915 
	`sqlôe3DbFªe
(
pP¨£
->
db
, 
aiM≠
);

2916 
	`sqlôe3DbFªe
(
pP¨£
->
db
, 
zAff
);

2917 
	}
}

2920 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


2929 
	$codeRól
(
Vdbe
 *
v
, c⁄° *
z
, 
√g©eFœg
, 
iMem
){

2930 if–
	`ALWAYS
(
z
!=0) ){

2931 
vÆue
;

2932 
	`sqlôe3AtoF
(
z
, &
vÆue
, 
	`sqlôe3SåÀn30
(z), 
SQLITE_UTF8
);

2933 
	`as£π
–!
	`sqlôe3IsNaN
(
vÆue
) );

2934 if–
√g©eFœg
 ) 
vÆue
 = -value;

2935 
	`sqlôe3VdbeAddOp4Dup8
(
v
, 
OP_Ról
, 0, 
iMem
, 0, (
u8
*)&
vÆue
, 
P4_REAL
);

2937 
	}
}

2947 
	$codeI¡egî
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pEx¥
, 
√gFœg
, 
iMem
){

2948 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

2949 if–
pEx¥
->
Êags
 & 
EP_I¡VÆue
 ){

2950 
i
 = 
pEx¥
->
u
.
iVÆue
;

2951 
	`as£π
–
i
>=0 );

2952 if–
√gFœg
 ) 
i
 = -i;

2953 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 
i
, 
iMem
);

2955 
c
;

2956 
i64
 
vÆue
;

2957 c⁄° *
z
 = 
pEx¥
->
u
.
zTokí
;

2958 
	`as£π
–
z
!=0 );

2959 
c
 = 
	`sqlôe3DecOrHexToI64
(
z
, &
vÆue
);

2960 if–
c
==1 || (c==2 && !
√gFœg
Ë|| (√gFœg && 
vÆue
==
SMALLEST_INT64
)){

2961 #ifde‡
SQLITE_OMIT_FLOATING_POINT


2962 
	`sqlôe3Eº‹Msg
(
pP¨£
, "ovîsized i¡egî: %s%s", 
√gFœg
 ? "-" : "", 
z
);

2964 #i‚de‡
SQLITE_OMIT_HEX_INTEGER


2965 if–
	`sqlôe3_°∫icmp
(
z
,"0x",2)==0 ){

2966 
	`sqlôe3Eº‹Msg
(
pP¨£
, "hexÜôîÆÅoÿbig: %s%s", 
√gFœg
?"-":"",
z
);

2970 
	`codeRól
(
v
, 
z
, 
√gFœg
, 
iMem
);

2974 if–
√gFœg
 ){ 
vÆue
 = 
c
==2 ? 
SMALLEST_INT64
 : -value; }

2975 
	`sqlôe3VdbeAddOp4Dup8
(
v
, 
OP_I¡64
, 0, 
iMem
, 0, (
u8
*)&
vÆue
, 
P4_INT64
);

2978 
	}
}

2983 
	$ˇcheE¡ryCÀ¨
(
P¨£
 *
pP¨£
, 
i
){

2984 if–
pP¨£
->
aCﬁCache
[
i
].
ãmpReg
 ){

2985 if–
pP¨£
->
nTempReg
<
	`AºaySize
’P¨£->
aTempReg
) ){

2986 
pP¨£
->
aTempReg
[pP¨£->
nTempReg
++] =ÖP¨£->
aCﬁCache
[
i
].
iReg
;

2989 
pP¨£
->
nCﬁCache
--;

2990 if–
i
<
pP¨£
->
nCﬁCache
 ){

2991 
pP¨£
->
aCﬁCache
[
i
] =ÖP¨£->aCﬁCache[pP¨£->
nCﬁCache
];

2993 
	}
}

3000 
	$sqlôe3Ex¥CacheSt‹e
(
P¨£
 *
pP¨£
, 
iTab
, 
iCﬁ
, 
iReg
){

3001 
i
;

3002 
möLru
;

3003 
idxLru
;

3004 
yCﬁCache
 *
p
;

3007 
	`as£π
–
iReg
>0 || 
pP¨£
->
nEº
 ||ÖP¨£->
db
->
mÆlocFaûed
 );

3008 
	`as£π
–
iCﬁ
>=-1 && iCol<32768 );

3014 if–
	`O±imiz©i⁄DißbÀd
(
pP¨£
->
db
, 
SQLITE_CﬁumnCache
) ) ;

3021 #i‚de‡
NDEBUG


3022 
i
=0, 
p
=
pP¨£
->
aCﬁCache
; i<pP¨£->
nCﬁCache
; i++,Ö++){

3023 
	`as£π
–
p
->
iTabÀ
!=
iTab
 ||Ö->
iCﬁumn
!=
iCﬁ
 );

3028 if–
pP¨£
->
nCﬁCache
>=
SQLITE_N_COLCACHE
 ){

3029 
möLru
 = 0x7fffffff;

3030 
idxLru
 = -1;

3031 
i
=0, 
p
=
pP¨£
->
aCﬁCache
; i<
SQLITE_N_COLCACHE
; i++,Ö++){

3032 if–
p
->
Ãu
<
möLru
 ){

3033 
idxLru
 = 
i
;

3034 
möLru
 = 
p
->
Ãu
;

3037 
p
 = &
pP¨£
->
aCﬁCache
[
idxLru
];

3039 
p
 = &
pP¨£
->
aCﬁCache
[pP¨£->
nCﬁCache
++];

3043 
p
->
iLevñ
 = 
pP¨£
->
iCacheLevñ
;

3044 
p
->
iTabÀ
 = 
iTab
;

3045 
p
->
iCﬁumn
 = 
iCﬁ
;

3046 
p
->
iReg
 = iReg;

3047 
p
->
ãmpReg
 = 0;

3048 
p
->
Ãu
 = 
pP¨£
->
iCacheC¡
++;

3049 
	}
}

3055 
	$sqlôe3Ex¥CacheRemove
(
P¨£
 *
pP¨£
, 
iReg
, 
nReg
){

3056 
i
 = 0;

3057  
i
<
pP¨£
->
nCﬁCache
 ){

3058 
yCﬁCache
 *
p
 = &
pP¨£
->
aCﬁCache
[
i
];

3059 if–
p
->
iReg
 >iReg &&Ö->iReg < iReg+
nReg
 ){

3060 
	`ˇcheE¡ryCÀ¨
(
pP¨£
, 
i
);

3062 
i
++;

3065 
	}
}

3072 
	$sqlôe3Ex¥CachePush
(
P¨£
 *
pP¨£
){

3073 
pP¨£
->
iCacheLevñ
++;

3074 #ifde‡
SQLITE_DEBUG


3075 if–
pP¨£
->
db
->
Êags
 & 
SQLITE_VdbeAdd›Tø˚
 ){

3076 
	`¥ötf
("PUSHÅÿ%d\n", 
pP¨£
->
iCacheLevñ
);

3079 
	}
}

3086 
	$sqlôe3Ex¥CacheP›
(
P¨£
 *
pP¨£
){

3087 
i
 = 0;

3088 
	`as£π
–
pP¨£
->
iCacheLevñ
>=1 );

3089 
pP¨£
->
iCacheLevñ
--;

3090 #ifde‡
SQLITE_DEBUG


3091 if–
pP¨£
->
db
->
Êags
 & 
SQLITE_VdbeAdd›Tø˚
 ){

3092 
	`¥ötf
("POPÅÿ%d\n", 
pP¨£
->
iCacheLevñ
);

3095  
i
<
pP¨£
->
nCﬁCache
 ){

3096 if–
pP¨£
->
aCﬁCache
[
i
].
iLevñ
>pP¨£->
iCacheLevñ
 ){

3097 
	`ˇcheE¡ryCÀ¨
(
pP¨£
, 
i
);

3099 
i
++;

3102 
	}
}

3110 
	$sqlôe3Ex¥CachePöRegi°î
(
P¨£
 *
pP¨£
, 
iReg
){

3111 
i
;

3112 
yCﬁCache
 *
p
;

3113 
i
=0, 
p
=
pP¨£
->
aCﬁCache
; i<pP¨£->
nCﬁCache
; i++,Ö++){

3114 if–
p
->
iReg
==iReg ){

3115 
p
->
ãmpReg
 = 0;

3118 
	}
}

3123 
	$sqlôe3Ex¥CodeLﬂdIndexCﬁumn
(

3124 
P¨£
 *
pP¨£
,

3125 
Index
 *
pIdx
,

3126 
iTabCur
,

3127 
iIdxCﬁ
,

3128 
ªgOut


3130 
i16
 
iTabCﬁ
 = 
pIdx
->
aiCﬁumn
[
iIdxCﬁ
];

3131 if–
iTabCﬁ
==
XN_EXPR
 ){

3132 
	`as£π
–
pIdx
->
aCﬁEx¥
 );

3133 
	`as£π
–
pIdx
->
aCﬁEx¥
->
nEx¥
>
iIdxCﬁ
 );

3134 
pP¨£
->
iSñfTab
 = 
iTabCur
;

3135 
	`sqlôe3Ex¥CodeC›y
(
pP¨£
, 
pIdx
->
aCﬁEx¥
->
a
[
iIdxCﬁ
].
pEx¥
, 
ªgOut
);

3137 
	`sqlôe3Ex¥CodeGëCﬁumnOfTabÀ
(
pP¨£
->
pVdbe
, 
pIdx
->
pTabÀ
, 
iTabCur
,

3138 
iTabCﬁ
, 
ªgOut
);

3140 
	}
}

3145 
	$sqlôe3Ex¥CodeGëCﬁumnOfTabÀ
(

3146 
Vdbe
 *
v
,

3147 
TabÀ
 *
pTab
,

3148 
iTabCur
,

3149 
iCﬁ
,

3150 
ªgOut


3152 if–
iCﬁ
<0 || iCﬁ==
pTab
->
iPKey
 ){

3153 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rowid
, 
iTabCur
, 
ªgOut
);

3155 
›
 = 
	`IsVútuÆ
(
pTab
Ë? 
OP_VCﬁumn
 : 
OP_Cﬁumn
;

3156 
x
 = 
iCﬁ
;

3157 if–!
	`HasRowid
(
pTab
Ë&& !
	`IsVútuÆ
(pTab) ){

3158 
x
 = 
	`sqlôe3CﬁumnOfIndex
(
	`sqlôe3Prim¨yKeyIndex
(
pTab
), 
iCﬁ
);

3160 
	`sqlôe3VdbeAddOp3
(
v
, 
›
, 
iTabCur
, 
x
, 
ªgOut
);

3162 if–
iCﬁ
>=0 ){

3163 
	`sqlôe3CﬁumnDeÁu…
(
v
, 
pTab
, 
iCﬁ
, 
ªgOut
);

3165 
	}
}

3179 
	$sqlôe3Ex¥CodeGëCﬁumn
(

3180 
P¨£
 *
pP¨£
,

3181 
TabÀ
 *
pTab
,

3182 
iCﬁumn
,

3183 
iTabÀ
,

3184 
iReg
,

3185 
u8
 
p5


3187 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

3188 
i
;

3189 
yCﬁCache
 *
p
;

3191 
i
=0, 
p
=
pP¨£
->
aCﬁCache
; i<pP¨£->
nCﬁCache
; i++,Ö++){

3192 if–
p
->
iTabÀ
==iTabÀ &&Ö->
iCﬁumn
==iColumn ){

3193 
p
->
Ãu
 = 
pP¨£
->
iCacheC¡
++;

3194 
	`sqlôe3Ex¥CachePöRegi°î
(
pP¨£
, 
p
->
iReg
);

3195  
p
->
iReg
;

3198 
	`as£π
–
v
!=0 );

3199 
	`sqlôe3Ex¥CodeGëCﬁumnOfTabÀ
(
v
, 
pTab
, 
iTabÀ
, 
iCﬁumn
, 
iReg
);

3200 if–
p5
 ){

3201 
	`sqlôe3VdbeCh™geP5
(
v
, 
p5
);

3203 
	`sqlôe3Ex¥CacheSt‹e
(
pP¨£
, 
iTabÀ
, 
iCﬁumn
, 
iReg
);

3205  
iReg
;

3206 
	}
}

3207 
	$sqlôe3Ex¥CodeGëCﬁumnToReg
(

3208 
P¨£
 *
pP¨£
,

3209 
TabÀ
 *
pTab
,

3210 
iCﬁumn
,

3211 
iTabÀ
,

3212 
iReg


3214 
r1
 = 
	`sqlôe3Ex¥CodeGëCﬁumn
(
pP¨£
, 
pTab
, 
iCﬁumn
, 
iTabÀ
, 
iReg
, 0);

3215 if–
r1
!=
iReg
 ) 
	`sqlôe3VdbeAddOp2
(
pP¨£
->
pVdbe
, 
OP_SC›y
,Ñ1, iReg);

3216 
	}
}

3222 
	$sqlôe3Ex¥CacheCÀ¨
(
P¨£
 *
pP¨£
){

3223 
i
;

3225 #i‡
SQLITE_DEBUG


3226 if–
pP¨£
->
db
->
Êags
 & 
SQLITE_VdbeAdd›Tø˚
 ){

3227 
	`¥ötf
("CLEAR\n");

3230 
i
=0; i<
pP¨£
->
nCﬁCache
; i++){

3231 if–
pP¨£
->
aCﬁCache
[
i
].
ãmpReg


3232 && 
pP¨£
->
nTempReg
<
	`AºaySize
’P¨£->
aTempReg
)

3234 
pP¨£
->
aTempReg
[pP¨£->
nTempReg
++] =ÖP¨£->
aCﬁCache
[
i
].
iReg
;

3237 
pP¨£
->
nCﬁCache
 = 0;

3238 
	}
}

3244 
	$sqlôe3Ex¥CacheAfföôyCh™ge
(
P¨£
 *
pP¨£
, 
iSèπ
, 
iCou¡
){

3245 
	`sqlôe3Ex¥CacheRemove
(
pP¨£
, 
iSèπ
, 
iCou¡
);

3246 
	}
}

3252 
	$sqlôe3Ex¥CodeMove
(
P¨£
 *
pP¨£
, 
iFrom
, 
iTo
, 
nReg
){

3253 
	`as£π
–
iFrom
>=
iTo
+
nReg
 || iFrom+nReg<=iTo );

3254 
	`sqlôe3VdbeAddOp3
(
pP¨£
->
pVdbe
, 
OP_Move
, 
iFrom
, 
iTo
, 
nReg
);

3255 
	`sqlôe3Ex¥CacheRemove
(
pP¨£
, 
iFrom
, 
nReg
);

3256 
	}
}

3258 #i‡
deföed
(
SQLITE_DEBUG
Ë|| deföed(
SQLITE_COVERAGE_TEST
)

3266 
	$u£dAsCﬁumnCache
(
P¨£
 *
pP¨£
, 
iFrom
, 
iTo
){

3267 
i
;

3268 
yCﬁCache
 *
p
;

3269 
i
=0, 
p
=
pP¨£
->
aCﬁCache
; i<pP¨£->
nCﬁCache
; i++,Ö++){

3270 
r
 = 
p
->
iReg
;

3271 if–
r
>=
iFrom
 &&Ñ<=
iTo
 )  1;

3274 
	}
}

3283 
	$ex¥ToRegi°î
(
Ex¥
 *
p
, 
iReg
){

3284 
p
->
›2
 =Ö->
›
;

3285 
p
->
›
 = 
TK_REGISTER
;

3286 
p
->
iTabÀ
 = 
iReg
;

3287 
	`Ex¥CÀ¨Pr›îty
(
p
, 
EP_Skù
);

3288 
	}
}

3300 
	$ex¥CodeVe˘‹
(
P¨£
 *
pP¨£
, 
Ex¥
 *
p
, *
piFªóbÀ
){

3301 
iResu…
;

3302 
nResu…
 = 
	`sqlôe3Ex¥Ve˘‹Size
(
p
);

3303 if–
nResu…
==1 ){

3304 
iResu…
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
p
, 
piFªóbÀ
);

3306 *
piFªóbÀ
 = 0;

3307 if–
p
->
›
==
TK_SELECT
 ){

3308 
iResu…
 = 
	`sqlôe3CodeSub£À˘
(
pP¨£
, 
p
, 0, 0);

3310 
i
;

3311 
iResu…
 = 
pP¨£
->
nMem
+1;

3312 
pP¨£
->
nMem
 +
nResu…
;

3313 
i
=0; i<
nResu…
; i++){

3314 
	`sqlôe3Ex¥CodeFa˘‹abÀ
(
pP¨£
, 
p
->
x
.
pLi°
->
a
[
i
].
pEx¥
, i+
iResu…
);

3318  
iResu…
;

3319 
	}
}

3333 
	$sqlôe3Ex¥CodeT¨gë
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pEx¥
, 
èrgë
){

3334 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

3335 
›
;

3336 
öReg
 = 
èrgë
;

3337 
ªgFªe1
 = 0;

3338 
ªgFªe2
 = 0;

3339 
r1
, 
r2
;

3340 
Ex¥
 
ãmpX
;

3341 
p5
 = 0;

3343 
	`as£π
–
èrgë
>0 &&Å¨gë<=
pP¨£
->
nMem
 );

3344 if–
v
==0 ){

3345 
	`as£π
–
pP¨£
->
db
->
mÆlocFaûed
 );

3349 if–
pEx¥
==0 ){

3350 
›
 = 
TK_NULL
;

3352 
›
 = 
pEx¥
->op;

3354  
›
 ){

3355 
TK_AGG_COLUMN
: {

3356 
AggInfo
 *
pAggInfo
 = 
pEx¥
->pAggInfo;

3357 
AggInfo_cﬁ
 *
pCﬁ
 = &
pAggInfo
->
aCﬁ
[
pEx¥
->
iAgg
];

3358 if–!
pAggInfo
->
dúe˘Mode
 ){

3359 
	`as£π
–
pCﬁ
->
iMem
>0 );

3360  
pCﬁ
->
iMem
;

3361 }if–
pAggInfo
->
u£S‹tögIdx
 ){

3362 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
pAggInfo
->
s‹tögIdxPTab
,

3363 
pCﬁ
->
iS‹ãrCﬁumn
, 
èrgë
);

3364  
èrgë
;

3368 
TK_COLUMN
: {

3369 
iTab
 = 
pEx¥
->
iTabÀ
;

3370 if–
iTab
<0 ){

3371 if–
pP¨£
->
ckBa£
>0 ){

3373  
pEx¥
->
iCﬁumn
 + 
pP¨£
->
ckBa£
;

3377 
iTab
 = 
pP¨£
->
iSñfTab
;

3380  
	`sqlôe3Ex¥CodeGëCﬁumn
(
pP¨£
, 
pEx¥
->
pTab
,

3381 
pEx¥
->
iCﬁumn
, 
iTab
, 
èrgë
,

3382 
pEx¥
->
›2
);

3384 
TK_INTEGER
: {

3385 
	`codeI¡egî
(
pP¨£
, 
pEx¥
, 0, 
èrgë
);

3386  
èrgë
;

3388 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


3389 
TK_FLOAT
: {

3390 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_I¡VÆue
) );

3391 
	`codeRól
(
v
, 
pEx¥
->
u
.
zTokí
, 0, 
èrgë
);

3392  
èrgë
;

3395 
TK_STRING
: {

3396 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_I¡VÆue
) );

3397 
	`sqlôe3VdbeLﬂdSåög
(
v
, 
èrgë
, 
pEx¥
->
u
.
zTokí
);

3398  
èrgë
;

3400 
TK_NULL
: {

3401 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NuŒ
, 0, 
èrgë
);

3402  
èrgë
;

3404 #i‚de‡
SQLITE_OMIT_BLOB_LITERAL


3405 
TK_BLOB
: {

3406 
n
;

3407 c⁄° *
z
;

3408 *
zBlob
;

3409 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_I¡VÆue
) );

3410 
	`as£π
–
pEx¥
->
u
.
zTokí
[0]=='x' ||ÖExpr->u.zToken[0]=='X' );

3411 
	`as£π
–
pEx¥
->
u
.
zTokí
[1]=='\'' );

3412 
z
 = &
pEx¥
->
u
.
zTokí
[2];

3413 
n
 = 
	`sqlôe3SåÀn30
(
z
) - 1;

3414 
	`as£π
–
z
[
n
]=='\'' );

3415 
zBlob
 = 
	`sqlôe3HexToBlob
(
	`sqlôe3VdbeDb
(
v
), 
z
, 
n
);

3416 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Blob
, 
n
/2, 
èrgë
, 0, 
zBlob
, 
P4_DYNAMIC
);

3417  
èrgë
;

3420 
TK_VARIABLE
: {

3421 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_I¡VÆue
) );

3422 
	`as£π
–
pEx¥
->
u
.
zTokí
!=0 );

3423 
	`as£π
–
pEx¥
->
u
.
zTokí
[0]!=0 );

3424 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_V¨übÀ
, 
pEx¥
->
iCﬁumn
, 
èrgë
);

3425 if–
pEx¥
->
u
.
zTokí
[1]!=0 ){

3426 c⁄° *
z
 = 
	`sqlôe3VLi°NumToName
(
pP¨£
->
pVLi°
, 
pEx¥
->
iCﬁumn
);

3427 
	`as£π
–
pEx¥
->
u
.
zTokí
[0]=='?' || 
	`°rcmp
’Ex¥->u.zTokí, 
z
)==0 );

3428 
pP¨£
->
pVLi°
[0] = 0;

3429 
	`sqlôe3VdbeAµídP4
(
v
, (*)
z
, 
P4_STATIC
);

3431  
èrgë
;

3433 
TK_REGISTER
: {

3434  
pEx¥
->
iTabÀ
;

3436 #i‚de‡
SQLITE_OMIT_CAST


3437 
TK_CAST
: {

3439 
öReg
 = 
	`sqlôe3Ex¥CodeT¨gë
(
pP¨£
, 
pEx¥
->
pLe·
, 
èrgë
);

3440 if–
öReg
!=
èrgë
 ){

3441 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_SC›y
, 
öReg
, 
èrgë
);

3442 
öReg
 = 
èrgë
;

3444 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Ca°
, 
èrgë
,

3445 
	`sqlôe3AfföôyTy≥
(
pEx¥
->
u
.
zTokí
, 0));

3446 
	`ã°ˇ£
–
	`u£dAsCﬁumnCache
(
pP¨£
, 
öReg
, inReg) );

3447 
	`sqlôe3Ex¥CacheAfföôyCh™ge
(
pP¨£
, 
öReg
, 1);

3448  
öReg
;

3451 
TK_IS
:

3452 
TK_ISNOT
:

3453 
›
 = (›==
TK_IS
Ë? 
TK_EQ
 : 
TK_NE
;

3454 
p5
 = 
SQLITE_NULLEQ
;

3456 
TK_LT
:

3457 
TK_LE
:

3458 
TK_GT
:

3459 
TK_GE
:

3460 
TK_NE
:

3461 
TK_EQ
: {

3462 
Ex¥
 *
pLe·
 = 
pEx¥
->pLeft;

3463 if–
	`sqlôe3Ex¥IsVe˘‹
(
pLe·
) ){

3464 
	`codeVe˘‹Com∑ª
(
pP¨£
, 
pEx¥
, 
èrgë
, 
›
, 
p5
);

3466 
r1
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pLe·
, &
ªgFªe1
);

3467 
r2
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pEx¥
->
pRight
, &
ªgFªe2
);

3468 
	`codeCom∑ª
(
pP¨£
, 
pLe·
, 
pEx¥
->
pRight
, 
›
,

3469 
r1
, 
r2
, 
öReg
, 
SQLITE_STOREP2
 | 
p5
);

3470 
	`as£π
(
TK_LT
==
OP_Lt
); 
	`ã°ˇ£
(
›
==OP_Lt); 
	`VdbeCovîageIf
(
v
,op==OP_Lt);

3471 
	`as£π
(
TK_LE
==
OP_Le
); 
	`ã°ˇ£
(
›
==OP_Le); 
	`VdbeCovîageIf
(
v
,op==OP_Le);

3472 
	`as£π
(
TK_GT
==
OP_Gt
); 
	`ã°ˇ£
(
›
==OP_Gt); 
	`VdbeCovîageIf
(
v
,op==OP_Gt);

3473 
	`as£π
(
TK_GE
==
OP_Ge
); 
	`ã°ˇ£
(
›
==OP_Ge); 
	`VdbeCovîageIf
(
v
,op==OP_Ge);

3474 
	`as£π
(
TK_EQ
==
OP_Eq
); 
	`ã°ˇ£
(
›
==OP_Eq); 
	`VdbeCovîageIf
(
v
,op==OP_Eq);

3475 
	`as£π
(
TK_NE
==
OP_Ne
); 
	`ã°ˇ£
(
›
==OP_Ne); 
	`VdbeCovîageIf
(
v
,op==OP_Ne);

3476 
	`ã°ˇ£
–
ªgFªe1
==0 );

3477 
	`ã°ˇ£
–
ªgFªe2
==0 );

3481 
TK_AND
:

3482 
TK_OR
:

3483 
TK_PLUS
:

3484 
TK_STAR
:

3485 
TK_MINUS
:

3486 
TK_REM
:

3487 
TK_BITAND
:

3488 
TK_BITOR
:

3489 
TK_SLASH
:

3490 
TK_LSHIFT
:

3491 
TK_RSHIFT
:

3492 
TK_CONCAT
: {

3493 
	`as£π
–
TK_AND
==
OP_And
 ); 
	`ã°ˇ£
–
›
==TK_AND );

3494 
	`as£π
–
TK_OR
==
OP_Or
 ); 
	`ã°ˇ£
–
›
==TK_OR );

3495 
	`as£π
–
TK_PLUS
==
OP_Add
 ); 
	`ã°ˇ£
–
›
==TK_PLUS );

3496 
	`as£π
–
TK_MINUS
==
OP_Subåa˘
 ); 
	`ã°ˇ£
–
›
==TK_MINUS );

3497 
	`as£π
–
TK_REM
==
OP_Remaödî
 ); 
	`ã°ˇ£
–
›
==TK_REM );

3498 
	`as£π
–
TK_BITAND
==
OP_BôAnd
 ); 
	`ã°ˇ£
–
›
==TK_BITAND );

3499 
	`as£π
–
TK_BITOR
==
OP_BôOr
 ); 
	`ã°ˇ£
–
›
==TK_BITOR );

3500 
	`as£π
–
TK_SLASH
==
OP_Divide
 ); 
	`ã°ˇ£
–
›
==TK_SLASH );

3501 
	`as£π
–
TK_LSHIFT
==
OP_Shi·Le·
 ); 
	`ã°ˇ£
–
›
==TK_LSHIFT );

3502 
	`as£π
–
TK_RSHIFT
==
OP_Shi·Right
 ); 
	`ã°ˇ£
–
›
==TK_RSHIFT );

3503 
	`as£π
–
TK_CONCAT
==
OP_C⁄ˇt
 ); 
	`ã°ˇ£
–
›
==TK_CONCAT );

3504 
r1
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pEx¥
->
pLe·
, &
ªgFªe1
);

3505 
r2
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pEx¥
->
pRight
, &
ªgFªe2
);

3506 
	`sqlôe3VdbeAddOp3
(
v
, 
›
, 
r2
, 
r1
, 
èrgë
);

3507 
	`ã°ˇ£
–
ªgFªe1
==0 );

3508 
	`ã°ˇ£
–
ªgFªe2
==0 );

3511 
TK_UMINUS
: {

3512 
Ex¥
 *
pLe·
 = 
pEx¥
->pLeft;

3513 
	`as£π
–
pLe·
 );

3514 if–
pLe·
->
›
==
TK_INTEGER
 ){

3515 
	`codeI¡egî
(
pP¨£
, 
pLe·
, 1, 
èrgë
);

3516  
èrgë
;

3517 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


3518 }if–
pLe·
->
›
==
TK_FLOAT
 ){

3519 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_I¡VÆue
) );

3520 
	`codeRól
(
v
, 
pLe·
->
u
.
zTokí
, 1, 
èrgë
);

3521  
èrgë
;

3524 
ãmpX
.
›
 = 
TK_INTEGER
;

3525 
ãmpX
.
Êags
 = 
EP_I¡VÆue
|
EP_TokíO∆y
;

3526 
ãmpX
.
u
.
iVÆue
 = 0;

3527 
r1
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, &
ãmpX
, &
ªgFªe1
);

3528 
r2
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pEx¥
->
pLe·
, &
ªgFªe2
);

3529 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Subåa˘
, 
r2
, 
r1
, 
èrgë
);

3530 
	`ã°ˇ£
–
ªgFªe2
==0 );

3534 
TK_BITNOT
:

3535 
TK_NOT
: {

3536 
	`as£π
–
TK_BITNOT
==
OP_BôNŸ
 ); 
	`ã°ˇ£
–
›
==TK_BITNOT );

3537 
	`as£π
–
TK_NOT
==
OP_NŸ
 ); 
	`ã°ˇ£
–
›
==TK_NOT );

3538 
r1
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pEx¥
->
pLe·
, &
ªgFªe1
);

3539 
	`ã°ˇ£
–
ªgFªe1
==0 );

3540 
	`sqlôe3VdbeAddOp2
(
v
, 
›
, 
r1
, 
öReg
);

3543 
TK_ISNULL
:

3544 
TK_NOTNULL
: {

3545 
addr
;

3546 
	`as£π
–
TK_ISNULL
==
OP_IsNuŒ
 ); 
	`ã°ˇ£
–
›
==TK_ISNULL );

3547 
	`as£π
–
TK_NOTNULL
==
OP_NŸNuŒ
 ); 
	`ã°ˇ£
–
›
==TK_NOTNULL );

3548 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 1, 
èrgë
);

3549 
r1
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pEx¥
->
pLe·
, &
ªgFªe1
);

3550 
	`ã°ˇ£
–
ªgFªe1
==0 );

3551 
addr
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
›
, 
r1
);

3552 
	`VdbeCovîageIf
(
v
, 
›
==
TK_ISNULL
);

3553 
	`VdbeCovîageIf
(
v
, 
›
==
TK_NOTNULL
);

3554 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 0, 
èrgë
);

3555 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr
);

3558 
TK_AGG_FUNCTION
: {

3559 
AggInfo
 *
pInfo
 = 
pEx¥
->
pAggInfo
;

3560 if–
pInfo
==0 ){

3561 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_I¡VÆue
) );

3562 
	`sqlôe3Eº‹Msg
(
pP¨£
, "misu£ o‡aggªg©e: %s()", 
pEx¥
->
u
.
zTokí
);

3564  
pInfo
->
aFunc
[
pEx¥
->
iAgg
].
iMem
;

3568 
TK_FUNCTION
: {

3569 
Ex¥Li°
 *
pF¨g
;

3570 
nF¨g
;

3571 
FuncDef
 *
pDef
;

3572 c⁄° *
zId
;

3573 
u32
 
c⁄°Mask
 = 0;

3574 
i
;

3575 
sqlôe3
 *
db
 = 
pP¨£
->db;

3576 
u8
 
íc
 = 
	`ENC
(
db
);

3577 
CﬁlSeq
 *
pCﬁl
 = 0;

3579 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
) );

3580 if–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_TokíO∆y
) ){

3581 
pF¨g
 = 0;

3583 
pF¨g
 = 
pEx¥
->
x
.
pLi°
;

3585 
nF¨g
 = 
pF¨g
 ?ÖF¨g->
nEx¥
 : 0;

3586 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_I¡VÆue
) );

3587 
zId
 = 
pEx¥
->
u
.
zTokí
;

3588 
pDef
 = 
	`sqlôe3FödFun˘i⁄
(
db
, 
zId
, 
nF¨g
, 
íc
, 0);

3589 #ifde‡
SQLITE_ENABLE_UNKNOWN_SQL_FUNCTION


3590 if–
pDef
==0 && 
pP¨£
->
ex∂aö
 ){

3591 
pDef
 = 
	`sqlôe3FödFun˘i⁄
(
db
, "unknown", 
nF¨g
, 
íc
, 0);

3594 if–
pDef
==0 ||ÖDef->
xFöÆize
!=0 ){

3595 
	`sqlôe3Eº‹Msg
(
pP¨£
, "unknow¿fun˘i⁄: %s()", 
zId
);

3603 if–
pDef
->
funcFœgs
 & 
SQLITE_FUNC_COALESCE
 ){

3604 
ídCﬂÀs˚
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

3605 
	`as£π
–
nF¨g
>=2 );

3606 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pF¨g
->
a
[0].
pEx¥
, 
èrgë
);

3607 
i
=1; i<
nF¨g
; i++){

3608 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NŸNuŒ
, 
èrgë
, 
ídCﬂÀs˚
);

3609 
	`VdbeCovîage
(
v
);

3610 
	`sqlôe3Ex¥CacheRemove
(
pP¨£
, 
èrgë
, 1);

3611 
	`sqlôe3Ex¥CachePush
(
pP¨£
);

3612 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pF¨g
->
a
[
i
].
pEx¥
, 
èrgë
);

3613 
	`sqlôe3Ex¥CacheP›
(
pP¨£
);

3615 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
ídCﬂÀs˚
);

3622 if–
pDef
->
funcFœgs
 & 
SQLITE_FUNC_UNLIKELY
 ){

3623 
	`as£π
–
nF¨g
>=1 );

3624  
	`sqlôe3Ex¥CodeT¨gë
(
pP¨£
, 
pF¨g
->
a
[0].
pEx¥
, 
èrgë
);

3627 
i
=0; i<
nF¨g
; i++){

3628 if–
i
<32 && 
	`sqlôe3Ex¥IsC⁄°™t
(
pF¨g
->
a
[i].
pEx¥
) ){

3629 
	`ã°ˇ£
–
i
==31 );

3630 
c⁄°Mask
 |
	`MASKBIT32
(
i
);

3632 if–(
pDef
->
funcFœgs
 & 
SQLITE_FUNC_NEEDCOLL
)!=0 && !
pCﬁl
 ){

3633 
pCﬁl
 = 
	`sqlôe3Ex¥CﬁlSeq
(
pP¨£
, 
pF¨g
->
a
[
i
].
pEx¥
);

3636 if–
pF¨g
 ){

3637 if–
c⁄°Mask
 ){

3638 
r1
 = 
pP¨£
->
nMem
+1;

3639 
pP¨£
->
nMem
 +
nF¨g
;

3641 
r1
 = 
	`sqlôe3GëTempR™ge
(
pP¨£
, 
nF¨g
);

3649 if–(
pDef
->
funcFœgs
 & (
SQLITE_FUNC_LENGTH
|
SQLITE_FUNC_TYPEOF
))!=0 ){

3650 
u8
 
ex¥Op
;

3651 
	`as£π
–
nF¨g
==1 );

3652 
	`as£π
–
pF¨g
->
a
[0].
pEx¥
!=0 );

3653 
ex¥Op
 = 
pF¨g
->
a
[0].
pEx¥
->
›
;

3654 if–
ex¥Op
==
TK_COLUMN
 ||Éx¥Op==
TK_AGG_COLUMN
 ){

3655 
	`as£π
–
SQLITE_FUNC_LENGTH
==
OPFLAG_LENGTHARG
 );

3656 
	`as£π
–
SQLITE_FUNC_TYPEOF
==
OPFLAG_TYPEOFARG
 );

3657 
	`ã°ˇ£
–
pDef
->
funcFœgs
 & 
OPFLAG_LENGTHARG
 );

3658 
pF¨g
->
a
[0].
pEx¥
->
›2
 =

3659 
pDef
->
funcFœgs
 & (
OPFLAG_LENGTHARG
|
OPFLAG_TYPEOFARG
);

3663 
	`sqlôe3Ex¥CachePush
(
pP¨£
);

3664 
	`sqlôe3Ex¥CodeEx¥Li°
(
pP¨£
, 
pF¨g
, 
r1
, 0,

3665 
SQLITE_ECEL_DUP
|
SQLITE_ECEL_FACTOR
);

3666 
	`sqlôe3Ex¥CacheP›
(
pP¨£
);

3668 
r1
 = 0;

3670 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


3683 if–
nF¨g
>=2 && (
pEx¥
->
Êags
 & 
EP_InfixFunc
) ){

3684 
pDef
 = 
	`sqlôe3VèbOvîlﬂdFun˘i⁄
(
db
,ÖDef, 
nF¨g
, 
pF¨g
->
a
[1].
pEx¥
);

3685 }if–
nF¨g
>0 ){

3686 
pDef
 = 
	`sqlôe3VèbOvîlﬂdFun˘i⁄
(
db
,ÖDef, 
nF¨g
, 
pF¨g
->
a
[0].
pEx¥
);

3689 if–
pDef
->
funcFœgs
 & 
SQLITE_FUNC_NEEDCOLL
 ){

3690 if–!
pCﬁl
 )ÖCﬁ»
db
->
pDÊtCﬁl
;

3691 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_CﬁlSeq
, 0, 0, 0, (*)
pCﬁl
, 
P4_COLLSEQ
);

3693 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Fun˘i⁄0
, 
c⁄°Mask
, 
r1
, 
èrgë
,

3694 (*)
pDef
, 
P4_FUNCDEF
);

3695 
	`sqlôe3VdbeCh™geP5
(
v
, (
u8
)
nF¨g
);

3696 if–
nF¨g
 && 
c⁄°Mask
==0 ){

3697 
	`sqlôe3Rñó£TempR™ge
(
pP¨£
, 
r1
, 
nF¨g
);

3699  
èrgë
;

3701 #i‚de‡
SQLITE_OMIT_SUBQUERY


3702 
TK_EXISTS
:

3703 
TK_SELECT
: {

3704 
nCﬁ
;

3705 
	`ã°ˇ£
–
›
==
TK_EXISTS
 );

3706 
	`ã°ˇ£
–
›
==
TK_SELECT
 );

3707 if–
›
==
TK_SELECT
 && (
nCﬁ
 = 
pEx¥
->
x
.
pSñe˘
->
pELi°
->
nEx¥
)!=1 ){

3708 
	`sqlôe3Sub£À˘Eº‹
(
pP¨£
, 
nCﬁ
, 1);

3710  
	`sqlôe3CodeSub£À˘
(
pP¨£
, 
pEx¥
, 0, 0);

3714 
TK_SELECT_COLUMN
: {

3715 if–
pEx¥
->
pLe·
->
iTabÀ
==0 ){

3716 
pEx¥
->
pLe·
->
iTabÀ
 = 
	`sqlôe3CodeSub£À˘
(
pP¨£
,ÖExpr->pLeft, 0, 0);

3718  
pEx¥
->
pLe·
->
iTabÀ
 +ÖEx¥->
iCﬁumn
;

3720 
TK_IN
: {

3721 
de°IfFÆ£
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

3722 
de°IfNuŒ
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

3723 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NuŒ
, 0, 
èrgë
);

3724 
	`sqlôe3Ex¥CodeIN
(
pP¨£
, 
pEx¥
, 
de°IfFÆ£
, 
de°IfNuŒ
);

3725 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 1, 
èrgë
);

3726 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
de°IfFÆ£
);

3727 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_AddImm
, 
èrgë
, 0);

3728 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
de°IfNuŒ
);

3729  
èrgë
;

3745 
TK_BETWEEN
: {

3746 
	`ex¥CodeBëwìn
(
pP¨£
, 
pEx¥
, 
èrgë
, 0, 0);

3747  
èrgë
;

3749 
TK_SPAN
:

3750 
TK_COLLATE
:

3751 
TK_UPLUS
: {

3752  
	`sqlôe3Ex¥CodeT¨gë
(
pP¨£
, 
pEx¥
->
pLe·
, 
èrgë
);

3755 
TK_TRIGGER
: {

3781 
TabÀ
 *
pTab
 = 
pEx¥
->pTab;

3782 
p1
 = 
pEx¥
->
iTabÀ
 * (
pTab
->
nCﬁ
+1Ë+ 1 +ÖEx¥->
iCﬁumn
;

3784 
	`as£π
–
pEx¥
->
iTabÀ
==0 ||ÖExpr->iTable==1 );

3785 
	`as£π
–
pEx¥
->
iCﬁumn
>=-1 &&ÖEx¥->iCﬁumn<
pTab
->
nCﬁ
 );

3786 
	`as£π
–
pTab
->
iPKey
<0 || 
pEx¥
->
iCﬁumn
!=pTab->iPKey );

3787 
	`as£π
–
p1
>=0 &&Ö1<(
pTab
->
nCﬁ
*2+2) );

3789 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_P¨am
, 
p1
, 
èrgë
);

3790 
	`VdbeCommít
((
v
, "%s.%s -> $%d",

3791 (
pEx¥
->
iTabÀ
 ? "new" : "old"),

3792 (
pEx¥
->
iCﬁumn
<0 ? "rowid" :ÖEx¥->
pTab
->
aCﬁ
[pEx¥->iCﬁumn].
zName
),

3793 
èrgë


3796 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


3802 if–
pEx¥
->
iCﬁumn
>=0

3803 && 
pTab
->
aCﬁ
[
pEx¥
->
iCﬁumn
].
afföôy
==
SQLITE_AFF_REAL


3805 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_RólAfföôy
, 
èrgë
);

3811 
TK_VECTOR
: {

3812 
	`sqlôe3Eº‹Msg
(
pP¨£
, "row value misused");

3837 : 
	`as£π
–
›
==
TK_CASE
 ); {

3838 
ídLabñ
;

3839 
√xtCa£
;

3840 
nEx¥
;

3841 
i
;

3842 
Ex¥Li°
 *
pELi°
;

3843 
Ex¥Li°_ôem
 *
aLi°ñem
;

3844 
Ex¥
 
›Com∑ª
;

3845 
Ex¥
 *
pX
;

3846 
Ex¥
 *
pTe°
 = 0;

3847 
	`VVA_ONLY
–
iCacheLevñ
 = 
pP¨£
->iCacheLevel; )

3849 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
Ë&&ÖEx¥->
x
.
pLi°
 );

3850 
	`as£π
(
pEx¥
->
x
.
pLi°
->
nEx¥
 > 0);

3851 
pELi°
 = 
pEx¥
->
x
.
pLi°
;

3852 
aLi°ñem
 = 
pELi°
->
a
;

3853 
nEx¥
 = 
pELi°
->nExpr;

3854 
ídLabñ
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

3855 if–(
pX
 = 
pEx¥
->
pLe·
)!=0 ){

3856 
ãmpX
 = *
pX
;

3857 
	`ã°ˇ£
–
pX
->
›
==
TK_COLUMN
 );

3858 
	`ex¥ToRegi°î
(&
ãmpX
, 
	`ex¥CodeVe˘‹
(
pP¨£
, &ãmpX, &
ªgFªe1
));

3859 
	`ã°ˇ£
–
ªgFªe1
==0 );

3860 
	`mem£t
(&
›Com∑ª
, 0, (opCompare));

3861 
›Com∑ª
.
›
 = 
TK_EQ
;

3862 
›Com∑ª
.
pLe·
 = &
ãmpX
;

3863 
pTe°
 = &
›Com∑ª
;

3868 
ªgFªe1
 = 0;

3870 
i
=0; i<
nEx¥
-1; i=i+2){

3871 
	`sqlôe3Ex¥CachePush
(
pP¨£
);

3872 if–
pX
 ){

3873 
	`as£π
–
pTe°
!=0 );

3874 
›Com∑ª
.
pRight
 = 
aLi°ñem
[
i
].
pEx¥
;

3876 
pTe°
 = 
aLi°ñem
[
i
].
pEx¥
;

3878 
√xtCa£
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

3879 
	`ã°ˇ£
–
pTe°
->
›
==
TK_COLUMN
 );

3880 
	`sqlôe3Ex¥IfFÆ£
(
pP¨£
, 
pTe°
, 
√xtCa£
, 
SQLITE_JUMPIFNULL
);

3881 
	`ã°ˇ£
–
aLi°ñem
[
i
+1].
pEx¥
->
›
==
TK_COLUMN
 );

3882 
	`sqlôe3Ex¥Code
(
pP¨£
, 
aLi°ñem
[
i
+1].
pEx¥
, 
èrgë
);

3883 
	`sqlôe3VdbeGŸo
(
v
, 
ídLabñ
);

3884 
	`sqlôe3Ex¥CacheP›
(
pP¨£
);

3885 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
√xtCa£
);

3887 if–(
nEx¥
&1)!=0 ){

3888 
	`sqlôe3Ex¥CachePush
(
pP¨£
);

3889 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pELi°
->
a
[
nEx¥
-1].
pEx¥
, 
èrgë
);

3890 
	`sqlôe3Ex¥CacheP›
(
pP¨£
);

3892 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NuŒ
, 0, 
èrgë
);

3894 
	`as£π
–
pP¨£
->
db
->
mÆlocFaûed
 ||ÖP¨£->
nEº
>0

3895 || 
pP¨£
->
iCacheLevñ
==iCacheLevel );

3896 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
ídLabñ
);

3899 #i‚de‡
SQLITE_OMIT_TRIGGER


3900 
TK_RAISE
: {

3901 
	`as£π
–
pEx¥
->
afföôy
==
OE_Rﬁlback


3902 || 
pEx¥
->
afföôy
==
OE_Ab‹t


3903 || 
pEx¥
->
afföôy
==
OE_Faû


3904 || 
pEx¥
->
afföôy
==
OE_Ign‹e


3906 if–!
pP¨£
->
pTriggîTab
 ){

3907 
	`sqlôe3Eº‹Msg
(
pP¨£
,

3911 if–
pEx¥
->
afföôy
==
OE_Ab‹t
 ){

3912 
	`sqlôe3MayAb‹t
(
pP¨£
);

3914 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_I¡VÆue
) );

3915 if–
pEx¥
->
afföôy
==
OE_Ign‹e
 ){

3916 
	`sqlôe3VdbeAddOp4
(

3917 
v
, 
OP_HÆt
, 
SQLITE_OK
, 
OE_Ign‹e
, 0, 
pEx¥
->
u
.
zTokí
,0);

3918 
	`VdbeCovîage
(
v
);

3920 
	`sqlôe3HÆtC⁄°øöt
(
pP¨£
, 
SQLITE_CONSTRAINT_TRIGGER
,

3921 
pEx¥
->
afföôy
,ÖEx¥->
u
.
zTokí
, 0, 0);

3928 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgFªe1
);

3929 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgFªe2
);

3930  
öReg
;

3931 
	}
}

3936 
	$sqlôe3Ex¥CodeAtInô
(

3937 
P¨£
 *
pP¨£
,

3938 
Ex¥
 *
pEx¥
,

3939 
ªgDe°
,

3940 
u8
 
ªußbÀ


3942 
Ex¥Li°
 *
p
;

3943 
	`as£π
–
	`C⁄°Fa˘‹Ok
(
pP¨£
) );

3944 
p
 = 
pP¨£
->
pC⁄°Ex¥
;

3945 
pEx¥
 = 
	`sqlôe3Ex¥Dup
(
pP¨£
->
db
,ÖExpr, 0);

3946 
p
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
,Ö, 
pEx¥
);

3947 if–
p
 ){

3948 
Ex¥Li°_ôem
 *
pIãm
 = &
p
->
a
[p->
nEx¥
-1];

3949 
pIãm
->
u
.
iC⁄°Ex¥Reg
 = 
ªgDe°
;

3950 
pIãm
->
ªußbÀ
 =Ñeusable;

3952 
pP¨£
->
pC⁄°Ex¥
 = 
p
;

3953 
	}
}

3968 
	$sqlôe3Ex¥CodeTemp
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pEx¥
, *
pReg
){

3969 
r2
;

3970 
pEx¥
 = 
	`sqlôe3Ex¥SkùCﬁœã
(pExpr);

3971 if–
	`C⁄°Fa˘‹Ok
(
pP¨£
)

3972 && 
pEx¥
->
›
!=
TK_REGISTER


3973 && 
	`sqlôe3Ex¥IsC⁄°™tNŸJoö
(
pEx¥
)

3975 
Ex¥Li°
 *
p
 = 
pP¨£
->
pC⁄°Ex¥
;

3976 
i
;

3977 *
pReg
 = 0;

3978 if–
p
 ){

3979 
Ex¥Li°_ôem
 *
pIãm
;

3980 
pIãm
=
p
->
a
, 
i
ı->
nEx¥
; i>0;ÖItem++, i--){

3981 if–
pIãm
->
ªußbÀ
 && 
	`sqlôe3Ex¥Com∑ª
’Iãm->
pEx¥
,pExpr,-1)==0 ){

3982  
pIãm
->
u
.
iC⁄°Ex¥Reg
;

3986 
r2
 = ++
pP¨£
->
nMem
;

3987 
	`sqlôe3Ex¥CodeAtInô
(
pP¨£
, 
pEx¥
, 
r2
, 1);

3989 
r1
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

3990 
r2
 = 
	`sqlôe3Ex¥CodeT¨gë
(
pP¨£
, 
pEx¥
, 
r1
);

3991 if–
r2
==
r1
 ){

3992 *
pReg
 = 
r1
;

3994 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
r1
);

3995 *
pReg
 = 0;

3998  
r2
;

3999 
	}
}

4006 
	$sqlôe3Ex¥Code
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pEx¥
, 
èrgë
){

4007 
öReg
;

4009 
	`as£π
–
èrgë
>0 &&Å¨gë<=
pP¨£
->
nMem
 );

4010 if–
pEx¥
 &&ÖEx¥->
›
==
TK_REGISTER
 ){

4011 
	`sqlôe3VdbeAddOp2
(
pP¨£
->
pVdbe
, 
OP_C›y
, 
pEx¥
->
iTabÀ
, 
èrgë
);

4013 
öReg
 = 
	`sqlôe3Ex¥CodeT¨gë
(
pP¨£
, 
pEx¥
, 
èrgë
);

4014 
	`as£π
–
pP¨£
->
pVdbe
!=0 ||ÖP¨£->
db
->
mÆlocFaûed
 );

4015 if–
öReg
!=
èrgë
 && 
pP¨£
->
pVdbe
 ){

4016 
	`sqlôe3VdbeAddOp2
(
pP¨£
->
pVdbe
, 
OP_SC›y
, 
öReg
, 
èrgë
);

4019 
	}
}

4026 
	$sqlôe3Ex¥CodeC›y
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pEx¥
, 
èrgë
){

4027 
sqlôe3
 *
db
 = 
pP¨£
->db;

4028 
pEx¥
 = 
	`sqlôe3Ex¥Dup
(
db
,ÖExpr, 0);

4029 if–!
db
->
mÆlocFaûed
 ) 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pEx¥
, 
èrgë
);

4030 
	`sqlôe3Ex¥Dñëe
(
db
, 
pEx¥
);

4031 
	}
}

4039 
	$sqlôe3Ex¥CodeFa˘‹abÀ
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pEx¥
, 
èrgë
){

4040 if–
pP¨£
->
okC⁄°Fa˘‹
 && 
	`sqlôe3Ex¥IsC⁄°™t
(
pEx¥
) ){

4041 
	`sqlôe3Ex¥CodeAtInô
(
pP¨£
, 
pEx¥
, 
èrgë
, 0);

4043 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pEx¥
, 
èrgë
);

4045 
	}
}

4059 
	$sqlôe3Ex¥CodeAndCache
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pEx¥
, 
èrgë
){

4060 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

4061 
iMem
;

4063 
	`as£π
–
èrgë
>0 );

4064 
	`as£π
–
pEx¥
->
›
!=
TK_REGISTER
 );

4065 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pEx¥
, 
èrgë
);

4066 
iMem
 = ++
pP¨£
->
nMem
;

4067 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_C›y
, 
èrgë
, 
iMem
);

4068 
	`ex¥ToRegi°î
(
pEx¥
, 
iMem
);

4069 
	}
}

4087 
	$sqlôe3Ex¥CodeEx¥Li°
(

4088 
P¨£
 *
pP¨£
,

4089 
Ex¥Li°
 *
pLi°
,

4090 
èrgë
,

4091 
§cReg
,

4092 
u8
 
Êags


4094 
Ex¥Li°_ôem
 *
pIãm
;

4095 
i
, 
j
, 
n
;

4096 
u8
 
c›yOp
 = (
Êags
 & 
SQLITE_ECEL_DUP
Ë? 
OP_C›y
 : 
OP_SC›y
;

4097 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

4098 
	`as£π
–
pLi°
!=0 );

4099 
	`as£π
–
èrgë
>0 );

4100 
	`as£π
–
pP¨£
->
pVdbe
!=0 );

4101 
n
 = 
pLi°
->
nEx¥
;

4102 if–!
	`C⁄°Fa˘‹Ok
(
pP¨£
ËË
Êags
 &~
SQLITE_ECEL_FACTOR
;

4103 
pIãm
=
pLi°
->
a
, 
i
=0; i<
n
; i++,ÖItem++){

4104 
Ex¥
 *
pEx¥
 = 
pIãm
->pExpr;

4105 if–(
Êags
 & 
SQLITE_ECEL_REF
)!=0 && (
j
 = 
pIãm
->
u
.
x
.
iOrdîByCﬁ
)>0 ){

4106 if–
Êags
 & 
SQLITE_ECEL_OMITREF
 ){

4107 
i
--;

4108 
n
--;

4110 
	`sqlôe3VdbeAddOp2
(
v
, 
c›yOp
, 
j
+
§cReg
-1, 
èrgë
+
i
);

4112 }if–(
Êags
 & 
SQLITE_ECEL_FACTOR
)!=0 && 
	`sqlôe3Ex¥IsC⁄°™t
(
pEx¥
) ){

4113 
	`sqlôe3Ex¥CodeAtInô
(
pP¨£
, 
pEx¥
, 
èrgë
+
i
, 0);

4115 
öReg
 = 
	`sqlôe3Ex¥CodeT¨gë
(
pP¨£
, 
pEx¥
, 
èrgë
+
i
);

4116 if–
öReg
!=
èrgë
+
i
 ){

4117 
VdbeOp
 *
pOp
;

4118 if–
c›yOp
==
OP_C›y


4119 && (
pOp
=
	`sqlôe3VdbeGëOp
(
v
, -1))->
›code
==
OP_C›y


4120 && 
pOp
->
p1
+pOp->
p3
+1==
öReg


4121 && 
pOp
->
p2
+pOp->
p3
+1==
èrgë
+
i


4123 
pOp
->
p3
++;

4125 
	`sqlôe3VdbeAddOp2
(
v
, 
c›yOp
, 
öReg
, 
èrgë
+
i
);

4130  
n
;

4131 
	}
}

4153 
	$ex¥CodeBëwìn
(

4154 
P¨£
 *
pP¨£
,

4155 
Ex¥
 *
pEx¥
,

4156 
de°
,

4157 (*
xJump
)(
P¨£
*,
Ex¥
*,,),

4158 
jumpIfNuŒ


4160 
Ex¥
 
ex¥And
;

4161 
Ex¥
 
compLe·
;

4162 
Ex¥
 
compRight
;

4163 
Ex¥
 
ex¥X
;

4164 
ªgFªe1
 = 0;

4167 
	`mem£t
(&
compLe·
, 0, (
Ex¥
));

4168 
	`mem£t
(&
compRight
, 0, (
Ex¥
));

4169 
	`mem£t
(&
ex¥And
, 0, (
Ex¥
));

4171 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
) );

4172 
ex¥X
 = *
pEx¥
->
pLe·
;

4173 
ex¥And
.
›
 = 
TK_AND
;

4174 
ex¥And
.
pLe·
 = &
compLe·
;

4175 
ex¥And
.
pRight
 = &
compRight
;

4176 
compLe·
.
›
 = 
TK_GE
;

4177 
compLe·
.
pLe·
 = &
ex¥X
;

4178 
compLe·
.
pRight
 = 
pEx¥
->
x
.
pLi°
->
a
[0].pExpr;

4179 
compRight
.
›
 = 
TK_LE
;

4180 
compRight
.
pLe·
 = &
ex¥X
;

4181 
compRight
.
pRight
 = 
pEx¥
->
x
.
pLi°
->
a
[1].pExpr;

4182 
	`ex¥ToRegi°î
(&
ex¥X
, 
	`ex¥CodeVe˘‹
(
pP¨£
, &ex¥X, &
ªgFªe1
));

4183 if–
xJump
 ){

4184 
	`xJump
(
pP¨£
, &
ex¥And
, 
de°
, 
jumpIfNuŒ
);

4191 
ex¥X
.
Êags
 |
EP_FromJoö
;

4192 
	`sqlôe3Ex¥CodeT¨gë
(
pP¨£
, &
ex¥And
, 
de°
);

4194 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgFªe1
);

4197 
	`ã°ˇ£
–
xJump
==
sqlôe3Ex¥IfTrue
 && 
jumpIfNuŒ
==0 && 
ªgFªe1
==0 );

4198 
	`ã°ˇ£
–
xJump
==
sqlôe3Ex¥IfTrue
 && 
jumpIfNuŒ
==0 && 
ªgFªe1
!=0 );

4199 
	`ã°ˇ£
–
xJump
==
sqlôe3Ex¥IfTrue
 && 
jumpIfNuŒ
!=0 && 
ªgFªe1
==0 );

4200 
	`ã°ˇ£
–
xJump
==
sqlôe3Ex¥IfTrue
 && 
jumpIfNuŒ
!=0 && 
ªgFªe1
!=0 );

4201 
	`ã°ˇ£
–
xJump
==
sqlôe3Ex¥IfFÆ£
 && 
jumpIfNuŒ
==0 && 
ªgFªe1
==0 );

4202 
	`ã°ˇ£
–
xJump
==
sqlôe3Ex¥IfFÆ£
 && 
jumpIfNuŒ
==0 && 
ªgFªe1
!=0 );

4203 
	`ã°ˇ£
–
xJump
==
sqlôe3Ex¥IfFÆ£
 && 
jumpIfNuŒ
!=0 && 
ªgFªe1
==0 );

4204 
	`ã°ˇ£
–
xJump
==
sqlôe3Ex¥IfFÆ£
 && 
jumpIfNuŒ
!=0 && 
ªgFªe1
!=0 );

4205 
	`ã°ˇ£
–
xJump
==0 );

4206 
	}
}

4222 
	$sqlôe3Ex¥IfTrue
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pEx¥
, 
de°
, 
jumpIfNuŒ
){

4223 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

4224 
›
 = 0;

4225 
ªgFªe1
 = 0;

4226 
ªgFªe2
 = 0;

4227 
r1
, 
r2
;

4229 
	`as£π
–
jumpIfNuŒ
==
SQLITE_JUMPIFNULL
 || jumpIfNull==0 );

4230 if–
	`NEVER
(
v
==0) ) ;

4231 if–
	`NEVER
(
pEx¥
==0) ) ;

4232 
›
 = 
pEx¥
->op;

4233  
›
 ){

4234 
TK_AND
: {

4235 
d2
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

4236 
	`ã°ˇ£
–
jumpIfNuŒ
==0 );

4237 
	`sqlôe3Ex¥IfFÆ£
(
pP¨£
, 
pEx¥
->
pLe·
, 
d2
,
jumpIfNuŒ
^
SQLITE_JUMPIFNULL
);

4238 
	`sqlôe3Ex¥CachePush
(
pP¨£
);

4239 
	`sqlôe3Ex¥IfTrue
(
pP¨£
, 
pEx¥
->
pRight
, 
de°
, 
jumpIfNuŒ
);

4240 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
d2
);

4241 
	`sqlôe3Ex¥CacheP›
(
pP¨£
);

4244 
TK_OR
: {

4245 
	`ã°ˇ£
–
jumpIfNuŒ
==0 );

4246 
	`sqlôe3Ex¥IfTrue
(
pP¨£
, 
pEx¥
->
pLe·
, 
de°
, 
jumpIfNuŒ
);

4247 
	`sqlôe3Ex¥CachePush
(
pP¨£
);

4248 
	`sqlôe3Ex¥IfTrue
(
pP¨£
, 
pEx¥
->
pRight
, 
de°
, 
jumpIfNuŒ
);

4249 
	`sqlôe3Ex¥CacheP›
(
pP¨£
);

4252 
TK_NOT
: {

4253 
	`ã°ˇ£
–
jumpIfNuŒ
==0 );

4254 
	`sqlôe3Ex¥IfFÆ£
(
pP¨£
, 
pEx¥
->
pLe·
, 
de°
, 
jumpIfNuŒ
);

4257 
TK_IS
:

4258 
TK_ISNOT
:

4259 
	`ã°ˇ£
–
›
==
TK_IS
 );

4260 
	`ã°ˇ£
–
›
==
TK_ISNOT
 );

4261 
›
 = (›==
TK_IS
Ë? 
TK_EQ
 : 
TK_NE
;

4262 
jumpIfNuŒ
 = 
SQLITE_NULLEQ
;

4264 
TK_LT
:

4265 
TK_LE
:

4266 
TK_GT
:

4267 
TK_GE
:

4268 
TK_NE
:

4269 
TK_EQ
: {

4270 if–
	`sqlôe3Ex¥IsVe˘‹
(
pEx¥
->
pLe·
ËË
deÁu…_ex¥
;

4271 
	`ã°ˇ£
–
jumpIfNuŒ
==0 );

4272 
r1
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pEx¥
->
pLe·
, &
ªgFªe1
);

4273 
r2
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pEx¥
->
pRight
, &
ªgFªe2
);

4274 
	`codeCom∑ª
(
pP¨£
, 
pEx¥
->
pLe·
,ÖEx¥->
pRight
, 
›
,

4275 
r1
, 
r2
, 
de°
, 
jumpIfNuŒ
);

4276 
	`as£π
(
TK_LT
==
OP_Lt
); 
	`ã°ˇ£
(
›
==OP_Lt); 
	`VdbeCovîageIf
(
v
,op==OP_Lt);

4277 
	`as£π
(
TK_LE
==
OP_Le
); 
	`ã°ˇ£
(
›
==OP_Le); 
	`VdbeCovîageIf
(
v
,op==OP_Le);

4278 
	`as£π
(
TK_GT
==
OP_Gt
); 
	`ã°ˇ£
(
›
==OP_Gt); 
	`VdbeCovîageIf
(
v
,op==OP_Gt);

4279 
	`as£π
(
TK_GE
==
OP_Ge
); 
	`ã°ˇ£
(
›
==OP_Ge); 
	`VdbeCovîageIf
(
v
,op==OP_Ge);

4280 
	`as£π
(
TK_EQ
==
OP_Eq
); 
	`ã°ˇ£
(
›
==OP_Eq);

4281 
	`VdbeCovîageIf
(
v
, 
›
==
OP_Eq
 && 
jumpIfNuŒ
==
SQLITE_NULLEQ
);

4282 
	`VdbeCovîageIf
(
v
, 
›
==
OP_Eq
 && 
jumpIfNuŒ
!=
SQLITE_NULLEQ
);

4283 
	`as£π
(
TK_NE
==
OP_Ne
); 
	`ã°ˇ£
(
›
==OP_Ne);

4284 
	`VdbeCovîageIf
(
v
, 
›
==
OP_Ne
 && 
jumpIfNuŒ
==
SQLITE_NULLEQ
);

4285 
	`VdbeCovîageIf
(
v
, 
›
==
OP_Ne
 && 
jumpIfNuŒ
!=
SQLITE_NULLEQ
);

4286 
	`ã°ˇ£
–
ªgFªe1
==0 );

4287 
	`ã°ˇ£
–
ªgFªe2
==0 );

4290 
TK_ISNULL
:

4291 
TK_NOTNULL
: {

4292 
	`as£π
–
TK_ISNULL
==
OP_IsNuŒ
 ); 
	`ã°ˇ£
–
›
==TK_ISNULL );

4293 
	`as£π
–
TK_NOTNULL
==
OP_NŸNuŒ
 ); 
	`ã°ˇ£
–
›
==TK_NOTNULL );

4294 
r1
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pEx¥
->
pLe·
, &
ªgFªe1
);

4295 
	`sqlôe3VdbeAddOp2
(
v
, 
›
, 
r1
, 
de°
);

4296 
	`VdbeCovîageIf
(
v
, 
›
==
TK_ISNULL
);

4297 
	`VdbeCovîageIf
(
v
, 
›
==
TK_NOTNULL
);

4298 
	`ã°ˇ£
–
ªgFªe1
==0 );

4301 
TK_BETWEEN
: {

4302 
	`ã°ˇ£
–
jumpIfNuŒ
==0 );

4303 
	`ex¥CodeBëwìn
(
pP¨£
, 
pEx¥
, 
de°
, 
sqlôe3Ex¥IfTrue
, 
jumpIfNuŒ
);

4306 #i‚de‡
SQLITE_OMIT_SUBQUERY


4307 
TK_IN
: {

4308 
de°IfFÆ£
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

4309 
de°IfNuŒ
 = 
jumpIfNuŒ
 ? 
de°
 : 
de°IfFÆ£
;

4310 
	`sqlôe3Ex¥CodeIN
(
pP¨£
, 
pEx¥
, 
de°IfFÆ£
, 
de°IfNuŒ
);

4311 
	`sqlôe3VdbeGŸo
(
v
, 
de°
);

4312 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
de°IfFÆ£
);

4317 
deÁu…_ex¥
:

4318 if–
	`ex¥AlwaysTrue
(
pEx¥
) ){

4319 
	`sqlôe3VdbeGŸo
(
v
, 
de°
);

4320 }if–
	`ex¥AlwaysFÆ£
(
pEx¥
) ){

4323 
r1
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pEx¥
, &
ªgFªe1
);

4324 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_If
, 
r1
, 
de°
, 
jumpIfNuŒ
!=0);

4325 
	`VdbeCovîage
(
v
);

4326 
	`ã°ˇ£
–
ªgFªe1
==0 );

4327 
	`ã°ˇ£
–
jumpIfNuŒ
==0 );

4332 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgFªe1
);

4333 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgFªe2
);

4334 
	}
}

4345 
	$sqlôe3Ex¥IfFÆ£
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pEx¥
, 
de°
, 
jumpIfNuŒ
){

4346 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

4347 
›
 = 0;

4348 
ªgFªe1
 = 0;

4349 
ªgFªe2
 = 0;

4350 
r1
, 
r2
;

4352 
	`as£π
–
jumpIfNuŒ
==
SQLITE_JUMPIFNULL
 || jumpIfNull==0 );

4353 if–
	`NEVER
(
v
==0) ) ;

4354 if–
pEx¥
==0 ) ;

4374 
›
 = ((
pEx¥
->›+(
TK_ISNULL
&1))^1)-(TK_ISNULL&1);

4378 
	`as£π
–
pEx¥
->
›
!=
TK_ISNULL
 || op==
OP_NŸNuŒ
 );

4379 
	`as£π
–
pEx¥
->
›
!=
TK_NOTNULL
 || op==
OP_IsNuŒ
 );

4380 
	`as£π
–
pEx¥
->
›
!=
TK_NE
 || op==
OP_Eq
 );

4381 
	`as£π
–
pEx¥
->
›
!=
TK_EQ
 || op==
OP_Ne
 );

4382 
	`as£π
–
pEx¥
->
›
!=
TK_LT
 || op==
OP_Ge
 );

4383 
	`as£π
–
pEx¥
->
›
!=
TK_LE
 || op==
OP_Gt
 );

4384 
	`as£π
–
pEx¥
->
›
!=
TK_GT
 || op==
OP_Le
 );

4385 
	`as£π
–
pEx¥
->
›
!=
TK_GE
 || op==
OP_Lt
 );

4387  
pEx¥
->
›
 ){

4388 
TK_AND
: {

4389 
	`ã°ˇ£
–
jumpIfNuŒ
==0 );

4390 
	`sqlôe3Ex¥IfFÆ£
(
pP¨£
, 
pEx¥
->
pLe·
, 
de°
, 
jumpIfNuŒ
);

4391 
	`sqlôe3Ex¥CachePush
(
pP¨£
);

4392 
	`sqlôe3Ex¥IfFÆ£
(
pP¨£
, 
pEx¥
->
pRight
, 
de°
, 
jumpIfNuŒ
);

4393 
	`sqlôe3Ex¥CacheP›
(
pP¨£
);

4396 
TK_OR
: {

4397 
d2
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

4398 
	`ã°ˇ£
–
jumpIfNuŒ
==0 );

4399 
	`sqlôe3Ex¥IfTrue
(
pP¨£
, 
pEx¥
->
pLe·
, 
d2
, 
jumpIfNuŒ
^
SQLITE_JUMPIFNULL
);

4400 
	`sqlôe3Ex¥CachePush
(
pP¨£
);

4401 
	`sqlôe3Ex¥IfFÆ£
(
pP¨£
, 
pEx¥
->
pRight
, 
de°
, 
jumpIfNuŒ
);

4402 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
d2
);

4403 
	`sqlôe3Ex¥CacheP›
(
pP¨£
);

4406 
TK_NOT
: {

4407 
	`ã°ˇ£
–
jumpIfNuŒ
==0 );

4408 
	`sqlôe3Ex¥IfTrue
(
pP¨£
, 
pEx¥
->
pLe·
, 
de°
, 
jumpIfNuŒ
);

4411 
TK_IS
:

4412 
TK_ISNOT
:

4413 
	`ã°ˇ£
–
pEx¥
->
›
==
TK_IS
 );

4414 
	`ã°ˇ£
–
pEx¥
->
›
==
TK_ISNOT
 );

4415 
›
 = (
pEx¥
->›==
TK_IS
Ë? 
TK_NE
 : 
TK_EQ
;

4416 
jumpIfNuŒ
 = 
SQLITE_NULLEQ
;

4418 
TK_LT
:

4419 
TK_LE
:

4420 
TK_GT
:

4421 
TK_GE
:

4422 
TK_NE
:

4423 
TK_EQ
: {

4424 if–
	`sqlôe3Ex¥IsVe˘‹
(
pEx¥
->
pLe·
ËË
deÁu…_ex¥
;

4425 
	`ã°ˇ£
–
jumpIfNuŒ
==0 );

4426 
r1
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pEx¥
->
pLe·
, &
ªgFªe1
);

4427 
r2
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pEx¥
->
pRight
, &
ªgFªe2
);

4428 
	`codeCom∑ª
(
pP¨£
, 
pEx¥
->
pLe·
,ÖEx¥->
pRight
, 
›
,

4429 
r1
, 
r2
, 
de°
, 
jumpIfNuŒ
);

4430 
	`as£π
(
TK_LT
==
OP_Lt
); 
	`ã°ˇ£
(
›
==OP_Lt); 
	`VdbeCovîageIf
(
v
,op==OP_Lt);

4431 
	`as£π
(
TK_LE
==
OP_Le
); 
	`ã°ˇ£
(
›
==OP_Le); 
	`VdbeCovîageIf
(
v
,op==OP_Le);

4432 
	`as£π
(
TK_GT
==
OP_Gt
); 
	`ã°ˇ£
(
›
==OP_Gt); 
	`VdbeCovîageIf
(
v
,op==OP_Gt);

4433 
	`as£π
(
TK_GE
==
OP_Ge
); 
	`ã°ˇ£
(
›
==OP_Ge); 
	`VdbeCovîageIf
(
v
,op==OP_Ge);

4434 
	`as£π
(
TK_EQ
==
OP_Eq
); 
	`ã°ˇ£
(
›
==OP_Eq);

4435 
	`VdbeCovîageIf
(
v
, 
›
==
OP_Eq
 && 
jumpIfNuŒ
!=
SQLITE_NULLEQ
);

4436 
	`VdbeCovîageIf
(
v
, 
›
==
OP_Eq
 && 
jumpIfNuŒ
==
SQLITE_NULLEQ
);

4437 
	`as£π
(
TK_NE
==
OP_Ne
); 
	`ã°ˇ£
(
›
==OP_Ne);

4438 
	`VdbeCovîageIf
(
v
, 
›
==
OP_Ne
 && 
jumpIfNuŒ
!=
SQLITE_NULLEQ
);

4439 
	`VdbeCovîageIf
(
v
, 
›
==
OP_Ne
 && 
jumpIfNuŒ
==
SQLITE_NULLEQ
);

4440 
	`ã°ˇ£
–
ªgFªe1
==0 );

4441 
	`ã°ˇ£
–
ªgFªe2
==0 );

4444 
TK_ISNULL
:

4445 
TK_NOTNULL
: {

4446 
r1
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pEx¥
->
pLe·
, &
ªgFªe1
);

4447 
	`sqlôe3VdbeAddOp2
(
v
, 
›
, 
r1
, 
de°
);

4448 
	`ã°ˇ£
–
›
==
TK_ISNULL
 ); 
	`VdbeCovîageIf
(
v
, op==TK_ISNULL);

4449 
	`ã°ˇ£
–
›
==
TK_NOTNULL
 ); 
	`VdbeCovîageIf
(
v
, op==TK_NOTNULL);

4450 
	`ã°ˇ£
–
ªgFªe1
==0 );

4453 
TK_BETWEEN
: {

4454 
	`ã°ˇ£
–
jumpIfNuŒ
==0 );

4455 
	`ex¥CodeBëwìn
(
pP¨£
, 
pEx¥
, 
de°
, 
sqlôe3Ex¥IfFÆ£
, 
jumpIfNuŒ
);

4458 #i‚de‡
SQLITE_OMIT_SUBQUERY


4459 
TK_IN
: {

4460 if–
jumpIfNuŒ
 ){

4461 
	`sqlôe3Ex¥CodeIN
(
pP¨£
, 
pEx¥
, 
de°
, dest);

4463 
de°IfNuŒ
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

4464 
	`sqlôe3Ex¥CodeIN
(
pP¨£
, 
pEx¥
, 
de°
, 
de°IfNuŒ
);

4465 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
de°IfNuŒ
);

4471 
deÁu…_ex¥
:

4472 if–
	`ex¥AlwaysFÆ£
(
pEx¥
) ){

4473 
	`sqlôe3VdbeGŸo
(
v
, 
de°
);

4474 }if–
	`ex¥AlwaysTrue
(
pEx¥
) ){

4477 
r1
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pEx¥
, &
ªgFªe1
);

4478 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_IfNŸ
, 
r1
, 
de°
, 
jumpIfNuŒ
!=0);

4479 
	`VdbeCovîage
(
v
);

4480 
	`ã°ˇ£
–
ªgFªe1
==0 );

4481 
	`ã°ˇ£
–
jumpIfNuŒ
==0 );

4486 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgFªe1
);

4487 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgFªe2
);

4488 
	}
}

4495 
	$sqlôe3Ex¥IfFÆ£Dup
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pEx¥
, 
de°
,
jumpIfNuŒ
){

4496 
sqlôe3
 *
db
 = 
pP¨£
->db;

4497 
Ex¥
 *
pC›y
 = 
	`sqlôe3Ex¥Dup
(
db
, 
pEx¥
, 0);

4498 if–
db
->
mÆlocFaûed
==0 ){

4499 
	`sqlôe3Ex¥IfFÆ£
(
pP¨£
, 
pC›y
, 
de°
, 
jumpIfNuŒ
);

4501 
	`sqlôe3Ex¥Dñëe
(
db
, 
pC›y
);

4502 
	}
}

4527 
	$sqlôe3Ex¥Com∑ª
(
Ex¥
 *
pA
, Ex¥ *
pB
, 
iTab
){

4528 
u32
 
comböedFœgs
;

4529 if–
pA
==0 || 
pB
==0 ){

4530  
pB
==
pA
 ? 0 : 2;

4532 
comböedFœgs
 = 
pA
->
Êags
 | 
pB
->flags;

4533 if–
comböedFœgs
 & 
EP_I¡VÆue
 ){

4534 if–(
pA
->
Êags
&
pB
->Êags&
EP_I¡VÆue
)!=0 &&ÖA->
u
.
iVÆue
==pB->u.iValue ){

4539 if–
pA
->
›
!=
pB
->op ){

4540 if–
pA
->
›
==
TK_COLLATE
 && 
	`sqlôe3Ex¥Com∑ª
’A->
pLe·
, 
pB
, 
iTab
)<2 ){

4543 if–
pB
->
›
==
TK_COLLATE
 && 
	`sqlôe3Ex¥Com∑ª
(
pA
,ÖB->
pLe·
, 
iTab
)<2 ){

4548 if–
pA
->
›
!=
TK_COLUMN
 &&ÖA->›!=
TK_AGG_COLUMN
 &&ÖA->
u
.
zTokí
 ){

4549 if–
pA
->
›
==
TK_FUNCTION
 ){

4550 if–
	`sqlôe3SåICmp
(
pA
->
u
.
zTokí
,
pB
->u.zToken)!=0 )  2;

4551 }if–
	`°rcmp
(
pA
->
u
.
zTokí
,
pB
->u.zToken)!=0 ){

4552  
pA
->
›
==
TK_COLLATE
 ? 1 : 2;

4555 if–(
pA
->
Êags
 & 
EP_Di°ö˘
)!=(
pB
->flags & EP_Distinct) )  2;

4556 if–
	`ALWAYS
((
comböedFœgs
 & 
EP_TokíO∆y
)==0) ){

4557 if–
comböedFœgs
 & 
EP_xIsSñe˘
 )  2;

4558 if–
	`sqlôe3Ex¥Com∑ª
(
pA
->
pLe·
, 
pB
->pLe·, 
iTab
) )  2;

4559 if–
	`sqlôe3Ex¥Com∑ª
(
pA
->
pRight
, 
pB
->pRight, 
iTab
) )  2;

4560 if–
	`sqlôe3Ex¥Li°Com∑ª
(
pA
->
x
.
pLi°
, 
pB
->x.pLi°, 
iTab
) )  2;

4561 if–
	`ALWAYS
((
comböedFœgs
 & 
EP_Redu˚d
)==0Ë&& 
pA
->
›
!=
TK_STRING
 ){

4562 if–
pA
->
iCﬁumn
!=
pB
->iColumn )  2;

4563 if–
pA
->
iTabÀ
!=
pB
->iTable

4564 && (
pA
->
iTabÀ
!=
iTab
 || 
	`NEVER
(
pB
->iTable>=0)) )  2;

4568 
	}
}

4585 
	$sqlôe3Ex¥Li°Com∑ª
(
Ex¥Li°
 *
pA
, Ex¥Li° *
pB
, 
iTab
){

4586 
i
;

4587 if–
pA
==0 && 
pB
==0 )  0;

4588 if–
pA
==0 || 
pB
==0 )  1;

4589 if–
pA
->
nEx¥
!=
pB
->nExpr )  1;

4590 
i
=0; i<
pA
->
nEx¥
; i++){

4591 
Ex¥
 *
pEx¥A
 = 
pA
->
a
[
i
].
pEx¥
;

4592 
Ex¥
 *
pEx¥B
 = 
pB
->
a
[
i
].
pEx¥
;

4593 if–
pA
->
a
[
i
].
s‹tOrdî
!=
pB
->a[i].sortOrder )  1;

4594 if–
	`sqlôe3Ex¥Com∑ª
(
pEx¥A
, 
pEx¥B
, 
iTab
) )  1;

4597 
	}
}

4619 
	$sqlôe3Ex¥Im∂õsEx¥
(
Ex¥
 *
pE1
, Ex¥ *
pE2
, 
iTab
){

4620 if–
	`sqlôe3Ex¥Com∑ª
(
pE1
, 
pE2
, 
iTab
)==0 ){

4623 if–
pE2
->
›
==
TK_OR


4624 && (
	`sqlôe3Ex¥Im∂õsEx¥
(
pE1
, 
pE2
->
pLe·
, 
iTab
)

4625 || 
	`sqlôe3Ex¥Im∂õsEx¥
(
pE1
, 
pE2
->
pRight
, 
iTab
) )

4629 if–
pE2
->
›
==
TK_NOTNULL
 && 
pE1
->›!=
TK_ISNULL
 &&ÖE1->›!=
TK_IS
 ){

4630 
Ex¥
 *
pX
 = 
	`sqlôe3Ex¥SkùCﬁœã
(
pE1
->
pLe·
);

4631 
	`ã°ˇ£
–
pX
!=
pE1
->
pLe·
 );

4632 if–
	`sqlôe3Ex¥Com∑ª
(
pX
, 
pE2
->
pLe·
, 
iTab
)==0 )  1;

4635 
	}
}

4644 
	sIdxCovî
 {

4645 
Index
 *
	mpIdx
;

4646 
	miCur
;

4654 
	$ex¥IdxCovî
(
WÆkî
 *
pWÆkî
, 
Ex¥
 *
pEx¥
){

4655 if–
pEx¥
->
›
==
TK_COLUMN


4656 && 
pEx¥
->
iTabÀ
==
pWÆkî
->
u
.
pIdxCovî
->
iCur


4657 && 
	`sqlôe3CﬁumnOfIndex
(
pWÆkî
->
u
.
pIdxCovî
->
pIdx
, 
pEx¥
->
iCﬁumn
)<0

4659 
pWÆkî
->
eCode
 = 1;

4660  
WRC_Ab‹t
;

4662  
WRC_C⁄töue
;

4663 
	}
}

4675 
	$sqlôe3Ex¥CovîedByIndex
(

4676 
Ex¥
 *
pEx¥
,

4677 
iCur
,

4678 
Index
 *
pIdx


4680 
WÆkî
 
w
;

4681 
IdxCovî
 
xcov
;

4682 
	`mem£t
(&
w
, 0, (w));

4683 
xcov
.
iCur
 = iCur;

4684 
xcov
.
pIdx
 =ÖIdx;

4685 
w
.
xEx¥CÆlback
 = 
ex¥IdxCovî
;

4686 
w
.
u
.
pIdxCovî
 = &
xcov
;

4687 
	`sqlôe3WÆkEx¥
(&
w
, 
pEx¥
);

4688  !
w
.
eCode
;

4689 
	}
}

4698 
	sSrcCou¡
 {

4699 
SrcLi°
 *
	mpSrc
;

4700 
	mnThis
;

4701 
	mnOthî
;

4707 
	$ex¥SrcCou¡
(
WÆkî
 *
pWÆkî
, 
Ex¥
 *
pEx¥
){

4713 if–
pEx¥
->
›
==
TK_COLUMN
 || 
	`NEVER
’Ex¥->›==
TK_AGG_COLUMN
) ){

4714 
i
;

4715 
SrcCou¡
 *
p
 = 
pWÆkî
->
u
.
pSrcCou¡
;

4716 
SrcLi°
 *
pSrc
 = 
p
->pSrc;

4717 
nSrc
 = 
pSrc
 ?ÖSrc->nSrc : 0;

4718 
i
=0; i<
nSrc
; i++){

4719 if–
pEx¥
->
iTabÀ
==
pSrc
->
a
[
i
].
iCurs‹
 ) ;

4721 if–
i
<
nSrc
 ){

4722 
p
->
nThis
++;

4724 
p
->
nOthî
++;

4727  
WRC_C⁄töue
;

4728 
	}
}

4736 
	$sqlôe3Fun˘i⁄U£sThisSrc
(
Ex¥
 *
pEx¥
, 
SrcLi°
 *
pSrcLi°
){

4737 
WÆkî
 
w
;

4738 
SrcCou¡
 
˙t
;

4739 
	`as£π
–
pEx¥
->
›
==
TK_AGG_FUNCTION
 );

4740 
	`mem£t
(&
w
, 0, (w));

4741 
w
.
xEx¥CÆlback
 = 
ex¥SrcCou¡
;

4742 
w
.
u
.
pSrcCou¡
 = &
˙t
;

4743 
˙t
.
pSrc
 = 
pSrcLi°
;

4744 
˙t
.
nThis
 = 0;

4745 
˙t
.
nOthî
 = 0;

4746 
	`sqlôe3WÆkEx¥Li°
(&
w
, 
pEx¥
->
x
.
pLi°
);

4747  
˙t
.
nThis
>0 || c¡.
nOthî
==0;

4748 
	}
}

4754 
	$addAggInfoCﬁumn
(
sqlôe3
 *
db
, 
AggInfo
 *
pInfo
){

4755 
i
;

4756 
pInfo
->
aCﬁ
 = 
	`sqlôe3AºayAŒoˇã
(

4757 
db
,

4758 
pInfo
->
aCﬁ
,

4759 (
pInfo
->
aCﬁ
[0]),

4760 &
pInfo
->
nCﬁumn
,

4761 &
i


4763  
i
;

4764 
	}
}

4770 
	$addAggInfoFunc
(
sqlôe3
 *
db
, 
AggInfo
 *
pInfo
){

4771 
i
;

4772 
pInfo
->
aFunc
 = 
	`sqlôe3AºayAŒoˇã
(

4773 
db
,

4774 
pInfo
->
aFunc
,

4775 (
pInfo
->
aFunc
[0]),

4776 &
pInfo
->
nFunc
,

4777 &
i


4779  
i
;

4780 
	}
}

4787 
	$™ÆyzeAggªg©e
(
WÆkî
 *
pWÆkî
, 
Ex¥
 *
pEx¥
){

4788 
i
;

4789 
NameC⁄ãxt
 *
pNC
 = 
pWÆkî
->
u
.pNC;

4790 
P¨£
 *
pP¨£
 = 
pNC
->pParse;

4791 
SrcLi°
 *
pSrcLi°
 = 
pNC
->pSrcList;

4792 
AggInfo
 *
pAggInfo
 = 
pNC
->pAggInfo;

4794  
pEx¥
->
›
 ){

4795 
TK_AGG_COLUMN
:

4796 
TK_COLUMN
: {

4797 
	`ã°ˇ£
–
pEx¥
->
›
==
TK_AGG_COLUMN
 );

4798 
	`ã°ˇ£
–
pEx¥
->
›
==
TK_COLUMN
 );

4801 if–
	`ALWAYS
(
pSrcLi°
!=0) ){

4802 
SrcLi°_ôem
 *
pIãm
 = 
pSrcLi°
->
a
;

4803 
i
=0; i<
pSrcLi°
->
nSrc
; i++, 
pIãm
++){

4804 
AggInfo_cﬁ
 *
pCﬁ
;

4805 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_TokíO∆y
|
EP_Redu˚d
) );

4806 if–
pEx¥
->
iTabÀ
==
pIãm
->
iCurs‹
 ){

4813 
k
;

4814 
pCﬁ
 = 
pAggInfo
->
aCﬁ
;

4815 
k
=0; k<
pAggInfo
->
nCﬁumn
; k++, 
pCﬁ
++){

4816 if–
pCﬁ
->
iTabÀ
==
pEx¥
->iTable &&

4817 
pCﬁ
->
iCﬁumn
==
pEx¥
->iColumn ){

4821 if–(
k
>=
pAggInfo
->
nCﬁumn
)

4822 && (
k
 = 
	`addAggInfoCﬁumn
(
pP¨£
->
db
, 
pAggInfo
))>=0

4824 
pCﬁ
 = &
pAggInfo
->
aCﬁ
[
k
];

4825 
pCﬁ
->
pTab
 = 
pEx¥
->pTab;

4826 
pCﬁ
->
iTabÀ
 = 
pEx¥
->iTable;

4827 
pCﬁ
->
iCﬁumn
 = 
pEx¥
->iColumn;

4828 
pCﬁ
->
iMem
 = ++
pP¨£
->
nMem
;

4829 
pCﬁ
->
iS‹ãrCﬁumn
 = -1;

4830 
pCﬁ
->
pEx¥
 =ÖExpr;

4831 if–
pAggInfo
->
pGroupBy
 ){

4832 
j
, 
n
;

4833 
Ex¥Li°
 *
pGB
 = 
pAggInfo
->
pGroupBy
;

4834 
Ex¥Li°_ôem
 *
pTîm
 = 
pGB
->
a
;

4835 
n
 = 
pGB
->
nEx¥
;

4836 
j
=0; j<
n
; j++, 
pTîm
++){

4837 
Ex¥
 *
pE
 = 
pTîm
->
pEx¥
;

4838 if–
pE
->
›
==
TK_COLUMN
 &&ÖE->
iTabÀ
==
pEx¥
->iTable &&

4839 
pE
->
iCﬁumn
==
pEx¥
->iColumn ){

4840 
pCﬁ
->
iS‹ãrCﬁumn
 = 
j
;

4845 if–
pCﬁ
->
iS‹ãrCﬁumn
<0 ){

4846 
pCﬁ
->
iS‹ãrCﬁumn
 = 
pAggInfo
->
nS‹tögCﬁumn
++;

4854 
	`Ex¥SëVVAPr›îty
(
pEx¥
, 
EP_NoRedu˚
);

4855 
pEx¥
->
pAggInfo
 =ÖAggInfo;

4856 
pEx¥
->
›
 = 
TK_AGG_COLUMN
;

4857 
pEx¥
->
iAgg
 = (
i16
)
k
;

4862  
WRC_Pru√
;

4864 
TK_AGG_FUNCTION
: {

4865 if–(
pNC
->
ncFœgs
 & 
NC_InAggFunc
)==0

4866 && 
pWÆkî
->
wÆkîDïth
==
pEx¥
->
›2


4871 
AggInfo_func
 *
pIãm
 = 
pAggInfo
->
aFunc
;

4872 
i
=0; i<
pAggInfo
->
nFunc
; i++, 
pIãm
++){

4873 if–
	`sqlôe3Ex¥Com∑ª
(
pIãm
->
pEx¥
,ÖExpr, -1)==0 ){

4877 if–
i
>=
pAggInfo
->
nFunc
 ){

4880 
u8
 
íc
 = 
	`ENC
(
pP¨£
->
db
);

4881 
i
 = 
	`addAggInfoFunc
(
pP¨£
->
db
, 
pAggInfo
);

4882 if–
i
>=0 ){

4883 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
) );

4884 
pIãm
 = &
pAggInfo
->
aFunc
[
i
];

4885 
pIãm
->
pEx¥
 =ÖExpr;

4886 
pIãm
->
iMem
 = ++
pP¨£
->
nMem
;

4887 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_I¡VÆue
) );

4888 
pIãm
->
pFunc
 = 
	`sqlôe3FödFun˘i⁄
(
pP¨£
->
db
,

4889 
pEx¥
->
u
.
zTokí
,

4890 
pEx¥
->
x
.
pLi°
 ?ÖEx¥->x.pLi°->
nEx¥
 : 0, 
íc
, 0);

4891 if–
pEx¥
->
Êags
 & 
EP_Di°ö˘
 ){

4892 
pIãm
->
iDi°ö˘
 = 
pP¨£
->
nTab
++;

4894 
pIãm
->
iDi°ö˘
 = -1;

4900 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_TokíO∆y
|
EP_Redu˚d
) );

4901 
	`Ex¥SëVVAPr›îty
(
pEx¥
, 
EP_NoRedu˚
);

4902 
pEx¥
->
iAgg
 = (
i16
)
i
;

4903 
pEx¥
->
pAggInfo
 =ÖAggInfo;

4904  
WRC_Pru√
;

4906  
WRC_C⁄töue
;

4910  
WRC_C⁄töue
;

4911 
	}
}

4912 
	$™ÆyzeAggªg©esInSñe˘
(
WÆkî
 *
pWÆkî
, 
Sñe˘
 *
pSñe˘
){

4913 
	`UNUSED_PARAMETER
(
pWÆkî
);

4914 
	`UNUSED_PARAMETER
(
pSñe˘
);

4915  
WRC_C⁄töue
;

4916 
	}
}

4927 
	$sqlôe3Ex¥A«lyzeAggªg©es
(
NameC⁄ãxt
 *
pNC
, 
Ex¥
 *
pEx¥
){

4928 
WÆkî
 
w
;

4929 
	`mem£t
(&
w
, 0, (w));

4930 
w
.
xEx¥CÆlback
 = 
™ÆyzeAggªg©e
;

4931 
w
.
xSñe˘CÆlback
 = 
™ÆyzeAggªg©esInSñe˘
;

4932 
w
.
u
.
pNC
 =ÖNC;

4933 
	`as£π
–
pNC
->
pSrcLi°
!=0 );

4934 
	`sqlôe3WÆkEx¥
(&
w
, 
pEx¥
);

4935 
	}
}

4943 
	$sqlôe3Ex¥A«lyzeAggLi°
(
NameC⁄ãxt
 *
pNC
, 
Ex¥Li°
 *
pLi°
){

4944 
Ex¥Li°_ôem
 *
pIãm
;

4945 
i
;

4946 if–
pLi°
 ){

4947 
pIãm
=
pLi°
->
a
, 
i
=0; i<pLi°->
nEx¥
; i++,ÖItem++){

4948 
	`sqlôe3Ex¥A«lyzeAggªg©es
(
pNC
, 
pIãm
->
pEx¥
);

4951 
	}
}

4956 
	$sqlôe3GëTempReg
(
P¨£
 *
pP¨£
){

4957 if–
pP¨£
->
nTempReg
==0 ){

4958  ++
pP¨£
->
nMem
;

4960  
pP¨£
->
aTempReg
[--pP¨£->
nTempReg
];

4961 
	}
}

4971 
	$sqlôe3Rñó£TempReg
(
P¨£
 *
pP¨£
, 
iReg
){

4972 if–
iReg
 && 
pP¨£
->
nTempReg
<
	`AºaySize
’P¨£->
aTempReg
) ){

4973 
i
;

4974 
yCﬁCache
 *
p
;

4975 
i
=0, 
p
=
pP¨£
->
aCﬁCache
; i<pP¨£->
nCﬁCache
; i++,Ö++){

4976 if–
p
->
iReg
==iReg ){

4977 
p
->
ãmpReg
 = 1;

4981 
pP¨£
->
aTempReg
[pP¨£->
nTempReg
++] = 
iReg
;

4983 
	}
}

4988 
	$sqlôe3GëTempR™ge
(
P¨£
 *
pP¨£
, 
nReg
){

4989 
i
, 
n
;

4990 if–
nReg
==1 )  
	`sqlôe3GëTempReg
(
pP¨£
);

4991 
i
 = 
pP¨£
->
iR™geReg
;

4992 
n
 = 
pP¨£
->
nR™geReg
;

4993 if–
nReg
<=
n
 ){

4994 
	`as£π
–!
	`u£dAsCﬁumnCache
(
pP¨£
, 
i
, i+
n
-1) );

4995 
pP¨£
->
iR™geReg
 +
nReg
;

4996 
pP¨£
->
nR™geReg
 -
nReg
;

4998 
i
 = 
pP¨£
->
nMem
+1;

4999 
pP¨£
->
nMem
 +
nReg
;

5001  
i
;

5002 
	}
}

5003 
	$sqlôe3Rñó£TempR™ge
(
P¨£
 *
pP¨£
, 
iReg
, 
nReg
){

5004 if–
nReg
==1 ){

5005 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
iReg
);

5008 
	`sqlôe3Ex¥CacheRemove
(
pP¨£
, 
iReg
, 
nReg
);

5009 if–
nReg
>
pP¨£
->
nR™geReg
 ){

5010 
pP¨£
->
nR™geReg
 = 
nReg
;

5011 
pP¨£
->
iR™geReg
 = 
iReg
;

5013 
	}
}

5018 
	$sqlôe3CÀ¨TempRegCache
(
P¨£
 *
pP¨£
){

5019 
pP¨£
->
nTempReg
 = 0;

5020 
pP¨£
->
nR™geReg
 = 0;

5021 
	}
}

5028 #ifde‡
SQLITE_DEBUG


5029 
	$sqlôe3NoTempsInR™ge
(
P¨£
 *
pP¨£
, 
iFú°
, 
iLa°
){

5030 
i
;

5031 if–
pP¨£
->
nR™geReg
>0

5032 && 
pP¨£
->
iR™geReg
+pP¨£->
nR™geReg
<
iLa°


5033 && 
pP¨£
->
iR™geReg
>=
iFú°


5037 
i
=0; i<
pP¨£
->
nTempReg
; i++){

5038 if–
pP¨£
->
aTempReg
[
i
]>=
iFú°
 &&ÖP¨£->aTempReg[i]<=
iLa°
 ){

5043 
	}
}

	@fault.c

27 
	~"sqlôeI¡.h
"

29 #i‚de‡
SQLITE_UNTESTABLE


34 
BíignMÆlocHooks
 
	tBíignMÆlocHooks
;

35 
SQLITE_WSD
 
	sBíignMÆlocHooks
 {

36 (*
	mxBíignBegö
)();

37 (*
	mxBíignEnd
)();

38 } 
	gsqlôe3Hooks
 = { 0, 0 };

46 #ifde‡
SQLITE_OMIT_WSD


47 
	#wsdHooksInô
 \

48 
BíignMÆlocHooks
 *
x
 = &
	`GLOBAL
(BíignMÆlocHooks,
sqlôe3Hooks
)

	)

49 
	#wsdHooks
 
x
[0]

	)

51 
	#wsdHooksInô


	)

52 
	#wsdHooks
 
sqlôe3Hooks


	)

60 
	$sqlôe3BíignMÆlocHooks
(

61 (*
xBíignBegö
)(),

62 (*
xBíignEnd
)()

64 
wsdHooksInô
;

65 
wsdHooks
.
xBíignBegö
 = xBenignBegin;

66 
wsdHooks
.
xBíignEnd
 = xBenignEnd;

67 
	}
}

74 
	$sqlôe3BegöBíignMÆloc
(){

75 
wsdHooksInô
;

76 if–
wsdHooks
.
xBíignBegö
 ){

77 
wsdHooks
.
	`xBíignBegö
();

79 
	}
}

80 
	$sqlôe3EndBíignMÆloc
(){

81 
wsdHooksInô
;

82 if–
wsdHooks
.
xBíignEnd
 ){

83 
wsdHooks
.
	`xBíignEnd
();

85 
	}
}

	@fkey.c

14 
	~"sqlôeI¡.h
"

16 #i‚de‡
SQLITE_OMIT_FOREIGN_KEY


17 #i‚de‡
SQLITE_OMIT_TRIGGER


183 
	$sqlôe3FkLoˇãIndex
(

184 
P¨£
 *
pP¨£
,

185 
TabÀ
 *
pP¨ít
,

186 
FKey
 *
pFKey
,

187 
Index
 **
µIdx
,

188 **
∑iCﬁ


190 
Index
 *
pIdx
 = 0;

191 *
aiCﬁ
 = 0;

192 
nCﬁ
 = 
pFKey
->nCol;

193 *
zKey
 = 
pFKey
->
aCﬁ
[0].
zCﬁ
;

196 
	`as£π
–
µIdx
 && *ppIdx==0 );

197 
	`as£π
–!
∑iCﬁ
 || *paiCol==0 );

198 
	`as£π
–
pP¨£
 );

208 if–
nCﬁ
==1 ){

216 if–
pP¨ít
->
iPKey
>=0 ){

217 if–!
zKey
 )  0;

218 if–!
	`sqlôe3SåICmp
(
pP¨ít
->
aCﬁ
[pP¨ít->
iPKey
].
zName
, 
zKey
) )  0;

220 }if–
∑iCﬁ
 ){

221 
	`as£π
–
nCﬁ
>1 );

222 
aiCﬁ
 = (*)
	`sqlôe3DbMÆlocRawNN
(
pP¨£
->
db
, 
nCﬁ
*());

223 if–!
aiCﬁ
 )  1;

224 *
∑iCﬁ
 = 
aiCﬁ
;

227 
pIdx
=
pP¨ít
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
){

228 if–
pIdx
->
nKeyCﬁ
==
nCﬁ
 && 
	`IsUniqueIndex
’IdxË&&ÖIdx->
pP¨tIdxWhîe
==0 ){

233 if–
zKey
==0 ){

237 if–
	`IsPrim¨yKeyIndex
(
pIdx
) ){

238 if–
aiCﬁ
 ){

239 
i
;

240 
i
=0; i<
nCﬁ
; i++Ë
aiCﬁ
[i] = 
pFKey
->
aCﬁ
[i].
iFrom
;

249 
i
, 
j
;

250 
i
=0; i<
nCﬁ
; i++){

251 
i16
 
iCﬁ
 = 
pIdx
->
aiCﬁumn
[
i
];

252 c⁄° *
zDÊtCﬁl
;

253 *
zIdxCﬁ
;

255 if–
iCﬁ
<0 ) ;

260 
zDÊtCﬁl
 = 
pP¨ít
->
aCﬁ
[
iCﬁ
].
zCﬁl
;

261 if–!
zDÊtCﬁl
 ) zDÊtCﬁ»
sqlôe3SåBINARY
;

262 if–
	`sqlôe3SåICmp
(
pIdx
->
azCﬁl
[
i
], 
zDÊtCﬁl
) ) ;

264 
zIdxCﬁ
 = 
pP¨ít
->
aCﬁ
[
iCﬁ
].
zName
;

265 
j
=0; j<
nCﬁ
; j++){

266 if–
	`sqlôe3SåICmp
(
pFKey
->
aCﬁ
[
j
].
zCﬁ
, 
zIdxCﬁ
)==0 ){

267 if–
aiCﬁ
 )áiCﬁ[
i
] = 
pFKey
->
aCﬁ
[
j
].
iFrom
;

271 if–
j
==
nCﬁ
 ) ;

273 if–
i
==
nCﬁ
 ) ;

278 if–!
pIdx
 ){

279 if–!
pP¨£
->
dißbÀTriggîs
 ){

280 
	`sqlôe3Eº‹Msg
(
pP¨£
,

282 
pFKey
->
pFrom
->
zName
,ÖFKey->
zTo
);

284 
	`sqlôe3DbFªe
(
pP¨£
->
db
, 
aiCﬁ
);

288 *
µIdx
 = 
pIdx
;

290 
	}
}

318 
	$fkLookupP¨ít
(

319 
P¨£
 *
pP¨£
,

320 
iDb
,

321 
TabÀ
 *
pTab
,

322 
Index
 *
pIdx
,

323 
FKey
 *
pFKey
,

324 *
aiCﬁ
,

325 
ªgD©a
,

326 
nIn¸
,

327 
isIgn‹e


329 
i
;

330 
Vdbe
 *
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

331 
iCur
 = 
pP¨£
->
nTab
 - 1;

332 
iOk
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

341 if–
nIn¸
<0 ){

342 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_FkIfZîo
, 
pFKey
->
isDe„ºed
, 
iOk
);

343 
	`VdbeCovîage
(
v
);

345 
i
=0; i<
pFKey
->
nCﬁ
; i++){

346 
iReg
 = 
aiCﬁ
[
i
] + 
ªgD©a
 + 1;

347 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IsNuŒ
, 
iReg
, 
iOk
); 
	`VdbeCovîage
(v);

350 if–
isIgn‹e
==0 ){

351 if–
pIdx
==0 ){

354 
iMu°BeI¡
;

355 
ªgTemp
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

362 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_SC›y
, 
aiCﬁ
[0]+1+
ªgD©a
, 
ªgTemp
);

363 
iMu°BeI¡
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Mu°BeI¡
, 
ªgTemp
, 0);

364 
	`VdbeCovîage
(
v
);

370 if–
pTab
==
pFKey
->
pFrom
 && 
nIn¸
==1 ){

371 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Eq
, 
ªgD©a
, 
iOk
, 
ªgTemp
); 
	`VdbeCovîage
(v);

372 
	`sqlôe3VdbeCh™geP5
(
v
, 
SQLITE_NOTNULL
);

375 
	`sqlôe3O≥nTabÀ
(
pP¨£
, 
iCur
, 
iDb
, 
pTab
, 
OP_O≥nRód
);

376 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_NŸExi°s
, 
iCur
, 0, 
ªgTemp
); 
	`VdbeCovîage
(v);

377 
	`sqlôe3VdbeGŸo
(
v
, 
iOk
);

378 
	`sqlôe3VdbeJumpHîe
(
v
, 
	`sqlôe3VdbeCuºítAddr
(v)-2);

379 
	`sqlôe3VdbeJumpHîe
(
v
, 
iMu°BeI¡
);

380 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgTemp
);

382 
nCﬁ
 = 
pFKey
->nCol;

383 
ªgTemp
 = 
	`sqlôe3GëTempR™ge
(
pP¨£
, 
nCﬁ
);

384 
ªgRec
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

386 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_O≥nRód
, 
iCur
, 
pIdx
->
äum
, 
iDb
);

387 
	`sqlôe3VdbeSëP4KeyInfo
(
pP¨£
, 
pIdx
);

388 
i
=0; i<
nCﬁ
; i++){

389 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_C›y
, 
aiCﬁ
[
i
]+1+
ªgD©a
, 
ªgTemp
+i);

402 if–
pTab
==
pFKey
->
pFrom
 && 
nIn¸
==1 ){

403 
iJump
 = 
	`sqlôe3VdbeCuºítAddr
(
v
Ë+ 
nCﬁ
 + 1;

404 
i
=0; i<
nCﬁ
; i++){

405 
iChûd
 = 
aiCﬁ
[
i
]+1+
ªgD©a
;

406 
iP¨ít
 = 
pIdx
->
aiCﬁumn
[
i
]+1+
ªgD©a
;

407 
	`as£π
–
pIdx
->
aiCﬁumn
[
i
]>=0 );

408 
	`as£π
–
aiCﬁ
[
i
]!=
pTab
->
iPKey
 );

409 if–
pIdx
->
aiCﬁumn
[
i
]==
pTab
->
iPKey
 ){

411 
iP¨ít
 = 
ªgD©a
;

413 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Ne
, 
iChûd
, 
iJump
, 
iP¨ít
); 
	`VdbeCovîage
(v);

414 
	`sqlôe3VdbeCh™geP5
(
v
, 
SQLITE_JUMPIFNULL
);

416 
	`sqlôe3VdbeGŸo
(
v
, 
iOk
);

419 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_MakeRec‹d
, 
ªgTemp
, 
nCﬁ
, 
ªgRec
,

420 
	`sqlôe3IndexAfföôySå
(
pP¨£
->
db
,
pIdx
), 
nCﬁ
);

421 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_Found
, 
iCur
, 
iOk
, 
ªgRec
, 0); 
	`VdbeCovîage
(v);

423 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgRec
);

424 
	`sqlôe3Rñó£TempR™ge
(
pP¨£
, 
ªgTemp
, 
nCﬁ
);

428 if–!
pFKey
->
isDe„ºed
 && !(
pP¨£
->
db
->
Êags
 & 
SQLITE_De„rFKs
)

429 && !
pP¨£
->
pT›Àvñ


430 && !
pP¨£
->
isMu…iWrôe


436 
	`as£π
–
nIn¸
==1 );

437 
	`sqlôe3HÆtC⁄°øöt
(
pP¨£
, 
SQLITE_CONSTRAINT_FOREIGNKEY
,

438 
OE_Ab‹t
, 0, 
P4_STATIC
, 
P5_C⁄°øötFK
);

440 if–
nIn¸
>0 && 
pFKey
->
isDe„ºed
==0 ){

441 
	`sqlôe3MayAb‹t
(
pP¨£
);

443 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_FkCou¡î
, 
pFKey
->
isDe„ºed
, 
nIn¸
);

446 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
iOk
);

447 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Clo£
, 
iCur
);

448 
	}
}

459 
Ex¥
 *
	$ex¥TabÀRegi°î
(

460 
P¨£
 *
pP¨£
,

461 
TabÀ
 *
pTab
,

462 
ªgBa£
,

463 
i16
 
iCﬁ


465 
Ex¥
 *
pEx¥
;

466 
Cﬁumn
 *
pCﬁ
;

467 c⁄° *
zCﬁl
;

468 
sqlôe3
 *
db
 = 
pP¨£
->db;

470 
pEx¥
 = 
	`sqlôe3Ex¥
(
db
, 
TK_REGISTER
, 0);

471 if–
pEx¥
 ){

472 if–
iCﬁ
>=0 && iCﬁ!=
pTab
->
iPKey
 ){

473 
pCﬁ
 = &
pTab
->
aCﬁ
[
iCﬁ
];

474 
pEx¥
->
iTabÀ
 = 
ªgBa£
 + 
iCﬁ
 + 1;

475 
pEx¥
->
afföôy
 = 
pCﬁ
->affinity;

476 
zCﬁl
 = 
pCﬁ
->zColl;

477 if–
zCﬁl
==0 ) zCﬁ»
db
->
pDÊtCﬁl
->
zName
;

478 
pEx¥
 = 
	`sqlôe3Ex¥AddCﬁœãSåög
(
pP¨£
,ÖEx¥, 
zCﬁl
);

480 
pEx¥
->
iTabÀ
 = 
ªgBa£
;

481 
pEx¥
->
afföôy
 = 
SQLITE_AFF_INTEGER
;

484  
pEx¥
;

485 
	}
}

491 
Ex¥
 *
	$ex¥TabÀCﬁumn
(

492 
sqlôe3
 *
db
,

493 
TabÀ
 *
pTab
,

494 
iCurs‹
,

495 
i16
 
iCﬁ


497 
Ex¥
 *
pEx¥
 = 
	`sqlôe3Ex¥
(
db
, 
TK_COLUMN
, 0);

498 if–
pEx¥
 ){

499 
pEx¥
->
pTab
 =ÖTab;

500 
pEx¥
->
iTabÀ
 = 
iCurs‹
;

501 
pEx¥
->
iCﬁumn
 = 
iCﬁ
;

503  
pEx¥
;

504 
	}
}

538 
	$fkSˇnChûdªn
(

539 
P¨£
 *
pP¨£
,

540 
SrcLi°
 *
pSrc
,

541 
TabÀ
 *
pTab
,

542 
Index
 *
pIdx
,

543 
FKey
 *
pFKey
,

544 *
aiCﬁ
,

545 
ªgD©a
,

546 
nIn¸


548 
sqlôe3
 *
db
 = 
pP¨£
->db;

549 
i
;

550 
Ex¥
 *
pWhîe
 = 0;

551 
NameC⁄ãxt
 
sNameC⁄ãxt
;

552 
WhîeInfo
 *
pWInfo
;

553 
iFkIfZîo
 = 0;

554 
Vdbe
 *
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

556 
	`as£π
–
pIdx
==0 ||ÖIdx->
pTabÀ
==
pTab
 );

557 
	`as£π
–
pIdx
==0 ||ÖIdx->
nKeyCﬁ
==
pFKey
->
nCﬁ
 );

558 
	`as£π
–
pIdx
!=0 || 
pFKey
->
nCﬁ
==1 );

559 
	`as£π
–
pIdx
!=0 || 
	`HasRowid
(
pTab
) );

561 if–
nIn¸
<0 ){

562 
iFkIfZîo
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_FkIfZîo
, 
pFKey
->
isDe„ºed
, 0);

563 
	`VdbeCovîage
(
v
);

574 
i
=0; i<
pFKey
->
nCﬁ
; i++){

575 
Ex¥
 *
pLe·
;

576 
Ex¥
 *
pRight
;

577 
Ex¥
 *
pEq
;

578 
i16
 
iCﬁ
;

579 c⁄° *
zCﬁ
;

581 
iCﬁ
 = 
pIdx
 ?ÖIdx->
aiCﬁumn
[
i
] : -1;

582 
pLe·
 = 
	`ex¥TabÀRegi°î
(
pP¨£
, 
pTab
, 
ªgD©a
, 
iCﬁ
);

583 
iCﬁ
 = 
aiCﬁ
 ?áiCﬁ[
i
] : 
pFKey
->
aCﬁ
[0].
iFrom
;

584 
	`as£π
–
iCﬁ
>=0 );

585 
zCﬁ
 = 
pFKey
->
pFrom
->
aCﬁ
[
iCﬁ
].
zName
;

586 
pRight
 = 
	`sqlôe3Ex¥
(
db
, 
TK_ID
, 
zCﬁ
);

587 
pEq
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_EQ
, 
pLe·
, 
pRight
);

588 
pWhîe
 = 
	`sqlôe3Ex¥And
(
db
,ÖWhîe, 
pEq
);

602 if–
pTab
==
pFKey
->
pFrom
 && 
nIn¸
>0 ){

603 
Ex¥
 *
pNe
;

604 
Ex¥
 *
pLe·
;

605 
Ex¥
 *
pRight
;

606 if–
	`HasRowid
(
pTab
) ){

607 
pLe·
 = 
	`ex¥TabÀRegi°î
(
pP¨£
, 
pTab
, 
ªgD©a
, -1);

608 
pRight
 = 
	`ex¥TabÀCﬁumn
(
db
, 
pTab
, 
pSrc
->
a
[0].
iCurs‹
, -1);

609 
pNe
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_NE
, 
pLe·
, 
pRight
);

611 
Ex¥
 *
pEq
, *
pAŒ
 = 0;

612 
Index
 *
pPk
 = 
	`sqlôe3Prim¨yKeyIndex
(
pTab
);

613 
	`as£π
–
pIdx
!=0 );

614 
i
=0; i<
pPk
->
nKeyCﬁ
; i++){

615 
i16
 
iCﬁ
 = 
pIdx
->
aiCﬁumn
[
i
];

616 
	`as£π
–
iCﬁ
>=0 );

617 
pLe·
 = 
	`ex¥TabÀRegi°î
(
pP¨£
, 
pTab
, 
ªgD©a
, 
iCﬁ
);

618 
pRight
 = 
	`ex¥TabÀCﬁumn
(
db
, 
pTab
, 
pSrc
->
a
[0].
iCurs‹
, 
iCﬁ
);

619 
pEq
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_EQ
, 
pLe·
, 
pRight
);

620 
pAŒ
 = 
	`sqlôe3Ex¥And
(
db
,ÖAŒ, 
pEq
);

622 
pNe
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_NOT
, 
pAŒ
, 0);

624 
pWhîe
 = 
	`sqlôe3Ex¥And
(
db
,ÖWhîe, 
pNe
);

628 
	`mem£t
(&
sNameC⁄ãxt
, 0, (
NameC⁄ãxt
));

629 
sNameC⁄ãxt
.
pSrcLi°
 = 
pSrc
;

630 
sNameC⁄ãxt
.
pP¨£
 =ÖParse;

631 
	`sqlôe3ResﬁveEx¥Names
(&
sNameC⁄ãxt
, 
pWhîe
);

636 
pWInfo
 = 
	`sqlôe3WhîeBegö
(
pP¨£
, 
pSrc
, 
pWhîe
, 0, 0, 0, 0);

637 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_FkCou¡î
, 
pFKey
->
isDe„ºed
, 
nIn¸
);

638 if–
pWInfo
 ){

639 
	`sqlôe3WhîeEnd
(
pWInfo
);

643 
	`sqlôe3Ex¥Dñëe
(
db
, 
pWhîe
);

644 if–
iFkIfZîo
 ){

645 
	`sqlôe3VdbeJumpHîe
(
v
, 
iFkIfZîo
);

647 
	}
}

663 
FKey
 *
	$sqlôe3FkRe„ªn˚s
(
TabÀ
 *
pTab
){

664  (
FKey
 *)
	`sqlôe3HashFöd
(&
pTab
->
pSchema
->
fkeyHash
,ÖTab->
zName
);

665 
	}
}

675 
	$fkTriggîDñëe
(
sqlôe3
 *
dbMem
, 
Triggî
 *
p
){

676 if–
p
 ){

677 
TriggîSãp
 *
pSãp
 = 
p
->
°ï_li°
;

678 
	`sqlôe3Ex¥Dñëe
(
dbMem
, 
pSãp
->
pWhîe
);

679 
	`sqlôe3Ex¥Li°Dñëe
(
dbMem
, 
pSãp
->
pEx¥Li°
);

680 
	`sqlôe3Sñe˘Dñëe
(
dbMem
, 
pSãp
->
pSñe˘
);

681 
	`sqlôe3Ex¥Dñëe
(
dbMem
, 
p
->
pWhí
);

682 
	`sqlôe3DbFªe
(
dbMem
, 
p
);

684 
	}
}

703 
	$sqlôe3FkDr›TabÀ
(
P¨£
 *
pP¨£
, 
SrcLi°
 *
pName
, 
TabÀ
 *
pTab
){

704 
sqlôe3
 *
db
 = 
pP¨£
->db;

705 if–(
db
->
Êags
&
SQLITE_F‹eignKeys
Ë&& !
	`IsVútuÆ
(
pTab
Ë&& !pTab->
pSñe˘
 ){

706 
iSkù
 = 0;

707 
Vdbe
 *
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

709 
	`as£π
–
v
 );

710 if–
	`sqlôe3FkRe„ªn˚s
(
pTab
)==0 ){

716 
FKey
 *
p
;

717 
p
=
pTab
->
pFKey
;Ö;Öı->
pNextFrom
){

718 if–
p
->
isDe„ºed
 || (
db
->
Êags
 & 
SQLITE_De„rFKs
) ) ;

720 if–!
p
 ) ;

721 
iSkù
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

722 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_FkIfZîo
, 1, 
iSkù
); 
	`VdbeCovîage
(v);

725 
pP¨£
->
dißbÀTriggîs
 = 1;

726 
	`sqlôe3DñëeFrom
(
pP¨£
, 
	`sqlôe3SrcLi°Dup
(
db
, 
pName
, 0), 0);

727 
pP¨£
->
dißbÀTriggîs
 = 0;

738 if–(
db
->
Êags
 & 
SQLITE_De„rFKs
)==0 ){

739 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_FkIfZîo
, 0, 
	`sqlôe3VdbeCuºítAddr
(v)+2);

740 
	`VdbeCovîage
(
v
);

741 
	`sqlôe3HÆtC⁄°øöt
(
pP¨£
, 
SQLITE_CONSTRAINT_FOREIGNKEY
,

742 
OE_Ab‹t
, 0, 
P4_STATIC
, 
P5_C⁄°øötFK
);

745 if–
iSkù
 ){

746 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
iSkù
);

749 
	}
}

764 
	$fkChûdIsModifõd
(

765 
TabÀ
 *
pTab
,

766 
FKey
 *
p
,

767 *
aCh™ge
,

768 
bChngRowid


770 
i
;

771 
i
=0; i<
p
->
nCﬁ
; i++){

772 
iChûdKey
 = 
p
->
aCﬁ
[
i
].
iFrom
;

773 if–
aCh™ge
[
iChûdKey
]>=0 )  1;

774 if–
iChûdKey
==
pTab
->
iPKey
 && 
bChngRowid
 )  1;

777 
	}
}

791 
	$fkP¨ítIsModifõd
(

792 
TabÀ
 *
pTab
,

793 
FKey
 *
p
,

794 *
aCh™ge
,

795 
bChngRowid


797 
i
;

798 
i
=0; i<
p
->
nCﬁ
; i++){

799 *
zKey
 = 
p
->
aCﬁ
[
i
].
zCﬁ
;

800 
iKey
;

801 
iKey
=0; iKey<
pTab
->
nCﬁ
; iKey++){

802 if–
aCh™ge
[
iKey
]>=0 || (iKey==
pTab
->
iPKey
 && 
bChngRowid
) ){

803 
Cﬁumn
 *
pCﬁ
 = &
pTab
->
aCﬁ
[
iKey
];

804 if–
zKey
 ){

805 if–0==
	`sqlôe3SåICmp
(
pCﬁ
->
zName
, 
zKey
) )  1;

806 }if–
pCﬁ
->
cﬁFœgs
 & 
COLFLAG_PRIMKEY
 ){

813 
	}
}

820 
	$isSëNuŒA˘i⁄
(
P¨£
 *
pP¨£
, 
FKey
 *
pFKey
){

821 
P¨£
 *
pT›
 = 
	`sqlôe3P¨£T›Àvñ
(
pP¨£
);

822 if–
pT›
->
pTriggîPrg
 ){

823 
Triggî
 *
p
 = 
pT›
->
pTriggîPrg
->
pTriggî
;

824 if–(
p
==
pFKey
->
≠Triggî
[0] &&ÖFKey->
aA˘i⁄
[0]==
OE_SëNuŒ
)

825 || (
p
==
pFKey
->
≠Triggî
[1] &&ÖFKey->
aA˘i⁄
[1]==
OE_SëNuŒ
)

831 
	}
}

853 
	$sqlôe3FkCheck
(

854 
P¨£
 *
pP¨£
,

855 
TabÀ
 *
pTab
,

856 
ªgOld
,

857 
ªgNew
,

858 *
aCh™ge
,

859 
bChngRowid


861 
sqlôe3
 *
db
 = 
pP¨£
->db;

862 
FKey
 *
pFKey
;

863 
iDb
;

864 c⁄° *
zDb
;

865 
isIgn‹eEº‹s
 = 
pP¨£
->
dißbÀTriggîs
;

868 
	`as£π
–(
ªgOld
==0)!=(
ªgNew
==0) );

871 if–(
db
->
Êags
&
SQLITE_F‹eignKeys
)==0 ) ;

873 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pTab
->
pSchema
);

874 
zDb
 = 
db
->
aDb
[
iDb
].
zDbSName
;

878 
pFKey
=
pTab
->pFKey;ÖFKey;ÖFKeyıFKey->
pNextFrom
){

879 
TabÀ
 *
pTo
;

880 
Index
 *
pIdx
 = 0;

881 *
aiFªe
 = 0;

882 *
aiCﬁ
;

883 
iCﬁ
;

884 
i
;

885 
bIgn‹e
 = 0;

887 if–
aCh™ge


888 && 
	`sqlôe3_°ricmp
(
pTab
->
zName
, 
pFKey
->
zTo
)!=0

889 && 
	`fkChûdIsModifõd
(
pTab
, 
pFKey
, 
aCh™ge
, 
bChngRowid
)==0

898 if–
pP¨£
->
dißbÀTriggîs
 ){

899 
pTo
 = 
	`sqlôe3FödTabÀ
(
db
, 
pFKey
->
zTo
, 
zDb
);

901 
pTo
 = 
	`sqlôe3LoˇãTabÀ
(
pP¨£
, 0, 
pFKey
->
zTo
, 
zDb
);

903 if–!
pTo
 || 
	`sqlôe3FkLoˇãIndex
(
pP¨£
,ÖTo, 
pFKey
, &
pIdx
, &
aiFªe
) ){

904 
	`as£π
–
isIgn‹eEº‹s
==0 || (
ªgOld
!=0 && 
ªgNew
==0) );

905 if–!
isIgn‹eEº‹s
 || 
db
->
mÆlocFaûed
 ) ;

906 if–
pTo
==0 ){

914 
Vdbe
 *
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

915 
iJump
 = 
	`sqlôe3VdbeCuºítAddr
(
v
Ë+ 
pFKey
->
nCﬁ
 + 1;

916 
i
=0; i<
pFKey
->
nCﬁ
; i++){

917 
iReg
 = 
pFKey
->
aCﬁ
[
i
].
iFrom
 + 
ªgOld
 + 1;

918 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IsNuŒ
, 
iReg
, 
iJump
); 
	`VdbeCovîage
(v);

920 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_FkCou¡î
, 
pFKey
->
isDe„ºed
, -1);

924 
	`as£π
–
pFKey
->
nCﬁ
==1 || (
aiFªe
 && 
pIdx
) );

926 if–
aiFªe
 ){

927 
aiCﬁ
 = 
aiFªe
;

929 
iCﬁ
 = 
pFKey
->
aCﬁ
[0].
iFrom
;

930 
aiCﬁ
 = &
iCﬁ
;

932 
i
=0; i<
pFKey
->
nCﬁ
; i++){

933 if–
aiCﬁ
[
i
]==
pTab
->
iPKey
 ){

934 
aiCﬁ
[
i
] = -1;

936 
	`as£π
–
pIdx
==0 ||ÖIdx->
aiCﬁumn
[
i
]>=0 );

937 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


941 if–
db
->
xAuth
 ){

942 
rˇuth
;

943 *
zCﬁ
 = 
pTo
->
aCﬁ
[
pIdx
 ?ÖIdx->
aiCﬁumn
[
i
] :ÖTo->
iPKey
].
zName
;

944 
rˇuth
 = 
	`sqlôe3AuthRódCﬁ
(
pP¨£
, 
pTo
->
zName
, 
zCﬁ
, 
iDb
);

945 
bIgn‹e
 = (
rˇuth
==
SQLITE_IGNORE
);

953 
	`sqlôe3TabÀLock
(
pP¨£
, 
iDb
, 
pTo
->
äum
, 0,ÖTo->
zName
);

954 
pP¨£
->
nTab
++;

956 if–
ªgOld
!=0 ){

960 
	`fkLookupP¨ít
(
pP¨£
, 
iDb
, 
pTo
, 
pIdx
, 
pFKey
, 
aiCﬁ
, 
ªgOld
, -1, 
bIgn‹e
);

962 if–
ªgNew
!=0 && !
	`isSëNuŒA˘i⁄
(
pP¨£
, 
pFKey
) ){

971 
	`fkLookupP¨ít
(
pP¨£
, 
iDb
, 
pTo
, 
pIdx
, 
pFKey
, 
aiCﬁ
, 
ªgNew
, +1, 
bIgn‹e
);

974 
	`sqlôe3DbFªe
(
db
, 
aiFªe
);

979 
pFKey
 = 
	`sqlôe3FkRe„ªn˚s
(
pTab
);ÖFKey;ÖFKeyıFKey->
pNextTo
){

980 
Index
 *
pIdx
 = 0;

981 
SrcLi°
 *
pSrc
;

982 *
aiCﬁ
 = 0;

984 if–
aCh™ge
 && 
	`fkP¨ítIsModifõd
(
pTab
, 
pFKey
,áCh™ge, 
bChngRowid
)==0 ){

988 if–!
pFKey
->
isDe„ºed
 && !(
db
->
Êags
 & 
SQLITE_De„rFKs
)

989 && !
pP¨£
->
pT›Àvñ
 && !pP¨£->
isMu…iWrôe


991 
	`as£π
–
ªgOld
==0 && 
ªgNew
!=0 );

997 if–
	`sqlôe3FkLoˇãIndex
(
pP¨£
, 
pTab
, 
pFKey
, &
pIdx
, &
aiCﬁ
) ){

998 if–!
isIgn‹eEº‹s
 || 
db
->
mÆlocFaûed
 ) ;

1001 
	`as£π
–
aiCﬁ
 || 
pFKey
->
nCﬁ
==1 );

1005 
pSrc
 = 
	`sqlôe3SrcLi°Aµíd
(
db
, 0, 0, 0);

1006 if–
pSrc
 ){

1007 
SrcLi°_ôem
 *
pIãm
 = 
pSrc
->
a
;

1008 
pIãm
->
pTab
 = 
pFKey
->
pFrom
;

1009 
pIãm
->
zName
 = 
pFKey
->
pFrom
->zName;

1010 
pIãm
->
pTab
->
nTabRef
++;

1011 
pIãm
->
iCurs‹
 = 
pP¨£
->
nTab
++;

1013 if–
ªgNew
!=0 ){

1014 
	`fkSˇnChûdªn
(
pP¨£
, 
pSrc
, 
pTab
, 
pIdx
, 
pFKey
, 
aiCﬁ
, 
ªgNew
, -1);

1016 if–
ªgOld
!=0 ){

1017 
eA˘i⁄
 = 
pFKey
->
aA˘i⁄
[
aCh™ge
!=0];

1018 
	`fkSˇnChûdªn
(
pP¨£
, 
pSrc
, 
pTab
, 
pIdx
, 
pFKey
, 
aiCﬁ
, 
ªgOld
, 1);

1036 if–!
pFKey
->
isDe„ºed
 && 
eA˘i⁄
!=
OE_Casˇde
 &&ÉA˘i⁄!=
OE_SëNuŒ
 ){

1037 
	`sqlôe3MayAb‹t
(
pP¨£
);

1040 
pIãm
->
zName
 = 0;

1041 
	`sqlôe3SrcLi°Dñëe
(
db
, 
pSrc
);

1043 
	`sqlôe3DbFªe
(
db
, 
aiCﬁ
);

1045 
	}
}

1047 
	#COLUMN_MASK
(
x
Ë(((x)>31Ë? 0xfffffff‡: ((
u32
)1<<(x)))

	)

1053 
u32
 
	$sqlôe3FkOldmask
(

1054 
P¨£
 *
pP¨£
,

1055 
TabÀ
 *
pTab


1057 
u32
 
mask
 = 0;

1058 if–
pP¨£
->
db
->
Êags
&
SQLITE_F‹eignKeys
 ){

1059 
FKey
 *
p
;

1060 
i
;

1061 
p
=
pTab
->
pFKey
;Ö;Öı->
pNextFrom
){

1062 
i
=0; i<
p
->
nCﬁ
; i++Ë
mask
 |
	`COLUMN_MASK
’->
aCﬁ
[i].
iFrom
);

1064 
p
=
	`sqlôe3FkRe„ªn˚s
(
pTab
);Ö;Öı->
pNextTo
){

1065 
Index
 *
pIdx
 = 0;

1066 
	`sqlôe3FkLoˇãIndex
(
pP¨£
, 
pTab
, 
p
, &
pIdx
, 0);

1067 if–
pIdx
 ){

1068 
i
=0; i<
pIdx
->
nKeyCﬁ
; i++){

1069 
	`as£π
–
pIdx
->
aiCﬁumn
[
i
]>=0 );

1070 
mask
 |
	`COLUMN_MASK
(
pIdx
->
aiCﬁumn
[
i
]);

1075  
mask
;

1076 
	}
}

1093 
	$sqlôe3FkRequúed
(

1094 
P¨£
 *
pP¨£
,

1095 
TabÀ
 *
pTab
,

1096 *
aCh™ge
,

1097 
chngRowid


1099 if–
pP¨£
->
db
->
Êags
&
SQLITE_F‹eignKeys
 ){

1100 if–!
aCh™ge
 ){

1104  (
	`sqlôe3FkRe„ªn˚s
(
pTab
Ë||ÖTab->
pFKey
);

1108 
FKey
 *
p
;

1111 
p
=
pTab
->
pFKey
;Ö;Öı->
pNextFrom
){

1112 if–
	`fkChûdIsModifõd
(
pTab
, 
p
, 
aCh™ge
, 
chngRowid
) )  1;

1116 
p
=
	`sqlôe3FkRe„ªn˚s
(
pTab
);Ö;Öı->
pNextTo
){

1117 if–
	`fkP¨ítIsModifõd
(
pTab
, 
p
, 
aCh™ge
, 
chngRowid
) )  1;

1122 
	}
}

1153 
Triggî
 *
	$fkA˘i⁄Triggî
(

1154 
P¨£
 *
pP¨£
,

1155 
TabÀ
 *
pTab
,

1156 
FKey
 *
pFKey
,

1157 
Ex¥Li°
 *
pCh™ges


1159 
sqlôe3
 *
db
 = 
pP¨£
->db;

1160 
a˘i⁄
;

1161 
Triggî
 *
pTriggî
;

1162 
iA˘i⁄
 = (
pCh™ges
!=0);

1164 
a˘i⁄
 = 
pFKey
->
aA˘i⁄
[
iA˘i⁄
];

1165 if–
a˘i⁄
==
OE_Re°ri˘
 && (
db
->
Êags
 & 
SQLITE_De„rFKs
) ){

1168 
pTriggî
 = 
pFKey
->
≠Triggî
[
iA˘i⁄
];

1170 if–
a˘i⁄
!=
OE_N⁄e
 && !
pTriggî
 ){

1171 c⁄° *
zFrom
;

1172 
nFrom
;

1173 
Index
 *
pIdx
 = 0;

1174 *
aiCﬁ
 = 0;

1175 
TriggîSãp
 *
pSãp
 = 0;

1176 
Ex¥
 *
pWhîe
 = 0;

1177 
Ex¥Li°
 *
pLi°
 = 0;

1178 
Sñe˘
 *
pSñe˘
 = 0;

1179 
i
;

1180 
Ex¥
 *
pWhí
 = 0;

1182 if–
	`sqlôe3FkLoˇãIndex
(
pP¨£
, 
pTab
, 
pFKey
, &
pIdx
, &
aiCﬁ
) )  0;

1183 
	`as£π
–
aiCﬁ
 || 
pFKey
->
nCﬁ
==1 );

1185 
i
=0; i<
pFKey
->
nCﬁ
; i++){

1186 
Tokí
 
tOld
 = { "old", 3 };

1187 
Tokí
 
tNew
 = { "new", 3 };

1188 
Tokí
 
tFromCﬁ
;

1189 
Tokí
 
tToCﬁ
;

1190 
iFromCﬁ
;

1191 
Ex¥
 *
pEq
;

1193 
iFromCﬁ
 = 
aiCﬁ
 ?áiCﬁ[
i
] : 
pFKey
->
aCﬁ
[0].
iFrom
;

1194 
	`as£π
–
iFromCﬁ
>=0 );

1195 
	`as£π
–
pIdx
!=0 || (
pTab
->
iPKey
>=0 &&ÖTab->iPKey<pTab->
nCﬁ
) );

1196 
	`as£π
–
pIdx
==0 ||ÖIdx->
aiCﬁumn
[
i
]>=0 );

1197 
	`sqlôe3TokíInô
(&
tToCﬁ
,

1198 
pTab
->
aCﬁ
[
pIdx
 ?ÖIdx->
aiCﬁumn
[
i
] :ÖTab->
iPKey
].
zName
);

1199 
	`sqlôe3TokíInô
(&
tFromCﬁ
, 
pFKey
->
pFrom
->
aCﬁ
[
iFromCﬁ
].
zName
);

1205 
pEq
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_EQ
,

1206 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_DOT
,

1207 
	`sqlôe3Ex¥AŒoc
(
db
, 
TK_ID
, &
tOld
, 0),

1208 
	`sqlôe3Ex¥AŒoc
(
db
, 
TK_ID
, &
tToCﬁ
, 0)),

1209 
	`sqlôe3Ex¥AŒoc
(
db
, 
TK_ID
, &
tFromCﬁ
, 0)

1211 
pWhîe
 = 
	`sqlôe3Ex¥And
(
db
,ÖWhîe, 
pEq
);

1218 if–
pCh™ges
 ){

1219 
pEq
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_IS
,

1220 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_DOT
,

1221 
	`sqlôe3Ex¥AŒoc
(
db
, 
TK_ID
, &
tOld
, 0),

1222 
	`sqlôe3Ex¥AŒoc
(
db
, 
TK_ID
, &
tToCﬁ
, 0)),

1223 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_DOT
,

1224 
	`sqlôe3Ex¥AŒoc
(
db
, 
TK_ID
, &
tNew
, 0),

1225 
	`sqlôe3Ex¥AŒoc
(
db
, 
TK_ID
, &
tToCﬁ
, 0))

1227 
pWhí
 = 
	`sqlôe3Ex¥And
(
db
,ÖWhí, 
pEq
);

1230 if–
a˘i⁄
!=
OE_Re°ri˘
 && (a˘i⁄!=
OE_Casˇde
 || 
pCh™ges
) ){

1231 
Ex¥
 *
pNew
;

1232 if–
a˘i⁄
==
OE_Casˇde
 ){

1233 
pNew
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_DOT
,

1234 
	`sqlôe3Ex¥AŒoc
(
db
, 
TK_ID
, &
tNew
, 0),

1235 
	`sqlôe3Ex¥AŒoc
(
db
, 
TK_ID
, &
tToCﬁ
, 0));

1236 }if–
a˘i⁄
==
OE_SëDÊt
 ){

1237 
Ex¥
 *
pDÊt
 = 
pFKey
->
pFrom
->
aCﬁ
[
iFromCﬁ
].pDflt;

1238 if–
pDÊt
 ){

1239 
pNew
 = 
	`sqlôe3Ex¥Dup
(
db
, 
pDÊt
, 0);

1241 
pNew
 = 
	`sqlôe3Ex¥AŒoc
(
db
, 
TK_NULL
, 0, 0);

1244 
pNew
 = 
	`sqlôe3Ex¥AŒoc
(
db
, 
TK_NULL
, 0, 0);

1246 
pLi°
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
,ÖLi°, 
pNew
);

1247 
	`sqlôe3Ex¥Li°SëName
(
pP¨£
, 
pLi°
, &
tFromCﬁ
, 0);

1250 
	`sqlôe3DbFªe
(
db
, 
aiCﬁ
);

1252 
zFrom
 = 
pFKey
->
pFrom
->
zName
;

1253 
nFrom
 = 
	`sqlôe3SåÀn30
(
zFrom
);

1255 if–
a˘i⁄
==
OE_Re°ri˘
 ){

1256 
Tokí
 
tFrom
;

1257 
Ex¥
 *
pRai£
;

1259 
tFrom
.
z
 = 
zFrom
;

1260 
tFrom
.
n
 = 
nFrom
;

1261 
pRai£
 = 
	`sqlôe3Ex¥
(
db
, 
TK_RAISE
, "FOREIGN KEY constraint failed");

1262 if–
pRai£
 ){

1263 
pRai£
->
afföôy
 = 
OE_Ab‹t
;

1265 
pSñe˘
 = 
	`sqlôe3Sñe˘New
(
pP¨£
,

1266 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
, 0, 
pRai£
),

1267 
	`sqlôe3SrcLi°Aµíd
(
db
, 0, &
tFrom
, 0),

1268 
pWhîe
,

1271 
pWhîe
 = 0;

1275 
db
->
lookaside
.
bDißbÀ
++;

1277 
pTriggî
 = (
Triggî
 *)
	`sqlôe3DbMÆlocZîo
(
db
,

1278 (
Triggî
) +

1279 (
TriggîSãp
) +

1280 
nFrom
 + 1

1282 if–
pTriggî
 ){

1283 
pSãp
 = 
pTriggî
->
°ï_li°
 = (
TriggîSãp
 *)&pTrigger[1];

1284 
pSãp
->
zT¨gë
 = (*)&pStep[1];

1285 
	`mem˝y
((*)
pSãp
->
zT¨gë
, 
zFrom
, 
nFrom
);

1287 
pSãp
->
pWhîe
 = 
	`sqlôe3Ex¥Dup
(
db
,ÖWhîe, 
EXPRDUP_REDUCE
);

1288 
pSãp
->
pEx¥Li°
 = 
	`sqlôe3Ex¥Li°Dup
(
db
, 
pLi°
, 
EXPRDUP_REDUCE
);

1289 
pSãp
->
pSñe˘
 = 
	`sqlôe3Sñe˘Dup
(
db
,ÖSñe˘, 
EXPRDUP_REDUCE
);

1290 if–
pWhí
 ){

1291 
pWhí
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_NOT
,ÖWhen, 0);

1292 
pTriggî
->
pWhí
 = 
	`sqlôe3Ex¥Dup
(
db
,ÖWhí, 
EXPRDUP_REDUCE
);

1297 
db
->
lookaside
.
bDißbÀ
--;

1299 
	`sqlôe3Ex¥Dñëe
(
db
, 
pWhîe
);

1300 
	`sqlôe3Ex¥Dñëe
(
db
, 
pWhí
);

1301 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pLi°
);

1302 
	`sqlôe3Sñe˘Dñëe
(
db
, 
pSñe˘
);

1303 if–
db
->
mÆlocFaûed
==1 ){

1304 
	`fkTriggîDñëe
(
db
, 
pTriggî
);

1307 
	`as£π
–
pSãp
!=0 );

1309  
a˘i⁄
 ){

1310 
OE_Re°ri˘
:

1311 
pSãp
->
›
 = 
TK_SELECT
;

1313 
OE_Casˇde
:

1314 if–!
pCh™ges
 ){

1315 
pSãp
->
›
 = 
TK_DELETE
;

1319 
pSãp
->
›
 = 
TK_UPDATE
;

1321 
pSãp
->
pTrig
 = 
pTriggî
;

1322 
pTriggî
->
pSchema
 = 
pTab
->pSchema;

1323 
pTriggî
->
pTabSchema
 = 
pTab
->
pSchema
;

1324 
pFKey
->
≠Triggî
[
iA˘i⁄
] = 
pTriggî
;

1325 
pTriggî
->
›
 = (
pCh™ges
 ? 
TK_UPDATE
 : 
TK_DELETE
);

1328  
pTriggî
;

1329 
	}
}

1335 
	$sqlôe3FkA˘i⁄s
(

1336 
P¨£
 *
pP¨£
,

1337 
TabÀ
 *
pTab
,

1338 
Ex¥Li°
 *
pCh™ges
,

1339 
ªgOld
,

1340 *
aCh™ge
,

1341 
bChngRowid


1347 if–
pP¨£
->
db
->
Êags
&
SQLITE_F‹eignKeys
 ){

1348 
FKey
 *
pFKey
;

1349 
pFKey
 = 
	`sqlôe3FkRe„ªn˚s
(
pTab
);ÖFKey;ÖFKeyıFKey->
pNextTo
){

1350 if–
aCh™ge
==0 || 
	`fkP¨ítIsModifõd
(
pTab
, 
pFKey
,áCh™ge, 
bChngRowid
) ){

1351 
Triggî
 *
pA˘
 = 
	`fkA˘i⁄Triggî
(
pP¨£
, 
pTab
, 
pFKey
, 
pCh™ges
);

1352 if–
pA˘
 ){

1353 
	`sqlôe3CodeRowTriggîDúe˘
(
pP¨£
, 
pA˘
, 
pTab
, 
ªgOld
, 
OE_Ab‹t
, 0);

1358 
	}
}

1367 
	$sqlôe3FkDñëe
(
sqlôe3
 *
db
, 
TabÀ
 *
pTab
){

1368 
FKey
 *
pFKey
;

1369 
FKey
 *
pNext
;

1371 
	`as£π
–
db
==0 || 
	`IsVútuÆ
(
pTab
)

1372 || 
	`sqlôe3SchemaMuãxHñd
(
db
, 0, 
pTab
->
pSchema
) );

1373 
pFKey
=
pTab
->pFKey;ÖFKey;ÖFKey=
pNext
){

1376 if–!
db
 || db->
≤ByãsFªed
==0 ){

1377 if–
pFKey
->
pPªvTo
 ){

1378 
pFKey
->
pPªvTo
->
pNextTo
 =ÖFKey->pNextTo;

1380 *
p
 = (*)
pFKey
->
pNextTo
;

1381 c⁄° *
z
 = (
p
 ? 
pFKey
->
pNextTo
->
zTo
 :ÖFKey->zTo);

1382 
	`sqlôe3HashIn£π
(&
pTab
->
pSchema
->
fkeyHash
, 
z
, 
p
);

1384 if–
pFKey
->
pNextTo
 ){

1385 
pFKey
->
pNextTo
->
pPªvTo
 =ÖFKey->pPrevTo;

1392 
	`as£π
–
pFKey
->
isDe„ºed
==0 ||ÖFKey->isDeferred==1 );

1395 #i‚de‡
SQLITE_OMIT_TRIGGER


1396 
	`fkTriggîDñëe
(
db
, 
pFKey
->
≠Triggî
[0]);

1397 
	`fkTriggîDñëe
(
db
, 
pFKey
->
≠Triggî
[1]);

1400 
pNext
 = 
pFKey
->
pNextFrom
;

1401 
	`sqlôe3DbFªe
(
db
, 
pFKey
);

1403 
	}
}

	@func.c

16 
	~"sqlôeI¡.h
"

17 
	~<°dlib.h
>

18 
	~<as£π.h
>

19 
	~"vdbeI¡.h
"

24 
CﬁlSeq
 *
	$sqlôe3GëFuncCﬁlSeq
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
){

25 
VdbeOp
 *
pOp
;

26 
	`as£π
–
c⁄ãxt
->
pVdbe
!=0 );

27 
pOp
 = &
c⁄ãxt
->
pVdbe
->
aOp
[c⁄ãxt->
iOp
-1];

28 
	`as£π
–
pOp
->
›code
==
OP_CﬁlSeq
 );

29 
	`as£π
–
pOp
->
p4ty≥
==
P4_COLLSEQ
 );

30  
pOp
->
p4
.
pCﬁl
;

31 
	}
}

37 
	$sqlôe3SkùAccumuœt‹Lﬂd
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
){

38 
c⁄ãxt
->
skùFœg
 = 1;

39 
	}
}

44 
	$mömaxFunc
(

45 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

46 
¨gc
,

47 
sqlôe3_vÆue
 **
¨gv


49 
i
;

50 
mask
;

51 
iBe°
;

52 
CﬁlSeq
 *
pCﬁl
;

54 
	`as£π
–
¨gc
>1 );

55 
mask
 = 
	`sqlôe3_u£r_d©a
(
c⁄ãxt
)==0 ? 0 : -1;

56 
pCﬁl
 = 
	`sqlôe3GëFuncCﬁlSeq
(
c⁄ãxt
);

57 
	`as£π
–
pCﬁl
 );

58 
	`as£π
–
mask
==-1 || mask==0 );

59 
iBe°
 = 0;

60 if–
	`sqlôe3_vÆue_ty≥
(
¨gv
[0])==
SQLITE_NULL
 ) ;

61 
i
=1; i<
¨gc
; i++){

62 if–
	`sqlôe3_vÆue_ty≥
(
¨gv
[
i
])==
SQLITE_NULL
 ) ;

63 if–(
	`sqlôe3MemCom∑ª
(
¨gv
[
iBe°
],árgv[
i
], 
pCﬁl
)^
mask
)>=0 ){

64 
	`ã°ˇ£
–
mask
==0 );

65 
iBe°
 = 
i
;

68 
	`sqlôe3_ªsu…_vÆue
(
c⁄ãxt
, 
¨gv
[
iBe°
]);

69 
	}
}

74 
	$ty≥ofFunc
(

75 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

76 
NŸU£d
,

77 
sqlôe3_vÆue
 **
¨gv


79 c⁄° *
z
 = 0;

80 
	`UNUSED_PARAMETER
(
NŸU£d
);

81  
	`sqlôe3_vÆue_ty≥
(
¨gv
[0]) ){

82 
SQLITE_INTEGER
: 
z
 = "integer"; ;

83 
SQLITE_TEXT
: 
z
 = "text"; ;

84 
SQLITE_FLOAT
: 
z
 = "real"; ;

85 
SQLITE_BLOB
: 
z
 = "blob"; ;

86 : 
z
 = "null"; ;

88 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
z
, -1, 
SQLITE_STATIC
);

89 
	}
}

95 
	$ÀngthFunc
(

96 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

97 
¨gc
,

98 
sqlôe3_vÆue
 **
¨gv


100 
Àn
;

102 
	`as£π
–
¨gc
==1 );

103 
	`UNUSED_PARAMETER
(
¨gc
);

104  
	`sqlôe3_vÆue_ty≥
(
¨gv
[0]) ){

105 
SQLITE_BLOB
:

106 
SQLITE_INTEGER
:

107 
SQLITE_FLOAT
: {

108 
	`sqlôe3_ªsu…_öt
(
c⁄ãxt
, 
	`sqlôe3_vÆue_byãs
(
¨gv
[0]));

111 
SQLITE_TEXT
: {

112 c⁄° *
z
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

113 if–
z
==0 ) ;

114 
Àn
 = 0;

115  *
z
 ){

116 
Àn
++;

117 
	`SQLITE_SKIP_UTF8
(
z
);

119 
	`sqlôe3_ªsu…_öt
(
c⁄ãxt
, 
Àn
);

123 
	`sqlôe3_ªsu…_nuŒ
(
c⁄ãxt
);

127 
	}
}

135 
	$absFunc
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
, 
¨gc
, 
sqlôe3_vÆue
 **
¨gv
){

136 
	`as£π
–
¨gc
==1 );

137 
	`UNUSED_PARAMETER
(
¨gc
);

138  
	`sqlôe3_vÆue_ty≥
(
¨gv
[0]) ){

139 
SQLITE_INTEGER
: {

140 
i64
 
iVÆ
 = 
	`sqlôe3_vÆue_öt64
(
¨gv
[0]);

141 if–
iVÆ
<0 ){

142 if–
iVÆ
==
SMALLEST_INT64
 ){

146 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
, "integer overflow", -1);

149 
iVÆ
 = -iVal;

151 
	`sqlôe3_ªsu…_öt64
(
c⁄ãxt
, 
iVÆ
);

154 
SQLITE_NULL
: {

156 
	`sqlôe3_ªsu…_nuŒ
(
c⁄ãxt
);

165 
rVÆ
 = 
	`sqlôe3_vÆue_doubÀ
(
¨gv
[0]);

166 if–
rVÆ
<0 )ÑVal = -rVal;

167 
	`sqlôe3_ªsu…_doubÀ
(
c⁄ãxt
, 
rVÆ
);

171 
	}
}

184 
	$ö°rFunc
(

185 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

186 
¨gc
,

187 
sqlôe3_vÆue
 **
¨gv


189 c⁄° *
zHay°ack
;

190 c⁄° *
zNìdÀ
;

191 
nHay°ack
;

192 
nNìdÀ
;

193 
ty≥Hay°ack
, 
ty≥NìdÀ
;

194 
N
 = 1;

195 
isText
;

197 
	`UNUSED_PARAMETER
(
¨gc
);

198 
ty≥Hay°ack
 = 
	`sqlôe3_vÆue_ty≥
(
¨gv
[0]);

199 
ty≥NìdÀ
 = 
	`sqlôe3_vÆue_ty≥
(
¨gv
[1]);

200 if–
ty≥Hay°ack
==
SQLITE_NULL
 || 
ty≥NìdÀ
==SQLITE_NULL ) ;

201 
nHay°ack
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[0]);

202 
nNìdÀ
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[1]);

203 if–
nNìdÀ
>0 ){

204 if–
ty≥Hay°ack
==
SQLITE_BLOB
 && 
ty≥NìdÀ
==SQLITE_BLOB ){

205 
zHay°ack
 = 
	`sqlôe3_vÆue_blob
(
¨gv
[0]);

206 
zNìdÀ
 = 
	`sqlôe3_vÆue_blob
(
¨gv
[1]);

207 
	`as£π
–
zNìdÀ
!=0 );

208 
	`as£π
–
zHay°ack
!=0 || 
nHay°ack
==0 );

209 
isText
 = 0;

211 
zHay°ack
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

212 
zNìdÀ
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[1]);

213 
isText
 = 1;

214 if–
zHay°ack
==0 || 
zNìdÀ
==0 ) ;

216  
nNìdÀ
<=
nHay°ack
 && 
	`memcmp
(
zHay°ack
, 
zNìdÀ
,ÇNeedle)!=0 ){

217 
N
++;

219 
nHay°ack
--;

220 
zHay°ack
++;

221 } 
isText
 && (
zHay°ack
[0]&0xc0)==0x80 );

223 if–
nNìdÀ
>
nHay°ack
 ) 
N
 = 0;

225 
	`sqlôe3_ªsu…_öt
(
c⁄ãxt
, 
N
);

226 
	}
}

231 
	$¥ötfFunc
(

232 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

233 
¨gc
,

234 
sqlôe3_vÆue
 **
¨gv


236 
PrötfArgumíts
 
x
;

237 
SåAccum
 
°r
;

238 c⁄° *
zF‹m©
;

239 
n
;

240 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

242 if–
¨gc
>=1 && (
zF‹m©
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]))!=0 ){

243 
x
.
nArg
 = 
¨gc
-1;

244 
x
.
nU£d
 = 0;

245 
x
.
≠Arg
 = 
¨gv
+1;

246 
	`sqlôe3SåAccumInô
(&
°r
, 
db
, 0, 0, db->
aLimô
[
SQLITE_LIMIT_LENGTH
]);

247 
°r
.
¥ötfFœgs
 = 
SQLITE_PRINTF_SQLFUNC
;

248 
	`sqlôe3XPrötf
(&
°r
, 
zF‹m©
, &
x
);

249 
n
 = 
°r
.
nCh¨
;

250 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
	`sqlôe3SåAccumFöish
(&
°r
), 
n
,

251 
SQLITE_DYNAMIC
);

253 
	}
}

267 
	$sub°rFunc
(

268 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

269 
¨gc
,

270 
sqlôe3_vÆue
 **
¨gv


272 c⁄° *
z
;

273 c⁄° *
z2
;

274 
Àn
;

275 
p0ty≥
;

276 
i64
 
p1
, 
p2
;

277 
√gP2
 = 0;

279 
	`as£π
–
¨gc
==3 ||árgc==2 );

280 if–
	`sqlôe3_vÆue_ty≥
(
¨gv
[1])==
SQLITE_NULL


281 || (
¨gc
==3 && 
	`sqlôe3_vÆue_ty≥
(
¨gv
[2])==
SQLITE_NULL
)

285 
p0ty≥
 = 
	`sqlôe3_vÆue_ty≥
(
¨gv
[0]);

286 
p1
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[1]);

287 if–
p0ty≥
==
SQLITE_BLOB
 ){

288 
Àn
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[0]);

289 
z
 = 
	`sqlôe3_vÆue_blob
(
¨gv
[0]);

290 if–
z
==0 ) ;

291 
	`as£π
–
Àn
==
	`sqlôe3_vÆue_byãs
(
¨gv
[0]) );

293 
z
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

294 if–
z
==0 ) ;

295 
Àn
 = 0;

296 if–
p1
<0 ){

297 
z2
=
z
; *z2; 
Àn
++){

298 
	`SQLITE_SKIP_UTF8
(
z2
);

302 #ifde‡
SQLITE_SUBSTR_COMPATIBILITY


308 if–
p1
==0 )Ö1 = 1;

310 if–
¨gc
==3 ){

311 
p2
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[2]);

312 if–
p2
<0 ){

313 
p2
 = -p2;

314 
√gP2
 = 1;

317 
p2
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
)->
aLimô
[
SQLITE_LIMIT_LENGTH
];

319 if–
p1
<0 ){

320 
p1
 +
Àn
;

321 if–
p1
<0 ){

322 
p2
 +
p1
;

323 if–
p2
<0 )Ö2 = 0;

324 
p1
 = 0;

326 }if–
p1
>0 ){

327 
p1
--;

328 }if–
p2
>0 ){

329 
p2
--;

331 if–
√gP2
 ){

332 
p1
 -
p2
;

333 if–
p1
<0 ){

334 
p2
 +
p1
;

335 
p1
 = 0;

338 
	`as£π
–
p1
>=0 && 
p2
>=0 );

339 if–
p0ty≥
!=
SQLITE_BLOB
 ){

340  *
z
 && 
p1
 ){

341 
	`SQLITE_SKIP_UTF8
(
z
);

342 
p1
--;

344 
z2
=
z
; *z2 && 
p2
;Ö2--){

345 
	`SQLITE_SKIP_UTF8
(
z2
);

347 
	`sqlôe3_ªsu…_ãxt64
(
c⁄ãxt
, (*)
z
, 
z2
-z, 
SQLITE_TRANSIENT
,

348 
SQLITE_UTF8
);

350 if–
p1
+
p2
>
Àn
 ){

351 
p2
 = 
Àn
-
p1
;

352 if–
p2
<0 )Ö2 = 0;

354 
	`sqlôe3_ªsu…_blob64
(
c⁄ãxt
, (*)&
z
[
p1
], (
u64
)
p2
, 
SQLITE_TRANSIENT
);

356 
	}
}

361 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


362 
	$roundFunc
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
, 
¨gc
, 
sqlôe3_vÆue
 **
¨gv
){

363 
n
 = 0;

364 
r
;

365 *
zBuf
;

366 
	`as£π
–
¨gc
==1 ||árgc==2 );

367 if–
¨gc
==2 ){

368 if–
SQLITE_NULL
==
	`sqlôe3_vÆue_ty≥
(
¨gv
[1]) ) ;

369 
n
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[1]);

370 if–
n
>30 )Ç = 30;

371 if–
n
<0 )Ç = 0;

373 if–
	`sqlôe3_vÆue_ty≥
(
¨gv
[0])==
SQLITE_NULL
 ) ;

374 
r
 = 
	`sqlôe3_vÆue_doubÀ
(
¨gv
[0]);

379 if–
n
==0 && 
r
>=0 &&Ñ<
LARGEST_INT64
-1 ){

380 
r
 = ()((
sqlôe_öt64
)(r+0.5));

381 }if–
n
==0 && 
r
<0 && (-r)<
LARGEST_INT64
-1 ){

382 
r
 = -()((
sqlôe_öt64
)((-r)+0.5));

384 
zBuf
 = 
	`sqlôe3_m¥ötf
("%.*f",
n
,
r
);

385 if–
zBuf
==0 ){

386 
	`sqlôe3_ªsu…_îr‹_nomem
(
c⁄ãxt
);

389 
	`sqlôe3AtoF
(
zBuf
, &
r
, 
	`sqlôe3SåÀn30
(zBuf), 
SQLITE_UTF8
);

390 
	`sqlôe3_‰ì
(
zBuf
);

392 
	`sqlôe3_ªsu…_doubÀ
(
c⁄ãxt
, 
r
);

393 
	}
}

403 *
	$c⁄ãxtMÆloc
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
, 
i64
 
nByã
){

404 *
z
;

405 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

406 
	`as£π
–
nByã
>0 );

407 
	`ã°ˇ£
–
nByã
==
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
] );

408 
	`ã°ˇ£
–
nByã
==
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
]+1 );

409 if–
nByã
>
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
] ){

410 
	`sqlôe3_ªsu…_îr‹_toobig
(
c⁄ãxt
);

411 
z
 = 0;

413 
z
 = 
	`sqlôe3MÆloc
(
nByã
);

414 if–!
z
 ){

415 
	`sqlôe3_ªsu…_îr‹_nomem
(
c⁄ãxt
);

418  
z
;

419 
	}
}

424 
	$uµîFunc
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
, 
¨gc
, 
sqlôe3_vÆue
 **
¨gv
){

425 *
z1
;

426 c⁄° *
z2
;

427 
i
, 
n
;

428 
	`UNUSED_PARAMETER
(
¨gc
);

429 
z2
 = (*)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

430 
n
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[0]);

432 
	`as£π
–
z2
==(*)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]) );

433 if–
z2
 ){

434 
z1
 = 
	`c⁄ãxtMÆloc
(
c⁄ãxt
, ((
i64
)
n
)+1);

435 if–
z1
 ){

436 
i
=0; i<
n
; i++){

437 
z1
[
i
] = ()
	`sqlôe3Touµî
(
z2
[i]);

439 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
z1
, 
n
, 
sqlôe3_‰ì
);

442 
	}
}

443 
	$lowîFunc
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
, 
¨gc
, 
sqlôe3_vÆue
 **
¨gv
){

444 *
z1
;

445 c⁄° *
z2
;

446 
i
, 
n
;

447 
	`UNUSED_PARAMETER
(
¨gc
);

448 
z2
 = (*)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

449 
n
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[0]);

451 
	`as£π
–
z2
==(*)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]) );

452 if–
z2
 ){

453 
z1
 = 
	`c⁄ãxtMÆloc
(
c⁄ãxt
, ((
i64
)
n
)+1);

454 if–
z1
 ){

455 
i
=0; i<
n
; i++){

456 
z1
[
i
] = 
	`sqlôe3Tﬁowî
(
z2
[i]);

458 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
z1
, 
n
, 
sqlôe3_‰ì
);

461 
	}
}

471 
	#no›Func
 
vîsi⁄Func


	)

476 
	$øndomFunc
(

477 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

478 
NŸU£d
,

479 
sqlôe3_vÆue
 **
NŸU£d2


481 
sqlôe_öt64
 
r
;

482 
	`UNUSED_PARAMETER2
(
NŸU£d
, 
NŸU£d2
);

483 
	`sqlôe3_øndom√ss
((
r
), &r);

484 if–
r
<0 ){

493 
r
 = -‘ & 
LARGEST_INT64
);

495 
	`sqlôe3_ªsu…_öt64
(
c⁄ãxt
, 
r
);

496 
	}
}

502 
	$øndomBlob
(

503 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

504 
¨gc
,

505 
sqlôe3_vÆue
 **
¨gv


507 
n
;

508 *
p
;

509 
	`as£π
–
¨gc
==1 );

510 
	`UNUSED_PARAMETER
(
¨gc
);

511 
n
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[0]);

512 if–
n
<1 ){

513 
n
 = 1;

515 
p
 = 
	`c⁄ãxtMÆloc
(
c⁄ãxt
, 
n
);

516 if–
p
 ){

517 
	`sqlôe3_øndom√ss
(
n
, 
p
);

518 
	`sqlôe3_ªsu…_blob
(
c⁄ãxt
, (*)
p
, 
n
, 
sqlôe3_‰ì
);

520 
	}
}

526 
	$œ°_ö£π_rowid
(

527 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

528 
NŸU£d
,

529 
sqlôe3_vÆue
 **
NŸU£d2


531 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

532 
	`UNUSED_PARAMETER2
(
NŸU£d
, 
NŸU£d2
);

536 
	`sqlôe3_ªsu…_öt64
(
c⁄ãxt
, 
	`sqlôe3_œ°_ö£π_rowid
(
db
));

537 
	}
}

546 
	$ch™ges
(

547 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

548 
NŸU£d
,

549 
sqlôe3_vÆue
 **
NŸU£d2


551 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

552 
	`UNUSED_PARAMETER2
(
NŸU£d
, 
NŸU£d2
);

553 
	`sqlôe3_ªsu…_öt
(
c⁄ãxt
, 
	`sqlôe3_ch™ges
(
db
));

554 
	}
}

560 
	$tŸÆ_ch™ges
(

561 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

562 
NŸU£d
,

563 
sqlôe3_vÆue
 **
NŸU£d2


565 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

566 
	`UNUSED_PARAMETER2
(
NŸU£d
, 
NŸU£d2
);

569 
	`sqlôe3_ªsu…_öt
(
c⁄ãxt
, 
	`sqlôe3_tŸÆ_ch™ges
(
db
));

570 
	}
}

575 
	scom∑ªInfo
 {

576 
u8
 
	mm©chAŒ
;

577 
u8
 
	mm©chO√
;

578 
u8
 
	mm©chSë
;

579 
u8
 
	mnoCa£
;

588 #i‡
deföed
(
SQLITE_EBCDIC
)

589 
	#sqlôe3Utf8Ród
(
A
Ë(*((*A)++))

	)

590 
	#Utf8Ród
(
A
Ë(*(A++))

	)

592 
	#Utf8Ród
(
A
Ë(A[0]<0x80?*(A++):
	`sqlôe3Utf8Ród
(&A))

	)

595 c⁄° 
com∑ªInfo
 
	gglobInfo
 = { '*', '?', '[', 0 };

598 c⁄° 
com∑ªInfo
 
	glikeInfoN‹m
 = { '%', '_', 0, 1 };

601 c⁄° 
com∑ªInfo
 
	glikeInfoA…
 = { '%', '_', 0, 0 };

606 
	#SQLITE_MATCH
 0

	)

607 
	#SQLITE_NOMATCH
 1

	)

608 
	#SQLITE_NOWILDCARDMATCH
 2

	)

648 
	$∑âînCom∑ª
(

649 c⁄° 
u8
 *
zP©ã∫
,

650 c⁄° 
u8
 *
zSåög
,

651 c⁄° 
com∑ªInfo
 *
pInfo
,

652 
u32
 
m©chOthî


654 
u32
 
c
, 
c2
;

655 
u32
 
m©chO√
 = 
pInfo
->matchOne;

656 
u32
 
m©chAŒ
 = 
pInfo
->matchAll;

657 
u8
 
noCa£
 = 
pInfo
->noCase;

658 c⁄° 
u8
 *
zEsˇ≥d
 = 0;

660  (
c
 = 
	`Utf8Ród
(
zP©ã∫
))!=0 ){

661 if–
c
==
m©chAŒ
 ){

665  (
c
=
	`Utf8Ród
(
zP©ã∫
)Ë=
m©chAŒ
 || c =
m©chO√
 ){

666 if–
c
==
m©chO√
 && 
	`sqlôe3Utf8Ród
(&
zSåög
)==0 ){

667  
SQLITE_NOWILDCARDMATCH
;

670 if–
c
==0 ){

671  
SQLITE_MATCH
;

672 }if–
c
==
m©chOthî
 ){

673 if–
pInfo
->
m©chSë
==0 ){

674 
c
 = 
	`sqlôe3Utf8Ród
(&
zP©ã∫
);

675 if–
c
==0 )  
SQLITE_NOWILDCARDMATCH
;

679 
	`as£π
–
m©chOthî
<0x80 );

680  *
zSåög
 ){

681 
bM©ch
 = 
	`∑âînCom∑ª
(&
zP©ã∫
[-1],
zSåög
,
pInfo
,
m©chOthî
);

682 if–
bM©ch
!=
SQLITE_NOMATCH
 )  bMatch;

683 
	`SQLITE_SKIP_UTF8
(
zSåög
);

685  
SQLITE_NOWILDCARDMATCH
;

698 if–
c
<=0x80 ){

699 
u32
 
cx
;

700 
bM©ch
;

701 if–
noCa£
 ){

702 
cx
 = 
	`sqlôe3Touµî
(
c
);

703 
c
 = 
	`sqlôe3Tﬁowî
(c);

705 
cx
 = 
c
;

707  (
c2
 = *(
zSåög
++))!=0 ){

708 if–
c2
!=
c
 && c2!=
cx
 ) ;

709 
bM©ch
 = 
	`∑âînCom∑ª
(
zP©ã∫
,
zSåög
,
pInfo
,
m©chOthî
);

710 if–
bM©ch
!=
SQLITE_NOMATCH
 )  bMatch;

713 
bM©ch
;

714  (
c2
 = 
	`Utf8Ród
(
zSåög
))!=0 ){

715 if–
c2
!=
c
 ) ;

716 
bM©ch
 = 
	`∑âînCom∑ª
(
zP©ã∫
,
zSåög
,
pInfo
,
m©chOthî
);

717 if–
bM©ch
!=
SQLITE_NOMATCH
 )  bMatch;

720  
SQLITE_NOWILDCARDMATCH
;

722 if–
c
==
m©chOthî
 ){

723 if–
pInfo
->
m©chSë
==0 ){

724 
c
 = 
	`sqlôe3Utf8Ród
(&
zP©ã∫
);

725 if–
c
==0 )  
SQLITE_NOMATCH
;

726 
zEsˇ≥d
 = 
zP©ã∫
;

728 
u32
 
¥i‹_c
 = 0;

729 
£í
 = 0;

730 
övît
 = 0;

731 
c
 = 
	`sqlôe3Utf8Ród
(&
zSåög
);

732 if–
c
==0 )  
SQLITE_NOMATCH
;

733 
c2
 = 
	`sqlôe3Utf8Ród
(&
zP©ã∫
);

734 if–
c2
=='^' ){

735 
övît
 = 1;

736 
c2
 = 
	`sqlôe3Utf8Ród
(&
zP©ã∫
);

738 if–
c2
==']' ){

739 if–
c
==']' ) 
£í
 = 1;

740 
c2
 = 
	`sqlôe3Utf8Ród
(&
zP©ã∫
);

742  
c2
 && c2!=']' ){

743 if–
c2
=='-' && 
zP©ã∫
[0]!=']' && zP©ã∫[0]!=0 && 
¥i‹_c
>0 ){

744 
c2
 = 
	`sqlôe3Utf8Ród
(&
zP©ã∫
);

745 if–
c
>=
¥i‹_c
 && c<=
c2
 ) 
£í
 = 1;

746 
¥i‹_c
 = 0;

748 if–
c
==
c2
 ){

749 
£í
 = 1;

751 
¥i‹_c
 = 
c2
;

753 
c2
 = 
	`sqlôe3Utf8Ród
(&
zP©ã∫
);

755 if–
c2
==0 || (
£í
 ^ 
övît
)==0 ){

756  
SQLITE_NOMATCH
;

761 
c2
 = 
	`Utf8Ród
(
zSåög
);

762 if–
c
==
c2
 ) ;

763 if–
noCa£
 && 
	`sqlôe3Tﬁowî
(
c
)==sqlôe3Tﬁowî(
c2
) && c<0x80 && c2<0x80 ){

766 if–
c
==
m©chO√
 && 
zP©ã∫
!=
zEsˇ≥d
 && 
c2
!=0 ) ;

767  
SQLITE_NOMATCH
;

769  *
zSåög
==0 ? 
SQLITE_MATCH
 : 
SQLITE_NOMATCH
;

770 
	}
}

776 
	$sqlôe3_°rglob
(c⁄° *
zGlobP©ã∫
, c⁄° *
zSåög
){

777  
	`∑âînCom∑ª
((
u8
*)
zGlobP©ã∫
, (u8*)
zSåög
, &
globInfo
, '[');

778 
	}
}

784 
	$sqlôe3_°æike
(c⁄° *
zP©ã∫
, c⁄° *
zSå
, 
esc
){

785  
	`∑âînCom∑ª
((
u8
*)
zP©ã∫
, (u8*)
zSå
, &
likeInfoN‹m
, 
esc
);

786 
	}
}

793 #ifde‡
SQLITE_TEST


794 
	gsqlôe3_like_cou¡
 = 0;

810 
	$likeFunc
(

811 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

812 
¨gc
,

813 
sqlôe3_vÆue
 **
¨gv


815 c⁄° *
zA
, *
zB
;

816 
u32
 
esˇ≥
;

817 
nP©
;

818 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

819 
com∑ªInfo
 *
pInfo
 = 
	`sqlôe3_u£r_d©a
(
c⁄ãxt
);

821 #ifde‡
SQLITE_LIKE_DOESNT_MATCH_BLOBS


822 if–
	`sqlôe3_vÆue_ty≥
(
¨gv
[0])==
SQLITE_BLOB


823 || 
	`sqlôe3_vÆue_ty≥
(
¨gv
[1])==
SQLITE_BLOB


825 #ifde‡
SQLITE_TEST


826 
sqlôe3_like_cou¡
++;

828 
	`sqlôe3_ªsu…_öt
(
c⁄ãxt
, 0);

832 
zB
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

833 
zA
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[1]);

838 
nP©
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[0]);

839 
	`ã°ˇ£
–
nP©
==
db
->
aLimô
[
SQLITE_LIMIT_LIKE_PATTERN_LENGTH
] );

840 
	`ã°ˇ£
–
nP©
==
db
->
aLimô
[
SQLITE_LIMIT_LIKE_PATTERN_LENGTH
]+1 );

841 if–
nP©
 > 
db
->
aLimô
[
SQLITE_LIMIT_LIKE_PATTERN_LENGTH
] ){

842 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
, "LIKE or GLOBÖatternÅoo complex", -1);

845 
	`as£π
–
zB
==
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]) );

847 if–
¨gc
==3 ){

851 c⁄° *
zEsc
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[2]);

852 if–
zEsc
==0 ) ;

853 if–
	`sqlôe3Utf8Ch¨Lí
((*)
zEsc
, -1)!=1 ){

854 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
,

858 
esˇ≥
 = 
	`sqlôe3Utf8Ród
(&
zEsc
);

860 
esˇ≥
 = 
pInfo
->
m©chSë
;

862 if–
zA
 && 
zB
 ){

863 #ifde‡
SQLITE_TEST


864 
sqlôe3_like_cou¡
++;

866 
	`sqlôe3_ªsu…_öt
(
c⁄ãxt
, 
	`∑âînCom∑ª
(
zB
, 
zA
, 
pInfo
, 
esˇ≥
)==
SQLITE_MATCH
);

868 
	}
}

875 
	$nuŒifFunc
(

876 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

877 
NŸU£d
,

878 
sqlôe3_vÆue
 **
¨gv


880 
CﬁlSeq
 *
pCﬁl
 = 
	`sqlôe3GëFuncCﬁlSeq
(
c⁄ãxt
);

881 
	`UNUSED_PARAMETER
(
NŸU£d
);

882 if–
	`sqlôe3MemCom∑ª
(
¨gv
[0],árgv[1], 
pCﬁl
)!=0 ){

883 
	`sqlôe3_ªsu…_vÆue
(
c⁄ãxt
, 
¨gv
[0]);

885 
	}
}

891 
	$vîsi⁄Func
(

892 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

893 
NŸU£d
,

894 
sqlôe3_vÆue
 **
NŸU£d2


896 
	`UNUSED_PARAMETER2
(
NŸU£d
, 
NŸU£d2
);

899 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
	`sqlôe3_libvîsi⁄
(), -1, 
SQLITE_STATIC
);

900 
	}
}

907 
	$sour˚idFunc
(

908 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

909 
NŸU£d
,

910 
sqlôe3_vÆue
 **
NŸU£d2


912 
	`UNUSED_PARAMETER2
(
NŸU£d
, 
NŸU£d2
);

915 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
	`sqlôe3_sour˚id
(), -1, 
SQLITE_STATIC
);

916 
	}
}

923 
	$îæogFunc
(

924 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

925 
¨gc
,

926 
sqlôe3_vÆue
 **
¨gv


928 
	`UNUSED_PARAMETER
(
¨gc
);

929 
	`UNUSED_PARAMETER
(
c⁄ãxt
);

930 
	`sqlôe3_log
(
	`sqlôe3_vÆue_öt
(
¨gv
[0]), "%s", 
	`sqlôe3_vÆue_ãxt
(argv[1]));

931 
	}
}

938 #i‚de‡
SQLITE_OMIT_COMPILEOPTION_DIAGS


939 
	$compûe›ti⁄u£dFunc
(

940 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

941 
¨gc
,

942 
sqlôe3_vÆue
 **
¨gv


944 c⁄° *
zO±Name
;

945 
	`as£π
–
¨gc
==1 );

946 
	`UNUSED_PARAMETER
(
¨gc
);

951 if–(
zO±Name
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]))!=0 ){

952 
	`sqlôe3_ªsu…_öt
(
c⁄ãxt
, 
	`sqlôe3_compûe›ti⁄_u£d
(
zO±Name
));

954 
	}
}

962 #i‚de‡
SQLITE_OMIT_COMPILEOPTION_DIAGS


963 
	$compûe›ti⁄gëFunc
(

964 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

965 
¨gc
,

966 
sqlôe3_vÆue
 **
¨gv


968 
n
;

969 
	`as£π
–
¨gc
==1 );

970 
	`UNUSED_PARAMETER
(
¨gc
);

974 
n
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[0]);

975 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
	`sqlôe3_compûe›ti⁄_gë
(
n
), -1, 
SQLITE_STATIC
);

976 
	}
}

981 c⁄° 
	ghexdigôs
[] = {

993 
	$quŸeFunc
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
, 
¨gc
, 
sqlôe3_vÆue
 **
¨gv
){

994 
	`as£π
–
¨gc
==1 );

995 
	`UNUSED_PARAMETER
(
¨gc
);

996  
	`sqlôe3_vÆue_ty≥
(
¨gv
[0]) ){

997 
SQLITE_FLOAT
: {

998 
r1
, 
r2
;

999 
zBuf
[50];

1000 
r1
 = 
	`sqlôe3_vÆue_doubÀ
(
¨gv
[0]);

1001 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%!.15g", 
r1
);

1002 
	`sqlôe3AtoF
(
zBuf
, &
r2
, 20, 
SQLITE_UTF8
);

1003 if–
r1
!=
r2
 ){

1004 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%!.20e", 
r1
);

1006 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
zBuf
, -1, 
SQLITE_TRANSIENT
);

1009 
SQLITE_INTEGER
: {

1010 
	`sqlôe3_ªsu…_vÆue
(
c⁄ãxt
, 
¨gv
[0]);

1013 
SQLITE_BLOB
: {

1014 *
zText
 = 0;

1015 c⁄° *
zBlob
 = 
	`sqlôe3_vÆue_blob
(
¨gv
[0]);

1016 
nBlob
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[0]);

1017 
	`as£π
–
zBlob
==
	`sqlôe3_vÆue_blob
(
¨gv
[0]) );

1018 
zText
 = (*)
	`c⁄ãxtMÆloc
(
c⁄ãxt
, (2*(
i64
)
nBlob
)+4);

1019 if–
zText
 ){

1020 
i
;

1021 
i
=0; i<
nBlob
; i++){

1022 
zText
[(
i
*2)+2] = 
hexdigôs
[(
zBlob
[i]>>4)&0x0F];

1023 
zText
[(
i
*2)+3] = 
hexdigôs
[(
zBlob
[i])&0x0F];

1025 
zText
[(
nBlob
*2)+2] = '\'';

1026 
zText
[(
nBlob
*2)+3] = '\0';

1027 
zText
[0] = 'X';

1028 
zText
[1] = '\'';

1029 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
zText
, -1, 
SQLITE_TRANSIENT
);

1030 
	`sqlôe3_‰ì
(
zText
);

1034 
SQLITE_TEXT
: {

1035 
i
,
j
;

1036 
u64
 
n
;

1037 c⁄° *
zArg
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

1038 *
z
;

1040 if–
zArg
==0 ) ;

1041 
i
=0, 
n
=0; 
zArg
[i]; i++){ if( zArg[i]=='\'' )Ç++; }

1042 
z
 = 
	`c⁄ãxtMÆloc
(
c⁄ãxt
, ((
i64
)
i
)+((i64)
n
)+3);

1043 if–
z
 ){

1044 
z
[0] = '\'';

1045 
i
=0, 
j
=1; 
zArg
[i]; i++){

1046 
z
[
j
++] = 
zArg
[
i
];

1047 if–
zArg
[
i
]=='\'' ){

1048 
z
[
j
++] = '\'';

1051 
z
[
j
++] = '\'';

1052 
z
[
j
] = 0;

1053 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
z
, 
j
, 
sqlôe3_‰ì
);

1058 
	`as£π
–
	`sqlôe3_vÆue_ty≥
(
¨gv
[0])==
SQLITE_NULL
 );

1059 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, "NULL", 4, 
SQLITE_STATIC
);

1063 
	}
}

1069 
	$unicodeFunc
(

1070 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

1071 
¨gc
,

1072 
sqlôe3_vÆue
 **
¨gv


1074 c⁄° *
z
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

1075 ()
¨gc
;

1076 if–
z
 && z[0] ) 
	`sqlôe3_ªsu…_öt
(
c⁄ãxt
, 
	`sqlôe3Utf8Ród
(&z));

1077 
	}
}

1084 
	$ch¨Func
(

1085 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

1086 
¨gc
,

1087 
sqlôe3_vÆue
 **
¨gv


1089 *
z
, *
zOut
;

1090 
i
;

1091 
zOut
 = 
z
 = 
	`sqlôe3_mÆloc64
–
¨gc
*4+1 );

1092 if–
z
==0 ){

1093 
	`sqlôe3_ªsu…_îr‹_nomem
(
c⁄ãxt
);

1096 
i
=0; i<
¨gc
; i++){

1097 
sqlôe3_öt64
 
x
;

1098 
c
;

1099 
x
 = 
	`sqlôe3_vÆue_öt64
(
¨gv
[
i
]);

1100 if–
x
<0 || x>0x10ffff ) x = 0xfffd;

1101 
c
 = ()(
x
 & 0x1fffff);

1102 if–
c
<0x00080 ){

1103 *
zOut
++ = (
u8
)(
c
&0xFF);

1104 }if–
c
<0x00800 ){

1105 *
zOut
++ = 0xC0 + (
u8
)((
c
>>6)&0x1F);

1106 *
zOut
++ = 0x80 + (
u8
)(
c
 & 0x3F);

1107 }if–
c
<0x10000 ){

1108 *
zOut
++ = 0xE0 + (
u8
)((
c
>>12)&0x0F);

1109 *
zOut
++ = 0x80 + (
u8
)((
c
>>6) & 0x3F);

1110 *
zOut
++ = 0x80 + (
u8
)(
c
 & 0x3F);

1112 *
zOut
++ = 0xF0 + (
u8
)((
c
>>18) & 0x07);

1113 *
zOut
++ = 0x80 + (
u8
)((
c
>>12) & 0x3F);

1114 *
zOut
++ = 0x80 + (
u8
)((
c
>>6) & 0x3F);

1115 *
zOut
++ = 0x80 + (
u8
)(
c
 & 0x3F);

1118 
	`sqlôe3_ªsu…_ãxt64
(
c⁄ãxt
, (*)
z
, 
zOut
-z, 
sqlôe3_‰ì
, 
SQLITE_UTF8
);

1119 
	}
}

1125 
	$hexFunc
(

1126 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

1127 
¨gc
,

1128 
sqlôe3_vÆue
 **
¨gv


1130 
i
, 
n
;

1131 c⁄° *
pBlob
;

1132 *
zHex
, *
z
;

1133 
	`as£π
–
¨gc
==1 );

1134 
	`UNUSED_PARAMETER
(
¨gc
);

1135 
pBlob
 = 
	`sqlôe3_vÆue_blob
(
¨gv
[0]);

1136 
n
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[0]);

1137 
	`as£π
–
pBlob
==
	`sqlôe3_vÆue_blob
(
¨gv
[0]) );

1138 
z
 = 
zHex
 = 
	`c⁄ãxtMÆloc
(
c⁄ãxt
, ((
i64
)
n
)*2 + 1);

1139 if–
zHex
 ){

1140 
i
=0; i<
n
; i++, 
pBlob
++){

1141 
c
 = *
pBlob
;

1142 *(
z
++Ë
hexdigôs
[(
c
>>4)&0xf];

1143 *(
z
++Ë
hexdigôs
[
c
&0xf];

1145 *
z
 = 0;

1146 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
zHex
, 
n
*2, 
sqlôe3_‰ì
);

1148 
	}
}

1153 
	$zîoblobFunc
(

1154 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

1155 
¨gc
,

1156 
sqlôe3_vÆue
 **
¨gv


1158 
i64
 
n
;

1159 
rc
;

1160 
	`as£π
–
¨gc
==1 );

1161 
	`UNUSED_PARAMETER
(
¨gc
);

1162 
n
 = 
	`sqlôe3_vÆue_öt64
(
¨gv
[0]);

1163 if–
n
<0 )Ç = 0;

1164 
rc
 = 
	`sqlôe3_ªsu…_zîoblob64
(
c⁄ãxt
, 
n
);

1165 if–
rc
 ){

1166 
	`sqlôe3_ªsu…_îr‹_code
(
c⁄ãxt
, 
rc
);

1168 
	}
}

1176 
	$ª∂a˚Func
(

1177 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

1178 
¨gc
,

1179 
sqlôe3_vÆue
 **
¨gv


1181 c⁄° *
zSå
;

1182 c⁄° *
zP©ã∫
;

1183 c⁄° *
zRï
;

1184 *
zOut
;

1185 
nSå
;

1186 
nP©ã∫
;

1187 
nRï
;

1188 
i64
 
nOut
;

1189 
lo›Limô
;

1190 
i
, 
j
;

1192 
	`as£π
–
¨gc
==3 );

1193 
	`UNUSED_PARAMETER
(
¨gc
);

1194 
zSå
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

1195 if–
zSå
==0 ) ;

1196 
nSå
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[0]);

1197 
	`as£π
–
zSå
==
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]) );

1198 
zP©ã∫
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[1]);

1199 if–
zP©ã∫
==0 ){

1200 
	`as£π
–
	`sqlôe3_vÆue_ty≥
(
¨gv
[1])==
SQLITE_NULL


1201 || 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
)->
mÆlocFaûed
 );

1204 if–
zP©ã∫
[0]==0 ){

1205 
	`as£π
–
	`sqlôe3_vÆue_ty≥
(
¨gv
[1])!=
SQLITE_NULL
 );

1206 
	`sqlôe3_ªsu…_vÆue
(
c⁄ãxt
, 
¨gv
[0]);

1209 
nP©ã∫
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[1]);

1210 
	`as£π
–
zP©ã∫
==
	`sqlôe3_vÆue_ãxt
(
¨gv
[1]) );

1211 
zRï
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[2]);

1212 if–
zRï
==0 ) ;

1213 
nRï
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[2]);

1214 
	`as£π
–
zRï
==
	`sqlôe3_vÆue_ãxt
(
¨gv
[2]) );

1215 
nOut
 = 
nSå
 + 1;

1216 
	`as£π
–
nOut
<
SQLITE_MAX_LENGTH
 );

1217 
zOut
 = 
	`c⁄ãxtMÆloc
(
c⁄ãxt
, (
i64
)
nOut
);

1218 if–
zOut
==0 ){

1221 
lo›Limô
 = 
nSå
 - 
nP©ã∫
;

1222 
i
=
j
=0; i<=
lo›Limô
; i++){

1223 if–
zSå
[
i
]!=
zP©ã∫
[0] || 
	`memcmp
(&zSå[i], zP©ã∫, 
nP©ã∫
) ){

1224 
zOut
[
j
++] = 
zSå
[
i
];

1226 
u8
 *
zOld
;

1227 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

1228 
nOut
 +
nRï
 - 
nP©ã∫
;

1229 
	`ã°ˇ£
–
nOut
-1==
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
] );

1230 
	`ã°ˇ£
–
nOut
-2==
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
] );

1231 if–
nOut
-1>
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
] ){

1232 
	`sqlôe3_ªsu…_îr‹_toobig
(
c⁄ãxt
);

1233 
	`sqlôe3_‰ì
(
zOut
);

1236 
zOld
 = 
zOut
;

1237 
zOut
 = 
	`sqlôe3_ªÆloc64
(zOut, ()
nOut
);

1238 if–
zOut
==0 ){

1239 
	`sqlôe3_ªsu…_îr‹_nomem
(
c⁄ãxt
);

1240 
	`sqlôe3_‰ì
(
zOld
);

1243 
	`mem˝y
(&
zOut
[
j
], 
zRï
, 
nRï
);

1244 
j
 +
nRï
;

1245 
i
 +
nP©ã∫
-1;

1248 
	`as£π
–
j
+
nSå
-
i
+1==
nOut
 );

1249 
	`mem˝y
(&
zOut
[
j
], &
zSå
[
i
], 
nSå
-i);

1250 
j
 +
nSå
 - 
i
;

1251 
	`as£π
–
j
<=
nOut
 );

1252 
zOut
[
j
] = 0;

1253 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, (*)
zOut
, 
j
, 
sqlôe3_‰ì
);

1254 
	}
}

1260 
	$åimFunc
(

1261 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

1262 
¨gc
,

1263 
sqlôe3_vÆue
 **
¨gv


1265 c⁄° *
zIn
;

1266 c⁄° *
zCh¨Së
;

1267 
nIn
;

1268 
Êags
;

1269 
i
;

1270 *
aLí
 = 0;

1271 **
azCh¨
 = 0;

1272 
nCh¨
;

1274 if–
	`sqlôe3_vÆue_ty≥
(
¨gv
[0])==
SQLITE_NULL
 ){

1277 
zIn
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

1278 if–
zIn
==0 ) ;

1279 
nIn
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[0]);

1280 
	`as£π
–
zIn
==
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]) );

1281 if–
¨gc
==1 ){

1282 c⁄° 
ÀnO√
[] = { 1 };

1283 * c⁄° 
azO√
[] = { (
u8
*)" " };

1284 
nCh¨
 = 1;

1285 
aLí
 = (
u8
*)
ÀnO√
;

1286 
azCh¨
 = (**)
azO√
;

1287 
zCh¨Së
 = 0;

1288 }if–(
zCh¨Së
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[1]))==0 ){

1291 c⁄° *
z
;

1292 
z
=
zCh¨Së
, 
nCh¨
=0; *z;ÇChar++){

1293 
	`SQLITE_SKIP_UTF8
(
z
);

1295 if–
nCh¨
>0 ){

1296 
azCh¨
 = 
	`c⁄ãxtMÆloc
(
c⁄ãxt
, ((
i64
)
nCh¨
)*((*)+1));

1297 if–
azCh¨
==0 ){

1300 
aLí
 = (*)&
azCh¨
[
nCh¨
];

1301 
z
=
zCh¨Së
, 
nCh¨
=0; *z;ÇChar++){

1302 
azCh¨
[
nCh¨
] = (*)
z
;

1303 
	`SQLITE_SKIP_UTF8
(
z
);

1304 
aLí
[
nCh¨
] = (
u8
)(
z
 - 
azCh¨
[nChar]);

1308 if–
nCh¨
>0 ){

1309 
Êags
 = 
	`SQLITE_PTR_TO_INT
(
	`sqlôe3_u£r_d©a
(
c⁄ãxt
));

1310 if–
Êags
 & 1 ){

1311  
nIn
>0 ){

1312 
Àn
 = 0;

1313 
i
=0; i<
nCh¨
; i++){

1314 
Àn
 = 
aLí
[
i
];

1315 if–
Àn
<=
nIn
 && 
	`memcmp
(
zIn
, 
azCh¨
[
i
],Üen)==0 ) ;

1317 if–
i
>=
nCh¨
 ) ;

1318 
zIn
 +
Àn
;

1319 
nIn
 -
Àn
;

1322 if–
Êags
 & 2 ){

1323  
nIn
>0 ){

1324 
Àn
 = 0;

1325 
i
=0; i<
nCh¨
; i++){

1326 
Àn
 = 
aLí
[
i
];

1327 if–
Àn
<=
nIn
 && 
	`memcmp
(&
zIn
[nIn-Àn],
azCh¨
[
i
],len)==0 ) ;

1329 if–
i
>=
nCh¨
 ) ;

1330 
nIn
 -
Àn
;

1333 if–
zCh¨Së
 ){

1334 
	`sqlôe3_‰ì
(
azCh¨
);

1337 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, (*)
zIn
, 
nIn
, 
SQLITE_TRANSIENT
);

1338 
	}
}

1341 #ifde‡
SQLITE_ENABLE_UNKNOWN_SQL_FUNCTION


1351 
	$unknownFunc
(

1352 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

1353 
¨gc
,

1354 
sqlôe3_vÆue
 **
¨gv


1357 
	}
}

1365 #ifde‡
SQLITE_SOUNDEX


1372 
	$soundexFunc
(

1373 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

1374 
¨gc
,

1375 
sqlôe3_vÆue
 **
¨gv


1377 
zResu…
[8];

1378 c⁄° 
u8
 *
zIn
;

1379 
i
, 
j
;

1380 c⁄° 
iCode
[] = {

1390 
	`as£π
–
¨gc
==1 );

1391 
zIn
 = (
u8
*)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

1392 if–
zIn
==0 ) zI¿(
u8
*)"";

1393 
i
=0; 
zIn
[i] && !
	`sqlôe3IßÕha
(zIn[i]); i++){}

1394 if–
zIn
[
i
] ){

1395 
u8
 
¥evcode
 = 
iCode
[
zIn
[
i
]&0x7f];

1396 
zResu…
[0] = 
	`sqlôe3Touµî
(
zIn
[
i
]);

1397 
j
=1; j<4 && 
zIn
[
i
]; i++){

1398 
code
 = 
iCode
[
zIn
[
i
]&0x7f];

1399 if–
code
>0 ){

1400 if–
code
!=
¥evcode
 ){

1401 
¥evcode
 = 
code
;

1402 
zResu…
[
j
++] = 
code
 + '0';

1405 
¥evcode
 = 0;

1408  
j
<4 ){

1409 
zResu…
[
j
++] = '0';

1411 
zResu…
[
j
] = 0;

1412 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
zResu…
, 4, 
SQLITE_TRANSIENT
);

1416 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, "?000", 4, 
SQLITE_STATIC
);

1418 
	}
}

1421 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


1425 
	$lﬂdExt
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
, 
¨gc
, 
sqlôe3_vÆue
 **
¨gv
){

1426 c⁄° *
zFûe
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

1427 c⁄° *
zProc
;

1428 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

1429 *
zEºMsg
 = 0;

1434 if–(
db
->
Êags
 & 
SQLITE_LﬂdExtFunc
)==0 ){

1435 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
, "notáuthorized", -1);

1439 if–
¨gc
==2 ){

1440 
zProc
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[1]);

1442 
zProc
 = 0;

1444 if–
zFûe
 && 
	`sqlôe3_lﬂd_exãnsi⁄
(
db
, zFûe, 
zProc
, &
zEºMsg
) ){

1445 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
, 
zEºMsg
, -1);

1446 
	`sqlôe3_‰ì
(
zEºMsg
);

1448 
	}
}

1456 
SumCtx
 
	tSumCtx
;

1457 
	sSumCtx
 {

1458 
	mrSum
;

1459 
i64
 
	miSum
;

1460 
i64
 
	m˙t
;

1461 
u8
 
	movîÊow
;

1462 
u8
 
	m≠¥ox
;

1475 
	$sumSãp
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
, 
¨gc
, 
sqlôe3_vÆue
 **
¨gv
){

1476 
SumCtx
 *
p
;

1477 
ty≥
;

1478 
	`as£π
–
¨gc
==1 );

1479 
	`UNUSED_PARAMETER
(
¨gc
);

1480 
p
 = 
	`sqlôe3_aggªg©e_c⁄ãxt
(
c⁄ãxt
, (*p));

1481 
ty≥
 = 
	`sqlôe3_vÆue_numîic_ty≥
(
¨gv
[0]);

1482 if–
p
 && 
ty≥
!=
SQLITE_NULL
 ){

1483 
p
->
˙t
++;

1484 if–
ty≥
==
SQLITE_INTEGER
 ){

1485 
i64
 
v
 = 
	`sqlôe3_vÆue_öt64
(
¨gv
[0]);

1486 
p
->
rSum
 +
v
;

1487 if–(
p
->
≠¥ox
|p->
ovîÊow
)==0 && 
	`sqlôe3AddI¡64
(&p->
iSum
, 
v
) ){

1488 
p
->
ovîÊow
 = 1;

1491 
p
->
rSum
 +
	`sqlôe3_vÆue_doubÀ
(
¨gv
[0]);

1492 
p
->
≠¥ox
 = 1;

1495 
	}
}

1496 
	$sumFöÆize
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
){

1497 
SumCtx
 *
p
;

1498 
p
 = 
	`sqlôe3_aggªg©e_c⁄ãxt
(
c⁄ãxt
, 0);

1499 if–
p
 &&Ö->
˙t
>0 ){

1500 if–
p
->
ovîÊow
 ){

1501 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
,"integer overflow",-1);

1502 }if–
p
->
≠¥ox
 ){

1503 
	`sqlôe3_ªsu…_doubÀ
(
c⁄ãxt
, 
p
->
rSum
);

1505 
	`sqlôe3_ªsu…_öt64
(
c⁄ãxt
, 
p
->
iSum
);

1508 
	}
}

1509 
	$avgFöÆize
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
){

1510 
SumCtx
 *
p
;

1511 
p
 = 
	`sqlôe3_aggªg©e_c⁄ãxt
(
c⁄ãxt
, 0);

1512 if–
p
 &&Ö->
˙t
>0 ){

1513 
	`sqlôe3_ªsu…_doubÀ
(
c⁄ãxt
, 
p
->
rSum
/(Ì->
˙t
);

1515 
	}
}

1516 
	$tŸÆFöÆize
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
){

1517 
SumCtx
 *
p
;

1518 
p
 = 
	`sqlôe3_aggªg©e_c⁄ãxt
(
c⁄ãxt
, 0);

1520 
	`sqlôe3_ªsu…_doubÀ
(
c⁄ãxt
, 
p
 ?Ö->
rSum
 : ()0);

1521 
	}
}

1527 
Cou¡Ctx
 
	tCou¡Ctx
;

1528 
	sCou¡Ctx
 {

1529 
i64
 
	mn
;

1535 
	$cou¡Sãp
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
, 
¨gc
, 
sqlôe3_vÆue
 **
¨gv
){

1536 
Cou¡Ctx
 *
p
;

1537 
p
 = 
	`sqlôe3_aggªg©e_c⁄ãxt
(
c⁄ãxt
, (*p));

1538 if–(
¨gc
==0 || 
SQLITE_NULL
!=
	`sqlôe3_vÆue_ty≥
(
¨gv
[0])Ë&& 
p
 ){

1539 
p
->
n
++;

1542 #i‚de‡
SQLITE_OMIT_DEPRECATED


1547 
	`as£π
–
¨gc
==1 || 
p
==0 ||Ö->
n
>0x7fffffff

1548 || 
p
->
n
==
	`sqlôe3_aggªg©e_cou¡
(
c⁄ãxt
) );

1550 
	}
}

1551 
	$cou¡FöÆize
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
){

1552 
Cou¡Ctx
 *
p
;

1553 
p
 = 
	`sqlôe3_aggªg©e_c⁄ãxt
(
c⁄ãxt
, 0);

1554 
	`sqlôe3_ªsu…_öt64
(
c⁄ãxt
, 
p
 ?Ö->
n
 : 0);

1555 
	}
}

1560 
	$mömaxSãp
(

1561 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

1562 
NŸU£d
,

1563 
sqlôe3_vÆue
 **
¨gv


1565 
Mem
 *
pArg
 = (Mem *)
¨gv
[0];

1566 
Mem
 *
pBe°
;

1567 
	`UNUSED_PARAMETER
(
NŸU£d
);

1569 
pBe°
 = (
Mem
 *)
	`sqlôe3_aggªg©e_c⁄ãxt
(
c⁄ãxt
, (*pBest));

1570 if–!
pBe°
 ) ;

1572 if–
	`sqlôe3_vÆue_ty≥
(
¨gv
[0])==
SQLITE_NULL
 ){

1573 if–
pBe°
->
Êags
 ) 
	`sqlôe3SkùAccumuœt‹Lﬂd
(
c⁄ãxt
);

1574 }if–
pBe°
->
Êags
 ){

1575 
max
;

1576 
cmp
;

1577 
CﬁlSeq
 *
pCﬁl
 = 
	`sqlôe3GëFuncCﬁlSeq
(
c⁄ãxt
);

1586 
max
 = 
	`sqlôe3_u£r_d©a
(
c⁄ãxt
)!=0;

1587 
cmp
 = 
	`sqlôe3MemCom∑ª
(
pBe°
, 
pArg
, 
pCﬁl
);

1588 if–(
max
 && 
cmp
<0) || (!max && cmp>0) ){

1589 
	`sqlôe3VdbeMemC›y
(
pBe°
, 
pArg
);

1591 
	`sqlôe3SkùAccumuœt‹Lﬂd
(
c⁄ãxt
);

1594 
pBe°
->
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

1595 
	`sqlôe3VdbeMemC›y
(
pBe°
, 
pArg
);

1597 
	}
}

1598 
	$möMaxFöÆize
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
){

1599 
sqlôe3_vÆue
 *
pRes
;

1600 
pRes
 = (
sqlôe3_vÆue
 *)
	`sqlôe3_aggªg©e_c⁄ãxt
(
c⁄ãxt
, 0);

1601 if–
pRes
 ){

1602 if–
pRes
->
Êags
 ){

1603 
	`sqlôe3_ªsu…_vÆue
(
c⁄ãxt
, 
pRes
);

1605 
	`sqlôe3VdbeMemRñó£
(
pRes
);

1607 
	}
}

1612 
	$groupC⁄ˇtSãp
(

1613 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

1614 
¨gc
,

1615 
sqlôe3_vÆue
 **
¨gv


1617 c⁄° *
zVÆ
;

1618 
SåAccum
 *
pAccum
;

1619 c⁄° *
zSï
;

1620 
nVÆ
, 
nSï
;

1621 
	`as£π
–
¨gc
==1 ||árgc==2 );

1622 if–
	`sqlôe3_vÆue_ty≥
(
¨gv
[0])==
SQLITE_NULL
 ) ;

1623 
pAccum
 = (
SåAccum
*)
	`sqlôe3_aggªg©e_c⁄ãxt
(
c⁄ãxt
, (*pAccum));

1625 if–
pAccum
 ){

1626 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

1627 
fú°Tîm
 = 
pAccum
->
mxAŒoc
==0;

1628 
pAccum
->
mxAŒoc
 = 
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
];

1629 if–!
fú°Tîm
 ){

1630 if–
¨gc
==2 ){

1631 
zSï
 = (*)
	`sqlôe3_vÆue_ãxt
(
¨gv
[1]);

1632 
nSï
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[1]);

1634 
zSï
 = ",";

1635 
nSï
 = 1;

1637 if–
zSï
 ) 
	`sqlôe3SåAccumAµíd
(
pAccum
, zSï, 
nSï
);

1639 
zVÆ
 = (*)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

1640 
nVÆ
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[0]);

1641 if–
zVÆ
 ) 
	`sqlôe3SåAccumAµíd
(
pAccum
, zVÆ, 
nVÆ
);

1643 
	}
}

1644 
	$groupC⁄ˇtFöÆize
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
){

1645 
SåAccum
 *
pAccum
;

1646 
pAccum
 = 
	`sqlôe3_aggªg©e_c⁄ãxt
(
c⁄ãxt
, 0);

1647 if–
pAccum
 ){

1648 if–
pAccum
->
accEº‹
==
STRACCUM_TOOBIG
 ){

1649 
	`sqlôe3_ªsu…_îr‹_toobig
(
c⁄ãxt
);

1650 }if–
pAccum
->
accEº‹
==
STRACCUM_NOMEM
 ){

1651 
	`sqlôe3_ªsu…_îr‹_nomem
(
c⁄ãxt
);

1653 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
	`sqlôe3SåAccumFöish
(
pAccum
), -1,

1654 
sqlôe3_‰ì
);

1657 
	}
}

1664 
	$sqlôe3Regi°îPîC⁄√˘i⁄BuûtöFun˘i⁄s
(
sqlôe3
 *
db
){

1665 
rc
 = 
	`sqlôe3_ovîlﬂd_fun˘i⁄
(
db
, "MATCH", 2);

1666 
	`as£π
–
rc
==
SQLITE_NOMEM
 ||Ñc==
SQLITE_OK
 );

1667 if–
rc
==
SQLITE_NOMEM
 ){

1668 
	`sqlôe3OomFau…
(
db
);

1670 
	}
}

1675 
	$£tLikeO±Fœg
(
sqlôe3
 *
db
, c⁄° *
zName
, 
u8
 
ÊagVÆ
){

1676 
FuncDef
 *
pDef
;

1677 
pDef
 = 
	`sqlôe3FödFun˘i⁄
(
db
, 
zName
, 2, 
SQLITE_UTF8
, 0);

1678 if–
	`ALWAYS
(
pDef
) ){

1679 
pDef
->
funcFœgs
 |
ÊagVÆ
;

1681 
	}
}

1688 
	$sqlôe3Regi°îLikeFun˘i⁄s
(
sqlôe3
 *
db
, 
ˇ£Sísôive
){

1689 
com∑ªInfo
 *
pInfo
;

1690 if–
ˇ£Sísôive
 ){

1691 
pInfo
 = (
com∑ªInfo
*)&
likeInfoA…
;

1693 
pInfo
 = (
com∑ªInfo
*)&
likeInfoN‹m
;

1695 
	`sqlôe3Cª©eFunc
(
db
, "like", 2, 
SQLITE_UTF8
, 
pInfo
, 
likeFunc
, 0, 0, 0);

1696 
	`sqlôe3Cª©eFunc
(
db
, "like", 3, 
SQLITE_UTF8
, 
pInfo
, 
likeFunc
, 0, 0, 0);

1697 
	`sqlôe3Cª©eFunc
(
db
, "glob", 2, 
SQLITE_UTF8
,

1698 (
com∑ªInfo
*)&
globInfo
, 
likeFunc
, 0, 0, 0);

1699 
	`£tLikeO±Fœg
(
db
, "glob", 
SQLITE_FUNC_LIKE
 | 
SQLITE_FUNC_CASE
);

1700 
	`£tLikeO±Fœg
(
db
, "like",

1701 
ˇ£Sísôive
 ? (
SQLITE_FUNC_LIKE
 | 
SQLITE_FUNC_CASE
) : SQLITE_FUNC_LIKE);

1702 
	}
}

1716 
	$sqlôe3IsLikeFun˘i⁄
(
sqlôe3
 *
db
, 
Ex¥
 *
pEx¥
, *
pIsNoˇ£
, *
aWc
){

1717 
FuncDef
 *
pDef
;

1718 if–
pEx¥
->
›
!=
TK_FUNCTION


1719 || !
pEx¥
->
x
.
pLi°


1720 || 
pEx¥
->
x
.
pLi°
->
nEx¥
!=2

1724 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
) );

1725 
pDef
 = 
	`sqlôe3FödFun˘i⁄
(
db
, 
pEx¥
->
u
.
zTokí
, 2, 
SQLITE_UTF8
, 0);

1726 if–
	`NEVER
(
pDef
==0Ë|| (pDef->
funcFœgs
 & 
SQLITE_FUNC_LIKE
)==0 ){

1734 
	`mem˝y
(
aWc
, 
pDef
->
pU£rD©a
, 3);

1735 
	`as£π
–(*)&
likeInfoA…
 =(*)&likeInfoA….
m©chAŒ
 );

1736 
	`as£π
–&((*)&
likeInfoA…
)[1] =(*)&likeInfoA….
m©chO√
 );

1737 
	`as£π
–&((*)&
likeInfoA…
)[2] =(*)&likeInfoA….
m©chSë
 );

1738 *
pIsNoˇ£
 = (
pDef
->
funcFœgs
 & 
SQLITE_FUNC_CASE
)==0;

1740 
	}
}

1749 
	$sqlôe3Regi°îBuûtöFun˘i⁄s
(){

1760 
FuncDef
 
aBuûtöFunc
[] = {

1761 #ifde‡
SQLITE_SOUNDEX


1762 
	`FUNCTION
(
soundex
, 1, 0, 0, 
soundexFunc
 ),

1764 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


1765 
	`VFUNCTION
(
lﬂd_exãnsi⁄
, 1, 0, 0, 
lﬂdExt
 ),

1766 
	`VFUNCTION
(
lﬂd_exãnsi⁄
, 2, 0, 0, 
lﬂdExt
 ),

1768 #i‡
SQLITE_USER_AUTHENTICATION


1769 
	`FUNCTION
(
sqlôe_¸y±
, 2, 0, 0, 
sqlôe3Cry±Func
 ),

1771 #i‚de‡
SQLITE_OMIT_COMPILEOPTION_DIAGS


1772 
	`DFUNCTION
(
sqlôe_compûe›ti⁄_u£d
,1, 0, 0, 
compûe›ti⁄u£dFunc
 ),

1773 
	`DFUNCTION
(
sqlôe_compûe›ti⁄_gë
, 1, 0, 0, 
compûe›ti⁄gëFunc
 ),

1775 
	`FUNCTION2
(
u∆ikñy
, 1, 0, 0, 
no›Func
, 
SQLITE_FUNC_UNLIKELY
),

1776 
	`FUNCTION2
(
likñihood
, 2, 0, 0, 
no›Func
, 
SQLITE_FUNC_UNLIKELY
),

1777 
	`FUNCTION2
(
likñy
, 1, 0, 0, 
no›Func
, 
SQLITE_FUNC_UNLIKELY
),

1778 
	`FUNCTION
(
…rim
, 1, 1, 0, 
åimFunc
 ),

1779 
	`FUNCTION
(
…rim
, 2, 1, 0, 
åimFunc
 ),

1780 
	`FUNCTION
(
πrim
, 1, 2, 0, 
åimFunc
 ),

1781 
	`FUNCTION
(
πrim
, 2, 2, 0, 
åimFunc
 ),

1782 
	`FUNCTION
(
åim
, 1, 3, 0, 
åimFunc
 ),

1783 
	`FUNCTION
(
åim
, 2, 3, 0, 
åimFunc
 ),

1784 
	`FUNCTION
(
mö
, -1, 0, 1, 
mömaxFunc
 ),

1785 
	`FUNCTION
(
mö
, 0, 0, 1, 0 ),

1786 
	`AGGREGATE2
(
mö
, 1, 0, 1, 
mömaxSãp
, 
möMaxFöÆize
,

1787 
SQLITE_FUNC_MINMAX
 ),

1788 
	`FUNCTION
(
max
, -1, 1, 1, 
mömaxFunc
 ),

1789 
	`FUNCTION
(
max
, 0, 1, 1, 0 ),

1790 
	`AGGREGATE2
(
max
, 1, 1, 1, 
mömaxSãp
, 
möMaxFöÆize
,

1791 
SQLITE_FUNC_MINMAX
 ),

1792 
	`FUNCTION2
(
ty≥of
, 1, 0, 0, 
ty≥ofFunc
, 
SQLITE_FUNC_TYPEOF
),

1793 
	`FUNCTION2
(
Àngth
, 1, 0, 0, 
ÀngthFunc
, 
SQLITE_FUNC_LENGTH
),

1794 
	`FUNCTION
(
ö°r
, 2, 0, 0, 
ö°rFunc
 ),

1795 
	`FUNCTION
(
¥ötf
, -1, 0, 0, 
¥ötfFunc
 ),

1796 
	`FUNCTION
(
unicode
, 1, 0, 0, 
unicodeFunc
 ),

1797 
	`FUNCTION
(, -1, 0, 0, 
ch¨Func
 ),

1798 
	`FUNCTION
(
abs
, 1, 0, 0, 
absFunc
 ),

1799 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


1800 
	`FUNCTION
(
round
, 1, 0, 0, 
roundFunc
 ),

1801 
	`FUNCTION
(
round
, 2, 0, 0, 
roundFunc
 ),

1803 
	`FUNCTION
(
uµî
, 1, 0, 0, 
uµîFunc
 ),

1804 
	`FUNCTION
(
lowî
, 1, 0, 0, 
lowîFunc
 ),

1805 
	`FUNCTION
(
hex
, 1, 0, 0, 
hexFunc
 ),

1806 
	`FUNCTION2
(
i‚uŒ
, 2, 0, 0, 
no›Func
, 
SQLITE_FUNC_COALESCE
),

1807 
	`VFUNCTION
(
øndom
, 0, 0, 0, 
øndomFunc
 ),

1808 
	`VFUNCTION
(
øndomblob
, 1, 0, 0, 
øndomBlob
 ),

1809 
	`FUNCTION
(
nuŒif
, 2, 0, 1, 
nuŒifFunc
 ),

1810 
	`DFUNCTION
(
sqlôe_vîsi⁄
, 0, 0, 0, 
vîsi⁄Func
 ),

1811 
	`DFUNCTION
(
sqlôe_sour˚_id
, 0, 0, 0, 
sour˚idFunc
 ),

1812 
	`FUNCTION
(
sqlôe_log
, 2, 0, 0, 
îæogFunc
 ),

1813 
	`FUNCTION
(
quŸe
, 1, 0, 0, 
quŸeFunc
 ),

1814 
	`VFUNCTION
(
œ°_ö£π_rowid
, 0, 0, 0,Üast_insert_rowid),

1815 
	`VFUNCTION
(
ch™ges
, 0, 0, 0, changes ),

1816 
	`VFUNCTION
(
tŸÆ_ch™ges
, 0, 0, 0,Åotal_changes ),

1817 
	`FUNCTION
(
ª∂a˚
, 3, 0, 0, 
ª∂a˚Func
 ),

1818 
	`FUNCTION
(
zîoblob
, 1, 0, 0, 
zîoblobFunc
 ),

1819 
	`FUNCTION
(
sub°r
, 2, 0, 0, 
sub°rFunc
 ),

1820 
	`FUNCTION
(
sub°r
, 3, 0, 0, 
sub°rFunc
 ),

1821 
	`AGGREGATE
(
sum
, 1, 0, 0, 
sumSãp
, 
sumFöÆize
 ),

1822 
	`AGGREGATE
(
tŸÆ
, 1, 0, 0, 
sumSãp
, 
tŸÆFöÆize
 ),

1823 
	`AGGREGATE
(
avg
, 1, 0, 0, 
sumSãp
, 
avgFöÆize
 ),

1824 
	`AGGREGATE2
(
cou¡
, 0, 0, 0, 
cou¡Sãp
, 
cou¡FöÆize
,

1825 
SQLITE_FUNC_COUNT
 ),

1826 
	`AGGREGATE
(
cou¡
, 1, 0, 0, 
cou¡Sãp
, 
cou¡FöÆize
 ),

1827 
	`AGGREGATE
(
group_c⁄ˇt
, 1, 0, 0, 
groupC⁄ˇtSãp
, 
groupC⁄ˇtFöÆize
),

1828 
	`AGGREGATE
(
group_c⁄ˇt
, 2, 0, 0, 
groupC⁄ˇtSãp
, 
groupC⁄ˇtFöÆize
),

1830 
	`LIKEFUNC
(
glob
, 2, &
globInfo
, 
SQLITE_FUNC_LIKE
|
SQLITE_FUNC_CASE
),

1831 #ifde‡
SQLITE_CASE_SENSITIVE_LIKE


1832 
	`LIKEFUNC
(
like
, 2, &
likeInfoA…
, 
SQLITE_FUNC_LIKE
|
SQLITE_FUNC_CASE
),

1833 
	`LIKEFUNC
(
like
, 3, &
likeInfoA…
, 
SQLITE_FUNC_LIKE
|
SQLITE_FUNC_CASE
),

1835 
	`LIKEFUNC
(
like
, 2, &
likeInfoN‹m
, 
SQLITE_FUNC_LIKE
),

1836 
	`LIKEFUNC
(
like
, 3, &
likeInfoN‹m
, 
SQLITE_FUNC_LIKE
),

1838 #ifde‡
SQLITE_ENABLE_UNKNOWN_SQL_FUNCTION


1839 
	`FUNCTION
(
unknown
, -1, 0, 0, 
unknownFunc
 ),

1841 
	`FUNCTION
(
cﬂÀs˚
, 1, 0, 0, 0 ),

1842 
	`FUNCTION
(
cﬂÀs˚
, 0, 0, 0, 0 ),

1843 
	`FUNCTION2
(
cﬂÀs˚
, -1, 0, 0, 
no›Func
, 
SQLITE_FUNC_COALESCE
),

1845 #i‚de‡
SQLITE_OMIT_ALTERTABLE


1846 
	`sqlôe3A…îFun˘i⁄s
();

1848 #i‡
	`deföed
(
SQLITE_ENABLE_STAT3
Ë|| deföed(
SQLITE_ENABLE_STAT4
)

1849 
	`sqlôe3A«lyzeFun˘i⁄s
();

1851 
	`sqlôe3Regi°îD©eTimeFun˘i⁄s
();

1852 
	`sqlôe3In£πBuûtöFuncs
(
aBuûtöFunc
, 
	`AºaySize
(aBuiltinFunc));

1856 
i
;

1857 
FuncDef
 *
p
;

1858 
i
=0; i<
SQLITE_FUNC_HASH_SZ
; i++){

1859 
	`¥ötf
("FUNC-HASH %02d:", 
i
);

1860 
p
=
sqlôe3BuûtöFun˘i⁄s
.
a
[
i
];Ö;Öı->
u
.
pHash
){

1861 
n
 = 
	`sqlôe3SåÀn30
(
p
->
zName
);

1862 
h
 = 
p
->
zName
[0] + 
n
;

1863 
	`¥ötf
(" %s(%d)", 
p
->
zName
, 
h
);

1865 
	`¥ötf
("\n");

1869 
	}
}

	@global.c

15 
	~"sqlôeI¡.h
"

24 c⁄° 
	gsqlôe3UµîToLowî
[] = {

25 #ifde‡
SQLITE_ASCII


42 #ifde‡
SQLITE_EBCDIC


90 #ifde‡
SQLITE_ASCII


91 c⁄° 
	gsqlôe3Cty≥M≠
[256] = {

141 #i‚de‡
SQLITE_USE_URI


142 
	#SQLITE_USE_URI
 0

	)

149 #i‚de‡
SQLITE_ALLOW_COVERING_INDEX_SCAN


150 
	#SQLITE_ALLOW_COVERING_INDEX_SCAN
 1

	)

156 #i‚de‡
SQLITE_SORTER_PMASZ


157 
	#SQLITE_SORTER_PMASZ
 250

	)

168 #i‚de‡
SQLITE_STMTJRNL_SPILL


169 
	#SQLITE_STMTJRNL_SPILL
 (64*1024)

	)

176 
SQLITE_WSD
 
Sqlôe3C⁄fig
 
	gsqlôe3C⁄fig
 = {

177 
SQLITE_DEFAULT_MEMSTATUS
,

179 
SQLITE_THREADSAFE
==1,

180 
	gSQLITE_USE_URI
,

181 
	gSQLITE_ALLOW_COVERING_INDEX_SCAN
,

186 
	gSQLITE_STMTJRNL_SPILL
,

193 
	gSQLITE_DEFAULT_MMAP_SIZE
,

194 
	gSQLITE_MAX_MMAP_SIZE
,

200 
	gSQLITE_DEFAULT_PCACHE_INITSZ
,

203 
	gSQLITE_SORTER_PMASZ
,

214 #ifde‡
SQLITE_ENABLE_SQLLOG


218 #ifde‡
SQLITE_VDBE_COVERAGE


222 #i‚de‡
SQLITE_UNTESTABLE


234 
FuncDefHash
 
	gsqlôe3BuûtöFun˘i⁄s
;

239 c⁄° 
Tokí
 
	gsqlôe3I¡Tokís
[] = {

263 #i‚de‡
SQLITE_OMIT_WSD


264 
	gsqlôe3PídögByã
 = 0x40000000;

267 
	~"›codes.h
"

274 c⁄° 
	gsqlôe3OpcodePr›îty
[] = 
OPFLG_INITIALIZER
;

279 c⁄° 
	gsqlôe3SåBINARY
[] = "BINARY";

	@hash.c

15 
	~"sqlôeI¡.h
"

16 
	~<as£π.h
>

23 
	$sqlôe3HashInô
(
Hash
 *
pNew
){

24 
	`as£π
–
pNew
!=0 );

25 
pNew
->
fú°
 = 0;

26 
pNew
->
cou¡
 = 0;

27 
pNew
->
htsize
 = 0;

28 
pNew
->
ht
 = 0;

29 
	}
}

35 
	$sqlôe3HashCÀ¨
(
Hash
 *
pH
){

36 
HashEÀm
 *
ñem
;

38 
	`as£π
–
pH
!=0 );

39 
ñem
 = 
pH
->
fú°
;

40 
pH
->
fú°
 = 0;

41 
	`sqlôe3_‰ì
(
pH
->
ht
);

42 
pH
->
ht
 = 0;

43 
pH
->
htsize
 = 0;

44  
ñem
 ){

45 
HashEÀm
 *
√xt_ñem
 = 
ñem
->
√xt
;

46 
	`sqlôe3_‰ì
(
ñem
);

47 
ñem
 = 
√xt_ñem
;

49 
pH
->
cou¡
 = 0;

50 
	}
}

55 
	$°rHash
(c⁄° *
z
){

56 
h
 = 0;

57 
c
;

58  (
c
 = ()*
z
++)!=0 ){

62 
h
 +
sqlôe3UµîToLowî
[
c
];

63 
h
 *= 0x9e3779b1;

65  
h
;

66 
	}
}

72 
	$ö£πEÀmít
(

73 
Hash
 *
pH
,

74 
_ht
 *
pE¡ry
,

75 
HashEÀm
 *
pNew


77 
HashEÀm
 *
pHód
;

78 if–
pE¡ry
 ){

79 
pHód
 = 
pE¡ry
->
cou¡
 ?ÖE¡ry->
chaö
 : 0;

80 
pE¡ry
->
cou¡
++;

81 
pE¡ry
->
chaö
 = 
pNew
;

83 
pHód
 = 0;

85 if–
pHód
 ){

86 
pNew
->
√xt
 = 
pHód
;

87 
pNew
->
¥ev
 = 
pHód
->prev;

88 if–
pHód
->
¥ev
 ){ÖHód->¥ev->
√xt
 = 
pNew
; }

89 { 
pH
->
fú°
 = 
pNew
; }

90 
pHód
->
¥ev
 = 
pNew
;

92 
pNew
->
√xt
 = 
pH
->
fú°
;

93 if–
pH
->
fú°
 ){ÖH->fú°->
¥ev
 = 
pNew
; }

94 
pNew
->
¥ev
 = 0;

95 
pH
->
fú°
 = 
pNew
;

97 
	}
}

106 
	$ªhash
(
Hash
 *
pH
, 
√w_size
){

107 
_ht
 *
√w_ht
;

108 
HashEÀm
 *
ñem
, *
√xt_ñem
;

110 #i‡
SQLITE_MALLOC_SOFT_LIMIT
>0

111 if–
√w_size
*(
_ht
)>
SQLITE_MALLOC_SOFT_LIMIT
 ){

112 
√w_size
 = 
SQLITE_MALLOC_SOFT_LIMIT
/(
_ht
);

114 if–
√w_size
==
pH
->
htsize
 )  0;

125 
	`sqlôe3BegöBíignMÆloc
();

126 
√w_ht
 = (
_ht
 *)
	`sqlôe3MÆloc
–
√w_size
*(_ht) );

127 
	`sqlôe3EndBíignMÆloc
();

129 if–
√w_ht
==0 )  0;

130 
	`sqlôe3_‰ì
(
pH
->
ht
);

131 
pH
->
ht
 = 
√w_ht
;

132 
pH
->
htsize
 = 
√w_size
 = 
	`sqlôe3MÆlocSize
(
√w_ht
)/(
_ht
);

133 
	`mem£t
(
√w_ht
, 0, 
√w_size
*(
_ht
));

134 
ñem
=
pH
->
fú°
,ÖH->fú°=0;ÉÀm;ÉÀm = 
√xt_ñem
){

135 
h
 = 
	`°rHash
(
ñem
->
pKey
Ë% 
√w_size
;

136 
√xt_ñem
 = 
ñem
->
√xt
;

137 
	`ö£πEÀmít
(
pH
, &
√w_ht
[
h
], 
ñem
);

140 
	}
}

146 
HashEÀm
 *
	$födEÀmítWôhHash
(

147 c⁄° 
Hash
 *
pH
,

148 c⁄° *
pKey
,

149 *
pHash


151 
HashEÀm
 *
ñem
;

152 
cou¡
;

153 
h
;

155 if–
pH
->
ht
 ){

156 
_ht
 *
pE¡ry
;

157 
h
 = 
	`°rHash
(
pKey
Ë% 
pH
->
htsize
;

158 
pE¡ry
 = &
pH
->
ht
[
h
];

159 
ñem
 = 
pE¡ry
->
chaö
;

160 
cou¡
 = 
pE¡ry
->count;

162 
h
 = 0;

163 
ñem
 = 
pH
->
fú°
;

164 
cou¡
 = 
pH
->count;

166 *
pHash
 = 
h
;

167  
cou¡
-- ){

168 
	`as£π
–
ñem
!=0 );

169 if–
	`sqlôe3SåICmp
(
ñem
->
pKey
,pKey)==0 ){

170  
ñem
;

172 
ñem
 =ÉÀm->
√xt
;

175 
	}
}

180 
	$ªmoveEÀmítGivíHash
(

181 
Hash
 *
pH
,

182 
HashEÀm
* 
ñem
,

183 
h


185 
_ht
 *
pE¡ry
;

186 if–
ñem
->
¥ev
 ){

187 
ñem
->
¥ev
->
√xt
 =Élem->next;

189 
pH
->
fú°
 = 
ñem
->
√xt
;

191 if–
ñem
->
√xt
 ){

192 
ñem
->
√xt
->
¥ev
 =Élem->prev;

194 if–
pH
->
ht
 ){

195 
pE¡ry
 = &
pH
->
ht
[
h
];

196 if–
pE¡ry
->
chaö
==
ñem
 ){

197 
pE¡ry
->
chaö
 = 
ñem
->
√xt
;

199 
pE¡ry
->
cou¡
--;

200 
	`as£π
–
pE¡ry
->
cou¡
>=0 );

202 
	`sqlôe3_‰ì
–
ñem
 );

203 
pH
->
cou¡
--;

204 if–
pH
->
cou¡
==0 ){

205 
	`as£π
–
pH
->
fú°
==0 );

206 
	`as£π
–
pH
->
cou¡
==0 );

207 
	`sqlôe3HashCÀ¨
(
pH
);

209 
	}
}

215 *
	$sqlôe3HashFöd
(c⁄° 
Hash
 *
pH
, c⁄° *
pKey
){

216 
HashEÀm
 *
ñem
;

217 
h
;

219 
	`as£π
–
pH
!=0 );

220 
	`as£π
–
pKey
!=0 );

221 
ñem
 = 
	`födEÀmítWôhHash
(
pH
, 
pKey
, &
h
);

222  
ñem
 ?ÉÀm->
d©a
 : 0;

223 
	}
}

239 *
	$sqlôe3HashIn£π
(
Hash
 *
pH
, c⁄° *
pKey
, *
d©a
){

240 
h
;

241 
HashEÀm
 *
ñem
;

242 
HashEÀm
 *
√w_ñem
;

244 
	`as£π
–
pH
!=0 );

245 
	`as£π
–
pKey
!=0 );

246 
ñem
 = 
	`födEÀmítWôhHash
(
pH
,
pKey
,&
h
);

247 if–
ñem
 ){

248 *
ﬁd_d©a
 = 
ñem
->
d©a
;

249 if–
d©a
==0 ){

250 
	`ªmoveEÀmítGivíHash
(
pH
,
ñem
,
h
);

252 
ñem
->
d©a
 = data;

253 
ñem
->
pKey
 =ÖKey;

255  
ﬁd_d©a
;

257 if–
d©a
==0 )  0;

258 
√w_ñem
 = (
HashEÀm
*)
	`sqlôe3MÆloc
( (HashElem) );

259 if–
√w_ñem
==0 )  
d©a
;

260 
√w_ñem
->
pKey
 =ÖKey;

261 
√w_ñem
->
d©a
 = data;

262 
pH
->
cou¡
++;

263 if–
pH
->
cou¡
>=10 &&ÖH->cou¡ > 2*pH->
htsize
 ){

264 if–
	`ªhash
(
pH
,ÖH->
cou¡
*2) ){

265 
	`as£π
–
pH
->
htsize
>0 );

266 
h
 = 
	`°rHash
(
pKey
Ë% 
pH
->
htsize
;

269 
	`ö£πEÀmít
(
pH
,ÖH->
ht
 ? &pH->ht[
h
] : 0, 
√w_ñem
);

271 
	}
}

	@hash.h

15 #i‚de‡
SQLITE_HASH_H


16 
	#SQLITE_HASH_H


	)

19 
Hash
 
	tHash
;

20 
HashEÀm
 
	tHashEÀm
;

43 
	sHash
 {

44 
	mhtsize
;

45 
	mcou¡
;

46 
HashEÀm
 *
	mfú°
;

47 
	s_ht
 {

48 
	mcou¡
;

49 
HashEÀm
 *
	mchaö
;

50 } *
	mht
;

59 
	sHashEÀm
 {

60 
HashEÀm
 *
	m√xt
, *
	m¥ev
;

61 *
	md©a
;

62 c⁄° *
	mpKey
;

68 
sqlôe3HashInô
(
Hash
*);

69 *
sqlôe3HashIn£π
(
Hash
*, c⁄° *
pKey
, *
pD©a
);

70 *
sqlôe3HashFöd
(c⁄° 
Hash
*, c⁄° *
pKey
);

71 
sqlôe3HashCÀ¨
(
Hash
*);

85 
	#sqlôeHashFú°
(
H
Ë((H)->
fú°
)

	)

86 
	#sqlôeHashNext
(
E
Ë((E)->
√xt
)

	)

87 
	#sqlôeHashD©a
(
E
Ë((E)->
d©a
)

	)

	@hwtime.h

16 #i‚de‡
SQLITE_HWTIME_H


17 
	#SQLITE_HWTIME_H


	)

25 #i‡(
deföed
(
__GNUC__
Ë|| deföed(
_MSC_VER
)) && \

26 (
deföed
(
i386
Ë|| deföed(
__i386__
Ë|| 
	$deföed
(
_M_IX86
))

28 #i‡
	`deföed
(
__GNUC__
)

30 
__ölöe__
 
sqlôe_uöt64
 
	$sqlôe3Hwtime
(){

31 
lo
, 
hi
;

32 
__asm__
 
	`__vﬁ©ûe__
 ("rdtsc" : "˜" (
lo
), "=d" (
hi
));

33  (
sqlôe_uöt64
)
hi
 << 32 | 
lo
;

34 
	}
}

36 #ñi‡
deföed
(
_MSC_VER
)

38 
	$__de˛•ec
(
«ked
Ë
__ölöe
 
sqlôe_uöt64
 
__cde˛
 
	$sqlôe3Hwtime
(){

39 
__asm
 {

40 
rdtsc


41 
ªt
 ;  
vÆue
 
©
 
EDX
:
EAX


43 
	}
}

47 #ñi‡(
deföed
(
__GNUC__
Ë&& deföed(
__x86_64__
))

49 
__ölöe__
 
sqlôe_uöt64
 
	$sqlôe3Hwtime
(){

50 
vÆ
;

51 
__asm__
 
	`__vﬁ©ûe__
 ("rdtsc" : "=A" (
vÆ
));

52  
vÆ
;

53 
	}
}

55 #ñi‡(
deföed
(
__GNUC__
Ë&& deföed(
__µc__
))

57 
__ölöe__
 
sqlôe_uöt64
 
	$sqlôe3Hwtime
(){

58 
ªtvÆ
;

59 
junk
;

60 
__asm__
 
	`__vﬁ©ûe__
 ("\n\
1: mftbu %1\n\
 %L0\n\
 %0\n\
 %0,%1\n\
 1b"

66 : "Ù" (
ªtvÆ
), "Ù" (
junk
));

67  
ªtvÆ
;

68 
	}
}

72 #îr‹ 
Nìd
 
im∂emíèti⁄
 
of
 
sqlôe3Hwtime
(Ë
your
 
∂©f‹m
.

81 
sqlôe_uöt64
 
	$sqlôe3Hwtime
(){  ((
sqlôe_uöt64
)0); 
	}
}

	@insert.c

15 
	~"sqlôeI¡.h
"

26 
	$sqlôe3O≥nTabÀ
(

27 
P¨£
 *
pP¨£
,

28 
iCur
,

29 
iDb
,

30 
TabÀ
 *
pTab
,

31 
›code


33 
Vdbe
 *
v
;

34 
	`as£π
–!
	`IsVútuÆ
(
pTab
) );

35 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

36 
	`as£π
–
›code
==
OP_O≥nWrôe
 || opcode==
OP_O≥nRód
 );

37 
	`sqlôe3TabÀLock
(
pP¨£
, 
iDb
, 
pTab
->
äum
,

38 (
›code
==
OP_O≥nWrôe
)?1:0, 
pTab
->
zName
);

39 if–
	`HasRowid
(
pTab
) ){

40 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
›code
, 
iCur
, 
pTab
->
äum
, 
iDb
,ÖTab->
nCﬁ
);

41 
	`VdbeCommít
((
v
, "%s", 
pTab
->
zName
));

43 
Index
 *
pPk
 = 
	`sqlôe3Prim¨yKeyIndex
(
pTab
);

44 
	`as£π
–
pPk
!=0 );

45 
	`as£π
–
pPk
->
äum
==
pTab
->tnum );

46 
	`sqlôe3VdbeAddOp3
(
v
, 
›code
, 
iCur
, 
pPk
->
äum
, 
iDb
);

47 
	`sqlôe3VdbeSëP4KeyInfo
(
pP¨£
, 
pPk
);

48 
	`VdbeCommít
((
v
, "%s", 
pTab
->
zName
));

50 
	}
}

72 c⁄° *
	$sqlôe3IndexAfföôySå
(
sqlôe3
 *
db
, 
Index
 *
pIdx
){

73 if–!
pIdx
->
zCﬁAff
 ){

82 
n
;

83 
TabÀ
 *
pTab
 = 
pIdx
->
pTabÀ
;

84 
pIdx
->
zCﬁAff
 = (*)
	`sqlôe3DbMÆlocRaw
(0,ÖIdx->
nCﬁumn
+1);

85 if–!
pIdx
->
zCﬁAff
 ){

86 
	`sqlôe3OomFau…
(
db
);

89 
n
=0;Ç<
pIdx
->
nCﬁumn
;Ç++){

90 
i16
 
x
 = 
pIdx
->
aiCﬁumn
[
n
];

91 if–
x
>=0 ){

92 
pIdx
->
zCﬁAff
[
n
] = 
pTab
->
aCﬁ
[
x
].
afföôy
;

93 }if–
x
==
XN_ROWID
 ){

94 
pIdx
->
zCﬁAff
[
n
] = 
SQLITE_AFF_INTEGER
;

96 
aff
;

97 
	`as£π
–
x
==
XN_EXPR
 );

98 
	`as£π
–
pIdx
->
aCﬁEx¥
!=0 );

99 
aff
 = 
	`sqlôe3Ex¥Afföôy
(
pIdx
->
aCﬁEx¥
->
a
[
n
].
pEx¥
);

100 if–
aff
==0 )áf‡
SQLITE_AFF_BLOB
;

101 
pIdx
->
zCﬁAff
[
n
] = 
aff
;

104 
pIdx
->
zCﬁAff
[
n
] = 0;

107  
pIdx
->
zCﬁAff
;

108 
	}
}

130 
	$sqlôe3TabÀAfföôy
(
Vdbe
 *
v
, 
TabÀ
 *
pTab
, 
iReg
){

131 
i
;

132 *
zCﬁAff
 = 
pTab
->zColAff;

133 if–
zCﬁAff
==0 ){

134 
sqlôe3
 *
db
 = 
	`sqlôe3VdbeDb
(
v
);

135 
zCﬁAff
 = (*)
	`sqlôe3DbMÆlocRaw
(0, 
pTab
->
nCﬁ
+1);

136 if–!
zCﬁAff
 ){

137 
	`sqlôe3OomFau…
(
db
);

141 
i
=0; i<
pTab
->
nCﬁ
; i++){

142 
zCﬁAff
[
i
] = 
pTab
->
aCﬁ
[i].
afföôy
;

145 
zCﬁAff
[
i
--] = 0;

146 } 
i
>=0 && 
zCﬁAff
[i]==
SQLITE_AFF_BLOB
 );

147 
pTab
->
zCﬁAff
 = zColAff;

149 
i
 = 
	`sqlôe3SåÀn30
(
zCﬁAff
);

150 if–
i
 ){

151 if–
iReg
 ){

152 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Afföôy
, 
iReg
, 
i
, 0, 
zCﬁAff
, i);

154 
	`sqlôe3VdbeCh™geP4
(
v
, -1, 
zCﬁAff
, 
i
);

157 
	}
}

165 
	$ªadsTabÀ
(
P¨£
 *
p
, 
iDb
, 
TabÀ
 *
pTab
){

166 
Vdbe
 *
v
 = 
	`sqlôe3GëVdbe
(
p
);

167 
i
;

168 
iEnd
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

169 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


170 
VTabÀ
 *
pVTab
 = 
	`IsVútuÆ
(
pTab
Ë? 
	`sqlôe3GëVTabÀ
(
p
->
db
,ÖTab) : 0;

173 
i
=1; i<
iEnd
; i++){

174 
VdbeOp
 *
pOp
 = 
	`sqlôe3VdbeGëOp
(
v
, 
i
);

175 
	`as£π
–
pOp
!=0 );

176 if–
pOp
->
›code
==
OP_O≥nRód
 &&ÖOp->
p3
==
iDb
 ){

177 
Index
 *
pIndex
;

178 
äum
 = 
pOp
->
p2
;

179 if–
äum
==
pTab
->tnum ){

182 
pIndex
=
pTab
->pIndex;ÖIndex;ÖIndexıIndex->
pNext
){

183 if–
äum
==
pIndex
->tnum ){

188 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


189 if–
pOp
->
›code
==
OP_VO≥n
 &&ÖOp->
p4
.
pVèb
==
pVTab
 ){

190 
	`as£π
–
pOp
->
p4
.
pVèb
!=0 );

191 
	`as£π
–
pOp
->
p4ty≥
==
P4_VTAB
 );

197 
	}
}

199 #i‚de‡
SQLITE_OMIT_AUTOINCREMENT


222 
	$autoIncBegö
(

223 
P¨£
 *
pP¨£
,

224 
iDb
,

225 
TabÀ
 *
pTab


227 
memId
 = 0;

228 if–(
pTab
->
èbFœgs
 & 
TF_Autoö¸emít
)!=0

229 && (
pP¨£
->
db
->
Êags
 & 
SQLITE_Vacuum
)==0

231 
P¨£
 *
pT›Àvñ
 = 
	`sqlôe3P¨£T›Àvñ
(
pP¨£
);

232 
AutoöcInfo
 *
pInfo
;

234 
pInfo
 = 
pT›Àvñ
->
pAöc
;

235  
pInfo
 &&ÖInfo->
pTab
!ıTab ){ÖInfÿpInfo->
pNext
; }

236 if–
pInfo
==0 ){

237 
pInfo
 = 
	`sqlôe3DbMÆlocRawNN
(
pP¨£
->
db
, (*pInfo));

238 if–
pInfo
==0 )  0;

239 
pInfo
->
pNext
 = 
pT›Àvñ
->
pAöc
;

240 
pT›Àvñ
->
pAöc
 = 
pInfo
;

241 
pInfo
->
pTab
 =ÖTab;

242 
pInfo
->
iDb
 = iDb;

243 
pT›Àvñ
->
nMem
++;

244 
pInfo
->
ªgCå
 = ++
pT›Àvñ
->
nMem
;

245 
pT›Àvñ
->
nMem
++;

247 
memId
 = 
pInfo
->
ªgCå
;

249  
memId
;

250 
	}
}

256 
	$sqlôe3Autoö¸emítBegö
(
P¨£
 *
pP¨£
){

257 
AutoöcInfo
 *
p
;

258 
sqlôe3
 *
db
 = 
pP¨£
->db;

259 
Db
 *
pDb
;

260 
memId
;

261 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

265 
	`as£π
–
pP¨£
->
pTriggîTab
==0 );

266 
	`as£π
–
	`sqlôe3IsT›Àvñ
(
pP¨£
) );

268 
	`as£π
–
v
 );

269 
p
 = 
pP¨£
->
pAöc
;Ö;Ö =Ö->
pNext
){

270 c⁄° 
iLn
 = 
	`VDBE_OFFSET_LINENO
(2);

271 c⁄° 
VdbeOpLi°
 
autoInc
[] = {

272  {
OP_NuŒ
, 0, 0, 0},

273  {
OP_Rewöd
, 0, 9, 0},

274  {
OP_Cﬁumn
, 0, 0, 0},

275  {
OP_Ne
, 0, 7, 0},

276  {
OP_Rowid
, 0, 0, 0},

277  {
OP_Cﬁumn
, 0, 1, 0},

278  {
OP_GŸo
, 0, 9, 0},

279  {
OP_Next
, 0, 2, 0},

280  {
OP_I¡egî
, 0, 0, 0},

281  {
OP_Clo£
, 0, 0, 0}

283 
VdbeOp
 *
aOp
;

284 
pDb
 = &
db
->
aDb
[
p
->
iDb
];

285 
memId
 = 
p
->
ªgCå
;

286 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 0, 
pDb
->
pSchema
) );

287 
	`sqlôe3O≥nTabÀ
(
pP¨£
, 0, 
p
->
iDb
, 
pDb
->
pSchema
->
pSeqTab
, 
OP_O≥nRód
);

288 
	`sqlôe3VdbeLﬂdSåög
(
v
, 
memId
-1, 
p
->
pTab
->
zName
);

289 
aOp
 = 
	`sqlôe3VdbeAddOpLi°
(
v
, 
	`AºaySize
(
autoInc
),áutoInc, 
iLn
);

290 if–
aOp
==0 ) ;

291 
aOp
[0].
p2
 = 
memId
;

292 
aOp
[0].
p3
 = 
memId
+1;

293 
aOp
[2].
p3
 = 
memId
;

294 
aOp
[3].
p1
 = 
memId
-1;

295 
aOp
[3].
p3
 = 
memId
;

296 
aOp
[3].
p5
 = 
SQLITE_JUMPIFNULL
;

297 
aOp
[4].
p2
 = 
memId
+1;

298 
aOp
[5].
p3
 = 
memId
;

299 
aOp
[8].
p2
 = 
memId
;

301 
	}
}

311 
	$autoIncSãp
(
P¨£
 *
pP¨£
, 
memId
, 
ªgRowid
){

312 if–
memId
>0 ){

313 
	`sqlôe3VdbeAddOp2
(
pP¨£
->
pVdbe
, 
OP_MemMax
, 
memId
, 
ªgRowid
);

315 
	}
}

324 
SQLITE_NOINLINE
 
	$autoIn¸emítEnd
(
P¨£
 *
pP¨£
){

325 
AutoöcInfo
 *
p
;

326 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

327 
sqlôe3
 *
db
 = 
pP¨£
->db;

329 
	`as£π
–
v
 );

330 
p
 = 
pP¨£
->
pAöc
;Ö;Ö =Ö->
pNext
){

331 c⁄° 
iLn
 = 
	`VDBE_OFFSET_LINENO
(2);

332 c⁄° 
VdbeOpLi°
 
autoIncEnd
[] = {

333  {
OP_NŸNuŒ
, 0, 2, 0},

334  {
OP_NewRowid
, 0, 0, 0},

335  {
OP_MakeRec‹d
, 0, 2, 0},

336  {
OP_In£π
, 0, 0, 0},

337  {
OP_Clo£
, 0, 0, 0}

339 
VdbeOp
 *
aOp
;

340 
Db
 *
pDb
 = &
db
->
aDb
[
p
->
iDb
];

341 
iRec
;

342 
memId
 = 
p
->
ªgCå
;

344 
iRec
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

345 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 0, 
pDb
->
pSchema
) );

346 
	`sqlôe3O≥nTabÀ
(
pP¨£
, 0, 
p
->
iDb
, 
pDb
->
pSchema
->
pSeqTab
, 
OP_O≥nWrôe
);

347 
aOp
 = 
	`sqlôe3VdbeAddOpLi°
(
v
, 
	`AºaySize
(
autoIncEnd
),áutoIncEnd, 
iLn
);

348 if–
aOp
==0 ) ;

349 
aOp
[0].
p1
 = 
memId
+1;

350 
aOp
[1].
p2
 = 
memId
+1;

351 
aOp
[2].
p1
 = 
memId
-1;

352 
aOp
[2].
p3
 = 
iRec
;

353 
aOp
[3].
p2
 = 
iRec
;

354 
aOp
[3].
p3
 = 
memId
+1;

355 
aOp
[3].
p5
 = 
OPFLAG_APPEND
;

356 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
iRec
);

358 
	}
}

359 
	$sqlôe3Autoö¸emítEnd
(
P¨£
 *
pP¨£
){

360 if–
pP¨£
->
pAöc
 ) 
	`autoIn¸emítEnd
(pParse);

361 
	}
}

367 
	#autoIncBegö
(
A
,
B
,
C
Ë(0)

	)

368 
	#autoIncSãp
(
A
,
B
,
C
)

	)

373 
x„rO±imiz©i⁄
(

374 
P¨£
 *
pP¨£
,

375 
TabÀ
 *
pDe°
,

376 
Sñe˘
 *
pSñe˘
,

377 
⁄Eº‹
,

378 
iDbDe°


478 
	$sqlôe3In£π
(

479 
P¨£
 *
pP¨£
,

480 
SrcLi°
 *
pTabLi°
,

481 
Sñe˘
 *
pSñe˘
,

482 
IdLi°
 *
pCﬁumn
,

483 
⁄Eº‹


485 
sqlôe3
 *
db
;

486 
TabÀ
 *
pTab
;

487 *
zTab
;

488 
i
, 
j
;

489 
Vdbe
 *
v
;

490 
Index
 *
pIdx
;

491 
nCﬁumn
;

492 
nHiddí
 = 0;

493 
iD©aCur
 = 0;

494 
iIdxCur
 = 0;

495 
ùkCﬁumn
 = -1;

496 
ídOfLo›
;

497 
§cTab
 = 0;

498 
addrInsT›
 = 0;

499 
addrC⁄t
 = 0;

500 
Sñe˘De°
 
de°
;

501 
iDb
;

502 
u8
 
u£TempTabÀ
 = 0;

503 
u8
 
≠≥ndFœg
 = 0;

504 
u8
 
wôhoutRowid
;

505 
u8
 
bIdLi°InOrdî
;

506 
Ex¥Li°
 *
pLi°
 = 0;

509 
ªgFromSñe˘
 = 0;

510 
ªgAutoöc
 = 0;

511 
ªgRowCou¡
 = 0;

512 
ªgIns
;

513 
ªgRowid
;

514 
ªgD©a
;

515 *
aRegIdx
 = 0;

517 #i‚de‡
SQLITE_OMIT_TRIGGER


518 
isVõw
;

519 
Triggî
 *
pTriggî
;

520 
tmask
;

523 
db
 = 
pP¨£
->db;

524 
	`mem£t
(&
de°
, 0, (dest));

525 if–
pP¨£
->
nEº
 || 
db
->
mÆlocFaûed
 ){

526 
ö£π_˛ónup
;

533 if–
pSñe˘
 && (pSñe˘->
£lFœgs
 & 
SF_VÆues
)!=0 &&ÖSñe˘->
pPri‹
==0 ){

534 
pLi°
 = 
pSñe˘
->
pELi°
;

535 
pSñe˘
->
pELi°
 = 0;

536 
	`sqlôe3Sñe˘Dñëe
(
db
, 
pSñe˘
);

537 
pSñe˘
 = 0;

542 
	`as£π
–
pTabLi°
->
nSrc
==1 );

543 
zTab
 = 
pTabLi°
->
a
[0].
zName
;

544 if–
	`NEVER
(
zTab
==0ËË
ö£π_˛ónup
;

545 
pTab
 = 
	`sqlôe3SrcLi°Lookup
(
pP¨£
, 
pTabLi°
);

546 if–
pTab
==0 ){

547 
ö£π_˛ónup
;

549 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pTab
->
pSchema
);

550 
	`as£π
–
iDb
<
db
->
nDb
 );

551 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_INSERT
, 
pTab
->
zName
, 0,

552 
db
->
aDb
[
iDb
].
zDbSName
) ){

553 
ö£π_˛ónup
;

555 
wôhoutRowid
 = !
	`HasRowid
(
pTab
);

560 #i‚de‡
SQLITE_OMIT_TRIGGER


561 
pTriggî
 = 
	`sqlôe3TriggîsExi°
(
pP¨£
, 
pTab
, 
TK_INSERT
, 0, &
tmask
);

562 
isVõw
 = 
pTab
->
pSñe˘
!=0;

564 
	#pTriggî
 0

	)

565 
	#tmask
 0

	)

566 
	#isVõw
 0

	)

568 #ifde‡
SQLITE_OMIT_VIEW


569 #unde‡
isVõw


570 
	#isVõw
 0

	)

572 
	`as£π
–(
pTriggî
 && 
tmask
) || (pTrigger==0 &&Åmask==0) );

577 if–
	`sqlôe3VõwGëCﬁumnNames
(
pP¨£
, 
pTab
) ){

578 
ö£π_˛ónup
;

583 if–
	`sqlôe3IsRódO∆y
(
pP¨£
, 
pTab
, 
tmask
) ){

584 
ö£π_˛ónup
;

589 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

590 if–
v
==0 ) 
ö£π_˛ónup
;

591 if–
pP¨£
->
√°ed
==0 ) 
	`sqlôe3VdbeCou¡Ch™ges
(
v
);

592 
	`sqlôe3BegöWrôeO≥øti⁄
(
pP¨£
, 
pSñe˘
 || 
pTriggî
, 
iDb
);

594 #i‚de‡
SQLITE_OMIT_XFER_OPT


604 if–
pCﬁumn
==0 && 
	`x„rO±imiz©i⁄
(
pP¨£
, 
pTab
, 
pSñe˘
, 
⁄Eº‹
, 
iDb
) ){

605 
	`as£π
–!
pTriggî
 );

606 
	`as£π
–
pLi°
==0 );

607 
ö£π_íd
;

614 
ªgAutoöc
 = 
	`autoIncBegö
(
pP¨£
, 
iDb
, 
pTab
);

619 
ªgRowid
 = 
ªgIns
 = 
pP¨£
->
nMem
+1;

620 
pP¨£
->
nMem
 +
pTab
->
nCﬁ
 + 1;

621 if–
	`IsVútuÆ
(
pTab
) ){

622 
ªgRowid
++;

623 
pP¨£
->
nMem
++;

625 
ªgD©a
 = 
ªgRowid
+1;

638 
bIdLi°InOrdî
 = (
pTab
->
èbFœgs
 & 
TF_OOOHiddí
)==0;

639 if–
pCﬁumn
 ){

640 
i
=0; i<
pCﬁumn
->
nId
; i++){

641 
pCﬁumn
->
a
[
i
].
idx
 = -1;

643 
i
=0; i<
pCﬁumn
->
nId
; i++){

644 
j
=0; j<
pTab
->
nCﬁ
; j++){

645 if–
	`sqlôe3SåICmp
(
pCﬁumn
->
a
[
i
].
zName
, 
pTab
->
aCﬁ
[
j
].zName)==0 ){

646 
pCﬁumn
->
a
[
i
].
idx
 = 
j
;

647 if–
i
!=
j
 ) 
bIdLi°InOrdî
 = 0;

648 if–
j
==
pTab
->
iPKey
 ){

649 
ùkCﬁumn
 = 
i
; 
	`as£π
–!
wôhoutRowid
 );

654 if–
j
>=
pTab
->
nCﬁ
 ){

655 if–
	`sqlôe3IsRowid
(
pCﬁumn
->
a
[
i
].
zName
Ë&& !
wôhoutRowid
 ){

656 
ùkCﬁumn
 = 
i
;

657 
bIdLi°InOrdî
 = 0;

659 
	`sqlôe3Eº‹Msg
(
pP¨£
, "table %S hasÇo columnÇamed %s",

660 
pTabLi°
, 0, 
pCﬁumn
->
a
[
i
].
zName
);

661 
pP¨£
->
checkSchema
 = 1;

662 
ö£π_˛ónup
;

673 if–
pSñe˘
 ){

676 
ªgYõld
;

677 
addrT›
;

678 
rc
;

680 
ªgYõld
 = ++
pP¨£
->
nMem
;

681 
addrT›
 = 
	`sqlôe3VdbeCuºítAddr
(
v
) + 1;

682 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_InôC‹outöe
, 
ªgYõld
, 0, 
addrT›
);

683 
	`sqlôe3Sñe˘De°Inô
(&
de°
, 
SRT_C‹outöe
, 
ªgYõld
);

684 
de°
.
iSd°
 = 
bIdLi°InOrdî
 ? 
ªgD©a
 : 0;

685 
de°
.
nSd°
 = 
pTab
->
nCﬁ
;

686 
rc
 = 
	`sqlôe3Sñe˘
(
pP¨£
, 
pSñe˘
, &
de°
);

687 
ªgFromSñe˘
 = 
de°
.
iSd°
;

688 if–
rc
 || 
db
->
mÆlocFaûed
 || 
pP¨£
->
nEº
 ) 
ö£π_˛ónup
;

689 
	`sqlôe3VdbeEndC‹outöe
(
v
, 
ªgYõld
);

690 
	`sqlôe3VdbeJumpHîe
(
v
, 
addrT›
 - 1);

691 
	`as£π
–
pSñe˘
->
pELi°
 );

692 
nCﬁumn
 = 
pSñe˘
->
pELi°
->
nEx¥
;

703 if–
pTriggî
 || 
	`ªadsTabÀ
(
pP¨£
, 
iDb
, 
pTab
) ){

704 
u£TempTabÀ
 = 1;

707 if–
u£TempTabÀ
 ){

718 
ªgRec
;

719 
ªgTempRowid
;

720 
addrL
;

722 
§cTab
 = 
pP¨£
->
nTab
++;

723 
ªgRec
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

724 
ªgTempRowid
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

725 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_O≥nEphemîÆ
, 
§cTab
, 
nCﬁumn
);

726 
addrL
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Yõld
, 
de°
.
iSDP¨m
); 
	`VdbeCovîage
(v);

727 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MakeRec‹d
, 
ªgFromSñe˘
, 
nCﬁumn
, 
ªgRec
);

728 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NewRowid
, 
§cTab
, 
ªgTempRowid
);

729 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_In£π
, 
§cTab
, 
ªgRec
, 
ªgTempRowid
);

730 
	`sqlôe3VdbeGŸo
(
v
, 
addrL
);

731 
	`sqlôe3VdbeJumpHîe
(
v
, 
addrL
);

732 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgRec
);

733 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgTempRowid
);

739 
NameC⁄ãxt
 
sNC
;

740 
	`mem£t
(&
sNC
, 0, (sNC));

741 
sNC
.
pP¨£
 =ÖParse;

742 
§cTab
 = -1;

743 
	`as£π
–
u£TempTabÀ
==0 );

744 if–
pLi°
 ){

745 
nCﬁumn
 = 
pLi°
->
nEx¥
;

746 if–
	`sqlôe3ResﬁveEx¥Li°Names
(&
sNC
, 
pLi°
) ){

747 
ö£π_˛ónup
;

750 
nCﬁumn
 = 0;

758 if–
pCﬁumn
==0 && 
nCﬁumn
>0 ){

759 
ùkCﬁumn
 = 
pTab
->
iPKey
;

765 
i
=0; i<
pTab
->
nCﬁ
; i++){

766 
nHiddí
 +(
	`IsHiddíCﬁumn
(&
pTab
->
aCﬁ
[
i
]) ? 1 : 0);

768 if–
pCﬁumn
==0 && 
nCﬁumn
 &&ÇCﬁumn!=(
pTab
->
nCﬁ
-
nHiddí
) ){

769 
	`sqlôe3Eº‹Msg
(
pP¨£
,

771 
pTabLi°
, 0, 
pTab
->
nCﬁ
-
nHiddí
, 
nCﬁumn
);

772 
ö£π_˛ónup
;

774 if–
pCﬁumn
!=0 && 
nCﬁumn
!ıCﬁumn->
nId
 ){

775 
	`sqlôe3Eº‹Msg
(
pP¨£
, "%d vÆue†f‹ %d cﬁumns", 
nCﬁumn
, 
pCﬁumn
->
nId
);

776 
ö£π_˛ónup
;

781 if–
db
->
Êags
 & 
SQLITE_Cou¡Rows
 ){

782 
ªgRowCou¡
 = ++
pP¨£
->
nMem
;

783 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 0, 
ªgRowCou¡
);

787 if–!
isVõw
 ){

788 
nIdx
;

789 
nIdx
 = 
	`sqlôe3O≥nTabÀAndIndi˚s
(
pP¨£
, 
pTab
, 
OP_O≥nWrôe
, 0, -1, 0,

790 &
iD©aCur
, &
iIdxCur
);

791 
aRegIdx
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, ()*(
nIdx
+1));

792 if–
aRegIdx
==0 ){

793 
ö£π_˛ónup
;

795 
i
=0, 
pIdx
=
pTab
->
pIndex
; i<
nIdx
;ÖIdxıIdx->
pNext
, i++){

796 
	`as£π
–
pIdx
 );

797 
aRegIdx
[
i
] = ++
pP¨£
->
nMem
;

798 
pP¨£
->
nMem
 +
pIdx
->
nCﬁumn
;

803 if–
u£TempTabÀ
 ){

813 
addrInsT›
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Rewöd
, 
§cTab
); 
	`VdbeCovîage
(v);

814 
addrC⁄t
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

815 }if–
pSñe˘
 ){

824 
addrInsT›
 = 
addrC⁄t
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Yõld
, 
de°
.
iSDP¨m
);

825 
	`VdbeCovîage
(
v
);

830 
ídOfLo›
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

831 if–
tmask
 & 
TRIGGER_BEFORE
 ){

832 
ªgCﬁs
 = 
	`sqlôe3GëTempR™ge
(
pP¨£
, 
pTab
->
nCﬁ
+1);

840 if–
ùkCﬁumn
<0 ){

841 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, -1, 
ªgCﬁs
);

843 
addr1
;

844 
	`as£π
–!
wôhoutRowid
 );

845 if–
u£TempTabÀ
 ){

846 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
§cTab
, 
ùkCﬁumn
, 
ªgCﬁs
);

848 
	`as£π
–
pSñe˘
==0 );

849 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pLi°
->
a
[
ùkCﬁumn
].
pEx¥
, 
ªgCﬁs
);

851 
addr1
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_NŸNuŒ
, 
ªgCﬁs
); 
	`VdbeCovîage
(v);

852 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, -1, 
ªgCﬁs
);

853 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr1
);

854 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Mu°BeI¡
, 
ªgCﬁs
); 
	`VdbeCovîage
(v);

860 
	`as£π
–!
	`IsVútuÆ
(
pTab
) );

864 
i
=
j
=0; i<
pTab
->
nCﬁ
; i++){

865 if–
pCﬁumn
 ){

866 
j
=0; j<
pCﬁumn
->
nId
; j++){

867 if–
pCﬁumn
->
a
[
j
].
idx
==
i
 ) ;

870 if–(!
u£TempTabÀ
 && !
pLi°
Ë|| (
pCﬁumn
 && 
j
>ıCﬁumn->
nId
)

871 || (
pCﬁumn
==0 && 
	`IsOrdö¨yHiddíCﬁumn
(&
pTab
->
aCﬁ
[
i
])) ){

872 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pTab
->
aCﬁ
[
i
].
pDÊt
, 
ªgCﬁs
+i+1);

873 }if–
u£TempTabÀ
 ){

874 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
§cTab
, 
j
, 
ªgCﬁs
+
i
+1);

876 
	`as£π
–
pSñe˘
==0 );

877 
	`sqlôe3Ex¥CodeAndCache
(
pP¨£
, 
pLi°
->
a
[
j
].
pEx¥
, 
ªgCﬁs
+
i
+1);

879 if–
pCﬁumn
==0 && !
	`IsOrdö¨yHiddíCﬁumn
(&
pTab
->
aCﬁ
[
i
]ËË
j
++;

887 if–!
isVõw
 ){

888 
	`sqlôe3TabÀAfföôy
(
v
, 
pTab
, 
ªgCﬁs
+1);

892 
	`sqlôe3CodeRowTriggî
(
pP¨£
, 
pTriggî
, 
TK_INSERT
, 0, 
TRIGGER_BEFORE
,

893 
pTab
, 
ªgCﬁs
-pTab->
nCﬁ
-1, 
⁄Eº‹
, 
ídOfLo›
);

895 
	`sqlôe3Rñó£TempR™ge
(
pP¨£
, 
ªgCﬁs
, 
pTab
->
nCﬁ
+1);

901 if–!
isVõw
 ){

902 if–
	`IsVútuÆ
(
pTab
) ){

904 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NuŒ
, 0, 
ªgIns
);

906 if–
ùkCﬁumn
>=0 ){

907 if–
u£TempTabÀ
 ){

908 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
§cTab
, 
ùkCﬁumn
, 
ªgRowid
);

909 }if–
pSñe˘
 ){

910 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_C›y
, 
ªgFromSñe˘
+
ùkCﬁumn
, 
ªgRowid
);

912 
VdbeOp
 *
pOp
;

913 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pLi°
->
a
[
ùkCﬁumn
].
pEx¥
, 
ªgRowid
);

914 
pOp
 = 
	`sqlôe3VdbeGëOp
(
v
, -1);

915 if–
	`ALWAYS
(
pOp
Ë&&ÖOp->
›code
==
OP_NuŒ
 && !
	`IsVútuÆ
(
pTab
) ){

916 
≠≥ndFœg
 = 1;

917 
pOp
->
›code
 = 
OP_NewRowid
;

918 
pOp
->
p1
 = 
iD©aCur
;

919 
pOp
->
p2
 = 
ªgRowid
;

920 
pOp
->
p3
 = 
ªgAutoöc
;

926 if–!
≠≥ndFœg
 ){

927 
addr1
;

928 if–!
	`IsVútuÆ
(
pTab
) ){

929 
addr1
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_NŸNuŒ
, 
ªgRowid
); 
	`VdbeCovîage
(v);

930 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_NewRowid
, 
iD©aCur
, 
ªgRowid
, 
ªgAutoöc
);

931 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr1
);

933 
addr1
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

934 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IsNuŒ
, 
ªgRowid
, 
addr1
+2); 
	`VdbeCovîage
(v);

936 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Mu°BeI¡
, 
ªgRowid
); 
	`VdbeCovîage
(v);

938 }if–
	`IsVútuÆ
(
pTab
Ë|| 
wôhoutRowid
 ){

939 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NuŒ
, 0, 
ªgRowid
);

941 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_NewRowid
, 
iD©aCur
, 
ªgRowid
, 
ªgAutoöc
);

942 
≠≥ndFœg
 = 1;

944 
	`autoIncSãp
(
pP¨£
, 
ªgAutoöc
, 
ªgRowid
);

949 
nHiddí
 = 0;

950 
i
=0; i<
pTab
->
nCﬁ
; i++){

951 
iRegSt‹e
 = 
ªgRowid
+1+
i
;

952 if–
i
==
pTab
->
iPKey
 ){

958 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_So·NuŒ
, 
iRegSt‹e
);

961 if–
pCﬁumn
==0 ){

962 if–
	`IsHiddíCﬁumn
(&
pTab
->
aCﬁ
[
i
]) ){

963 
j
 = -1;

964 
nHiddí
++;

966 
j
 = 
i
 - 
nHiddí
;

969 
j
=0; j<
pCﬁumn
->
nId
; j++){

970 if–
pCﬁumn
->
a
[
j
].
idx
==
i
 ) ;

973 if–
j
<0 || 
nCﬁumn
==0 || (
pCﬁumn
 && j>ıCﬁumn->
nId
) ){

974 
	`sqlôe3Ex¥CodeFa˘‹abÀ
(
pP¨£
, 
pTab
->
aCﬁ
[
i
].
pDÊt
, 
iRegSt‹e
);

975 }if–
u£TempTabÀ
 ){

976 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
§cTab
, 
j
, 
iRegSt‹e
);

977 }if–
pSñe˘
 ){

978 if–
ªgFromSñe˘
!=
ªgD©a
 ){

979 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_SC›y
, 
ªgFromSñe˘
+
j
, 
iRegSt‹e
);

982 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pLi°
->
a
[
j
].
pEx¥
, 
iRegSt‹e
);

989 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


990 if–
	`IsVútuÆ
(
pTab
) ){

991 c⁄° *
pVTab
 = (c⁄° *)
	`sqlôe3GëVTabÀ
(
db
, 
pTab
);

992 
	`sqlôe3VèbMakeWrôabÀ
(
pP¨£
, 
pTab
);

993 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_VUpd©e
, 1, 
pTab
->
nCﬁ
+2, 
ªgIns
, 
pVTab
, 
P4_VTAB
);

994 
	`sqlôe3VdbeCh™geP5
(
v
, 
⁄Eº‹
==
OE_DeÁu…
 ? 
OE_Ab‹t
 : onError);

995 
	`sqlôe3MayAb‹t
(
pP¨£
);

999 
isRïœ˚
;

1000 
bU£Sìk
;

1001 
	`sqlôe3Gíî©eC⁄°øötChecks
(
pP¨£
, 
pTab
, 
aRegIdx
, 
iD©aCur
, 
iIdxCur
,

1002 
ªgIns
, 0, 
ùkCﬁumn
>=0, 
⁄Eº‹
, 
ídOfLo›
, &
isRïœ˚
, 0

1004 
	`sqlôe3FkCheck
(
pP¨£
, 
pTab
, 0, 
ªgIns
, 0, 0);

1014 
bU£Sìk
 = (
isRïœ˚
==0 || (
pTriggî
==0 &&

1015 ((
db
->
Êags
 & 
SQLITE_F‹eignKeys
)==0 || 
	`sqlôe3FkRe„ªn˚s
(
pTab
)==0)

1017 
	`sqlôe3Com∂ëeIn£πi⁄
(
pP¨£
, 
pTab
, 
iD©aCur
, 
iIdxCur
,

1018 
ªgIns
, 
aRegIdx
, 0, 
≠≥ndFœg
, 
bU£Sìk


1025 if–(
db
->
Êags
 & 
SQLITE_Cou¡Rows
)!=0 ){

1026 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_AddImm
, 
ªgRowCou¡
, 1);

1029 if–
pTriggî
 ){

1031 
	`sqlôe3CodeRowTriggî
(
pP¨£
, 
pTriggî
, 
TK_INSERT
, 0, 
TRIGGER_AFTER
,

1032 
pTab
, 
ªgD©a
-2-pTab->
nCﬁ
, 
⁄Eº‹
, 
ídOfLo›
);

1038 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
ídOfLo›
);

1039 if–
u£TempTabÀ
 ){

1040 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Next
, 
§cTab
, 
addrC⁄t
); 
	`VdbeCovîage
(v);

1041 
	`sqlôe3VdbeJumpHîe
(
v
, 
addrInsT›
);

1042 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Clo£
, 
§cTab
);

1043 }if–
pSñe˘
 ){

1044 
	`sqlôe3VdbeGŸo
(
v
, 
addrC⁄t
);

1045 
	`sqlôe3VdbeJumpHîe
(
v
, 
addrInsT›
);

1048 
ö£π_íd
:

1053 if–
pP¨£
->
√°ed
==0 &&ÖP¨£->
pTriggîTab
==0 ){

1054 
	`sqlôe3Autoö¸emítEnd
(
pP¨£
);

1062 if–(
db
->
Êags
&
SQLITE_Cou¡Rows
Ë&& !
pP¨£
->
√°ed
 && !pP¨£->
pTriggîTab
 ){

1063 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 
ªgRowCou¡
, 1);

1064 
	`sqlôe3VdbeSëNumCﬁs
(
v
, 1);

1065 
	`sqlôe3VdbeSëCﬁName
(
v
, 0, 
COLNAME_NAME
, "row†ö£πed", 
SQLITE_STATIC
);

1068 
ö£π_˛ónup
:

1069 
	`sqlôe3SrcLi°Dñëe
(
db
, 
pTabLi°
);

1070 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pLi°
);

1071 
	`sqlôe3Sñe˘Dñëe
(
db
, 
pSñe˘
);

1072 
	`sqlôe3IdLi°Dñëe
(
db
, 
pCﬁumn
);

1073 
	`sqlôe3DbFªe
(
db
, 
aRegIdx
);

1074 
	}
}

1079 #ifde‡
isVõw


1080 #unde‡
isVõw


1082 #ifde‡
pTriggî


1083 #unde‡
pTriggî


1085 #ifde‡
tmask


1086 #unde‡
tmask


1092 
	#CKCNSTRNT_COLUMN
 0x01

	)

1093 
	#CKCNSTRNT_ROWID
 0x02

	)

1100 
	$checkC⁄°øötEx¥Node
(
WÆkî
 *
pWÆkî
, 
Ex¥
 *
pEx¥
){

1101 if–
pEx¥
->
›
==
TK_COLUMN
 ){

1102 
	`as£π
–
pEx¥
->
iCﬁumn
>=0 ||ÖExpr->iColumn==-1 );

1103 if–
pEx¥
->
iCﬁumn
>=0 ){

1104 if–
pWÆkî
->
u
.
aiCﬁ
[
pEx¥
->
iCﬁumn
]>=0 ){

1105 
pWÆkî
->
eCode
 |
CKCNSTRNT_COLUMN
;

1108 
pWÆkî
->
eCode
 |
CKCNSTRNT_ROWID
;

1111  
WRC_C⁄töue
;

1112 
	}
}

1124 
	$checkC⁄°øötUnch™ged
(
Ex¥
 *
pEx¥
, *
aiChng
, 
chngRowid
){

1125 
WÆkî
 
w
;

1126 
	`mem£t
(&
w
, 0, (w));

1127 
w
.
eCode
 = 0;

1128 
w
.
xEx¥CÆlback
 = 
checkC⁄°øötEx¥Node
;

1129 
w
.
u
.
aiCﬁ
 = 
aiChng
;

1130 
	`sqlôe3WÆkEx¥
(&
w
, 
pEx¥
);

1131 if–!
chngRowid
 ){

1132 
	`ã°ˇ£
–(
w
.
eCode
 & 
CKCNSTRNT_ROWID
)!=0 );

1133 
w
.
eCode
 &~
CKCNSTRNT_ROWID
;

1135 
	`ã°ˇ£
–
w
.
eCode
==0 );

1136 
	`ã°ˇ£
–
w
.
eCode
==
CKCNSTRNT_COLUMN
 );

1137 
	`ã°ˇ£
–
w
.
eCode
==
CKCNSTRNT_ROWID
 );

1138 
	`ã°ˇ£
–
w
.
eCode
==(
CKCNSTRNT_ROWID
|
CKCNSTRNT_COLUMN
) );

1139  !
w
.
eCode
;

1140 
	}
}

1225 
	$sqlôe3Gíî©eC⁄°øötChecks
(

1226 
P¨£
 *
pP¨£
,

1227 
TabÀ
 *
pTab
,

1228 *
aRegIdx
,

1229 
iD©aCur
,

1230 
iIdxCur
,

1231 
ªgNewD©a
,

1232 
ªgOldD©a
,

1233 
u8
 
pkChng
,

1234 
u8
 
ovîrideEº‹
,

1235 
ign‹eDe°
,

1236 *
pbMayRïœ˚
,

1237 *
aiChng


1239 
Vdbe
 *
v
;

1240 
Index
 *
pIdx
;

1241 
Index
 *
pPk
 = 0;

1242 
sqlôe3
 *
db
;

1243 
i
;

1244 
ix
;

1245 
nCﬁ
;

1246 
⁄Eº‹
;

1247 
addr1
;

1248 
£íRïœ˚
 = 0;

1249 
nPkFõld
;

1250 
ùkT›
 = 0;

1251 
ùkBŸtom
 = 0;

1252 
u8
 
isUpd©e
;

1253 
u8
 
bAfföôyD⁄e
 = 0;

1255 
isUpd©e
 = 
ªgOldD©a
!=0;

1256 
db
 = 
pP¨£
->db;

1257 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

1258 
	`as£π
–
v
!=0 );

1259 
	`as£π
–
pTab
->
pSñe˘
==0 );

1260 
nCﬁ
 = 
pTab
->nCol;

1266 if–
	`HasRowid
(
pTab
) ){

1267 
pPk
 = 0;

1268 
nPkFõld
 = 1;

1270 
pPk
 = 
	`sqlôe3Prim¨yKeyIndex
(
pTab
);

1271 
nPkFõld
 = 
pPk
->
nKeyCﬁ
;

1275 
	`VdbeModuÀCommít
((
v
, "BEGIN: GenCnstCks(%d,%d,%d,%d,%d)",

1276 
iD©aCur
, 
iIdxCur
, 
ªgNewD©a
, 
ªgOldD©a
, 
pkChng
));

1280 
i
=0; i<
nCﬁ
; i++){

1281 if–
i
==
pTab
->
iPKey
 ){

1284 if–
aiChng
 &&áiChng[
i
]<0 ){

1288 
⁄Eº‹
 = 
pTab
->
aCﬁ
[
i
].
nŸNuŒ
;

1289 if–
⁄Eº‹
==
OE_N⁄e
 ) ;

1290 if–
ovîrideEº‹
!=
OE_DeÁu…
 ){

1291 
⁄Eº‹
 = 
ovîrideEº‹
;

1292 }if–
⁄Eº‹
==
OE_DeÁu…
 ){

1293 
⁄Eº‹
 = 
OE_Ab‹t
;

1295 if–
⁄Eº‹
==
OE_Rïœ˚
 && 
pTab
->
aCﬁ
[
i
].
pDÊt
==0 ){

1296 
⁄Eº‹
 = 
OE_Ab‹t
;

1298 
	`as£π
–
⁄Eº‹
==
OE_Rﬁlback
 || onEº‹==
OE_Ab‹t
 || onEº‹==
OE_Faû


1299 || 
⁄Eº‹
==
OE_Ign‹e
 || onEº‹==
OE_Rïœ˚
 );

1300  
⁄Eº‹
 ){

1301 
OE_Ab‹t
:

1302 
	`sqlôe3MayAb‹t
(
pP¨£
);

1304 
OE_Rﬁlback
:

1305 
OE_Faû
: {

1306 *
zMsg
 = 
	`sqlôe3MPrötf
(
db
, "%s.%s", 
pTab
->
zName
,

1307 
pTab
->
aCﬁ
[
i
].
zName
);

1308 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_HÆtIfNuŒ
, 
SQLITE_CONSTRAINT_NOTNULL
, 
⁄Eº‹
,

1309 
ªgNewD©a
+1+
i
);

1310 
	`sqlôe3VdbeAµídP4
(
v
, 
zMsg
, 
P4_DYNAMIC
);

1311 
	`sqlôe3VdbeCh™geP5
(
v
, 
P5_C⁄°øötNŸNuŒ
);

1312 
	`VdbeCovîage
(
v
);

1315 
OE_Ign‹e
: {

1316 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IsNuŒ
, 
ªgNewD©a
+1+
i
, 
ign‹eDe°
);

1317 
	`VdbeCovîage
(
v
);

1321 
	`as£π
–
⁄Eº‹
==
OE_Rïœ˚
 );

1322 
addr1
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_NŸNuŒ
, 
ªgNewD©a
+1+
i
);

1323 
	`VdbeCovîage
(
v
);

1324 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pTab
->
aCﬁ
[
i
].
pDÊt
, 
ªgNewD©a
+1+i);

1325 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr1
);

1333 #i‚de‡
SQLITE_OMIT_CHECK


1334 if–
pTab
->
pCheck
 && (
db
->
Êags
 & 
SQLITE_Ign‹eChecks
)==0 ){

1335 
Ex¥Li°
 *
pCheck
 = 
pTab
->pCheck;

1336 
pP¨£
->
ckBa£
 = 
ªgNewD©a
+1;

1337 
⁄Eº‹
 = 
ovîrideEº‹
!=
OE_DeÁu…
 ? ovîrideEº‹ : 
OE_Ab‹t
;

1338 
i
=0; i<
pCheck
->
nEx¥
; i++){

1339 
ÆlOk
;

1340 
Ex¥
 *
pEx¥
 = 
pCheck
->
a
[
i
].pExpr;

1341 if–
aiChng
 && 
	`checkC⁄°øötUnch™ged
(
pEx¥
,áiChng, 
pkChng
) ) ;

1342 
ÆlOk
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

1343 
	`sqlôe3Ex¥IfTrue
(
pP¨£
, 
pEx¥
, 
ÆlOk
, 
SQLITE_JUMPIFNULL
);

1344 if–
⁄Eº‹
==
OE_Ign‹e
 ){

1345 
	`sqlôe3VdbeGŸo
(
v
, 
ign‹eDe°
);

1347 *
zName
 = 
pCheck
->
a
[
i
].zName;

1348 if–
zName
==0 ) zNamê
pTab
->zName;

1349 if–
⁄Eº‹
==
OE_Rïœ˚
 ) onEº‹ = 
OE_Ab‹t
;

1350 
	`sqlôe3HÆtC⁄°øöt
(
pP¨£
, 
SQLITE_CONSTRAINT_CHECK
,

1351 
⁄Eº‹
, 
zName
, 
P4_TRANSIENT
,

1352 
P5_C⁄°øötCheck
);

1354 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
ÆlOk
);

1362 if–
pkChng
 && 
pPk
==0 ){

1363 
addrRowidOk
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

1366 
⁄Eº‹
 = 
pTab
->
keyC⁄f
;

1367 if–
ovîrideEº‹
!=
OE_DeÁu…
 ){

1368 
⁄Eº‹
 = 
ovîrideEº‹
;

1369 }if–
⁄Eº‹
==
OE_DeÁu…
 ){

1370 
⁄Eº‹
 = 
OE_Ab‹t
;

1373 if–
isUpd©e
 ){

1377 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Eq
, 
ªgNewD©a
, 
addrRowidOk
, 
ªgOldD©a
);

1378 
	`sqlôe3VdbeCh™geP5
(
v
, 
SQLITE_NOTNULL
);

1379 
	`VdbeCovîage
(
v
);

1387 if–
⁄Eº‹
==
OE_Rïœ˚
 && 
ovîrideEº‹
!=OE_Replace ){

1388 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
){

1389 if–
pIdx
->
⁄Eº‹
==
OE_Ign‹e
 ||ÖIdx->⁄Eº‹==
OE_Faû
 ){

1390 
ùkT›
 = 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_GŸo
);

1398 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_NŸExi°s
, 
iD©aCur
, 
addrRowidOk
, 
ªgNewD©a
);

1399 
	`VdbeCovîage
(
v
);

1402  
⁄Eº‹
 ){

1404 
⁄Eº‹
 = 
OE_Ab‹t
;

1407 
OE_Rﬁlback
:

1408 
OE_Ab‹t
:

1409 
OE_Faû
: {

1410 
	`sqlôe3RowidC⁄°øöt
(
pP¨£
, 
⁄Eº‹
, 
pTab
);

1413 
OE_Rïœ˚
: {

1436 
Triggî
 *
pTriggî
 = 0;

1437 if–
db
->
Êags
&
SQLITE_RecTriggîs
 ){

1438 
pTriggî
 = 
	`sqlôe3TriggîsExi°
(
pP¨£
, 
pTab
, 
TK_DELETE
, 0, 0);

1440 if–
pTriggî
 || 
	`sqlôe3FkRequúed
(
pP¨£
, 
pTab
, 0, 0) ){

1441 
	`sqlôe3Mu…iWrôe
(
pP¨£
);

1442 
	`sqlôe3Gíî©eRowDñëe
(
pP¨£
, 
pTab
, 
pTriggî
, 
iD©aCur
, 
iIdxCur
,

1443 
ªgNewD©a
, 1, 0, 
OE_Rïœ˚
, 1, -1);

1445 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


1446 if–
	`HasRowid
(
pTab
) ){

1451 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Dñëe
, 
iD©aCur
, 
OPFLAG_ISNOOP
);

1452 
	`sqlôe3VdbeAµídP4
(
v
, 
pTab
, 
P4_TABLE
);

1455 if–
pTab
->
pIndex
 ){

1456 
	`sqlôe3Mu…iWrôe
(
pP¨£
);

1457 
	`sqlôe3Gíî©eRowIndexDñëe
(
pP¨£
, 
pTab
, 
iD©aCur
, 
iIdxCur
,0,-1);

1460 
£íRïœ˚
 = 1;

1463 
OE_Ign‹e
: {

1465 
	`sqlôe3VdbeGŸo
(
v
, 
ign‹eDe°
);

1469 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
addrRowidOk
);

1470 if–
ùkT›
 ){

1471 
ùkBŸtom
 = 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_GŸo
);

1472 
	`sqlôe3VdbeJumpHîe
(
v
, 
ùkT›
);

1483 
ix
=0, 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
, ix++){

1484 
ªgIdx
;

1485 
ªgR
;

1486 
iThisCur
;

1487 
addrUniqueOk
;

1489 if–
aRegIdx
[
ix
]==0 ) ;

1490 if–
bAfföôyD⁄e
==0 ){

1491 
	`sqlôe3TabÀAfföôy
(
v
, 
pTab
, 
ªgNewD©a
+1);

1492 
bAfföôyD⁄e
 = 1;

1494 
iThisCur
 = 
iIdxCur
+
ix
;

1495 
addrUniqueOk
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

1498 if–
pIdx
->
pP¨tIdxWhîe
 ){

1499 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NuŒ
, 0, 
aRegIdx
[
ix
]);

1500 
pP¨£
->
ckBa£
 = 
ªgNewD©a
+1;

1501 
	`sqlôe3Ex¥IfFÆ£Dup
(
pP¨£
, 
pIdx
->
pP¨tIdxWhîe
, 
addrUniqueOk
,

1502 
SQLITE_JUMPIFNULL
);

1503 
pP¨£
->
ckBa£
 = 0;

1509 
ªgIdx
 = 
aRegIdx
[
ix
]+1;

1510 
i
=0; i<
pIdx
->
nCﬁumn
; i++){

1511 
iFõld
 = 
pIdx
->
aiCﬁumn
[
i
];

1512 
x
;

1513 if–
iFõld
==
XN_EXPR
 ){

1514 
pP¨£
->
ckBa£
 = 
ªgNewD©a
+1;

1515 
	`sqlôe3Ex¥CodeC›y
(
pP¨£
, 
pIdx
->
aCﬁEx¥
->
a
[
i
].
pEx¥
, 
ªgIdx
+i);

1516 
pP¨£
->
ckBa£
 = 0;

1517 
	`VdbeCommít
((
v
, "%†cﬁum¿%d", 
pIdx
->
zName
, 
i
));

1519 if–
iFõld
==
XN_ROWID
 || iFõld==
pTab
->
iPKey
 ){

1520 
x
 = 
ªgNewD©a
;

1522 
x
 = 
iFõld
 + 
ªgNewD©a
 + 1;

1524 
	`sqlôe3VdbeAddOp2
(
v
, 
iFõld
<0 ? 
OP_I¡C›y
 : 
OP_SC›y
, 
x
, 
ªgIdx
+
i
);

1525 
	`VdbeCommít
((
v
, "%s", 
iFõld
<0 ? "rowid" : 
pTab
->
aCﬁ
[iFõld].
zName
));

1528 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MakeRec‹d
, 
ªgIdx
, 
pIdx
->
nCﬁumn
, 
aRegIdx
[
ix
]);

1529 
	`VdbeCommít
((
v
, "f‹ %s", 
pIdx
->
zName
));

1535 if–
isUpd©e
 && 
pPk
==
pIdx
 && 
pkChng
==0 ){

1536 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
addrUniqueOk
);

1541 
⁄Eº‹
 = 
pIdx
->onError;

1542 if–
⁄Eº‹
==
OE_N⁄e
 ){

1543 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
addrUniqueOk
);

1546 if–
ovîrideEº‹
!=
OE_DeÁu…
 ){

1547 
⁄Eº‹
 = 
ovîrideEº‹
;

1548 }if–
⁄Eº‹
==
OE_DeÁu…
 ){

1549 
⁄Eº‹
 = 
OE_Ab‹t
;

1552 if–
ix
==0 && 
pPk
==
pIdx
 && 
⁄Eº‹
==
OE_Rïœ˚
 &&ÖPk->
pNext
==0 ){

1553 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
addrUniqueOk
);

1559 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_NoC⁄Êi˘
, 
iThisCur
, 
addrUniqueOk
,

1560 
ªgIdx
, 
pIdx
->
nKeyCﬁ
); 
	`VdbeCovîage
(
v
);

1563 
ªgR
 = (
pIdx
==
pPk
Ë? 
ªgIdx
 : 
	`sqlôe3GëTempR™ge
(
pP¨£
, 
nPkFõld
);

1564 if–
isUpd©e
 || 
⁄Eº‹
==
OE_Rïœ˚
 ){

1565 if–
	`HasRowid
(
pTab
) ){

1566 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IdxRowid
, 
iThisCur
, 
ªgR
);

1569 if–
isUpd©e
 ){

1570 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Eq
, 
ªgR
, 
addrUniqueOk
, 
ªgOldD©a
);

1571 
	`sqlôe3VdbeCh™geP5
(
v
, 
SQLITE_NOTNULL
);

1572 
	`VdbeCovîage
(
v
);

1575 
x
;

1578 if–
pIdx
!=
pPk
 ){

1579 
i
=0; i<
pPk
->
nKeyCﬁ
; i++){

1580 
	`as£π
–
pPk
->
aiCﬁumn
[
i
]>=0 );

1581 
x
 = 
	`sqlôe3CﬁumnOfIndex
(
pIdx
, 
pPk
->
aiCﬁumn
[
i
]);

1582 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
iThisCur
, 
x
, 
ªgR
+
i
);

1583 
	`VdbeCommít
((
v
, "%s.%s", 
pTab
->
zName
,

1584 
pTab
->
aCﬁ
[
pPk
->
aiCﬁumn
[
i
]].
zName
));

1587 if–
isUpd©e
 ){

1595 
addrJump
 = 
	`sqlôe3VdbeCuºítAddr
(
v
)+
pPk
->
nKeyCﬁ
;

1596 
›
 = 
OP_Ne
;

1597 
ªgCmp
 = (
	`IsPrim¨yKeyIndex
(
pIdx
Ë? 
ªgIdx
 : 
ªgR
);

1599 
i
=0; i<
pPk
->
nKeyCﬁ
; i++){

1600 *
p4
 = (*)
	`sqlôe3LoˇãCﬁlSeq
(
pP¨£
, 
pPk
->
azCﬁl
[
i
]);

1601 
x
 = 
pPk
->
aiCﬁumn
[
i
];

1602 
	`as£π
–
x
>=0 );

1603 if–
i
==(
pPk
->
nKeyCﬁ
-1) ){

1604 
addrJump
 = 
addrUniqueOk
;

1605 
›
 = 
OP_Eq
;

1607 
	`sqlôe3VdbeAddOp4
(
v
, 
›
,

1608 
ªgOldD©a
+1+
x
, 
addrJump
, 
ªgCmp
+
i
, 
p4
, 
P4_COLLSEQ


1610 
	`sqlôe3VdbeCh™geP5
(
v
, 
SQLITE_NOTNULL
);

1611 
	`VdbeCovîageIf
(
v
, 
›
==
OP_Eq
);

1612 
	`VdbeCovîageIf
(
v
, 
›
==
OP_Ne
);

1619 
	`as£π
–
⁄Eº‹
==
OE_Rﬁlback
 || onEº‹==
OE_Ab‹t
 || onEº‹==
OE_Faû


1620 || 
⁄Eº‹
==
OE_Ign‹e
 || onEº‹==
OE_Rïœ˚
 );

1621  
⁄Eº‹
 ){

1622 
OE_Rﬁlback
:

1623 
OE_Ab‹t
:

1624 
OE_Faû
: {

1625 
	`sqlôe3UniqueC⁄°øöt
(
pP¨£
, 
⁄Eº‹
, 
pIdx
);

1628 
OE_Ign‹e
: {

1629 
	`sqlôe3VdbeGŸo
(
v
, 
ign‹eDe°
);

1633 
Triggî
 *
pTriggî
 = 0;

1634 
	`as£π
–
⁄Eº‹
==
OE_Rïœ˚
 );

1635 
	`sqlôe3Mu…iWrôe
(
pP¨£
);

1636 if–
db
->
Êags
&
SQLITE_RecTriggîs
 ){

1637 
pTriggî
 = 
	`sqlôe3TriggîsExi°
(
pP¨£
, 
pTab
, 
TK_DELETE
, 0, 0);

1639 
	`sqlôe3Gíî©eRowDñëe
(
pP¨£
, 
pTab
, 
pTriggî
, 
iD©aCur
, 
iIdxCur
,

1640 
ªgR
, 
nPkFõld
, 0, 
OE_Rïœ˚
,

1641 (
pIdx
==
pPk
 ? 
ONEPASS_SINGLE
 : 
ONEPASS_OFF
), -1);

1642 
£íRïœ˚
 = 1;

1646 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
addrUniqueOk
);

1647 if–
ªgR
!=
ªgIdx
 ) 
	`sqlôe3Rñó£TempR™ge
(
pP¨£
,ÑegR, 
nPkFõld
);

1649 if–
ùkT›
 ){

1650 
	`sqlôe3VdbeGŸo
(
v
, 
ùkT›
+1);

1651 
	`sqlôe3VdbeJumpHîe
(
v
, 
ùkBŸtom
);

1654 *
pbMayRïœ˚
 = 
£íRïœ˚
;

1655 
	`VdbeModuÀCommít
((
v
, "END: GíCn°Cks(%d)", 
£íRïœ˚
));

1656 
	}
}

1667 
	$sqlôe3Com∂ëeIn£πi⁄
(

1668 
P¨£
 *
pP¨£
,

1669 
TabÀ
 *
pTab
,

1670 
iD©aCur
,

1671 
iIdxCur
,

1672 
ªgNewD©a
,

1673 *
aRegIdx
,

1674 
isUpd©e
,

1675 
≠≥ndBüs
,

1676 
u£SìkResu…


1678 
Vdbe
 *
v
;

1679 
Index
 *
pIdx
;

1680 
u8
 
pik_Êags
;

1681 
ªgD©a
;

1682 
ªgRec
;

1683 
i
;

1684 
u8
 
bAfföôyD⁄e
 = 0;

1686 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

1687 
	`as£π
–
v
!=0 );

1688 
	`as£π
–
pTab
->
pSñe˘
==0 );

1689 
i
=0, 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
, i++){

1690 if–
aRegIdx
[
i
]==0 ) ;

1691 
bAfföôyD⁄e
 = 1;

1692 if–
pIdx
->
pP¨tIdxWhîe
 ){

1693 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IsNuŒ
, 
aRegIdx
[
i
], 
	`sqlôe3VdbeCuºítAddr
(v)+2);

1694 
	`VdbeCovîage
(
v
);

1696 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_IdxIn£π
, 
iIdxCur
+
i
, 
aRegIdx
[i],

1697 
aRegIdx
[
i
]+1,

1698 
pIdx
->
uniqNŸNuŒ
 ?ÖIdx->
nKeyCﬁ
:ÖIdx->
nCﬁumn
);

1699 
pik_Êags
 = 0;

1700 if–
u£SìkResu…
 ) 
pik_Êags
 = 
OPFLAG_USESEEKRESULT
;

1701 if–
	`IsPrim¨yKeyIndex
(
pIdx
Ë&& !
	`HasRowid
(
pTab
) ){

1702 
	`as£π
–
pP¨£
->
√°ed
==0 );

1703 
pik_Êags
 |
OPFLAG_NCHANGE
;

1705 
	`sqlôe3VdbeCh™geP5
(
v
, 
pik_Êags
);

1707 if–!
	`HasRowid
(
pTab
) ) ;

1708 
ªgD©a
 = 
ªgNewD©a
 + 1;

1709 
ªgRec
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

1710 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MakeRec‹d
, 
ªgD©a
, 
pTab
->
nCﬁ
, 
ªgRec
);

1711 if–!
bAfföôyD⁄e
 ){

1712 
	`sqlôe3TabÀAfföôy
(
v
, 
pTab
, 0);

1713 
	`sqlôe3Ex¥CacheAfföôyCh™ge
(
pP¨£
, 
ªgD©a
, 
pTab
->
nCﬁ
);

1715 if–
pP¨£
->
√°ed
 ){

1716 
pik_Êags
 = 0;

1718 
pik_Êags
 = 
OPFLAG_NCHANGE
;

1719 
pik_Êags
 |(
isUpd©e
?
OPFLAG_ISUPDATE
:
OPFLAG_LASTROWID
);

1721 if–
≠≥ndBüs
 ){

1722 
pik_Êags
 |
OPFLAG_APPEND
;

1724 if–
u£SìkResu…
 ){

1725 
pik_Êags
 |
OPFLAG_USESEEKRESULT
;

1727 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_In£π
, 
iD©aCur
, 
ªgRec
, 
ªgNewD©a
);

1728 if–!
pP¨£
->
√°ed
 ){

1729 
	`sqlôe3VdbeAµídP4
(
v
, 
pTab
, 
P4_TABLE
);

1731 
	`sqlôe3VdbeCh™geP5
(
v
, 
pik_Êags
);

1732 
	}
}

1755 
	$sqlôe3O≥nTabÀAndIndi˚s
(

1756 
P¨£
 *
pP¨£
,

1757 
TabÀ
 *
pTab
,

1758 
›
,

1759 
u8
 
p5
,

1760 
iBa£
,

1761 
u8
 *
aToO≥n
,

1762 *
piD©aCur
,

1763 *
piIdxCur


1765 
i
;

1766 
iDb
;

1767 
iD©aCur
;

1768 
Index
 *
pIdx
;

1769 
Vdbe
 *
v
;

1771 
	`as£π
–
›
==
OP_O≥nRód
 || op==
OP_O≥nWrôe
 );

1772 
	`as£π
–
›
==
OP_O≥nWrôe
 || 
p5
==0 );

1773 if–
	`IsVútuÆ
(
pTab
) ){

1779 
iDb
 = 
	`sqlôe3SchemaToIndex
(
pP¨£
->
db
, 
pTab
->
pSchema
);

1780 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

1781 
	`as£π
–
v
!=0 );

1782 if–
iBa£
<0 ) iBa£ = 
pP¨£
->
nTab
;

1783 
iD©aCur
 = 
iBa£
++;

1784 if–
piD©aCur
 ) *piD©aCu∏
iD©aCur
;

1785 if–
	`HasRowid
(
pTab
Ë&& (
aToO≥n
==0 ||áToOpen[0]) ){

1786 
	`sqlôe3O≥nTabÀ
(
pP¨£
, 
iD©aCur
, 
iDb
, 
pTab
, 
›
);

1788 
	`sqlôe3TabÀLock
(
pP¨£
, 
iDb
, 
pTab
->
äum
, 
›
==
OP_O≥nWrôe
,ÖTab->
zName
);

1790 if–
piIdxCur
 ) *piIdxCu∏
iBa£
;

1791 
i
=0, 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
, i++){

1792 
iIdxCur
 = 
iBa£
++;

1793 
	`as£π
–
pIdx
->
pSchema
==
pTab
->pSchema );

1794 if–
	`IsPrim¨yKeyIndex
(
pIdx
Ë&& !
	`HasRowid
(
pTab
) ){

1795 if–
piD©aCur
 ) *piD©aCu∏
iIdxCur
;

1796 
p5
 = 0;

1798 if–
aToO≥n
==0 ||áToO≥n[
i
+1] ){

1799 
	`sqlôe3VdbeAddOp3
(
v
, 
›
, 
iIdxCur
, 
pIdx
->
äum
, 
iDb
);

1800 
	`sqlôe3VdbeSëP4KeyInfo
(
pP¨£
, 
pIdx
);

1801 
	`sqlôe3VdbeCh™geP5
(
v
, 
p5
);

1802 
	`VdbeCommít
((
v
, "%s", 
pIdx
->
zName
));

1805 if–
iBa£
>
pP¨£
->
nTab
 )ÖParse->nTab = iBase;

1806  
i
;

1807 
	}
}

1810 #ifde‡
SQLITE_TEST


1817 
	gsqlôe3_x„r›t_cou¡
;

1821 #i‚de‡
SQLITE_OMIT_XFER_OPT


1833 
	$x„rCom∑tibÀIndex
(
Index
 *
pDe°
, Index *
pSrc
){

1834 
i
;

1835 
	`as£π
–
pDe°
 && 
pSrc
 );

1836 
	`as£π
–
pDe°
->
pTabÀ
!=
pSrc
->pTable );

1837 if–
pDe°
->
nKeyCﬁ
!=
pSrc
->nKeyCol ){

1840 if–
pDe°
->
⁄Eº‹
!=
pSrc
->onError ){

1843 
i
=0; i<
pSrc
->
nKeyCﬁ
; i++){

1844 if–
pSrc
->
aiCﬁumn
[
i
]!=
pDe°
->aiColumn[i] ){

1847 if–
pSrc
->
aiCﬁumn
[
i
]==
XN_EXPR
 ){

1848 
	`as£π
–
pSrc
->
aCﬁEx¥
!=0 && 
pDe°
->aColExpr!=0 );

1849 if–
	`sqlôe3Ex¥Com∑ª
(
pSrc
->
aCﬁEx¥
->
a
[
i
].
pEx¥
,

1850 
pDe°
->
aCﬁEx¥
->
a
[
i
].
pEx¥
, -1)!=0 ){

1854 if–
pSrc
->
aS‹tOrdî
[
i
]!=
pDe°
->aSortOrder[i] ){

1857 if–
	`sqlôe3_°ricmp
(
pSrc
->
azCﬁl
[
i
],
pDe°
->azColl[i])!=0 ){

1861 if–
	`sqlôe3Ex¥Com∑ª
(
pSrc
->
pP¨tIdxWhîe
, 
pDe°
->pPartIdxWhere, -1) ){

1867 
	}
}

1894 
	$x„rO±imiz©i⁄
(

1895 
P¨£
 *
pP¨£
,

1896 
TabÀ
 *
pDe°
,

1897 
Sñe˘
 *
pSñe˘
,

1898 
⁄Eº‹
,

1899 
iDbDe°


1901 
sqlôe3
 *
db
 = 
pP¨£
->db;

1902 
Ex¥Li°
 *
pELi°
;

1903 
TabÀ
 *
pSrc
;

1904 
Index
 *
pSrcIdx
, *
pDe°Idx
;

1905 
SrcLi°_ôem
 *
pIãm
;

1906 
i
;

1907 
iDbSrc
;

1908 
iSrc
, 
iDe°
;

1909 
addr1
, 
addr2
;

1910 
em±yDe°Te°
 = 0;

1911 
em±ySrcTe°
 = 0;

1912 
Vdbe
 *
v
;

1913 
ªgAutoöc
;

1914 
de°HasUniqueIdx
 = 0;

1915 
ªgD©a
, 
ªgRowid
;

1917 if–
pSñe˘
==0 ){

1920 if–
pP¨£
->
pWôh
 || 
pSñe˘
->pWith ){

1926 if–
	`sqlôe3TriggîLi°
(
pP¨£
, 
pDe°
) ){

1929 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


1930 if–
pDe°
->
èbFœgs
 & 
TF_VútuÆ
 ){

1934 if–
⁄Eº‹
==
OE_DeÁu…
 ){

1935 if–
pDe°
->
iPKey
>=0 ) 
⁄Eº‹
 =ÖDe°->
keyC⁄f
;

1936 if–
⁄Eº‹
==
OE_DeÁu…
 ) onEº‹ = 
OE_Ab‹t
;

1938 
	`as£π
(
pSñe˘
->
pSrc
);

1939 if–
pSñe˘
->
pSrc
->
nSrc
!=1 ){

1942 if–
pSñe˘
->
pSrc
->
a
[0].pSelect ){

1945 if–
pSñe˘
->
pWhîe
 ){

1948 if–
pSñe˘
->
pOrdîBy
 ){

1953 if–
pSñe˘
->
pGroupBy
 ){

1956 if–
pSñe˘
->
pLimô
 ){

1959 
	`as£π
–
pSñe˘
->
pOff£t
==0 );

1960 if–
pSñe˘
->
pPri‹
 ){

1963 if–
pSñe˘
->
£lFœgs
 & 
SF_Di°ö˘
 ){

1966 
pELi°
 = 
pSñe˘
->pEList;

1967 
	`as£π
–
pELi°
!=0 );

1968 if–
pELi°
->
nEx¥
!=1 ){

1971 
	`as£π
–
pELi°
->
a
[0].
pEx¥
 );

1972 if–
pELi°
->
a
[0].
pEx¥
->
›
!=
TK_ASTERISK
 ){

1980 
pIãm
 = 
pSñe˘
->
pSrc
->
a
;

1981 
pSrc
 = 
	`sqlôe3LoˇãTabÀIãm
(
pP¨£
, 0, 
pIãm
);

1982 if–
pSrc
==0 ){

1985 if–
pSrc
==
pDe°
 ){

1988 if–
	`HasRowid
(
pDe°
)!=HasRowid(
pSrc
) ){

1991 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


1992 if–
pSrc
->
èbFœgs
 & 
TF_VútuÆ
 ){

1996 if–
pSrc
->
pSñe˘
 ){

1999 if–
pDe°
->
nCﬁ
!=
pSrc
->nCol ){

2002 if–
pDe°
->
iPKey
!=
pSrc
->iPKey ){

2005 
i
=0; i<
pDe°
->
nCﬁ
; i++){

2006 
Cﬁumn
 *
pDe°Cﬁ
 = &
pDe°
->
aCﬁ
[
i
];

2007 
Cﬁumn
 *
pSrcCﬁ
 = &
pSrc
->
aCﬁ
[
i
];

2008 #ifde‡
SQLITE_ENABLE_HIDDEN_COLUMNS


2009 if–(
db
->
Êags
 & 
SQLITE_Vacuum
)==0

2010 && (
pDe°Cﬁ
->
cﬁFœgs
 | 
pSrcCﬁ
->cﬁFœgsË& 
COLFLAG_HIDDEN


2015 if–
pDe°Cﬁ
->
afföôy
!=
pSrcCﬁ
->affinity ){

2018 if–
	`sqlôe3_°ricmp
(
pDe°Cﬁ
->
zCﬁl
, 
pSrcCﬁ
->zColl)!=0 ){

2021 if–
pDe°Cﬁ
->
nŸNuŒ
 && !
pSrcCﬁ
->notNull ){

2025 if–
i
>0 ){

2026 
	`as£π
–
pDe°Cﬁ
->
pDÊt
==0 ||ÖDe°Cﬁ->pDÊt->
›
==
TK_SPAN
 );

2027 
	`as£π
–
pSrcCﬁ
->
pDÊt
==0 ||ÖSrcCﬁ->pDÊt->
›
==
TK_SPAN
 );

2028 if–(
pDe°Cﬁ
->
pDÊt
==0)!=(
pSrcCﬁ
->pDflt==0)

2029 || (
pDe°Cﬁ
->
pDÊt
 && 
	`°rcmp
’De°Cﬁ->pDÊt->
u
.
zTokí
,

2030 
pSrcCﬁ
->
pDÊt
->
u
.
zTokí
)!=0)

2036 
pDe°Idx
=
pDe°
->
pIndex
;ÖDe°Idx;ÖDe°IdxıDe°Idx->
pNext
){

2037 if–
	`IsUniqueIndex
(
pDe°Idx
) ){

2038 
de°HasUniqueIdx
 = 1;

2040 
pSrcIdx
=
pSrc
->
pIndex
;ÖSrcIdx;ÖSrcIdxıSrcIdx->
pNext
){

2041 if–
	`x„rCom∑tibÀIndex
(
pDe°Idx
, 
pSrcIdx
) ) ;

2043 if–
pSrcIdx
==0 ){

2047 #i‚de‡
SQLITE_OMIT_CHECK


2048 if–
pDe°
->
pCheck
 && 
	`sqlôe3Ex¥Li°Com∑ª
(
pSrc
->pCheck,pDest->pCheck,-1) ){

2052 #i‚de‡
SQLITE_OMIT_FOREIGN_KEY


2060 if–(
db
->
Êags
 & 
SQLITE_F‹eignKeys
)!=0 && 
pDe°
->
pFKey
!=0 ){

2064 if–(
db
->
Êags
 & 
SQLITE_Cou¡Rows
)!=0 ){

2072 #ifde‡
SQLITE_TEST


2073 
sqlôe3_x„r›t_cou¡
++;

2075 
iDbSrc
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pSrc
->
pSchema
);

2076 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

2077 
	`sqlôe3CodeVîifySchema
(
pP¨£
, 
iDbSrc
);

2078 
iSrc
 = 
pP¨£
->
nTab
++;

2079 
iDe°
 = 
pP¨£
->
nTab
++;

2080 
ªgAutoöc
 = 
	`autoIncBegö
(
pP¨£
, 
iDbDe°
, 
pDe°
);

2081 
ªgD©a
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

2082 
ªgRowid
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

2083 
	`sqlôe3O≥nTabÀ
(
pP¨£
, 
iDe°
, 
iDbDe°
, 
pDe°
, 
OP_O≥nWrôe
);

2084 
	`as£π
–
	`HasRowid
(
pDe°
Ë|| 
de°HasUniqueIdx
 );

2085 if–(
db
->
Êags
 & 
SQLITE_Vacuum
)==0 && (

2086 (
pDe°
->
iPKey
<0 &&ÖDe°->
pIndex
!=0)

2087 || 
de°HasUniqueIdx


2088 || (
⁄Eº‹
!=
OE_Ab‹t
 && onEº‹!=
OE_Rﬁlback
)

2107 
addr1
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rewöd
, 
iDe°
, 0); 
	`VdbeCovîage
(v);

2108 
em±yDe°Te°
 = 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_GŸo
);

2109 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr1
);

2111 if–
	`HasRowid
(
pSrc
) ){

2112 
u8
 
ösFœgs
;

2113 
	`sqlôe3O≥nTabÀ
(
pP¨£
, 
iSrc
, 
iDbSrc
, 
pSrc
, 
OP_O≥nRód
);

2114 
em±ySrcTe°
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rewöd
, 
iSrc
, 0); 
	`VdbeCovîage
(v);

2115 if–
pDe°
->
iPKey
>=0 ){

2116 
addr1
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rowid
, 
iSrc
, 
ªgRowid
);

2117 
addr2
 = 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_NŸExi°s
, 
iDe°
, 0, 
ªgRowid
);

2118 
	`VdbeCovîage
(
v
);

2119 
	`sqlôe3RowidC⁄°øöt
(
pP¨£
, 
⁄Eº‹
, 
pDe°
);

2120 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr2
);

2121 
	`autoIncSãp
(
pP¨£
, 
ªgAutoöc
, 
ªgRowid
);

2122 }if–
pDe°
->
pIndex
==0 ){

2123 
addr1
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NewRowid
, 
iDe°
, 
ªgRowid
);

2125 
addr1
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rowid
, 
iSrc
, 
ªgRowid
);

2126 
	`as£π
–(
pDe°
->
èbFœgs
 & 
TF_Autoö¸emít
)==0 );

2128 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_RowD©a
, 
iSrc
, 
ªgD©a
);

2129 if–
db
->
Êags
 & 
SQLITE_Vacuum
 ){

2130 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_La°
, 
iDe°
, 0, -1);

2131 
ösFœgs
 = 
OPFLAG_NCHANGE
|
OPFLAG_LASTROWID
|

2132 
OPFLAG_APPEND
|
OPFLAG_USESEEKRESULT
;

2134 
ösFœgs
 = 
OPFLAG_NCHANGE
|
OPFLAG_LASTROWID
|
OPFLAG_APPEND
;

2136 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_In£π
, 
iDe°
, 
ªgD©a
, 
ªgRowid
,

2137 (*)
pDe°
, 
P4_TABLE
);

2138 
	`sqlôe3VdbeCh™geP5
(
v
, 
ösFœgs
);

2139 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Next
, 
iSrc
, 
addr1
); 
	`VdbeCovîage
(v);

2140 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Clo£
, 
iSrc
, 0);

2141 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Clo£
, 
iDe°
, 0);

2143 
	`sqlôe3TabÀLock
(
pP¨£
, 
iDbDe°
, 
pDe°
->
äum
, 1,ÖDe°->
zName
);

2144 
	`sqlôe3TabÀLock
(
pP¨£
, 
iDbSrc
, 
pSrc
->
äum
, 0,ÖSrc->
zName
);

2146 
pDe°Idx
=
pDe°
->
pIndex
;ÖDe°Idx;ÖDe°IdxıDe°Idx->
pNext
){

2147 
u8
 
idxInsFœgs
 = 0;

2148 
pSrcIdx
=
pSrc
->
pIndex
; 
	`ALWAYS
’SrcIdx);ÖSrcIdxıSrcIdx->
pNext
){

2149 if–
	`x„rCom∑tibÀIndex
(
pDe°Idx
, 
pSrcIdx
) ) ;

2151 
	`as£π
–
pSrcIdx
 );

2152 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_O≥nRód
, 
iSrc
, 
pSrcIdx
->
äum
, 
iDbSrc
);

2153 
	`sqlôe3VdbeSëP4KeyInfo
(
pP¨£
, 
pSrcIdx
);

2154 
	`VdbeCommít
((
v
, "%s", 
pSrcIdx
->
zName
));

2155 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_O≥nWrôe
, 
iDe°
, 
pDe°Idx
->
äum
, 
iDbDe°
);

2156 
	`sqlôe3VdbeSëP4KeyInfo
(
pP¨£
, 
pDe°Idx
);

2157 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_BULKCSR
);

2158 
	`VdbeCommít
((
v
, "%s", 
pDe°Idx
->
zName
));

2159 
addr1
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rewöd
, 
iSrc
, 0); 
	`VdbeCovîage
(v);

2160 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_RowD©a
, 
iSrc
, 
ªgD©a
);

2161 if–
db
->
Êags
 & 
SQLITE_Vacuum
 ){

2176 
i
=0; i<
pSrcIdx
->
nCﬁumn
; i++){

2177 c⁄° *
zCﬁl
 = 
pSrcIdx
->
azCﬁl
[
i
];

2178 
	`as£π
–
	`sqlôe3_°ricmp
(
sqlôe3SåBINARY
, 
zCﬁl
)!=0

2179 || 
sqlôe3SåBINARY
==
zCﬁl
 );

2180 if–
	`sqlôe3_°ricmp
(
sqlôe3SåBINARY
, 
zCﬁl
) ) ;

2182 if–
i
==
pSrcIdx
->
nCﬁumn
 ){

2183 
idxInsFœgs
 = 
OPFLAG_USESEEKRESULT
;

2184 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_La°
, 
iDe°
, 0, -1);

2187 if–!
	`HasRowid
(
pSrc
Ë&& 
pDe°Idx
->
idxTy≥
==2 ){

2188 
idxInsFœgs
 |
OPFLAG_NCHANGE
;

2190 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IdxIn£π
, 
iDe°
, 
ªgD©a
);

2191 
	`sqlôe3VdbeCh™geP5
(
v
, 
idxInsFœgs
|
OPFLAG_APPEND
);

2192 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Next
, 
iSrc
, 
addr1
+1); 
	`VdbeCovîage
(v);

2193 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr1
);

2194 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Clo£
, 
iSrc
, 0);

2195 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Clo£
, 
iDe°
, 0);

2197 if–
em±ySrcTe°
 ) 
	`sqlôe3VdbeJumpHîe
(
v
,ÉmptySrcTest);

2198 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgRowid
);

2199 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgD©a
);

2200 if–
em±yDe°Te°
 ){

2201 
	`sqlôe3Autoö¸emítEnd
(
pP¨£
);

2202 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_HÆt
, 
SQLITE_OK
, 0);

2203 
	`sqlôe3VdbeJumpHîe
(
v
, 
em±yDe°Te°
);

2204 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Clo£
, 
iDe°
, 0);

2209 
	}
}

	@legacy.c

18 
	~"sqlôeI¡.h
"

30 
	$sqlôe3_exec
(

31 
sqlôe3
 *
db
,

32 c⁄° *
zSql
,

33 
sqlôe3_ˇŒback
 
xCÆlback
,

34 *
pArg
,

35 **
pzEºMsg


37 
rc
 = 
SQLITE_OK
;

38 c⁄° *
zLe·ovî
;

39 
sqlôe3_°mt
 *
pStmt
 = 0;

40 **
azCﬁs
 = 0;

41 
ˇŒbackIsInô
;

43 if–!
	`sqlôe3Sa„tyCheckOk
(
db
ËË 
SQLITE_MISUSE_BKPT
;

44 if–
zSql
==0 ) zSql = "";

46 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

47 
	`sqlôe3Eº‹
(
db
, 
SQLITE_OK
);

48  
rc
==
SQLITE_OK
 && 
zSql
[0] ){

49 
nCﬁ
;

50 **
azVÆs
 = 0;

52 
pStmt
 = 0;

53 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
db
, 
zSql
, -1, &
pStmt
, &
zLe·ovî
);

54 
	`as£π
–
rc
==
SQLITE_OK
 || 
pStmt
==0 );

55 if–
rc
!=
SQLITE_OK
 ){

58 if–!
pStmt
 ){

60 
zSql
 = 
zLe·ovî
;

64 
ˇŒbackIsInô
 = 0;

65 
nCﬁ
 = 
	`sqlôe3_cﬁumn_cou¡
(
pStmt
);

68 
i
;

69 
rc
 = 
	`sqlôe3_°ï
(
pStmt
);

72 if–
xCÆlback
 && (
SQLITE_ROW
==
rc
 ||

73 (
SQLITE_DONE
==
rc
 && !
ˇŒbackIsInô


74 && 
db
->
Êags
&
SQLITE_NuŒCÆlback
)) ){

75 if–!
ˇŒbackIsInô
 ){

76 
azCﬁs
 = 
	`sqlôe3DbMÆlocZîo
(
db
, 2*
nCﬁ
*(const *) + 1);

77 if–
azCﬁs
==0 ){

78 
exec_out
;

80 
i
=0; i<
nCﬁ
; i++){

81 
azCﬁs
[
i
] = (*)
	`sqlôe3_cﬁumn_«me
(
pStmt
, i);

84 
	`as£π
–
azCﬁs
[
i
]!=0 );

86 
ˇŒbackIsInô
 = 1;

88 if–
rc
==
SQLITE_ROW
 ){

89 
azVÆs
 = &
azCﬁs
[
nCﬁ
];

90 
i
=0; i<
nCﬁ
; i++){

91 
azVÆs
[
i
] = (*)
	`sqlôe3_cﬁumn_ãxt
(
pStmt
, i);

92 if–!
azVÆs
[
i
] && 
	`sqlôe3_cﬁumn_ty≥
(
pStmt
, i)!=
SQLITE_NULL
 ){

93 
	`sqlôe3OomFau…
(
db
);

94 
exec_out
;

98 if–
	`xCÆlback
(
pArg
, 
nCﬁ
, 
azVÆs
, 
azCﬁs
) ){

102 
rc
 = 
SQLITE_ABORT
;

103 
	`sqlôe3VdbeFöÆize
((
Vdbe
 *)
pStmt
);

104 
pStmt
 = 0;

105 
	`sqlôe3Eº‹
(
db
, 
SQLITE_ABORT
);

106 
exec_out
;

110 if–
rc
!=
SQLITE_ROW
 ){

111 
rc
 = 
	`sqlôe3VdbeFöÆize
((
Vdbe
 *)
pStmt
);

112 
pStmt
 = 0;

113 
zSql
 = 
zLe·ovî
;

114  
	`sqlôe3Is•a˚
(
zSql
[0]) ) zSql++;

119 
	`sqlôe3DbFªe
(
db
, 
azCﬁs
);

120 
azCﬁs
 = 0;

123 
exec_out
:

124 if–
pStmt
 ) 
	`sqlôe3VdbeFöÆize
((
Vdbe
 *)pStmt);

125 
	`sqlôe3DbFªe
(
db
, 
azCﬁs
);

127 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

128 if–
rc
!=
SQLITE_OK
 && 
pzEºMsg
 ){

129 
nEºMsg
 = 1 + 
	`sqlôe3SåÀn30
(
	`sqlôe3_îrmsg
(
db
));

130 *
pzEºMsg
 = 
	`sqlôe3MÆloc
(
nEºMsg
);

131 if–*
pzEºMsg
 ){

132 
	`mem˝y
(*
pzEºMsg
, 
	`sqlôe3_îrmsg
(
db
), 
nEºMsg
);

134 
rc
 = 
SQLITE_NOMEM_BKPT
;

135 
	`sqlôe3Eº‹
(
db
, 
SQLITE_NOMEM
);

137 }if–
pzEºMsg
 ){

138 *
pzEºMsg
 = 0;

141 
	`as£π
–(
rc
&
db
->
îrMask
)==rc );

142 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

143  
rc
;

144 
	}
}

	@list.h

1 #i‚de‡
_LINUX_LIST_H


2 
	#_LINUX_LIST_H


	)

15 
	sli°_hód
 {

16 
li°_hód
 *
	m√xt
, *
	m¥ev
;

19 
	#LIST_HEAD_INIT
(
«me
Ë{ &“ame), &“ameË}

	)

21 
	#LIST_HEAD
(
«me
) \

22 
li°_hód
 
«me
 = 
	`LIST_HEAD_INIT
“ame)

	)

24 
	#INIT_LIST_HEAD
(
±r
) do { \

25 (
±r
)->
√xt
 = (±r); (±r)->
¥ev
 = (ptr); \

26 } 0)

	)

34 
__ölöe__
 
	$__li°_add
(
li°_hód
 * 
√w
,

35 
li°_hód
 * 
¥ev
,

36 
li°_hód
 * 
√xt
)

38 
√xt
->
¥ev
 = 
√w
;

39 
√w
->
√xt
 =Çext;

40 
√w
->
¥ev
 =Örev;

41 
¥ev
->
√xt
 = 
√w
;

42 
	}
}

52 
__ölöe__
 
	$li°_add
(
li°_hód
 *
√w
, li°_hód *
hód
)

54 
	`__li°_add
(
√w
, 
hód
, hód->
√xt
);

55 
	}
}

65 
__ölöe__
 
	$li°_add_èû
(
li°_hód
 *
√w
, li°_hód *
hód
)

67 
	`__li°_add
(
√w
, 
hód
->
¥ev
, head);

68 
	}
}

77 
__ölöe__
 
	$__li°_dñ
(
li°_hód
 * 
¥ev
,

78 
li°_hód
 * 
√xt
)

80 
√xt
->
¥ev
 =Örev;

81 
¥ev
->
√xt
 =Çext;

82 
	}
}

89 
__ölöe__
 
	$li°_dñ
(
li°_hód
 *
íåy
)

91 
	`__li°_dñ
(
íåy
->
¥ev
,É¡ry->
√xt
);

92 
	}
}

98 
__ölöe__
 
	$li°_dñ_öô
(
li°_hód
 *
íåy
)

100 
	`__li°_dñ
(
íåy
->
¥ev
,É¡ry->
√xt
);

101 
	`INIT_LIST_HEAD
(
íåy
);

102 
	}
}

108 
__ölöe__
 
	$li°_em±y
(
li°_hód
 *
hód
)

110  
hód
->
√xt
 == head;

111 
	}
}

118 
__ölöe__
 
	$li°_•li˚
(
li°_hód
 *
li°
, li°_hód *
hód
)

120 
li°_hód
 *
fú°
 = 
li°
->
√xt
;

122 i‡(
fú°
 !
li°
) {

123 
li°_hód
 *
œ°
 = 
li°
->
¥ev
;

124 
li°_hód
 *
©
 = 
hód
->
√xt
;

126 
fú°
->
¥ev
 = 
hód
;

127 
hód
->
√xt
 = 
fú°
;

129 
œ°
->
√xt
 = 
©
;

130 
©
->
¥ev
 = 
œ°
;

132 
	}
}

140 
	#li°_íåy
(
±r
, 
ty≥
, 
membî
) \

141 ((
ty≥
 *)((*)(
±r
)-()(&(—y≥ *)0)->
membî
)))

	)

148 
	#li°_f‹_óch
(
pos
, 
hód
) \

149 
pos
 = (
hód
)->
√xt
;Öos != (head); \

150 
pos
 =Öos->
√xt
)

	)

158 
	#li°_f‹_óch_ß„
(
pos
, 
n
, 
hód
) \

159 
pos
 = (
hód
)->
√xt
, 
n
 =Öos->next;Öos != (head); \

160 
pos
 = 
n
,Ç =Öos->
√xt
)

	)

167 
	#li°_f‹_óch_¥ev
(
pos
, 
hód
) \

168 
pos
 = (
hód
)->
¥ev
;Öos != (head); \

169 
pos
 =Öos->
¥ev
)

	)

177 
	#li°_f‹_óch_¥ev_ß„
(
pos
, 
n
, 
hód
) \

178 
pos
 = (
hód
)->
¥ev
, 
n
 =Öos->prev;Öos != (head); \

179 
pos
 = 
n
,Ç =Öos->
¥ev
)

	)

	@loadext.c

16 #i‚de‡
SQLITE_CORE


17 
	#SQLITE_CORE
 1

	)

19 
	~"sqlôe3ext.h
"

20 
	~"sqlôeI¡.h
"

21 
	~<°rög.h
>

23 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


29 #i‚de‡
SQLITE_ENABLE_COLUMN_METADATA


30 
	#sqlôe3_cﬁumn_d©aba£_«me
 0

	)

31 
	#sqlôe3_cﬁumn_d©aba£_«me16
 0

	)

32 
	#sqlôe3_cﬁumn_èbÀ_«me
 0

	)

33 
	#sqlôe3_cﬁumn_èbÀ_«me16
 0

	)

34 
	#sqlôe3_cﬁumn_‹igö_«me
 0

	)

35 
	#sqlôe3_cﬁumn_‹igö_«me16
 0

	)

38 #ifde‡
SQLITE_OMIT_AUTHORIZATION


39 
	#sqlôe3_£t_auth‹izî
 0

	)

42 #ifde‡
SQLITE_OMIT_UTF16


43 
	#sqlôe3_böd_ãxt16
 0

	)

44 
	#sqlôe3_cﬁœti⁄_√eded16
 0

	)

45 
	#sqlôe3_cﬁumn_de˛ty≥16
 0

	)

46 
	#sqlôe3_cﬁumn_«me16
 0

	)

47 
	#sqlôe3_cﬁumn_ãxt16
 0

	)

48 
	#sqlôe3_com∂ëe16
 0

	)

49 
	#sqlôe3_¸óã_cﬁœti⁄16
 0

	)

50 
	#sqlôe3_¸óã_fun˘i⁄16
 0

	)

51 
	#sqlôe3_îrmsg16
 0

	)

52 
	#sqlôe3_›í16
 0

	)

53 
	#sqlôe3_¥ï¨e16
 0

	)

54 
	#sqlôe3_¥ï¨e16_v2
 0

	)

55 
	#sqlôe3_ªsu…_îr‹16
 0

	)

56 
	#sqlôe3_ªsu…_ãxt16
 0

	)

57 
	#sqlôe3_ªsu…_ãxt16be
 0

	)

58 
	#sqlôe3_ªsu…_ãxt16À
 0

	)

59 
	#sqlôe3_vÆue_ãxt16
 0

	)

60 
	#sqlôe3_vÆue_ãxt16be
 0

	)

61 
	#sqlôe3_vÆue_ãxt16À
 0

	)

62 
	#sqlôe3_cﬁumn_d©aba£_«me16
 0

	)

63 
	#sqlôe3_cﬁumn_èbÀ_«me16
 0

	)

64 
	#sqlôe3_cﬁumn_‹igö_«me16
 0

	)

67 #ifde‡
SQLITE_OMIT_COMPLETE


68 
	#sqlôe3_com∂ëe
 0

	)

69 
	#sqlôe3_com∂ëe16
 0

	)

72 #ifde‡
SQLITE_OMIT_DECLTYPE


73 
	#sqlôe3_cﬁumn_de˛ty≥16
 0

	)

74 
	#sqlôe3_cﬁumn_de˛ty≥
 0

	)

77 #ifde‡
SQLITE_OMIT_PROGRESS_CALLBACK


78 
	#sqlôe3_¥ogªss_h™dÀr
 0

	)

81 #ifde‡
SQLITE_OMIT_VIRTUALTABLE


82 
	#sqlôe3_¸óã_moduÀ
 0

	)

83 
	#sqlôe3_¸óã_moduÀ_v2
 0

	)

84 
	#sqlôe3_de˛¨e_vèb
 0

	)

85 
	#sqlôe3_vèb_c⁄fig
 0

	)

86 
	#sqlôe3_vèb_⁄_c⁄Êi˘
 0

	)

89 #ifde‡
SQLITE_OMIT_SHARED_CACHE


90 
	#sqlôe3_íabÀ_sh¨ed_ˇche
 0

	)

93 #i‡
deföed
(
SQLITE_OMIT_TRACE
Ë|| deföed(
SQLITE_OMIT_DEPRECATED
)

94 
	#sqlôe3_¥ofûe
 0

	)

95 
	#sqlôe3_åa˚
 0

	)

98 #ifde‡
SQLITE_OMIT_GET_TABLE


99 
	#sqlôe3_‰ì_èbÀ
 0

	)

100 
	#sqlôe3_gë_èbÀ
 0

	)

103 #ifde‡
SQLITE_OMIT_INCRBLOB


104 
	#sqlôe3_böd_zîoblob
 0

	)

105 
	#sqlôe3_blob_byãs
 0

	)

106 
	#sqlôe3_blob_˛o£
 0

	)

107 
	#sqlôe3_blob_›í
 0

	)

108 
	#sqlôe3_blob_ªad
 0

	)

109 
	#sqlôe3_blob_wrôe
 0

	)

110 
	#sqlôe3_blob_ª›í
 0

	)

113 #i‡
deföed
(
SQLITE_OMIT_TRACE
)

114 
	#sqlôe3_åa˚_v2
 0

	)

132 c⁄° 
sqlôe3_≠i_routöes
 
	gsqlôe3Apis
 = {

133 
sqlôe3_aggªg©e_c⁄ãxt
,

134 #i‚de‡
SQLITE_OMIT_DEPRECATED


135 
sqlôe3_aggªg©e_cou¡
,

139 
sqlôe3_böd_blob
,

140 
sqlôe3_böd_doubÀ
,

141 
sqlôe3_böd_öt
,

142 
sqlôe3_böd_öt64
,

143 
sqlôe3_böd_nuŒ
,

144 
sqlôe3_böd_∑ømëî_cou¡
,

145 
sqlôe3_böd_∑ømëî_ödex
,

146 
sqlôe3_böd_∑ømëî_«me
,

147 
sqlôe3_böd_ãxt
,

148 
sqlôe3_böd_ãxt16
,

149 
sqlôe3_böd_vÆue
,

150 
sqlôe3_busy_h™dÀr
,

151 
sqlôe3_busy_timeout
,

152 
sqlôe3_ch™ges
,

153 
sqlôe3_˛o£
,

154 
sqlôe3_cﬁœti⁄_√eded
,

155 
sqlôe3_cﬁœti⁄_√eded16
,

156 
sqlôe3_cﬁumn_blob
,

157 
sqlôe3_cﬁumn_byãs
,

158 
sqlôe3_cﬁumn_byãs16
,

159 
sqlôe3_cﬁumn_cou¡
,

160 
sqlôe3_cﬁumn_d©aba£_«me
,

161 
sqlôe3_cﬁumn_d©aba£_«me16
,

162 
sqlôe3_cﬁumn_de˛ty≥
,

163 
sqlôe3_cﬁumn_de˛ty≥16
,

164 
sqlôe3_cﬁumn_doubÀ
,

165 
sqlôe3_cﬁumn_öt
,

166 
sqlôe3_cﬁumn_öt64
,

167 
sqlôe3_cﬁumn_«me
,

168 
sqlôe3_cﬁumn_«me16
,

169 
sqlôe3_cﬁumn_‹igö_«me
,

170 
sqlôe3_cﬁumn_‹igö_«me16
,

171 
sqlôe3_cﬁumn_èbÀ_«me
,

172 
sqlôe3_cﬁumn_èbÀ_«me16
,

173 
sqlôe3_cﬁumn_ãxt
,

174 
sqlôe3_cﬁumn_ãxt16
,

175 
sqlôe3_cﬁumn_ty≥
,

176 
sqlôe3_cﬁumn_vÆue
,

177 
sqlôe3_commô_hook
,

178 
sqlôe3_com∂ëe
,

179 
sqlôe3_com∂ëe16
,

180 
sqlôe3_¸óã_cﬁœti⁄
,

181 
sqlôe3_¸óã_cﬁœti⁄16
,

182 
sqlôe3_¸óã_fun˘i⁄
,

183 
sqlôe3_¸óã_fun˘i⁄16
,

184 
sqlôe3_¸óã_moduÀ
,

185 
sqlôe3_d©a_cou¡
,

186 
sqlôe3_db_h™dÀ
,

187 
sqlôe3_de˛¨e_vèb
,

188 
sqlôe3_íabÀ_sh¨ed_ˇche
,

189 
sqlôe3_îrcode
,

190 
sqlôe3_îrmsg
,

191 
sqlôe3_îrmsg16
,

192 
sqlôe3_exec
,

193 #i‚de‡
SQLITE_OMIT_DEPRECATED


194 
sqlôe3_expúed
,

198 
sqlôe3_föÆize
,

199 
sqlôe3_‰ì
,

200 
sqlôe3_‰ì_èbÀ
,

201 
sqlôe3_gë_autocommô
,

202 
sqlôe3_gë_auxd©a
,

203 
sqlôe3_gë_èbÀ
,

205 
sqlôe3_öãºu±
,

206 
sqlôe3_œ°_ö£π_rowid
,

207 
sqlôe3_libvîsi⁄
,

208 
sqlôe3_libvîsi⁄_numbî
,

209 
sqlôe3_mÆloc
,

210 
sqlôe3_m¥ötf
,

211 
sqlôe3_›í
,

212 
sqlôe3_›í16
,

213 
sqlôe3_¥ï¨e
,

214 
sqlôe3_¥ï¨e16
,

215 
sqlôe3_¥ofûe
,

216 
sqlôe3_¥ogªss_h™dÀr
,

217 
sqlôe3_ªÆloc
,

218 
sqlôe3_ª£t
,

219 
sqlôe3_ªsu…_blob
,

220 
sqlôe3_ªsu…_doubÀ
,

221 
sqlôe3_ªsu…_îr‹
,

222 
sqlôe3_ªsu…_îr‹16
,

223 
sqlôe3_ªsu…_öt
,

224 
sqlôe3_ªsu…_öt64
,

225 
sqlôe3_ªsu…_nuŒ
,

226 
sqlôe3_ªsu…_ãxt
,

227 
sqlôe3_ªsu…_ãxt16
,

228 
sqlôe3_ªsu…_ãxt16be
,

229 
sqlôe3_ªsu…_ãxt16À
,

230 
sqlôe3_ªsu…_vÆue
,

231 
sqlôe3_rﬁlback_hook
,

232 
sqlôe3_£t_auth‹izî
,

233 
sqlôe3_£t_auxd©a
,

234 
sqlôe3_¢¥ötf
,

235 
sqlôe3_°ï
,

236 
sqlôe3_èbÀ_cﬁumn_mëad©a
,

237 #i‚de‡
SQLITE_OMIT_DEPRECATED


238 
sqlôe3_thªad_˛ónup
,

242 
sqlôe3_tŸÆ_ch™ges
,

243 
sqlôe3_åa˚
,

244 #i‚de‡
SQLITE_OMIT_DEPRECATED


245 
sqlôe3_å™s„r_bödögs
,

249 
sqlôe3_upd©e_hook
,

250 
sqlôe3_u£r_d©a
,

251 
sqlôe3_vÆue_blob
,

252 
sqlôe3_vÆue_byãs
,

253 
sqlôe3_vÆue_byãs16
,

254 
sqlôe3_vÆue_doubÀ
,

255 
sqlôe3_vÆue_öt
,

256 
sqlôe3_vÆue_öt64
,

257 
sqlôe3_vÆue_numîic_ty≥
,

258 
sqlôe3_vÆue_ãxt
,

259 
sqlôe3_vÆue_ãxt16
,

260 
sqlôe3_vÆue_ãxt16be
,

261 
sqlôe3_vÆue_ãxt16À
,

262 
sqlôe3_vÆue_ty≥
,

263 
sqlôe3_vm¥ötf
,

272 
sqlôe3_ovîlﬂd_fun˘i⁄
,

277 
sqlôe3_¥ï¨e_v2
,

278 
sqlôe3_¥ï¨e16_v2
,

279 
sqlôe3_˛ór_bödögs
,

284 
sqlôe3_¸óã_moduÀ_v2
,

289 
sqlôe3_böd_zîoblob
,

290 
sqlôe3_blob_byãs
,

291 
sqlôe3_blob_˛o£
,

292 
sqlôe3_blob_›í
,

293 
sqlôe3_blob_ªad
,

294 
sqlôe3_blob_wrôe
,

295 
sqlôe3_¸óã_cﬁœti⁄_v2
,

296 
sqlôe3_fûe_c⁄åﬁ
,

297 
sqlôe3_mem‹y_highw©î
,

298 
sqlôe3_mem‹y_u£d
,

299 #ifde‡
SQLITE_MUTEX_OMIT


306 
sqlôe3_muãx_Æloc
,

307 
sqlôe3_muãx_íãr
,

308 
sqlôe3_muãx_‰ì
,

309 
sqlôe3_muãx_Àave
,

310 
sqlôe3_muãx_åy
,

312 
sqlôe3_›í_v2
,

313 
sqlôe3_ªÀa£_mem‹y
,

314 
sqlôe3_ªsu…_îr‹_nomem
,

315 
sqlôe3_ªsu…_îr‹_toobig
,

316 
sqlôe3_¶ìp
,

317 
sqlôe3_so·_hóp_limô
,

318 
sqlôe3_vfs_föd
,

319 
sqlôe3_vfs_ªgi°î
,

320 
sqlôe3_vfs_uƒegi°î
,

325 
sqlôe3_thªadß„
,

326 
sqlôe3_ªsu…_zîoblob
,

327 
sqlôe3_ªsu…_îr‹_code
,

328 
sqlôe3_ã°_c⁄åﬁ
,

329 
sqlôe3_øndom√ss
,

330 
sqlôe3_c⁄ãxt_db_h™dÀ
,

335 
sqlôe3_exãnded_ªsu…_codes
,

336 
sqlôe3_limô
,

337 
sqlôe3_√xt_°mt
,

338 
sqlôe3_sql
,

339 
sqlôe3_°©us
,

344 
sqlôe3_backup_föish
,

345 
sqlôe3_backup_öô
,

346 
sqlôe3_backup_∑gecou¡
,

347 
sqlôe3_backup_ªmaöög
,

348 
sqlôe3_backup_°ï
,

349 #i‚de‡
SQLITE_OMIT_COMPILEOPTION_DIAGS


350 
sqlôe3_compûe›ti⁄_gë
,

351 
sqlôe3_compûe›ti⁄_u£d
,

356 
sqlôe3_¸óã_fun˘i⁄_v2
,

357 
sqlôe3_db_c⁄fig
,

358 
sqlôe3_db_muãx
,

359 
sqlôe3_db_°©us
,

360 
sqlôe3_exãnded_îrcode
,

361 
sqlôe3_log
,

362 
sqlôe3_so·_hóp_limô64
,

363 
sqlôe3_sour˚id
,

364 
sqlôe3_°mt_°©us
,

365 
sqlôe3_°∫icmp
,

366 #ifde‡
SQLITE_ENABLE_UNLOCK_NOTIFY


367 
sqlôe3_u∆ock_nŸify
,

371 #i‚de‡
SQLITE_OMIT_WAL


372 
sqlôe3_wÆ_autocheckpoöt
,

373 
sqlôe3_wÆ_checkpoöt
,

374 
sqlôe3_wÆ_hook
,

380 
sqlôe3_blob_ª›í
,

381 
sqlôe3_vèb_c⁄fig
,

382 
sqlôe3_vèb_⁄_c⁄Êi˘
,

383 
sqlôe3_˛o£_v2
,

384 
sqlôe3_db_fûíame
,

385 
sqlôe3_db_ªad⁄ly
,

386 
sqlôe3_db_ªÀa£_mem‹y
,

387 
sqlôe3_îr°r
,

388 
sqlôe3_°mt_busy
,

389 
sqlôe3_°mt_ªad⁄ly
,

390 
sqlôe3_°ricmp
,

391 
sqlôe3_uri_boﬁón
,

392 
sqlôe3_uri_öt64
,

393 
sqlôe3_uri_∑ømëî
,

394 
sqlôe3_v¢¥ötf
,

395 
sqlôe3_wÆ_checkpoöt_v2
,

397 
sqlôe3_auto_exãnsi⁄
,

398 
sqlôe3_böd_blob64
,

399 
sqlôe3_böd_ãxt64
,

400 
sqlôe3_ˇn˚l_auto_exãnsi⁄
,

401 
sqlôe3_lﬂd_exãnsi⁄
,

402 
sqlôe3_mÆloc64
,

403 
sqlôe3_msize
,

404 
sqlôe3_ªÆloc64
,

405 
sqlôe3_ª£t_auto_exãnsi⁄
,

406 
sqlôe3_ªsu…_blob64
,

407 
sqlôe3_ªsu…_ãxt64
,

408 
sqlôe3_°rglob
,

410 (
sqlôe3_vÆue
*(*)(c⁄° sqlôe3_vÆue*))
sqlôe3_vÆue_dup
,

411 
sqlôe3_vÆue_‰ì
,

412 
sqlôe3_ªsu…_zîoblob64
,

413 
sqlôe3_böd_zîoblob64
,

415 
sqlôe3_vÆue_subty≥
,

416 
sqlôe3_ªsu…_subty≥
,

418 
sqlôe3_°©us64
,

419 
sqlôe3_°æike
,

420 
sqlôe3_db_ˇcheÊush
,

422 
sqlôe3_sy°em_î∫o
,

424 
sqlôe3_åa˚_v2
,

425 
sqlôe3_ex∑nded_sql


440 
	$sqlôe3LﬂdExãnsi⁄
(

441 
sqlôe3
 *
db
,

442 c⁄° *
zFûe
,

443 c⁄° *
zProc
,

444 **
pzEºMsg


446 
sqlôe3_vfs
 *
pVfs
 = 
db
->pVfs;

447 *
h™dÀ
;

448 
sqlôe3_lﬂdext_íåy
 
xInô
;

449 *
zEºmsg
 = 0;

450 c⁄° *
zE¡ry
;

451 *
zA…E¡ry
 = 0;

452 **
aH™dÀ
;

453 
u64
 
nMsg
 = 300 + 
	`sqlôe3SåÀn30
(
zFûe
);

454 
ii
;

455 
rc
;

458 c⁄° *
azEndögs
[] = {

459 #i‡
SQLITE_OS_WIN


461 #ñi‡
	`deföed
(
__APPLE__
)

469 if–
pzEºMsg
 ) *pzErrMsg = 0;

478 if–(
db
->
Êags
 & 
SQLITE_LﬂdExãnsi⁄
)==0 ){

479 if–
pzEºMsg
 ){

480 *
pzEºMsg
 = 
	`sqlôe3_m¥ötf
("notáuthorized");

482  
SQLITE_ERROR
;

485 
zE¡ry
 = 
zProc
 ? zProc : "sqlite3_extension_init";

487 
h™dÀ
 = 
	`sqlôe3OsDlO≥n
(
pVfs
, 
zFûe
);

488 #i‡
SQLITE_OS_UNIX
 || 
SQLITE_OS_WIN


489 
ii
=0; ii<
	`AºaySize
(
azEndögs
Ë&& 
h™dÀ
==0; ii++){

490 *
zA…Fûe
 = 
	`sqlôe3_m¥ötf
("%s.%s", 
zFûe
, 
azEndögs
[
ii
]);

491 if–
zA…Fûe
==0 )  
SQLITE_NOMEM_BKPT
;

492 
h™dÀ
 = 
	`sqlôe3OsDlO≥n
(
pVfs
, 
zA…Fûe
);

493 
	`sqlôe3_‰ì
(
zA…Fûe
);

496 if–
h™dÀ
==0 ){

497 if–
pzEºMsg
 ){

498 *
pzEºMsg
 = 
zEºmsg
 = 
	`sqlôe3_mÆloc64
(
nMsg
);

499 if–
zEºmsg
 ){

500 
	`sqlôe3_¢¥ötf
(
nMsg
, 
zEºmsg
,

501 "u«bÀÅÿ›í sh¨edÜibøry [%s]", 
zFûe
);

502 
	`sqlôe3OsDlEº‹
(
pVfs
, 
nMsg
-1, 
zEºmsg
);

505  
SQLITE_ERROR
;

507 
xInô
 = (
sqlôe3_lﬂdext_íåy
)
	`sqlôe3OsDlSym
(
pVfs
, 
h™dÀ
, 
zE¡ry
);

520 if–
xInô
==0 && 
zProc
==0 ){

521 
iFûe
, 
iE¡ry
, 
c
;

522 
ncFûe
 = 
	`sqlôe3SåÀn30
(
zFûe
);

523 
zA…E¡ry
 = 
	`sqlôe3_mÆloc64
(
ncFûe
+30);

524 if–
zA…E¡ry
==0 ){

525 
	`sqlôe3OsDlClo£
(
pVfs
, 
h™dÀ
);

526  
SQLITE_NOMEM_BKPT
;

528 
	`mem˝y
(
zA…E¡ry
, "sqlite3_", 8);

529 
iFûe
=
ncFûe
-1; iFûe>=0 && 
zFûe
[iFile]!='/'; iFile--){}

530 
iFûe
++;

531 if–
	`sqlôe3_°∫icmp
(
zFûe
+
iFûe
, "lib", 3)==0 ) iFile += 3;

532 
iE¡ry
=8; (
c
 = 
zFûe
[
iFûe
])!=0 && c!='.'; iFile++){

533 if–
	`sqlôe3IßÕha
(
c
) ){

534 
zA…E¡ry
[
iE¡ry
++] = ()
sqlôe3UµîToLowî
[()
c
];

537 
	`mem˝y
(
zA…E¡ry
+
iE¡ry
, "_init", 6);

538 
zE¡ry
 = 
zA…E¡ry
;

539 
xInô
 = (
sqlôe3_lﬂdext_íåy
)
	`sqlôe3OsDlSym
(
pVfs
, 
h™dÀ
, 
zE¡ry
);

541 if–
xInô
==0 ){

542 if–
pzEºMsg
 ){

543 
nMsg
 +
	`sqlôe3SåÀn30
(
zE¡ry
);

544 *
pzEºMsg
 = 
zEºmsg
 = 
	`sqlôe3_mÆloc64
(
nMsg
);

545 if–
zEºmsg
 ){

546 
	`sqlôe3_¢¥ötf
(
nMsg
, 
zEºmsg
,

547 "nÿíåyÖoöà[%s] i¿sh¨edÜibøry [%s]", 
zE¡ry
, 
zFûe
);

548 
	`sqlôe3OsDlEº‹
(
pVfs
, 
nMsg
-1, 
zEºmsg
);

551 
	`sqlôe3OsDlClo£
(
pVfs
, 
h™dÀ
);

552 
	`sqlôe3_‰ì
(
zA…E¡ry
);

553  
SQLITE_ERROR
;

555 
	`sqlôe3_‰ì
(
zA…E¡ry
);

556 
rc
 = 
	`xInô
(
db
, &
zEºmsg
, &
sqlôe3Apis
);

557 if–
rc
 ){

558 if–
rc
==
SQLITE_OK_LOAD_PERMANENTLY
 )  
SQLITE_OK
;

559 if–
pzEºMsg
 ){

560 *
pzEºMsg
 = 
	`sqlôe3_m¥ötf
("îr‹ durög inôüliz©i⁄: %s", 
zEºmsg
);

562 
	`sqlôe3_‰ì
(
zEºmsg
);

563 
	`sqlôe3OsDlClo£
(
pVfs
, 
h™dÀ
);

564  
SQLITE_ERROR
;

568 
aH™dÀ
 = 
	`sqlôe3DbMÆlocZîo
(
db
, (
h™dÀ
)*(db->
nExãnsi⁄
+1));

569 if–
aH™dÀ
==0 ){

570  
SQLITE_NOMEM_BKPT
;

572 if–
db
->
nExãnsi⁄
>0 ){

573 
	`mem˝y
(
aH™dÀ
, 
db
->
aExãnsi⁄
, (
h™dÀ
)*db->
nExãnsi⁄
);

575 
	`sqlôe3DbFªe
(
db
, db->
aExãnsi⁄
);

576 
db
->
aExãnsi⁄
 = 
aH™dÀ
;

578 
db
->
aExãnsi⁄
[db->
nExãnsi⁄
++] = 
h™dÀ
;

579  
SQLITE_OK
;

580 
	}
}

581 
	$sqlôe3_lﬂd_exãnsi⁄
(

582 
sqlôe3
 *
db
,

583 c⁄° *
zFûe
,

584 c⁄° *
zProc
,

585 **
pzEºMsg


587 
rc
;

588 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

589 
rc
 = 
	`sqlôe3LﬂdExãnsi⁄
(
db
, 
zFûe
, 
zProc
, 
pzEºMsg
);

590 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

591 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

592  
rc
;

593 
	}
}

599 
	$sqlôe3Clo£Exãnsi⁄s
(
sqlôe3
 *
db
){

600 
i
;

601 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

602 
i
=0; i<
db
->
nExãnsi⁄
; i++){

603 
	`sqlôe3OsDlClo£
(
db
->
pVfs
, db->
aExãnsi⁄
[
i
]);

605 
	`sqlôe3DbFªe
(
db
, db->
aExãnsi⁄
);

606 
	}
}

612 
	$sqlôe3_íabÀ_lﬂd_exãnsi⁄
(
sqlôe3
 *
db
, 
⁄off
){

613 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

614 if–
⁄off
 ){

615 
db
->
Êags
 |
SQLITE_LﬂdExãnsi⁄
|
SQLITE_LﬂdExtFunc
;

617 
db
->
Êags
 &~(
SQLITE_LﬂdExãnsi⁄
|
SQLITE_LﬂdExtFunc
);

619 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

620  
SQLITE_OK
;

621 
	}
}

632 
sqlôe3AutoExtLi°
 
	tsqlôe3AutoExtLi°
;

633 
SQLITE_WSD
 
	ssqlôe3AutoExtLi°
 {

634 
u32
 
	mnExt
;

635 (**
	maExt
)();

636 } 
	gsqlôe3Aut€xt
 = { 0, 0 };

644 #ifde‡
SQLITE_OMIT_WSD


645 
	#wsdAut€xtInô
 \

646 
sqlôe3AutoExtLi°
 *
x
 = &
	`GLOBAL
(sqlôe3AutoExtLi°,
sqlôe3Aut€xt
)

	)

647 
	#wsdAut€xt
 
x
[0]

	)

649 
	#wsdAut€xtInô


	)

650 
	#wsdAut€xt
 
sqlôe3Aut€xt


	)

658 
	$sqlôe3_auto_exãnsi⁄
(

659 (*
xInô
)()

661 
rc
 = 
SQLITE_OK
;

662 #i‚de‡
SQLITE_OMIT_AUTOINIT


663 
rc
 = 
	`sqlôe3_öôülize
();

664 if–
rc
 ){

665  
rc
;

669 
u32
 
i
;

670 #i‡
SQLITE_THREADSAFE


671 
sqlôe3_muãx
 *
muãx
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
);

673 
wsdAut€xtInô
;

674 
	`sqlôe3_muãx_íãr
(
muãx
);

675 
i
=0; i<
wsdAut€xt
.
nExt
; i++){

676 if–
wsdAut€xt
.
aExt
[
i
]==
xInô
 ) ;

678 if–
i
==
wsdAut€xt
.
nExt
 ){

679 
u64
 
nByã
 = (
wsdAut€xt
.
nExt
+1)*(wsdAut€xt.
aExt
[0]);

680 (**
aNew
)();

681 
aNew
 = 
	`sqlôe3_ªÆloc64
(
wsdAut€xt
.
aExt
, 
nByã
);

682 if–
aNew
==0 ){

683 
rc
 = 
SQLITE_NOMEM_BKPT
;

685 
wsdAut€xt
.
aExt
 = 
aNew
;

686 
wsdAut€xt
.
aExt
[wsdAut€xt.
nExt
] = 
xInô
;

687 
wsdAut€xt
.
nExt
++;

690 
	`sqlôe3_muãx_Àave
(
muãx
);

691 
	`as£π
–(
rc
&0xff)==rc );

692  
rc
;

694 
	}
}

705 
	$sqlôe3_ˇn˚l_auto_exãnsi⁄
(

706 (*
xInô
)()

708 #i‡
SQLITE_THREADSAFE


709 
sqlôe3_muãx
 *
muãx
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
);

711 
i
;

712 
n
 = 0;

713 
wsdAut€xtInô
;

714 
	`sqlôe3_muãx_íãr
(
muãx
);

715 
i
=()
wsdAut€xt
.
nExt
-1; i>=0; i--){

716 if–
wsdAut€xt
.
aExt
[
i
]==
xInô
 ){

717 
wsdAut€xt
.
nExt
--;

718 
wsdAut€xt
.
aExt
[
i
] = wsdAut€xt.aExt[wsdAut€xt.
nExt
];

719 
n
++;

723 
	`sqlôe3_muãx_Àave
(
muãx
);

724  
n
;

725 
	}
}

730 
	$sqlôe3_ª£t_auto_exãnsi⁄
(){

731 #i‚de‡
SQLITE_OMIT_AUTOINIT


732 if–
	`sqlôe3_öôülize
()==
SQLITE_OK
 )

735 #i‡
SQLITE_THREADSAFE


736 
sqlôe3_muãx
 *
muãx
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
);

738 
wsdAut€xtInô
;

739 
	`sqlôe3_muãx_íãr
(
muãx
);

740 
	`sqlôe3_‰ì
(
wsdAut€xt
.
aExt
);

741 
wsdAut€xt
.
aExt
 = 0;

742 
wsdAut€xt
.
nExt
 = 0;

743 
	`sqlôe3_muãx_Àave
(
muãx
);

745 
	}
}

752 
	$sqlôe3AutoLﬂdExãnsi⁄s
(
sqlôe3
 *
db
){

753 
u32
 
i
;

754 
go
 = 1;

755 
rc
;

756 
sqlôe3_lﬂdext_íåy
 
xInô
;

758 
wsdAut€xtInô
;

759 if–
wsdAut€xt
.
nExt
==0 ){

763 
i
=0; 
go
; i++){

764 *
zEºmsg
;

765 #i‡
SQLITE_THREADSAFE


766 
sqlôe3_muãx
 *
muãx
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
);

768 #ifde‡
SQLITE_OMIT_LOAD_EXTENSION


769 c⁄° 
sqlôe3_≠i_routöes
 *
pThunk
 = 0;

771 c⁄° 
sqlôe3_≠i_routöes
 *
pThunk
 = &
sqlôe3Apis
;

773 
	`sqlôe3_muãx_íãr
(
muãx
);

774 if–
i
>=
wsdAut€xt
.
nExt
 ){

775 
xInô
 = 0;

776 
go
 = 0;

778 
xInô
 = (
sqlôe3_lﬂdext_íåy
)
wsdAut€xt
.
aExt
[
i
];

780 
	`sqlôe3_muãx_Àave
(
muãx
);

781 
zEºmsg
 = 0;

782 if–
xInô
 && (
rc
 = 
	`xInô
(
db
, &
zEºmsg
, 
pThunk
))!=0 ){

783 
	`sqlôe3Eº‹WôhMsg
(
db
, 
rc
,

784 "autom©i¯exãnsi⁄Üﬂdög faûed: %s", 
zEºmsg
);

785 
go
 = 0;

787 
	`sqlôe3_‰ì
(
zEºmsg
);

789 
	}
}

	@log.c

1 
	~"li°.h
"

2 
	~"båì.h
"

3 
	~<°dio.h
>

4 
	~"sqlôeI¡.h
"

5 
	~"log.h
"

6 
	#HDR_SIZE
 (
logHdr
)

	)

7 
	#LOG_SIZE
 1024 * 1024 * 8

	)

9 
ölöe
 
	$add_to_logqueue
(
Loggî
 *
pLoggî
, 
qLogCñl
 * 
p
)

11 
	`li°_add
(&
p
->
q
, &
pLoggî
->q);

12 
	}
}

14 
ölöe
 
	$dñ_‰om_logqueue
(
qLogCñl
 *
p
){

15 
	`li°_dñ
(&
p
->
q
);

16 
	}
}

18 
	$sqlôe3LoggîO≥nPha£O√
(
Loggî
 **
µLoggî
){

21 
Loggî
 *
pLoggî
;

22 if(*
µLoggî
 != 0){

23  
SQLITE_OK
;

25 
pLoggî
 = (
Loggî
 *)
	`sqlôe3MÆlocZîo
((Logger));

26 
pLoggî
->
°©e
 = 
START
;

27 
	`INIT_LIST_HEAD
(&
pLoggî
->
q
);

28 *
µLoggî
 = 
pLoggî
;

29  
SQLITE_OK
;

30 
	}
};

32 
	$sqlôe3LoggîO≥nPha£Two
(
∑gî
 *
pPagî
, 
nP©h«me
,
Loggî
 *
pLoggî
){

34 
fout
 = 0;

35 
rc
= 0;

36 c⁄° * 
zP©h«me
 = 
pPagî
->
zFûíame
;

37 
nP©h«me
 = 
	`sqlôe3SåÀn30
(
pPagî
->
zFûíame
);

38 if(
pLoggî
 =0 ||ÖLoggî->
log_fd
 != 0)

40 if(
pPagî
 != 0x0){

41 *
tmp
 = (*)
	`sqlôe3MÆloc
(
nP©h«me
+7);

42 
pLoggî
->
zFûe
 = (*)
	`sqlôe3MÆloc
(
nP©h«me
+6);

43 
	`mem˝y
(
pLoggî
->
zFûe
, 
zP©h«me
, 
nP©h«me
);

44 
	`mem˝y
(&
pLoggî
->
zFûe
[
nP©h«me
], "-log\000", 4+2);

45 
	`mem˝y
(
tmp
, 
zP©h«me
, 
nP©h«me
);

46 
	`mem˝y
(&
tmp
[
nP©h«me
], "-output\000", 7+2);

47 
pLoggî
->
fd
 = 
	`›í
(
tmp
,
O_RDWR
|
O_CREAT
,0644);

48 
	`sqlôe3_‰ì
(
tmp
);

50 
pLoggî
->
log_fd
 = 
	`›í
’Loggî->
zFûe
, 
O_RDWR
, 0644);

51 if(
pLoggî
->
log_fd
 == -1){

52 
rc
 = 1;

53 if(
pLoggî
->
°©e
 =
START
){

54 
pLoggî
->
log_fd
 = 0;

55 
pLoggî
->
°©e
 = 
OFF
;

58 
pLoggî
->
log_fd
 = 
	`›í
’Loggî->
zFûe
, 
O_RDWR
 | 
O_CREAT
, 0644);

59 
	`·runˇã
(
pLoggî
->
log_fd
, 
LOG_SIZE
);

60 
pLoggî
->
hdr
.
vîs
 = 1;

63 
pLoggî
->
log_buf„r
 = (*Ë
	`mm≠
(
NULL
, 
LOG_SIZE
, 
PROT_READ
|
PROT_WRITE
,
MAP_SHARED
,pLoggî->
log_fd
,0);

64 
pLoggî
->
°©e
 = 
ON
;

65 
	`mem˝y
(&
pLoggî
->
hdr
,pLoggî->
log_buf„r
, (
logHdr
));

66 if(
pLoggî
->
hdr
.
vîs
 == 0){

67 
pLoggî
->
hdr
.
vîs
 = 1;

68 
pLoggî
->
hdr
.
°L¢
 = 0;

69 
	`mem˝y
(
pLoggî
->
log_buf„r
,&pLoggî->
hdr
, (
logHdr
));

70 
	`msync
(
pLoggî
->
log_buf„r
, (
logHdr
),
MS_SYNC
);

71 
pLoggî
->
log_buf„r
 = 
	`mªm≠
’Loggî->log_buf„r,
LOG_SIZE
, LOG_SIZE*pLoggî->
hdr
.
vîs
, 
MREMAP_MAYMOVE
);

73 
pLoggî
->
œ°L¢
 =ÖLoggî->
hdr
.
°L¢
 + (
logHdr
);

74 if(
rc
 == 0){

75 
	`sqlôe3OsDñëe
(
pPagî
->
pVfs
,ÖPagî->
zWÆ
, 0);

76 
rc
 = 
	`∑gîO≥nWÆ
(
pPagî
);

78 if–
rc
==
SQLITE_OK
 ){

79 
pPagî
->
jou∫ÆMode
 = 
PAGER_JOURNALMODE_WAL
;

80 
pPagî
->
eSèã
 = 
PAGER_OPEN
;

83 
	`sqlôe3LogA«lysis
(
pLoggî
);

85 
	}
}

87 
	$sqlôe3LoggîClo£
(
Loggî
 *
pLoggî
){

88 if(!
pLoggî
 ||ÖLoggî->
log_fd
 == 0)

90 
	`˛o£
(
pLoggî
->
log_fd
);

91 
	`sqlôe3_‰ì
(
pLoggî
->
zFûe
);

92 
	`sqlôe3_‰ì
(
pLoggî
);

93 
	}
}

95 * 
	$£rülize
(*
log
, 
›code
 
›
, *
size
){

96 *
d©a
 = 0;

97 *
tmp
;

98 
i
;

99 
›
 = op >> 4;

100 
›
){

101 
bt_›í
:

102 *
size
 = (
BtO≥nLog
);

103 if(
	`TYPE
(
log
, 
BtO≥nLog
)->
zFûíame
 != 0x0)

104 
	`sqlôe3SåÀn30
(
	`TYPE
(
log
, 
BtO≥nLog
)->
zFûíame
);

106 
bt_ibt
:

107 *
size
 = (
BtIbtLog
);

109 
bt_Êag
:

110 *
size
 = (
BtFœgLog
);

112 
bt_ßve
:

113 *
size
 = (
BtSaveLog
);

115 
c§_›í
:

116 *
size
 = (
C§O≥nLog
);

118 
c§_ic§
:

119 *
size
 = (
C§Ic§Log
);

121 
c§_ö£π
:

122 *
size
 = (
C§In£πLog
);

124 
c§_Êag
:

125 *
size
 = (
C§FœgLog
);

127 
c§_u≈acked
:

128 *
size
 = (
C§U≈ackedLog
);

131 
	}
};

136 
ölöe
 
	$sqlôe3LogCurs‹O≥n
(
wrFœg
, 
BtCurs‹
 *
pCur
, 
Båì
 *
pBåì
){

137 
pCur
->
Æ
.
c§_›í_log
 = {.
iC§
 =ÖCur->
idx_¨õs
, .
iDb
 =ÖCur->
pBåì
->idx_aries,

138 .
wrFœg
 = wrFœg, .
pKeyInfo
 = 
pCur
->pKeyInfo, .
iBt
 = 
pBåì
->
idx_¨õs
};

139 
	`sqlôe3Log
(
pCur
->
pBåì
, &pCur->
Æ
.
c§_›í_log
, 
CSR_OPEN
);

140 
	}
};

142 
ölöe
 
	$sqlôe3LogCurs‹Clo£
(
BtCurs‹
 *
pCur
){

143 
pCur
->
Æ
.
c§_ic§_log
 = {.
iC§
 =ÖCur->
idx_¨õs
};

144 
	`sqlôe3Log
(
pCur
->
pBåì
, &pCur->
Æ
.
c§_ic§_log
, 
CSR_CLOSE
);

145 
	}
};

147 
ölöe
 
	$sqlôe3LogCurs‹Next
(
BtCurs‹
 *
pCur
){

148 
pCur
->
Æ
.
c§_ic§_log
 = {.
iC§
 =ÖCur->
idx_¨õs
};

149 
	`sqlôe3Log
(
pCur
->
pBåì
, &pCur->
Æ
.
c§_ic§_log
, 
NEXT
);

150 
	}
};

152 
ölöe
 
	$sqlôe3LogCurs‹Pªv
(
BtCurs‹
 *
pCur
){

153 
pCur
->
Æ
.
c§_ic§_log
 = {.
iC§
 =ÖCur->
idx_¨õs
};

154 
	`sqlôe3Log
(
pCur
->
pBåì
, &pCur->
Æ
.
c§_ic§_log
, 
PREV
);

155 
	}
};

157 
ölöe
 
	$sqlôe3LogCurs‹Eof
(
BtCurs‹
 *
pCur
){

158 
pCur
->
Æ
.
c§_ic§_log
 = {.
iC§
 =ÖCur->
idx_¨õs
};

159 
	`sqlôe3Log
(
pCur
->
pBåì
, &pCur->
Æ
.
c§_ic§_log
, 
CSR_EOF
);

160 
	}
};

162 
ölöe
 
	$sqlôe3LogCurs‹Fú°
(
BtCurs‹
 *
pCur
){

163 
pCur
->
Æ
.
c§_ic§_log
 = {.
iC§
 =ÖCur->
idx_¨õs
};

164 
	`sqlôe3Log
(
pCur
->
pBåì
, &pCur->
Æ
.
c§_ic§_log
, 
FIRST
);

165 
	}
};

167 
ölöe
 
	$sqlôe3LogCurs‹La°
(
BtCurs‹
 *
pCur
){

168 
pCur
->
Æ
.
c§_ic§_log
 = {.
iC§
 =ÖCur->
idx_¨õs
};

169 
	`sqlôe3Log
(
pCur
->
pBåì
, &pCur->
Æ
.
c§_ic§_log
, 
LAST
);

170 
	}
};

172 
ölöe
 
	$sqlôe3LogCurs‹I¡egîKey
(
BtCurs‹
 *
pCur
){

173 
pCur
->
Æ
.
c§_ic§_log
 = {.
iC§
 =ÖCur->
idx_¨õs
};

174 
	`sqlôe3Log
(
pCur
->
pBåì
, &pCur->
Æ
.
c§_ic§_log
, 
INTEGERKEY
);

175 
	}
};

177 
ölöe
 
	$sqlôe3LogCurs‹U≈acked
(
BtCurs‹
 *
pCur
, 
U≈ackedRec‹d
 *
pIdxKey
, 
ötKey
, 
büsRight
){

178 
pCur
->
Æ
.
c§_u≈acked_log
 = {.
iC§
 =ÖCur->
idx_¨õs
, .
pIdxKey
 =ÖIdxKey, .
ötKey
 = i¡Key, .
büsRight
 = biasRight};

179 
	`sqlôe3Log
(
pCur
->
pBåì
, &pCur->
Æ
.
c§_u≈acked_log
, 
MV_UNPACKED
);

180 
	}
};

182 
ölöe
 
	$sqlôe3LogCurs‹CÀ¨
(
BtCurs‹
 *
pCur
){

183 
pCur
->
Æ
.
c§_ic§_log
 = {.
iC§
 =ÖCur->
idx_¨õs
};

184 
	`sqlôe3Log
(
pCur
->
pBåì
, &pCur->
Æ
.
c§_ic§_log
, 
CLEAR
);

185 
	}
};

187 
ölöe
 
	$sqlôe3LogCurs‹Re°‹e
(
BtCurs‹
 *
pCur
){

188 
pCur
->
Æ
.
c§_ic§_log
 = {.
iC§
 =ÖCur->
idx_¨õs
};

189 
	`sqlôe3Log
(
pCur
->
pBåì
, &pCur->
Æ
.
c§_ic§_log
, 
RESTORE
);

190 
	}
};

192 
ölöe
 
	$sqlôe3LogCurs‹In¸Blob
(
BtCurs‹
 *
pCur
){

193 
pCur
->
Æ
.
c§_ic§_log
 = {.
iC§
 =ÖCur->
idx_¨õs
};

194 
	`sqlôe3Log
(
pCur
->
pBåì
, &pCur->
Æ
.
c§_ic§_log
, 
INCRBLOB
);

195 
	}
};

197 
ölöe
 
	$sqlôe3LogCurs‹In£π
(
BtCurs‹
 *
pCur
, c⁄° 
BåìPaylﬂd
 *
pX
, 
≠≥ndBüs
, 
£ekResu…
){

198 
pCur
->
Æ
.
c§_ö£π_log
 = {.
iC§
 =ÖCur->
idx_¨õs
, .
pX
 =ÖX, .
≠≥ndBüs
 =áµídBüs, .
£ekResu…
 = seekResult};

199 
	`sqlôe3Log
(
pCur
->
pBåì
, &pCur->
Æ
.
c§_ö£π_log
, 
INSERT
);

200 
	}
};

202 
ölöe
 
	$sqlôe3LogCurs‹Dñëe
(
BtCurs‹
 *
pCur
, 
u8
 
Êags
){

203 
pCur
->
Æ
.
c§_Êag_log
 = {.
iC§
 =ÖCur->
idx_¨õs
, .
Êags
 = flags};

204 
	`sqlôe3Log
(
pCur
->
pBåì
, &pCur->
Æ
.
c§_Êag_log
, 
DELETE
);

205 
	}
};

211 
ölöe
 
	$sqlôe3LogBåìO≥n
(
Båì
 *
pBåì
, * 
zFûíame
, 
Êags
, 
vfsFœgs
){

212 
pBåì
->
Æ
.
bt_›í_log
 = {.
iBt
 =ÖBåì->
idx_¨õs
, .
zFûíame
 = zFûíame, .
Êags
 = fœgs, .
vfsFœgs
 = vfsFlags};

213 
	`sqlôe3Log
(
pBåì
, &pBåì->
Æ
.
bt_iBt_log
, 
OPEN
);

214 
	}
};

216 
ölöe
 
	$sqlôe3LogBåìClo£
(
Båì
 *
pBåì
){

217 
pBåì
->
Æ
.
bt_iBt_log
 = {.
iBt
 =ÖBåì->
idx_¨õs
};

218 
	`sqlôe3Log
(
pBåì
, &pBåì->
Æ
.
bt_iBt_log
, 
CLOSE
);

219 
	}
};

221 
ölöe
 
	$sqlôe3LogBåìCª©e
(
Båì
 *
pBåì
, 
Êags
){

222 
pCur
->
Æ
.
bt_Êag_log
 = {.
iBt
 = 
pBåì
->
idx_¨õs
, .
Êags
 = flags};

223 
	`sqlôe3Log
(
pBåì
, &pBåì->
Æ
.
bt_Êag_log
, 
CREATE
);

224 
	}
};

226 
ölöe
 
	$sqlôe3LogBåìDr›
(
Båì
 *
pBåì
, 
iTabÀ
){

227 
pCur
->
Æ
.
bt_Êag_log
 = {.
iBt
 = 
pBåì
->
idx_¨õs
, .
Êags
 = 
iTabÀ
};

228 
	`sqlôe3Log
(
pBåì
, &pBåì->
Æ
.
bt_Êag_log
, 
DROP
);

229 
	}
};

231 
ölöe
 
	$sqlôe3LogBåìCÀ¨
(
Båì
 *
pBåì
, 
iTabÀ
){

232 
pCur
->
Æ
.
bt_Êag_log
 = {.
iBt
 = 
pBåì
->
idx_¨õs
, .
Êags
 = 
iTabÀ
};

233 
	`sqlôe3Log
(
pBåì
, &pBåì->
Æ
.
bt_Êag_log
, 
DROP
);

234 
	}
};

236 
ölöe
 
	$sqlôe3LogBåìBegöTøns
(
Båì
 *
pBåì
, 
wrFœg
){

237 
pCur
->
Æ
.
bt_Êag_log
 = {.
iBt
 = 
pBåì
->
idx_¨õs
, .
Êags
 = 
wrFœg
};

238 
	`sqlôe3Log
(
pBåì
, &pBåì->
Æ
.
bt_Êag_log
, 
BEGINTRANS
);

239 
	}
};

241 
ölöe
 
	$sqlôe3LogBåìEndTøns
(
Båì
 *
pBåì
){

242 
pBåì
->
Æ
.
bt_iBt_log
 = {.
iBt
 =ÖBåì->
idx_¨õs
};

243 
	`sqlôe3Log
(
pBåì
, &pBåì->
Æ
.
bt_iBt_log
, 
ENDTRANS
);

244 
	}
};

246 
ölöe
 
	$sqlôe3LogBåìSavïoöts
(
Båì
 *
pBåì
, 
›
, 
iSavïoöt
){

247 
pCur
->
Æ
.
bt_Êag_log
 = {.
iBt
 = 
pBåì
->
idx_¨õs
, .
›
 = op, .
iSavïoöt
 = iSavepoint};

248 
	`sqlôe3Log
(
pBåì
, &pBåì->
Æ
.
bt_ßve_log
, 
SAVEPOINT
);

249 
	}
};

254 
	$sqlôe3LogF‹˚AtCommô
(
Båì
 *
pBåì
){

255 if(!
pLoggî
 ||ÖLoggî->
°©e
 =
OFF
)

257 
	`sqlôe3Log
(
pBåì
,
NULL
,
COMMIT
);

258 
	}
};

260 
	$sqlôe3LogRﬁlback
(
Loggî
 *
pLoggî
){

261 if(!
pLoggî
 ||ÖLoggî->
°©e
 =
OFF
)

264 
li°_hód
 *
tmp1
, *
tmp2
;

265 
qLogCñl
 *
m_qLogCñl
;

266 
	`li°_f‹_óch_ß„
(
tmp1
,
tmp2
,&
pLoggî
->
q
){

267 
m_qLogCñl
 = 
	`li°_íåy
(
tmp1
, 
qLogCñl
, 
q
);

268 
	`dñ_‰om_logqueue
(
m_qLogCñl
);

269 
	`‰ì_qLogCñl
(
m_qLogCñl
);

271 
	}
};

274 
	$‰ì_qLogCñl
(
qLogCñl
* 
m_qLogCñl
){

275 
rc
;

276 
	`sqlôe3_‰ì
((*)
m_qLogCñl
->
m_logCñl
->
d©a
);

277 
	`sqlôe3_‰ì
(
m_qLogCñl
);

278 
	}
};

280 
	$sqlôe3Log
(
Båì
 * 
pBåì
, *
log
, 
›code
 
›
){

281 
vîs
 = 0;

282 
Loggî
 *
pLoggî
 = 
pBåì
->
pBt
->pLogger;

283 *
pPå
;

284 
logCñl
 *
m_logCñl
;

285 
qLogCñl
 *
m_qLogCñl
;

286 
li°_hód
 *
tmp1
, *
tmp2
;

288 if(!
pLoggî
 ||ÖLoggî->
°©e
 =
OFF
){

289 
pLoggî
->
p_check
 = 
LOG_LIMIT
;

293 
m_qLogCñl
 = 
pPå
 = 
	`sqlôe3MÆlocZîo
((
logCñl
)+(
qLogCñl
));

294 
m_logCñl
 = 
pPå
 + (
qLogCñl
);

295 
m_logCñl
->
vîs
 = vers++;

296 
m_logCñl
->
›
 = op;

297 
m_logCñl
->
d©a
 = 
	`£rülize
(
log
, 
›
, &m_logCñl->
d©a_size
);

298 
m_qLogCñl
->
m_logCñl
 = m_logCell;

299 
	`add_to_logqueue
(
pLoggî
,
m_qLogCñl
);

300 
pLoggî
->
p_check
 += 1;

302 if(
›
 =
COMMIT
){

303 
iOff£t
 = 
pLoggî
->
œ°L¢
;

304 
tmp
 = 
pLoggî
->
hdr
.
vîs
;

305 
rc
 = 0;

306 
	`li°_f‹_óch_¥ev_ß„
(
tmp1
,
tmp2
,&
pLoggî
->
q
){

307 
m_qLogCñl
 = 
	`li°_íåy
(
tmp1
, 
qLogCñl
, 
q
);

308 
m_logCñl
 = 
m_qLogCñl
->m_logCell;

309 
iOff£t
 + (
logCñl
Ë+ 
m_logCñl
->
d©a_size
 > 
LOG_SIZE
*
pLoggî
->
hdr
.
vîs
){

310 
	`ÁŒoˇã
(
pLoggî
->
log_fd
, 0, 
LOG_SIZE
*pLoggî->
hdr
.
vîs
, LOG_SIZE);

311 
pLoggî
->
hdr
.
vîs
++;

312 
pLoggî
->
log_buf„r
 = 
	`mªm≠
’Loggî->log_buf„r,
LOG_SIZE
*’Loggî->
hdr
.
vîs
 - 1), LOG_SIZE*pLoggî->hdr.vîs, 
MREMAP_MAYMOVE
);

313 
pLoggî
->
p_check
 = 
LOG_LIMIT
;

315 
m_logCñl
->
√xtL¢
 = 
iOff£t
+((
logCñl
Ë+ m_logCñl->
d©a_size
);

316 
	`mem˝y
(
pLoggî
->
log_buf„r
 + 
iOff£t
, 
m_logCñl
, (
logCñl
));

317 
iOff£t
 +(
logCñl
);

318 if(
m_logCñl
->
d©a
 != 0)

319 
	`mem˝y
(
pLoggî
->
log_buf„r
 + 
iOff£t
, 
m_logCñl
->
d©a
, m_logCñl->
d©a_size
);

320 
iOff£t
+=
m_logCñl
->
d©a_size
;

321 
	`dñ_‰om_logqueue
(
m_qLogCñl
);

322 
	`‰ì_qLogCñl
(
m_qLogCñl
);

324 
	`msync
(
pLoggî
->
log_buf„r
 +ÖLoggî->
œ°L¢
, 
iOff£t
 - (pLoggî->œ°L¢ + (
logHdr
)), 
MS_SYNC
);

325 if(
tmp
 !
pLoggî
->
hdr
.
vîs
){

326 
	`mem˝y
(
pLoggî
->
log_buf„r
, &pLoggî->
hdr
,(
logHdr
));

327 
	`msync
(
pLoggî
->
log_buf„r
,(
logHdr
),
MS_SYNC
);

329 
pLoggî
->
œ°L¢
 = 
iOff£t
;

331 
	}
};

333 
	$sqlôe3LogA«lysis
(
Loggî
 *
pLoggî
){

334 
logCñl
 *
m_logCñl
;

335 *
tmp
;

336 
off£t
 = 
pLoggî
->
hdr
.
°L¢
 + (
logHdr
);

338 
pLoggî
->
°©e
 = 
OFF
;

339 
pLoggî
->
p_check
 = 
LOG_LIMIT
;

342 
m_logCñl
 = 
	`sqlôe3MÆloc
((
logCñl
));

343 
	`mem˝y
(
m_logCñl
,
pLoggî
->
log_buf„r
 + 
off£t
,(
logCñl
));

344 if(
m_logCñl
->
›
 =
EXIT
){

345 
	`sqlôe3_‰ì
(
m_logCñl
);

348 
m_logCñl
->
d©a
 = 
	`sqlôe3MÆloc
(m_logCñl->
d©a_size
);

349 
off£t
+=(
logCñl
);

350 
	`mem˝y
–
m_logCñl
->
d©a
,
pLoggî
->
log_buf„r
 + 
off£t
, m_logCñl->
d©a_size
);

351 
off£t
+=
m_logCñl
->
d©a_size
;

352 
	`sqlôe3LogRecovîy
(
m_logCñl
);

355 
	`sqlôe3LogFûeInô
(
pLoggî
);

356 
	`sqlôe3BåìCheckpoöt
(
pBåì
,0,0,0);

358 
pLoggî
->
p_check
 = 0;

359 
pLoggî
->
°©e
 = 
ON
;

361  
SQLITE_OK
;

362 
	}
};

364 
	$sqlôe3LogFûeInô
(
Loggî
 *
pLoggî
){

365 
	`˛o£
(
pLoggî
->
log_fd
);

366 
	`ªmove
(
pLoggî
->
zFûe
);

367 
pLoggî
->
log_fd
 = 0;

368 
	`sqlôe3LoggîO≥nPha£Two
(0,
pLoggî
);

369 
	}
}

371 
	$sqlôe3LogRecovîy
(
Loggî
 *
pLoggî
, 
logCñl
 *
m_logCñl
){

373 
BtIbtLog
 *
bt_ibt_log
;

374 
BtO≥nLog
 *
bt_›í_log
;

375 
BtFœgLog
 *
bt_Êag_log
;

376 
BtSaveLog
 *
bt_ßve_log
;

378 
C§O≥nLog
 *
c§_›í_log
;

379 
C§Ic§Log
 *
c§_Ic§_log
;

380 
C§U≈ackedLog
 *
c§_u≈acked_log
;

381 
C§In£πLog
 *
c§_ö£π_log
;

382 
C§FœgLog
 *
c§_Êag_log
;

384 
iBt
,
iC§
;

385 * 
tmp
 = 
	`de£rülize
(
m_logCñl
, m_logCñl->
›
);

387 
m_logCñl
->
›
){

390 
BTREE_OPEN
:

391 
bt_›í_log
 = 
tmp
;

392 
	`sqlôe3BåìO≥n
(
pLoggî
->
pVfs
, 
bt_›í_log
->
zFûíame
,ÖLoggî->
db
, &pLoggî->
≠Bt
[pLoggî->
nBåì
],

393 
bt_›í_log
->
Êags
, bt_›í_log->
vfsFœgs
);

394 
pLoggî
->
nBåì
++;

396 
BTREE_CLOSE
:

397 
bt_iBt_log
 = 
tmp
;

398 
iBt
 = 
	`FIND_IBT
(
bt_iBt_log
);

399 
	`sqlôe3BåìClo£
(
pLoggî
->
≠Bt
[
iBt
]);

400 
	`RELEASE_IBT
(
iBt
);

402 
CREATE
:

403 
bt_Êag_log
 = 
tmp
;

404 
iBt
 = 
	`FIND_IBT
(
bt_Êag_log
);

405 
	`sqlôe3BåìCª©eTabÀ
(
pLoggî
->
≠Bt
[
iBt
], (*)
tmp
, 
bt_Êag_log
->
Êags
);

407 
DROP
:

408 
bt_Êag_log
 = 
tmp
;

409 
iBt
 = 
	`FIND_IBT
(
bt_Êag_log
);

410 
	`sqlôe3BåìDr›TabÀ
(
pLoggî
->
≠Bt
[
iBt
], 
bt_Êag_log
->
Êags
, (*)
tmp
);

412 
CLEAR
:

413 
bt_Êag_log
 = 
tmp
;

414 
iBt
 = 
	`FIND_IBT
(
bt_Êag_log
);

415 
	`sqlôe3BåìCÀ¨TabÀ
(
pLoggî
->
≠Bt
[
iBt
], 
bt_Êag_log
->
Êags
, (*)
tmp
);

417 
BEGINTRANS
:

418 
bt_Êag_log
 = 
tmp
;

419 
iBt
 = 
	`FIND_IBT
(
bt_Êag_log
);

420 
	`sqlôe3BåìBegöTøns
(
pLoggî
->
≠Bt
[
iBt
], 
bt_Êag_log
->
Êags
);

422 
SAVEPOINT
:

423 
bt_ßve_log
 = 
tmp
;

424 
iBt
 = 
	`FIND_IBT
(
bt_Êag_log
);

425 
	`sqlôe3BåìSavïoöt
(
pLoggî
->
≠Bt
[
iBt
], 
bt_ßve_log
->
›
, bt_ßve_log->
iSavïoöt
);

427 
COMMIT
:

431 
CSR_OPEN
:

432 
c§_›í_log
 = 
tmp
;

433 
iBt
 = 
	`FIND_IBT
(
c§_›í_log
);

434 
	`sqlôe3BåìCurs‹
(
pLoggî
->
≠Bt
[
iBt
], 
c§_›í_log
->
iTabÀ
, c§_›í_log->
wrFœg
,

435 
c§_›í_log
->
pKeyInfo
, 
pLoggî
->
≠C§
[pLoggî->
nC§
]);

436 
pLoggî
->
nC§
++;

438 
CSR_CLOSE
:

439 
c§_ic§_log
 = 
tmp
;

440 
iC§
 = 
	`FIND_ICSR
(
c§_ic§_log
);

441 
	`sqlôe3BåìClo£Curs‹
(
pLoggî
->
≠C§
[
iC§
]);

442 
	`RELEASE_ICSR
(
iC§
);

444 
NEXT
:

445 
c§_ic§_log
 = 
tmp
;

446 
iC§
 = 
	`FIND_ICSR
(
c§_ic§_log
);

447 
	`sqlôe3BåìNext
(
pLoggî
->
≠C§
[
iC§
], (*)
tmp
);

449 
PREV
:

450 
c§_ic§_log
 = 
tmp
;

451 
iC§
 = 
	`FIND_ICSR
(
c§_ic§_log
);

452 
	`sqlôe3BåìPªvious
(
pLoggî
->
≠C§
[
iC§
], (*)
tmp
);

454 
FIRST
:

455 
c§_ic§_log
 = 
tmp
;

456 
iC§
 = 
	`FIND_ICSR
(
c§_ic§_log
);

457 
	`sqlôe3BåìFú°
(
pLoggî
->
≠C§
[
iC§
], (*)
tmp
);

459 
LAST
:

460 
c§_ic§_log
 = 
tmp
;

461 
iC§
 = 
	`FIND_ICSR
(
c§_ic§_log
);

462 
	`sqlôe3BåìLa°
(
pLoggî
->
≠C§
[
iC§
], (*)
tmp
);

464 
CSR_EOF
:

465 
c§_ic§_log
 = 
tmp
;

466 
iC§
 = 
	`FIND_ICSR
(
c§_ic§_log
);

467 
	`sqlôe3BåìEof
(
pLoggî
->
≠C§
[
iC§
]);

469 
INTEGERKEY
:

470 
c§_ic§_log
 = 
tmp
;

471 
iC§
 = 
	`FIND_ICSR
(
c§_ic§_log
);

472 
	`sqlôe3BåìI¡egîKey
(
pLoggî
->
≠C§
[
iC§
]);

474 
MV_UNPACKED
:

475 
c§_u≈acked_log
 = 
tmp
;

476 
iC§
 = 
	`FIND_ICSR
(
c§_ic§_log
);

477 
	`sqlôe3BåìMoveToU≈acked
(
pLoggî
->
≠C§
[
iC§
], 
c§_u≈acked_log
->
pIdxKey
, c§_u≈acked_log->
ötKey
,

478 
c§_u≈acked_log
->
büsRight
, (*)
tmp
);

480 
CLEAR
:

481 
c§_ic§_log
 = 
tmp
;

482 
iC§
 = 
	`FIND_ICSR
(
c§_ic§_log
);

483 
	`sqlôe3BåìCÀ¨Curs‹
(
pLoggî
->
≠C§
[
iC§
]);

485 
RESTORE
:

486 
c§_ic§_log
 = 
tmp
;

487 
iC§
 = 
	`FIND_ICSR
(
c§_ic§_log
);

488 
	`sqlôe3BåìCurs‹Re°‹e
(
pLoggî
->
≠C§
[
iC§
], (*)
tmp
);

490 
INCRBLOB
:

491 
c§_ic§_log
 = 
tmp
;

492 
iC§
 = 
	`FIND_ICSR
(
c§_ic§_log
);

493 
	`sqlôe3BåìIn¸BlobCurs‹
(
pLoggî
->
≠C§
[
iC§
]);

495 
INSERT
:

496 
c§_ö£π_log
 = 
tmp
;

497 
iC§
 = 
	`FIND_ICSR
(
c§_ö£π_log
);

498 
	`sqlôe3BåìIn£π
(
pLoggî
->
≠C§
[
iC§
], 
c§_ö£π_log
->
pX
,

499 
c§_ö£π_log
->
≠≥ndBüs
, c§_ö£π_log->
£ekResu…
);

501 
DELETE
:

502 
c§_Êag_log
 = 
tmp
;

503 
iC§
 = 
	`FIND_ICSR
(
c§_Êag_log
);

504 
	`sqlôe3BåìDñëe
(
pLoggî
->
≠C§
[
iC§
], 
c§_Êag_log
->
Êags
);

507 
	}
};

510 
	$sqlôe3LogCheckPoöt
(
Loggî
 *
pLoggî
){

511 if(!
pLoggî
 ||ÖLoggî->
°©e
 =
OFF
)

514 
	`d¥ötf
(
pLoggî
->
fd
,"operation : CHECKPOINT\n");

516 
logCñl
 
m_logCñl
 = {};

517 
pLoggî
->
hdr
.
°L¢
 = 0;

518 
pLoggî
->
œ°L¢
 = (
logHdr
);

519 
	`mem˝y
(
pLoggî
->
log_buf„r
, &pLoggî->
hdr
,(
logHdr
));

520 
	`mem˝y
(
pLoggî
->
log_buf„r
 + (
logHdr
), &
m_logCñl
, (
logCñl
));

521 
	`msync
(
pLoggî
->
log_buf„r
, (
logHdr
Ë+ (
logCñl
Ë,
MS_SYNC
);

522 
pLoggî
->
p_check
 = 0;

523 
	}
};

	@log.h

1 #i‚de‡
SQLITE_LOGGING
;

2 
	#SQLITE_LOGGING


	)

3 
	#LOG_LIMIT
 20000

	)

5 
	elogty≥
 { 
	mbt_›í
, 
	mbt_ibt
, 
	mbt_Êag
, 
	mbt_ßve
, 
	mc§_›í
 = 0x10, 
	mc§_ic§
, 
	mc§_ö£π
, 
	mc§_Êag
, 
	mc§_u«p˚kd
 };

7 
	e›code
 {

9 
	mEXIT
 = 0x00,

19 
	mBTREE_OPEN
 = 0x01,

21 
	mDROP
 = 0x10, 
	mCLEAR
, 
	mBEGINTRANS
, 
	mCOMMIT
,

23 
	mBTREE_CLOSE
 = 0x20, 
	mENDTRANS
, 
	mCREATE
,

25 
	mSAVEPOINT
 = 0x30,

38 
	mCSR_OPEN
 = 0x100,

40 
	mCSR_CLOSE
, 
	mNEXT
 = 0x110, 
	mPREV
, 
	mFIRST
, 
	mLAST
, 
	mCSR_EOF
, 
	mINTEGERKEY
, 
	mCLAER
, 
	mRESTORE
, 
	mINCRBLOB
,

42 
	mINSERT
 = 0x120,

44 
	mDELETE
 = 0x130,

46 
	mMV_UNPACKED
 = 0x140

49 
	ecom∑ª
 {
	mUNKNOWN
,
	mINT
, 
	mSTRING
, 
	mRECORD
, 
	mWALINT
, 
	mWALSTRING
, 
	mWALRECORD
};

57 
	eloggîSèã
 {
	mSTART
, 
	mON
, 
	mOFF
};

59 
LOGGER
 
	tLoggî
;

60 
LOGCELL
 
	tlogCñl
;

61 
QLOGCELL
 
	tqLogCñl
;

62 
LOGHDR
 
	tlogHdr
;

64 
	sLOGHDR
{

65 
	m°L¢
;

66 
	mvîs
;

69 
	sLOGGER
{

70 *
	mlog_buf„r
;

71 
	mlog_fd
;

72 
	mfd
;

73 *
	mzFûe
;

74 
li°_hód
 
	mq
;

75 
logHdr
 
	mhdr
;

76 
	mp_check
;

77 
	mœ°L¢
;

78 
Båì
 *
	m≠Bt
[10];

79 
BtCurs‹
 *
	m≠C§
[10];

80 
loggîSèã
 
	m°©e
;

83 
	sLOGCELL
{

84 
	m√xtL¢
;

85 
›code
 
	m›
;

86 
	md©a_size
;

87 
	mvîs
;

88 *
	md©a
;

91 
	sQLOGCELL
{

92 
LOGCELL
* 
	mm_logCñl
;

93 
li°_hód
 
	mq
;

101 
	sBtIbtLog
{

102 
	miBt
;

105 
	sBtO≥nLog
{

106 
	miBt
;

107 
	mÊags
;

108 
	mvfsFœgs
;

109 *
	mzFûíame
;

112 
	sBtFœgLog
{

113 
	miBt
;

114 
	mÊags
;

117 
	sBtSaveLog
{

118 
	miBt
;

119 
	m›
;

120 
	miSavïoöt
;

126 
	sC§O≥nLog
{

127 
	miC§
;

128 
	miBt
;

129 
	miDb
;

130 
	miTabÀ
;

131 
	mwrFœg
;

132 
KeyInfo
 *
	mpKeyInfo
;

135 
	sC§Ic§Log
{

136 
	miC§
;

139 
	sC§U≈ackedLog
{

140 
	miC§
;

141 
i64
 
	mötKey
;

142 
	mbüsRight
;

143 
U≈ackedRec‹d
 *
	mpIdxKey
;

146 
	sC§In£πLog
{

147 
	miC§
;

148 
	m£ekResu…
;

149 
	m≠≥ndBüs
;

150 c⁄° 
BåìPaylﬂd
 *
	mpX
;

153 
	sC§FœgLog
{

154 
	miC§
;

155 
	mÊags
;

159 
sqlôe3Log
(
Loggî
 *
pLoggî
, *
log
, 
›code
 
›
);

163 
ölöe
 
sqlôe3LogCurs‹O≥n
(
wrFœg
, 
BtCurs‹
 *
pCur
, 
Båì
* 
pBåì
);

164 
ölöe
 
sqlôe3LogCurs‹Clo£
(
BtCurs‹
 *
pCur
);

165 
ölöe
 
sqlôe3LogCurs‹Next
(
BtCurs‹
 *
pCur
);

166 
ölöe
 
sqlôe3LogCurs‹Pªv
(
BtCurs‹
 *
pCur
);

167 
ölöe
 
sqlôe3LogCurs‹Eof
(
BtCurs‹
 *
pCur
);

168 
ölöe
 
sqlôe3LogCurs‹Fú°
(
BtCurs‹
 *
pCur
);

169 
ölöe
 
sqlôe3LogCurs‹La°
(
BtCurs‹
 *
pCur
);

170 
ölöe
 
sqlôe3LogCurs‹I¡egîKey
(
BtCurs‹
 *
pCur
);

171 
ölöe
 
sqlôe3LogCurs‹U≈acked
(
BtCurs‹
 *
pCur
, 
U≈ackedRec‹d
 *
pIdxKey
, 
ötKey
, 
büsRight
);

172 
ölöe
 
sqlôe3LogCurs‹CÀ¨
(
BtCurs‹
 *
pCur
);

173 
ölöe
 
sqlôe3LogCurs‹Re°‹e
(
BtCurs‹
 *
pCur
);

174 
ölöe
 
sqlôe3LogCurs‹In¸Blob
(
BtCurs‹
 *
pCur
);

175 
ölöe
 
sqlôe3LogCurs‹In£π
(
BtCurs‹
 *
pCur
, c⁄° 
BåìPaylﬂd
 *
pX
, 
≠≥ndBüs
, 
£ekResu…
);

176 
ölöe
 
sqlôe3LogCurs‹Dñëe
(
BtCurs‹
 *
pCur
, 
u8
 
Êags
);

180 
ölöe
 
sqlôe3LogBåìO≥n
(
Båì
 *
pBåì
, * 
zFûíame
, 
Êags
, 
vfsFœgs
);

181 
ölöe
 
sqlôe3LogBåìClo£
(
Båì
 *
pBåì
);

182 
ölöe
 
sqlôe3LogBåìCª©e
(
Båì
 *
pBåì
, 
Êags
);

183 
ölöe
 
sqlôe3LogBåìDr›
(
Båì
 *
pBåì
, 
iTabÀ
);

184 
ölöe
 
sqlôe3LogBåìCÀ¨
(
Båì
 *
pBåì
, 
iTabÀ
);

185 
ölöe
 
sqlôe3LogBåìBegöTøns
(
Båì
 *
pBåì
, 
wrFœg
);

186 
ölöe
 
sqlôe3LogBåìEndTøns
(
Båì
 *
pBåì
, 
wrFœg
);

187 
ölöe
 
sqlôe3LogBåìEndTøns
(
Båì
 *
pBåì
);

188 
ölöe
 
sqlôe3LogBåìSavïoöts
(
Båì
 *
pBåì
, 
›
, 
iSavïoöt
);

195 
sqlôe3LoggîO≥nPha£O√
(
Loggî
 **
µLoggî
);

196 
sqlôe3LoggîO≥nPha£Two
(
sqlôe3_vfs
 *
pVfs
, c⁄° * 
zP©h«me
,
nP©h«me
,
Loggî
 *
pLoggî
);

197 
sqlôe3LogPaylﬂd
(
BtCurs‹
* 
pCur
,c⁄° 
BåìPaylﬂd
 *
pX
, 
≠≥ndBüs
, 
£ekResu…
);

198 
sqlôe3LogF‹˚AtCommô
(
Loggî
 *
pLoggî
);

199 
sqlôe3LogiCñl
(
BtCurs‹
* 
pCur
, 
iCñlDïth
, 
iCñlIdx
, 
u32
 
pPagePgno
, 
u8
 
Êags
);

200 
sqlôe3LogFûeInô
(
Loggî
 *
pLoggî
);

201 
sqlôe3LogCª©eTabÀ
(
BtSh¨ed
* 
p
, 
Êags
);

202 
sqlôe3LoggîClo£
(
Loggî
 *
pLoggî
);

203 
sqlôe3LogInô
(
BtCurs‹
* 
pCur
);

204 
sqlôe3LogCheckPoöt
(
Loggî
 *
pLoggî
);

205 
sqlôe3LogRﬁlback
(
Loggî
 *
pLoggî
);

206 
sqlôe3LogiPage
(
BtCurs‹
* 
pCur
, 
iPage
, 
u32
 
pgno
);

	@main.c

17 
	~"sqlôeI¡.h
"

18 
	~"log.h
"

20 #ifde‡
SQLITE_ENABLE_FTS3


21 
	~"·s3.h
"

23 #ifde‡
SQLITE_ENABLE_RTREE


24 
	~"πªe.h
"

26 #ifde‡
SQLITE_ENABLE_ICU


27 
	~"sqlôeicu.h
"

29 #ifde‡
SQLITE_ENABLE_JSON1


30 
sqlôe3Js⁄1Inô
(
sqlôe3
*);

32 #ifde‡
SQLITE_ENABLE_FTS5


33 
sqlôe3Fts5Inô
(
sqlôe3
*);

36 #i‚de‡
SQLITE_AMALGAMATION


40 c⁄° 
	gsqlôe3_vîsi⁄
[] = 
SQLITE_VERSION
;

46 c⁄° *
	$sqlôe3_libvîsi⁄
(){  
sqlôe3_vîsi⁄
; 
	}
}

52 c⁄° *
	$sqlôe3_sour˚id
(){  
SQLITE_SOURCE_ID
; 
	}
}

57 
	$sqlôe3_libvîsi⁄_numbî
(){  
SQLITE_VERSION_NUMBER
; 
	}
}

63 
	$sqlôe3_thªadß„
(){  
SQLITE_THREADSAFE
; 
	}
}

70 #ifde‡
SQLITE_HAVE_OS_TRACE


71 #i‚de‡
SQLITE_DEBUG_OS_TRACE


72 
	#SQLITE_DEBUG_OS_TRACE
 0

	)

74 
	gsqlôe3OSTø˚
 = 
SQLITE_DEBUG_OS_TRACE
;

77 #i‡!
deföed
(
SQLITE_OMIT_TRACE
Ë&& deföed(
SQLITE_ENABLE_IOTRACE
)

84 
SQLITE_API
 (
SQLITE_CDECL
 *
sqlôe3IoTø˚
)(const *, ...) = 0;

94 *
sqlôe3_ãmp_dúe˘‹y
 = 0;

103 *
sqlôe3_d©a_dúe˘‹y
 = 0;

136 
	$sqlôe3_öôülize
(){

137 
	`MUTEX_LOGIC
–
sqlôe3_muãx
 *
pMa°î
; )

138 
rc
;

139 #ifde‡
SQLITE_EXTRA_INIT


140 
bRunExåaInô
 = 0;

143 #ifde‡
SQLITE_OMIT_WSD


144 
rc
 = 
	`sqlôe3_wsd_öô
(4096, 24);

145 if–
rc
!=
SQLITE_OK
 ){

146  
rc
;

153 
	`as£π
–
SQLITE_PTRSIZE
==(*) );

160 if–
sqlôe3GlobÆC⁄fig
.
isInô
 )  
SQLITE_OK
;

170 
rc
 = 
	`sqlôe3MuãxInô
();

171 if–
rc
 ) Ñc;

179 
	`MUTEX_LOGIC
–
pMa°î
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
); )

180 
	`sqlôe3_muãx_íãr
(
pMa°î
);

181 
sqlôe3GlobÆC⁄fig
.
isMuãxInô
 = 1;

182 if–!
sqlôe3GlobÆC⁄fig
.
isMÆlocInô
 ){

183 
rc
 = 
	`sqlôe3MÆlocInô
();

185 if–
rc
==
SQLITE_OK
 ){

186 
sqlôe3GlobÆC⁄fig
.
isMÆlocInô
 = 1;

187 if–!
sqlôe3GlobÆC⁄fig
.
pInôMuãx
 ){

188 
sqlôe3GlobÆC⁄fig
.
pInôMuãx
 =

189 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_RECURSIVE
);

190 if–
sqlôe3GlobÆC⁄fig
.
bC‹eMuãx
 && !sqlôe3GlobÆC⁄fig.
pInôMuãx
 ){

191 
rc
 = 
SQLITE_NOMEM_BKPT
;

195 if–
rc
==
SQLITE_OK
 ){

196 
sqlôe3GlobÆC⁄fig
.
nRefInôMuãx
++;

198 
	`sqlôe3_muãx_Àave
(
pMa°î
);

203 if–
rc
!=
SQLITE_OK
 ){

204  
rc
;

220 
	`sqlôe3_muãx_íãr
(
sqlôe3GlobÆC⁄fig
.
pInôMuãx
);

221 if–
sqlôe3GlobÆC⁄fig
.
isInô
==0 && sqlôe3GlobÆC⁄fig.
öProgªss
==0 ){

222 
sqlôe3GlobÆC⁄fig
.
öProgªss
 = 1;

223 #ifde‡
SQLITE_ENABLE_SQLLOG


225 
	`sqlôe3_öô_sqŒog
();

226 
	`sqlôe3_öô_sqŒog
();

229 
	`mem£t
(&
sqlôe3BuûtöFun˘i⁄s
, 0, (sqlite3BuiltinFunctions));

230 
	`sqlôe3Regi°îBuûtöFun˘i⁄s
();

231 if–
sqlôe3GlobÆC⁄fig
.
isPCacheInô
==0 ){

232 
rc
 = 
	`sqlôe3PˇcheInôülize
();

234 if–
rc
==
SQLITE_OK
 ){

235 
sqlôe3GlobÆC⁄fig
.
isPCacheInô
 = 1;

236 
rc
 = 
	`sqlôe3OsInô
();

238 if–
rc
==
SQLITE_OK
 ){

239 
	`sqlôe3PCacheBuf„rSëup
–
sqlôe3GlobÆC⁄fig
.
pPage
,

240 
sqlôe3GlobÆC⁄fig
.
szPage
, sqlôe3GlobÆC⁄fig.
nPage
);

241 
sqlôe3GlobÆC⁄fig
.
isInô
 = 1;

242 #ifde‡
SQLITE_EXTRA_INIT


243 
bRunExåaInô
 = 1;

246 
sqlôe3GlobÆC⁄fig
.
öProgªss
 = 0;

248 
	`sqlôe3_muãx_Àave
(
sqlôe3GlobÆC⁄fig
.
pInôMuãx
);

253 
	`sqlôe3_muãx_íãr
(
pMa°î
);

254 
sqlôe3GlobÆC⁄fig
.
nRefInôMuãx
--;

255 if–
sqlôe3GlobÆC⁄fig
.
nRefInôMuãx
<=0 ){

256 
	`as£π
–
sqlôe3GlobÆC⁄fig
.
nRefInôMuãx
==0 );

257 
	`sqlôe3_muãx_‰ì
(
sqlôe3GlobÆC⁄fig
.
pInôMuãx
);

258 
sqlôe3GlobÆC⁄fig
.
pInôMuãx
 = 0;

260 
	`sqlôe3_muãx_Àave
(
pMa°î
);

267 #i‚de‡
NDEBUG


268 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


270 i‡–
rc
==
SQLITE_OK
 ){

271 
u64
 
x
 = (((u64)1)<<63)-1;

272 
y
;

273 
	`as£π
((
x
)==8);

274 
	`as£π
((
x
)==(
y
));

275 
	`mem˝y
(&
y
, &
x
, 8);

276 
	`as£π
–
	`sqlôe3IsNaN
(
y
) );

284 #ifde‡
SQLITE_EXTRA_INIT


285 if–
bRunExåaInô
 ){

286 
	`SQLITE_EXTRA_INIT
(const *);

287 
rc
 = 
	`SQLITE_EXTRA_INIT
(0);

291  
rc
;

292 
	}
}

302 
	$sqlôe3_shutdown
(){

303 #ifde‡
SQLITE_OMIT_WSD


304 
rc
 = 
	`sqlôe3_wsd_öô
(4096, 24);

305 if–
rc
!=
SQLITE_OK
 ){

306  
rc
;

310 if–
sqlôe3GlobÆC⁄fig
.
isInô
 ){

311 #ifde‡
SQLITE_EXTRA_SHUTDOWN


312 
	`SQLITE_EXTRA_SHUTDOWN
();

313 
	`SQLITE_EXTRA_SHUTDOWN
();

315 
	`sqlôe3_os_íd
();

316 
	`sqlôe3_ª£t_auto_exãnsi⁄
();

317 
sqlôe3GlobÆC⁄fig
.
isInô
 = 0;

319 if–
sqlôe3GlobÆC⁄fig
.
isPCacheInô
 ){

320 
	`sqlôe3PˇcheShutdown
();

321 
sqlôe3GlobÆC⁄fig
.
isPCacheInô
 = 0;

323 if–
sqlôe3GlobÆC⁄fig
.
isMÆlocInô
 ){

324 
	`sqlôe3MÆlocEnd
();

325 
sqlôe3GlobÆC⁄fig
.
isMÆlocInô
 = 0;

327 #i‚de‡
SQLITE_OMIT_SHUTDOWN_DIRECTORIES


335 
sqlôe3_d©a_dúe˘‹y
 = 0;

336 
sqlôe3_ãmp_dúe˘‹y
 = 0;

339 if–
sqlôe3GlobÆC⁄fig
.
isMuãxInô
 ){

340 
	`sqlôe3MuãxEnd
();

341 
sqlôe3GlobÆC⁄fig
.
isMuãxInô
 = 0;

344  
SQLITE_OK
;

345 
	}
}

356 
	$sqlôe3_c⁄fig
(
›
, ...){

357 
va_li°
 
≠
;

358 
rc
 = 
SQLITE_OK
;

362 if–
sqlôe3GlobÆC⁄fig
.
isInô
 )  
SQLITE_MISUSE_BKPT
;

364 
	`va_°¨t
(
≠
, 
›
);

365  
›
 ){

370 #i‡
	`deföed
(
SQLITE_THREADSAFE
) && SQLITE_THREADSAFE>0

371 
SQLITE_CONFIG_SINGLETHREAD
: {

374 
sqlôe3GlobÆC⁄fig
.
bC‹eMuãx
 = 0;

375 
sqlôe3GlobÆC⁄fig
.
bFuŒMuãx
 = 0;

379 #i‡
	`deföed
(
SQLITE_THREADSAFE
) && SQLITE_THREADSAFE>0

380 
SQLITE_CONFIG_MULTITHREAD
: {

383 
sqlôe3GlobÆC⁄fig
.
bC‹eMuãx
 = 1;

384 
sqlôe3GlobÆC⁄fig
.
bFuŒMuãx
 = 0;

388 #i‡
	`deföed
(
SQLITE_THREADSAFE
) && SQLITE_THREADSAFE>0

389 
SQLITE_CONFIG_SERIALIZED
: {

392 
sqlôe3GlobÆC⁄fig
.
bC‹eMuãx
 = 1;

393 
sqlôe3GlobÆC⁄fig
.
bFuŒMuãx
 = 1;

397 #i‡
	`deföed
(
SQLITE_THREADSAFE
) && SQLITE_THREADSAFE>0

398 
SQLITE_CONFIG_MUTEX
: {

400 
sqlôe3GlobÆC⁄fig
.
muãx
 = *
	`va_¨g
(
≠
, 
sqlôe3_muãx_mëhods
*);

404 #i‡
	`deföed
(
SQLITE_THREADSAFE
) && SQLITE_THREADSAFE>0

405 
SQLITE_CONFIG_GETMUTEX
: {

407 *
	`va_¨g
(
≠
, 
sqlôe3_muãx_mëhods
*Ë
sqlôe3GlobÆC⁄fig
.
muãx
;

412 
SQLITE_CONFIG_MALLOC
: {

418 
sqlôe3GlobÆC⁄fig
.
m
 = *
	`va_¨g
(
≠
, 
sqlôe3_mem_mëhods
*);

421 
SQLITE_CONFIG_GETMALLOC
: {

426 if–
sqlôe3GlobÆC⁄fig
.
m
.
xMÆloc
==0 ) 
	`sqlôe3MemSëDeÁu…
();

427 *
	`va_¨g
(
≠
, 
sqlôe3_mem_mëhods
*Ë
sqlôe3GlobÆC⁄fig
.
m
;

430 
SQLITE_CONFIG_MEMSTATUS
: {

434 
sqlôe3GlobÆC⁄fig
.
bMem°©
 = 
	`va_¨g
(
≠
, );

437 
SQLITE_CONFIG_SCRATCH
: {

442 
sqlôe3GlobÆC⁄fig
.
pS¸©ch
 = 
	`va_¨g
(
≠
, *);

443 
sqlôe3GlobÆC⁄fig
.
szS¸©ch
 = 
	`va_¨g
(
≠
, );

444 
sqlôe3GlobÆC⁄fig
.
nS¸©ch
 = 
	`va_¨g
(
≠
, );

447 
SQLITE_CONFIG_PAGECACHE
: {

452 
sqlôe3GlobÆC⁄fig
.
pPage
 = 
	`va_¨g
(
≠
, *);

453 
sqlôe3GlobÆC⁄fig
.
szPage
 = 
	`va_¨g
(
≠
, );

454 
sqlôe3GlobÆC⁄fig
.
nPage
 = 
	`va_¨g
(
≠
, );

457 
SQLITE_CONFIG_PCACHE_HDRSZ
: {

462 *
	`va_¨g
(
≠
, *) =

463 
	`sqlôe3HódîSizeBåì
() +

464 
	`sqlôe3HódîSizePˇche
() +

465 
	`sqlôe3HódîSizePˇche1
();

469 
SQLITE_CONFIG_PCACHE
: {

473 
SQLITE_CONFIG_GETPCACHE
: {

475 
rc
 = 
SQLITE_ERROR
;

479 
SQLITE_CONFIG_PCACHE2
: {

484 
sqlôe3GlobÆC⁄fig
.
pˇche2
 = *
	`va_¨g
(
≠
, 
sqlôe3_pˇche_mëhods2
*);

487 
SQLITE_CONFIG_GETPCACHE2
: {

492 if–
sqlôe3GlobÆC⁄fig
.
pˇche2
.
xInô
==0 ){

493 
	`sqlôe3PCacheSëDeÁu…
();

495 *
	`va_¨g
(
≠
, 
sqlôe3_pˇche_mëhods2
*Ë
sqlôe3GlobÆC⁄fig
.
pˇche2
;

502 #i‡
	`deföed
(
SQLITE_ENABLE_MEMSYS3
Ë|| deföed(
SQLITE_ENABLE_MEMSYS5
)

503 
SQLITE_CONFIG_HEAP
: {

508 
sqlôe3GlobÆC⁄fig
.
pHóp
 = 
	`va_¨g
(
≠
, *);

509 
sqlôe3GlobÆC⁄fig
.
nHóp
 = 
	`va_¨g
(
≠
, );

510 
sqlôe3GlobÆC⁄fig
.
mnReq
 = 
	`va_¨g
(
≠
, );

512 if–
sqlôe3GlobÆC⁄fig
.
mnReq
<1 ){

513 
sqlôe3GlobÆC⁄fig
.
mnReq
 = 1;

514 }if–
sqlôe3GlobÆC⁄fig
.
mnReq
>(1<<12) ){

516 
sqlôe3GlobÆC⁄fig
.
mnReq
 = (1<<12);

519 if–
sqlôe3GlobÆC⁄fig
.
pHóp
==0 ){

528 
	`mem£t
(&
sqlôe3GlobÆC⁄fig
.
m
, 0, (sqlite3GlobalConfig.m));

533 #ifde‡
SQLITE_ENABLE_MEMSYS3


534 
sqlôe3GlobÆC⁄fig
.
m
 = *
	`sqlôe3MemGëMemsys3
();

536 #ifde‡
SQLITE_ENABLE_MEMSYS5


537 
sqlôe3GlobÆC⁄fig
.
m
 = *
	`sqlôe3MemGëMemsys5
();

544 
SQLITE_CONFIG_LOOKASIDE
: {

545 
sqlôe3GlobÆC⁄fig
.
szLookaside
 = 
	`va_¨g
(
≠
, );

546 
sqlôe3GlobÆC⁄fig
.
nLookaside
 = 
	`va_¨g
(
≠
, );

554 
SQLITE_CONFIG_LOG
: {

559 (*
	tLOGFUNC_t
)(*,,const *);

560 
sqlôe3GlobÆC⁄fig
.
xLog
 = 
	`va_¨g
(
≠
, 
LOGFUNC_t
);

561 
sqlôe3GlobÆC⁄fig
.
pLogArg
 = 
	`va_¨g
(
≠
, *);

570 
SQLITE_CONFIG_URI
: {

575 
sqlôe3GlobÆC⁄fig
.
bO≥nUri
 = 
	`va_¨g
(
≠
, );

579 
SQLITE_CONFIG_COVERING_INDEX_SCAN
: {

584 
sqlôe3GlobÆC⁄fig
.
bU£Cis
 = 
	`va_¨g
(
≠
, );

588 #ifde‡
SQLITE_ENABLE_SQLLOG


589 
SQLITE_CONFIG_SQLLOG
: {

590 (*
	tSQLLOGFUNC_t
)(*, 
	tsqlôe3
*, const *, );

591 
sqlôe3GlobÆC⁄fig
.
xSqŒog
 = 
	`va_¨g
(
≠
, 
SQLLOGFUNC_t
);

592 
sqlôe3GlobÆC⁄fig
.
pSqŒogArg
 = 
	`va_¨g
(
≠
, *);

597 
SQLITE_CONFIG_MMAP_SIZE
: {

602 
sqlôe3_öt64
 
szMm≠
 = 
	`va_¨g
(
≠
, sqlite3_int64);

603 
sqlôe3_öt64
 
mxMm≠
 = 
	`va_¨g
(
≠
, sqlite3_int64);

612 if–
mxMm≠
<0 || mxMm≠>
SQLITE_MAX_MMAP_SIZE
 ){

613 
mxMm≠
 = 
SQLITE_MAX_MMAP_SIZE
;

615 if–
szMm≠
<0 ) szMm≠ = 
SQLITE_DEFAULT_MMAP_SIZE
;

616 if–
szMm≠
>
mxMm≠
) szMmap = mxMmap;

617 
sqlôe3GlobÆC⁄fig
.
mxMm≠
 = mxMmap;

618 
sqlôe3GlobÆC⁄fig
.
szMm≠
 = szMmap;

622 #i‡
SQLITE_OS_WIN
 && 
	`deföed
(
SQLITE_WIN32_MALLOC
)

623 
SQLITE_CONFIG_WIN32_HEAPSIZE
: {

627 
sqlôe3GlobÆC⁄fig
.
nHóp
 = 
	`va_¨g
(
≠
, );

632 
SQLITE_CONFIG_PMASZ
: {

633 
sqlôe3GlobÆC⁄fig
.
szPma
 = 
	`va_¨g
(
≠
, );

637 
SQLITE_CONFIG_STMTJRNL_SPILL
: {

638 
sqlôe3GlobÆC⁄fig
.
nStmtSpûl
 = 
	`va_¨g
(
≠
, );

643 
rc
 = 
SQLITE_ERROR
;

647 
	`va_íd
(
≠
);

648  
rc
;

649 
	}
}

662 
	$£tupLookaside
(
sqlôe3
 *
db
, *
pBuf
, 
sz
, 
˙t
){

663 #i‚de‡
SQLITE_OMIT_LOOKASIDE


664 *
pSèπ
;

665 if–
db
->
lookaside
.
nOut
 ){

666  
SQLITE_BUSY
;

672 if–
db
->
lookaside
.
bMÆlo˚d
 ){

673 
	`sqlôe3_‰ì
(
db
->
lookaside
.
pSèπ
);

678 
sz
 = 
	`ROUNDDOWN8
(sz);

679 if–
sz
<=()(
LookasideSlŸ
*) ) sz = 0;

680 if–
˙t
<0 ) cnt = 0;

681 if–
sz
==0 || 
˙t
==0 ){

682 
sz
 = 0;

683 
pSèπ
 = 0;

684 }if–
pBuf
==0 ){

685 
	`sqlôe3BegöBíignMÆloc
();

686 
pSèπ
 = 
	`sqlôe3MÆloc
–
sz
*
˙t
 );

687 
	`sqlôe3EndBíignMÆloc
();

688 if–
pSèπ
 ) 
˙t
 = 
	`sqlôe3MÆlocSize
’Sèπ)/
sz
;

690 
pSèπ
 = 
pBuf
;

692 
db
->
lookaside
.
pSèπ
 =ÖStart;

693 
db
->
lookaside
.
pFªe
 = 0;

694 
db
->
lookaside
.
sz
 = (
u16
)sz;

695 if–
pSèπ
 ){

696 
i
;

697 
LookasideSlŸ
 *
p
;

698 
	`as£π
–
sz
 > ()(
LookasideSlŸ
*) );

699 
p
 = (
LookasideSlŸ
*)
pSèπ
;

700 
i
=
˙t
-1; i>=0; i--){

701 
p
->
pNext
 = 
db
->
lookaside
.
pFªe
;

702 
db
->
lookaside
.
pFªe
 = 
p
;

703 
p
 = (
LookasideSlŸ
*)&((
u8
*Ì)[
sz
];

705 
db
->
lookaside
.
pEnd
 = 
p
;

706 
db
->
lookaside
.
bDißbÀ
 = 0;

707 
db
->
lookaside
.
bMÆlo˚d
 = 
pBuf
==0 ?1:0;

709 
db
->
lookaside
.
pSèπ
 = db;

710 
db
->
lookaside
.
pEnd
 = db;

711 
db
->
lookaside
.
bDißbÀ
 = 1;

712 
db
->
lookaside
.
bMÆlo˚d
 = 0;

715  
SQLITE_OK
;

716 
	}
}

721 
sqlôe3_muãx
 *
	$sqlôe3_db_muãx
(
sqlôe3
 *
db
){

722 #ifde‡
SQLITE_ENABLE_API_ARMOR


723 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

724 ()
SQLITE_MISUSE_BKPT
;

728  
db
->
muãx
;

729 
	}
}

735 
	$sqlôe3_db_ªÀa£_mem‹y
(
sqlôe3
 *
db
){

736 
i
;

738 #ifde‡
SQLITE_ENABLE_API_ARMOR


739 if–!
	`sqlôe3Sa„tyCheckOk
(
db
ËË 
SQLITE_MISUSE_BKPT
;

741 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

742 
	`sqlôe3BåìE¡îAŒ
(
db
);

743 
i
=0; i<
db
->
nDb
; i++){

744 
Båì
 *
pBt
 = 
db
->
aDb
[
i
].pBt;

745 if–
pBt
 ){

746 
Pagî
 *
pPagî
 = 
	`sqlôe3BåìPagî
(
pBt
);

747 
	`sqlôe3PagîShrök
(
pPagî
);

750 
	`sqlôe3BåìLóveAŒ
(
db
);

751 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

752  
SQLITE_OK
;

753 
	}
}

759 
	$sqlôe3_db_ˇcheÊush
(
sqlôe3
 *
db
){

760 
i
;

761 
rc
 = 
SQLITE_OK
;

762 
bSìnBusy
 = 0;

764 #ifde‡
SQLITE_ENABLE_API_ARMOR


765 if–!
	`sqlôe3Sa„tyCheckOk
(
db
ËË 
SQLITE_MISUSE_BKPT
;

767 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

768 
	`sqlôe3BåìE¡îAŒ
(
db
);

769 
i
=0; 
rc
==
SQLITE_OK
 && i<
db
->
nDb
; i++){

770 
Båì
 *
pBt
 = 
db
->
aDb
[
i
].pBt;

771 if–
pBt
 && 
	`sqlôe3BåìIsInTøns
(pBt) ){

772 
Pagî
 *
pPagî
 = 
	`sqlôe3BåìPagî
(
pBt
);

773 
rc
 = 
	`sqlôe3PagîFlush
(
pPagî
);

774 if–
rc
==
SQLITE_BUSY
 ){

775 
bSìnBusy
 = 1;

776 
rc
 = 
SQLITE_OK
;

780 
	`sqlôe3BåìLóveAŒ
(
db
);

781 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

782  ((
rc
==
SQLITE_OK
 && 
bSìnBusy
Ë? 
SQLITE_BUSY
 :Ñc);

783 
	}
}

788 
	$sqlôe3_db_c⁄fig
(
sqlôe3
 *
db
, 
›
, ...){

789 
va_li°
 
≠
;

790 
rc
;

791 
	`va_°¨t
(
≠
, 
›
);

792  
›
 ){

793 
SQLITE_DBCONFIG_MAINDBNAME
: {

794 
db
->
aDb
[0].
zDbSName
 = 
	`va_¨g
(
≠
,*);

795 
rc
 = 
SQLITE_OK
;

798 
SQLITE_DBCONFIG_LOOKASIDE
: {

799 *
pBuf
 = 
	`va_¨g
(
≠
, *);

800 
sz
 = 
	`va_¨g
(
≠
, );

801 
˙t
 = 
	`va_¨g
(
≠
, );

802 
rc
 = 
	`£tupLookaside
(
db
, 
pBuf
, 
sz
, 
˙t
);

807 
›
;

808 
u32
 
mask
;

809 } 
aFœgOp
[] = {

810 { 
SQLITE_DBCONFIG_ENABLE_FKEY
, 
SQLITE_F‹eignKeys
 },

811 { 
SQLITE_DBCONFIG_ENABLE_TRIGGER
, 
SQLITE_E«bÀTriggî
 },

812 { 
SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER
, 
SQLITE_Fts3Tokíizî
 },

813 { 
SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION
, 
SQLITE_LﬂdExãnsi⁄
 },

814 { 
SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE
, 
SQLITE_NoCk±OnClo£
 },

816 
i
;

817 
rc
 = 
SQLITE_ERROR
;

818 
i
=0; i<
	`AºaySize
(
aFœgOp
); i++){

819 if–
aFœgOp
[
i
].
›
==op ){

820 
⁄off
 = 
	`va_¨g
(
≠
, );

821 *
pRes
 = 
	`va_¨g
(
≠
, *);

822 
ﬁdFœgs
 = 
db
->
Êags
;

823 if–
⁄off
>0 ){

824 
db
->
Êags
 |
aFœgOp
[
i
].
mask
;

825 }if–
⁄off
==0 ){

826 
db
->
Êags
 &~
aFœgOp
[
i
].
mask
;

828 if–
ﬁdFœgs
!=
db
->
Êags
 ){

829 
	`sqlôe3ExpúePª∑ªdSèãmíts
(
db
);

831 if–
pRes
 ){

832 *
pRes
 = (
db
->
Êags
 & 
aFœgOp
[
i
].
mask
)!=0;

834 
rc
 = 
SQLITE_OK
;

841 
	`va_íd
(
≠
);

842  
rc
;

843 
	}
}

849 
	$ÆlS∑˚s
(c⁄° *
z
, 
n
){

850  
n
>0 && 
z
[n-1]==' ' ){Ç--; }

851  
n
==0;

852 
	}
}

861 
	$böCﬁlFunc
(

862 *
∑dFœg
,

863 
nKey1
, c⁄° *
pKey1
,

864 
nKey2
, c⁄° *
pKey2


866 
rc
, 
n
;

867 
n
 = 
nKey1
<
nKey2
 ?ÇKey1 :ÇKey2;

871 
rc
 = 
	`memcmp
(
pKey1
, 
pKey2
, 
n
);

872 if–
rc
==0 ){

873 if–
∑dFœg


874 && 
	`ÆlS∑˚s
(((*)
pKey1
)+
n
, 
nKey1
-n)

875 && 
	`ÆlS∑˚s
(((*)
pKey2
)+
n
, 
nKey2
-n)

883 
rc
 = 
nKey1
 - 
nKey2
;

886  
rc
;

887 
	}
}

898 
	$noˇ£CﬁœtögFunc
(

899 *
NŸU£d
,

900 
nKey1
, c⁄° *
pKey1
,

901 
nKey2
, c⁄° *
pKey2


903 
r
 = 
	`sqlôe3SåNICmp
(

904 (c⁄° *)
pKey1
, (c⁄° *)
pKey2
, (
nKey1
<
nKey2
)?nKey1:nKey2);

905 
	`UNUSED_PARAMETER
(
NŸU£d
);

906 if–0==
r
 ){

907 
r
 = 
nKey1
-
nKey2
;

909  
r
;

910 
	}
}

915 
sqlôe_öt64
 
	$sqlôe3_œ°_ö£π_rowid
(
sqlôe3
 *
db
){

916 #ifde‡
SQLITE_ENABLE_API_ARMOR


917 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

918 ()
SQLITE_MISUSE_BKPT
;

922  
db
->
œ°Rowid
;

923 
	}
}

928 
	$sqlôe3_ch™ges
(
sqlôe3
 *
db
){

929 #ifde‡
SQLITE_ENABLE_API_ARMOR


930 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

931 ()
SQLITE_MISUSE_BKPT
;

935  
db
->
nCh™ge
;

936 
	}
}

941 
	$sqlôe3_tŸÆ_ch™ges
(
sqlôe3
 *
db
){

942 #ifde‡
SQLITE_ENABLE_API_ARMOR


943 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

944 ()
SQLITE_MISUSE_BKPT
;

948  
db
->
nTŸÆCh™ge
;

949 
	}
}

956 
	$sqlôe3Clo£Savïoöts
(
sqlôe3
 *
db
){

957  
db
->
pSavïoöt
 ){

958 
Savïoöt
 *
pTmp
 = 
db
->
pSavïoöt
;

959 
db
->
pSavïoöt
 = 
pTmp
->
pNext
;

960 
	`sqlôe3DbFªe
(
db
, 
pTmp
);

962 
db
->
nSavïoöt
 = 0;

963 
db
->
nSèãmít
 = 0;

964 
db
->
isTønß˘i⁄Savïoöt
 = 0;

965 
	}
}

973 
	$fun˘i⁄De°roy
(
sqlôe3
 *
db
, 
FuncDef
 *
p
){

974 
FuncDe°ru˘‹
 *
pDe°ru˘‹
 = 
p
->
u
.pDestructor;

975 if–
pDe°ru˘‹
 ){

976 
pDe°ru˘‹
->
nRef
--;

977 if–
pDe°ru˘‹
->
nRef
==0 ){

978 
pDe°ru˘‹
->
	`xDe°roy
’De°ru˘‹->
pU£rD©a
);

979 
	`sqlôe3DbFªe
(
db
, 
pDe°ru˘‹
);

982 
	}
}

988 
	$disc⁄√˘AŒVèb
(
sqlôe3
 *
db
){

989 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


990 
i
;

991 
HashEÀm
 *
p
;

992 
	`sqlôe3BåìE¡îAŒ
(
db
);

993 
i
=0; i<
db
->
nDb
; i++){

994 
Schema
 *
pSchema
 = 
db
->
aDb
[
i
].pSchema;

995 if–
db
->
aDb
[
i
].
pSchema
 ){

996 
p
=
	`sqlôeHashFú°
(&
pSchema
->
tblHash
);Ö;Ö=
	`sqlôeHashNext
(p)){

997 
TabÀ
 *
pTab
 = (TabÀ *)
	`sqlôeHashD©a
(
p
);

998 if–
	`IsVútuÆ
(
pTab
ËË
	`sqlôe3VèbDisc⁄√˘
(
db
,ÖTab);

1002 
p
=
	`sqlôeHashFú°
(&
db
->
aModuÀ
);Ö;Ö=
	`sqlôeHashNext
(p)){

1003 
ModuÀ
 *
pMod
 = (ModuÀ *)
	`sqlôeHashD©a
(
p
);

1004 if–
pMod
->
pEpoTab
 ){

1005 
	`sqlôe3VèbDisc⁄√˘
(
db
, 
pMod
->
pEpoTab
);

1008 
	`sqlôe3VèbU∆ockLi°
(
db
);

1009 
	`sqlôe3BåìLóveAŒ
(
db
);

1011 
	`UNUSED_PARAMETER
(
db
);

1013 
	}
}

1019 
	$c⁄√˘i⁄IsBusy
(
sqlôe3
 *
db
){

1020 
j
;

1021 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

1022 if–
db
->
pVdbe
 )  1;

1023 
j
=0; j<
db
->
nDb
; j++){

1024 
Båì
 *
pBt
 = 
db
->
aDb
[
j
].pBt;

1025 if–
pBt
 && 
	`sqlôe3BåìIsInBackup
(pBt) )  1;

1028 
	}
}

1033 
	$sqlôe3Clo£
(
sqlôe3
 *
db
, 
f‹˚Zombõ
){

1034 if–!
db
 ){

1037  
SQLITE_OK
;

1039 if–!
	`sqlôe3Sa„tyCheckSickOrOk
(
db
) ){

1040  
SQLITE_MISUSE_BKPT
;

1042 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

1043 if–
db
->
mTø˚
 & 
SQLITE_TRACE_CLOSE
 ){

1044 
db
->
	`xTø˚
(
SQLITE_TRACE_CLOSE
, db->
pTø˚Arg
, db, 0);

1048 
	`disc⁄√˘AŒVèb
(
db
);

1057 
	`sqlôe3VèbRﬁlback
(
db
);

1062 if–!
f‹˚Zombõ
 && 
	`c⁄√˘i⁄IsBusy
(
db
) ){

1063 
	`sqlôe3Eº‹WôhMsg
(
db
, 
SQLITE_BUSY
, "unableÅo close dueÅo unfinalized "

1065 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

1066  
SQLITE_BUSY
;

1069 #ifde‡
SQLITE_ENABLE_SQLLOG


1070 if–
sqlôe3GlobÆC⁄fig
.
xSqŒog
 ){

1072 
sqlôe3GlobÆC⁄fig
.
	`xSqŒog
(sqlôe3GlobÆC⁄fig.
pSqŒogArg
, 
db
, 0, 2);

1078 
db
->
magic
 = 
SQLITE_MAGIC_ZOMBIE
;

1079 
	`sqlôe3LóveMuãxAndClo£Zombõ
(
db
);

1080  
SQLITE_OK
;

1081 
	}
}

1092 
	$sqlôe3_˛o£
(
sqlôe3
 *
db
){  
	`sqlôe3Clo£
(db,0); 
	}
}

1093 
	$sqlôe3_˛o£_v2
(
sqlôe3
 *
db
){  
	`sqlôe3Clo£
(db,1); 
	}
}

1104 
	$sqlôe3LóveMuãxAndClo£Zombõ
(
sqlôe3
 *
db
){

1105 
HashEÀm
 *
i
;

1106 
j
;

1112 if–
db
->
magic
!=
SQLITE_MAGIC_ZOMBIE
 || 
	`c⁄√˘i⁄IsBusy
(db) ){

1113 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

1127 
	`sqlôe3RﬁlbackAŒ
(
db
, 
SQLITE_OK
);

1130 
	`sqlôe3Clo£Savïoöts
(
db
);

1133 
j
=0; j<
db
->
nDb
; j++){

1134 
Db
 *
pDb
 = &
db
->
aDb
[
j
];

1135 if–
pDb
->
pBt
 ){

1136 
	`sqlôe3BåìClo£
(
pDb
->
pBt
);

1137 
pDb
->
pBt
 = 0;

1138 if–
j
!=1 ){

1139 
pDb
->
pSchema
 = 0;

1144 if–
db
->
aDb
[1].
pSchema
 ){

1145 
	`sqlôe3SchemaCÀ¨
(
db
->
aDb
[1].
pSchema
);

1147 
	`sqlôe3VèbU∆ockLi°
(
db
);

1150 
	`sqlôe3Cﬁœp£D©aba£Aºay
(
db
);

1151 
	`as£π
–
db
->
nDb
<=2 );

1152 
	`as£π
–
db
->
aDb
==db->
aDbSètic
 );

1157 
	`sqlôe3C⁄√˘i⁄Clo£d
(
db
);

1159 
i
=
	`sqlôeHashFú°
(&
db
->
aFunc
); i; i=
	`sqlôeHashNext
(i)){

1160 
FuncDef
 *
pNext
, *
p
;

1161 
p
 = 
	`sqlôeHashD©a
(
i
);

1163 
	`fun˘i⁄De°roy
(
db
, 
p
);

1164 
pNext
 = 
p
->pNext;

1165 
	`sqlôe3DbFªe
(
db
, 
p
);

1166 
p
 = 
pNext
;

1167 } 
p
 );

1169 
	`sqlôe3HashCÀ¨
(&
db
->
aFunc
);

1170 
i
=
	`sqlôeHashFú°
(&
db
->
aCﬁlSeq
); i; i=
	`sqlôeHashNext
(i)){

1171 
CﬁlSeq
 *
pCﬁl
 = (CﬁlSeq *)
	`sqlôeHashD©a
(
i
);

1173 
j
=0; j<3; j++){

1174 if–
pCﬁl
[
j
].
xDñ
 ){

1175 
pCﬁl
[
j
].
	`xDñ
’Cﬁl[j].
pU£r
);

1178 
	`sqlôe3DbFªe
(
db
, 
pCﬁl
);

1180 
	`sqlôe3HashCÀ¨
(&
db
->
aCﬁlSeq
);

1181 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


1182 
i
=
	`sqlôeHashFú°
(&
db
->
aModuÀ
); i; i=
	`sqlôeHashNext
(i)){

1183 
ModuÀ
 *
pMod
 = (ModuÀ *)
	`sqlôeHashD©a
(
i
);

1184 if–
pMod
->
xDe°roy
 ){

1185 
pMod
->
	`xDe°roy
’Mod->
pAux
);

1187 
	`sqlôe3VèbEp⁄ymousTabÀCÀ¨
(
db
, 
pMod
);

1188 
	`sqlôe3DbFªe
(
db
, 
pMod
);

1190 
	`sqlôe3HashCÀ¨
(&
db
->
aModuÀ
);

1193 
	`sqlôe3Eº‹
(
db
, 
SQLITE_OK
);

1194 
	`sqlôe3VÆueFªe
(
db
->
pEº
);

1195 
	`sqlôe3Clo£Exãnsi⁄s
(
db
);

1196 #i‡
SQLITE_USER_AUTHENTICATION


1197 
	`sqlôe3_‰ì
(
db
->
auth
.
zAuthU£r
);

1198 
	`sqlôe3_‰ì
(
db
->
auth
.
zAuthPW
);

1201 
db
->
magic
 = 
SQLITE_MAGIC_ERROR
;

1209 
	`sqlôe3DbFªe
(
db
, db->
aDb
[1].
pSchema
);

1210 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

1211 
db
->
magic
 = 
SQLITE_MAGIC_CLOSED
;

1212 
	`sqlôe3_muãx_‰ì
(
db
->
muãx
);

1213 
	`as£π
–
db
->
lookaside
.
nOut
==0 );

1214 if–
db
->
lookaside
.
bMÆlo˚d
 ){

1215 
	`sqlôe3_‰ì
(
db
->
lookaside
.
pSèπ
);

1217 
	`sqlôe3_‰ì
(
db
);

1218 
	}
}

1227 
	$sqlôe3RﬁlbackAŒ
(
sqlôe3
 *
db
, 
åùCode
){

1228 
i
;

1229 
öTøns
 = 0;

1230 
schemaCh™ge
;

1231 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

1232 
	`sqlôe3BegöBíignMÆloc
();

1240 
	`sqlôe3BåìE¡îAŒ
(
db
);

1241 
schemaCh™ge
 = (
db
->
Êags
 & 
SQLITE_I¡înCh™ges
)!=0 && db->
öô
.
busy
==0;

1243 
i
=0; i<
db
->
nDb
; i++){

1244 
Båì
 *
p
 = 
db
->
aDb
[
i
].
pBt
;

1245 if–
p
 ){

1246 if–
	`sqlôe3BåìIsInTøns
(
p
) ){

1247 
öTøns
 = 1;

1249 
	`sqlôe3BåìRﬁlback
(
p
, 
åùCode
, !
schemaCh™ge
);

1252 
	`sqlôe3VèbRﬁlback
(
db
);

1253 
	`sqlôe3EndBíignMÆloc
();

1255 if–(
db
->
Êags
&
SQLITE_I¡înCh™ges
)!=0 && db->
öô
.
busy
==0 ){

1256 
	`sqlôe3ExpúePª∑ªdSèãmíts
(
db
);

1257 
	`sqlôe3Re£tAŒSchemasOfC⁄√˘i⁄
(
db
);

1259 
	`sqlôe3BåìLóveAŒ
(
db
);

1262 
db
->
nDe„ºedC⁄s
 = 0;

1263 
db
->
nDe„ºedImmC⁄s
 = 0;

1264 
db
->
Êags
 &~
SQLITE_De„rFKs
;

1267 if–
db
->
xRﬁlbackCÆlback
 && (
öTøns
 || !db->
autoCommô
) ){

1268 
db
->
	`xRﬁlbackCÆlback
(db->
pRﬁlbackArg
);

1270 
	}
}

1276 #i‡
deföed
(
SQLITE_NEED_ERR_NAME
)

1277 c⁄° *
	$sqlôe3EºName
(
rc
){

1278 c⁄° *
zName
 = 0;

1279 
i
, 
‹igRc
 = 
rc
;

1280 
i
=0; i<2 && 
zName
==0; i++, 
rc
 &= 0xff){

1281  
rc
 ){

1282 
SQLITE_OK
: 
zName
 = "SQLITE_OK"; ;

1283 
SQLITE_ERROR
: 
zName
 = "SQLITE_ERROR"; ;

1284 
SQLITE_INTERNAL
: 
zName
 = "SQLITE_INTERNAL"; ;

1285 
SQLITE_PERM
: 
zName
 = "SQLITE_PERM"; ;

1286 
SQLITE_ABORT
: 
zName
 = "SQLITE_ABORT"; ;

1287 
SQLITE_ABORT_ROLLBACK
: 
zName
 = "SQLITE_ABORT_ROLLBACK"; ;

1288 
SQLITE_BUSY
: 
zName
 = "SQLITE_BUSY"; ;

1289 
SQLITE_BUSY_RECOVERY
: 
zName
 = "SQLITE_BUSY_RECOVERY"; ;

1290 
SQLITE_BUSY_SNAPSHOT
: 
zName
 = "SQLITE_BUSY_SNAPSHOT"; ;

1291 
SQLITE_LOCKED
: 
zName
 = "SQLITE_LOCKED"; ;

1292 
SQLITE_LOCKED_SHAREDCACHE
: 
zName
 = "SQLITE_LOCKED_SHAREDCACHE";;

1293 
SQLITE_NOMEM
: 
zName
 = "SQLITE_NOMEM"; ;

1294 
SQLITE_READONLY
: 
zName
 = "SQLITE_READONLY"; ;

1295 
SQLITE_READONLY_RECOVERY
: 
zName
 = "SQLITE_READONLY_RECOVERY"; ;

1296 
SQLITE_READONLY_CANTLOCK
: 
zName
 = "SQLITE_READONLY_CANTLOCK"; ;

1297 
SQLITE_READONLY_ROLLBACK
: 
zName
 = "SQLITE_READONLY_ROLLBACK"; ;

1298 
SQLITE_READONLY_DBMOVED
: 
zName
 = "SQLITE_READONLY_DBMOVED"; ;

1299 
SQLITE_INTERRUPT
: 
zName
 = "SQLITE_INTERRUPT"; ;

1300 
SQLITE_IOERR
: 
zName
 = "SQLITE_IOERR"; ;

1301 
SQLITE_IOERR_READ
: 
zName
 = "SQLITE_IOERR_READ"; ;

1302 
SQLITE_IOERR_SHORT_READ
: 
zName
 = "SQLITE_IOERR_SHORT_READ"; ;

1303 
SQLITE_IOERR_WRITE
: 
zName
 = "SQLITE_IOERR_WRITE"; ;

1304 
SQLITE_IOERR_FSYNC
: 
zName
 = "SQLITE_IOERR_FSYNC"; ;

1305 
SQLITE_IOERR_DIR_FSYNC
: 
zName
 = "SQLITE_IOERR_DIR_FSYNC"; ;

1306 
SQLITE_IOERR_TRUNCATE
: 
zName
 = "SQLITE_IOERR_TRUNCATE"; ;

1307 
SQLITE_IOERR_FSTAT
: 
zName
 = "SQLITE_IOERR_FSTAT"; ;

1308 
SQLITE_IOERR_UNLOCK
: 
zName
 = "SQLITE_IOERR_UNLOCK"; ;

1309 
SQLITE_IOERR_RDLOCK
: 
zName
 = "SQLITE_IOERR_RDLOCK"; ;

1310 
SQLITE_IOERR_DELETE
: 
zName
 = "SQLITE_IOERR_DELETE"; ;

1311 
SQLITE_IOERR_NOMEM
: 
zName
 = "SQLITE_IOERR_NOMEM"; ;

1312 
SQLITE_IOERR_ACCESS
: 
zName
 = "SQLITE_IOERR_ACCESS"; ;

1313 
SQLITE_IOERR_CHECKRESERVEDLOCK
:

1314 
zName
 = "SQLITE_IOERR_CHECKRESERVEDLOCK"; ;

1315 
SQLITE_IOERR_LOCK
: 
zName
 = "SQLITE_IOERR_LOCK"; ;

1316 
SQLITE_IOERR_CLOSE
: 
zName
 = "SQLITE_IOERR_CLOSE"; ;

1317 
SQLITE_IOERR_DIR_CLOSE
: 
zName
 = "SQLITE_IOERR_DIR_CLOSE"; ;

1318 
SQLITE_IOERR_SHMOPEN
: 
zName
 = "SQLITE_IOERR_SHMOPEN"; ;

1319 
SQLITE_IOERR_SHMSIZE
: 
zName
 = "SQLITE_IOERR_SHMSIZE"; ;

1320 
SQLITE_IOERR_SHMLOCK
: 
zName
 = "SQLITE_IOERR_SHMLOCK"; ;

1321 
SQLITE_IOERR_SHMMAP
: 
zName
 = "SQLITE_IOERR_SHMMAP"; ;

1322 
SQLITE_IOERR_SEEK
: 
zName
 = "SQLITE_IOERR_SEEK"; ;

1323 
SQLITE_IOERR_DELETE_NOENT
: 
zName
 = "SQLITE_IOERR_DELETE_NOENT";;

1324 
SQLITE_IOERR_MMAP
: 
zName
 = "SQLITE_IOERR_MMAP"; ;

1325 
SQLITE_IOERR_GETTEMPPATH
: 
zName
 = "SQLITE_IOERR_GETTEMPPATH"; ;

1326 
SQLITE_IOERR_CONVPATH
: 
zName
 = "SQLITE_IOERR_CONVPATH"; ;

1327 
SQLITE_CORRUPT
: 
zName
 = "SQLITE_CORRUPT"; ;

1328 
SQLITE_CORRUPT_VTAB
: 
zName
 = "SQLITE_CORRUPT_VTAB"; ;

1329 
SQLITE_NOTFOUND
: 
zName
 = "SQLITE_NOTFOUND"; ;

1330 
SQLITE_FULL
: 
zName
 = "SQLITE_FULL"; ;

1331 
SQLITE_CANTOPEN
: 
zName
 = "SQLITE_CANTOPEN"; ;

1332 
SQLITE_CANTOPEN_NOTEMPDIR
: 
zName
 = "SQLITE_CANTOPEN_NOTEMPDIR";;

1333 
SQLITE_CANTOPEN_ISDIR
: 
zName
 = "SQLITE_CANTOPEN_ISDIR"; ;

1334 
SQLITE_CANTOPEN_FULLPATH
: 
zName
 = "SQLITE_CANTOPEN_FULLPATH"; ;

1335 
SQLITE_CANTOPEN_CONVPATH
: 
zName
 = "SQLITE_CANTOPEN_CONVPATH"; ;

1336 
SQLITE_PROTOCOL
: 
zName
 = "SQLITE_PROTOCOL"; ;

1337 
SQLITE_EMPTY
: 
zName
 = "SQLITE_EMPTY"; ;

1338 
SQLITE_SCHEMA
: 
zName
 = "SQLITE_SCHEMA"; ;

1339 
SQLITE_TOOBIG
: 
zName
 = "SQLITE_TOOBIG"; ;

1340 
SQLITE_CONSTRAINT
: 
zName
 = "SQLITE_CONSTRAINT"; ;

1341 
SQLITE_CONSTRAINT_UNIQUE
: 
zName
 = "SQLITE_CONSTRAINT_UNIQUE"; ;

1342 
SQLITE_CONSTRAINT_TRIGGER
: 
zName
 = "SQLITE_CONSTRAINT_TRIGGER";;

1343 
SQLITE_CONSTRAINT_FOREIGNKEY
:

1344 
zName
 = "SQLITE_CONSTRAINT_FOREIGNKEY"; ;

1345 
SQLITE_CONSTRAINT_CHECK
: 
zName
 = "SQLITE_CONSTRAINT_CHECK"; ;

1346 
SQLITE_CONSTRAINT_PRIMARYKEY
:

1347 
zName
 = "SQLITE_CONSTRAINT_PRIMARYKEY"; ;

1348 
SQLITE_CONSTRAINT_NOTNULL
: 
zName
 = "SQLITE_CONSTRAINT_NOTNULL";;

1349 
SQLITE_CONSTRAINT_COMMITHOOK
:

1350 
zName
 = "SQLITE_CONSTRAINT_COMMITHOOK"; ;

1351 
SQLITE_CONSTRAINT_VTAB
: 
zName
 = "SQLITE_CONSTRAINT_VTAB"; ;

1352 
SQLITE_CONSTRAINT_FUNCTION
:

1353 
zName
 = "SQLITE_CONSTRAINT_FUNCTION"; ;

1354 
SQLITE_CONSTRAINT_ROWID
: 
zName
 = "SQLITE_CONSTRAINT_ROWID"; ;

1355 
SQLITE_MISMATCH
: 
zName
 = "SQLITE_MISMATCH"; ;

1356 
SQLITE_MISUSE
: 
zName
 = "SQLITE_MISUSE"; ;

1357 
SQLITE_NOLFS
: 
zName
 = "SQLITE_NOLFS"; ;

1358 
SQLITE_AUTH
: 
zName
 = "SQLITE_AUTH"; ;

1359 
SQLITE_FORMAT
: 
zName
 = "SQLITE_FORMAT"; ;

1360 
SQLITE_RANGE
: 
zName
 = "SQLITE_RANGE"; ;

1361 
SQLITE_NOTADB
: 
zName
 = "SQLITE_NOTADB"; ;

1362 
SQLITE_ROW
: 
zName
 = "SQLITE_ROW"; ;

1363 
SQLITE_NOTICE
: 
zName
 = "SQLITE_NOTICE"; ;

1364 
SQLITE_NOTICE_RECOVER_WAL
: 
zName
 = "SQLITE_NOTICE_RECOVER_WAL";;

1365 
SQLITE_NOTICE_RECOVER_ROLLBACK
:

1366 
zName
 = "SQLITE_NOTICE_RECOVER_ROLLBACK"; ;

1367 
SQLITE_WARNING
: 
zName
 = "SQLITE_WARNING"; ;

1368 
SQLITE_WARNING_AUTOINDEX
: 
zName
 = "SQLITE_WARNING_AUTOINDEX"; ;

1369 
SQLITE_DONE
: 
zName
 = "SQLITE_DONE"; ;

1372 if–
zName
==0 ){

1373 
zBuf
[50];

1374 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "SQLITE_UNKNOWN(%d)", 
‹igRc
);

1375 
zName
 = 
zBuf
;

1377  
zName
;

1378 
	}
}

1385 c⁄° *
	$sqlôe3EºSå
(
rc
){

1386 c⁄° * c⁄° 
aMsg
[] = {

1415 c⁄° *
zEº
 = "unknownÉrror";

1416  
rc
 ){

1417 
SQLITE_ABORT_ROLLBACK
: {

1418 
zEº
 = "abort dueÅo ROLLBACK";

1422 
rc
 &= 0xff;

1423 if–
	`ALWAYS
(
rc
>=0Ë&&Ñc<
	`AºaySize
(
aMsg
) &&áMsg[rc]!=0 ){

1424 
zEº
 = 
aMsg
[
rc
];

1429  
zEº
;

1430 
	}
}

1438 
	$sqlôeDeÁu…BusyCÆlback
(

1439 *
±r
,

1440 
cou¡


1442 #i‡
SQLITE_OS_WIN
 || 
HAVE_USLEEP


1443 c⁄° 
u8
 
dñays
[] =

1445 c⁄° 
u8
 
tŸÆs
[] =

1447 
	#NDELAY
 
	`AºaySize
(
dñays
)

	)

1448 
sqlôe3
 *
db
 = (sqlôe3 *)
±r
;

1449 
timeout
 = 
db
->
busyTimeout
;

1450 
dñay
, 
¥i‹
;

1452 
	`as£π
–
cou¡
>=0 );

1453 if–
cou¡
 < 
NDELAY
 ){

1454 
dñay
 = 
dñays
[
cou¡
];

1455 
¥i‹
 = 
tŸÆs
[
cou¡
];

1457 
dñay
 = 
dñays
[
NDELAY
-1];

1458 
¥i‹
 = 
tŸÆs
[
NDELAY
-1] + 
dñay
*(
cou¡
-(NDELAY-1));

1460 if–
¥i‹
 + 
dñay
 > 
timeout
 ){

1461 
dñay
 = 
timeout
 - 
¥i‹
;

1462 if–
dñay
<=0 )  0;

1464 
	`sqlôe3OsSÀï
(
db
->
pVfs
, 
dñay
*1000);

1467 
sqlôe3
 *
db
 = (sqlôe3 *)
±r
;

1468 
timeout
 = ((
sqlôe3
 *)
±r
)->
busyTimeout
;

1469 if–(
cou¡
+1)*1000 > 
timeout
 ){

1472 
	`sqlôe3OsSÀï
(
db
->
pVfs
, 1000000);

1475 
	}
}

1484 
	$sqlôe3InvokeBusyH™dÀr
(
BusyH™dÀr
 *
p
){

1485 
rc
;

1486 if–
	`NEVER
(
p
==0Ë||Ö->
xFunc
==0 ||Ö->
nBusy
<0 )  0;

1487 
rc
 = 
p
->
	`xFunc
’->
pArg
,Ö->
nBusy
);

1488 if–
rc
==0 ){

1489 
p
->
nBusy
 = -1;

1491 
p
->
nBusy
++;

1493  
rc
;

1494 
	}
}

1500 
	$sqlôe3_busy_h™dÀr
(

1501 
sqlôe3
 *
db
,

1502 (*
xBusy
)(*,),

1503 *
pArg


1505 #ifde‡
SQLITE_ENABLE_API_ARMOR


1506 if–!
	`sqlôe3Sa„tyCheckOk
(
db
ËË 
SQLITE_MISUSE_BKPT
;

1508 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

1509 
db
->
busyH™dÀr
.
xFunc
 = 
xBusy
;

1510 
db
->
busyH™dÀr
.
pArg
 =ÖArg;

1511 
db
->
busyH™dÀr
.
nBusy
 = 0;

1512 
db
->
busyTimeout
 = 0;

1513 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

1514  
SQLITE_OK
;

1515 
	}
}

1517 #i‚de‡
SQLITE_OMIT_PROGRESS_CALLBACK


1523 
	$sqlôe3_¥ogªss_h™dÀr
(

1524 
sqlôe3
 *
db
,

1525 
nOps
,

1526 (*
xProgªss
)(*),

1527 *
pArg


1529 #ifde‡
SQLITE_ENABLE_API_ARMOR


1530 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

1531 ()
SQLITE_MISUSE_BKPT
;

1535 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

1536 if–
nOps
>0 ){

1537 
db
->
xProgªss
 = xProgress;

1538 
db
->
nProgªssOps
 = ()
nOps
;

1539 
db
->
pProgªssArg
 = 
pArg
;

1541 
db
->
xProgªss
 = 0;

1542 
db
->
nProgªssOps
 = 0;

1543 
db
->
pProgªssArg
 = 0;

1545 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

1546 
	}
}

1554 
	$sqlôe3_busy_timeout
(
sqlôe3
 *
db
, 
ms
){

1555 #ifde‡
SQLITE_ENABLE_API_ARMOR


1556 if–!
	`sqlôe3Sa„tyCheckOk
(
db
ËË 
SQLITE_MISUSE_BKPT
;

1558 if–
ms
>0 ){

1559 
	`sqlôe3_busy_h™dÀr
(
db
, 
sqlôeDeÁu…BusyCÆlback
, (*)db);

1560 
db
->
busyTimeout
 = 
ms
;

1562 
	`sqlôe3_busy_h™dÀr
(
db
, 0, 0);

1564  
SQLITE_OK
;

1565 
	}
}

1570 
	$sqlôe3_öãºu±
(
sqlôe3
 *
db
){

1571 #ifde‡
SQLITE_ENABLE_API_ARMOR


1572 if–!
	`sqlôe3Sa„tyCheckOk
(
db
Ë&& (db==0 || db->
magic
!=
SQLITE_MAGIC_ZOMBIE
) ){

1573 ()
SQLITE_MISUSE_BKPT
;

1577 
db
->
u1
.
isI¡îru±ed
 = 1;

1578 
	}
}

1587 
	$sqlôe3Cª©eFunc
(

1588 
sqlôe3
 *
db
,

1589 c⁄° *
zFun˘i⁄Name
,

1590 
nArg
,

1591 
íc
,

1592 *
pU£rD©a
,

1593 (*
xSFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
 **),

1594 (*
xSãp
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
 **),

1595 (*
xFöÆ
)(
sqlôe3_c⁄ãxt
*),

1596 
FuncDe°ru˘‹
 *
pDe°ru˘‹


1598 
FuncDef
 *
p
;

1599 
nName
;

1600 
exåaFœgs
;

1602 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

1603 if–
zFun˘i⁄Name
==0 ||

1604 (
xSFunc
 && (
xFöÆ
 || 
xSãp
)) ||

1605 (!
xSFunc
 && (
xFöÆ
 && !
xSãp
)) ||

1606 (!
xSFunc
 && (!
xFöÆ
 && 
xSãp
)) ||

1607 (
nArg
<-1 ||ÇArg>
SQLITE_MAX_FUNCTION_ARG
) ||

1608 (255<(
nName
 = 
	`sqlôe3SåÀn30
–
zFun˘i⁄Name
))) ){

1609  
SQLITE_MISUSE_BKPT
;

1612 
	`as£π
–
SQLITE_FUNC_CONSTANT
==
SQLITE_DETERMINISTIC
 );

1613 
exåaFœgs
 = 
íc
 & 
SQLITE_DETERMINISTIC
;

1614 
íc
 &(
SQLITE_FUNC_ENCMASK
|
SQLITE_ANY
);

1616 #i‚de‡
SQLITE_OMIT_UTF16


1624 if–
íc
==
SQLITE_UTF16
 ){

1625 
íc
 = 
SQLITE_UTF16NATIVE
;

1626 }if–
íc
==
SQLITE_ANY
 ){

1627 
rc
;

1628 
rc
 = 
	`sqlôe3Cª©eFunc
(
db
, 
zFun˘i⁄Name
, 
nArg
, 
SQLITE_UTF8
|
exåaFœgs
,

1629 
pU£rD©a
, 
xSFunc
, 
xSãp
, 
xFöÆ
, 
pDe°ru˘‹
);

1630 if–
rc
==
SQLITE_OK
 ){

1631 
rc
 = 
	`sqlôe3Cª©eFunc
(
db
, 
zFun˘i⁄Name
, 
nArg
, 
SQLITE_UTF16LE
|
exåaFœgs
,

1632 
pU£rD©a
, 
xSFunc
, 
xSãp
, 
xFöÆ
, 
pDe°ru˘‹
);

1634 if–
rc
!=
SQLITE_OK
 ){

1635  
rc
;

1637 
íc
 = 
SQLITE_UTF16BE
;

1640 
íc
 = 
SQLITE_UTF8
;

1648 
p
 = 
	`sqlôe3FödFun˘i⁄
(
db
, 
zFun˘i⁄Name
, 
nArg
, (
u8
)
íc
, 0);

1649 if–
p
 && (p->
funcFœgs
 & 
SQLITE_FUNC_ENCMASK
)==
íc
 &&Ö->
nArg
==nArg ){

1650 if–
db
->
nVdbeA˘ive
 ){

1651 
	`sqlôe3Eº‹WôhMsg
(
db
, 
SQLITE_BUSY
,

1653 
	`as£π
–!
db
->
mÆlocFaûed
 );

1654  
SQLITE_BUSY
;

1656 
	`sqlôe3ExpúePª∑ªdSèãmíts
(
db
);

1660 
p
 = 
	`sqlôe3FödFun˘i⁄
(
db
, 
zFun˘i⁄Name
, 
nArg
, (
u8
)
íc
, 1);

1661 
	`as£π
(
p
 || 
db
->
mÆlocFaûed
);

1662 if–!
p
 ){

1663  
SQLITE_NOMEM_BKPT
;

1668 
	`fun˘i⁄De°roy
(
db
, 
p
);

1670 if–
pDe°ru˘‹
 ){

1671 
pDe°ru˘‹
->
nRef
++;

1673 
p
->
u
.
pDe°ru˘‹
 =ÖDestructor;

1674 
p
->
funcFœgs
 = (p->funcFœg†& 
SQLITE_FUNC_ENCMASK
Ë| 
exåaFœgs
;

1675 
	`ã°ˇ£
–
p
->
funcFœgs
 & 
SQLITE_DETERMINISTIC
 );

1676 
p
->
xSFunc
 = xSFun¯? xSFun¯: 
xSãp
;

1677 
p
->
xFöÆize
 = 
xFöÆ
;

1678 
p
->
pU£rD©a
 =ÖUserData;

1679 
p
->
nArg
 = (
u16
)nArg;

1680  
SQLITE_OK
;

1681 
	}
}

1686 
	$sqlôe3_¸óã_fun˘i⁄
(

1687 
sqlôe3
 *
db
,

1688 c⁄° *
zFunc
,

1689 
nArg
,

1690 
íc
,

1691 *
p
,

1692 (*
xSFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
 **),

1693 (*
xSãp
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
 **),

1694 (*
xFöÆ
)(
sqlôe3_c⁄ãxt
*)

1696  
	`sqlôe3_¸óã_fun˘i⁄_v2
(
db
, 
zFunc
, 
nArg
, 
íc
, 
p
, 
xSFunc
, 
xSãp
,

1697 
xFöÆ
, 0);

1698 
	}
}

1700 
	$sqlôe3_¸óã_fun˘i⁄_v2
(

1701 
sqlôe3
 *
db
,

1702 c⁄° *
zFunc
,

1703 
nArg
,

1704 
íc
,

1705 *
p
,

1706 (*
xSFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
 **),

1707 (*
xSãp
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
 **),

1708 (*
xFöÆ
)(
sqlôe3_c⁄ãxt
*),

1709 (*
xDe°roy
)(*)

1711 
rc
 = 
SQLITE_ERROR
;

1712 
FuncDe°ru˘‹
 *
pArg
 = 0;

1714 #ifde‡
SQLITE_ENABLE_API_ARMOR


1715 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

1716  
SQLITE_MISUSE_BKPT
;

1719 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

1720 if–
xDe°roy
 ){

1721 
pArg
 = (
FuncDe°ru˘‹
 *)
	`sqlôe3DbMÆlocZîo
(
db
, (FuncDestructor));

1722 if–!
pArg
 ){

1723 
	`xDe°roy
(
p
);

1724 
out
;

1726 
pArg
->
xDe°roy
 = xDestroy;

1727 
pArg
->
pU£rD©a
 = 
p
;

1729 
rc
 = 
	`sqlôe3Cª©eFunc
(
db
, 
zFunc
, 
nArg
, 
íc
, 
p
, 
xSFunc
, 
xSãp
, 
xFöÆ
, 
pArg
);

1730 if–
pArg
 &&ÖArg->
nRef
==0 ){

1731 
	`as£π
–
rc
!=
SQLITE_OK
 );

1732 
	`xDe°roy
(
p
);

1733 
	`sqlôe3DbFªe
(
db
, 
pArg
);

1736 
out
:

1737 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

1738 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

1739  
rc
;

1740 
	}
}

1742 #i‚de‡
SQLITE_OMIT_UTF16


1743 
	$sqlôe3_¸óã_fun˘i⁄16
(

1744 
sqlôe3
 *
db
,

1745 c⁄° *
zFun˘i⁄Name
,

1746 
nArg
,

1747 
eTextRï
,

1748 *
p
,

1749 (*
xSFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

1750 (*
xSãp
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

1751 (*
xFöÆ
)(
sqlôe3_c⁄ãxt
*)

1753 
rc
;

1754 *
zFunc8
;

1756 #ifde‡
SQLITE_ENABLE_API_ARMOR


1757 if–!
	`sqlôe3Sa„tyCheckOk
(
db
Ë|| 
zFun˘i⁄Name
==0 )  
SQLITE_MISUSE_BKPT
;

1759 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

1760 
	`as£π
–!
db
->
mÆlocFaûed
 );

1761 
zFunc8
 = 
	`sqlôe3Utf16to8
(
db
, 
zFun˘i⁄Name
, -1, 
SQLITE_UTF16NATIVE
);

1762 
rc
 = 
	`sqlôe3Cª©eFunc
(
db
, 
zFunc8
, 
nArg
, 
eTextRï
, 
p
, 
xSFunc
,
xSãp
,
xFöÆ
,0);

1763 
	`sqlôe3DbFªe
(
db
, 
zFunc8
);

1764 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

1765 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

1766  
rc
;

1767 
	}
}

1783 
	$sqlôe3_ovîlﬂd_fun˘i⁄
(

1784 
sqlôe3
 *
db
,

1785 c⁄° *
zName
,

1786 
nArg


1788 
rc
 = 
SQLITE_OK
;

1790 #ifde‡
SQLITE_ENABLE_API_ARMOR


1791 if–!
	`sqlôe3Sa„tyCheckOk
(
db
Ë|| 
zName
==0 || 
nArg
<-2 ){

1792  
SQLITE_MISUSE_BKPT
;

1795 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

1796 if–
	`sqlôe3FödFun˘i⁄
(
db
, 
zName
, 
nArg
, 
SQLITE_UTF8
, 0)==0 ){

1797 
rc
 = 
	`sqlôe3Cª©eFunc
(
db
, 
zName
, 
nArg
, 
SQLITE_UTF8
,

1798 0, 
sqlôe3InvÆidFun˘i⁄
, 0, 0, 0);

1800 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

1801 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

1802  
rc
;

1803 
	}
}

1805 #i‚de‡
SQLITE_OMIT_TRACE


1814 #i‚de‡
SQLITE_OMIT_DEPRECATED


1815 *
	$sqlôe3_åa˚
(
sqlôe3
 *
db
, (*
xTø˚
)(*,c⁄° *), *
pArg
){

1816 *
pOld
;

1818 #ifde‡
SQLITE_ENABLE_API_ARMOR


1819 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

1820 ()
SQLITE_MISUSE_BKPT
;

1824 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

1825 
pOld
 = 
db
->
pTø˚Arg
;

1826 
db
->
mTø˚
 = 
xTø˚
 ? 
SQLITE_TRACE_LEGACY
 : 0;

1827 
db
->
xTø˚
 = ((*)(
u32
,*,*,*))xTrace;

1828 
db
->
pTø˚Arg
 = 
pArg
;

1829 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

1830  
pOld
;

1831 
	}
}

1836 
	$sqlôe3_åa˚_v2
(

1837 
sqlôe3
 *
db
,

1838 
mTø˚
,

1839 (*
xTø˚
)(,*,*,*),

1840 *
pArg


1842 #ifde‡
SQLITE_ENABLE_API_ARMOR


1843 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

1844  
SQLITE_MISUSE_BKPT
;

1847 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

1848 if–
mTø˚
==0 ) 
xTø˚
 = 0;

1849 if–
xTø˚
==0 ) 
mTø˚
 = 0;

1850 
db
->
mTø˚
 = mTrace;

1851 
db
->
xTø˚
 = xTrace;

1852 
db
->
pTø˚Arg
 = 
pArg
;

1853 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

1854  
SQLITE_OK
;

1855 
	}
}

1857 #i‚de‡
SQLITE_OMIT_DEPRECATED


1866 *
	$sqlôe3_¥ofûe
(

1867 
sqlôe3
 *
db
,

1868 (*
xProfûe
)(*,c⁄° *,
sqlôe_uöt64
),

1869 *
pArg


1871 *
pOld
;

1873 #ifde‡
SQLITE_ENABLE_API_ARMOR


1874 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

1875 ()
SQLITE_MISUSE_BKPT
;

1879 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

1880 
pOld
 = 
db
->
pProfûeArg
;

1881 
db
->
xProfûe
 = xProfile;

1882 
db
->
pProfûeArg
 = 
pArg
;

1883 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

1884  
pOld
;

1885 
	}
}

1894 *
	$sqlôe3_commô_hook
(

1895 
sqlôe3
 *
db
,

1896 (*
xCÆlback
)(*),

1897 *
pArg


1899 *
pOld
;

1901 #ifde‡
SQLITE_ENABLE_API_ARMOR


1902 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

1903 ()
SQLITE_MISUSE_BKPT
;

1907 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

1908 
pOld
 = 
db
->
pCommôArg
;

1909 
db
->
xCommôCÆlback
 = 
xCÆlback
;

1910 
db
->
pCommôArg
 = 
pArg
;

1911 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

1912  
pOld
;

1913 
	}
}

1919 *
	$sqlôe3_upd©e_hook
(

1920 
sqlôe3
 *
db
,

1921 (*
xCÆlback
)(*,,c⁄° *,c⁄° *,
sqlôe_öt64
),

1922 *
pArg


1924 *
pRë
;

1926 #ifde‡
SQLITE_ENABLE_API_ARMOR


1927 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

1928 ()
SQLITE_MISUSE_BKPT
;

1932 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

1933 
pRë
 = 
db
->
pUpd©eArg
;

1934 
db
->
xUpd©eCÆlback
 = 
xCÆlback
;

1935 
db
->
pUpd©eArg
 = 
pArg
;

1936 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

1937  
pRë
;

1938 
	}
}

1944 *
	$sqlôe3_rﬁlback_hook
(

1945 
sqlôe3
 *
db
,

1946 (*
xCÆlback
)(*),

1947 *
pArg


1949 *
pRë
;

1951 #ifde‡
SQLITE_ENABLE_API_ARMOR


1952 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

1953 ()
SQLITE_MISUSE_BKPT
;

1957 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

1958 
pRë
 = 
db
->
pRﬁlbackArg
;

1959 
db
->
xRﬁlbackCÆlback
 = 
xCÆlback
;

1960 
db
->
pRﬁlbackArg
 = 
pArg
;

1961 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

1962  
pRë
;

1963 
	}
}

1965 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


1970 *
	$sqlôe3_¥eupd©e_hook
(

1971 
sqlôe3
 *
db
,

1972 (*
xCÆlback
)(

1973 *,
sqlôe3
*,,c⁄°*,c⁄°*,
sqlôe3_öt64
,sqlite3_int64),

1974 *
pArg


1976 *
pRë
;

1977 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

1978 
pRë
 = 
db
->
pPªUpd©eArg
;

1979 
db
->
xPªUpd©eCÆlback
 = 
xCÆlback
;

1980 
db
->
pPªUpd©eArg
 = 
pArg
;

1981 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

1982  
pRë
;

1983 
	}
}

1986 #i‚de‡
SQLITE_OMIT_WAL


1993 
	$sqlôe3WÆDeÁu…Hook
(

1994 *
pClõ¡D©a
,

1995 
sqlôe3
 *
db
,

1996 c⁄° *
zDb
,

1997 
nFøme


1999 
Loggî
 *
pLoggî
 = 
db
->
aDb
[0].
pBt
->pBt->
pPagî
->pLogger;

2000 if(
pLoggî
->
p_check
 >
LOG_LIMIT
){

2001 
	`sqlôe3BegöBíignMÆloc
();

2002 
	`sqlôe3_wÆ_checkpoöt
(
db
, 
zDb
);

2003 if(
pLoggî
->
log_fd
 > 0)

2004 
	`sqlôe3LogCheckPoöt
(
pLoggî
);

2005 
	`sqlôe3EndBíignMÆloc
();

2007  
SQLITE_OK
;

2008 
	}
}

2022 
	$sqlôe3_wÆ_autocheckpoöt
(
sqlôe3
 *
db
, 
nFøme
){

2023 #ifde‡
SQLITE_OMIT_WAL


2024 
	`UNUSED_PARAMETER
(
db
);

2025 
	`UNUSED_PARAMETER
(
nFøme
);

2027 #ifde‡
SQLITE_ENABLE_API_ARMOR


2028 if–!
	`sqlôe3Sa„tyCheckOk
(
db
ËË 
SQLITE_MISUSE_BKPT
;

2030 if–
nFøme
>0 ){

2031 
	`sqlôe3_wÆ_hook
(
db
, 
sqlôe3WÆDeÁu…Hook
, 
	`SQLITE_INT_TO_PTR
(
nFøme
));

2033 
	`sqlôe3_wÆ_hook
(
db
, 0, 0);

2036  
SQLITE_OK
;

2037 
	}
}

2043 *
	$sqlôe3_wÆ_hook
(

2044 
sqlôe3
 *
db
,

2045 (*
xCÆlback
)(*, 
sqlôe3
*, const *, ),

2046 *
pArg


2048 #i‚de‡
SQLITE_OMIT_WAL


2049 *
pRë
;

2050 #ifde‡
SQLITE_ENABLE_API_ARMOR


2051 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

2052 ()
SQLITE_MISUSE_BKPT
;

2056 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

2057 
pRë
 = 
db
->
pWÆArg
;

2058 
db
->
xWÆCÆlback
 = 
xCÆlback
;

2059 
db
->
pWÆArg
 = 
pArg
;

2060 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

2061  
pRë
;

2065 
	}
}

2070 
	$sqlôe3_wÆ_checkpoöt_v2
(

2071 
sqlôe3
 *
db
,

2072 c⁄° *
zDb
,

2073 
eMode
,

2074 *
≤Log
,

2075 *
≤Ck±


2077 #ifde‡
SQLITE_OMIT_WAL


2078  
SQLITE_OK
;

2080 
rc
;

2081 
iDb
 = 
SQLITE_MAX_ATTACHED
;

2083 #ifde‡
SQLITE_ENABLE_API_ARMOR


2084 if–!
	`sqlôe3Sa„tyCheckOk
(
db
ËË 
SQLITE_MISUSE_BKPT
;

2088 if–
≤Log
 ) *pnLog = -1;

2089 if–
≤Ck±
 ) *pnCkpt = -1;

2091 
	`as£π
–
SQLITE_CHECKPOINT_PASSIVE
==0 );

2092 
	`as£π
–
SQLITE_CHECKPOINT_FULL
==1 );

2093 
	`as£π
–
SQLITE_CHECKPOINT_RESTART
==2 );

2094 
	`as£π
–
SQLITE_CHECKPOINT_TRUNCATE
==3 );

2095 if–
eMode
<
SQLITE_CHECKPOINT_PASSIVE
 ||ÉMode>
SQLITE_CHECKPOINT_TRUNCATE
 ){

2098  
SQLITE_MISUSE
;

2101 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

2102 if–
zDb
 && zDb[0] ){

2103 
iDb
 = 
	`sqlôe3FödDbName
(
db
, 
zDb
);

2105 if–
iDb
<0 ){

2106 
rc
 = 
SQLITE_ERROR
;

2107 
	`sqlôe3Eº‹WôhMsg
(
db
, 
SQLITE_ERROR
, "unknow¿d©aba£: %s", 
zDb
);

2109 
db
->
busyH™dÀr
.
nBusy
 = 0;

2110 
rc
 = 
	`sqlôe3Checkpoöt
(
db
, 
iDb
, 
eMode
, 
≤Log
, 
≤Ck±
);

2111 
	`sqlôe3Eº‹
(
db
, 
rc
);

2113 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

2117 if–
db
->
nVdbeA˘ive
==0 ){

2118 
db
->
u1
.
isI¡îru±ed
 = 0;

2121 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

2122  
rc
;

2124 
	}
}

2132 
	$sqlôe3_wÆ_checkpoöt
(
sqlôe3
 *
db
, c⁄° *
zDb
){

2135  
	`sqlôe3_wÆ_checkpoöt_v2
(
db
,
zDb
,
SQLITE_CHECKPOINT_PASSIVE
,0,0);

2136 
	}
}

2138 #i‚de‡
SQLITE_OMIT_WAL


2158 
	$sqlôe3Checkpoöt
(
sqlôe3
 *
db
, 
iDb
, 
eMode
, *
≤Log
, *
≤Ck±
){

2159 
rc
 = 
SQLITE_OK
;

2160 
i
;

2161 
bBusy
 = 0;

2163 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

2164 
	`as£π
–!
≤Log
 || *pnLog==-1 );

2165 
	`as£π
–!
≤Ck±
 || *pnCkpt==-1 );

2167 
i
=0; i<
db
->
nDb
 && 
rc
==
SQLITE_OK
; i++){

2168 if–
i
==
iDb
 || iDb==
SQLITE_MAX_ATTACHED
 ){

2169 
rc
 = 
	`sqlôe3BåìCheckpoöt
(
db
->
aDb
[
i
].
pBt
, 
eMode
, 
≤Log
, 
≤Ck±
);

2170 
≤Log
 = 0;

2171 
≤Ck±
 = 0;

2172 if–
rc
==
SQLITE_BUSY
 ){

2173 
bBusy
 = 1;

2174 
rc
 = 
SQLITE_OK
;

2179  (
rc
==
SQLITE_OK
 && 
bBusy
Ë? 
SQLITE_BUSY
 :Ñc;

2180 
	}
}

2202 
	$sqlôe3TempInMem‹y
(c⁄° 
sqlôe3
 *
db
){

2203 #i‡
SQLITE_TEMP_STORE
==1

2204  ( 
db
->
ãmp_°‹e
==2 );

2206 #i‡
SQLITE_TEMP_STORE
==2

2207  ( 
db
->
ãmp_°‹e
!=1 );

2209 #i‡
SQLITE_TEMP_STORE
==3

2210 
	`UNUSED_PARAMETER
(
db
);

2213 #i‡
SQLITE_TEMP_STORE
<1 || SQLITE_TEMP_STORE>3

2214 
	`UNUSED_PARAMETER
(
db
);

2217 
	}
}

2223 c⁄° *
	$sqlôe3_îrmsg
(
sqlôe3
 *
db
){

2224 c⁄° *
z
;

2225 if–!
db
 ){

2226  
	`sqlôe3EºSå
(
SQLITE_NOMEM_BKPT
);

2228 if–!
	`sqlôe3Sa„tyCheckSickOrOk
(
db
) ){

2229  
	`sqlôe3EºSå
(
SQLITE_MISUSE_BKPT
);

2231 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

2232 if–
db
->
mÆlocFaûed
 ){

2233 
z
 = 
	`sqlôe3EºSå
(
SQLITE_NOMEM_BKPT
);

2235 
	`ã°ˇ£
–
db
->
pEº
==0 );

2236 
z
 = (*)
	`sqlôe3_vÆue_ãxt
(
db
->
pEº
);

2237 
	`as£π
–!
db
->
mÆlocFaûed
 );

2238 if–
z
==0 ){

2239 
z
 = 
	`sqlôe3EºSå
(
db
->
îrCode
);

2242 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

2243  
z
;

2244 
	}
}

2246 #i‚de‡
SQLITE_OMIT_UTF16


2251 c⁄° *
	$sqlôe3_îrmsg16
(
sqlôe3
 *
db
){

2252 c⁄° 
u16
 
outOfMem
[] = {

2255 c⁄° 
u16
 
misu£
[] = {

2264 c⁄° *
z
;

2265 if–!
db
 ){

2266  (*)
outOfMem
;

2268 if–!
	`sqlôe3Sa„tyCheckSickOrOk
(
db
) ){

2269  (*)
misu£
;

2271 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

2272 if–
db
->
mÆlocFaûed
 ){

2273 
z
 = (*)
outOfMem
;

2275 
z
 = 
	`sqlôe3_vÆue_ãxt16
(
db
->
pEº
);

2276 if–
z
==0 ){

2277 
	`sqlôe3Eº‹WôhMsg
(
db
, db->
îrCode
, 
	`sqlôe3EºSå
(db->errCode));

2278 
z
 = 
	`sqlôe3_vÆue_ãxt16
(
db
->
pEº
);

2285 
	`sqlôe3OomCÀ¨
(
db
);

2287 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

2288  
z
;

2289 
	}
}

2296 
	$sqlôe3_îrcode
(
sqlôe3
 *
db
){

2297 if–
db
 && !
	`sqlôe3Sa„tyCheckSickOrOk
(db) ){

2298  
SQLITE_MISUSE_BKPT
;

2300 if–!
db
 || db->
mÆlocFaûed
 ){

2301  
SQLITE_NOMEM_BKPT
;

2303  
db
->
îrCode
 & db->
îrMask
;

2304 
	}
}

2305 
	$sqlôe3_exãnded_îrcode
(
sqlôe3
 *
db
){

2306 if–
db
 && !
	`sqlôe3Sa„tyCheckSickOrOk
(db) ){

2307  
SQLITE_MISUSE_BKPT
;

2309 if–!
db
 || db->
mÆlocFaûed
 ){

2310  
SQLITE_NOMEM_BKPT
;

2312  
db
->
îrCode
;

2313 
	}
}

2314 
	$sqlôe3_sy°em_î∫o
(
sqlôe3
 *
db
){

2315  
db
 ? db->
iSysEºno
 : 0;

2316 
	}
}

2323 c⁄° *
	$sqlôe3_îr°r
(
rc
){

2324  
	`sqlôe3EºSå
(
rc
);

2325 
	}
}

2331 
	$¸óãCﬁœti⁄
(

2332 
sqlôe3
* 
db
,

2333 c⁄° *
zName
,

2334 
u8
 
íc
,

2335 * 
pCtx
,

2336 (*
xCom∑ª
)(*,,const *,,const *),

2337 (*
xDñ
)(*)

2339 
CﬁlSeq
 *
pCﬁl
;

2340 
íc2
;

2342 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

2348 
íc2
 = 
íc
;

2349 
	`ã°ˇ£
–
íc2
==
SQLITE_UTF16
 );

2350 
	`ã°ˇ£
–
íc2
==
SQLITE_UTF16_ALIGNED
 );

2351 if–
íc2
==
SQLITE_UTF16
 ||Énc2==
SQLITE_UTF16_ALIGNED
 ){

2352 
íc2
 = 
SQLITE_UTF16NATIVE
;

2354 if–
íc2
<
SQLITE_UTF8
 ||Énc2>
SQLITE_UTF16BE
 ){

2355  
SQLITE_MISUSE_BKPT
;

2362 
pCﬁl
 = 
	`sqlôe3FödCﬁlSeq
(
db
, (
u8
)
íc2
, 
zName
, 0);

2363 if–
pCﬁl
 &&ÖCﬁl->
xCmp
 ){

2364 if–
db
->
nVdbeA˘ive
 ){

2365 
	`sqlôe3Eº‹WôhMsg
(
db
, 
SQLITE_BUSY
,

2367  
SQLITE_BUSY
;

2369 
	`sqlôe3ExpúePª∑ªdSèãmíts
(
db
);

2377 if–(
pCﬁl
->
íc
 & ~
SQLITE_UTF16_ALIGNED
)==
íc2
 ){

2378 
CﬁlSeq
 *
aCﬁl
 = 
	`sqlôe3HashFöd
(&
db
->
aCﬁlSeq
, 
zName
);

2379 
j
;

2380 
j
=0; j<3; j++){

2381 
CﬁlSeq
 *
p
 = &
aCﬁl
[
j
];

2382 if–
p
->
íc
==
pCﬁl
->enc ){

2383 if–
p
->
xDñ
 ){

2384 
p
->
	`xDñ
’->
pU£r
);

2386 
p
->
xCmp
 = 0;

2392 
pCﬁl
 = 
	`sqlôe3FödCﬁlSeq
(
db
, (
u8
)
íc2
, 
zName
, 1);

2393 if–
pCﬁl
==0 )  
SQLITE_NOMEM_BKPT
;

2394 
pCﬁl
->
xCmp
 = 
xCom∑ª
;

2395 
pCﬁl
->
pU£r
 = 
pCtx
;

2396 
pCﬁl
->
xDñ
 = xDel;

2397 
pCﬁl
->
íc
 = (
u8
)(
íc2
 | (í¯& 
SQLITE_UTF16_ALIGNED
));

2398 
	`sqlôe3Eº‹
(
db
, 
SQLITE_OK
);

2399  
SQLITE_OK
;

2400 
	}
}

2408 c⁄° 
	gaH¨dLimô
[] = {

2409 
SQLITE_MAX_LENGTH
,

2410 
SQLITE_MAX_SQL_LENGTH
,

2411 
SQLITE_MAX_COLUMN
,

2412 
SQLITE_MAX_EXPR_DEPTH
,

2413 
SQLITE_MAX_COMPOUND_SELECT
,

2414 
SQLITE_MAX_VDBE_OP
,

2415 
SQLITE_MAX_FUNCTION_ARG
,

2416 
SQLITE_MAX_ATTACHED
,

2417 
SQLITE_MAX_LIKE_PATTERN_LENGTH
,

2418 
SQLITE_MAX_VARIABLE_NUMBER
,

2419 
SQLITE_MAX_TRIGGER_DEPTH
,

2420 
SQLITE_MAX_WORKER_THREADS
,

2426 #i‡
SQLITE_MAX_LENGTH
<100

2427 #îr‹ 
SQLITE_MAX_LENGTH
 
mu°
 
be
 
©
 
Àa°
 100

2429 #i‡
SQLITE_MAX_SQL_LENGTH
<100

2430 #îr‹ 
SQLITE_MAX_SQL_LENGTH
 
mu°
 
be
 
©
 
Àa°
 100

2432 #i‡
SQLITE_MAX_SQL_LENGTH
>
SQLITE_MAX_LENGTH


2433 #îr‹ 
SQLITE_MAX_SQL_LENGTH
 
mu°
 
nŸ
 
be
 
gª©î
 
th™
 
SQLITE_MAX_LENGTH


2435 #i‡
SQLITE_MAX_COMPOUND_SELECT
<2

2436 #îr‹ 
SQLITE_MAX_COMPOUND_SELECT
 
mu°
 
be
 
©
 
Àa°
 2

2438 #i‡
SQLITE_MAX_VDBE_OP
<40

2439 #îr‹ 
SQLITE_MAX_VDBE_OP
 
mu°
 
be
 
©
 
Àa°
 40

2441 #i‡
SQLITE_MAX_FUNCTION_ARG
<0 || SQLITE_MAX_FUNCTION_ARG>127

2442 #îr‹ 
SQLITE_MAX_FUNCTION_ARG
 
mu°
 
be
 
bëwìn
 0 
™d
 127

2444 #i‡
SQLITE_MAX_ATTACHED
<0 || SQLITE_MAX_ATTACHED>125

2445 #îr‹ 
SQLITE_MAX_ATTACHED
 
mu°
 
be
 
bëwìn
 0 
™d
 125

2447 #i‡
SQLITE_MAX_LIKE_PATTERN_LENGTH
<1

2448 #îr‹ 
SQLITE_MAX_LIKE_PATTERN_LENGTH
 
mu°
 
be
 
©
 
Àa°
 1

2450 #i‡
SQLITE_MAX_COLUMN
>32767

2451 #îr‹ 
SQLITE_MAX_COLUMN
 
mu°
 
nŸ
 
ex˚ed
 32767

2453 #i‡
SQLITE_MAX_TRIGGER_DEPTH
<1

2454 #îr‹ 
SQLITE_MAX_TRIGGER_DEPTH
 
mu°
 
be
 
©
 
Àa°
 1

2456 #i‡
SQLITE_MAX_WORKER_THREADS
<0 || SQLITE_MAX_WORKER_THREADS>50

2457 #îr‹ 
SQLITE_MAX_WORKER_THREADS
 
mu°
 
be
 
bëwìn
 0 
™d
 50

2471 
	$sqlôe3_limô
(
sqlôe3
 *
db
, 
limôId
, 
√wLimô
){

2472 
ﬁdLimô
;

2474 #ifde‡
SQLITE_ENABLE_API_ARMOR


2475 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

2476 ()
SQLITE_MISUSE_BKPT
;

2486 
	`as£π
–
aH¨dLimô
[
SQLITE_LIMIT_LENGTH
]==
SQLITE_MAX_LENGTH
 );

2487 
	`as£π
–
aH¨dLimô
[
SQLITE_LIMIT_SQL_LENGTH
]==
SQLITE_MAX_SQL_LENGTH
 );

2488 
	`as£π
–
aH¨dLimô
[
SQLITE_LIMIT_COLUMN
]==
SQLITE_MAX_COLUMN
 );

2489 
	`as£π
–
aH¨dLimô
[
SQLITE_LIMIT_EXPR_DEPTH
]==
SQLITE_MAX_EXPR_DEPTH
 );

2490 
	`as£π
–
aH¨dLimô
[
SQLITE_LIMIT_COMPOUND_SELECT
]==
SQLITE_MAX_COMPOUND_SELECT
);

2491 
	`as£π
–
aH¨dLimô
[
SQLITE_LIMIT_VDBE_OP
]==
SQLITE_MAX_VDBE_OP
 );

2492 
	`as£π
–
aH¨dLimô
[
SQLITE_LIMIT_FUNCTION_ARG
]==
SQLITE_MAX_FUNCTION_ARG
 );

2493 
	`as£π
–
aH¨dLimô
[
SQLITE_LIMIT_ATTACHED
]==
SQLITE_MAX_ATTACHED
 );

2494 
	`as£π
–
aH¨dLimô
[
SQLITE_LIMIT_LIKE_PATTERN_LENGTH
]==

2495 
SQLITE_MAX_LIKE_PATTERN_LENGTH
 );

2496 
	`as£π
–
aH¨dLimô
[
SQLITE_LIMIT_VARIABLE_NUMBER
]==
SQLITE_MAX_VARIABLE_NUMBER
);

2497 
	`as£π
–
aH¨dLimô
[
SQLITE_LIMIT_TRIGGER_DEPTH
]==
SQLITE_MAX_TRIGGER_DEPTH
 );

2498 
	`as£π
–
aH¨dLimô
[
SQLITE_LIMIT_WORKER_THREADS
]==
SQLITE_MAX_WORKER_THREADS
 );

2499 
	`as£π
–
SQLITE_LIMIT_WORKER_THREADS
==(
SQLITE_N_LIMIT
-1) );

2502 if–
limôId
<0 ||ÜimôId>=
SQLITE_N_LIMIT
 ){

2505 
ﬁdLimô
 = 
db
->
aLimô
[
limôId
];

2506 if–
√wLimô
>=0 ){

2507 if–
√wLimô
>
aH¨dLimô
[
limôId
] ){

2508 
√wLimô
 = 
aH¨dLimô
[
limôId
];

2510 
db
->
aLimô
[
limôId
] = 
√wLimô
;

2512  
ﬁdLimô
;

2513 
	}
}

2539 
	$sqlôe3P¨£Uri
(

2540 c⁄° *
zDeÁu…Vfs
,

2541 c⁄° *
zUri
,

2542 *
pFœgs
,

2543 
sqlôe3_vfs
 **
µVfs
,

2544 **
pzFûe
,

2545 **
pzEºMsg


2547 
rc
 = 
SQLITE_OK
;

2548 
Êags
 = *
pFœgs
;

2549 c⁄° *
zVfs
 = 
zDeÁu…Vfs
;

2550 *
zFûe
;

2551 
c
;

2552 
nUri
 = 
	`sqlôe3SåÀn30
(
zUri
);

2554 
	`as£π
–*
pzEºMsg
==0 );

2556 if–((
Êags
 & 
SQLITE_OPEN_URI
)

2557 || 
sqlôe3GlobÆC⁄fig
.
bO≥nUri
)

2558 && 
nUri
>=5 && 
	`memcmp
(
zUri
, "file:", 5)==0

2560 *
zO±
;

2561 
eSèã
;

2562 
iIn
;

2563 
iOut
 = 0;

2564 
u64
 
nByã
 = 
nUri
+2;

2568 
Êags
 |
SQLITE_OPEN_URI
;

2570 
iIn
=0; iIn<
nUri
; iIn++Ë
nByã
 +(
zUri
[iIn]=='&');

2571 
zFûe
 = 
	`sqlôe3_mÆloc64
(
nByã
);

2572 if–!
zFûe
 )  
SQLITE_NOMEM_BKPT
;

2574 
iIn
 = 5;

2575 #ifde‡
SQLITE_ALLOW_URI_AUTHORITY


2576 if–
	`°∫cmp
(
zUri
+5, "///", 3)==0 ){

2577 
iIn
 = 7;

2583 if–
	`°∫cmp
(
zUri
+7, "///", 3)==0 ){ 
iIn
++; }

2584 }if–
	`°∫cmp
(
zUri
+5, "//localhost/", 12)==0 ){

2585 
iIn
 = 16;

2589 if–
zUri
[5]=='/' && zUri[6]=='/' ){

2590 
iIn
 = 7;

2591  
zUri
[
iIn
] && zUri[iIn]!='/' ) iIn++;

2592 if–
iIn
!=7 && (iIn!=16 || 
	`memcmp
("loˇlho°", &
zUri
[7], 9)) ){

2593 *
pzEºMsg
 = 
	`sqlôe3_m¥ötf
("invalid uriáuthority: %.*s",

2594 
iIn
-7, &
zUri
[7]);

2595 
rc
 = 
SQLITE_ERROR
;

2596 
∑r£_uri_out
;

2611 
eSèã
 = 0;

2612  (
c
 = 
zUri
[
iIn
])!=0 && c!='#' ){

2613 
iIn
++;

2614 if–
c
=='%'

2615 && 
	`sqlôe3Isxdigô
(
zUri
[
iIn
])

2616 && 
	`sqlôe3Isxdigô
(
zUri
[
iIn
+1])

2618 
o˘ë
 = (
	`sqlôe3HexToI¡
(
zUri
[
iIn
++]) << 4);

2619 
o˘ë
 +
	`sqlôe3HexToI¡
(
zUri
[
iIn
++]);

2621 
	`as£π
–
o˘ë
>=0 && octet<256 );

2622 if–
o˘ë
==0 ){

2623 #i‚de‡
SQLITE_ENABLE_URI_00_ERROR


2628  (
c
 = 
zUri
[
iIn
])!=0 && c!='#'

2629 && (
eSèã
!=0 || 
c
!='?')

2630 && (
eSèã
!=1 || (
c
!='=' && c!='&'))

2631 && (
eSèã
!=2 || 
c
!='&')

2633 
iIn
++;

2638 *
pzEºMsg
 = 
	`sqlôe3_m¥ötf
("unexpected %%00 in uri");

2639 
rc
 = 
SQLITE_ERROR
;

2640 
∑r£_uri_out
;

2643 
c
 = 
o˘ë
;

2644 }if–
eSèã
==1 && (
c
=='&' || c=='=') ){

2645 if–
zFûe
[
iOut
-1]==0 ){

2647  
zUri
[
iIn
] && zUri[iIn]!='#' && zUri[iIn-1]!='&' ) iIn++;

2650 if–
c
=='&' ){

2651 
zFûe
[
iOut
++] = '\0';

2653 
eSèã
 = 2;

2655 
c
 = 0;

2656 }if–(
eSèã
==0 && 
c
=='?') || (eState==2 && c=='&') ){

2657 
c
 = 0;

2658 
eSèã
 = 1;

2660 
zFûe
[
iOut
++] = 
c
;

2662 if–
eSèã
==1 ) 
zFûe
[
iOut
++] = '\0';

2663 
zFûe
[
iOut
++] = '\0';

2664 
zFûe
[
iOut
++] = '\0';

2670 
zO±
 = &
zFûe
[
	`sqlôe3SåÀn30
(zFile)+1];

2671  
zO±
[0] ){

2672 
nO±
 = 
	`sqlôe3SåÀn30
(
zO±
);

2673 *
zVÆ
 = &
zO±
[
nO±
+1];

2674 
nVÆ
 = 
	`sqlôe3SåÀn30
(
zVÆ
);

2676 if–
nO±
==3 && 
	`memcmp
("vfs", 
zO±
, 3)==0 ){

2677 
zVfs
 = 
zVÆ
;

2679 
	sO≥nMode
 {

2680 c⁄° *
z
;

2681 
mode
;

2682 } *
aMode
 = 0;

2683 *
zModeTy≥
 = 0;

2684 
mask
 = 0;

2685 
limô
 = 0;

2687 if–
nO±
==5 && 
	`memcmp
("ˇche", 
zO±
, 5)==0 ){

2688 
O≥nMode
 
aCacheMode
[] = {

2689 { "sh¨ed", 
SQLITE_OPEN_SHAREDCACHE
 },

2690 { "¥iv©e", 
SQLITE_OPEN_PRIVATECACHE
 },

2694 
mask
 = 
SQLITE_OPEN_SHAREDCACHE
|
SQLITE_OPEN_PRIVATECACHE
;

2695 
aMode
 = 
aCacheMode
;

2696 
limô
 = 
mask
;

2697 
zModeTy≥
 = "cache";

2699 if–
nO±
==4 && 
	`memcmp
("mode", 
zO±
, 4)==0 ){

2700 
O≥nMode
 
aO≥nMode
[] = {

2701 { "ro", 
SQLITE_OPEN_READONLY
 },

2702 { "rw", 
SQLITE_OPEN_READWRITE
 },

2703 { "rwc", 
SQLITE_OPEN_READWRITE
 | 
SQLITE_OPEN_CREATE
 },

2704 { "mem‹y", 
SQLITE_OPEN_MEMORY
 },

2708 
mask
 = 
SQLITE_OPEN_READONLY
 | 
SQLITE_OPEN_READWRITE


2709 | 
SQLITE_OPEN_CREATE
 | 
SQLITE_OPEN_MEMORY
;

2710 
aMode
 = 
aO≥nMode
;

2711 
limô
 = 
mask
 & 
Êags
;

2712 
zModeTy≥
 = "access";

2715 if–
aMode
 ){

2716 
i
;

2717 
mode
 = 0;

2718 
i
=0; 
aMode
[i].
z
; i++){

2719 c⁄° *
z
 = 
aMode
[
i
].z;

2720 if–
nVÆ
==
	`sqlôe3SåÀn30
(
z
Ë&& 0==
	`memcmp
(
zVÆ
, z,ÇVal) ){

2721 
mode
 = 
aMode
[
i
].mode;

2725 if–
mode
==0 ){

2726 *
pzEºMsg
 = 
	`sqlôe3_m¥ötf
("nÿsuch %†mode: %s", 
zModeTy≥
, 
zVÆ
);

2727 
rc
 = 
SQLITE_ERROR
;

2728 
∑r£_uri_out
;

2730 if–(
mode
 & ~
SQLITE_OPEN_MEMORY
)>
limô
 ){

2731 *
pzEºMsg
 = 
	`sqlôe3_m¥ötf
("%s modeÇotállowed: %s",

2732 
zModeTy≥
, 
zVÆ
);

2733 
rc
 = 
SQLITE_PERM
;

2734 
∑r£_uri_out
;

2736 
Êags
 = (Êag†& ~
mask
Ë| 
mode
;

2740 
zO±
 = &
zVÆ
[
nVÆ
+1];

2744 
zFûe
 = 
	`sqlôe3_mÆloc64
(
nUri
+2);

2745 if–!
zFûe
 )  
SQLITE_NOMEM_BKPT
;

2746 if–
nUri
 ){

2747 
	`mem˝y
(
zFûe
, 
zUri
, 
nUri
);

2749 
zFûe
[
nUri
] = '\0';

2750 
zFûe
[
nUri
+1] = '\0';

2751 
Êags
 &~
SQLITE_OPEN_URI
;

2754 *
µVfs
 = 
	`sqlôe3_vfs_föd
(
zVfs
);

2755 if–*
µVfs
==0 ){

2756 *
pzEºMsg
 = 
	`sqlôe3_m¥ötf
("nÿsuch vfs: %s", 
zVfs
);

2757 
rc
 = 
SQLITE_ERROR
;

2759 
∑r£_uri_out
:

2760 if–
rc
!=
SQLITE_OK
 ){

2761 
	`sqlôe3_‰ì
(
zFûe
);

2762 
zFûe
 = 0;

2764 *
pFœgs
 = 
Êags
;

2765 *
pzFûe
 = 
zFûe
;

2766  
rc
;

2767 
	}
}

2775 
	$›íD©aba£
(

2776 c⁄° *
zFûíame
,

2777 
sqlôe3
 **
µDb
,

2778 
Êags
,

2779 c⁄° *
zVfs


2781 
sqlôe3
 *
db
;

2782 
rc
;

2783 
isThªadß„
;

2784 *
zO≥n
 = 0;

2785 *
zEºMsg
 = 0;

2787 #ifde‡
SQLITE_ENABLE_API_ARMOR


2788 if–
µDb
==0 )  
SQLITE_MISUSE_BKPT
;

2790 *
µDb
 = 0;

2791 #i‚de‡
SQLITE_OMIT_AUTOINIT


2792 
rc
 = 
	`sqlôe3_öôülize
();

2793 if–
rc
 ) Ñc;

2806 
	`as£π
–
SQLITE_OPEN_READONLY
 == 0x01 );

2807 
	`as£π
–
SQLITE_OPEN_READWRITE
 == 0x02 );

2808 
	`as£π
–
SQLITE_OPEN_CREATE
 == 0x04 );

2809 
	`ã°ˇ£
–(1<<(
Êags
&7))==0x02 );

2810 
	`ã°ˇ£
–(1<<(
Êags
&7))==0x04 );

2811 
	`ã°ˇ£
–(1<<(
Êags
&7))==0x40 );

2812 if–((1<<(
Êags
&7)) & 0x46)==0 ){

2813  
SQLITE_MISUSE_BKPT
;

2816 if–
sqlôe3GlobÆC⁄fig
.
bC‹eMuãx
==0 ){

2817 
isThªadß„
 = 0;

2818 }if–
Êags
 & 
SQLITE_OPEN_NOMUTEX
 ){

2819 
isThªadß„
 = 0;

2820 }if–
Êags
 & 
SQLITE_OPEN_FULLMUTEX
 ){

2821 
isThªadß„
 = 1;

2823 
isThªadß„
 = 
sqlôe3GlobÆC⁄fig
.
bFuŒMuãx
;

2825 if–
Êags
 & 
SQLITE_OPEN_PRIVATECACHE
 ){

2826 
Êags
 &~
SQLITE_OPEN_SHAREDCACHE
;

2827 }if–
sqlôe3GlobÆC⁄fig
.
sh¨edCacheE«bÀd
 ){

2828 
Êags
 |
SQLITE_OPEN_SHAREDCACHE
;

2840 
Êags
 &~–
SQLITE_OPEN_DELETEONCLOSE
 |

2841 
SQLITE_OPEN_EXCLUSIVE
 |

2842 
SQLITE_OPEN_MAIN_DB
 |

2843 
SQLITE_OPEN_TEMP_DB
 |

2844 
SQLITE_OPEN_TRANSIENT_DB
 |

2845 
SQLITE_OPEN_MAIN_JOURNAL
 |

2846 
SQLITE_OPEN_TEMP_JOURNAL
 |

2847 
SQLITE_OPEN_SUBJOURNAL
 |

2848 
SQLITE_OPEN_MASTER_JOURNAL
 |

2849 
SQLITE_OPEN_NOMUTEX
 |

2850 
SQLITE_OPEN_FULLMUTEX
 |

2851 
SQLITE_OPEN_WAL


2855 
db
 = 
	`sqlôe3MÆlocZîo
–(
sqlôe3
) );

2856 if–
db
==0 ) 
›ídb_out
;

2857 if–
isThªadß„
 ){

2858 
db
->
muãx
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_RECURSIVE
);

2859 if–
db
->
muãx
==0 ){

2860 
	`sqlôe3_‰ì
(
db
);

2861 
db
 = 0;

2862 
›ídb_out
;

2865 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

2866 
db
->
îrMask
 = 0xff;

2867 
db
->
nDb
 = 2;

2868 
db
->
magic
 = 
SQLITE_MAGIC_BUSY
;

2869 
db
->
aDb
 = db->
aDbSètic
;

2871 
	`as£π
–(
db
->
aLimô
)==(
aH¨dLimô
) );

2872 
	`mem˝y
(
db
->
aLimô
, 
aH¨dLimô
, (db->aLimit));

2873 
db
->
aLimô
[
SQLITE_LIMIT_WORKER_THREADS
] = 
SQLITE_DEFAULT_WORKER_THREADS
;

2874 
db
->
autoCommô
 = 1;

2875 
db
->
√xtAutovac
 = -1;

2876 
db
->
szMm≠
 = 
sqlôe3GlobÆC⁄fig
.szMmap;

2877 
db
->
√xtPagesize
 = 0;

2878 
db
->
nMaxS‹ãrMm≠
 = 0x7FFFFFFF;

2879 
db
->
Êags
 |
SQLITE_Sh‹tCﬁNames
 | 
SQLITE_E«bÀTriggî
 | 
SQLITE_CacheSpûl


2880 #i‡!
	`deföed
(
SQLITE_DEFAULT_AUTOMATIC_INDEX
) || SQLITE_DEFAULT_AUTOMATIC_INDEX

2881 | 
SQLITE_AutoIndex


2883 #i‡
SQLITE_DEFAULT_CKPTFULLFSYNC


2884 | 
SQLITE_Ck±FuŒFSync


2886 #i‡
SQLITE_DEFAULT_FILE_FORMAT
<4

2887 | 
SQLITE_LegacyFûeFmt


2889 #ifde‡
SQLITE_ENABLE_LOAD_EXTENSION


2890 | 
SQLITE_LﬂdExãnsi⁄


2892 #i‡
SQLITE_DEFAULT_RECURSIVE_TRIGGERS


2893 | 
SQLITE_RecTriggîs


2895 #i‡
	`deföed
(
SQLITE_DEFAULT_FOREIGN_KEYS
) && SQLITE_DEFAULT_FOREIGN_KEYS

2896 | 
SQLITE_F‹eignKeys


2898 #i‡
	`deföed
(
SQLITE_REVERSE_UNORDERED_SELECTS
)

2899 | 
SQLITE_Revî£Ordî


2901 #i‡
	`deföed
(
SQLITE_ENABLE_OVERSIZE_CELL_CHECK
)

2902 | 
SQLITE_CñlSizeCk


2904 #i‡
	`deföed
(
SQLITE_ENABLE_FTS3_TOKENIZER
)

2905 | 
SQLITE_Fts3Tokíizî


2908 
	`sqlôe3HashInô
(&
db
->
aCﬁlSeq
);

2909 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


2910 
	`sqlôe3HashInô
(&
db
->
aModuÀ
);

2920 
	`¸óãCﬁœti⁄
(
db
, 
sqlôe3SåBINARY
, 
SQLITE_UTF8
, 0, 
böCﬁlFunc
, 0);

2921 
	`¸óãCﬁœti⁄
(
db
, 
sqlôe3SåBINARY
, 
SQLITE_UTF16BE
, 0, 
böCﬁlFunc
, 0);

2922 
	`¸óãCﬁœti⁄
(
db
, 
sqlôe3SåBINARY
, 
SQLITE_UTF16LE
, 0, 
böCﬁlFunc
, 0);

2923 
	`¸óãCﬁœti⁄
(
db
, "NOCASE", 
SQLITE_UTF8
, 0, 
noˇ£CﬁœtögFunc
, 0);

2924 
	`¸óãCﬁœti⁄
(
db
, "RTRIM", 
SQLITE_UTF8
, (*)1, 
böCﬁlFunc
, 0);

2925 if–
db
->
mÆlocFaûed
 ){

2926 
›ídb_out
;

2931 
db
->
pDÊtCﬁl
 = 
	`sqlôe3FödCﬁlSeq
(db, 
SQLITE_UTF8
, 
sqlôe3SåBINARY
, 0);

2932 
	`as£π
–
db
->
pDÊtCﬁl
!=0 );

2935 
db
->
›íFœgs
 = 
Êags
;

2936 
rc
 = 
	`sqlôe3P¨£Uri
(
zVfs
, 
zFûíame
, &
Êags
, &
db
->
pVfs
, &
zO≥n
, &
zEºMsg
);

2937 if–
rc
!=
SQLITE_OK
 ){

2938 if–
rc
==
SQLITE_NOMEM
 ) 
	`sqlôe3OomFau…
(
db
);

2939 
	`sqlôe3Eº‹WôhMsg
(
db
, 
rc
, 
zEºMsg
 ? "%s" : 0, zErrMsg);

2940 
	`sqlôe3_‰ì
(
zEºMsg
);

2941 
›ídb_out
;

2945 
rc
 = 
	`sqlôe3BåìO≥n
(
db
->
pVfs
, 
zO≥n
, db, &db->
aDb
[0].
pBt
, 0,

2946 
Êags
 | 
SQLITE_OPEN_MAIN_DB
);

2949 if–
rc
!=
SQLITE_OK
 ){

2950 if–
rc
==
SQLITE_IOERR_NOMEM
 ){

2951 
rc
 = 
SQLITE_NOMEM_BKPT
;

2953 
	`sqlôe3Eº‹
(
db
, 
rc
);

2954 
›ídb_out
;

2956 
	`sqlôe3BåìE¡î
(
db
->
aDb
[0].
pBt
);

2957 
db
->
aDb
[0].
pSchema
 = 
	`sqlôe3SchemaGë
(db, db->aDb[0].
pBt
);

2958 if–!
db
->
mÆlocFaûed
 ) 
	`ENC
(dbË
	`SCHEMA_ENC
(db);

2959 
	`sqlôe3BåìLóve
(
db
->
aDb
[0].
pBt
);

2960 
db
->
aDb
[1].
pSchema
 = 
	`sqlôe3SchemaGë
(db, 0);

2965 
db
->
aDb
[0].
zDbSName
 = "main";

2966 
db
->
aDb
[0].
ß„ty_Àvñ
 = 
SQLITE_DEFAULT_SYNCHRONOUS
+1;

2967 
db
->
aDb
[1].
zDbSName
 = "temp";

2968 
db
->
aDb
[1].
ß„ty_Àvñ
 = 
PAGER_SYNCHRONOUS_OFF
;

2970 
db
->
magic
 = 
SQLITE_MAGIC_OPEN
;

2971 if–
db
->
mÆlocFaûed
 ){

2972 
›ídb_out
;

2979 
	`sqlôe3Eº‹
(
db
, 
SQLITE_OK
);

2980 
	`sqlôe3Regi°îPîC⁄√˘i⁄BuûtöFun˘i⁄s
(
db
);

2981 
rc
 = 
	`sqlôe3_îrcode
(
db
);

2983 #ifde‡
SQLITE_ENABLE_FTS5


2987 if–!
db
->
mÆlocFaûed
 && 
rc
==
SQLITE_OK
 ){

2988 
rc
 = 
	`sqlôe3Fts5Inô
(
db
);

2995 if–
rc
==
SQLITE_OK
 ){

2996 
	`sqlôe3AutoLﬂdExãnsi⁄s
(
db
);

2997 
rc
 = 
	`sqlôe3_îrcode
(
db
);

2998 if–
rc
!=
SQLITE_OK
 ){

2999 
›ídb_out
;

3003 #ifde‡
SQLITE_ENABLE_FTS1


3004 if–!
db
->
mÆlocFaûed
 ){

3005 
	`sqlôe3Fts1Inô
(
sqlôe3
*);

3006 
rc
 = 
	`sqlôe3Fts1Inô
(
db
);

3010 #ifde‡
SQLITE_ENABLE_FTS2


3011 if–!
db
->
mÆlocFaûed
 && 
rc
==
SQLITE_OK
 ){

3012 
	`sqlôe3Fts2Inô
(
sqlôe3
*);

3013 
rc
 = 
	`sqlôe3Fts2Inô
(
db
);

3017 #ifde‡
SQLITE_ENABLE_FTS3


3018 if–!
db
->
mÆlocFaûed
 && 
rc
==
SQLITE_OK
 ){

3019 
rc
 = 
	`sqlôe3Fts3Inô
(
db
);

3023 #ifde‡
SQLITE_ENABLE_ICU


3024 if–!
db
->
mÆlocFaûed
 && 
rc
==
SQLITE_OK
 ){

3025 
rc
 = 
	`sqlôe3IcuInô
(
db
);

3029 #ifde‡
SQLITE_ENABLE_RTREE


3030 if–!
db
->
mÆlocFaûed
 && 
rc
==
SQLITE_OK
){

3031 
rc
 = 
	`sqlôe3RåìInô
(
db
);

3035 #ifde‡
SQLITE_ENABLE_DBSTAT_VTAB


3036 if–!
db
->
mÆlocFaûed
 && 
rc
==
SQLITE_OK
){

3037 
rc
 = 
	`sqlôe3Db°©Regi°î
(
db
);

3041 #ifde‡
SQLITE_ENABLE_JSON1


3042 if–!
db
->
mÆlocFaûed
 && 
rc
==
SQLITE_OK
){

3043 
rc
 = 
	`sqlôe3Js⁄1Inô
(
db
);

3051 #ifde‡
SQLITE_DEFAULT_LOCKING_MODE


3052 
db
->
dÊtLockMode
 = 
SQLITE_DEFAULT_LOCKING_MODE
;

3053 
	`sqlôe3PagîLockögMode
(
	`sqlôe3BåìPagî
(
db
->
aDb
[0].
pBt
),

3054 
SQLITE_DEFAULT_LOCKING_MODE
);

3057 if–
rc
 ) 
	`sqlôe3Eº‹
(
db
,Ñc);

3060 
	`£tupLookaside
(
db
, 0, 
sqlôe3GlobÆC⁄fig
.
szLookaside
,

3061 
sqlôe3GlobÆC⁄fig
.
nLookaside
);

3063 
	`sqlôe3_wÆ_autocheckpoöt
(
db
, 
SQLITE_DEFAULT_WAL_AUTOCHECKPOINT
);

3065 
›ídb_out
:

3066 if–
db
 ){

3067 
	`as£π
–
db
->
muãx
!=0 || 
isThªadß„
==0

3068 || 
sqlôe3GlobÆC⁄fig
.
bFuŒMuãx
==0 );

3069 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

3071 
rc
 = 
	`sqlôe3_îrcode
(
db
);

3072 
	`as£π
–
db
!=0 || 
rc
==
SQLITE_NOMEM
 );

3073 if–
rc
==
SQLITE_NOMEM
 ){

3074 
	`sqlôe3_˛o£
(
db
);

3075 
db
 = 0;

3076 }if–
rc
!=
SQLITE_OK
 ){

3077 
db
->
magic
 = 
SQLITE_MAGIC_SICK
;

3079 *
µDb
 = 
db
;

3080 #ifde‡
SQLITE_ENABLE_SQLLOG


3081 if–
sqlôe3GlobÆC⁄fig
.
xSqŒog
 ){

3083 *
pArg
 = 
sqlôe3GlobÆC⁄fig
.
pSqŒogArg
;

3084 
sqlôe3GlobÆC⁄fig
.
	`xSqŒog
(
pArg
, 
db
, 
zFûíame
, 0);

3087 #i‡
	`deföed
(
SQLITE_HAS_CODEC
)

3088 if–
rc
==
SQLITE_OK
 ){

3089 c⁄° *
zHexKey
 = 
	`sqlôe3_uri_∑ømëî
(
zO≥n
, "hexkey");

3090 if–
zHexKey
 && zHexKey[0] ){

3091 
u8
 
iByã
;

3092 
i
;

3093 
zKey
[40];

3094 
i
=0, 
iByã
=0; i<(
zKey
)*2 && 
	`sqlôe3Isxdigô
(
zHexKey
[i]); i++){

3095 
iByã
 = (iByã<<4Ë+ 
	`sqlôe3HexToI¡
(
zHexKey
[
i
]);

3096 if–(
i
&1)!=0 ) 
zKey
[i/2] = 
iByã
;

3098 
	`sqlôe3_key_v2
(
db
, 0, 
zKey
, 
i
/2);

3103 
	`sqlôe3_‰ì
(
zO≥n
);

3105  
rc
 & 0xff;

3106 
	}
}

3111 
	$sqlôe3_›í
(

3112 c⁄° *
zFûíame
,

3113 
sqlôe3
 **
µDb


3115  
	`›íD©aba£
(
zFûíame
, 
µDb
,

3116 
SQLITE_OPEN_READWRITE
 | 
SQLITE_OPEN_CREATE
, 0);

3117 
	}
}

3118 
	$sqlôe3_›í_v2
(

3119 c⁄° *
fûíame
,

3120 
sqlôe3
 **
µDb
,

3121 
Êags
,

3122 c⁄° *
zVfs


3124  
	`›íD©aba£
(
fûíame
, 
µDb
, ()
Êags
, 
zVfs
);

3125 
	}
}

3127 #i‚de‡
SQLITE_OMIT_UTF16


3131 
	$sqlôe3_›í16
(

3132 c⁄° *
zFûíame
,

3133 
sqlôe3
 **
µDb


3135 c⁄° *
zFûíame8
;

3136 
sqlôe3_vÆue
 *
pVÆ
;

3137 
rc
;

3139 #ifde‡
SQLITE_ENABLE_API_ARMOR


3140 if–
µDb
==0 )  
SQLITE_MISUSE_BKPT
;

3142 *
µDb
 = 0;

3143 #i‚de‡
SQLITE_OMIT_AUTOINIT


3144 
rc
 = 
	`sqlôe3_öôülize
();

3145 if–
rc
 ) Ñc;

3147 if–
zFûíame
==0 ) zFilename = "\000\000";

3148 
pVÆ
 = 
	`sqlôe3VÆueNew
(0);

3149 
	`sqlôe3VÆueSëSå
(
pVÆ
, -1, 
zFûíame
, 
SQLITE_UTF16NATIVE
, 
SQLITE_STATIC
);

3150 
zFûíame8
 = 
	`sqlôe3VÆueText
(
pVÆ
, 
SQLITE_UTF8
);

3151 if–
zFûíame8
 ){

3152 
rc
 = 
	`›íD©aba£
(
zFûíame8
, 
µDb
,

3153 
SQLITE_OPEN_READWRITE
 | 
SQLITE_OPEN_CREATE
, 0);

3154 
	`as£π
–*
µDb
 || 
rc
==
SQLITE_NOMEM
 );

3155 if–
rc
==
SQLITE_OK
 && !
	`DbHasPr›îty
(*
µDb
, 0, 
DB_SchemaLﬂded
) ){

3156 
	`SCHEMA_ENC
(*
µDb
Ë
	`ENC
(*µDbË
SQLITE_UTF16NATIVE
;

3159 
rc
 = 
SQLITE_NOMEM_BKPT
;

3161 
	`sqlôe3VÆueFªe
(
pVÆ
);

3163  
rc
 & 0xff;

3164 
	}
}

3170 
	$sqlôe3_¸óã_cﬁœti⁄
(

3171 
sqlôe3
* 
db
,

3172 c⁄° *
zName
,

3173 
íc
,

3174 * 
pCtx
,

3175 (*
xCom∑ª
)(*,,const *,,const *)

3177  
	`sqlôe3_¸óã_cﬁœti⁄_v2
(
db
, 
zName
, 
íc
, 
pCtx
, 
xCom∑ª
, 0);

3178 
	}
}

3183 
	$sqlôe3_¸óã_cﬁœti⁄_v2
(

3184 
sqlôe3
* 
db
,

3185 c⁄° *
zName
,

3186 
íc
,

3187 * 
pCtx
,

3188 (*
xCom∑ª
)(*,,const *,,const *),

3189 (*
xDñ
)(*)

3191 
rc
;

3193 #ifde‡
SQLITE_ENABLE_API_ARMOR


3194 if–!
	`sqlôe3Sa„tyCheckOk
(
db
Ë|| 
zName
==0 )  
SQLITE_MISUSE_BKPT
;

3196 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

3197 
	`as£π
–!
db
->
mÆlocFaûed
 );

3198 
rc
 = 
	`¸óãCﬁœti⁄
(
db
, 
zName
, (
u8
)
íc
, 
pCtx
, 
xCom∑ª
, 
xDñ
);

3199 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

3200 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

3201  
rc
;

3202 
	}
}

3204 #i‚de‡
SQLITE_OMIT_UTF16


3208 
	$sqlôe3_¸óã_cﬁœti⁄16
(

3209 
sqlôe3
* 
db
,

3210 c⁄° *
zName
,

3211 
íc
,

3212 * 
pCtx
,

3213 (*
xCom∑ª
)(*,,const *,,const *)

3215 
rc
 = 
SQLITE_OK
;

3216 *
zName8
;

3218 #ifde‡
SQLITE_ENABLE_API_ARMOR


3219 if–!
	`sqlôe3Sa„tyCheckOk
(
db
Ë|| 
zName
==0 )  
SQLITE_MISUSE_BKPT
;

3221 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

3222 
	`as£π
–!
db
->
mÆlocFaûed
 );

3223 
zName8
 = 
	`sqlôe3Utf16to8
(
db
, 
zName
, -1, 
SQLITE_UTF16NATIVE
);

3224 if–
zName8
 ){

3225 
rc
 = 
	`¸óãCﬁœti⁄
(
db
, 
zName8
, (
u8
)
íc
, 
pCtx
, 
xCom∑ª
, 0);

3226 
	`sqlôe3DbFªe
(
db
, 
zName8
);

3228 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

3229 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

3230  
rc
;

3231 
	}
}

3238 
	$sqlôe3_cﬁœti⁄_√eded
(

3239 
sqlôe3
 *
db
,

3240 *
pCﬁlNìdedArg
,

3241 (*
xCﬁlNìded
)(*,
sqlôe3
*,
eTextRï
,const *)

3243 #ifde‡
SQLITE_ENABLE_API_ARMOR


3244 if–!
	`sqlôe3Sa„tyCheckOk
(
db
ËË 
SQLITE_MISUSE_BKPT
;

3246 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

3247 
db
->
xCﬁlNìded
 = xCollNeeded;

3248 
db
->
xCﬁlNìded16
 = 0;

3249 
db
->
pCﬁlNìdedArg
 =ÖCollNeededArg;

3250 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

3251  
SQLITE_OK
;

3252 
	}
}

3254 #i‚de‡
SQLITE_OMIT_UTF16


3259 
	$sqlôe3_cﬁœti⁄_√eded16
(

3260 
sqlôe3
 *
db
,

3261 *
pCﬁlNìdedArg
,

3262 (*
xCﬁlNìded16
)(*,
sqlôe3
*,
eTextRï
,const *)

3264 #ifde‡
SQLITE_ENABLE_API_ARMOR


3265 if–!
	`sqlôe3Sa„tyCheckOk
(
db
ËË 
SQLITE_MISUSE_BKPT
;

3267 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

3268 
db
->
xCﬁlNìded
 = 0;

3269 
db
->
xCﬁlNìded16
 = xCollNeeded16;

3270 
db
->
pCﬁlNìdedArg
 =ÖCollNeededArg;

3271 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

3272  
SQLITE_OK
;

3273 
	}
}

3276 #i‚de‡
SQLITE_OMIT_DEPRECATED


3281 
	$sqlôe3_globÆ_ªcovî
(){

3282  
SQLITE_OK
;

3283 
	}
}

3292 
	$sqlôe3_gë_autocommô
(
sqlôe3
 *
db
){

3293 #ifde‡
SQLITE_ENABLE_API_ARMOR


3294 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

3295 ()
SQLITE_MISUSE_BKPT
;

3299  
db
->
autoCommô
;

3300 
	}
}

3313 
	$ªp‹tEº‹
(
iEº
, 
löío
, c⁄° *
zTy≥
){

3314 
	`sqlôe3_log
(
iEº
, "%sátÜine %d of [%.10s]",

3315 
zTy≥
, 
löío
, 20+
	`sqlôe3_sour˚id
());

3316  
iEº
;

3317 
	}
}

3318 
	$sqlôe3C‹ru±Eº‹
(
löío
){

3319 
	`ã°ˇ£
–
sqlôe3GlobÆC⁄fig
.
xLog
!=0 );

3320  
	`ªp‹tEº‹
(
SQLITE_CORRUPT
, 
löío
, "database corruption");

3321 
	}
}

3322 
	$sqlôe3Misu£Eº‹
(
löío
){

3323 
	`ã°ˇ£
–
sqlôe3GlobÆC⁄fig
.
xLog
!=0 );

3324  
	`ªp‹tEº‹
(
SQLITE_MISUSE
, 
löío
, "misuse");

3325 
	}
}

3326 
	$sqlôe3C™t›íEº‹
(
löío
){

3327 
	`ã°ˇ£
–
sqlôe3GlobÆC⁄fig
.
xLog
!=0 );

3328  
	`ªp‹tEº‹
(
SQLITE_CANTOPEN
, 
löío
, "cannot open file");

3329 
	}
}

3330 #ifde‡
SQLITE_DEBUG


3331 
	$sqlôe3NomemEº‹
(
löío
){

3332 
	`ã°ˇ£
–
sqlôe3GlobÆC⁄fig
.
xLog
!=0 );

3333  
	`ªp‹tEº‹
(
SQLITE_NOMEM
, 
löío
, "OOM");

3334 
	}
}

3335 
	$sqlôe3I€ºnomemEº‹
(
löío
){

3336 
	`ã°ˇ£
–
sqlôe3GlobÆC⁄fig
.
xLog
!=0 );

3337  
	`ªp‹tEº‹
(
SQLITE_IOERR_NOMEM
, 
löío
, "I/O OOMÉrror");

3338 
	}
}

3341 #i‚de‡
SQLITE_OMIT_DEPRECATED


3349 
	$sqlôe3_thªad_˛ónup
(){

3350 
	}
}

3357 
	$sqlôe3_èbÀ_cﬁumn_mëad©a
(

3358 
sqlôe3
 *
db
,

3359 c⁄° *
zDbName
,

3360 c⁄° *
zTabÀName
,

3361 c⁄° *
zCﬁumnName
,

3362 c⁄° **
pzD©aTy≥
,

3363 c⁄° **
pzCﬁlSeq
,

3364 *
pNŸNuŒ
,

3365 *
pPrim¨yKey
,

3366 *
pAutoöc


3368 
rc
;

3369 *
zEºMsg
 = 0;

3370 
TabÀ
 *
pTab
 = 0;

3371 
Cﬁumn
 *
pCﬁ
 = 0;

3372 
iCﬁ
 = 0;

3373 c⁄° *
zD©aTy≥
 = 0;

3374 c⁄° *
zCﬁlSeq
 = 0;

3375 
nŸnuŒ
 = 0;

3376 
¥im¨ykey
 = 0;

3377 
autoöc
 = 0;

3380 #ifde‡
SQLITE_ENABLE_API_ARMOR


3381 if–!
	`sqlôe3Sa„tyCheckOk
(
db
Ë|| 
zTabÀName
==0 ){

3382  
SQLITE_MISUSE_BKPT
;

3387 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

3388 
	`sqlôe3BåìE¡îAŒ
(
db
);

3389 
rc
 = 
	`sqlôe3Inô
(
db
, &
zEºMsg
);

3390 if–
SQLITE_OK
!=
rc
 ){

3391 
îr‹_out
;

3395 
pTab
 = 
	`sqlôe3FödTabÀ
(
db
, 
zTabÀName
, 
zDbName
);

3396 if–!
pTab
 ||ÖTab->
pSñe˘
 ){

3397 
pTab
 = 0;

3398 
îr‹_out
;

3402 if–
zCﬁumnName
==0 ){

3405 
iCﬁ
=0; iCﬁ<
pTab
->
nCﬁ
; iCol++){

3406 
pCﬁ
 = &
pTab
->
aCﬁ
[
iCﬁ
];

3407 if–0==
	`sqlôe3SåICmp
(
pCﬁ
->
zName
, 
zCﬁumnName
) ){

3411 if–
iCﬁ
==
pTab
->
nCﬁ
 ){

3412 if–
	`HasRowid
(
pTab
Ë&& 
	`sqlôe3IsRowid
(
zCﬁumnName
) ){

3413 
iCﬁ
 = 
pTab
->
iPKey
;

3414 
pCﬁ
 = 
iCﬁ
>=0 ? &
pTab
->
aCﬁ
[iCol] : 0;

3416 
pTab
 = 0;

3417 
îr‹_out
;

3432 if–
pCﬁ
 ){

3433 
zD©aTy≥
 = 
	`sqlôe3CﬁumnTy≥
(
pCﬁ
,0);

3434 
zCﬁlSeq
 = 
pCﬁ
->
zCﬁl
;

3435 
nŸnuŒ
 = 
pCﬁ
->
nŸNuŒ
!=0;

3436 
¥im¨ykey
 = (
pCﬁ
->
cﬁFœgs
 & 
COLFLAG_PRIMKEY
)!=0;

3437 
autoöc
 = 
pTab
->
iPKey
==
iCﬁ
 && (pTab->
èbFœgs
 & 
TF_Autoö¸emít
)!=0;

3439 
zD©aTy≥
 = "INTEGER";

3440 
¥im¨ykey
 = 1;

3442 if–!
zCﬁlSeq
 ){

3443 
zCﬁlSeq
 = 
sqlôe3SåBINARY
;

3446 
îr‹_out
:

3447 
	`sqlôe3BåìLóveAŒ
(
db
);

3453 if–
pzD©aTy≥
 ) *pzD©aTy≥ = 
zD©aTy≥
;

3454 if–
pzCﬁlSeq
 ) *pzCﬁlSeq = 
zCﬁlSeq
;

3455 if–
pNŸNuŒ
 ) *pNŸNuŒ = 
nŸnuŒ
;

3456 if–
pPrim¨yKey
 ) *pPrim¨yKey = 
¥im¨ykey
;

3457 if–
pAutoöc
 ) *pAutoö¯
autoöc
;

3459 if–
SQLITE_OK
==
rc
 && !
pTab
 ){

3460 
	`sqlôe3DbFªe
(
db
, 
zEºMsg
);

3461 
zEºMsg
 = 
	`sqlôe3MPrötf
(
db
, "nÿsuchÅabÀ cﬁumn: %s.%s", 
zTabÀName
,

3462 
zCﬁumnName
);

3463 
rc
 = 
SQLITE_ERROR
;

3465 
	`sqlôe3Eº‹WôhMsg
(
db
, 
rc
, (
zEºMsg
?"%s":0), zErrMsg);

3466 
	`sqlôe3DbFªe
(
db
, 
zEºMsg
);

3467 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

3468 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

3469  
rc
;

3470 
	}
}

3475 
	$sqlôe3_¶ìp
(
ms
){

3476 
sqlôe3_vfs
 *
pVfs
;

3477 
rc
;

3478 
pVfs
 = 
	`sqlôe3_vfs_föd
(0);

3479 if–
pVfs
==0 )  0;

3484 
rc
 = (
	`sqlôe3OsSÀï
(
pVfs
, 1000*
ms
)/1000);

3485  
rc
;

3486 
	}
}

3491 
	$sqlôe3_exãnded_ªsu…_codes
(
sqlôe3
 *
db
, 
⁄off
){

3492 #ifde‡
SQLITE_ENABLE_API_ARMOR


3493 if–!
	`sqlôe3Sa„tyCheckOk
(
db
ËË 
SQLITE_MISUSE_BKPT
;

3495 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

3496 
db
->
îrMask
 = 
⁄off
 ? 0xffffffff : 0xff;

3497 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

3498  
SQLITE_OK
;

3499 
	}
}

3504 
	$sqlôe3_fûe_c⁄åﬁ
(
sqlôe3
 *
db
, c⁄° *
zDbName
, 
›
, *
pArg
){

3505 
rc
 = 
SQLITE_ERROR
;

3506 
Båì
 *
pBåì
;

3508 #ifde‡
SQLITE_ENABLE_API_ARMOR


3509 if–!
	`sqlôe3Sa„tyCheckOk
(
db
ËË 
SQLITE_MISUSE_BKPT
;

3511 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

3512 
pBåì
 = 
	`sqlôe3DbNameToBåì
(
db
, 
zDbName
);

3513 if–
pBåì
 ){

3514 
Pagî
 *
pPagî
;

3515 
sqlôe3_fûe
 *
fd
;

3516 
	`sqlôe3BåìE¡î
(
pBåì
);

3517 
pPagî
 = 
	`sqlôe3BåìPagî
(
pBåì
);

3518 
	`as£π
–
pPagî
!=0 );

3519 
fd
 = 
	`sqlôe3PagîFûe
(
pPagî
);

3520 
	`as£π
–
fd
!=0 );

3521 if–
›
==
SQLITE_FCNTL_FILE_POINTER
 ){

3522 *(
sqlôe3_fûe
**)
pArg
 = 
fd
;

3523 
rc
 = 
SQLITE_OK
;

3524 }if–
›
==
SQLITE_FCNTL_VFS_POINTER
 ){

3525 *(
sqlôe3_vfs
**)
pArg
 = 
	`sqlôe3PagîVfs
(
pPagî
);

3526 
rc
 = 
SQLITE_OK
;

3527 }if–
›
==
SQLITE_FCNTL_JOURNAL_POINTER
 ){

3528 *(
sqlôe3_fûe
**)
pArg
 = 
	`sqlôe3PagîJ∫lFûe
(
pPagî
);

3529 
rc
 = 
SQLITE_OK
;

3530 }if–
fd
->
pMëhods
 ){

3531 
rc
 = 
	`sqlôe3OsFûeC⁄åﬁ
(
fd
, 
›
, 
pArg
);

3533 
rc
 = 
SQLITE_NOTFOUND
;

3535 
	`sqlôe3BåìLóve
(
pBåì
);

3537 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

3538  
rc
;

3539 
	}
}

3544 
	$sqlôe3_ã°_c⁄åﬁ
(
›
, ...){

3545 
rc
 = 0;

3546 #ifde‡
SQLITE_UNTESTABLE


3547 
	`UNUSED_PARAMETER
(
›
);

3549 
va_li°
 
≠
;

3550 
	`va_°¨t
(
≠
, 
›
);

3551  
›
 ){

3556 
SQLITE_TESTCTRL_PRNG_SAVE
: {

3557 
	`sqlôe3P∫gSaveSèã
();

3566 
SQLITE_TESTCTRL_PRNG_RESTORE
: {

3567 
	`sqlôe3P∫gRe°‹eSèã
();

3576 
SQLITE_TESTCTRL_PRNG_RESET
: {

3577 
	`sqlôe3_øndom√ss
(0,0);

3589 
SQLITE_TESTCTRL_BITVEC_TEST
: {

3590 
sz
 = 
	`va_¨g
(
≠
, );

3591 *
aProg
 = 
	`va_¨g
(
≠
, *);

3592 
rc
 = 
	`sqlôe3BôvecBuûtöTe°
(
sz
, 
aProg
);

3607 
SQLITE_TESTCTRL_FAULT_INSTALL
: {

3612 (*
	tTESTCALLBACKFUNC_t
)();

3613 
sqlôe3GlobÆC⁄fig
.
xTe°CÆlback
 = 
	`va_¨g
(
≠
, 
TESTCALLBACKFUNC_t
);

3614 
rc
 = 
	`sqlôe3Fau…Sim
(0);

3624 
SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS
: {

3625 (*
	tvoid_fun˘i⁄
)();

3626 
void_fun˘i⁄
 
xBíignBegö
;

3627 
void_fun˘i⁄
 
xBíignEnd
;

3628 
xBíignBegö
 = 
	`va_¨g
(
≠
, 
void_fun˘i⁄
);

3629 
xBíignEnd
 = 
	`va_¨g
(
≠
, 
void_fun˘i⁄
);

3630 
	`sqlôe3BíignMÆlocHooks
(
xBíignBegö
, 
xBíignEnd
);

3646 
SQLITE_TESTCTRL_PENDING_BYTE
: {

3647 
rc
 = 
PENDING_BYTE
;

3648 #i‚de‡
SQLITE_OMIT_WSD


3650 
√wVÆ
 = 
	`va_¨g
(
≠
, );

3651 if–
√wVÆ
 ) 
sqlôe3PídögByã
 =ÇewVal;

3668 
SQLITE_TESTCTRL_ASSERT
: {

3669 vﬁ©ûê
x
 = 0;

3670 
	`as£π
– (
x
 = 
	`va_¨g
(
≠
,))!=0 );

3671 
rc
 = 
x
;

3703 
SQLITE_TESTCTRL_ALWAYS
: {

3704 
x
 = 
	`va_¨g
(
≠
,);

3705 
rc
 = 
	`ALWAYS
(
x
);

3720 
SQLITE_TESTCTRL_BYTEORDER
: {

3721 
rc
 = 
SQLITE_BYTEORDER
*100 + 
SQLITE_LITTLEENDIAN
*10 + 
SQLITE_BIGENDIAN
;

3730 
SQLITE_TESTCTRL_RESERVE
: {

3731 
sqlôe3
 *
db
 = 
	`va_¨g
(
≠
, sqlite3*);

3732 
x
 = 
	`va_¨g
(
≠
,);

3733 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

3734 
	`sqlôe3BåìSëPageSize
(
db
->
aDb
[0].
pBt
, 0, 
x
, 0);

3735 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

3748 
SQLITE_TESTCTRL_OPTIMIZATIONS
: {

3749 
sqlôe3
 *
db
 = 
	`va_¨g
(
≠
, sqlite3*);

3750 
db
->
dbO±Fœgs
 = (
u16
)(
	`va_¨g
(
≠
, ) & 0xffff);

3754 #ifde‡
SQLITE_N_KEYWORD


3764 
SQLITE_TESTCTRL_ISKEYWORD
: {

3765 c⁄° *
zW‹d
 = 
	`va_¨g
(
≠
, const *);

3766 
n
 = 
	`sqlôe3SåÀn30
(
zW‹d
);

3767 
rc
 = (
	`sqlôe3Keyw‹dCode
((
u8
*)
zW‹d
, 
n
)!=
TK_ID
Ë? 
SQLITE_N_KEYWORD
 : 0;

3777 
SQLITE_TESTCTRL_SCRATCHMALLOC
: {

3778 *
pFªe
, **
µNew
;

3779 
sz
;

3780 
sz
 = 
	`va_¨g
(
≠
, );

3781 
µNew
 = 
	`va_¨g
(
≠
, **);

3782 
pFªe
 = 
	`va_¨g
(
≠
, *);

3783 if–
sz
 ) *
µNew
 = 
	`sqlôe3S¸©chMÆloc
(sz);

3784 
	`sqlôe3S¸©chFªe
(
pFªe
);

3794 
SQLITE_TESTCTRL_LOCALTIME_FAULT
: {

3795 
sqlôe3GlobÆC⁄fig
.
bLoˇ…imeFau…
 = 
	`va_¨g
(
≠
, );

3807 
SQLITE_TESTCTRL_NEVER_CORRUPT
: {

3808 
sqlôe3GlobÆC⁄fig
.
√vîC‹ru±
 = 
	`va_¨g
(
≠
, );

3817 
SQLITE_TESTCTRL_ONCE_RESET_THRESHOLD
: {

3818 
sqlôe3GlobÆC⁄fig
.
iOn˚Re£tThªshﬁd
 = 
	`va_¨g
(
≠
, );

3827 
SQLITE_TESTCTRL_VDBE_COVERAGE
: {

3828 #ifde‡
SQLITE_VDBE_COVERAGE


3829 (*
	tbønch_ˇŒback
)(*,,
	tu8
,u8);

3830 
sqlôe3GlobÆC⁄fig
.
xVdbeBønch
 = 
	`va_¨g
(
≠
,
bønch_ˇŒback
);

3831 
sqlôe3GlobÆC⁄fig
.
pVdbeBønchArg
 = 
	`va_¨g
(
≠
,*);

3837 
SQLITE_TESTCTRL_SORTER_MMAP
: {

3838 
sqlôe3
 *
db
 = 
	`va_¨g
(
≠
, sqlite3*);

3839 
db
->
nMaxS‹ãrMm≠
 = 
	`va_¨g
(
≠
, );

3848 
SQLITE_TESTCTRL_ISINIT
: {

3849 if–
sqlôe3GlobÆC⁄fig
.
isInô
==0 ) 
rc
 = 
SQLITE_ERROR
;

3869 
SQLITE_TESTCTRL_IMPOSTER
: {

3870 
sqlôe3
 *
db
 = 
	`va_¨g
(
≠
, sqlite3*);

3871 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

3872 
db
->
öô
.
iDb
 = 
	`sqlôe3FödDbName
(db, 
	`va_¨g
(
≠
,const *));

3873 
db
->
öô
.
busy
 = db->öô.
impo°îTabÀ
 = 
	`va_¨g
(
≠
,);

3874 
db
->
öô
.
√wTnum
 = 
	`va_¨g
(
≠
,);

3875 if–
db
->
öô
.
busy
==0 && db->öô.
√wTnum
>0 ){

3876 
	`sqlôe3Re£tAŒSchemasOfC⁄√˘i⁄
(
db
);

3878 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

3882 
	`va_íd
(
≠
);

3884  
rc
;

3885 
	}
}

3898 c⁄° *
	$sqlôe3_uri_∑ømëî
(c⁄° *
zFûíame
, c⁄° *
zP¨am
){

3899 if–
zFûíame
==0 || 
zP¨am
==0 )  0;

3900 
zFûíame
 +
	`sqlôe3SåÀn30
(zFilename) + 1;

3901  
zFûíame
[0] ){

3902 
x
 = 
	`°rcmp
(
zFûíame
, 
zP¨am
);

3903 
zFûíame
 +
	`sqlôe3SåÀn30
(zFilename) + 1;

3904 if–
x
==0 )  
zFûíame
;

3905 
zFûíame
 +
	`sqlôe3SåÀn30
(zFilename) + 1;

3908 
	}
}

3913 
	$sqlôe3_uri_boﬁón
(c⁄° *
zFûíame
, c⁄° *
zP¨am
, 
bDÊt
){

3914 c⁄° *
z
 = 
	`sqlôe3_uri_∑ømëî
(
zFûíame
, 
zP¨am
);

3915 
bDÊt
 = bDflt!=0;

3916  
z
 ? 
	`sqlôe3GëBoﬁón
(z, 
bDÊt
) : bDflt;

3917 
	}
}

3922 
sqlôe3_öt64
 
	$sqlôe3_uri_öt64
(

3923 c⁄° *
zFûíame
,

3924 c⁄° *
zP¨am
,

3925 
sqlôe3_öt64
 
bDÊt


3927 c⁄° *
z
 = 
	`sqlôe3_uri_∑ømëî
(
zFûíame
, 
zP¨am
);

3928 
sqlôe3_öt64
 
v
;

3929 if–
z
 && 
	`sqlôe3DecOrHexToI64
(z, &
v
)==
SQLITE_OK
 ){

3930 
bDÊt
 = 
v
;

3932  
bDÊt
;

3933 
	}
}

3938 
Båì
 *
	$sqlôe3DbNameToBåì
(
sqlôe3
 *
db
, c⁄° *
zDbName
){

3939 
iDb
 = 
zDbName
 ? 
	`sqlôe3FödDbName
(
db
, zDbName) : 0;

3940  
iDb
<0 ? 0 : 
db
->
aDb
[iDb].
pBt
;

3941 
	}
}

3947 c⁄° *
	$sqlôe3_db_fûíame
(
sqlôe3
 *
db
, c⁄° *
zDbName
){

3948 
Båì
 *
pBt
;

3949 #ifde‡
SQLITE_ENABLE_API_ARMOR


3950 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

3951 ()
SQLITE_MISUSE_BKPT
;

3955 
pBt
 = 
	`sqlôe3DbNameToBåì
(
db
, 
zDbName
);

3956  
pBt
 ? 
	`sqlôe3BåìGëFûíame
(pBt) : 0;

3957 
	}
}

3963 
	$sqlôe3_db_ªad⁄ly
(
sqlôe3
 *
db
, c⁄° *
zDbName
){

3964 
Båì
 *
pBt
;

3965 #ifde‡
SQLITE_ENABLE_API_ARMOR


3966 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

3967 ()
SQLITE_MISUSE_BKPT
;

3971 
pBt
 = 
	`sqlôe3DbNameToBåì
(
db
, 
zDbName
);

3972  
pBt
 ? 
	`sqlôe3BåìIsRód⁄ly
(pBt) : -1;

3973 
	}
}

3975 #ifde‡
SQLITE_ENABLE_SNAPSHOT


3980 
	$sqlôe3_¢≠shŸ_gë
(

3981 
sqlôe3
 *
db
,

3982 c⁄° *
zDb
,

3983 
sqlôe3_¢≠shŸ
 **
µS«pshŸ


3985 
rc
 = 
SQLITE_ERROR
;

3986 #i‚de‡
SQLITE_OMIT_WAL


3988 #ifde‡
SQLITE_ENABLE_API_ARMOR


3989 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

3990  
SQLITE_MISUSE_BKPT
;

3993 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

3995 if–
db
->
autoCommô
==0 ){

3996 
iDb
 = 
	`sqlôe3FödDbName
(
db
, 
zDb
);

3997 if–
iDb
==0 || iDb>1 ){

3998 
Båì
 *
pBt
 = 
db
->
aDb
[
iDb
].pBt;

3999 if–0==
	`sqlôe3BåìIsInTøns
(
pBt
) ){

4000 
rc
 = 
	`sqlôe3BåìBegöTøns
(
pBt
, 0);

4001 if–
rc
==
SQLITE_OK
 ){

4002 
rc
 = 
	`sqlôe3PagîS«pshŸGë
(
	`sqlôe3BåìPagî
(
pBt
), 
µS«pshŸ
);

4008 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

4010  
rc
;

4011 
	}
}

4016 
	$sqlôe3_¢≠shŸ_›í
(

4017 
sqlôe3
 *
db
,

4018 c⁄° *
zDb
,

4019 
sqlôe3_¢≠shŸ
 *
pS«pshŸ


4021 
rc
 = 
SQLITE_ERROR
;

4022 #i‚de‡
SQLITE_OMIT_WAL


4024 #ifde‡
SQLITE_ENABLE_API_ARMOR


4025 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

4026  
SQLITE_MISUSE_BKPT
;

4029 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

4030 if–
db
->
autoCommô
==0 ){

4031 
iDb
;

4032 
iDb
 = 
	`sqlôe3FödDbName
(
db
, 
zDb
);

4033 if–
iDb
==0 || iDb>1 ){

4034 
Båì
 *
pBt
 = 
db
->
aDb
[
iDb
].pBt;

4035 if–0==
	`sqlôe3BåìIsInRódTøns
(
pBt
) ){

4036 
rc
 = 
	`sqlôe3PagîS«pshŸO≥n
(
	`sqlôe3BåìPagî
(
pBt
), 
pS«pshŸ
);

4037 if–
rc
==
SQLITE_OK
 ){

4038 
rc
 = 
	`sqlôe3BåìBegöTøns
(
pBt
, 0);

4039 
	`sqlôe3PagîS«pshŸO≥n
(
	`sqlôe3BåìPagî
(
pBt
), 0);

4045 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

4047  
rc
;

4048 
	}
}

4054 
	$sqlôe3_¢≠shŸ_ªcovî
(
sqlôe3
 *
db
, c⁄° *
zDb
){

4055 
rc
 = 
SQLITE_ERROR
;

4056 
iDb
;

4057 #i‚de‡
SQLITE_OMIT_WAL


4059 #ifde‡
SQLITE_ENABLE_API_ARMOR


4060 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

4061  
SQLITE_MISUSE_BKPT
;

4065 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

4066 
iDb
 = 
	`sqlôe3FödDbName
(
db
, 
zDb
);

4067 if–
iDb
==0 || iDb>1 ){

4068 
Båì
 *
pBt
 = 
db
->
aDb
[
iDb
].pBt;

4069 if–0==
	`sqlôe3BåìIsInRódTøns
(
pBt
) ){

4070 
rc
 = 
	`sqlôe3BåìBegöTøns
(
pBt
, 0);

4071 if–
rc
==
SQLITE_OK
 ){

4072 
rc
 = 
	`sqlôe3PagîS«pshŸRecovî
(
	`sqlôe3BåìPagî
(
pBt
));

4073 
	`sqlôe3BåìCommô
(
pBt
);

4077 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

4079  
rc
;

4080 
	}
}

4085 
	$sqlôe3_¢≠shŸ_‰ì
(
sqlôe3_¢≠shŸ
 *
pS«pshŸ
){

4086 
	`sqlôe3_‰ì
(
pS«pshŸ
);

4087 
	}
}

	@malloc.c

15 
	~"sqlôeI¡.h
"

16 
	~<°d¨g.h
>

23 
	$sqlôe3_ªÀa£_mem‹y
(
n
){

24 #ifde‡
SQLITE_ENABLE_MEMORY_MANAGEMENT


25  
	`sqlôe3PˇcheRñó£Mem‹y
(
n
);

30 
	`UNUSED_PARAMETER
(
n
);

33 
	}
}

39 
	sS¸©chFªe¶Ÿ
 {

40 
S¸©chFªe¶Ÿ
 *
	mpNext
;

41 } 
	tS¸©chFªe¶Ÿ
;

46 
SQLITE_WSD
 
	sMem0GlobÆ
 {

47 
sqlôe3_muãx
 *
	mmuãx
;

48 
sqlôe3_öt64
 
	mÆ¨mThªshﬁd
;

56 *
	mpS¸©chEnd
;

57 
S¸©chFªe¶Ÿ
 *
	mpS¸©chFªe
;

58 
u32
 
	mnS¸©chFªe
;

64 
	m√¨lyFuŒ
;

65 } 
	gmem0
 = { 0, 0, 0, 0, 0, 0 };

67 
	#mem0
 
	`GLOBAL
(
Mem0GlobÆ
, 
mem0
)

	)

72 
sqlôe3_muãx
 *
	$sqlôe3MÆlocMuãx
(){

73  
mem0
.
muãx
;

74 
	}
}

76 #i‚de‡
SQLITE_OMIT_DEPRECATED


82 
	$sqlôe3_mem‹y_Æ¨m
(

83 (*
xCÆlback
)(*
pArg
, 
sqlôe3_öt64
 
u£d
,
N
),

84 *
pArg
,

85 
sqlôe3_öt64
 
iThªshﬁd


87 ()
xCÆlback
;

88 ()
pArg
;

89 ()
iThªshﬁd
;

90  
SQLITE_OK
;

91 
	}
}

98 
sqlôe3_öt64
 
	$sqlôe3_so·_hóp_limô64
(
sqlôe3_öt64
 
n
){

99 
sqlôe3_öt64
 
¥i‹Limô
;

100 
sqlôe3_öt64
 
ex˚ss
;

101 
sqlôe3_öt64
 
nU£d
;

102 #i‚de‡
SQLITE_OMIT_AUTOINIT


103 
rc
 = 
	`sqlôe3_öôülize
();

104 if–
rc
 )  -1;

106 
	`sqlôe3_muãx_íãr
(
mem0
.
muãx
);

107 
¥i‹Limô
 = 
mem0
.
Æ¨mThªshﬁd
;

108 if–
n
<0 ){

109 
	`sqlôe3_muãx_Àave
(
mem0
.
muãx
);

110  
¥i‹Limô
;

112 
mem0
.
Æ¨mThªshﬁd
 = 
n
;

113 
nU£d
 = 
	`sqlôe3SètusVÆue
(
SQLITE_STATUS_MEMORY_USED
);

114 
mem0
.
√¨lyFuŒ
 = (
n
>0 &&Ç<=
nU£d
);

115 
	`sqlôe3_muãx_Àave
(
mem0
.
muãx
);

116 
ex˚ss
 = 
	`sqlôe3_mem‹y_u£d
(Ë- 
n
;

117 if–
ex˚ss
>0 ) 
	`sqlôe3_ªÀa£_mem‹y
(()(excess & 0x7fffffff));

118  
¥i‹Limô
;

119 
	}
}

120 
	$sqlôe3_so·_hóp_limô
(
n
){

121 if–
n
<0 )Ç = 0;

122 
	`sqlôe3_so·_hóp_limô64
(
n
);

123 
	}
}

128 
	$sqlôe3MÆlocInô
(){

129 
rc
;

130 if–
sqlôe3GlobÆC⁄fig
.
m
.
xMÆloc
==0 ){

131 
	`sqlôe3MemSëDeÁu…
();

133 
	`mem£t
(&
mem0
, 0, (mem0));

134 
mem0
.
muãx
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MEM
);

135 if–
sqlôe3GlobÆC⁄fig
.
pS¸©ch
 && sqlôe3GlobÆC⁄fig.
szS¸©ch
>=100

136 && 
sqlôe3GlobÆC⁄fig
.
nS¸©ch
>0 ){

137 
i
, 
n
, 
sz
;

138 
S¸©chFªe¶Ÿ
 *
pSlŸ
;

139 
sz
 = 
	`ROUNDDOWN8
(
sqlôe3GlobÆC⁄fig
.
szS¸©ch
);

140 
sqlôe3GlobÆC⁄fig
.
szS¸©ch
 = 
sz
;

141 
pSlŸ
 = (
S¸©chFªe¶Ÿ
*)
sqlôe3GlobÆC⁄fig
.
pS¸©ch
;

142 
n
 = 
sqlôe3GlobÆC⁄fig
.
nS¸©ch
;

143 
mem0
.
pS¸©chFªe
 = 
pSlŸ
;

144 
mem0
.
nS¸©chFªe
 = 
n
;

145 
i
=0; i<
n
-1; i++){

146 
pSlŸ
->
pNext
 = (
S¸©chFªe¶Ÿ
*)(
sz
+(*)pSlot);

147 
pSlŸ
 =ÖSlŸ->
pNext
;

149 
pSlŸ
->
pNext
 = 0;

150 
mem0
.
pS¸©chEnd
 = (*)&
pSlŸ
[1];

152 
mem0
.
pS¸©chEnd
 = 0;

153 
sqlôe3GlobÆC⁄fig
.
pS¸©ch
 = 0;

154 
sqlôe3GlobÆC⁄fig
.
szS¸©ch
 = 0;

155 
sqlôe3GlobÆC⁄fig
.
nS¸©ch
 = 0;

157 if–
sqlôe3GlobÆC⁄fig
.
pPage
==0 || sqlôe3GlobÆC⁄fig.
szPage
<512

158 || 
sqlôe3GlobÆC⁄fig
.
nPage
<=0 ){

159 
sqlôe3GlobÆC⁄fig
.
pPage
 = 0;

160 
sqlôe3GlobÆC⁄fig
.
szPage
 = 0;

162 
rc
 = 
sqlôe3GlobÆC⁄fig
.
m
.
	`xInô
(sqlôe3GlobÆC⁄fig.m.
pAµD©a
);

163 if–
rc
!=
SQLITE_OK
 ) 
	`mem£t
(&
mem0
, 0, (mem0));

164  
rc
;

165 
	}
}

172 
	$sqlôe3HópNóæyFuŒ
(){

173  
mem0
.
√¨lyFuŒ
;

174 
	}
}

179 
	$sqlôe3MÆlocEnd
(){

180 if–
sqlôe3GlobÆC⁄fig
.
m
.
xShutdown
 ){

181 
sqlôe3GlobÆC⁄fig
.
m
.
	`xShutdown
(sqlôe3GlobÆC⁄fig.m.
pAµD©a
);

183 
	`mem£t
(&
mem0
, 0, (mem0));

184 
	}
}

189 
sqlôe3_öt64
 
	$sqlôe3_mem‹y_u£d
(){

190 
sqlôe3_öt64
 
ªs
, 
mx
;

191 
	`sqlôe3_°©us64
(
SQLITE_STATUS_MEMORY_USED
, &
ªs
, &
mx
, 0);

192  
ªs
;

193 
	}
}

200 
sqlôe3_öt64
 
	$sqlôe3_mem‹y_highw©î
(
ª£tFœg
){

201 
sqlôe3_öt64
 
ªs
, 
mx
;

202 
	`sqlôe3_°©us64
(
SQLITE_STATUS_MEMORY_USED
, &
ªs
, &
mx
, 
ª£tFœg
);

203  
mx
;

204 
	}
}

209 
	$sqlôe3MÆlocAœrm
(
nByã
){

210 if–
mem0
.
Æ¨mThªshﬁd
<=0 ) ;

211 
	`sqlôe3_muãx_Àave
(
mem0
.
muãx
);

212 
	`sqlôe3_ªÀa£_mem‹y
(
nByã
);

213 
	`sqlôe3_muãx_íãr
(
mem0
.
muãx
);

214 
	}
}

220 
	$mÆlocWôhAœrm
(
n
, **
µ
){

221 
nFuŒ
;

222 *
p
;

223 
	`as£π
–
	`sqlôe3_muãx_hñd
(
mem0
.
muãx
) );

224 
nFuŒ
 = 
sqlôe3GlobÆC⁄fig
.
m
.
	`xRoundup
(
n
);

225 
	`sqlôe3SètusHighw©î
(
SQLITE_STATUS_MALLOC_SIZE
, 
n
);

226 if–
mem0
.
Æ¨mThªshﬁd
>0 ){

227 
sqlôe3_öt64
 
nU£d
 = 
	`sqlôe3SètusVÆue
(
SQLITE_STATUS_MEMORY_USED
);

228 if–
nU£d
 >
mem0
.
Æ¨mThªshﬁd
 - 
nFuŒ
 ){

229 
mem0
.
√¨lyFuŒ
 = 1;

230 
	`sqlôe3MÆlocAœrm
(
nFuŒ
);

232 
mem0
.
√¨lyFuŒ
 = 0;

235 
p
 = 
sqlôe3GlobÆC⁄fig
.
m
.
	`xMÆloc
(
nFuŒ
);

236 #ifde‡
SQLITE_ENABLE_MEMORY_MANAGEMENT


237 if–
p
==0 && 
mem0
.
Æ¨mThªshﬁd
>0 ){

238 
	`sqlôe3MÆlocAœrm
(
nFuŒ
);

239 
p
 = 
sqlôe3GlobÆC⁄fig
.
m
.
	`xMÆloc
(
nFuŒ
);

242 if–
p
 ){

243 
nFuŒ
 = 
	`sqlôe3MÆlocSize
(
p
);

244 
	`sqlôe3SètusUp
(
SQLITE_STATUS_MEMORY_USED
, 
nFuŒ
);

245 
	`sqlôe3SètusUp
(
SQLITE_STATUS_MALLOC_COUNT
, 1);

247 *
µ
 = 
p
;

248  
nFuŒ
;

249 
	}
}

255 *
	$sqlôe3MÆloc
(
u64
 
n
){

256 *
p
;

257 if–
n
==0 ||Ç>=0x7fffff00 ){

263 
p
 = 0;

264 }if–
sqlôe3GlobÆC⁄fig
.
bMem°©
 ){

265 
	`sqlôe3_muãx_íãr
(
mem0
.
muãx
);

266 
	`mÆlocWôhAœrm
(()
n
, &
p
);

267 
	`sqlôe3_muãx_Àave
(
mem0
.
muãx
);

269 
p
 = 
sqlôe3GlobÆC⁄fig
.
m
.
	`xMÆloc
(()
n
);

271 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(
p
) );

272  
p
;

273 
	}
}

280 *
	$sqlôe3_mÆloc
(
n
){

281 #i‚de‡
SQLITE_OMIT_AUTOINIT


282 if–
	`sqlôe3_öôülize
() )  0;

284  
n
<=0 ? 0 : 
	`sqlôe3MÆloc
(n);

285 
	}
}

286 *
	$sqlôe3_mÆloc64
(
sqlôe3_uöt64
 
n
){

287 #i‚de‡
SQLITE_OMIT_AUTOINIT


288 if–
	`sqlôe3_öôülize
() )  0;

290  
	`sqlôe3MÆloc
(
n
);

291 
	}
}

299 #i‡
SQLITE_THREADSAFE
==0 && !
deföed
(
NDEBUG
)

300 
	gs¸©chAŒocOut
 = 0;

312 *
	$sqlôe3S¸©chMÆloc
(
n
){

313 *
p
;

314 
	`as£π
–
n
>0 );

316 
	`sqlôe3_muãx_íãr
(
mem0
.
muãx
);

317 
	`sqlôe3SètusHighw©î
(
SQLITE_STATUS_SCRATCH_SIZE
, 
n
);

318 if–
mem0
.
nS¸©chFªe
 && 
sqlôe3GlobÆC⁄fig
.
szS¸©ch
>=
n
 ){

319 
p
 = 
mem0
.
pS¸©chFªe
;

320 
mem0
.
pS¸©chFªe
 = mem0.pS¸©chFªe->
pNext
;

321 
mem0
.
nS¸©chFªe
--;

322 
	`sqlôe3SètusUp
(
SQLITE_STATUS_SCRATCH_USED
, 1);

323 
	`sqlôe3_muãx_Àave
(
mem0
.
muãx
);

325 
	`sqlôe3_muãx_Àave
(
mem0
.
muãx
);

326 
p
 = 
	`sqlôe3MÆloc
(
n
);

327 if–
sqlôe3GlobÆC⁄fig
.
bMem°©
 && 
p
 ){

328 
	`sqlôe3_muãx_íãr
(
mem0
.
muãx
);

329 
	`sqlôe3SètusUp
(
SQLITE_STATUS_SCRATCH_OVERFLOW
, 
	`sqlôe3MÆlocSize
(
p
));

330 
	`sqlôe3_muãx_Àave
(
mem0
.
muãx
);

332 
	`sqlôe3MemdebugSëTy≥
(
p
, 
MEMTYPE_SCRATCH
);

334 
	`as£π
–
	`sqlôe3_muãx_nŸhñd
(
mem0
.
muãx
) );

337 #i‡
SQLITE_THREADSAFE
==0 && !
	`deföed
(
NDEBUG
)

343 
	`as£π
–
s¸©chAŒocOut
==0 );

344 if–
p
 ) 
s¸©chAŒocOut
++;

347  
p
;

348 
	}
}

349 
	$sqlôe3S¸©chFªe
(*
p
){

350 if–
p
 ){

352 #i‡
SQLITE_THREADSAFE
==0 && !
	`deföed
(
NDEBUG
)

357 
	`as£π
–
s¸©chAŒocOut
>=1 && scratchAllocOut<=2 );

358 
s¸©chAŒocOut
--;

361 if–
	`SQLITE_WITHIN
(
p
, 
sqlôe3GlobÆC⁄fig
.
pS¸©ch
, 
mem0
.
pS¸©chEnd
) ){

363 
S¸©chFªe¶Ÿ
 *
pSlŸ
;

364 
pSlŸ
 = (
S¸©chFªe¶Ÿ
*)
p
;

365 
	`sqlôe3_muãx_íãr
(
mem0
.
muãx
);

366 
pSlŸ
->
pNext
 = 
mem0
.
pS¸©chFªe
;

367 
mem0
.
pS¸©chFªe
 = 
pSlŸ
;

368 
mem0
.
nS¸©chFªe
++;

369 
	`as£π
–
mem0
.
nS¸©chFªe
 <(
u32
)
sqlôe3GlobÆC⁄fig
.
nS¸©ch
 );

370 
	`sqlôe3SètusDown
(
SQLITE_STATUS_SCRATCH_USED
, 1);

371 
	`sqlôe3_muãx_Àave
(
mem0
.
muãx
);

374 
	`as£π
–
	`sqlôe3MemdebugHasTy≥
(
p
, 
MEMTYPE_SCRATCH
) );

375 
	`as£π
–
	`sqlôe3MemdebugNoTy≥
(
p
, (
u8
)~
MEMTYPE_SCRATCH
) );

376 
	`sqlôe3MemdebugSëTy≥
(
p
, 
MEMTYPE_HEAP
);

377 if–
sqlôe3GlobÆC⁄fig
.
bMem°©
 ){

378 
iSize
 = 
	`sqlôe3MÆlocSize
(
p
);

379 
	`sqlôe3_muãx_íãr
(
mem0
.
muãx
);

380 
	`sqlôe3SètusDown
(
SQLITE_STATUS_SCRATCH_OVERFLOW
, 
iSize
);

381 
	`sqlôe3SètusDown
(
SQLITE_STATUS_MEMORY_USED
, 
iSize
);

382 
	`sqlôe3SètusDown
(
SQLITE_STATUS_MALLOC_COUNT
, 1);

383 
sqlôe3GlobÆC⁄fig
.
m
.
	`xFªe
(
p
);

384 
	`sqlôe3_muãx_Àave
(
mem0
.
muãx
);

386 
sqlôe3GlobÆC⁄fig
.
m
.
	`xFªe
(
p
);

390 
	}
}

395 #i‚de‡
SQLITE_OMIT_LOOKASIDE


396 
	$isLookaside
(
sqlôe3
 *
db
, *
p
){

397  
	`SQLITE_WITHIN
(
p
, 
db
->
lookaside
.
pSèπ
, db->lookaside.
pEnd
);

398 
	}
}

400 
	#isLookaside
(
A
,
B
Ë0

	)

407 
	$sqlôe3MÆlocSize
(*
p
){

408 
	`as£π
–
	`sqlôe3MemdebugHasTy≥
(
p
, 
MEMTYPE_HEAP
) );

409  
sqlôe3GlobÆC⁄fig
.
m
.
	`xSize
(
p
);

410 
	}
}

411 
	$sqlôe3DbMÆlocSize
(
sqlôe3
 *
db
, *
p
){

412 
	`as£π
–
p
!=0 );

413 if–
db
==0 || !
	`isLookaside
(db,
p
) ){

414 #i‡
SQLITE_DEBUG


415 if–
db
==0 ){

416 
	`as£π
–
	`sqlôe3MemdebugNoTy≥
(
p
, (
u8
)~
MEMTYPE_HEAP
) );

417 
	`as£π
–
	`sqlôe3MemdebugHasTy≥
(
p
, 
MEMTYPE_HEAP
) );

419 
	`as£π
–
	`sqlôe3MemdebugHasTy≥
(
p
, (
MEMTYPE_LOOKASIDE
|
MEMTYPE_HEAP
)) );

420 
	`as£π
–
	`sqlôe3MemdebugNoTy≥
(
p
, (
u8
)~(
MEMTYPE_LOOKASIDE
|
MEMTYPE_HEAP
)) );

423  
sqlôe3GlobÆC⁄fig
.
m
.
	`xSize
(
p
);

425 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

426  
db
->
lookaside
.
sz
;

428 
	}
}

429 
sqlôe3_uöt64
 
	$sqlôe3_msize
(*
p
){

430 
	`as£π
–
	`sqlôe3MemdebugNoTy≥
(
p
, (
u8
)~
MEMTYPE_HEAP
) );

431 
	`as£π
–
	`sqlôe3MemdebugHasTy≥
(
p
, 
MEMTYPE_HEAP
) );

432  
p
 ? 
sqlôe3GlobÆC⁄fig
.
m
.
	`xSize
(p) : 0;

433 
	}
}

438 
	$sqlôe3_‰ì
(*
p
){

439 if–
p
==0 ) ;

440 
	`as£π
–
	`sqlôe3MemdebugHasTy≥
(
p
, 
MEMTYPE_HEAP
) );

441 
	`as£π
–
	`sqlôe3MemdebugNoTy≥
(
p
, (
u8
)~
MEMTYPE_HEAP
) );

442 if–
sqlôe3GlobÆC⁄fig
.
bMem°©
 ){

443 
	`sqlôe3_muãx_íãr
(
mem0
.
muãx
);

444 
	`sqlôe3SètusDown
(
SQLITE_STATUS_MEMORY_USED
, 
	`sqlôe3MÆlocSize
(
p
));

445 
	`sqlôe3SètusDown
(
SQLITE_STATUS_MALLOC_COUNT
, 1);

446 
sqlôe3GlobÆC⁄fig
.
m
.
	`xFªe
(
p
);

447 
	`sqlôe3_muãx_Àave
(
mem0
.
muãx
);

449 
sqlôe3GlobÆC⁄fig
.
m
.
	`xFªe
(
p
);

451 
	}
}

457 
SQLITE_NOINLINE
 
	$mósuªAŒoˇti⁄Size
(
sqlôe3
 *
db
, *
p
){

458 *
db
->
≤ByãsFªed
 +
	`sqlôe3DbMÆlocSize
(db,
p
);

459 
	}
}

465 
	$sqlôe3DbFªe
(
sqlôe3
 *
db
, *
p
){

466 
	`as£π
–
db
==0 || 
	`sqlôe3_muãx_hñd
(db->
muãx
) );

467 if–
p
==0 ) ;

468 if–
db
 ){

469 if–
db
->
≤ByãsFªed
 ){

470 
	`mósuªAŒoˇti⁄Size
(
db
, 
p
);

473 if–
	`isLookaside
(
db
, 
p
) ){

474 
LookasideSlŸ
 *
pBuf
 = (LookasideSlŸ*)
p
;

475 #i‡
SQLITE_DEBUG


477 
	`mem£t
(
p
, 0xØ, 
db
->
lookaside
.
sz
);

479 
pBuf
->
pNext
 = 
db
->
lookaside
.
pFªe
;

480 
db
->
lookaside
.
pFªe
 = 
pBuf
;

481 
db
->
lookaside
.
nOut
--;

485 
	`as£π
–
	`sqlôe3MemdebugHasTy≥
(
p
, (
MEMTYPE_LOOKASIDE
|
MEMTYPE_HEAP
)) );

486 
	`as£π
–
	`sqlôe3MemdebugNoTy≥
(
p
, (
u8
)~(
MEMTYPE_LOOKASIDE
|
MEMTYPE_HEAP
)) );

487 
	`as£π
–
db
!=0 || 
	`sqlôe3MemdebugNoTy≥
(
p
, 
MEMTYPE_LOOKASIDE
) );

488 
	`sqlôe3MemdebugSëTy≥
(
p
, 
MEMTYPE_HEAP
);

489 
	`sqlôe3_‰ì
(
p
);

490 
	}
}

495 *
	$sqlôe3RóŒoc
(*
pOld
, 
u64
 
nByãs
){

496 
nOld
, 
nNew
, 
nDiff
;

497 *
pNew
;

498 
	`as£π
–
	`sqlôe3MemdebugHasTy≥
(
pOld
, 
MEMTYPE_HEAP
) );

499 
	`as£π
–
	`sqlôe3MemdebugNoTy≥
(
pOld
, (
u8
)~
MEMTYPE_HEAP
) );

500 if–
pOld
==0 ){

501  
	`sqlôe3MÆloc
(
nByãs
);

503 if–
nByãs
==0 ){

504 
	`sqlôe3_‰ì
(
pOld
);

507 if–
nByãs
>=0x7fffff00 ){

511 
nOld
 = 
	`sqlôe3MÆlocSize
(
pOld
);

515 
nNew
 = 
sqlôe3GlobÆC⁄fig
.
m
.
	`xRoundup
(()
nByãs
);

516 if–
nOld
==
nNew
 ){

517 
pNew
 = 
pOld
;

518 }if–
sqlôe3GlobÆC⁄fig
.
bMem°©
 ){

519 
	`sqlôe3_muãx_íãr
(
mem0
.
muãx
);

520 
	`sqlôe3SètusHighw©î
(
SQLITE_STATUS_MALLOC_SIZE
, ()
nByãs
);

521 
nDiff
 = 
nNew
 - 
nOld
;

522 if–
nDiff
>0 && 
	`sqlôe3SètusVÆue
(
SQLITE_STATUS_MEMORY_USED
) >=

523 
mem0
.
Æ¨mThªshﬁd
-
nDiff
 ){

524 
	`sqlôe3MÆlocAœrm
(
nDiff
);

526 
pNew
 = 
sqlôe3GlobÆC⁄fig
.
m
.
	`xRóŒoc
(
pOld
, 
nNew
);

527 if–
pNew
==0 && 
mem0
.
Æ¨mThªshﬁd
>0 ){

528 
	`sqlôe3MÆlocAœrm
(()
nByãs
);

529 
pNew
 = 
sqlôe3GlobÆC⁄fig
.
m
.
	`xRóŒoc
(
pOld
, 
nNew
);

531 if–
pNew
 ){

532 
nNew
 = 
	`sqlôe3MÆlocSize
(
pNew
);

533 
	`sqlôe3SètusUp
(
SQLITE_STATUS_MEMORY_USED
, 
nNew
-
nOld
);

535 
	`sqlôe3_muãx_Àave
(
mem0
.
muãx
);

537 
pNew
 = 
sqlôe3GlobÆC⁄fig
.
m
.
	`xRóŒoc
(
pOld
, 
nNew
);

539 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(
pNew
) );

540  
pNew
;

541 
	}
}

547 *
	$sqlôe3_ªÆloc
(*
pOld
, 
n
){

548 #i‚de‡
SQLITE_OMIT_AUTOINIT


549 if–
	`sqlôe3_öôülize
() )  0;

551 if–
n
<0 )Ç = 0;

552  
	`sqlôe3RóŒoc
(
pOld
, 
n
);

553 
	}
}

554 *
	$sqlôe3_ªÆloc64
(*
pOld
, 
sqlôe3_uöt64
 
n
){

555 #i‚de‡
SQLITE_OMIT_AUTOINIT


556 if–
	`sqlôe3_öôülize
() )  0;

558  
	`sqlôe3RóŒoc
(
pOld
, 
n
);

559 
	}
}

565 *
	$sqlôe3MÆlocZîo
(
u64
 
n
){

566 *
p
 = 
	`sqlôe3MÆloc
(
n
);

567 if–
p
 ){

568 
	`mem£t
(
p
, 0, (
size_t
)
n
);

570  
p
;

571 
	}
}

577 *
	$sqlôe3DbMÆlocZîo
(
sqlôe3
 *
db
, 
u64
 
n
){

578 *
p
;

579 
	`ã°ˇ£
–
db
==0 );

580 
p
 = 
	`sqlôe3DbMÆlocRaw
(
db
, 
n
);

581 if–
p
 ) 
	`mem£t
’, 0, (
size_t
)
n
);

582  
p
;

583 
	}
}

589 
SQLITE_NOINLINE
 *
	$dbMÆlocRawFöish
(
sqlôe3
 *
db
, 
u64
 
n
){

590 *
p
;

591 
	`as£π
–
db
!=0 );

592 
p
 = 
	`sqlôe3MÆloc
(
n
);

593 if–!
p
 ) 
	`sqlôe3OomFau…
(
db
);

594 
	`sqlôe3MemdebugSëTy≥
(
p
,

595 (
db
->
lookaside
.
bDißbÀ
==0Ë? 
MEMTYPE_LOOKASIDE
 : 
MEMTYPE_HEAP
);

596  
p
;

597 
	}
}

621 *
	$sqlôe3DbMÆlocRaw
(
sqlôe3
 *
db
, 
u64
 
n
){

622 *
p
;

623 if–
db
 )  
	`sqlôe3DbMÆlocRawNN
(db, 
n
);

624 
p
 = 
	`sqlôe3MÆloc
(
n
);

625 
	`sqlôe3MemdebugSëTy≥
(
p
, 
MEMTYPE_HEAP
);

626  
p
;

627 
	}
}

628 *
	$sqlôe3DbMÆlocRawNN
(
sqlôe3
 *
db
, 
u64
 
n
){

629 #i‚de‡
SQLITE_OMIT_LOOKASIDE


630 
LookasideSlŸ
 *
pBuf
;

631 
	`as£π
–
db
!=0 );

632 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

633 
	`as£π
–
db
->
≤ByãsFªed
==0 );

634 if–
db
->
lookaside
.
bDißbÀ
==0 ){

635 
	`as£π
–
db
->
mÆlocFaûed
==0 );

636 if–
n
>
db
->
lookaside
.
sz
 ){

637 
db
->
lookaside
.
™Sèt
[1]++;

638 }if–(
pBuf
 = 
db
->
lookaside
.
pFªe
)==0 ){

639 
db
->
lookaside
.
™Sèt
[2]++;

641 
db
->
lookaside
.
pFªe
 = 
pBuf
->
pNext
;

642 
db
->
lookaside
.
nOut
++;

643 
db
->
lookaside
.
™Sèt
[0]++;

644 if–
db
->
lookaside
.
nOut
>db->lookaside.
mxOut
 ){

645 
db
->
lookaside
.
mxOut
 = db->lookaside.
nOut
;

647  (*)
pBuf
;

649 }if–
db
->
mÆlocFaûed
 ){

653 
	`as£π
–
db
!=0 );

654 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

655 
	`as£π
–
db
->
≤ByãsFªed
==0 );

656 if–
db
->
mÆlocFaûed
 ){

660  
	`dbMÆlocRawFöish
(
db
, 
n
);

661 
	}
}

664 
SQLITE_NOINLINE
 *
dbRóŒocFöish
(
sqlôe3
 *
db
, *
p
, 
u64
 
n
);

670 *
	$sqlôe3DbRóŒoc
(
sqlôe3
 *
db
, *
p
, 
u64
 
n
){

671 
	`as£π
–
db
!=0 );

672 if–
p
==0 )  
	`sqlôe3DbMÆlocRawNN
(
db
, 
n
);

673 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

674 if–
	`isLookaside
(
db
,
p
Ë&& 
n
<=db->
lookaside
.
sz
 ) Ö;

675  
	`dbRóŒocFöish
(
db
, 
p
, 
n
);

676 
	}
}

677 
SQLITE_NOINLINE
 *
	$dbRóŒocFöish
(
sqlôe3
 *
db
, *
p
, 
u64
 
n
){

678 *
pNew
 = 0;

679 
	`as£π
–
db
!=0 );

680 
	`as£π
–
p
!=0 );

681 if–
db
->
mÆlocFaûed
==0 ){

682 if–
	`isLookaside
(
db
, 
p
) ){

683 
pNew
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, 
n
);

684 if–
pNew
 ){

685 
	`mem˝y
(
pNew
, 
p
, 
db
->
lookaside
.
sz
);

686 
	`sqlôe3DbFªe
(
db
, 
p
);

689 
	`as£π
–
	`sqlôe3MemdebugHasTy≥
(
p
, (
MEMTYPE_LOOKASIDE
|
MEMTYPE_HEAP
)) );

690 
	`as£π
–
	`sqlôe3MemdebugNoTy≥
(
p
, (
u8
)~(
MEMTYPE_LOOKASIDE
|
MEMTYPE_HEAP
)) );

691 
	`sqlôe3MemdebugSëTy≥
(
p
, 
MEMTYPE_HEAP
);

692 
pNew
 = 
	`sqlôe3_ªÆloc64
(
p
, 
n
);

693 if–!
pNew
 ){

694 
	`sqlôe3OomFau…
(
db
);

696 
	`sqlôe3MemdebugSëTy≥
(
pNew
,

697 (
db
->
lookaside
.
bDißbÀ
==0 ? 
MEMTYPE_LOOKASIDE
 : 
MEMTYPE_HEAP
));

700  
pNew
;

701 
	}
}

707 *
	$sqlôe3DbRóŒocOrFªe
(
sqlôe3
 *
db
, *
p
, 
u64
 
n
){

708 *
pNew
;

709 
pNew
 = 
	`sqlôe3DbRóŒoc
(
db
, 
p
, 
n
);

710 if–!
pNew
 ){

711 
	`sqlôe3DbFªe
(
db
, 
p
);

713  
pNew
;

714 
	}
}

723 *
	$sqlôe3DbSåDup
(
sqlôe3
 *
db
, c⁄° *
z
){

724 *
zNew
;

725 
size_t
 
n
;

726 if–
z
==0 ){

729 
n
 = 
	`°æí
(
z
) + 1;

730 
zNew
 = 
	`sqlôe3DbMÆlocRaw
(
db
, 
n
);

731 if–
zNew
 ){

732 
	`mem˝y
(
zNew
, 
z
, 
n
);

734  
zNew
;

735 
	}
}

736 *
	$sqlôe3DbSåNDup
(
sqlôe3
 *
db
, c⁄° *
z
, 
u64
 
n
){

737 *
zNew
;

738 
	`as£π
–
db
!=0 );

739 if–
z
==0 ){

742 
	`as£π
–(
n
&0x7fffffff)==n );

743 
zNew
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, 
n
+1);

744 if–
zNew
 ){

745 
	`mem˝y
(
zNew
, 
z
, (
size_t
)
n
);

746 
zNew
[
n
] = 0;

748  
zNew
;

749 
	}
}

754 
	$sqlôe3SëSåög
(**
pz
, 
sqlôe3
 *
db
, c⁄° *
zNew
){

755 
	`sqlôe3DbFªe
(
db
, *
pz
);

756 *
pz
 = 
	`sqlôe3DbSåDup
(
db
, 
zNew
);

757 
	}
}

765 
	$sqlôe3OomFau…
(
sqlôe3
 *
db
){

766 if–
db
->
mÆlocFaûed
==0 && db->
bBíignMÆloc
==0 ){

767 
db
->
mÆlocFaûed
 = 1;

768 if–
db
->
nVdbeExec
>0 ){

769 
db
->
u1
.
isI¡îru±ed
 = 1;

771 
db
->
lookaside
.
bDißbÀ
++;

773 
	}
}

782 
	$sqlôe3OomCÀ¨
(
sqlôe3
 *
db
){

783 if–
db
->
mÆlocFaûed
 && db->
nVdbeExec
==0 ){

784 
db
->
mÆlocFaûed
 = 0;

785 
db
->
u1
.
isI¡îru±ed
 = 0;

786 
	`as£π
–
db
->
lookaside
.
bDißbÀ
>0 );

787 
db
->
lookaside
.
bDißbÀ
--;

789 
	}
}

794 
SQLITE_NOINLINE
 
	$≠iOomEº‹
(
sqlôe3
 *
db
){

795 
	`sqlôe3OomCÀ¨
(
db
);

796 
	`sqlôe3Eº‹
(
db
, 
SQLITE_NOMEM
);

797  
SQLITE_NOMEM_BKPT
;

798 
	}
}

812 
	$sqlôe3ApiExô
(
sqlôe3
* 
db
, 
rc
){

817 
	`as£π
–
db
!=0 );

818 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

819 if–
db
->
mÆlocFaûed
 || 
rc
==
SQLITE_IOERR_NOMEM
 ){

820  
	`≠iOomEº‹
(
db
);

822  
rc
 & 
db
->
îrMask
;

823 
	}
}

	@mem0.c

19 
	~"sqlôeI¡.h
"

26 #ifde‡
SQLITE_ZERO_MALLOC


31 *
	$sqlôe3MemMÆloc
(
nByã
){  0; 
	}
}

32 
	$sqlôe3MemFªe
(*
pPri‹
){ ; 
	}
}

33 *
	$sqlôe3MemRóŒoc
(*
pPri‹
, 
nByã
){  0; 
	}
}

34 
	$sqlôe3MemSize
(*
pPri‹
){  0; 
	}
}

35 
	$sqlôe3MemRoundup
(
n
){ Ç; 
	}
}

36 
	$sqlôe3MemInô
(*
NŸU£d
){  
SQLITE_OK
; 
	}
}

37 
	$sqlôe3MemShutdown
(*
NŸU£d
){ ; 
	}
}

45 
	$sqlôe3MemSëDeÁu…
(){

46 c⁄° 
sqlôe3_mem_mëhods
 
deÁu…Mëhods
 = {

47 
sqlôe3MemMÆloc
,

48 
sqlôe3MemFªe
,

49 
sqlôe3MemRóŒoc
,

50 
sqlôe3MemSize
,

51 
sqlôe3MemRoundup
,

52 
sqlôe3MemInô
,

53 
sqlôe3MemShutdown
,

56 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_MALLOC
, &
deÁu…Mëhods
);

57 
	}
}

	@mem1.c

44 
	~"sqlôeI¡.h
"

51 #ifde‡
SQLITE_SYSTEM_MALLOC


52 #i‡
deföed
(
__APPLE__
Ë&& !deföed(
SQLITE_WITHOUT_ZONEMALLOC
)

58 
	~<sys/sys˘l.h
>

59 
	~<mÆloc/mÆloc.h
>

60 
	~<libkîn/OSAtomic.h
>

61 
mÆloc_z⁄e_t
* 
	g_sqlôeZ⁄e_
;

62 
	#SQLITE_MALLOC
(
x
Ë
	`mÆloc_z⁄e_mÆloc
(
_sqlôeZ⁄e_
, (x))

	)

63 
	#SQLITE_FREE
(
x
Ë
	`mÆloc_z⁄e_‰ì
(
_sqlôeZ⁄e_
, (x));

	)

64 
	#SQLITE_REALLOC
(
x
,
y
Ë
	`mÆloc_z⁄e_ªÆloc
(
_sqlôeZ⁄e_
, (x), (y))

	)

65 
	#SQLITE_MALLOCSIZE
(
x
) \

66 (
_sqlôeZ⁄e_
 ? _sqlôeZ⁄e_->
	`size
(_sqlôeZ⁄e_,
x
Ë: 
	`mÆloc_size
(x))

	)

74 
	#SQLITE_MALLOC
(
x
Ë
	`mÆloc
(x)

	)

75 
	#SQLITE_FREE
(
x
Ë
	`‰ì
(x)

	)

76 
	#SQLITE_REALLOC
(
x
,
y
Ë
	`ªÆloc
((x),(y))

	)

82 #i‡
HAVE_MALLOC_H
 && 
HAVE_MALLOC_USABLE_SIZE


83 
	#SQLITE_USE_MALLOC_H
 1

	)

84 
	#SQLITE_USE_MALLOC_USABLE_SIZE
 1

	)

91 #ñi‡
deföed
(
_MSC_VER
Ë&& !deföed(
SQLITE_WITHOUT_MSIZE
)

92 
	#SQLITE_USE_MALLOC_H


	)

93 
	#SQLITE_USE_MSIZE


	)

103 #i‡
deföed
(
SQLITE_USE_MALLOC_H
)

104 
	~<mÆloc.h
>

105 #i‡
deföed
(
SQLITE_USE_MALLOC_USABLE_SIZE
)

106 #i‡!
deföed
(
SQLITE_MALLOCSIZE
)

107 
	#SQLITE_MALLOCSIZE
(
x
Ë
	`mÆloc_ußbÀ_size
(x)

	)

109 #ñi‡
deföed
(
SQLITE_USE_MSIZE
)

110 #i‡!
deföed
(
SQLITE_MALLOCSIZE
)

111 
	#SQLITE_MALLOCSIZE
 
_msize


	)

126 *
	$sqlôe3MemMÆloc
(
nByã
){

127 #ifde‡
SQLITE_MALLOCSIZE


128 *
p
 = 
	`SQLITE_MALLOC
–
nByã
 );

129 if–
p
==0 ){

130 
	`ã°ˇ£
–
sqlôe3GlobÆC⁄fig
.
xLog
!=0 );

131 
	`sqlôe3_log
(
SQLITE_NOMEM
, "ÁûedÅÿÆloˇã %u byã†o‡mem‹y", 
nByã
);

133  
p
;

135 
sqlôe3_öt64
 *
p
;

136 
	`as£π
–
nByã
>0 );

137 
nByã
 = 
	`ROUND8
(nByte);

138 
p
 = 
	`SQLITE_MALLOC
–
nByã
+8 );

139 if–
p
 ){

140 
p
[0] = 
nByã
;

141 
p
++;

143 
	`ã°ˇ£
–
sqlôe3GlobÆC⁄fig
.
xLog
!=0 );

144 
	`sqlôe3_log
(
SQLITE_NOMEM
, "ÁûedÅÿÆloˇã %u byã†o‡mem‹y", 
nByã
);

146  (*)
p
;

148 
	}
}

158 
	$sqlôe3MemFªe
(*
pPri‹
){

159 #ifde‡
SQLITE_MALLOCSIZE


160 
	`SQLITE_FREE
(
pPri‹
);

162 
sqlôe3_öt64
 *
p
 = (sqlôe3_öt64*)
pPri‹
;

163 
	`as£π
–
pPri‹
!=0 );

164 
p
--;

165 
	`SQLITE_FREE
(
p
);

167 
	}
}

173 
	$sqlôe3MemSize
(*
pPri‹
){

174 #ifde‡
SQLITE_MALLOCSIZE


175 
	`as£π
–
pPri‹
!=0 );

176  ()
	`SQLITE_MALLOCSIZE
(
pPri‹
);

178 
sqlôe3_öt64
 *
p
;

179 
	`as£π
–
pPri‹
!=0 );

180 
p
 = (
sqlôe3_öt64
*)
pPri‹
;

181 
p
--;

182  ()
p
[0];

184 
	}
}

196 *
	$sqlôe3MemRóŒoc
(*
pPri‹
, 
nByã
){

197 #ifde‡
SQLITE_MALLOCSIZE


198 *
p
 = 
	`SQLITE_REALLOC
(
pPri‹
, 
nByã
);

199 if–
p
==0 ){

200 
	`ã°ˇ£
–
sqlôe3GlobÆC⁄fig
.
xLog
!=0 );

201 
	`sqlôe3_log
(
SQLITE_NOMEM
,

203 
	`SQLITE_MALLOCSIZE
(
pPri‹
), 
nByã
);

205  
p
;

207 
sqlôe3_öt64
 *
p
 = (sqlôe3_öt64*)
pPri‹
;

208 
	`as£π
–
pPri‹
!=0 && 
nByã
>0 );

209 
	`as£π
–
nByã
==
	`ROUND8
(nByte) );

210 
p
--;

211 
p
 = 
	`SQLITE_REALLOC
’, 
nByã
+8 );

212 if–
p
 ){

213 
p
[0] = 
nByã
;

214 
p
++;

216 
	`ã°ˇ£
–
sqlôe3GlobÆC⁄fig
.
xLog
!=0 );

217 
	`sqlôe3_log
(
SQLITE_NOMEM
,

219 
	`sqlôe3MemSize
(
pPri‹
), 
nByã
);

221  (*)
p
;

223 
	}
}

228 
	$sqlôe3MemRoundup
(
n
){

229  
	`ROUND8
(
n
);

230 
	}
}

235 
	$sqlôe3MemInô
(*
NŸU£d
){

236 #i‡
	`deföed
(
__APPLE__
Ë&& !deföed(
SQLITE_WITHOUT_ZONEMALLOC
)

237 
˝uCou¡
;

238 
size_t
 
Àn
;

239 if–
_sqlôeZ⁄e_
 ){

240  
SQLITE_OK
;

242 
Àn
 = (
˝uCou¡
);

244 
	`sys˘lby«me
("hw.n˝u", &
˝uCou¡
, &
Àn
, 
NULL
, 0);

245 if–
˝uCou¡
>1 ){

247 
_sqlôeZ⁄e_
 = 
	`mÆloc_deÁu…_z⁄e
();

251 
boﬁ
 
suc˚ss
;

252 
mÆloc_z⁄e_t
* 
√wz⁄e
 = 
	`mÆloc_¸óã_z⁄e
(4096, 0);

253 
	`mÆloc_£t_z⁄e_«me
(
√wz⁄e
, "Sqlite_Heap");

255 
suc˚ss
 = 
	`OSAtomicCom∑ªAndSw≠PåB¨rõr
(
NULL
, 
√wz⁄e
,

256 (* vﬁ©ûê*)&
_sqlôeZ⁄e_
);

257 }!
_sqlôeZ⁄e_
);

258 if–!
suc˚ss
 ){

260 
	`mÆloc_de°roy_z⁄e
(
√wz⁄e
);

264 
	`UNUSED_PARAMETER
(
NŸU£d
);

265  
SQLITE_OK
;

266 
	}
}

271 
	$sqlôe3MemShutdown
(*
NŸU£d
){

272 
	`UNUSED_PARAMETER
(
NŸU£d
);

274 
	}
}

282 
	$sqlôe3MemSëDeÁu…
(){

283 c⁄° 
sqlôe3_mem_mëhods
 
deÁu…Mëhods
 = {

284 
sqlôe3MemMÆloc
,

285 
sqlôe3MemFªe
,

286 
sqlôe3MemRóŒoc
,

287 
sqlôe3MemSize
,

288 
sqlôe3MemRoundup
,

289 
sqlôe3MemInô
,

290 
sqlôe3MemShutdown
,

293 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_MALLOC
, &
deÁu…Mëhods
);

294 
	}
}

	@mem2.c

22 
	~"sqlôeI¡.h
"

28 #ifde‡
SQLITE_MEMDEBUG


33 #ifde‡
__GLIBC__


34 
backåa˚
(**,);

35 
backåa˚_symbﬁs_fd
(*const*,,);

37 
	#backåa˚
(
A
,
B
Ë1

	)

38 
	#backåa˚_symbﬁs_fd
(
A
,
B
,
C
)

	)

40 
	~<°dio.h
>

55 
	sMemBlockHdr
 {

56 
i64
 
	miSize
;

57 
MemBlockHdr
 *
	mpNext
, *
	mpPªv
;

58 
	mnBackåa˚
;

59 
	mnBackåa˚SlŸs
;

60 
u8
 
	mnTôÀ
;

61 
u8
 
	meTy≥
;

62 
	miF‹eGu¨d
;

68 
	#FOREGUARD
 0x80F5E153

	)

69 
	#REARGUARD
 0xE4676B53

	)

74 
	#NCSIZE
 1000

	)

87 
sqlôe3_muãx
 *
	mmuãx
;

92 
MemBlockHdr
 *
	mpFú°
;

93 
MemBlockHdr
 *
	mpLa°
;

98 
	mnBackåa˚
;

99 (*
	mxBackåa˚
)(, , **);

104 
	mnTôÀ
;

105 
	mzTôÀ
[100];

111 
	mdißŒow
;

119 
	mnAŒoc
[
NCSIZE
];

120 
	mnCuºít
[
NCSIZE
];

121 
	mmxCuºít
[
NCSIZE
];

123 } 
	gmem
;

129 
	$adju°Sèts
(
iSize
, 
ö¸emít
){

130 
i
 = 
	`ROUND8
(
iSize
)/8;

131 if–
i
>
NCSIZE
-1 ){

132 
i
 = 
NCSIZE
 - 1;

134 if–
ö¸emít
>0 ){

135 
mem
.
nAŒoc
[
i
]++;

136 
mem
.
nCuºít
[
i
]++;

137 if–
mem
.
nCuºít
[
i
]>mem.
mxCuºít
[i] ){

138 
mem
.
mxCuºít
[
i
] = mem.
nCuºít
[i];

141 
mem
.
nCuºít
[
i
]--;

142 
	`as£π
–
mem
.
nCuºít
[
i
]>=0 );

144 
	}
}

152 
MemBlockHdr
 *
	$sqlôe3MemsysGëHódî
(*
pAŒoˇti⁄
){

153 
MemBlockHdr
 *
p
;

154 *
pI¡
;

155 
u8
 *
pU8
;

156 
nRe£rve
;

158 
p
 = (
MemBlockHdr
*)
pAŒoˇti⁄
;

159 
p
--;

160 
	`as£π
–
p
->
iF‹eGu¨d
==()
FOREGUARD
 );

161 
nRe£rve
 = 
	`ROUND8
(
p
->
iSize
);

162 
pI¡
 = (*)
pAŒoˇti⁄
;

163 
pU8
 = (
u8
*)
pAŒoˇti⁄
;

164 
	`as£π
–
pI¡
[
nRe£rve
/()]==()
REARGUARD
 );

169  
nRe£rve
-- > 
p
->
iSize
 ) 
	`as£π
–
pU8
[nReserve]==0x65 );

170  
p
;

171 
	}
}

176 
	$sqlôe3MemSize
(*
p
){

177 
MemBlockHdr
 *
pHdr
;

178 if–!
p
 ){

181 
pHdr
 = 
	`sqlôe3MemsysGëHódî
(
p
);

182  ()
pHdr
->
iSize
;

183 
	}
}

188 
	$sqlôe3MemInô
(*
NŸU£d
){

189 
	`UNUSED_PARAMETER
(
NŸU£d
);

190 
	`as£π
–((
MemBlockHdr
)&7) == 0 );

191 if–!
sqlôe3GlobÆC⁄fig
.
bMem°©
 ){

194 
mem
.
muãx
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MEM
);

196  
SQLITE_OK
;

197 
	}
}

202 
	$sqlôe3MemShutdown
(*
NŸU£d
){

203 
	`UNUSED_PARAMETER
(
NŸU£d
);

204 
mem
.
muãx
 = 0;

205 
	}
}

210 
	$sqlôe3MemRoundup
(
n
){

211  
	`ROUND8
(
n
);

212 
	}
}

219 
	$øndomFûl
(*
pBuf
, 
nByã
){

220 
x
, 
y
, 
r
;

221 
x
 = 
	`SQLITE_PTR_TO_INT
(
pBuf
);

222 
y
 = 
nByã
 | 1;

223  
nByã
 >= 4 ){

224 
x
 = (x>>1) ^ (-()(x&1) & 0xd0000001);

225 
y
 = y*1103515245 + 12345;

226 
r
 = 
x
 ^ 
y
;

227 *(*)
pBuf
 = 
r
;

228 
pBuf
 += 4;

229 
nByã
 -= 4;

231  
nByã
-- > 0 ){

232 
x
 = (x>>1) ^ (-()(x&1) & 0xd0000001);

233 
y
 = y*1103515245 + 12345;

234 
r
 = 
x
 ^ 
y
;

235 *(
pBuf
++Ë
r
 & 0xff;

237 
	}
}

242 *
	$sqlôe3MemMÆloc
(
nByã
){

243 
MemBlockHdr
 *
pHdr
;

244 **
pBt
;

245 *
z
;

246 *
pI¡
;

247 *
p
 = 0;

248 
tŸÆSize
;

249 
nRe£rve
;

250 
	`sqlôe3_muãx_íãr
(
mem
.
muãx
);

251 
	`as£π
–
mem
.
dißŒow
==0 );

252 
nRe£rve
 = 
	`ROUND8
(
nByã
);

253 
tŸÆSize
 = 
nRe£rve
 + (*
pHdr
) + () +

254 
mem
.
nBackåa˚
*(*Ë+ mem.
nTôÀ
;

255 
p
 = 
	`mÆloc
(
tŸÆSize
);

256 if–
p
 ){

257 
z
 = 
p
;

258 
pBt
 = (**)&
z
[
mem
.
nTôÀ
];

259 
pHdr
 = (
MemBlockHdr
*)&
pBt
[
mem
.
nBackåa˚
];

260 
pHdr
->
pNext
 = 0;

261 
pHdr
->
pPªv
 = 
mem
.
pLa°
;

262 if–
mem
.
pLa°
 ){

263 
mem
.
pLa°
->
pNext
 = 
pHdr
;

265 
mem
.
pFú°
 = 
pHdr
;

267 
mem
.
pLa°
 = 
pHdr
;

268 
pHdr
->
iF‹eGu¨d
 = 
FOREGUARD
;

269 
pHdr
->
eTy≥
 = 
MEMTYPE_HEAP
;

270 
pHdr
->
nBackåa˚SlŸs
 = 
mem
.
nBackåa˚
;

271 
pHdr
->
nTôÀ
 = 
mem
.nTitle;

272 if–
mem
.
nBackåa˚
 ){

273 *
aAddr
[40];

274 
pHdr
->
nBackåa˚
 = 
	`backåa˚
(
aAddr
, 
mem
.nBacktrace+1)-1;

275 
	`mem˝y
(
pBt
, &
aAddr
[1], 
pHdr
->
nBackåa˚
*(*));

276 
	`as£π
(
pBt
[0]);

277 if–
mem
.
xBackåa˚
 ){

278 
mem
.
	`xBackåa˚
(
nByã
, 
pHdr
->
nBackåa˚
-1, &
aAddr
[1]);

281 
pHdr
->
nBackåa˚
 = 0;

283 if–
mem
.
nTôÀ
 ){

284 
	`mem˝y
(
z
, 
mem
.
zTôÀ
, mem.
nTôÀ
);

286 
pHdr
->
iSize
 = 
nByã
;

287 
	`adju°Sèts
(
nByã
, +1);

288 
pI¡
 = (*)&
pHdr
[1];

289 
pI¡
[
nRe£rve
/()] = 
REARGUARD
;

290 
	`øndomFûl
((*)
pI¡
, 
nByã
);

291 
	`mem£t
(((*)
pI¡
)+
nByã
, 0x65, 
nRe£rve
-nByte);

292 
p
 = (*)
pI¡
;

294 
	`sqlôe3_muãx_Àave
(
mem
.
muãx
);

295  
p
;

296 
	}
}

301 
	$sqlôe3MemFªe
(*
pPri‹
){

302 
MemBlockHdr
 *
pHdr
;

303 **
pBt
;

304 *
z
;

305 
	`as£π
–
sqlôe3GlobÆC⁄fig
.
bMem°©
 || sqlôe3GlobÆC⁄fig.
bC‹eMuãx
==0

306 || 
mem
.
muãx
!=0 );

307 
pHdr
 = 
	`sqlôe3MemsysGëHódî
(
pPri‹
);

308 
pBt
 = (**)
pHdr
;

309 
pBt
 -
pHdr
->
nBackåa˚SlŸs
;

310 
	`sqlôe3_muãx_íãr
(
mem
.
muãx
);

311 if–
pHdr
->
pPªv
 ){

312 
	`as£π
–
pHdr
->
pPªv
->
pNext
==pHdr );

313 
pHdr
->
pPªv
->
pNext
 =ÖHdr->pNext;

315 
	`as£π
–
mem
.
pFú°
==
pHdr
 );

316 
mem
.
pFú°
 = 
pHdr
->
pNext
;

318 if–
pHdr
->
pNext
 ){

319 
	`as£π
–
pHdr
->
pNext
->
pPªv
==pHdr );

320 
pHdr
->
pNext
->
pPªv
 =ÖHdr->pPrev;

322 
	`as£π
–
mem
.
pLa°
==
pHdr
 );

323 
mem
.
pLa°
 = 
pHdr
->
pPªv
;

325 
z
 = (*)
pBt
;

326 
z
 -
pHdr
->
nTôÀ
;

327 
	`adju°Sèts
(()
pHdr
->
iSize
, -1);

328 
	`øndomFûl
(
z
, (*)*
pHdr
->
nBackåa˚SlŸs
 + (*pHdr) +

329 ()
pHdr
->
iSize
 + (Ë+ÖHdr->
nTôÀ
);

330 
	`‰ì
(
z
);

331 
	`sqlôe3_muãx_Àave
(
mem
.
muãx
);

332 
	}
}

343 *
	$sqlôe3MemRóŒoc
(*
pPri‹
, 
nByã
){

344 
MemBlockHdr
 *
pOldHdr
;

345 *
pNew
;

346 
	`as£π
–
mem
.
dißŒow
==0 );

347 
	`as£π
–(
nByã
 & 7)==0 );

348 
pOldHdr
 = 
	`sqlôe3MemsysGëHódî
(
pPri‹
);

349 
pNew
 = 
	`sqlôe3MemMÆloc
(
nByã
);

350 if–
pNew
 ){

351 
	`mem˝y
(
pNew
, 
pPri‹
, ()(
nByã
<
pOldHdr
->
iSize
 ?ÇByte :ÖOldHdr->iSize));

352 if–
nByã
>
pOldHdr
->
iSize
 ){

353 
	`øndomFûl
(&((*)
pNew
)[
pOldHdr
->
iSize
], 
nByã
 - ()pOldHdr->iSize);

355 
	`sqlôe3MemFªe
(
pPri‹
);

357  
pNew
;

358 
	}
}

364 
	$sqlôe3MemSëDeÁu…
(){

365 c⁄° 
sqlôe3_mem_mëhods
 
deÁu…Mëhods
 = {

366 
sqlôe3MemMÆloc
,

367 
sqlôe3MemFªe
,

368 
sqlôe3MemRóŒoc
,

369 
sqlôe3MemSize
,

370 
sqlôe3MemRoundup
,

371 
sqlôe3MemInô
,

372 
sqlôe3MemShutdown
,

375 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_MALLOC
, &
deÁu…Mëhods
);

376 
	}
}

381 
	$sqlôe3MemdebugSëTy≥
(*
p
, 
u8
 
eTy≥
){

382 if–
p
 && 
sqlôe3GlobÆC⁄fig
.
m
.
xMÆloc
==
sqlôe3MemMÆloc
 ){

383 
MemBlockHdr
 *
pHdr
;

384 
pHdr
 = 
	`sqlôe3MemsysGëHódî
(
p
);

385 
	`as£π
–
pHdr
->
iF‹eGu¨d
==
FOREGUARD
 );

386 
pHdr
->
eTy≥
 =ÉType;

388 
	}
}

399 
	$sqlôe3MemdebugHasTy≥
(*
p
, 
u8
 
eTy≥
){

400 
rc
 = 1;

401 if–
p
 && 
sqlôe3GlobÆC⁄fig
.
m
.
xMÆloc
==
sqlôe3MemMÆloc
 ){

402 
MemBlockHdr
 *
pHdr
;

403 
pHdr
 = 
	`sqlôe3MemsysGëHódî
(
p
);

404 
	`as£π
–
pHdr
->
iF‹eGu¨d
==
FOREGUARD
 );

405 if–(
pHdr
->
eTy≥
&eType)==0 ){

406 
rc
 = 0;

409  
rc
;

410 
	}
}

421 
	$sqlôe3MemdebugNoTy≥
(*
p
, 
u8
 
eTy≥
){

422 
rc
 = 1;

423 if–
p
 && 
sqlôe3GlobÆC⁄fig
.
m
.
xMÆloc
==
sqlôe3MemMÆloc
 ){

424 
MemBlockHdr
 *
pHdr
;

425 
pHdr
 = 
	`sqlôe3MemsysGëHódî
(
p
);

426 
	`as£π
–
pHdr
->
iF‹eGu¨d
==
FOREGUARD
 );

427 if–(
pHdr
->
eTy≥
&eType)!=0 ){

428 
rc
 = 0;

431  
rc
;

432 
	}
}

439 
	$sqlôe3MemdebugBackåa˚
(
dïth
){

440 if–
dïth
<0 ){ depth = 0; }

441 if–
dïth
>20 ){ depth = 20; }

442 
dïth
 = (depth+1)&0xfe;

443 
mem
.
nBackåa˚
 = 
dïth
;

444 
	}
}

446 
	$sqlôe3MemdebugBackåa˚CÆlback
((*
xBackåa˚
)(, , **)){

447 
mem
.
xBackåa˚
 = xBacktrace;

448 
	}
}

453 
	$sqlôe3MemdebugSëtôÀ
(c⁄° *
zTôÀ
){

454 
n
 = 
	`sqlôe3SåÀn30
(
zTôÀ
) + 1;

455 
	`sqlôe3_muãx_íãr
(
mem
.
muãx
);

456 if–
n
>=(
mem
.
zTôÀ
) )Ç = (mem.zTitle)-1;

457 
	`mem˝y
(
mem
.
zTôÀ
, zTôÀ, 
n
);

458 
mem
.
zTôÀ
[
n
] = 0;

459 
mem
.
nTôÀ
 = 
	`ROUND8
(
n
);

460 
	`sqlôe3_muãx_Àave
(
mem
.
muãx
);

461 
	}
}

463 
	$sqlôe3MemdebugSync
(){

464 
MemBlockHdr
 *
pHdr
;

465 
pHdr
=
mem
.
pFú°
;ÖHdr;ÖHdrıHdr->
pNext
){

466 **
pBt
 = (**)
pHdr
;

467 
pBt
 -
pHdr
->
nBackåa˚SlŸs
;

468 
mem
.
	`xBackåa˚
(()
pHdr
->
iSize
,ÖHdr->
nBackåa˚
-1, &
pBt
[1]);

470 
	}
}

476 
	$sqlôe3MemdebugDump
(c⁄° *
zFûíame
){

477 
FILE
 *
out
;

478 
MemBlockHdr
 *
pHdr
;

479 **
pBt
;

480 
i
;

481 
out
 = 
	`f›í
(
zFûíame
, "w");

482 if–
out
==0 ){

483 
	`Ârötf
(
°dîr
, "** UnableÅo output memory debug outputÜog: %s **\n",

484 
zFûíame
);

487 
pHdr
=
mem
.
pFú°
;ÖHdr;ÖHdrıHdr->
pNext
){

488 *
z
 = (*)
pHdr
;

489 
z
 -
pHdr
->
nBackåa˚SlŸs
*(*Ë+ÖHdr->
nTôÀ
;

490 
	`Ârötf
(
out
, "**** %lld bytesát %p from %s ****\n",

491 
pHdr
->
iSize
, &pHdr[1],ÖHdr->
nTôÀ
 ? 
z
 : "???");

492 if–
pHdr
->
nBackåa˚
 ){

493 
	`fÊush
(
out
);

494 
pBt
 = (**)
pHdr
;

495 
pBt
 -
pHdr
->
nBackåa˚SlŸs
;

496 
	`backåa˚_symbﬁs_fd
(
pBt
, 
pHdr
->
nBackåa˚
, 
	`fûío
(
out
));

497 
	`Ârötf
(
out
, "\n");

500 
	`Ârötf
(
out
, "COUNTS:\n");

501 
i
=0; i<
NCSIZE
-1; i++){

502 if–
mem
.
nAŒoc
[
i
] ){

503 
	`Ârötf
(
out
, " %5d: %10d %10d %10d\n",

504 
i
*8, 
mem
.
nAŒoc
[i], mem.
nCuºít
[i], mem.
mxCuºít
[i]);

507 if–
mem
.
nAŒoc
[
NCSIZE
-1] ){

508 
	`Ârötf
(
out
, " %5d: %10d %10d %10d\n",

509 
NCSIZE
*8-8, 
mem
.
nAŒoc
[NCSIZE-1],

510 
mem
.
nCuºít
[
NCSIZE
-1], mem.
mxCuºít
[NCSIZE-1]);

512 
	`f˛o£
(
out
);

513 
	}
}

518 
	$sqlôe3MemdebugMÆlocCou¡
(){

519 
i
;

520 
nTŸÆ
 = 0;

521 
i
=0; i<
NCSIZE
; i++){

522 
nTŸÆ
 +
mem
.
nAŒoc
[
i
];

524  
nTŸÆ
;

525 
	}
}

	@mem3.c

26 
	~"sqlôeI¡.h
"

35 #ifde‡
SQLITE_ENABLE_MEMSYS3


40 
	#MX_SMALL
 10

	)

46 
	#N_HASH
 61

	)

80 
Mem3Block
 
	tMem3Block
;

81 
	sMem3Block
 {

84 
u32
 
	m¥evSize
;

85 
u32
 
	msize4x
;

86 } 
	mhdr
;

88 
u32
 
	m√xt
;

89 
u32
 
	m¥ev
;

90 } 
	mli°
;

91 } 
	mu
;

100 
SQLITE_WSD
 
	sMem3GlobÆ
 {

105 
u32
 
	mnPoﬁ
;

106 
Mem3Block
 *
	maPoﬁ
;

111 
	mÆ¨mBusy
;

116 
sqlôe3_muãx
 *
	mmuãx
;

121 
u32
 
	mmnMa°î
;

129 
u32
 
	miMa°î
;

130 
u32
 
	mszMa°î
;

137 
u32
 
	maiSmÆl
[
MX_SMALL
-1];

138 
u32
 
	maiHash
[
N_HASH
];

139 } 
	gmem3
 = { 97535575 };

141 
	#mem3
 
	`GLOBAL
(
Mem3GlobÆ
, 
mem3
)

	)

147 
	$memsys3U∆ökFromLi°
(
u32
 
i
, u32 *
pRoŸ
){

148 
u32
 
√xt
 = 
mem3
.
aPoﬁ
[
i
].
u
.
li°
.next;

149 
u32
 
¥ev
 = 
mem3
.
aPoﬁ
[
i
].
u
.
li°
.prev;

150 
	`as£π
–
	`sqlôe3_muãx_hñd
(
mem3
.
muãx
) );

151 if–
¥ev
==0 ){

152 *
pRoŸ
 = 
√xt
;

154 
mem3
.
aPoﬁ
[
¥ev
].
u
.
li°
.
√xt
 =Çext;

156 if–
√xt
 ){

157 
mem3
.
aPoﬁ
[
√xt
].
u
.
li°
.
¥ev
 =Örev;

159 
mem3
.
aPoﬁ
[
i
].
u
.
li°
.
√xt
 = 0;

160 
mem3
.
aPoﬁ
[
i
].
u
.
li°
.
¥ev
 = 0;

161 
	}
}

167 
	$memsys3U∆ök
(
u32
 
i
){

168 
u32
 
size
, 
hash
;

169 
	`as£π
–
	`sqlôe3_muãx_hñd
(
mem3
.
muãx
) );

170 
	`as£π
–(
mem3
.
aPoﬁ
[
i
-1].
u
.
hdr
.
size4x
 & 1)==0 );

171 
	`as£π
–
i
>=1 );

172 
size
 = 
mem3
.
aPoﬁ
[
i
-1].
u
.
hdr
.
size4x
/4;

173 
	`as£π
–
size
==
mem3
.
aPoﬁ
[
i
+size-1].
u
.
hdr
.
¥evSize
 );

174 
	`as£π
–
size
>=2 );

175 if–
size
 <
MX_SMALL
 ){

176 
	`memsys3U∆ökFromLi°
(
i
, &
mem3
.
aiSmÆl
[
size
-2]);

178 
hash
 = 
size
 % 
N_HASH
;

179 
	`memsys3U∆ökFromLi°
(
i
, &
mem3
.
aiHash
[
hash
]);

181 
	}
}

187 
	$memsys3LökI¡oLi°
(
u32
 
i
, u32 *
pRoŸ
){

188 
	`as£π
–
	`sqlôe3_muãx_hñd
(
mem3
.
muãx
) );

189 
mem3
.
aPoﬁ
[
i
].
u
.
li°
.
√xt
 = *
pRoŸ
;

190 
mem3
.
aPoﬁ
[
i
].
u
.
li°
.
¥ev
 = 0;

191 if–*
pRoŸ
 ){

192 
mem3
.
aPoﬁ
[*
pRoŸ
].
u
.
li°
.
¥ev
 = 
i
;

194 *
pRoŸ
 = 
i
;

195 
	}
}

201 
	$memsys3Lök
(
u32
 
i
){

202 
u32
 
size
, 
hash
;

203 
	`as£π
–
	`sqlôe3_muãx_hñd
(
mem3
.
muãx
) );

204 
	`as£π
–
i
>=1 );

205 
	`as£π
–(
mem3
.
aPoﬁ
[
i
-1].
u
.
hdr
.
size4x
 & 1)==0 );

206 
size
 = 
mem3
.
aPoﬁ
[
i
-1].
u
.
hdr
.
size4x
/4;

207 
	`as£π
–
size
==
mem3
.
aPoﬁ
[
i
+size-1].
u
.
hdr
.
¥evSize
 );

208 
	`as£π
–
size
>=2 );

209 if–
size
 <
MX_SMALL
 ){

210 
	`memsys3LökI¡oLi°
(
i
, &
mem3
.
aiSmÆl
[
size
-2]);

212 
hash
 = 
size
 % 
N_HASH
;

213 
	`memsys3LökI¡oLi°
(
i
, &
mem3
.
aiHash
[
hash
]);

215 
	}
}

222 
	$memsys3E¡î
(){

223 if–
sqlôe3GlobÆC⁄fig
.
bMem°©
==0 && 
mem3
.
muãx
==0 ){

224 
mem3
.
muãx
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MEM
);

226 
	`sqlôe3_muãx_íãr
(
mem3
.
muãx
);

227 
	}
}

228 
	$memsys3Lóve
(){

229 
	`sqlôe3_muãx_Àave
(
mem3
.
muãx
);

230 
	}
}

235 
	$memsys3OutOfMem‹y
(
nByã
){

236 if–!
mem3
.
Æ¨mBusy
 ){

237 
mem3
.
Æ¨mBusy
 = 1;

238 
	`as£π
–
	`sqlôe3_muãx_hñd
(
mem3
.
muãx
) );

239 
	`sqlôe3_muãx_Àave
(
mem3
.
muãx
);

240 
	`sqlôe3_ªÀa£_mem‹y
(
nByã
);

241 
	`sqlôe3_muãx_íãr
(
mem3
.
muãx
);

242 
mem3
.
Æ¨mBusy
 = 0;

244 
	}
}

252 *
	$memsys3Checkout
(
u32
 
i
, u32 
nBlock
){

253 
u32
 
x
;

254 
	`as£π
–
	`sqlôe3_muãx_hñd
(
mem3
.
muãx
) );

255 
	`as£π
–
i
>=1 );

256 
	`as£π
–
mem3
.
aPoﬁ
[
i
-1].
u
.
hdr
.
size4x
/4==
nBlock
 );

257 
	`as£π
–
mem3
.
aPoﬁ
[
i
+
nBlock
-1].
u
.
hdr
.
¥evSize
==nBlock );

258 
x
 = 
mem3
.
aPoﬁ
[
i
-1].
u
.
hdr
.
size4x
;

259 
mem3
.
aPoﬁ
[
i
-1].
u
.
hdr
.
size4x
 = 
nBlock
*4 | 1 | (
x
&2);

260 
mem3
.
aPoﬁ
[
i
+
nBlock
-1].
u
.
hdr
.
¥evSize
 =ÇBlock;

261 
mem3
.
aPoﬁ
[
i
+
nBlock
-1].
u
.
hdr
.
size4x
 |= 2;

262  &
mem3
.
aPoﬁ
[
i
];

263 
	}
}

270 *
	$memsys3FromMa°î
(
u32
 
nBlock
){

271 
	`as£π
–
	`sqlôe3_muãx_hñd
(
mem3
.
muãx
) );

272 
	`as£π
–
mem3
.
szMa°î
>=
nBlock
 );

273 if–
nBlock
>=
mem3
.
szMa°î
-1 ){

275 *
p
 = 
	`memsys3Checkout
(
mem3
.
iMa°î
, mem3.
szMa°î
);

276 
mem3
.
iMa°î
 = 0;

277 
mem3
.
szMa°î
 = 0;

278 
mem3
.
mnMa°î
 = 0;

279  
p
;

282 
u32
 
√wi
, 
x
;

283 
√wi
 = 
mem3
.
iMa°î
 + mem3.
szMa°î
 - 
nBlock
;

284 
	`as£π
–
√wi
 > 
mem3
.
iMa°î
+1 );

285 
mem3
.
aPoﬁ
[mem3.
iMa°î
+mem3.
szMa°î
-1].
u
.
hdr
.
¥evSize
 = 
nBlock
;

286 
mem3
.
aPoﬁ
[mem3.
iMa°î
+mem3.
szMa°î
-1].
u
.
hdr
.
size4x
 |= 2;

287 
mem3
.
aPoﬁ
[
√wi
-1].
u
.
hdr
.
size4x
 = 
nBlock
*4 + 1;

288 
mem3
.
szMa°î
 -
nBlock
;

289 
mem3
.
aPoﬁ
[
√wi
-1].
u
.
hdr
.
¥evSize
 = mem3.
szMa°î
;

290 
x
 = 
mem3
.
aPoﬁ
[mem3.
iMa°î
-1].
u
.
hdr
.
size4x
 & 2;

291 
mem3
.
aPoﬁ
[mem3.
iMa°î
-1].
u
.
hdr
.
size4x
 = mem3.
szMa°î
*4 | 
x
;

292 if–
mem3
.
szMa°î
 < mem3.
mnMa°î
 ){

293 
mem3
.
mnMa°î
 = mem3.
szMa°î
;

295  (*)&
mem3
.
aPoﬁ
[
√wi
];

297 
	}
}

315 
	$memsys3Mîge
(
u32
 *
pRoŸ
){

316 
u32
 
iNext
, 
¥ev
, 
size
, 
i
, 
x
;

318 
	`as£π
–
	`sqlôe3_muãx_hñd
(
mem3
.
muãx
) );

319 
i
=*
pRoŸ
; i>0; i=
iNext
){

320 
iNext
 = 
mem3
.
aPoﬁ
[
i
].
u
.
li°
.
√xt
;

321 
size
 = 
mem3
.
aPoﬁ
[
i
-1].
u
.
hdr
.
size4x
;

322 
	`as£π
–(
size
&1)==0 );

323 if–(
size
&2)==0 ){

324 
	`memsys3U∆ökFromLi°
(
i
, 
pRoŸ
);

325 
	`as£π
–
i
 > 
mem3
.
aPoﬁ
[i-1].
u
.
hdr
.
¥evSize
 );

326 
¥ev
 = 
i
 - 
mem3
.
aPoﬁ
[i-1].
u
.
hdr
.
¥evSize
;

327 if–
¥ev
==
iNext
 ){

328 
iNext
 = 
mem3
.
aPoﬁ
[
¥ev
].
u
.
li°
.
√xt
;

330 
	`memsys3U∆ök
(
¥ev
);

331 
size
 = 
i
 + size/4 - 
¥ev
;

332 
x
 = 
mem3
.
aPoﬁ
[
¥ev
-1].
u
.
hdr
.
size4x
 & 2;

333 
mem3
.
aPoﬁ
[
¥ev
-1].
u
.
hdr
.
size4x
 = 
size
*4 | 
x
;

334 
mem3
.
aPoﬁ
[
¥ev
+
size
-1].
u
.
hdr
.
¥evSize
 = size;

335 
	`memsys3Lök
(
¥ev
);

336 
i
 = 
¥ev
;

338 
size
 /= 4;

340 if–
size
>
mem3
.
szMa°î
 ){

341 
mem3
.
iMa°î
 = 
i
;

342 
mem3
.
szMa°î
 = 
size
;

345 
	}
}

354 *
	$memsys3MÆlocUnß„
(
nByã
){

355 
u32
 
i
;

356 
u32
 
nBlock
;

357 
u32
 
toFªe
;

359 
	`as£π
–
	`sqlôe3_muãx_hñd
(
mem3
.
muãx
) );

360 
	`as£π
–(
Mem3Block
)==8 );

361 if–
nByã
<=12 ){

362 
nBlock
 = 2;

364 
nBlock
 = (
nByã
 + 11)/8;

366 
	`as£π
–
nBlock
>=2 );

373 if–
nBlock
 <
MX_SMALL
 ){

374 
i
 = 
mem3
.
aiSmÆl
[
nBlock
-2];

375 if–
i
>0 ){

376 
	`memsys3U∆ökFromLi°
(
i
, &
mem3
.
aiSmÆl
[
nBlock
-2]);

377  
	`memsys3Checkout
(
i
, 
nBlock
);

380 
hash
 = 
nBlock
 % 
N_HASH
;

381 
i
=
mem3
.
aiHash
[
hash
]; i>0; i=mem3.
aPoﬁ
[i].
u
.
li°
.
√xt
){

382 if–
mem3
.
aPoﬁ
[
i
-1].
u
.
hdr
.
size4x
/4==
nBlock
 ){

383 
	`memsys3U∆ökFromLi°
(
i
, &
mem3
.
aiHash
[
hash
]);

384  
	`memsys3Checkout
(
i
, 
nBlock
);

393 if–
mem3
.
szMa°î
>=
nBlock
 ){

394  
	`memsys3FromMa°î
(
nBlock
);

405 
toFªe
=
nBlock
*16;ÅoFªe<(
mem3
.
nPoﬁ
*16);ÅoFree *= 2){

406 
	`memsys3OutOfMem‹y
(
toFªe
);

407 if–
mem3
.
iMa°î
 ){

408 
	`memsys3Lök
(
mem3
.
iMa°î
);

409 
mem3
.
iMa°î
 = 0;

410 
mem3
.
szMa°î
 = 0;

412 
i
=0; i<
N_HASH
; i++){

413 
	`memsys3Mîge
(&
mem3
.
aiHash
[
i
]);

415 
i
=0; i<
MX_SMALL
-1; i++){

416 
	`memsys3Mîge
(&
mem3
.
aiSmÆl
[
i
]);

418 if–
mem3
.
szMa°î
 ){

419 
	`memsys3U∆ök
(
mem3
.
iMa°î
);

420 if–
mem3
.
szMa°î
>=
nBlock
 ){

421  
	`memsys3FromMa°î
(
nBlock
);

428 
	}
}

436 
	$memsys3FªeUnß„
(*
pOld
){

437 
Mem3Block
 *
p
 = (Mem3Block*)
pOld
;

438 
i
;

439 
u32
 
size
, 
x
;

440 
	`as£π
–
	`sqlôe3_muãx_hñd
(
mem3
.
muãx
) );

441 
	`as£π
–
p
>
mem3
.
aPoﬁ
 &&Ö<&mem3.aPoﬁ[mem3.
nPoﬁ
] );

442 
i
 = 
p
 - 
mem3
.
aPoﬁ
;

443 
	`as£π
–(
mem3
.
aPoﬁ
[
i
-1].
u
.
hdr
.
size4x
&1)==1 );

444 
size
 = 
mem3
.
aPoﬁ
[
i
-1].
u
.
hdr
.
size4x
/4;

445 
	`as£π
–
i
+
size
<=
mem3
.
nPoﬁ
+1 );

446 
mem3
.
aPoﬁ
[
i
-1].
u
.
hdr
.
size4x
 &= ~1;

447 
mem3
.
aPoﬁ
[
i
+
size
-1].
u
.
hdr
.
¥evSize
 = size;

448 
mem3
.
aPoﬁ
[
i
+
size
-1].
u
.
hdr
.
size4x
 &= ~2;

449 
	`memsys3Lök
(
i
);

452 if–
mem3
.
iMa°î
 ){

453  (
mem3
.
aPoﬁ
[mem3.
iMa°î
-1].
u
.
hdr
.
size4x
&2)==0 ){

454 
size
 = 
mem3
.
aPoﬁ
[mem3.
iMa°î
-1].
u
.
hdr
.
¥evSize
;

455 
mem3
.
iMa°î
 -
size
;

456 
mem3
.
szMa°î
 +
size
;

457 
	`memsys3U∆ök
(
mem3
.
iMa°î
);

458 
x
 = 
mem3
.
aPoﬁ
[mem3.
iMa°î
-1].
u
.
hdr
.
size4x
 & 2;

459 
mem3
.
aPoﬁ
[mem3.
iMa°î
-1].
u
.
hdr
.
size4x
 = mem3.
szMa°î
*4 | 
x
;

460 
mem3
.
aPoﬁ
[mem3.
iMa°î
+mem3.
szMa°î
-1].
u
.
hdr
.
¥evSize
 = mem3.szMaster;

462 
x
 = 
mem3
.
aPoﬁ
[mem3.
iMa°î
-1].
u
.
hdr
.
size4x
 & 2;

463  (
mem3
.
aPoﬁ
[mem3.
iMa°î
+mem3.
szMa°î
-1].
u
.
hdr
.
size4x
&1)==0 ){

464 
	`memsys3U∆ök
(
mem3
.
iMa°î
+mem3.
szMa°î
);

465 
mem3
.
szMa°î
 +mem3.
aPoﬁ
[mem3.
iMa°î
+mem3.szMa°î-1].
u
.
hdr
.
size4x
/4;

466 
mem3
.
aPoﬁ
[mem3.
iMa°î
-1].
u
.
hdr
.
size4x
 = mem3.
szMa°î
*4 | 
x
;

467 
mem3
.
aPoﬁ
[mem3.
iMa°î
+mem3.
szMa°î
-1].
u
.
hdr
.
¥evSize
 = mem3.szMaster;

470 
	}
}

477 
	$memsys3Size
(*
p
){

478 
Mem3Block
 *
pBlock
;

479 
	`as£π
–
p
!=0 );

480 
pBlock
 = (
Mem3Block
*)
p
;

481 
	`as£π
–(
pBlock
[-1].
u
.
hdr
.
size4x
&1)!=0 );

482  (
pBlock
[-1].
u
.
hdr
.
size4x
&~3)*2 - 4;

483 
	}
}

488 
	$memsys3Roundup
(
n
){

489 if–
n
<=12 ){

492  ((
n
+11)&~7) - 4;

494 
	}
}

499 *
	$memsys3MÆloc
(
nByãs
){

500 
sqlôe3_öt64
 *
p
;

501 
	`as£π
–
nByãs
>0 );

502 
	`memsys3E¡î
();

503 
p
 = 
	`memsys3MÆlocUnß„
(
nByãs
);

504 
	`memsys3Lóve
();

505  (*)
p
;

506 
	}
}

511 
	$memsys3Fªe
(*
pPri‹
){

512 
	`as£π
–
pPri‹
 );

513 
	`memsys3E¡î
();

514 
	`memsys3FªeUnß„
(
pPri‹
);

515 
	`memsys3Lóve
();

516 
	}
}

521 *
	$memsys3RóŒoc
(*
pPri‹
, 
nByãs
){

522 
nOld
;

523 *
p
;

524 if–
pPri‹
==0 ){

525  
	`sqlôe3_mÆloc
(
nByãs
);

527 if–
nByãs
<=0 ){

528 
	`sqlôe3_‰ì
(
pPri‹
);

531 
nOld
 = 
	`memsys3Size
(
pPri‹
);

532 if–
nByãs
<=
nOld
 &&ÇBytes>=nOld-128 ){

533  
pPri‹
;

535 
	`memsys3E¡î
();

536 
p
 = 
	`memsys3MÆlocUnß„
(
nByãs
);

537 if–
p
 ){

538 if–
nOld
<
nByãs
 ){

539 
	`mem˝y
(
p
, 
pPri‹
, 
nOld
);

541 
	`mem˝y
(
p
, 
pPri‹
, 
nByãs
);

543 
	`memsys3FªeUnß„
(
pPri‹
);

545 
	`memsys3Lóve
();

546  
p
;

547 
	}
}

552 
	$memsys3Inô
(*
NŸU£d
){

553 
	`UNUSED_PARAMETER
(
NŸU£d
);

554 if–!
sqlôe3GlobÆC⁄fig
.
pHóp
 ){

555  
SQLITE_ERROR
;

559 
	`as£π
–(
Mem3Block
)==8 );

560 
mem3
.
aPoﬁ
 = (
Mem3Block
 *)
sqlôe3GlobÆC⁄fig
.
pHóp
;

561 
mem3
.
nPoﬁ
 = (
sqlôe3GlobÆC⁄fig
.
nHóp
 / (
Mem3Block
)) - 2;

564 
mem3
.
szMa°î
 = mem3.
nPoﬁ
;

565 
mem3
.
mnMa°î
 = mem3.
szMa°î
;

566 
mem3
.
iMa°î
 = 1;

567 
mem3
.
aPoﬁ
[0].
u
.
hdr
.
size4x
 = (mem3.
szMa°î
<<2) + 2;

568 
mem3
.
aPoﬁ
[mem3.
nPoﬁ
].
u
.
hdr
.
¥evSize
 = mem3.nPool;

569 
mem3
.
aPoﬁ
[mem3.
nPoﬁ
].
u
.
hdr
.
size4x
 = 1;

571  
SQLITE_OK
;

572 
	}
}

577 
	$memsys3Shutdown
(*
NŸU£d
){

578 
	`UNUSED_PARAMETER
(
NŸU£d
);

579 
mem3
.
muãx
 = 0;

581 
	}
}

589 
	$sqlôe3Memsys3Dump
(c⁄° *
zFûíame
){

590 #ifde‡
SQLITE_DEBUG


591 
FILE
 *
out
;

592 
u32
 
i
, 
j
;

593 
u32
 
size
;

594 if–
zFûíame
==0 || zFilename[0]==0 ){

595 
out
 = 
°dout
;

597 
out
 = 
	`f›í
(
zFûíame
, "w");

598 if–
out
==0 ){

599 
	`Ârötf
(
°dîr
, "** UnableÅo output memory debug outputÜog: %s **\n",

600 
zFûíame
);

604 
	`memsys3E¡î
();

605 
	`Ârötf
(
out
, "CHUNKS:\n");

606 
i
=1; i<=
mem3
.
nPoﬁ
; i+=
size
/4){

607 
size
 = 
mem3
.
aPoﬁ
[
i
-1].
u
.
hdr
.
size4x
;

608 if–
size
/4<=1 ){

609 
	`Ârötf
(
out
, "%∞sizêîr‹\n", &
mem3
.
aPoﬁ
[
i
]);

610 
	`as£π
( 0 );

613 if–(
size
&1)==0 && 
mem3
.
aPoﬁ
[
i
+size/4-1].
u
.
hdr
.
¥evSize
!=size/4 ){

614 
	`Ârötf
(
out
, "%∞èû sizêd€†nŸ m©ch\n", &
mem3
.
aPoﬁ
[
i
]);

615 
	`as£π
( 0 );

618 if–((
mem3
.
aPoﬁ
[
i
+
size
/4-1].
u
.
hdr
.
size4x
&2)>>1)!=(size&1) ){

619 
	`Ârötf
(
out
, "%∞èû checkouàbô i†öc‹ª˘\n", &
mem3
.
aPoﬁ
[
i
]);

620 
	`as£π
( 0 );

623 if–
size
&1 ){

624 
	`Ârötf
(
out
, "%∞%6d byã†checked out\n", &
mem3
.
aPoﬁ
[
i
], (
size
/4)*8-8);

626 
	`Ârötf
(
out
, "%∞%6d byã†‰ì%s\n", &
mem3
.
aPoﬁ
[
i
], (
size
/4)*8-8,

627 
i
==
mem3
.
iMa°î
 ? " **master**" : "");

630 
i
=0; i<
MX_SMALL
-1; i++){

631 if–
mem3
.
aiSmÆl
[
i
]==0 ) ;

632 
	`Ârötf
(
out
, "smÆl(%2d):", 
i
);

633 
j
 = 
mem3
.
aiSmÆl
[
i
]; j>0; j=mem3.
aPoﬁ
[j].
u
.
li°
.
√xt
){

634 
	`Ârötf
(
out
, " %p(%d)", &
mem3
.
aPoﬁ
[
j
],

635 (
mem3
.
aPoﬁ
[
j
-1].
u
.
hdr
.
size4x
/4)*8-8);

637 
	`Ârötf
(
out
, "\n");

639 
i
=0; i<
N_HASH
; i++){

640 if–
mem3
.
aiHash
[
i
]==0 ) ;

641 
	`Ârötf
(
out
, "hash(%2d):", 
i
);

642 
j
 = 
mem3
.
aiHash
[
i
]; j>0; j=mem3.
aPoﬁ
[j].
u
.
li°
.
√xt
){

643 
	`Ârötf
(
out
, " %p(%d)", &
mem3
.
aPoﬁ
[
j
],

644 (
mem3
.
aPoﬁ
[
j
-1].
u
.
hdr
.
size4x
/4)*8-8);

646 
	`Ârötf
(
out
, "\n");

648 
	`Ârötf
(
out
, "ma°î=%d\n", 
mem3
.
iMa°î
);

649 
	`Ârötf
(
out
, "nowU£d=%d\n", 
mem3
.
nPoﬁ
*8 - mem3.
szMa°î
*8);

650 
	`Ârötf
(
out
, "mxU£d=%d\n", 
mem3
.
nPoﬁ
*8 - mem3.
mnMa°î
*8);

651 
	`sqlôe3_muãx_Àave
(
mem3
.
muãx
);

652 if–
out
==
°dout
 ){

653 
	`fÊush
(
°dout
);

655 
	`f˛o£
(
out
);

658 
	`UNUSED_PARAMETER
(
zFûíame
);

660 
	}
}

673 c⁄° 
sqlôe3_mem_mëhods
 *
	$sqlôe3MemGëMemsys3
(){

674 c⁄° 
sqlôe3_mem_mëhods
 
mempoﬁMëhods
 = {

675 
memsys3MÆloc
,

676 
memsys3Fªe
,

677 
memsys3RóŒoc
,

678 
memsys3Size
,

679 
memsys3Roundup
,

680 
memsys3Inô
,

681 
memsys3Shutdown
,

684  &
mempoﬁMëhods
;

685 
	}
}

	@mem5.c

51 
	~"sqlôeI¡.h
"

57 #ifde‡
SQLITE_ENABLE_MEMSYS5


67 
Mem5Lök
 
	tMem5Lök
;

68 
	sMem5Lök
 {

69 
	m√xt
;

70 
	m¥ev
;

78 
	#LOGMAX
 30

	)

83 
	#CTRL_LOGSIZE
 0x1‡

	)

84 
	#CTRL_FREE
 0x20

	)

92 
SQLITE_WSD
 
	sMem5GlobÆ
 {

96 
	mszAtom
;

97 
	mnBlock
;

98 
u8
 *
	mzPoﬁ
;

103 
sqlôe3_muãx
 *
	mmuãx
;

105 #i‡
deföed
(
SQLITE_DEBUG
Ë|| deföed(
SQLITE_TEST
)

109 
u64
 
	mnAŒoc
;

110 
u64
 
	mtŸÆAŒoc
;

111 
u64
 
	mtŸÆEx˚ss
;

112 
u32
 
	mcuºítOut
;

113 
u32
 
	mcuºítCou¡
;

114 
u32
 
	mmaxOut
;

115 
u32
 
	mmaxCou¡
;

116 
u32
 
	mmaxReque°
;

124 
	maiFªñi°
[
LOGMAX
+1];

130 
u8
 *
	maCål
;

132 } 
	gmem5
;

137 
	#mem5
 
	`GLOBAL
(
Mem5GlobÆ
, 
mem5
)

	)

143 
	#MEM5LINK
(
idx
Ë((
Mem5Lök
 *)(&
mem5
.
zPoﬁ
[(idx)*mem5.
szAtom
]))

	)

149 
	$memsys5U∆ök
(
i
, 
iLogsize
){

150 
√xt
, 
¥ev
;

151 
	`as£π
–
i
>=0 && i<
mem5
.
nBlock
 );

152 
	`as£π
–
iLogsize
>=0 && iLogsize<=
LOGMAX
 );

153 
	`as£π
–(
mem5
.
aCål
[
i
] & 
CTRL_LOGSIZE
)==
iLogsize
 );

155 
√xt
 = 
	`MEM5LINK
(
i
)->next;

156 
¥ev
 = 
	`MEM5LINK
(
i
)->prev;

157 if–
¥ev
<0 ){

158 
mem5
.
aiFªñi°
[
iLogsize
] = 
√xt
;

160 
	`MEM5LINK
(
¥ev
)->
√xt
 =Çext;

162 if–
√xt
>=0 ){

163 
	`MEM5LINK
(
√xt
)->
¥ev
 =Örev;

165 
	}
}

171 
	$memsys5Lök
(
i
, 
iLogsize
){

172 
x
;

173 
	`as£π
–
	`sqlôe3_muãx_hñd
(
mem5
.
muãx
) );

174 
	`as£π
–
i
>=0 && i<
mem5
.
nBlock
 );

175 
	`as£π
–
iLogsize
>=0 && iLogsize<=
LOGMAX
 );

176 
	`as£π
–(
mem5
.
aCål
[
i
] & 
CTRL_LOGSIZE
)==
iLogsize
 );

178 
x
 = 
	`MEM5LINK
(
i
)->
√xt
 = 
mem5
.
aiFªñi°
[
iLogsize
];

179 
	`MEM5LINK
(
i
)->
¥ev
 = -1;

180 if–
x
>=0 ){

181 
	`as£π
–
x
<
mem5
.
nBlock
 );

182 
	`MEM5LINK
(
x
)->
¥ev
 = 
i
;

184 
mem5
.
aiFªñi°
[
iLogsize
] = 
i
;

185 
	}
}

190 
	$memsys5E¡î
(){

191 
	`sqlôe3_muãx_íãr
(
mem5
.
muãx
);

192 
	}
}

193 
	$memsys5Lóve
(){

194 
	`sqlôe3_muãx_Àave
(
mem5
.
muãx
);

195 
	}
}

201 
	$memsys5Size
(*
p
){

202 
iSize
, 
i
;

203 
	`as£π
–
p
!=0 );

204 
i
 = ()(((
u8
 *)
p
-
mem5
.
zPoﬁ
)/mem5.
szAtom
);

205 
	`as£π
–
i
>=0 && i<
mem5
.
nBlock
 );

206 
iSize
 = 
mem5
.
szAtom
 * (1 << (mem5.
aCål
[
i
]&
CTRL_LOGSIZE
));

207  
iSize
;

208 
	}
}

220 *
	$memsys5MÆlocUnß„
(
nByã
){

221 
i
;

222 
iBö
;

223 
iFuŒSz
;

224 
iLogsize
;

227 
	`as£π
–
nByã
>0 );

230 if–
nByã
 > 0x40000000 )  0;

232 #i‡
	`deföed
(
SQLITE_DEBUG
Ë|| deföed(
SQLITE_TEST
)

235 if–(
u32
)
nByã
>
mem5
.
maxReque°
 ){

236 
mem5
.
maxReque°
 = 
nByã
;

242 
iFuŒSz
=
mem5
.
szAtom
,
iLogsize
=0; iFuŒSz<
nByã
; iFullSz*=2,iLogsize++){}

248 
iBö
=
iLogsize
; iBö<=
LOGMAX
 && 
mem5
.
aiFªñi°
[iBin]<0; iBin++){}

249 if–
iBö
>
LOGMAX
 ){

250 
	`ã°ˇ£
–
sqlôe3GlobÆC⁄fig
.
xLog
!=0 );

251 
	`sqlôe3_log
(
SQLITE_NOMEM
, "ÁûedÅÿÆloˇã %u byãs", 
nByã
);

254 
i
 = 
mem5
.
aiFªñi°
[
iBö
];

255 
	`memsys5U∆ök
(
i
, 
iBö
);

256  
iBö
>
iLogsize
 ){

257 
√wSize
;

259 
iBö
--;

260 
√wSize
 = 1 << 
iBö
;

261 
mem5
.
aCål
[
i
+
√wSize
] = 
CTRL_FREE
 | 
iBö
;

262 
	`memsys5Lök
(
i
+
√wSize
, 
iBö
);

264 
mem5
.
aCål
[
i
] = 
iLogsize
;

266 #i‡
	`deföed
(
SQLITE_DEBUG
Ë|| deföed(
SQLITE_TEST
)

268 
mem5
.
nAŒoc
++;

269 
mem5
.
tŸÆAŒoc
 +
iFuŒSz
;

270 
mem5
.
tŸÆEx˚ss
 +
iFuŒSz
 - 
nByã
;

271 
mem5
.
cuºítCou¡
++;

272 
mem5
.
cuºítOut
 +
iFuŒSz
;

273 if–
mem5
.
maxCou¡
<mem5.
cuºítCou¡
 ) mem5.maxCount = mem5.currentCount;

274 if–
mem5
.
maxOut
<mem5.
cuºítOut
 ) mem5.maxOut = mem5.currentOut;

277 #ifde‡
SQLITE_DEBUG


280 
	`mem£t
(&
mem5
.
zPoﬁ
[
i
*mem5.
szAtom
], 0xAA, 
iFuŒSz
);

284  (*)&
mem5
.
zPoﬁ
[
i
*mem5.
szAtom
];

285 
	}
}

290 
	$memsys5FªeUnß„
(*
pOld
){

291 
u32
 
size
, 
iLogsize
;

292 
iBlock
;

297 
iBlock
 = ()(((
u8
 *)
pOld
-
mem5
.
zPoﬁ
)/mem5.
szAtom
);

300 
	`as£π
–
iBlock
>=0 && iBlock<
mem5
.
nBlock
 );

301 
	`as£π
–((
u8
 *)
pOld
-
mem5
.
zPoﬁ
)%mem5.
szAtom
==0 );

302 
	`as£π
–(
mem5
.
aCål
[
iBlock
] & 
CTRL_FREE
)==0 );

304 
iLogsize
 = 
mem5
.
aCål
[
iBlock
] & 
CTRL_LOGSIZE
;

305 
size
 = 1<<
iLogsize
;

306 
	`as£π
–
iBlock
+
size
-1<(
u32
)
mem5
.
nBlock
 );

308 
mem5
.
aCål
[
iBlock
] |
CTRL_FREE
;

309 
mem5
.
aCål
[
iBlock
+
size
-1] |
CTRL_FREE
;

311 #i‡
	`deföed
(
SQLITE_DEBUG
Ë|| deföed(
SQLITE_TEST
)

312 
	`as£π
–
mem5
.
cuºítCou¡
>0 );

313 
	`as£π
–
mem5
.
cuºítOut
>=(
size
*mem5.
szAtom
) );

314 
mem5
.
cuºítCou¡
--;

315 
mem5
.
cuºítOut
 -
size
*mem5.
szAtom
;

316 
	`as£π
–
mem5
.
cuºítOut
>0 || mem5.
cuºítCou¡
==0 );

317 
	`as£π
–
mem5
.
cuºítCou¡
>0 || mem5.
cuºítOut
==0 );

320 
mem5
.
aCål
[
iBlock
] = 
CTRL_FREE
 | 
iLogsize
;

321  
	`ALWAYS
(
iLogsize
<
LOGMAX
) ){

322 
iBuddy
;

323 if–(
iBlock
>>
iLogsize
) & 1 ){

324 
iBuddy
 = 
iBlock
 - 
size
;

325 
	`as£π
–
iBuddy
>=0 );

327 
iBuddy
 = 
iBlock
 + 
size
;

328 if–
iBuddy
>=
mem5
.
nBlock
 ) ;

330 if–
mem5
.
aCål
[
iBuddy
]!=(
CTRL_FREE
 | 
iLogsize
) ) ;

331 
	`memsys5U∆ök
(
iBuddy
, 
iLogsize
);

332 
iLogsize
++;

333 if–
iBuddy
<
iBlock
 ){

334 
mem5
.
aCål
[
iBuddy
] = 
CTRL_FREE
 | 
iLogsize
;

335 
mem5
.
aCål
[
iBlock
] = 0;

336 
iBlock
 = 
iBuddy
;

338 
mem5
.
aCål
[
iBlock
] = 
CTRL_FREE
 | 
iLogsize
;

339 
mem5
.
aCål
[
iBuddy
] = 0;

341 
size
 *= 2;

344 #ifde‡
SQLITE_DEBUG


347 
	`mem£t
(&
mem5
.
zPoﬁ
[
iBlock
*mem5.
szAtom
], 0x55, 
size
);

350 
	`memsys5Lök
(
iBlock
, 
iLogsize
);

351 
	}
}

356 *
	$memsys5MÆloc
(
nByãs
){

357 
sqlôe3_öt64
 *
p
 = 0;

358 if–
nByãs
>0 ){

359 
	`memsys5E¡î
();

360 
p
 = 
	`memsys5MÆlocUnß„
(
nByãs
);

361 
	`memsys5Lóve
();

363  (*)
p
;

364 
	}
}

372 
	$memsys5Fªe
(*
pPri‹
){

373 
	`as£π
–
pPri‹
!=0 );

374 
	`memsys5E¡î
();

375 
	`memsys5FªeUnß„
(
pPri‹
);

376 
	`memsys5Lóve
();

377 
	}
}

391 *
	$memsys5RóŒoc
(*
pPri‹
, 
nByãs
){

392 
nOld
;

393 *
p
;

394 
	`as£π
–
pPri‹
!=0 );

395 
	`as£π
–(
nByãs
&(nBytes-1))==0 );

396 
	`as£π
–
nByãs
>=0 );

397 if–
nByãs
==0 ){

400 
nOld
 = 
	`memsys5Size
(
pPri‹
);

401 if–
nByãs
<=
nOld
 ){

402  
pPri‹
;

404 
p
 = 
	`memsys5MÆloc
(
nByãs
);

405 if–
p
 ){

406 
	`mem˝y
(
p
, 
pPri‹
, 
nOld
);

407 
	`memsys5Fªe
(
pPri‹
);

409  
p
;

410 
	}
}

421 
	$memsys5Roundup
(
n
){

422 
iFuŒSz
;

423 if–
n
 > 0x40000000 )  0;

424 
iFuŒSz
=
mem5
.
szAtom
; iFuŒSz<
n
; iFullSz *= 2);

425  
iFuŒSz
;

426 
	}
}

438 
	$memsys5Log
(
iVÆue
){

439 
iLog
;

440 
iLog
=0; (iLog<()((()*8)-1)Ë&& (1<<iLog)<
iVÆue
; iLog++);

441  
iLog
;

442 
	}
}

450 
	$memsys5Inô
(*
NŸU£d
){

451 
ii
;

452 
nByã
;

453 
u8
 *
zByã
;

454 
nMöLog
;

455 
iOff£t
;

457 
	`UNUSED_PARAMETER
(
NŸU£d
);

460 
mem5
.
muãx
 = 0;

465 
	`as£π
–((
Mem5Lök
)&((Mem5Link)-1))==0 );

467 
nByã
 = 
sqlôe3GlobÆC⁄fig
.
nHóp
;

468 
zByã
 = (
u8
*)
sqlôe3GlobÆC⁄fig
.
pHóp
;

469 
	`as£π
–
zByã
!=0 );

472 
nMöLog
 = 
	`memsys5Log
(
sqlôe3GlobÆC⁄fig
.
mnReq
);

473 
mem5
.
szAtom
 = (1<<
nMöLog
);

474  ()(
Mem5Lök
)>
mem5
.
szAtom
 ){

475 
mem5
.
szAtom
 = mem5.szAtom << 1;

478 
mem5
.
nBlock
 = (
nByã
 / (mem5.
szAtom
+(
u8
)));

479 
mem5
.
zPoﬁ
 = 
zByã
;

480 
mem5
.
aCål
 = (
u8
 *)&mem5.
zPoﬁ
[mem5.
nBlock
*mem5.
szAtom
];

482 
ii
=0; ii<=
LOGMAX
; ii++){

483 
mem5
.
aiFªñi°
[
ii
] = -1;

486 
iOff£t
 = 0;

487 
ii
=
LOGMAX
; ii>=0; ii--){

488 
nAŒoc
 = (1<<
ii
);

489 if–(
iOff£t
+
nAŒoc
)<=
mem5
.
nBlock
 ){

490 
mem5
.
aCål
[
iOff£t
] = 
ii
 | 
CTRL_FREE
;

491 
	`memsys5Lök
(
iOff£t
, 
ii
);

492 
iOff£t
 +
nAŒoc
;

494 
	`as£π
((
iOff£t
+
nAŒoc
)>
mem5
.
nBlock
);

498 if–
sqlôe3GlobÆC⁄fig
.
bMem°©
==0 ){

499 
mem5
.
muãx
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MEM
);

502  
SQLITE_OK
;

503 
	}
}

508 
	$memsys5Shutdown
(*
NŸU£d
){

509 
	`UNUSED_PARAMETER
(
NŸU£d
);

510 
mem5
.
muãx
 = 0;

512 
	}
}

514 #ifde‡
SQLITE_TEST


519 
	$sqlôe3Memsys5Dump
(c⁄° *
zFûíame
){

520 
FILE
 *
out
;

521 
i
, 
j
, 
n
;

522 
nMöLog
;

524 if–
zFûíame
==0 || zFilename[0]==0 ){

525 
out
 = 
°dout
;

527 
out
 = 
	`f›í
(
zFûíame
, "w");

528 if–
out
==0 ){

529 
	`Ârötf
(
°dîr
, "** UnableÅo output memory debug outputÜog: %s **\n",

530 
zFûíame
);

534 
	`memsys5E¡î
();

535 
nMöLog
 = 
	`memsys5Log
(
mem5
.
szAtom
);

536 
i
=0; i<=
LOGMAX
 && i+
nMöLog
<32; i++){

537 
n
=0, 
j
=
mem5
.
aiFªñi°
[
i
]; j>=0; j = 
	`MEM5LINK
(j)->
√xt
,Ç++){}

538 
	`Ârötf
(
out
, "‰ìli° iãm†o‡sizê%d: %d\n", 
mem5
.
szAtom
 << 
i
, 
n
);

540 
	`Ârötf
(
out
, "mem5.nAŒo¯ = %Œu\n", 
mem5
.
nAŒoc
);

541 
	`Ârötf
(
out
, "mem5.tŸÆAŒo¯ = %Œu\n", 
mem5
.
tŸÆAŒoc
);

542 
	`Ârötf
(
out
, "mem5.tŸÆEx˚s† = %Œu\n", 
mem5
.
tŸÆEx˚ss
);

543 
	`Ârötf
(
out
, "mem5.cuºítOuà = %u\n", 
mem5
.
cuºítOut
);

544 
	`Ârötf
(
out
, "mem5.cuºítCou¡ = %u\n", 
mem5
.
cuºítCou¡
);

545 
	`Ârötf
(
out
, "mem5.maxOuà = %u\n", 
mem5
.
maxOut
);

546 
	`Ârötf
(
out
, "mem5.maxCou¡ = %u\n", 
mem5
.
maxCou¡
);

547 
	`Ârötf
(
out
, "mem5.maxReque° = %u\n", 
mem5
.
maxReque°
);

548 
	`memsys5Lóve
();

549 if–
out
==
°dout
 ){

550 
	`fÊush
(
°dout
);

552 
	`f˛o£
(
out
);

554 
	}
}

562 c⁄° 
sqlôe3_mem_mëhods
 *
	$sqlôe3MemGëMemsys5
(){

563 c⁄° 
sqlôe3_mem_mëhods
 
memsys5Mëhods
 = {

564 
memsys5MÆloc
,

565 
memsys5Fªe
,

566 
memsys5RóŒoc
,

567 
memsys5Size
,

568 
memsys5Roundup
,

569 
memsys5Inô
,

570 
memsys5Shutdown
,

573  &
memsys5Mëhods
;

574 
	}
}

	@memjournal.c

26 
	~"sqlôeI¡.h
"

29 
MemJou∫Æ
 
	tMemJou∫Æ
;

30 
FûePoöt
 
	tFûePoöt
;

31 
FûeChunk
 
	tFûeChunk
;

39 
	sFûeChunk
 {

40 
FûeChunk
 *
	mpNext
;

41 
u8
 
	mzChunk
[8];

47 
	#MEMJOURNAL_DFLT_FILECHUNKSIZE
 1024

	)

53 
	#fûeChunkSize
(
nChunkSize
Ë((
FûeChunk
Ë+ (“ChunkSize)-8))

	)

59 
	sFûePoöt
 {

60 
sqlôe3_öt64
 
	miOff£t
;

61 
FûeChunk
 *
	mpChunk
;

68 
	sMemJou∫Æ
 {

69 c⁄° 
sqlôe3_io_mëhods
 *
	mpMëhod
;

70 
	mnChunkSize
;

72 
	mnSpûl
;

73 
	mnSize
;

74 
FûeChunk
 *
	mpFú°
;

75 
FûePoöt
 
	mídpoöt
;

76 
FûePoöt
 
	mªadpoöt
;

78 
	mÊags
;

79 
sqlôe3_vfs
 *
	mpVfs
;

80 c⁄° *
	mzJou∫Æ
;

87 
	$memj∫lRód
(

88 
sqlôe3_fûe
 *
pJfd
,

89 *
zBuf
,

90 
iAmt
,

91 
sqlôe_öt64
 
iOf°


93 
MemJou∫Æ
 *
p
 = (MemJou∫Æ *)
pJfd
;

94 
u8
 *
zOut
 = 
zBuf
;

95 
nRód
 = 
iAmt
;

96 
iChunkOff£t
;

97 
FûeChunk
 *
pChunk
;

99 #ifde‡
SQLITE_ENABLE_ATOMIC_WRITE


100 if–(
iAmt
+
iOf°
)>
p
->
ídpoöt
.
iOff£t
 ){

101  
SQLITE_IOERR_SHORT_READ
;

105 
	`as£π
–(
iAmt
+
iOf°
)<=
p
->
ídpoöt
.
iOff£t
 );

106 
	`as£π
–
p
->
ªadpoöt
.
iOff£t
==0 ||Ö->ªadpoöt.
pChunk
!=0 );

107 if–
p
->
ªadpoöt
.
iOff£t
!=
iOf°
 || iOfst==0 ){

108 
sqlôe3_öt64
 
iOff
 = 0;

109 
pChunk
=
p
->
pFú°
;

110 
	`ALWAYS
(
pChunk
Ë&& (
iOff
+
p
->
nChunkSize
)<=
iOf°
;

111 
pChunk
ıChunk->
pNext


113 
iOff
 +
p
->
nChunkSize
;

116 
pChunk
 = 
p
->
ªadpoöt
.pChunk;

117 
	`as£π
–
pChunk
!=0 );

120 
iChunkOff£t
 = ()(
iOf°
%
p
->
nChunkSize
);

122 
iS∑˚
 = 
p
->
nChunkSize
 - 
iChunkOff£t
;

123 
nC›y
 = 
	`MIN
(
nRód
, (
p
->
nChunkSize
 - 
iChunkOff£t
));

124 
	`mem˝y
(
zOut
, (
u8
*)
pChunk
->
zChunk
 + 
iChunkOff£t
, 
nC›y
);

125 
zOut
 +
nC›y
;

126 
nRód
 -
iS∑˚
;

127 
iChunkOff£t
 = 0;

128 }  
nRód
>=0 && (
pChunk
ıChunk->
pNext
)!=0 &&ÇRead>0 );

129 
p
->
ªadpoöt
.
iOff£t
 = 
pChunk
 ? 
iOf°
+
iAmt
 : 0;

130 
p
->
ªadpoöt
.
pChunk
 =ÖChunk;

132  
SQLITE_OK
;

133 
	}
}

138 
	$memj∫lFªeChunks
(
MemJou∫Æ
 *
p
){

139 
FûeChunk
 *
pIãr
;

140 
FûeChunk
 *
pNext
;

141 
pIãr
=
p
->
pFú°
;ÖIãr;ÖIãr=
pNext
){

142 
pNext
 = 
pIãr
->pNext;

143 
	`sqlôe3_‰ì
(
pIãr
);

145 
p
->
pFú°
 = 0;

146 
	}
}

151 
	$memj∫lCª©eFûe
(
MemJou∫Æ
 *
p
){

152 
rc
;

153 
sqlôe3_fûe
 *
pRól
 = (sqlôe3_fûe*)
p
;

154 
MemJou∫Æ
 
c›y
 = *
p
;

156 
	`mem£t
(
p
, 0, (
MemJou∫Æ
));

157 
rc
 = 
	`sqlôe3OsO≥n
(
c›y
.
pVfs
, c›y.
zJou∫Æ
, 
pRól
, c›y.
Êags
, 0);

158 if–
rc
==
SQLITE_OK
 ){

159 
nChunk
 = 
c›y
.
nChunkSize
;

160 
i64
 
iOff
 = 0;

161 
FûeChunk
 *
pIãr
;

162 
pIãr
=
c›y
.
pFú°
;ÖIãr;ÖIãrıIãr->
pNext
){

163 if–
iOff
 + 
nChunk
 > 
c›y
.
ídpoöt
.
iOff£t
 ){

164 
nChunk
 = 
c›y
.
ídpoöt
.
iOff£t
 - 
iOff
;

166 
rc
 = 
	`sqlôe3OsWrôe
(
pRól
, (
u8
*)
pIãr
->
zChunk
, 
nChunk
, 
iOff
);

167 if–
rc
 ) ;

168 
iOff
 +
nChunk
;

170 if–
rc
==
SQLITE_OK
 ){

172 
	`memj∫lFªeChunks
(&
c›y
);

175 if–
rc
!=
SQLITE_OK
 ){

180 
	`sqlôe3OsClo£
(
pRól
);

181 *
p
 = 
c›y
;

183  
rc
;

184 
	}
}

190 
	$memj∫lWrôe
(

191 
sqlôe3_fûe
 *
pJfd
,

192 c⁄° *
zBuf
,

193 
iAmt
,

194 
sqlôe_öt64
 
iOf°


196 
MemJou∫Æ
 *
p
 = (MemJou∫Æ *)
pJfd
;

197 
nWrôe
 = 
iAmt
;

198 
u8
 *
zWrôe
 = (u8 *)
zBuf
;

202 if–
p
->
nSpûl
>0 && (
iAmt
+
iOf°
)>p->nSpill ){

203 
rc
 = 
	`memj∫lCª©eFûe
(
p
);

204 if–
rc
==
SQLITE_OK
 ){

205 
rc
 = 
	`sqlôe3OsWrôe
(
pJfd
, 
zBuf
, 
iAmt
, 
iOf°
);

207  
rc
;

217 
	`as£π
–
iOf°
==
p
->
ídpoöt
.
iOff£t
 || iOfst==0 );

218 #ifde‡
SQLITE_ENABLE_ATOMIC_WRITE


219 if–
iOf°
==0 && 
p
->
pFú°
 ){

220 
	`as£π
–
p
->
nChunkSize
>
iAmt
 );

221 
	`mem˝y
((
u8
*)
p
->
pFú°
->
zChunk
, 
zBuf
, 
iAmt
);

224 
	`as£π
–
iOf°
>0 || 
p
->
pFú°
==0 );

227  
nWrôe
>0 ){

228 
FûeChunk
 *
pChunk
 = 
p
->
ídpoöt
.pChunk;

229 
iChunkOff£t
 = ()(
p
->
ídpoöt
.
iOff£t
%p->
nChunkSize
);

230 
iS∑˚
 = 
	`MIN
(
nWrôe
, 
p
->
nChunkSize
 - 
iChunkOff£t
);

232 if–
iChunkOff£t
==0 ){

234 
FûeChunk
 *
pNew
 = 
	`sqlôe3_mÆloc
(
	`fûeChunkSize
(
p
->
nChunkSize
));

235 if–!
pNew
 ){

236  
SQLITE_IOERR_NOMEM_BKPT
;

238 
pNew
->
pNext
 = 0;

239 if–
pChunk
 ){

240 
	`as£π
–
p
->
pFú°
 );

241 
pChunk
->
pNext
 = 
pNew
;

243 
	`as£π
–!
p
->
pFú°
 );

244 
p
->
pFú°
 = 
pNew
;

246 
p
->
ídpoöt
.
pChunk
 = 
pNew
;

249 
	`mem˝y
((
u8
*)
p
->
ídpoöt
.
pChunk
->
zChunk
 + 
iChunkOff£t
, 
zWrôe
, 
iS∑˚
);

250 
zWrôe
 +
iS∑˚
;

251 
nWrôe
 -
iS∑˚
;

252 
p
->
ídpoöt
.
iOff£t
 +
iS∑˚
;

254 
p
->
nSize
 = 
iAmt
 + 
iOf°
;

258  
SQLITE_OK
;

259 
	}
}

268 
	$memj∫lTrunˇã
(
sqlôe3_fûe
 *
pJfd
, 
sqlôe_öt64
 
size
){

269 
MemJou∫Æ
 *
p
 = (MemJou∫Æ *)
pJfd
;

270 if–
	`ALWAYS
(
size
==0) ){

271 
	`memj∫lFªeChunks
(
p
);

272 
p
->
nSize
 = 0;

273 
p
->
ídpoöt
.
pChunk
 = 0;

274 
p
->
ídpoöt
.
iOff£t
 = 0;

275 
p
->
ªadpoöt
.
pChunk
 = 0;

276 
p
->
ªadpoöt
.
iOff£t
 = 0;

278  
SQLITE_OK
;

279 
	}
}

284 
	$memj∫lClo£
(
sqlôe3_fûe
 *
pJfd
){

285 
MemJou∫Æ
 *
p
 = (MemJou∫Æ *)
pJfd
;

286 
	`memj∫lFªeChunks
(
p
);

287  
SQLITE_OK
;

288 
	}
}

296 
	$memj∫lSync
(
sqlôe3_fûe
 *
pJfd
, 
Êags
){

297 
	`UNUSED_PARAMETER2
(
pJfd
, 
Êags
);

298  
SQLITE_OK
;

299 
	}
}

304 
	$memj∫lFûeSize
(
sqlôe3_fûe
 *
pJfd
, 
sqlôe_öt64
 *
pSize
){

305 
MemJou∫Æ
 *
p
 = (MemJou∫Æ *)
pJfd
;

306 *
pSize
 = (
sqlôe_öt64
Ë
p
->
ídpoöt
.
iOff£t
;

307  
SQLITE_OK
;

308 
	}
}

313 c⁄° 
sqlôe3_io_mëhods
 
	gMemJou∫ÆMëhods
 = {

315 
memj∫lClo£
,

316 
memj∫lRód
,

317 
memj∫lWrôe
,

318 
memj∫lTrunˇã
,

319 
memj∫lSync
,

320 
memj∫lFûeSize
,

347 
	$sqlôe3Jou∫ÆO≥n
(

348 
sqlôe3_vfs
 *
pVfs
,

349 c⁄° *
zName
,

350 
sqlôe3_fûe
 *
pJfd
,

351 
Êags
,

352 
nSpûl


354 
MemJou∫Æ
 *
p
 = (MemJou∫Æ*)
pJfd
;

360 
	`mem£t
(
p
, 0, (
MemJou∫Æ
));

361 if–
nSpûl
==0 ){

362  
	`sqlôe3OsO≥n
(
pVfs
, 
zName
, 
pJfd
, 
Êags
, 0);

365 if–
nSpûl
>0 ){

366 
p
->
nChunkSize
 = 
nSpûl
;

368 
p
->
nChunkSize
 = 8 + 
MEMJOURNAL_DFLT_FILECHUNKSIZE
 - (
FûeChunk
);

369 
	`as£π
–
MEMJOURNAL_DFLT_FILECHUNKSIZE
==
	`fûeChunkSize
(
p
->
nChunkSize
) );

372 
p
->
pMëhod
 = (c⁄° 
sqlôe3_io_mëhods
*)&
MemJou∫ÆMëhods
;

373 
p
->
nSpûl
 =ÇSpill;

374 
p
->
Êags
 = flags;

375 
p
->
zJou∫Æ
 = 
zName
;

376 
p
->
pVfs
 =ÖVfs;

377  
SQLITE_OK
;

378 
	}
}

383 
	$sqlôe3MemJou∫ÆO≥n
(
sqlôe3_fûe
 *
pJfd
){

384 
	`sqlôe3Jou∫ÆO≥n
(0, 0, 
pJfd
, 0, -1);

385 
	}
}

387 #ifde‡
SQLITE_ENABLE_ATOMIC_WRITE


394 
	$sqlôe3Jou∫ÆCª©e
(
sqlôe3_fûe
 *
p
){

395 
rc
 = 
SQLITE_OK
;

396 if–
p
->
pMëhods
==&
MemJou∫ÆMëhods
 && ((
MemJou∫Æ
*Ì)->
nSpûl
>0 ){

397 
rc
 = 
	`memj∫lCª©eFûe
((
MemJou∫Æ
*)
p
);

399  
rc
;

400 
	}
}

408 
	$sqlôe3Jou∫ÆIsInMem‹y
(
sqlôe3_fûe
 *
p
){

409  
p
->
pMëhods
==&
MemJou∫ÆMëhods
;

410 
	}
}

416 
	$sqlôe3Jou∫ÆSize
(
sqlôe3_vfs
 *
pVfs
){

417  
	`MAX
(
pVfs
->
szOsFûe
, ()(
MemJou∫Æ
));

418 
	}
}

	@msvc.h

15 #i‚de‡
SQLITE_MSVC_H


16 
	#SQLITE_MSVC_H


	)

18 #i‡
deföed
(
_MSC_VER
)

19 #¥agm®
w¨nög
(
dißbÀ
 : 4054)

20 #¥agm®
w¨nög
(
dißbÀ
 : 4055)

21 #¥agm®
w¨nög
(
dißbÀ
 : 4100)

22 #¥agm®
w¨nög
(
dißbÀ
 : 4127)

23 #¥agm®
w¨nög
(
dißbÀ
 : 4130)

24 #¥agm®
w¨nög
(
dißbÀ
 : 4152)

25 #¥agm®
w¨nög
(
dißbÀ
 : 4189)

26 #¥agm®
w¨nög
(
dißbÀ
 : 4206)

27 #¥agm®
w¨nög
(
dißbÀ
 : 4210)

28 #¥agm®
w¨nög
(
dißbÀ
 : 4232)

29 #¥agm®
w¨nög
(
dißbÀ
 : 4244)

30 #¥agm®
w¨nög
(
dißbÀ
 : 4305)

31 #¥agm®
w¨nög
(
dißbÀ
 : 4306)

32 #¥agm®
w¨nög
(
dißbÀ
 : 4702)

33 #¥agm®
w¨nög
(
dißbÀ
 : 4706)

	@mutex.c

16 
	~"sqlôeI¡.h
"

18 #i‡
deföed
(
SQLITE_DEBUG
Ë&& !deföed(
SQLITE_MUTEX_OMIT
)

24 
SQLITE_WSD
 
	gmuãxIsInô
 = 0;

28 #i‚de‡
SQLITE_MUTEX_OMIT


32 
	$sqlôe3MuãxInô
(){

33 
rc
 = 
SQLITE_OK
;

34 if–!
sqlôe3GlobÆC⁄fig
.
muãx
.
xMuãxAŒoc
 ){

40 
sqlôe3_muãx_mëhods
 c⁄° *
pFrom
;

41 
sqlôe3_muãx_mëhods
 *
pTo
 = &
sqlôe3GlobÆC⁄fig
.
muãx
;

43 if–
sqlôe3GlobÆC⁄fig
.
bC‹eMuãx
 ){

44 
pFrom
 = 
	`sqlôe3DeÁu…Muãx
();

46 
pFrom
 = 
	`sqlôe3No›Muãx
();

48 
pTo
->
xMuãxInô
 = 
pFrom
->xMutexInit;

49 
pTo
->
xMuãxEnd
 = 
pFrom
->xMutexEnd;

50 
pTo
->
xMuãxFªe
 = 
pFrom
->xMutexFree;

51 
pTo
->
xMuãxE¡î
 = 
pFrom
->xMutexEnter;

52 
pTo
->
xMuãxTry
 = 
pFrom
->xMutexTry;

53 
pTo
->
xMuãxLóve
 = 
pFrom
->xMutexLeave;

54 
pTo
->
xMuãxHñd
 = 
pFrom
->xMutexHeld;

55 
pTo
->
xMuãxNŸhñd
 = 
pFrom
->xMutexNotheld;

56 
	`sqlôe3Mem‹yB¨rõr
();

57 
pTo
->
xMuãxAŒoc
 = 
pFrom
->xMutexAlloc;

59 
	`as£π
–
sqlôe3GlobÆC⁄fig
.
muãx
.
xMuãxInô
 );

60 
rc
 = 
sqlôe3GlobÆC⁄fig
.
muãx
.
	`xMuãxInô
();

62 #ifde‡
SQLITE_DEBUG


63 
	`GLOBAL
(, 
muãxIsInô
) = 1;

66  
rc
;

67 
	}
}

73 
	$sqlôe3MuãxEnd
(){

74 
rc
 = 
SQLITE_OK
;

75 if–
sqlôe3GlobÆC⁄fig
.
muãx
.
xMuãxEnd
 ){

76 
rc
 = 
sqlôe3GlobÆC⁄fig
.
muãx
.
	`xMuãxEnd
();

79 #ifde‡
SQLITE_DEBUG


80 
	`GLOBAL
(, 
muãxIsInô
) = 0;

83  
rc
;

84 
	}
}

89 
sqlôe3_muãx
 *
	$sqlôe3_muãx_Æloc
(
id
){

90 #i‚de‡
SQLITE_OMIT_AUTOINIT


91 if–
id
<=
SQLITE_MUTEX_RECURSIVE
 && 
	`sqlôe3_öôülize
() )  0;

92 if–
id
>
SQLITE_MUTEX_RECURSIVE
 && 
	`sqlôe3MuãxInô
() )  0;

94 
	`as£π
–
sqlôe3GlobÆC⁄fig
.
muãx
.
xMuãxAŒoc
 );

95  
sqlôe3GlobÆC⁄fig
.
muãx
.
	`xMuãxAŒoc
(
id
);

96 
	}
}

98 
sqlôe3_muãx
 *
	$sqlôe3MuãxAŒoc
(
id
){

99 if–!
sqlôe3GlobÆC⁄fig
.
bC‹eMuãx
 ){

102 
	`as£π
–
	`GLOBAL
(, 
muãxIsInô
) );

103 
	`as£π
–
sqlôe3GlobÆC⁄fig
.
muãx
.
xMuãxAŒoc
 );

104  
sqlôe3GlobÆC⁄fig
.
muãx
.
	`xMuãxAŒoc
(
id
);

105 
	}
}

110 
	$sqlôe3_muãx_‰ì
(
sqlôe3_muãx
 *
p
){

111 if–
p
 ){

112 
	`as£π
–
sqlôe3GlobÆC⁄fig
.
muãx
.
xMuãxFªe
 );

113 
sqlôe3GlobÆC⁄fig
.
muãx
.
	`xMuãxFªe
(
p
);

115 
	}
}

121 
	$sqlôe3_muãx_íãr
(
sqlôe3_muãx
 *
p
){

122 if–
p
 ){

123 
	`as£π
–
sqlôe3GlobÆC⁄fig
.
muãx
.
xMuãxE¡î
 );

124 
sqlôe3GlobÆC⁄fig
.
muãx
.
	`xMuãxE¡î
(
p
);

126 
	}
}

132 
	$sqlôe3_muãx_åy
(
sqlôe3_muãx
 *
p
){

133 
rc
 = 
SQLITE_OK
;

134 if–
p
 ){

135 
	`as£π
–
sqlôe3GlobÆC⁄fig
.
muãx
.
xMuãxTry
 );

136  
sqlôe3GlobÆC⁄fig
.
muãx
.
	`xMuãxTry
(
p
);

138  
rc
;

139 
	}
}

147 
	$sqlôe3_muãx_Àave
(
sqlôe3_muãx
 *
p
){

148 if–
p
 ){

149 
	`as£π
–
sqlôe3GlobÆC⁄fig
.
muãx
.
xMuãxLóve
 );

150 
sqlôe3GlobÆC⁄fig
.
muãx
.
	`xMuãxLóve
(
p
);

152 
	}
}

154 #i‚de‡
NDEBUG


159 
	$sqlôe3_muãx_hñd
(
sqlôe3_muãx
 *
p
){

160 
	`as£π
–
p
==0 || 
sqlôe3GlobÆC⁄fig
.
muãx
.
xMuãxHñd
 );

161  
p
==0 || 
sqlôe3GlobÆC⁄fig
.
muãx
.
	`xMuãxHñd
(p);

162 
	}
}

163 
	$sqlôe3_muãx_nŸhñd
(
sqlôe3_muãx
 *
p
){

164 
	`as£π
–
p
==0 || 
sqlôe3GlobÆC⁄fig
.
muãx
.
xMuãxNŸhñd
 );

165  
p
==0 || 
sqlôe3GlobÆC⁄fig
.
muãx
.
	`xMuãxNŸhñd
(p);

166 
	}
}

	@mutex.h

40 #i‡!
SQLITE_THREADSAFE


41 
	#SQLITE_MUTEX_OMIT


	)

43 #i‡
SQLITE_THREADSAFE
 && !
deföed
(
SQLITE_MUTEX_NOOP
)

44 #i‡
SQLITE_OS_UNIX


45 
	#SQLITE_MUTEX_PTHREADS


	)

46 #ñi‡
SQLITE_OS_WIN


47 
	#SQLITE_MUTEX_W32


	)

49 
	#SQLITE_MUTEX_NOOP


	)

53 #ifde‡
SQLITE_MUTEX_OMIT


57 
	#sqlôe3_muãx_Æloc
(
X
Ë((
sqlôe3_muãx
*)8)

	)

58 
	#sqlôe3_muãx_‰ì
(
X
)

	)

59 
	#sqlôe3_muãx_íãr
(
X
)

	)

60 
	#sqlôe3_muãx_åy
(
X
Ë
SQLITE_OK


	)

61 
	#sqlôe3_muãx_Àave
(
X
)

	)

62 
	#sqlôe3_muãx_hñd
(
X
Ë(()(X),1)

	)

63 
	#sqlôe3_muãx_nŸhñd
(
X
Ë(()(X),1)

	)

64 
	#sqlôe3MuãxAŒoc
(
X
Ë((
sqlôe3_muãx
*)8)

	)

65 
	#sqlôe3MuãxInô
(Ë
SQLITE_OK


	)

66 
	#sqlôe3MuãxEnd
()

	)

67 
	#MUTEX_LOGIC
(
X
)

	)

69 
	#MUTEX_LOGIC
(
X
Ë
	)
X

	@mutex_noop.c

28 
	~"sqlôeI¡.h
"

30 #i‚de‡
SQLITE_MUTEX_OMIT


32 #i‚de‡
SQLITE_DEBUG


38 
	$no›MuãxInô
(){  
SQLITE_OK
; 
	}
}

39 
	$no›MuãxEnd
(){  
SQLITE_OK
; 
	}
}

40 
sqlôe3_muãx
 *
	$no›MuãxAŒoc
(
id
){

41 
	`UNUSED_PARAMETER
(
id
);

42  (
sqlôe3_muãx
*)8;

43 
	}
}

44 
	$no›MuãxFªe
(
sqlôe3_muãx
 *
p
){ 
	`UNUSED_PARAMETER
’); ; 
	}
}

45 
	$no›MuãxE¡î
(
sqlôe3_muãx
 *
p
){ 
	`UNUSED_PARAMETER
’); ; 
	}
}

46 
	$no›MuãxTry
(
sqlôe3_muãx
 *
p
){

47 
	`UNUSED_PARAMETER
(
p
);

48  
SQLITE_OK
;

49 
	}
}

50 
	$no›MuãxLóve
(
sqlôe3_muãx
 *
p
){ 
	`UNUSED_PARAMETER
’); ; 
	}
}

52 
sqlôe3_muãx_mëhods
 c⁄° *
	$sqlôe3No›Muãx
(){

53 c⁄° 
sqlôe3_muãx_mëhods
 
sMuãx
 = {

54 
no›MuãxInô
,

55 
no›MuãxEnd
,

56 
no›MuãxAŒoc
,

57 
no›MuãxFªe
,

58 
no›MuãxE¡î
,

59 
no›MuãxTry
,

60 
no›MuãxLóve
,

66  &
sMuãx
;

67 
	}
}

70 #ifde‡
SQLITE_DEBUG


80 
	ssqlôe3_debug_muãx
 {

81 
	mid
;

82 
	m˙t
;

83 } 
	tsqlôe3_debug_muãx
;

89 
	$debugMuãxHñd
(
sqlôe3_muãx
 *
pX
){

90 
sqlôe3_debug_muãx
 *
p
 = (sqlôe3_debug_muãx*)
pX
;

91  
p
==0 ||Ö->
˙t
>0;

92 
	}
}

93 
	$debugMuãxNŸhñd
(
sqlôe3_muãx
 *
pX
){

94 
sqlôe3_debug_muãx
 *
p
 = (sqlôe3_debug_muãx*)
pX
;

95  
p
==0 ||Ö->
˙t
==0;

96 
	}
}

101 
	$debugMuãxInô
(){  
SQLITE_OK
; 
	}
}

102 
	$debugMuãxEnd
(){  
SQLITE_OK
; 
	}
}

109 
sqlôe3_muãx
 *
	$debugMuãxAŒoc
(
id
){

110 
sqlôe3_debug_muãx
 
aSètic
[
SQLITE_MUTEX_STATIC_VFS3
 - 1];

111 
sqlôe3_debug_muãx
 *
pNew
 = 0;

112  
id
 ){

113 
SQLITE_MUTEX_FAST
:

114 
SQLITE_MUTEX_RECURSIVE
: {

115 
pNew
 = 
	`sqlôe3MÆloc
((*pNew));

116 if–
pNew
 ){

117 
pNew
->
id
 = id;

118 
pNew
->
˙t
 = 0;

123 #ifde‡
SQLITE_ENABLE_API_ARMOR


124 if–
id
-2<0 || id-2>=
	`AºaySize
(
aSètic
) ){

125 ()
SQLITE_MISUSE_BKPT
;

129 
pNew
 = &
aSètic
[
id
-2];

130 
pNew
->
id
 = id;

134  (
sqlôe3_muãx
*)
pNew
;

135 
	}
}

140 
	$debugMuãxFªe
(
sqlôe3_muãx
 *
pX
){

141 
sqlôe3_debug_muãx
 *
p
 = (sqlôe3_debug_muãx*)
pX
;

142 
	`as£π
–
p
->
˙t
==0 );

143 if–
p
->
id
==
SQLITE_MUTEX_RECURSIVE
 ||Ö->id==
SQLITE_MUTEX_FAST
 ){

144 
	`sqlôe3_‰ì
(
p
);

146 #ifde‡
SQLITE_ENABLE_API_ARMOR


147 ()
SQLITE_MISUSE_BKPT
;

150 
	}
}

163 
	$debugMuãxE¡î
(
sqlôe3_muãx
 *
pX
){

164 
sqlôe3_debug_muãx
 *
p
 = (sqlôe3_debug_muãx*)
pX
;

165 
	`as£π
–
p
->
id
==
SQLITE_MUTEX_RECURSIVE
 || 
	`debugMuãxNŸhñd
(
pX
) );

166 
p
->
˙t
++;

167 
	}
}

168 
	$debugMuãxTry
(
sqlôe3_muãx
 *
pX
){

169 
sqlôe3_debug_muãx
 *
p
 = (sqlôe3_debug_muãx*)
pX
;

170 
	`as£π
–
p
->
id
==
SQLITE_MUTEX_RECURSIVE
 || 
	`debugMuãxNŸhñd
(
pX
) );

171 
p
->
˙t
++;

172  
SQLITE_OK
;

173 
	}
}

181 
	$debugMuãxLóve
(
sqlôe3_muãx
 *
pX
){

182 
sqlôe3_debug_muãx
 *
p
 = (sqlôe3_debug_muãx*)
pX
;

183 
	`as£π
–
	`debugMuãxHñd
(
pX
) );

184 
p
->
˙t
--;

185 
	`as£π
–
p
->
id
==
SQLITE_MUTEX_RECURSIVE
 || 
	`debugMuãxNŸhñd
(
pX
) );

186 
	}
}

188 
sqlôe3_muãx_mëhods
 c⁄° *
	$sqlôe3No›Muãx
(){

189 c⁄° 
sqlôe3_muãx_mëhods
 
sMuãx
 = {

190 
debugMuãxInô
,

191 
debugMuãxEnd
,

192 
debugMuãxAŒoc
,

193 
debugMuãxFªe
,

194 
debugMuãxE¡î
,

195 
debugMuãxTry
,

196 
debugMuãxLóve
,

198 
debugMuãxHñd
,

199 
debugMuãxNŸhñd


202  &
sMuãx
;

203 
	}
}

210 #ifde‡
SQLITE_MUTEX_NOOP


211 
sqlôe3_muãx_mëhods
 c⁄° *
	$sqlôe3DeÁu…Muãx
(){

212  
	`sqlôe3No›Muãx
();

213 
	}
}

	@mutex_unix.c

14 
	~"sqlôeI¡.h
"

23 #ifde‡
SQLITE_MUTEX_PTHREADS


25 
	~<±hªad.h
>

32 #i‡
deföed
(
SQLITE_DEBUG
Ë|| deföed(
SQLITE_HOMEGROWN_RECURSIVE_MUTEX
)

33 
	#SQLITE_MUTEX_NREF
 1

	)

35 
	#SQLITE_MUTEX_NREF
 0

	)

41 
	ssqlôe3_muãx
 {

42 
±hªad_muãx_t
 
	mmuãx
;

43 #i‡
SQLITE_MUTEX_NREF
 || 
deföed
(
SQLITE_ENABLE_API_ARMOR
)

44 
	mid
;

46 #i‡
SQLITE_MUTEX_NREF


47 vﬁ©ûê
	mnRef
;

48 vﬁ©ûê
±hªad_t
 
	mow√r
;

49 
	måa˚
;

52 #i‡
SQLITE_MUTEX_NREF


53 
	#SQLITE3_MUTEX_INITIALIZER
 {
PTHREAD_MUTEX_INITIALIZER
,0,0,(
±hªad_t
)0,0}

	)

54 #ñi‡
deföed
(
SQLITE_ENABLE_API_ARMOR
)

55 
	#SQLITE3_MUTEX_INITIALIZER
 { 
PTHREAD_MUTEX_INITIALIZER
, 0 }

	)

57 
	#SQLITE3_MUTEX_INITIALIZER
 { 
PTHREAD_MUTEX_INITIALIZER
 }

	)

76 #i‡!
deföed
(
NDEBUG
Ë|| deföed(
SQLITE_DEBUG
)

77 
	$±hªadMuãxHñd
(
sqlôe3_muãx
 *
p
){

78  (
p
->
nRef
!=0 && 
	`±hªad_equÆ
’->
ow√r
, 
	`±hªad_£lf
()));

79 
	}
}

80 
	$±hªadMuãxNŸhñd
(
sqlôe3_muãx
 *
p
){

81  
p
->
nRef
==0 || 
	`±hªad_equÆ
’->
ow√r
, 
	`±hªad_£lf
())==0;

82 
	}
}

90 
	$sqlôe3Mem‹yB¨rõr
(){

91 #i‡
	`deföed
(
SQLITE_MEMORY_BARRIER
)

92 
SQLITE_MEMORY_BARRIER
;

93 #ñi‡
	`deföed
(
__GNUC__
Ë&& 
GCC_VERSION
>=4001000

94 
	`__sync_synchr⁄ize
();

96 
	}
}

101 
	$±hªadMuãxInô
(){  
SQLITE_OK
; 
	}
}

102 
	$±hªadMuãxEnd
(){  
SQLITE_OK
; 
	}
}

152 
sqlôe3_muãx
 *
	$±hªadMuãxAŒoc
(
iTy≥
){

153 
sqlôe3_muãx
 
°©icMuãxes
[] = {

154 
SQLITE3_MUTEX_INITIALIZER
,

155 
SQLITE3_MUTEX_INITIALIZER
,

156 
SQLITE3_MUTEX_INITIALIZER
,

157 
SQLITE3_MUTEX_INITIALIZER
,

158 
SQLITE3_MUTEX_INITIALIZER
,

159 
SQLITE3_MUTEX_INITIALIZER
,

160 
SQLITE3_MUTEX_INITIALIZER
,

161 
SQLITE3_MUTEX_INITIALIZER
,

162 
SQLITE3_MUTEX_INITIALIZER
,

163 
SQLITE3_MUTEX_INITIALIZER
,

164 
SQLITE3_MUTEX_INITIALIZER
,

165 
SQLITE3_MUTEX_INITIALIZER


167 
sqlôe3_muãx
 *
p
;

168  
iTy≥
 ){

169 
SQLITE_MUTEX_RECURSIVE
: {

170 
p
 = 
	`sqlôe3MÆlocZîo
( (*p) );

171 if–
p
 ){

172 #ifde‡
SQLITE_HOMEGROWN_RECURSIVE_MUTEX


175 
	`±hªad_muãx_öô
(&
p
->
muãx
, 0);

178 
±hªad_muãx©å_t
 
ªcursiveAâr
;

179 
	`±hªad_muãx©å_öô
(&
ªcursiveAâr
);

180 
	`±hªad_muãx©å_£ây≥
(&
ªcursiveAâr
, 
PTHREAD_MUTEX_RECURSIVE
);

181 
	`±hªad_muãx_öô
(&
p
->
muãx
, &
ªcursiveAâr
);

182 
	`±hªad_muãx©å_de°roy
(&
ªcursiveAâr
);

187 
SQLITE_MUTEX_FAST
: {

188 
p
 = 
	`sqlôe3MÆlocZîo
( (*p) );

189 if–
p
 ){

190 
	`±hªad_muãx_öô
(&
p
->
muãx
, 0);

195 #ifde‡
SQLITE_ENABLE_API_ARMOR


196 if–
iTy≥
-2<0 || iTy≥-2>=
	`AºaySize
(
°©icMuãxes
) ){

197 ()
SQLITE_MISUSE_BKPT
;

201 
p
 = &
°©icMuãxes
[
iTy≥
-2];

205 #i‡
SQLITE_MUTEX_NREF
 || 
	`deföed
(
SQLITE_ENABLE_API_ARMOR
)

206 if–
p
 )Ö->
id
 = 
iTy≥
;

208  
p
;

209 
	}
}

217 
	$±hªadMuãxFªe
(
sqlôe3_muãx
 *
p
){

218 
	`as£π
–
p
->
nRef
==0 );

219 #i‡
SQLITE_ENABLE_API_ARMOR


220 if–
p
->
id
==
SQLITE_MUTEX_FAST
 ||Ö->id==
SQLITE_MUTEX_RECURSIVE
 )

223 
	`±hªad_muãx_de°roy
(&
p
->
muãx
);

224 
	`sqlôe3_‰ì
(
p
);

226 #ifde‡
SQLITE_ENABLE_API_ARMOR


228 ()
SQLITE_MISUSE_BKPT
;

231 
	}
}

244 
	$±hªadMuãxE¡î
(
sqlôe3_muãx
 *
p
){

245 
	`as£π
–
p
->
id
==
SQLITE_MUTEX_RECURSIVE
 || 
	`±hªadMuãxNŸhñd
(p) );

247 #ifde‡
SQLITE_HOMEGROWN_RECURSIVE_MUTEX


259 
±hªad_t
 
£lf
 = 
	`±hªad_£lf
();

260 if–
p
->
nRef
>0 && 
	`±hªad_equÆ
’->
ow√r
, 
£lf
) ){

261 
p
->
nRef
++;

263 
	`±hªad_muãx_lock
(&
p
->
muãx
);

264 
	`as£π
–
p
->
nRef
==0 );

265 
p
->
ow√r
 = 
£lf
;

266 
p
->
nRef
 = 1;

272 
	`±hªad_muãx_lock
(&
p
->
muãx
);

273 #i‡
SQLITE_MUTEX_NREF


274 
	`as£π
–
p
->
nRef
>0 ||Ö->
ow√r
==0 );

275 
p
->
ow√r
 = 
	`±hªad_£lf
();

276 
p
->
nRef
++;

280 #ifde‡
SQLITE_DEBUG


281 if–
p
->
åa˚
 ){

282 
	`¥ötf
("íã∏muãx %∞(%dËwôhÇRef=%d\n", 
p
,Ö->
åa˚
,Ö->
nRef
);

285 
	}
}

286 
	$±hªadMuãxTry
(
sqlôe3_muãx
 *
p
){

287 
rc
;

288 
	`as£π
–
p
->
id
==
SQLITE_MUTEX_RECURSIVE
 || 
	`±hªadMuãxNŸhñd
(p) );

290 #ifde‡
SQLITE_HOMEGROWN_RECURSIVE_MUTEX


302 
±hªad_t
 
£lf
 = 
	`±hªad_£lf
();

303 if–
p
->
nRef
>0 && 
	`±hªad_equÆ
’->
ow√r
, 
£lf
) ){

304 
p
->
nRef
++;

305 
rc
 = 
SQLITE_OK
;

306 }if–
	`±hªad_muãx_åylock
(&
p
->
muãx
)==0 ){

307 
	`as£π
–
p
->
nRef
==0 );

308 
p
->
ow√r
 = 
£lf
;

309 
p
->
nRef
 = 1;

310 
rc
 = 
SQLITE_OK
;

312 
rc
 = 
SQLITE_BUSY
;

318 if–
	`±hªad_muãx_åylock
(&
p
->
muãx
)==0 ){

319 #i‡
SQLITE_MUTEX_NREF


320 
p
->
ow√r
 = 
	`±hªad_£lf
();

321 
p
->
nRef
++;

323 
rc
 = 
SQLITE_OK
;

325 
rc
 = 
SQLITE_BUSY
;

329 #ifde‡
SQLITE_DEBUG


330 if–
rc
==
SQLITE_OK
 && 
p
->
åa˚
 ){

331 
	`¥ötf
("íã∏muãx %∞(%dËwôhÇRef=%d\n", 
p
,Ö->
åa˚
,Ö->
nRef
);

334  
rc
;

335 
	}
}

343 
	$±hªadMuãxLóve
(
sqlôe3_muãx
 *
p
){

344 
	`as£π
–
	`±hªadMuãxHñd
(
p
) );

345 #i‡
SQLITE_MUTEX_NREF


346 
p
->
nRef
--;

347 if–
p
->
nRef
==0 )Ö->
ow√r
 = 0;

349 
	`as£π
–
p
->
nRef
==0 ||Ö->
id
==
SQLITE_MUTEX_RECURSIVE
 );

351 #ifde‡
SQLITE_HOMEGROWN_RECURSIVE_MUTEX


352 if–
p
->
nRef
==0 ){

353 
	`±hªad_muãx_u∆ock
(&
p
->
muãx
);

356 
	`±hªad_muãx_u∆ock
(&
p
->
muãx
);

359 #ifde‡
SQLITE_DEBUG


360 if–
p
->
åa˚
 ){

361 
	`¥ötf
("Àavêmuãx %∞(%dËwôhÇRef=%d\n", 
p
,Ö->
åa˚
,Ö->
nRef
);

364 
	}
}

366 
sqlôe3_muãx_mëhods
 c⁄° *
	$sqlôe3DeÁu…Muãx
(){

367 c⁄° 
sqlôe3_muãx_mëhods
 
sMuãx
 = {

368 
±hªadMuãxInô
,

369 
±hªadMuãxEnd
,

370 
±hªadMuãxAŒoc
,

371 
±hªadMuãxFªe
,

372 
±hªadMuãxE¡î
,

373 
±hªadMuãxTry
,

374 
±hªadMuãxLóve
,

375 #ifde‡
SQLITE_DEBUG


376 
±hªadMuãxHñd
,

377 
±hªadMuãxNŸhñd


384  &
sMuãx
;

385 
	}
}

	@mutex_w32.c

14 
	~"sqlôeI¡.h
"

16 #i‡
SQLITE_OS_WIN


20 
	~"os_comm⁄.h
"

25 
	~"os_wö.h
"

32 #ifde‡
SQLITE_MUTEX_W32


37 
	ssqlôe3_muãx
 {

38 
CRITICAL_SECTION
 
	mmuãx
;

39 
	mid
;

40 #ifde‡
SQLITE_DEBUG


41 vﬁ©ûê
	mnRef
;

42 vﬁ©ûê
DWORD
 
	mow√r
;

43 vﬁ©ûê
	måa˚
;

52 
	#SQLITE_W32_MUTEX_INITIALIZER
 { 0 }

	)

54 #ifde‡
SQLITE_DEBUG


55 
	#SQLITE3_MUTEX_INITIALIZER
 { 
SQLITE_W32_MUTEX_INITIALIZER
, 0, \

56 0L, (
DWORD
)0, 0 }

	)

58 
	#SQLITE3_MUTEX_INITIALIZER
 { 
SQLITE_W32_MUTEX_INITIALIZER
, 0 }

	)

61 #ifde‡
SQLITE_DEBUG


66 
	$wöMuãxHñd
(
sqlôe3_muãx
 *
p
){

67  
p
->
nRef
!=0 &&Ö->
ow√r
==
	`GëCuºítThªadId
();

68 
	}
}

70 
	$wöMuãxNŸhñd2
(
sqlôe3_muãx
 *
p
, 
DWORD
 
tid
){

71  
p
->
nRef
==0 ||Ö->
ow√r
!=
tid
;

72 
	}
}

74 
	$wöMuãxNŸhñd
(
sqlôe3_muãx
 *
p
){

75 
DWORD
 
tid
 = 
	`GëCuºítThªadId
();

76  
	`wöMuãxNŸhñd2
(
p
, 
tid
);

77 
	}
}

85 
	$sqlôe3Mem‹yB¨rõr
(){

86 #i‡
	`deföed
(
SQLITE_MEMORY_BARRIER
)

87 
SQLITE_MEMORY_BARRIER
;

88 #ñi‡
	`deföed
(
__GNUC__
)

89 
	`__sync_synchr⁄ize
();

90 #ñi‡!
	`deföed
(
SQLITE_DISABLE_INTRINSIC
) && \

91 
	`deföed
(
_MSC_VER
) && _MSC_VER>=1300

92 
	`_RódWrôeB¨rõr
();

93 #ñi‡
	`deföed
(
Mem‹yB¨rõr
)

94 
	`Mem‹yB¨rõr
();

96 
	}
}

101 
sqlôe3_muãx
 
	gwöMuãx_°©icMuãxes
[] = {

102 
SQLITE3_MUTEX_INITIALIZER
,

103 
SQLITE3_MUTEX_INITIALIZER
,

104 
SQLITE3_MUTEX_INITIALIZER
,

105 
SQLITE3_MUTEX_INITIALIZER
,

106 
SQLITE3_MUTEX_INITIALIZER
,

107 
SQLITE3_MUTEX_INITIALIZER
,

108 
SQLITE3_MUTEX_INITIALIZER
,

109 
SQLITE3_MUTEX_INITIALIZER
,

110 
SQLITE3_MUTEX_INITIALIZER
,

111 
SQLITE3_MUTEX_INITIALIZER
,

112 
SQLITE3_MUTEX_INITIALIZER
,

113 
SQLITE3_MUTEX_INITIALIZER


116 
	gwöMuãx_isInô
 = 0;

117 
	gwöMuãx_isNt
 = -1;

123 
LONG
 
SQLITE_WIN32_VOLATILE
 
	gwöMuãx_lock
 = 0;

125 
sqlôe3_wö32_is_¡
();

126 
sqlôe3_wö32_¶ìp
(
DWORD
 
mûli£c⁄ds
);

128 
	$wöMuãxInô
(){

130 if–
	`I¡îlockedCom∑ªExch™ge
(&
wöMuãx_lock
, 1, 0)==0 ){

131 
i
;

132 
i
=0; i<
	`AºaySize
(
wöMuãx_°©icMuãxes
); i++){

133 #i‡
SQLITE_OS_WINRT


134 
	`InôülizeCrôiˇlSe˘i⁄Ex
(&
wöMuãx_°©icMuãxes
[
i
].
muãx
, 0, 0);

136 
	`InôülizeCrôiˇlSe˘i⁄
(&
wöMuãx_°©icMuãxes
[
i
].
muãx
);

139 
wöMuãx_isInô
 = 1;

143  !
wöMuãx_isInô
 ){

144 
	`sqlôe3_wö32_¶ìp
(1);

147  
SQLITE_OK
;

148 
	}
}

150 
	$wöMuãxEnd
(){

153 if–
	`I¡îlockedCom∑ªExch™ge
(&
wöMuãx_lock
, 0, 1)==1 ){

154 if–
wöMuãx_isInô
==1 ){

155 
i
;

156 
i
=0; i<
	`AºaySize
(
wöMuãx_°©icMuãxes
); i++){

157 
	`DñëeCrôiˇlSe˘i⁄
(&
wöMuãx_°©icMuãxes
[
i
].
muãx
);

159 
wöMuãx_isInô
 = 0;

162  
SQLITE_OK
;

163 
	}
}

213 
sqlôe3_muãx
 *
	$wöMuãxAŒoc
(
iTy≥
){

214 
sqlôe3_muãx
 *
p
;

216  
iTy≥
 ){

217 
SQLITE_MUTEX_FAST
:

218 
SQLITE_MUTEX_RECURSIVE
: {

219 
p
 = 
	`sqlôe3MÆlocZîo
( (*p) );

220 if–
p
 ){

221 
p
->
id
 = 
iTy≥
;

222 #ifde‡
SQLITE_DEBUG


223 #ifde‡
SQLITE_WIN32_MUTEX_TRACE_DYNAMIC


224 
p
->
åa˚
 = 1;

227 #i‡
SQLITE_OS_WINRT


228 
	`InôülizeCrôiˇlSe˘i⁄Ex
(&
p
->
muãx
, 0, 0);

230 
	`InôülizeCrôiˇlSe˘i⁄
(&
p
->
muãx
);

236 #ifde‡
SQLITE_ENABLE_API_ARMOR


237 if–
iTy≥
-2<0 || iTy≥-2>=
	`AºaySize
(
wöMuãx_°©icMuãxes
) ){

238 ()
SQLITE_MISUSE_BKPT
;

242 
p
 = &
wöMuãx_°©icMuãxes
[
iTy≥
-2];

243 
p
->
id
 = 
iTy≥
;

244 #ifde‡
SQLITE_DEBUG


245 #ifde‡
SQLITE_WIN32_MUTEX_TRACE_STATIC


246 
p
->
åa˚
 = 1;

252  
p
;

253 
	}
}

261 
	$wöMuãxFªe
(
sqlôe3_muãx
 *
p
){

262 
	`as£π
–
p
 );

263 
	`as£π
–
p
->
nRef
==0 &&Ö->
ow√r
==0 );

264 if–
p
->
id
==
SQLITE_MUTEX_FAST
 ||Ö->id==
SQLITE_MUTEX_RECURSIVE
 ){

265 
	`DñëeCrôiˇlSe˘i⁄
(&
p
->
muãx
);

266 
	`sqlôe3_‰ì
(
p
);

268 #ifde‡
SQLITE_ENABLE_API_ARMOR


269 ()
SQLITE_MISUSE_BKPT
;

272 
	}
}

285 
	$wöMuãxE¡î
(
sqlôe3_muãx
 *
p
){

286 #i‡
	`deföed
(
SQLITE_DEBUG
Ë|| deföed(
SQLITE_TEST
)

287 
DWORD
 
tid
 = 
	`GëCuºítThªadId
();

289 #ifde‡
SQLITE_DEBUG


290 
	`as£π
–
p
 );

291 
	`as£π
–
p
->
id
==
SQLITE_MUTEX_RECURSIVE
 || 
	`wöMuãxNŸhñd2
’, 
tid
) );

293 
	`as£π
–
p
 );

295 
	`as£π
–
wöMuãx_isInô
==1 );

296 
	`E¡îCrôiˇlSe˘i⁄
(&
p
->
muãx
);

297 #ifde‡
SQLITE_DEBUG


298 
	`as£π
–
p
->
nRef
>0 ||Ö->
ow√r
==0 );

299 
p
->
ow√r
 = 
tid
;

300 
p
->
nRef
++;

301 if–
p
->
åa˚
 ){

302 
	`OSTRACE
(("ENTER-MUTEXÅid=%lu, mutex=%p (%d),ÇRef=%d\n",

303 
tid
, 
p
,Ö->
åa˚
,Ö->
nRef
));

306 
	}
}

308 
	$wöMuãxTry
(
sqlôe3_muãx
 *
p
){

309 #i‡
	`deföed
(
SQLITE_DEBUG
Ë|| deföed(
SQLITE_TEST
)

310 
DWORD
 
tid
 = 
	`GëCuºítThªadId
();

312 
rc
 = 
SQLITE_BUSY
;

313 
	`as£π
–
p
 );

314 
	`as£π
–
p
->
id
==
SQLITE_MUTEX_RECURSIVE
 || 
	`wöMuãxNŸhñd2
’, 
tid
) );

326 #i‡
	`deföed
(
_WIN32_WINNT
) && _WIN32_WINNT >= 0x0400

327 
	`as£π
–
wöMuãx_isInô
==1 );

328 
	`as£π
–
wöMuãx_isNt
>=-1 && winMutex_isNt<=1 );

329 if–
wöMuãx_isNt
<0 ){

330 
wöMuãx_isNt
 = 
	`sqlôe3_wö32_is_¡
();

332 
	`as£π
–
wöMuãx_isNt
==0 || winMutex_isNt==1 );

333 if–
wöMuãx_isNt
 && 
	`TryE¡îCrôiˇlSe˘i⁄
(&
p
->
muãx
) ){

334 #ifde‡
SQLITE_DEBUG


335 
p
->
ow√r
 = 
tid
;

336 
p
->
nRef
++;

338 
rc
 = 
SQLITE_OK
;

341 
	`UNUSED_PARAMETER
(
p
);

343 #ifde‡
SQLITE_DEBUG


344 if–
p
->
åa˚
 ){

345 
	`OSTRACE
(("TRY-MUTEXÅid=%lu, mutex=%p (%d), owner=%lu,ÇRef=%d,Ñc=%s\n",

346 
tid
, 
p
,Ö->
åa˚
,Ö->
ow√r
,Ö->
nRef
, 
	`sqlôe3EºName
(
rc
)));

349  
rc
;

350 
	}
}

358 
	$wöMuãxLóve
(
sqlôe3_muãx
 *
p
){

359 #i‡
	`deföed
(
SQLITE_DEBUG
Ë|| deföed(
SQLITE_TEST
)

360 
DWORD
 
tid
 = 
	`GëCuºítThªadId
();

362 
	`as£π
–
p
 );

363 #ifde‡
SQLITE_DEBUG


364 
	`as£π
–
p
->
nRef
>0 );

365 
	`as£π
–
p
->
ow√r
==
tid
 );

366 
p
->
nRef
--;

367 if–
p
->
nRef
==0 )Ö->
ow√r
 = 0;

368 
	`as£π
–
p
->
nRef
==0 ||Ö->
id
==
SQLITE_MUTEX_RECURSIVE
 );

370 
	`as£π
–
wöMuãx_isInô
==1 );

371 
	`LóveCrôiˇlSe˘i⁄
(&
p
->
muãx
);

372 #ifde‡
SQLITE_DEBUG


373 if–
p
->
åa˚
 ){

374 
	`OSTRACE
(("LEAVE-MUTEXÅid=%lu, mutex=%p (%d),ÇRef=%d\n",

375 
tid
, 
p
,Ö->
åa˚
,Ö->
nRef
));

378 
	}
}

380 
sqlôe3_muãx_mëhods
 c⁄° *
	$sqlôe3DeÁu…Muãx
(){

381 c⁄° 
sqlôe3_muãx_mëhods
 
sMuãx
 = {

382 
wöMuãxInô
,

383 
wöMuãxEnd
,

384 
wöMuãxAŒoc
,

385 
wöMuãxFªe
,

386 
wöMuãxE¡î
,

387 
wöMuãxTry
,

388 
wöMuãxLóve
,

389 #ifde‡
SQLITE_DEBUG


390 
wöMuãxHñd
,

391 
wöMuãxNŸhñd


397  &
sMuãx
;

398 
	}
}

	@notify.c

16 
	~"sqlôeI¡.h
"

17 
	~"båìI¡.h
"

20 #ifde‡
SQLITE_ENABLE_UNLOCK_NOTIFY


31 
	#as£πMuãxHñd
() \

32 
	`as£π
–
	`sqlôe3_muãx_hñd
(
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
)Ë)

	)

40 
sqlôe3
 *
SQLITE_WSD
 
	gsqlôe3BlockedLi°
 = 0;

42 #i‚de‡
NDEBUG


57 
	$checkLi°Pr›îtõs
(
sqlôe3
 *
db
){

58 
sqlôe3
 *
p
;

59 
p
=
sqlôe3BlockedLi°
;Ö;Öı->
pNextBlocked
){

60 
£í
 = 0;

61 
sqlôe3
 *
p2
;

64 
	`as£π
–
p
->
pU∆ockC⁄√˘i⁄
 ||Ö->
pBlockögC⁄√˘i⁄
 );

67 
p2
=
sqlôe3BlockedLi°
;Ö2!=
p
;Ö2ı2->
pNextBlocked
){

68 if–
p2
->
xU∆ockNŸify
==
p
->xU∆ockNŸify ) 
£í
 = 1;

69 
	`as£π
–
p2
->
xU∆ockNŸify
==
p
->xU∆ockNŸify || !
£í
 );

70 
	`as£π
–
db
==0 || 
p
->
pU∆ockC⁄√˘i⁄
!=db );

71 
	`as£π
–
db
==0 || 
p
->
pBlockögC⁄√˘i⁄
!=db );

74 
	}
}

76 
	#checkLi°Pr›îtõs
(
x
)

	)

83 
	$ªmoveFromBlockedLi°
(
sqlôe3
 *
db
){

84 
sqlôe3
 **
µ
;

85 
	`as£πMuãxHñd
();

86 
µ
=&
sqlôe3BlockedLi°
; *µ;Ö∞&(*µ)->
pNextBlocked
){

87 if–*
µ
==
db
 ){

88 *
µ
 = (*µ)->
pNextBlocked
;

92 
	}
}

98 
	$addToBlockedLi°
(
sqlôe3
 *
db
){

99 
sqlôe3
 **
µ
;

100 
	`as£πMuãxHñd
();

102 
µ
=&
sqlôe3BlockedLi°
;

103 *
µ
 && (*µ)->
xU∆ockNŸify
!=
db
->xUnlockNotify;

104 
µ
=&(*µ)->
pNextBlocked


106 
db
->
pNextBlocked
 = *
µ
;

107 *
µ
 = 
db
;

108 
	}
}

113 
	$íãrMuãx
(){

114 
	`sqlôe3_muãx_íãr
(
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
));

115 
	`checkLi°Pr›îtõs
(0);

116 
	}
}

121 
	$ÀaveMuãx
(){

122 
	`as£πMuãxHñd
();

123 
	`checkLi°Pr›îtõs
(0);

124 
	`sqlôe3_muãx_Àave
(
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
));

125 
	}
}

148 
	$sqlôe3_u∆ock_nŸify
(

149 
sqlôe3
 *
db
,

150 (*
xNŸify
)(**, ),

151 *
pArg


153 
rc
 = 
SQLITE_OK
;

155 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

156 
	`íãrMuãx
();

158 if–
xNŸify
==0 ){

159 
	`ªmoveFromBlockedLi°
(
db
);

160 
db
->
pBlockögC⁄√˘i⁄
 = 0;

161 
db
->
pU∆ockC⁄√˘i⁄
 = 0;

162 
db
->
xU∆ockNŸify
 = 0;

163 
db
->
pU∆ockArg
 = 0;

164 }if–0==
db
->
pBlockögC⁄√˘i⁄
 ){

169 
	`xNŸify
(&
pArg
, 1);

171 
sqlôe3
 *
p
;

173 
p
=
db
->
pBlockögC⁄√˘i⁄
;Ö &&Ö!=db;Öı->
pU∆ockC⁄√˘i⁄
){}

174 if–
p
 ){

175 
rc
 = 
SQLITE_LOCKED
;

177 
db
->
pU∆ockC⁄√˘i⁄
 = db->
pBlockögC⁄√˘i⁄
;

178 
db
->
xU∆ockNŸify
 = 
xNŸify
;

179 
db
->
pU∆ockArg
 = 
pArg
;

180 
	`ªmoveFromBlockedLi°
(
db
);

181 
	`addToBlockedLi°
(
db
);

185 
	`ÀaveMuãx
();

186 
	`as£π
–!
db
->
mÆlocFaûed
 );

187 
	`sqlôe3Eº‹WôhMsg
(
db
, 
rc
, (rc?"database is deadlocked":0));

188 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

189  
rc
;

190 
	}
}

198 
	$sqlôe3C⁄√˘i⁄Blocked
(
sqlôe3
 *
db
, sqlôe3 *
pBlockî
){

199 
	`íãrMuãx
();

200 if–
db
->
pBlockögC⁄√˘i⁄
==0 && db->
pU∆ockC⁄√˘i⁄
==0 ){

201 
	`addToBlockedLi°
(
db
);

203 
db
->
pBlockögC⁄√˘i⁄
 = 
pBlockî
;

204 
	`ÀaveMuãx
();

205 
	}
}

226 
	$sqlôe3C⁄√˘i⁄U∆ocked
(
sqlôe3
 *
db
){

227 (*
xU∆ockNŸify
)(**, ) = 0;

228 
nArg
 = 0;

229 
sqlôe3
 **
µ
;

230 **
aArg
;

231 **
aDyn
 = 0;

232 *
aSètic
[16];

234 
aArg
 = 
aSètic
;

235 
	`íãrMuãx
();

238 
µ
=&
sqlôe3BlockedLi°
; *pp; ){

239 
sqlôe3
 *
p
 = *
µ
;

242 if–
p
->
pBlockögC⁄√˘i⁄
==
db
 ){

243 
p
->
pBlockögC⁄√˘i⁄
 = 0;

247 if–
p
->
pU∆ockC⁄√˘i⁄
==
db
 ){

248 
	`as£π
–
p
->
xU∆ockNŸify
 );

249 if–
p
->
xU∆ockNŸify
!=xU∆ockNŸify && 
nArg
!=0 ){

250 
	`xU∆ockNŸify
(
aArg
, 
nArg
);

251 
nArg
 = 0;

254 
	`sqlôe3BegöBíignMÆloc
();

255 
	`as£π
–
aArg
==
aDyn
 || (aDyn==0 &&áArg==
aSètic
) );

256 
	`as£π
–
nArg
<=()
	`AºaySize
(
aSètic
Ë|| 
aArg
==
aDyn
 );

257 if–(!
aDyn
 && 
nArg
==()
	`AºaySize
(
aSètic
))

258 || (
aDyn
 && 
nArg
==()(
	`sqlôe3MÆlocSize
(aDyn)/(*)))

261 **
pNew
 = (**)
	`sqlôe3MÆloc
(
nArg
*(*)*2);

262 if–
pNew
 ){

263 
	`mem˝y
(
pNew
, 
aArg
, 
nArg
*(*));

264 
	`sqlôe3_‰ì
(
aDyn
);

265 
aDyn
 = 
aArg
 = 
pNew
;

291 
	`xU∆ockNŸify
(
aArg
, 
nArg
);

292 
nArg
 = 0;

295 
	`sqlôe3EndBíignMÆloc
();

297 
aArg
[
nArg
++] = 
p
->
pU∆ockArg
;

298 
xU∆ockNŸify
 = 
p
->xUnlockNotify;

299 
p
->
pU∆ockC⁄√˘i⁄
 = 0;

300 
p
->
xU∆ockNŸify
 = 0;

301 
p
->
pU∆ockArg
 = 0;

305 if–
p
->
pBlockögC⁄√˘i⁄
==0 &&Ö->
pU∆ockC⁄√˘i⁄
==0 ){

307 *
µ
 = 
p
->
pNextBlocked
;

308 
p
->
pNextBlocked
 = 0;

310 
µ
 = &
p
->
pNextBlocked
;

314 if–
nArg
!=0 ){

315 
	`xU∆ockNŸify
(
aArg
, 
nArg
);

317 
	`sqlôe3_‰ì
(
aDyn
);

318 
	`ÀaveMuãx
();

319 
	}
}

325 
	$sqlôe3C⁄√˘i⁄Clo£d
(
sqlôe3
 *
db
){

326 
	`sqlôe3C⁄√˘i⁄U∆ocked
(
db
);

327 
	`íãrMuãx
();

328 
	`ªmoveFromBlockedLi°
(
db
);

329 
	`checkLi°Pr›îtõs
(
db
);

330 
	`ÀaveMuãx
();

331 
	}
}

	@os.c

16 
	~"sqlôeI¡.h
"

23 #i‡
deföed
(
SQLITE_TEST
)

24 
	gsqlôe3_io_îr‹_hô
 = 0;

25 
	gsqlôe3_io_îr‹_h¨dhô
 = 0;

26 
	gsqlôe3_io_îr‹_≥ndög
 = 0;

27 
	gsqlôe3_io_îr‹_≥rsi°
 = 0;

28 
	gsqlôe3_io_îr‹_bíign
 = 0;

29 
	gsqlôe3_diskfuŒ_≥ndög
 = 0;

30 
	gsqlôe3_diskfuŒ
 = 0;

36 #i‡
deföed
(
SQLITE_TEST
)

37 
	gsqlôe3_›í_fûe_cou¡
 = 0;

64 #i‡
deföed
(
SQLITE_TEST
)

65 
	gsqlôe3_memdebug_vfs_oom_ã°
 = 1;

66 
	#DO_OS_MALLOC_TEST
(
x
) \

67 i‡(
sqlôe3_memdebug_vfs_oom_ã°
 && (!
x
 || !
	`sqlôe3Jou∫ÆIsInMem‹y
(x))) { \

68 *
pT°AŒoc
 = 
	`sqlôe3MÆloc
(10); \

69 i‡(!
pT°AŒoc
Ë 
SQLITE_IOERR_NOMEM_BKPT
; \

70 
	`sqlôe3_‰ì
(
pT°AŒoc
); \

71 }

	)

73 
	#DO_OS_MALLOC_TEST
(
x
)

	)

82 
	$sqlôe3OsClo£
(
sqlôe3_fûe
 *
pId
){

83 if–
pId
->
pMëhods
 ){

84 
pId
->
pMëhods
->
	`xClo£
(pId);

85 
pId
->
pMëhods
 = 0;

87 
	}
}

88 
	$sqlôe3OsRód
(
sqlôe3_fûe
 *
id
, *
pBuf
, 
amt
, 
i64
 
off£t
){

89 
	`DO_OS_MALLOC_TEST
(
id
);

90  
id
->
pMëhods
->
	`xRód
(id, 
pBuf
, 
amt
, 
off£t
);

91 
	}
}

92 
	$sqlôe3OsWrôe
(
sqlôe3_fûe
 *
id
, c⁄° *
pBuf
, 
amt
, 
i64
 
off£t
){

93 
	`DO_OS_MALLOC_TEST
(
id
);

94  
id
->
pMëhods
->
	`xWrôe
(id, 
pBuf
, 
amt
, 
off£t
);

95 
	}
}

96 
	$sqlôe3OsTrunˇã
(
sqlôe3_fûe
 *
id
, 
i64
 
size
){

97  
id
->
pMëhods
->
	`xTrunˇã
(id, 
size
);

98 
	}
}

99 
	$sqlôe3OsSync
(
sqlôe3_fûe
 *
id
, 
Êags
){

100 
	`DO_OS_MALLOC_TEST
(
id
);

101  
id
->
pMëhods
->
	`xSync
(id, 
Êags
);

102 
	}
}

103 
	$sqlôe3OsFûeSize
(
sqlôe3_fûe
 *
id
, 
i64
 *
pSize
){

104 
	`DO_OS_MALLOC_TEST
(
id
);

105  
id
->
pMëhods
->
	`xFûeSize
(id, 
pSize
);

106 
	}
}

107 
	$sqlôe3OsLock
(
sqlôe3_fûe
 *
id
, 
lockTy≥
){

108 
	`DO_OS_MALLOC_TEST
(
id
);

109  
id
->
pMëhods
->
	`xLock
(id, 
lockTy≥
);

110 
	}
}

111 
	$sqlôe3OsU∆ock
(
sqlôe3_fûe
 *
id
, 
lockTy≥
){

112  
id
->
pMëhods
->
	`xU∆ock
(id, 
lockTy≥
);

113 
	}
}

114 
	$sqlôe3OsCheckRe£rvedLock
(
sqlôe3_fûe
 *
id
, *
pResOut
){

115 
	`DO_OS_MALLOC_TEST
(
id
);

116  
id
->
pMëhods
->
	`xCheckRe£rvedLock
(id, 
pResOut
);

117 
	}
}

127 
	$sqlôe3OsFûeC⁄åﬁ
(
sqlôe3_fûe
 *
id
, 
›
, *
pArg
){

128 #ifde‡
SQLITE_TEST


129 if–
›
!=
SQLITE_FCNTL_COMMIT_PHASETWO
 ){

140 
	`DO_OS_MALLOC_TEST
(
id
);

143  
id
->
pMëhods
->
	`xFûeC⁄åﬁ
(id, 
›
, 
pArg
);

144 
	}
}

145 
	$sqlôe3OsFûeC⁄åﬁHöt
(
sqlôe3_fûe
 *
id
, 
›
, *
pArg
){

146 ()
id
->
pMëhods
->
	`xFûeC⁄åﬁ
(id, 
›
, 
pArg
);

147 
	}
}

149 
	$sqlôe3OsSe˘‹Size
(
sqlôe3_fûe
 *
id
){

150 (*
xSe˘‹Size
)(
sqlôe3_fûe
*Ë
id
->
pMëhods
->xSectorSize;

151  (
xSe˘‹Size
 ? 
	`xSe˘‹Size
(
id
Ë: 
SQLITE_DEFAULT_SECTOR_SIZE
);

152 
	}
}

153 
	$sqlôe3OsDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
 *
id
){

154  
id
->
pMëhods
->
	`xDevi˚Ch¨a˘îi°ics
(id);

155 
	}
}

156 
	$sqlôe3OsShmLock
(
sqlôe3_fûe
 *
id
, 
off£t
, 
n
, 
Êags
){

157  
id
->
pMëhods
->
	`xShmLock
(id, 
off£t
, 
n
, 
Êags
);

158 
	}
}

159 
	$sqlôe3OsShmB¨rõr
(
sqlôe3_fûe
 *
id
){

160 
id
->
pMëhods
->
	`xShmB¨rõr
(id);

161 
	}
}

162 
	$sqlôe3OsShmUnm≠
(
sqlôe3_fûe
 *
id
, 
dñëeFœg
){

163  
id
->
pMëhods
->
	`xShmUnm≠
(id, 
dñëeFœg
);

164 
	}
}

165 
	$sqlôe3OsShmM≠
(

166 
sqlôe3_fûe
 *
id
,

167 
iPage
,

168 
pgsz
,

169 
bExãnd
,

170 vﬁ©ûê**
µ


172 
	`DO_OS_MALLOC_TEST
(
id
);

173  
id
->
pMëhods
->
	`xShmM≠
(id, 
iPage
, 
pgsz
, 
bExãnd
, 
µ
);

174 
	}
}

176 #i‡
SQLITE_MAX_MMAP_SIZE
>0

178 
	$sqlôe3OsFëch
(
sqlôe3_fûe
 *
id
, 
i64
 
iOff
, 
iAmt
, **
µ
){

179 
	`DO_OS_MALLOC_TEST
(
id
);

180  
id
->
pMëhods
->
	`xFëch
(id, 
iOff
, 
iAmt
, 
µ
);

181 
	}
}

182 
	$sqlôe3OsUn„tch
(
sqlôe3_fûe
 *
id
, 
i64
 
iOff
, *
p
){

183  
id
->
pMëhods
->
	`xUn„tch
(id, 
iOff
, 
p
);

184 
	}
}

187 
	$sqlôe3OsFëch
(
sqlôe3_fûe
 *
id
, 
i64
 
iOff
, 
iAmt
, **
µ
){

188 *
µ
 = 0;

189  
SQLITE_OK
;

190 
	}
}

191 
	$sqlôe3OsUn„tch
(
sqlôe3_fûe
 *
id
, 
i64
 
iOff
, *
p
){

192  
SQLITE_OK
;

193 
	}
}

200 
	$sqlôe3OsO≥n
(

201 
sqlôe3_vfs
 *
pVfs
,

202 c⁄° *
zP©h
,

203 
sqlôe3_fûe
 *
pFûe
,

204 
Êags
,

205 *
pFœgsOut


207 
rc
;

208 
	`DO_OS_MALLOC_TEST
(0);

213 
rc
 = 
pVfs
->
	`xO≥n
’Vfs, 
zP©h
, 
pFûe
, 
Êags
 & 0x87f7f, 
pFœgsOut
);

214 
	`as£π
–
rc
==
SQLITE_OK
 || 
pFûe
->
pMëhods
==0 );

215  
rc
;

216 
	}
}

217 
	$sqlôe3OsDñëe
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zP©h
, 
dúSync
){

218 
	`DO_OS_MALLOC_TEST
(0);

219 
	`as£π
–
dúSync
==0 || dirSync==1 );

220  
pVfs
->
	`xDñëe
’Vfs, 
zP©h
, 
dúSync
);

221 
	}
}

222 
	$sqlôe3OsAc˚ss
(

223 
sqlôe3_vfs
 *
pVfs
,

224 c⁄° *
zP©h
,

225 
Êags
,

226 *
pResOut


228 
	`DO_OS_MALLOC_TEST
(0);

229  
pVfs
->
	`xAc˚ss
’Vfs, 
zP©h
, 
Êags
, 
pResOut
);

230 
	}
}

231 
	$sqlôe3OsFuŒP©h«me
(

232 
sqlôe3_vfs
 *
pVfs
,

233 c⁄° *
zP©h
,

234 
nP©hOut
,

235 *
zP©hOut


237 
	`DO_OS_MALLOC_TEST
(0);

238 
zP©hOut
[0] = 0;

239  
pVfs
->
	`xFuŒP©h«me
’Vfs, 
zP©h
, 
nP©hOut
, 
zP©hOut
);

240 
	}
}

241 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


242 *
	$sqlôe3OsDlO≥n
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zP©h
){

243  
pVfs
->
	`xDlO≥n
’Vfs, 
zP©h
);

244 
	}
}

245 
	$sqlôe3OsDlEº‹
(
sqlôe3_vfs
 *
pVfs
, 
nByã
, *
zBufOut
){

246 
pVfs
->
	`xDlEº‹
’Vfs, 
nByã
, 
zBufOut
);

247 
	}
}

248 (*
	$sqlôe3OsDlSym
(
sqlôe3_vfs
 *
pVfs
, *
pHdÀ
, c⁄° *
zSym
))(){

249  
pVfs
->
	`xDlSym
’Vfs, 
pHdÀ
, 
zSym
);

250 
	}
}

251 
	$sqlôe3OsDlClo£
(
sqlôe3_vfs
 *
pVfs
, *
pH™dÀ
){

252 
pVfs
->
	`xDlClo£
’Vfs, 
pH™dÀ
);

253 
	}
}

255 
	$sqlôe3OsR™dom√ss
(
sqlôe3_vfs
 *
pVfs
, 
nByã
, *
zBufOut
){

256  
pVfs
->
	`xR™dom√ss
’Vfs, 
nByã
, 
zBufOut
);

257 
	}
}

258 
	$sqlôe3OsSÀï
(
sqlôe3_vfs
 *
pVfs
, 
nMi¸o
){

259  
pVfs
->
	`xSÀï
’Vfs, 
nMi¸o
);

260 
	}
}

261 
	$sqlôe3OsGëLa°Eº‹
(
sqlôe3_vfs
 *
pVfs
){

262  
pVfs
->
xGëLa°Eº‹
 ?ÖVfs->
	`xGëLa°Eº‹
(pVfs, 0, 0) : 0;

263 
	}
}

264 
	$sqlôe3OsCuºítTimeI¡64
(
sqlôe3_vfs
 *
pVfs
, 
sqlôe3_öt64
 *
pTimeOut
){

265 
rc
;

272 if–
pVfs
->
iVîsi⁄
>=2 &&ÖVfs->
xCuºítTimeI¡64
 ){

273 
rc
 = 
pVfs
->
	`xCuºítTimeI¡64
’Vfs, 
pTimeOut
);

275 
r
;

276 
rc
 = 
pVfs
->
	`xCuºítTime
’Vfs, &
r
);

277 *
pTimeOut
 = (
sqlôe3_öt64
)(
r
*86400000.0);

279  
rc
;

280 
	}
}

282 
	$sqlôe3OsO≥nMÆloc
(

283 
sqlôe3_vfs
 *
pVfs
,

284 c⁄° *
zFûe
,

285 
sqlôe3_fûe
 **
µFûe
,

286 
Êags
,

287 *
pOutFœgs


289 
rc
;

290 
sqlôe3_fûe
 *
pFûe
;

291 
pFûe
 = (
sqlôe3_fûe
 *)
	`sqlôe3MÆlocZîo
(
pVfs
->
szOsFûe
);

292 if–
pFûe
 ){

293 
rc
 = 
	`sqlôe3OsO≥n
(
pVfs
, 
zFûe
, 
pFûe
, 
Êags
, 
pOutFœgs
);

294 if–
rc
!=
SQLITE_OK
 ){

295 
	`sqlôe3_‰ì
(
pFûe
);

297 *
µFûe
 = 
pFûe
;

300 
rc
 = 
SQLITE_NOMEM_BKPT
;

302  
rc
;

303 
	}
}

304 
	$sqlôe3OsClo£Fªe
(
sqlôe3_fûe
 *
pFûe
){

305 
	`as£π
–
pFûe
 );

306 
	`sqlôe3OsClo£
(
pFûe
);

307 
	`sqlôe3_‰ì
(
pFûe
);

308 
	}
}

316 
	$sqlôe3OsInô
(){

317 *
p
 = 
	`sqlôe3_mÆloc
(10);

318 if–
p
==0 )  
SQLITE_NOMEM_BKPT
;

319 
	`sqlôe3_‰ì
(
p
);

320  
	`sqlôe3_os_öô
();

321 
	}
}

326 
sqlôe3_vfs
 * 
SQLITE_WSD
 
	gvfsLi°
 = 0;

327 
	#vfsLi°
 
	`GLOBAL
(
sqlôe3_vfs
 *, 
vfsLi°
)

	)

333 
sqlôe3_vfs
 *
	$sqlôe3_vfs_föd
(c⁄° *
zVfs
){

334 
sqlôe3_vfs
 *
pVfs
 = 0;

335 #i‡
SQLITE_THREADSAFE


336 
sqlôe3_muãx
 *
muãx
;

338 #i‚de‡
SQLITE_OMIT_AUTOINIT


339 
rc
 = 
	`sqlôe3_öôülize
();

340 if–
rc
 )  0;

342 #i‡
SQLITE_THREADSAFE


343 
muãx
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
);

345 
	`sqlôe3_muãx_íãr
(
muãx
);

346 
pVfs
 = 
vfsLi°
;ÖVfs;ÖVfsıVfs->
pNext
){

347 if–
zVfs
==0 ) ;

348 if–
	`°rcmp
(
zVfs
, 
pVfs
->
zName
)==0 ) ;

350 
	`sqlôe3_muãx_Àave
(
muãx
);

351  
pVfs
;

352 
	}
}

357 
	$vfsU∆ök
(
sqlôe3_vfs
 *
pVfs
){

358 
	`as£π
–
	`sqlôe3_muãx_hñd
(
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
)) );

359 if–
pVfs
==0 ){

361 }if–
vfsLi°
==
pVfs
 ){

362 
vfsLi°
 = 
pVfs
->
pNext
;

363 }if–
vfsLi°
 ){

364 
sqlôe3_vfs
 *
p
 = 
vfsLi°
;

365  
p
->
pNext
 &&Ö->pNext!=
pVfs
 ){

366 
p
 =Ö->
pNext
;

368 if–
p
->
pNext
==
pVfs
 ){

369 
p
->
pNext
 = 
pVfs
->pNext;

372 
	}
}

379 
	$sqlôe3_vfs_ªgi°î
(
sqlôe3_vfs
 *
pVfs
, 
makeDÊt
){

380 
	`MUTEX_LOGIC
(
sqlôe3_muãx
 *
muãx
;)

381 #i‚de‡
SQLITE_OMIT_AUTOINIT


382 
rc
 = 
	`sqlôe3_öôülize
();

383 if–
rc
 ) Ñc;

385 #ifde‡
SQLITE_ENABLE_API_ARMOR


386 if–
pVfs
==0 )  
SQLITE_MISUSE_BKPT
;

389 
	`MUTEX_LOGIC
–
muãx
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
); )

390 
	`sqlôe3_muãx_íãr
(
muãx
);

391 
	`vfsU∆ök
(
pVfs
);

392 if–
makeDÊt
 || 
vfsLi°
==0 ){

393 
pVfs
->
pNext
 = 
vfsLi°
;

394 
vfsLi°
 = 
pVfs
;

396 
pVfs
->
pNext
 = 
vfsLi°
->pNext;

397 
vfsLi°
->
pNext
 = 
pVfs
;

399 
	`as£π
(
vfsLi°
);

400 
	`sqlôe3_muãx_Àave
(
muãx
);

401  
SQLITE_OK
;

402 
	}
}

407 
	$sqlôe3_vfs_uƒegi°î
(
sqlôe3_vfs
 *
pVfs
){

408 #i‡
SQLITE_THREADSAFE


409 
sqlôe3_muãx
 *
muãx
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
);

411 
	`sqlôe3_muãx_íãr
(
muãx
);

412 
	`vfsU∆ök
(
pVfs
);

413 
	`sqlôe3_muãx_Àave
(
muãx
);

414  
SQLITE_OK
;

415 
	}
}

	@os.h

20 #i‚de‡
_SQLITE_OS_H_


21 
	#_SQLITE_OS_H_


	)

27 
	~"os_£tup.h
"

32 #i‚de‡
SET_FULLSYNC


33 
	#SET_FULLSYNC
(
x
,
y
)

	)

39 #i‚de‡
SQLITE_DEFAULT_SECTOR_SIZE


40 
	#SQLITE_DEFAULT_SECTOR_SIZE
 4096

	)

64 #i‚de‡
SQLITE_TEMP_FILE_PREFIX


65 
	#SQLITE_TEMP_FILE_PREFIX
 "ëûqs_"

	)

85 
	#NO_LOCK
 0

	)

86 
	#SHARED_LOCK
 1

	)

87 
	#RESERVED_LOCK
 2

	)

88 
	#PENDING_LOCK
 3

	)

89 
	#EXCLUSIVE_LOCK
 4

	)

146 #ifde‡
SQLITE_OMIT_WSD


147 
	#PENDING_BYTE
 (0x40000000)

	)

149 
	#PENDING_BYTE
 
sqlôe3PídögByã


	)

151 
	#RESERVED_BYTE
 (
PENDING_BYTE
+1)

	)

152 
	#SHARED_FIRST
 (
PENDING_BYTE
+2)

	)

153 
	#SHARED_SIZE
 510

	)

158 
sqlôe3OsInô
();

163 
sqlôe3OsClo£
(
sqlôe3_fûe
*);

164 
sqlôe3OsRód
(
sqlôe3_fûe
*, *, 
amt
, 
i64
 
off£t
);

165 
sqlôe3OsWrôe
(
sqlôe3_fûe
*, c⁄° *, 
amt
, 
i64
 
off£t
);

166 
sqlôe3OsTrunˇã
(
sqlôe3_fûe
*, 
i64
 
size
);

167 
sqlôe3OsSync
(
sqlôe3_fûe
*, );

168 
sqlôe3OsFûeSize
(
sqlôe3_fûe
*, 
i64
 *
pSize
);

169 
sqlôe3OsLock
(
sqlôe3_fûe
*, );

170 
sqlôe3OsU∆ock
(
sqlôe3_fûe
*, );

171 
sqlôe3OsCheckRe£rvedLock
(
sqlôe3_fûe
 *
id
, *
pResOut
);

172 
sqlôe3OsFûeC⁄åﬁ
(
sqlôe3_fûe
*,,*);

173 
sqlôe3OsFûeC⁄åﬁHöt
(
sqlôe3_fûe
*,,*);

174 
	#SQLITE_FCNTL_DB_UNCHANGED
 0xˇ093Á0

	)

175 
sqlôe3OsSe˘‹Size
(
sqlôe3_fûe
 *
id
);

176 
sqlôe3OsDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
 *
id
);

177 
sqlôe3OsShmM≠
(
sqlôe3_fûe
 *,,,,volatile **);

178 
sqlôe3OsShmLock
(
sqlôe3_fûe
 *
id
, , , );

179 
sqlôe3OsShmB¨rõr
(
sqlôe3_fûe
 *
id
);

180 
sqlôe3OsShmUnm≠
(
sqlôe3_fûe
 *
id
, );

181 
sqlôe3OsFëch
(
sqlôe3_fûe
 *
id
, 
i64
, , **);

182 
sqlôe3OsUn„tch
(
sqlôe3_fûe
 *, 
i64
, *);

188 
sqlôe3OsO≥n
(
sqlôe3_vfs
 *, c⁄° *, 
sqlôe3_fûe
*, , *);

189 
sqlôe3OsDñëe
(
sqlôe3_vfs
 *, const *, );

190 
sqlôe3OsAc˚ss
(
sqlôe3_vfs
 *, c⁄° *, , *
pResOut
);

191 
sqlôe3OsFuŒP©h«me
(
sqlôe3_vfs
 *, const *, , *);

192 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


193 *
sqlôe3OsDlO≥n
(
sqlôe3_vfs
 *, const *);

194 
sqlôe3OsDlEº‹
(
sqlôe3_vfs
 *, , *);

195 (*
	$sqlôe3OsDlSym
(
sqlôe3_vfs
 *, *, const *))();

196 
	`sqlôe3OsDlClo£
(
sqlôe3_vfs
 *, *);

198 
	`sqlôe3OsR™dom√ss
(
sqlôe3_vfs
 *, , *);

199 
	`sqlôe3OsSÀï
(
sqlôe3_vfs
 *, );

200 
	`sqlôe3OsGëLa°Eº‹
(
sqlôe3_vfs
*);

201 
	`sqlôe3OsCuºítTimeI¡64
(
sqlôe3_vfs
 *, 
sqlôe3_öt64
*);

207 
	`sqlôe3OsO≥nMÆloc
(
sqlôe3_vfs
 *, c⁄° *, 
sqlôe3_fûe
 **, ,*);

208 
	`sqlôe3OsClo£Fªe
(
sqlôe3_fûe
 *);

	@os_common.h

20 #i‚de‡
_OS_COMMON_H_


21 
	#_OS_COMMON_H_


	)

28 #ifde‡
MEMORY_DEBUG


36 #ifde‡
SQLITE_PERFORMANCE_TRACE


42 
	~"hwtime.h
"

44 
sqlôe_uöt64
 
	gg_°¨t
;

45 
sqlôe_uöt64
 
	gg_ñ≠£d
;

46 
	#TIMER_START
 
g_°¨t
=
	`sqlôe3Hwtime
()

	)

47 
	#TIMER_END
 
g_ñ≠£d
=
	`sqlôe3Hwtime
()-
g_°¨t


	)

48 
	#TIMER_ELAPSED
 
g_ñ≠£d


	)

50 
	#TIMER_START


	)

51 
	#TIMER_END


	)

52 
	#TIMER_ELAPSED
 ((
sqlôe_uöt64
)0)

	)

60 #i‡
deföed
(
SQLITE_TEST
)

61 
sqlôe3_io_îr‹_hô
;

62 
sqlôe3_io_îr‹_h¨dhô
;

63 
sqlôe3_io_îr‹_≥ndög
;

64 
sqlôe3_io_îr‹_≥rsi°
;

65 
sqlôe3_io_îr‹_bíign
;

66 
sqlôe3_diskfuŒ_≥ndög
;

67 
sqlôe3_diskfuŒ
;

68 
	#SimuœãIOEº‹Bíign
(
X
Ë
sqlôe3_io_îr‹_bíign
=(X)

	)

69 
	#SimuœãIOEº‹
(
CODE
) \

70 if–(
sqlôe3_io_îr‹_≥rsi°
 && 
sqlôe3_io_îr‹_hô
) \

71 || 
sqlôe3_io_îr‹_≥ndög
-- == 1 ) \

72 { 
	`loˇl_i€º
(); 
CODE
; }

	)

73 
	$loˇl_i€º
(){

74 
	`IOTRACE
(("IOERR\n"));

75 
sqlôe3_io_îr‹_hô
++;

76 if–!
sqlôe3_io_îr‹_bíign
 ) 
sqlôe3_io_îr‹_h¨dhô
++;

77 
	}
}

78 
	#SimuœãDiskfuŒEº‹
(
CODE
) \

79 if–
sqlôe3_diskfuŒ_≥ndög
 ){ \

80 if–
sqlôe3_diskfuŒ_≥ndög
 == 1 ){ \

81 
	`loˇl_i€º
(); \

82 
sqlôe3_diskfuŒ
 = 1; \

83 
sqlôe3_io_îr‹_hô
 = 1; \

84 
CODE
; \

86 
sqlôe3_diskfuŒ_≥ndög
--; \

88 }

	)

90 
	#SimuœãIOEº‹Bíign
(
X
)

	)

91 
	#SimuœãIOEº‹
(
A
)

	)

92 
	#SimuœãDiskfuŒEº‹
(
A
)

	)

98 #i‡
deföed
(
SQLITE_TEST
)

99 
sqlôe3_›í_fûe_cou¡
;

100 
	#O≥nCou¡î
(
X
Ë
sqlôe3_›í_fûe_cou¡
+=(X)

	)

102 
	#O≥nCou¡î
(
X
)

	)

	@os_setup.h

16 #i‚de‡
SQLITE_OS_SETUP_H


17 
	#SQLITE_OS_SETUP_H


	)

27 #i‡
deföed
(
SQLITE_OS_OTHER
)

28 #i‡
SQLITE_OS_OTHER
==1

29 #unde‡
SQLITE_OS_UNIX


30 
	#SQLITE_OS_UNIX
 0

	)

31 #unde‡
SQLITE_OS_WIN


32 
	#SQLITE_OS_WIN
 0

	)

34 #unde‡
SQLITE_OS_OTHER


37 #i‡!
deföed
(
SQLITE_OS_UNIX
Ë&& !deföed(
SQLITE_OS_OTHER
)

38 
	#SQLITE_OS_OTHER
 0

	)

39 #i‚de‡
SQLITE_OS_WIN


40 #i‡
deföed
(
_WIN32
Ë|| deföed(
WIN32
Ë|| deföed(
__CYGWIN__
) || \

41 
deföed
(
__MINGW32__
Ë|| 
	$deföed
(
__BORLANDC__
)

42 
	#SQLITE_OS_WIN
 1

	)

43 
	#SQLITE_OS_UNIX
 0

	)

45 
	#SQLITE_OS_WIN
 0

	)

46 
	#SQLITE_OS_UNIX
 1

	)

49 
	#SQLITE_OS_UNIX
 0

	)

52 #i‚de‡
SQLITE_OS_WIN


53 
	#SQLITE_OS_WIN
 0

	)

	@os_unix.c

46 
	~"sqlôeI¡.h
"

47 #i‡
SQLITE_OS_UNIX


66 #i‡!
deföed
(
SQLITE_ENABLE_LOCKING_STYLE
)

67 #i‡
deföed
(
__APPLE__
)

68 
	#SQLITE_ENABLE_LOCKING_STYLE
 1

	)

70 
	#SQLITE_ENABLE_LOCKING_STYLE
 0

	)

75 #i‡
deföed
(
__APPLE__
)

76 
	#HAVE_PREAD
 1

	)

77 
	#HAVE_PWRITE
 1

	)

79 #i‡
deföed
(
HAVE_PREAD64
Ë&& deföed(
HAVE_PWRITE64
)

80 #unde‡
USE_PREAD


81 
	#USE_PREAD64
 1

	)

82 #ñi‡
deföed
(
HAVE_PREAD
Ë&& deföed(
HAVE_PWRITE
)

83 #unde‡
USE_PREAD64


84 
	#USE_PREAD
 1

	)

90 
	~<sys/ty≥s.h
>

91 
	~<sys/°©.h
>

92 
	~<f˙é.h
>

93 
	~<uni°d.h
>

94 
	~<time.h
>

95 
	~<sys/time.h
>

96 
	~<î∫o.h
>

97 #i‡!
deföed
(
SQLITE_OMIT_WAL
Ë|| 
SQLITE_MAX_MMAP_SIZE
>0

98 
	~<sys/mm™.h
>

101 #i‡
SQLITE_ENABLE_LOCKING_STYLE


102 
	~<sys/io˘l.h
>

103 
	~<sys/fûe.h
>

104 
	~<sys/∑øm.h
>

107 #i‡
deföed
(
__APPLE__
Ë&& ((
__MAC_OS_X_VERSION_MIN_REQUIRED
 > 1050) || \

108 (
	g__IPHONE_OS_VERSION_MIN_REQUIRED
 > 2000))

109 #i‡(!
deföed
(
TARGET_OS_EMBEDDED
) || (TARGET_OS_EMBEDDED==0)) \

110 && (!
deföed
(
TARGET_IPHONE_SIMULATOR
Ë|| (
	gTARGET_IPHONE_SIMULATOR
==0))

111 
	#HAVE_GETHOSTUUID
 1

	)

118 #i‡
OS_VXWORKS


119 
	~<sys/io˘l.h
>

120 
	~<£m≠h‹e.h
>

121 
	~<limôs.h
>

124 #i‡
deföed
(
__APPLE__
Ë|| 
SQLITE_ENABLE_LOCKING_STYLE


125 
	~<sys/mou¡.h
>

128 #ifde‡
HAVE_UTIME


129 
	~<utime.h
>

135 
	#SQLITE_FSFLAGS_IS_MSDOS
 0x1

	)

141 #i‡
SQLITE_THREADSAFE


142 
	~<±hªad.h
>

143 
	#SQLITE_UNIX_THREADS
 1

	)

149 #i‚de‡
SQLITE_DEFAULT_FILE_PERMISSIONS


150 
	#SQLITE_DEFAULT_FILE_PERMISSIONS
 0644

	)

156 #i‚de‡
SQLITE_DEFAULT_PROXYDIR_PERMISSIONS


157 
	#SQLITE_DEFAULT_PROXYDIR_PERMISSIONS
 0755

	)

163 
	#MAX_PATHNAME
 512

	)

168 
	#SQLITE_MAX_SYMLINKS
 100

	)

172 
	#osGëpid
(
X
Ë(
pid_t
)
	`gëpid
()

	)

178 
	#IS_LOCK_ERROR
(
x
Ë((x !
SQLITE_OK
Ë&& (x !
SQLITE_BUSY
))

	)

181 
unixShm
 
	tunixShm
;

182 
unixShmNode
 
	tunixShmNode
;

183 
unixInodeInfo
 
	tunixInodeInfo
;

184 
UnixUnu£dFd
 
	tUnixUnu£dFd
;

192 
	sUnixUnu£dFd
 {

193 
	mfd
;

194 
	mÊags
;

195 
UnixUnu£dFd
 *
	mpNext
;

202 
unixFûe
 
	tunixFûe
;

203 
	sunixFûe
 {

204 
sqlôe3_io_mëhods
 c⁄° *
	mpMëhod
;

205 
sqlôe3_vfs
 *
	mpVfs
;

206 
unixInodeInfo
 *
	mpInode
;

207 
	mh
;

208 
	meFûeLock
;

209 
	m˘æFœgs
;

210 
	mœ°Eºno
;

211 *
	mlockögC⁄ãxt
;

212 
UnixUnu£dFd
 *
	mpUnu£d
;

213 c⁄° *
	mzP©h
;

214 
unixShm
 *
	mpShm
;

215 
	mszChunk
;

216 #i‡
SQLITE_MAX_MMAP_SIZE
>0

217 
	mnFëchOut
;

218 
sqlôe3_öt64
 
	mmm≠Size
;

219 
sqlôe3_öt64
 
	mmm≠SizeA˘uÆ
;

220 
sqlôe3_öt64
 
	mmm≠SizeMax
;

221 *
	mpM≠Regi⁄
;

223 #ifde‡
__QNXNTO__


224 
	m£˘‹Size
;

225 
	mdevi˚Ch¨a˘îi°ics
;

227 #i‡
SQLITE_ENABLE_LOCKING_STYLE


228 
	m›íFœgs
;

230 #i‡
SQLITE_ENABLE_LOCKING_STYLE
 || 
deföed
(
__APPLE__
)

231 
	mfsFœgs
;

233 #i‡
OS_VXWORKS


234 
vxw‹ksFûeId
 *
	mpId
;

236 #ifde‡
SQLITE_DEBUG


244 
	må™sC¡rChng
;

245 
	mdbUpd©e
;

246 
	möN‹mÆWrôe
;

250 #ifde‡
SQLITE_TEST


254 
	maPaddög
[32];

262 
pid_t
 
	gøndom√ssPid
 = 0;

267 
	#UNIXFILE_EXCL
 0x01

	)

268 
	#UNIXFILE_RDONLY
 0x02

	)

269 
	#UNIXFILE_PERSIST_WAL
 0x04

	)

270 #i‚de‡
SQLITE_DISABLE_DIRSYNC


271 
	#UNIXFILE_DIRSYNC
 0x08

	)

273 
	#UNIXFILE_DIRSYNC
 0x00

	)

275 
	#UNIXFILE_PSOW
 0x10

	)

276 
	#UNIXFILE_DELETE
 0x20

	)

277 
	#UNIXFILE_URI
 0x40

	)

278 
	#UNIXFILE_NOLOCK
 0x80

	)

283 
	~"os_comm⁄.h
"

288 #i‚de‡
O_LARGEFILE


289 
	#O_LARGEFILE
 0

	)

291 #ifde‡
SQLITE_DISABLE_LFS


292 #unde‡
O_LARGEFILE


293 
	#O_LARGEFILE
 0

	)

295 #i‚de‡
O_NOFOLLOW


296 
	#O_NOFOLLOW
 0

	)

298 #i‚de‡
O_BINARY


299 
	#O_BINARY
 0

	)

306 #i‡
SQLITE_THREADSAFE


307 
	#thªadid
 
	`±hªad_£lf
()

	)

309 
	#thªadid
 0

	)

315 #i‡!
deföed
(
HAVE_MREMAP
)

316 #i‡
deföed
(
__löux__
Ë&& deföed(
_GNU_SOURCE
)

317 
	#HAVE_MREMAP
 1

	)

319 
	#HAVE_MREMAP
 0

	)

327 #ifde‡
__ANDROID__


328 
	#l£ek
 
l£ek64


	)

339 
	$posixO≥n
(c⁄° *
zFûe
, 
Êags
, 
mode
){

340  
	`›í
(
zFûe
, 
Êags
, 
mode
);

341 
	}
}

344 
›íDúe˘‹y
(const *, *);

345 
unixGë∑gesize
();

353 
	sunix_sysˇŒ
 {

354 c⁄° *
	mzName
;

355 
sqlôe3_sysˇŒ_±r
 
	mpCuºít
;

356 
sqlôe3_sysˇŒ_±r
 
	mpDeÁu…
;

357 } 
	gaSysˇŒ
[] = {

358 { "›í", (
sqlôe3_sysˇŒ_±r
)
posixO≥n
, 0 },

359 
	#osO≥n
 (((*)(c⁄° *,,))
aSysˇŒ
[0].
pCuºít
)

	)

361 { "˛o£", (
sqlôe3_sysˇŒ_±r
)
˛o£
, 0 },

362 
	#osClo£
 (((*)())
aSysˇŒ
[1].
pCuºít
)

	)

364 { "ac˚ss", (
sqlôe3_sysˇŒ_±r
)
ac˚ss
, 0 },

365 
	#osAc˚ss
 (((*)(c⁄° *,))
aSysˇŒ
[2].
pCuºít
)

	)

367 { "gëcwd", (
sqlôe3_sysˇŒ_±r
)
gëcwd
, 0 },

368 
	#osGëcwd
 ((*(*)(*,
size_t
))
aSysˇŒ
[3].
pCuºít
)

	)

370 { "°©", (
sqlôe3_sysˇŒ_±r
)
°©
, 0 },

371 
	#osSèt
 (((*)(c⁄° *,
°©
*))
aSysˇŒ
[4].
pCuºít
)

	)

379 #ifde‡
__DJGPP__


381 
	#osF°©
(
a
,
b
,
c
Ë0

	)

383 { "f°©", (
sqlôe3_sysˇŒ_±r
)
f°©
, 0 },

384 
	#osF°©
 (((*)(,
°©
*))
aSysˇŒ
[5].
pCuºít
)

	)

387 { "·runˇã", (
sqlôe3_sysˇŒ_±r
)
·runˇã
, 0 },

388 
	#osFåunˇã
 (((*)(,
off_t
))
aSysˇŒ
[6].
pCuºít
)

	)

390 { "f˙é", (
sqlôe3_sysˇŒ_±r
)
f˙é
, 0 },

391 
	#osF˙é
 (((*)(,,...))
aSysˇŒ
[7].
pCuºít
)

	)

393 { "ªad", (
sqlôe3_sysˇŒ_±r
)
ªad
, 0 },

394 
	#osRód
 ((
	`ssize_t
(*)(,*,
size_t
))
aSysˇŒ
[8].
pCuºít
)

	)

396 #i‡
deföed
(
USE_PREAD
Ë|| 
SQLITE_ENABLE_LOCKING_STYLE


397 { "¥ód", (
sqlôe3_sysˇŒ_±r
)
¥ód
, 0 },

399 { "¥ód", (
sqlôe3_sysˇŒ_±r
)0, 0 },

401 
	#osPªad
 ((
	`ssize_t
(*)(,*,
size_t
,
off_t
))
aSysˇŒ
[9].
pCuºít
)

	)

403 #i‡
deföed
(
USE_PREAD64
)

404 { "¥ód64", (
sqlôe3_sysˇŒ_±r
)
¥ód64
, 0 },

406 { "¥ód64", (
sqlôe3_sysˇŒ_±r
)0, 0 },

408 
	#osPªad64
 ((
	`ssize_t
(*)(,*,
size_t
,
off64_t
))
aSysˇŒ
[10].
pCuºít
)

	)

410 { "wrôe", (
sqlôe3_sysˇŒ_±r
)
wrôe
, 0 },

411 
	#osWrôe
 ((
	`ssize_t
(*)(,c⁄° *,
size_t
))
aSysˇŒ
[11].
pCuºít
)

	)

413 #i‡
deföed
(
USE_PREAD
Ë|| 
SQLITE_ENABLE_LOCKING_STYLE


414 { "pwrôe", (
sqlôe3_sysˇŒ_±r
)
pwrôe
, 0 },

416 { "pwrôe", (
sqlôe3_sysˇŒ_±r
)0, 0 },

418 
	#osPwrôe
 ((
	`ssize_t
(*)(,c⁄° *,
size_t
,
off_t
))\

419 
aSysˇŒ
[12].
pCuºít
)

	)

421 #i‡
deföed
(
USE_PREAD64
)

422 { "pwrôe64", (
sqlôe3_sysˇŒ_±r
)
pwrôe64
, 0 },

424 { "pwrôe64", (
sqlôe3_sysˇŒ_±r
)0, 0 },

426 
	#osPwrôe64
 ((
	`ssize_t
(*)(,c⁄° *,
size_t
,
off64_t
))\

427 
aSysˇŒ
[13].
pCuºít
)

	)

429 { "fchmod", (
sqlôe3_sysˇŒ_±r
)
fchmod
, 0 },

430 
	#osFchmod
 (((*)(,
mode_t
))
aSysˇŒ
[14].
pCuºít
)

	)

432 #i‡
deföed
(
HAVE_POSIX_FALLOCATE
) && HAVE_POSIX_FALLOCATE

433 { "ÁŒoˇã", (
sqlôe3_sysˇŒ_±r
)
posix_ÁŒoˇã
, 0 },

435 { "ÁŒoˇã", (
sqlôe3_sysˇŒ_±r
)0, 0 },

437 
	#osFÆloˇã
 (((*)(,
off_t
,off_t))
aSysˇŒ
[15].
pCuºít
)

	)

439 { "u∆ök", (
sqlôe3_sysˇŒ_±r
)
u∆ök
, 0 },

440 
	#osU∆ök
 (((*)(c⁄° *))
aSysˇŒ
[16].
pCuºít
)

	)

442 { "›íDúe˘‹y", (
sqlôe3_sysˇŒ_±r
)
›íDúe˘‹y
, 0 },

443 
	#osO≥nDúe˘‹y
 (((*)(c⁄° *,*))
aSysˇŒ
[17].
pCuºít
)

	)

445 { "mkdú", (
sqlôe3_sysˇŒ_±r
)
mkdú
, 0 },

446 
	#osMkdú
 (((*)(c⁄° *,
mode_t
))
aSysˇŒ
[18].
pCuºít
)

	)

448 { "rmdú", (
sqlôe3_sysˇŒ_±r
)
rmdú
, 0 },

449 
	#osRmdú
 (((*)(c⁄° *))
aSysˇŒ
[19].
pCuºít
)

	)

451 #i‡
deföed
(
HAVE_FCHOWN
)

452 { "fchown", (
sqlôe3_sysˇŒ_±r
)
fchown
, 0 },

454 { "fchown", (
sqlôe3_sysˇŒ_±r
)0, 0 },

456 
	#osFchown
 (((*)(,
uid_t
,
gid_t
))
aSysˇŒ
[20].
pCuºít
)

	)

458 { "gëeuid", (
sqlôe3_sysˇŒ_±r
)
gëeuid
, 0 },

459 
	#osGëeuid
 ((
	`uid_t
(*)())
aSysˇŒ
[21].
pCuºít
)

	)

461 #i‡!
deföed
(
SQLITE_OMIT_WAL
Ë|| 
SQLITE_MAX_MMAP_SIZE
>0

462 { "mm≠", (
sqlôe3_sysˇŒ_±r
)
mm≠
, 0 },

464 { "mm≠", (
sqlôe3_sysˇŒ_±r
)0, 0 },

466 
	#osMm≠
 ((*(*)(*,
size_t
,,,,
off_t
))
aSysˇŒ
[22].
pCuºít
)

	)

468 #i‡!
deföed
(
SQLITE_OMIT_WAL
Ë|| 
SQLITE_MAX_MMAP_SIZE
>0

469 { "munm≠", (
sqlôe3_sysˇŒ_±r
)
munm≠
, 0 },

471 { "munm≠", (
sqlôe3_sysˇŒ_±r
)0, 0 },

473 
	#osMunm≠
 ((*(*)(*,
size_t
))
aSysˇŒ
[23].
pCuºít
)

	)

475 #i‡
HAVE_MREMAP
 && (!
deföed
(
SQLITE_OMIT_WAL
Ë|| 
SQLITE_MAX_MMAP_SIZE
>0)

476 { "mªm≠", (
sqlôe3_sysˇŒ_±r
)
mªm≠
, 0 },

478 { "mªm≠", (
sqlôe3_sysˇŒ_±r
)0, 0 },

480 
	#osMªm≠
 ((*(*)(*,
size_t
,size_t,,...))
aSysˇŒ
[24].
pCuºít
)

	)

482 #i‡!
deföed
(
SQLITE_OMIT_WAL
Ë|| 
SQLITE_MAX_MMAP_SIZE
>0

483 { "gë∑gesize", (
sqlôe3_sysˇŒ_±r
)
unixGë∑gesize
, 0 },

485 { "gë∑gesize", (
sqlôe3_sysˇŒ_±r
)0, 0 },

487 
	#osGë∑gesize
 (((*)())
aSysˇŒ
[25].
pCuºít
)

	)

489 #i‡
deföed
(
HAVE_READLINK
)

490 { "ªadlök", (
sqlôe3_sysˇŒ_±r
)
ªadlök
, 0 },

492 { "ªadlök", (
sqlôe3_sysˇŒ_±r
)0, 0 },

494 
	#osRódlök
 ((
	`ssize_t
(*)(c⁄° *,*,
size_t
))
aSysˇŒ
[26].
pCuºít
)

	)

496 #i‡
deföed
(
HAVE_LSTAT
)

497 { "l°©", (
sqlôe3_sysˇŒ_±r
)
l°©
, 0 },

499 { "l°©", (
sqlôe3_sysˇŒ_±r
)0, 0 },

501 
	#osL°©
 (((*)(c⁄° *,
°©
*))
aSysˇŒ
[27].
pCuºít
)

	)

511 
	$robu°Fchown
(
fd
, 
uid_t
 
uid
, 
gid_t
 
gid
){

512 #i‡
	`deföed
(
HAVE_FCHOWN
)

513  
	`osGëeuid
(Ë? 0 : 
	`osFchown
(
fd
,
uid
,
gid
);

517 
	}
}

525 
	$unixSëSy°emCÆl
(

526 
sqlôe3_vfs
 *
pNŸU£d
,

527 c⁄° *
zName
,

528 
sqlôe3_sysˇŒ_±r
 
pNewFunc


530 
i
;

531 
rc
 = 
SQLITE_NOTFOUND
;

533 
	`UNUSED_PARAMETER
(
pNŸU£d
);

534 if–
zName
==0 ){

538 
rc
 = 
SQLITE_OK
;

539 
i
=0; i<(
aSysˇŒ
)/(aSyscall[0]); i++){

540 if–
aSysˇŒ
[
i
].
pDeÁu…
 ){

541 
aSysˇŒ
[
i
].
pCuºít
 =áSysˇŒ[i].
pDeÁu…
;

548 
i
=0; i<(
aSysˇŒ
)/(aSyscall[0]); i++){

549 if–
	`°rcmp
(
zName
, 
aSysˇŒ
[
i
].zName)==0 ){

550 if–
aSysˇŒ
[
i
].
pDeÁu…
==0 ){

551 
aSysˇŒ
[
i
].
pDeÁu…
 =áSysˇŒ[i].
pCuºít
;

553 
rc
 = 
SQLITE_OK
;

554 if–
pNewFunc
==0 )ÖNewFun¯
aSysˇŒ
[
i
].
pDeÁu…
;

555 
aSysˇŒ
[
i
].
pCuºít
 = 
pNewFunc
;

560  
rc
;

561 
	}
}

568 
sqlôe3_sysˇŒ_±r
 
	$unixGëSy°emCÆl
(

569 
sqlôe3_vfs
 *
pNŸU£d
,

570 c⁄° *
zName


572 
i
;

574 
	`UNUSED_PARAMETER
(
pNŸU£d
);

575 
i
=0; i<(
aSysˇŒ
)/(aSyscall[0]); i++){

576 if–
	`°rcmp
(
zName
, 
aSysˇŒ
[
i
].zName)==0 ) áSysˇŒ[i].
pCuºít
;

579 
	}
}

587 c⁄° *
	$unixNextSy°emCÆl
(
sqlôe3_vfs
 *
p
, c⁄° *
zName
){

588 
i
 = -1;

590 
	`UNUSED_PARAMETER
(
p
);

591 if–
zName
 ){

592 
i
=0; i<
	`AºaySize
(
aSysˇŒ
)-1; i++){

593 if–
	`°rcmp
(
zName
, 
aSysˇŒ
[
i
].zName)==0 ) ;

596 
i
++; i<
	`AºaySize
(
aSysˇŒ
); i++){

597 if–
aSysˇŒ
[
i
].
pCuºít
!=0 ) áSysˇŒ[i].
zName
;

600 
	}
}

607 #i‚de‡
SQLITE_MINIMUM_FILE_DESCRIPTOR


608 
	#SQLITE_MINIMUM_FILE_DESCRIPTOR
 3

	)

628 
	$robu°_›í
(c⁄° *
z
, 
f
, 
mode_t
 
m
){

629 
fd
;

630 
mode_t
 
m2
 = 
m
 ? m : 
SQLITE_DEFAULT_FILE_PERMISSIONS
;

632 #i‡
	`deföed
(
O_CLOEXEC
)

633 
fd
 = 
	`osO≥n
(
z
,
f
|
O_CLOEXEC
,
m2
);

635 
fd
 = 
	`osO≥n
(
z
,
f
,
m2
);

637 if–
fd
<0 ){

638 if–
î∫o
==
EINTR
 ) ;

641 if–
fd
>=
SQLITE_MINIMUM_FILE_DESCRIPTOR
 ) ;

642 
	`osClo£
(
fd
);

643 
	`sqlôe3_log
(
SQLITE_WARNING
,

644 "©ãm±Åÿ›í \"%s\"á†fûêdes¸ùt‹ %d", 
z
, 
fd
);

645 
fd
 = -1;

646 if–
	`osO≥n
("/dev/nuŒ", 
f
, 
m
)<0 ) ;

648 if–
fd
>=0 ){

649 if–
m
!=0 ){

650 
°©
 
°©buf
;

651 if–
	`osF°©
(
fd
, &
°©buf
)==0

652 && 
°©buf
.
°_size
==0

653 && (
°©buf
.
°_mode
&0777)!=
m


655 
	`osFchmod
(
fd
, 
m
);

658 #i‡
	`deföed
(
FD_CLOEXEC
Ë&& (!deföed(
O_CLOEXEC
) || O_CLOEXEC==0)

659 
	`osF˙é
(
fd
, 
F_SETFD
, osF˙é(fd, 
F_GETFD
, 0Ë| 
FD_CLOEXEC
);

662  
fd
;

663 
	}
}

679 
	$unixE¡îMuãx
(){

680 
	`sqlôe3_muãx_íãr
(
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_VFS1
));

681 
	}
}

682 
	$unixLóveMuãx
(){

683 
	`sqlôe3_muãx_Àave
(
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_VFS1
));

684 
	}
}

685 #ifde‡
SQLITE_DEBUG


686 
	$unixMuãxHñd
() {

687  
	`sqlôe3_muãx_hñd
(
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_VFS1
));

688 
	}
}

692 #ifde‡
SQLITE_HAVE_OS_TRACE


698 c⁄° *
	$azFûeLock
(
eFûeLock
){

699  
eFûeLock
 ){

700 
NO_LOCK
:  "NONE";

701 
SHARED_LOCK
:  "SHARED";

702 
RESERVED_LOCK
:  "RESERVED";

703 
PENDING_LOCK
:  "PENDING";

704 
EXCLUSIVE_LOCK
:  "EXCLUSIVE";

707 
	}
}

710 #ifde‡
SQLITE_LOCK_TRACE


719 
	$lockTø˚
(
fd
, 
›
, 
Êock
 *
p
){

720 *
zOpName
, *
zTy≥
;

721 
s
;

722 
ßvedEºno
;

723 if–
›
==
F_GETLK
 ){

724 
zOpName
 = "GETLK";

725 }if–
›
==
F_SETLK
 ){

726 
zOpName
 = "SETLK";

728 
s
 = 
	`osF˙é
(
fd
, 
›
, 
p
);

729 
	`sqlôe3DebugPrötf
("f˙é unknow¿%d %d %d\n", 
fd
, 
›
, 
s
);

730  
s
;

732 if–
p
->
l_ty≥
==
F_RDLCK
 ){

733 
zTy≥
 = "RDLCK";

734 }if–
p
->
l_ty≥
==
F_WRLCK
 ){

735 
zTy≥
 = "WRLCK";

736 }if–
p
->
l_ty≥
==
F_UNLCK
 ){

737 
zTy≥
 = "UNLCK";

739 
	`as£π
( 0 );

741 
	`as£π
–
p
->
l_whí˚
==
SEEK_SET
 );

742 
s
 = 
	`osF˙é
(
fd
, 
›
, 
p
);

743 
ßvedEºno
 = 
î∫o
;

744 
	`sqlôe3DebugPrötf
("fcntl %d %d %s %s %d %d %d %d\n",

745 
thªadid
, 
fd
, 
zOpName
, 
zTy≥
, ()
p
->
l_°¨t
, (Ì->
l_Àn
,

746 ()
p
->
l_pid
, 
s
);

747 if–
s
==(-1Ë&& 
›
==
F_SETLK
 && (
p
->
l_ty≥
==
F_RDLCK
 ||Ö->l_ty≥==
F_WRLCK
) ){

748 
Êock
 
l2
;

749 
l2
 = *
p
;

750 
	`osF˙é
(
fd
, 
F_GETLK
, &
l2
);

751 if–
l2
.
l_ty≥
==
F_RDLCK
 ){

752 
zTy≥
 = "RDLCK";

753 }if–
l2
.
l_ty≥
==
F_WRLCK
 ){

754 
zTy≥
 = "WRLCK";

755 }if–
l2
.
l_ty≥
==
F_UNLCK
 ){

756 
zTy≥
 = "UNLCK";

758 
	`as£π
( 0 );

760 
	`sqlôe3DebugPrötf
("fcntl-failure-reason: %s %d %d %d\n",

761 
zTy≥
, ()
l2
.
l_°¨t
, (Ó2.
l_Àn
, (Ó2.
l_pid
);

763 
î∫o
 = 
ßvedEºno
;

764  
s
;

765 
	}
}

766 #unde‡
osF˙é


767 
	#osF˙é
 
lockTø˚


	)

777 
	$robu°_·runˇã
(
h
, 
sqlôe3_öt64
 
sz
){

778 
rc
;

779 #ifde‡
__ANDROID__


784 if–
sz
>(
sqlôe3_öt64
)0x7FFFFFFF ){

785 
rc
 = 
SQLITE_OK
;

788 do{ 
rc
 = 
	`osFåunˇã
(
h
,
sz
); }Ñc<0 && 
î∫o
==
EINTR
 );

789  
rc
;

790 
	}
}

802 
	$sqlôeEº‹FromPosixEº‹
(
posixEº‹
, 
sqlôeIOEº
) {

803 
	`as£π
–(
sqlôeIOEº
 =
SQLITE_IOERR_LOCK
) ||

804 (
sqlôeIOEº
 =
SQLITE_IOERR_UNLOCK
) ||

805 (
sqlôeIOEº
 =
SQLITE_IOERR_RDLOCK
) ||

806 (
sqlôeIOEº
 =
SQLITE_IOERR_CHECKRESERVEDLOCK
) );

807 
posixEº‹
) {

808 
EACCES
:

809 
EAGAIN
:

810 
ETIMEDOUT
:

811 
EBUSY
:

812 
EINTR
:

813 
ENOLCK
:

816  
SQLITE_BUSY
;

818 
EPERM
:

819  
SQLITE_PERM
;

822  
sqlôeIOEº
;

824 
	}
}

844 
	svxw‹ksFûeId
 {

845 
vxw‹ksFûeId
 *
	mpNext
;

846 
	mnRef
;

847 
	mnName
;

848 *
	mzC™⁄iˇlName
;

851 #i‡
OS_VXWORKS


856 
vxw‹ksFûeId
 *
	gvxw‹ksFûeLi°
 = 0;

871 
	$vxw‹ksSim∂ifyName
(*
z
, 
n
){

872 
i
, 
j
;

873  
n
>1 && 
z
[n-1]=='/' ){Ç--; }

874 
i
=
j
=0; i<
n
; i++){

875 if–
z
[
i
]=='/' ){

876 if–
z
[
i
+1]=='/' ) ;

877 if–
z
[
i
+1]=='.' && i+2<
n
 && z[i+2]=='/' ){

878 
i
 += 1;

881 if–
z
[
i
+1]=='.' && i+3<
n
 && z[i+2]=='.' && z[i+3]=='/' ){

882  
j
>0 && 
z
[j-1]!='/' ){ j--; }

883 if–
j
>0 ){ j--; }

884 
i
 += 2;

888 
z
[
j
++] = z[
i
];

890 
z
[
j
] = 0;

891  
j
;

892 
	}
}

905 
vxw‹ksFûeId
 *
	$vxw‹ksFödFûeId
(c⁄° *
zAbsﬁuãName
){

906 
vxw‹ksFûeId
 *
pNew
;

907 
vxw‹ksFûeId
 *
pC™did©e
;

908 
n
;

910 
	`as£π
–
zAbsﬁuãName
[0]=='/' );

911 
n
 = ()
	`°æí
(
zAbsﬁuãName
);

912 
pNew
 = 
	`sqlôe3_mÆloc64
–(*pNewË+ (
n
+1) );

913 if–
pNew
==0 )  0;

914 
pNew
->
zC™⁄iˇlName
 = (*)&pNew[1];

915 
	`mem˝y
(
pNew
->
zC™⁄iˇlName
, 
zAbsﬁuãName
, 
n
+1);

916 
n
 = 
	`vxw‹ksSim∂ifyName
(
pNew
->
zC™⁄iˇlName
,Ç);

922 
	`unixE¡îMuãx
();

923 
pC™did©e
=
vxw‹ksFûeLi°
;ÖC™did©e;ÖC™did©eıC™did©e->
pNext
){

924 if–
pC™did©e
->
nName
==
n


925 && 
	`memcmp
(
pC™did©e
->
zC™⁄iˇlName
, 
pNew
->zC™⁄iˇlName, 
n
)==0

927 
	`sqlôe3_‰ì
(
pNew
);

928 
pC™did©e
->
nRef
++;

929 
	`unixLóveMuãx
();

930  
pC™did©e
;

935 
pNew
->
nRef
 = 1;

936 
pNew
->
nName
 = 
n
;

937 
pNew
->
pNext
 = 
vxw‹ksFûeLi°
;

938 
vxw‹ksFûeLi°
 = 
pNew
;

939 
	`unixLóveMuãx
();

940  
pNew
;

941 
	}
}

947 
	$vxw‹ksRñó£FûeId
(
vxw‹ksFûeId
 *
pId
){

948 
	`unixE¡îMuãx
();

949 
	`as£π
–
pId
->
nRef
>0 );

950 
pId
->
nRef
--;

951 if–
pId
->
nRef
==0 ){

952 
vxw‹ksFûeId
 **
µ
;

953 
µ
=&
vxw‹ksFûeLi°
; *µ && *µ!=
pId
;Ö∞&((*µ)->
pNext
)){}

954 
	`as£π
–*
µ
==
pId
 );

955 *
µ
 = 
pId
->
pNext
;

956 
	`sqlôe3_‰ì
(
pId
);

958 
	`unixLóveMuãx
();

959 
	}
}

1059 
	sunixFûeId
 {

1060 
dev_t
 
	mdev
;

1061 #i‡
OS_VXWORKS


1062 
vxw‹ksFûeId
 *
	mpId
;

1071 
u64
 
	möo
;

1084 
	sunixInodeInfo
 {

1085 
unixFûeId
 
	mfûeId
;

1086 
	mnSh¨ed
;

1087 
	meFûeLock
;

1088 
	mbPro˚ssLock
;

1089 
	mnRef
;

1090 
unixShmNode
 *
	mpShmNode
;

1091 
	mnLock
;

1092 
UnixUnu£dFd
 *
	mpUnu£d
;

1093 
unixInodeInfo
 *
	mpNext
;

1094 
unixInodeInfo
 *
	mpPªv
;

1095 #i‡
SQLITE_ENABLE_LOCKING_STYLE


1096 
	msh¨edByã
;

1098 #i‡
OS_VXWORKS


1099 
£m_t
 *
	mpSem
;

1100 
	maSemName
[
MAX_PATHNAME
+2];

1107 
unixInodeInfo
 *
	göodeLi°
 = 0;

1125 
	#unixLogEº‹
(
a
,
b
,
c
Ë
	`unixLogEº‹AtLöe
◊,b,c,
__LINE__
)

	)

1126 
	$unixLogEº‹AtLöe
(

1127 
îrcode
,

1128 c⁄° *
zFunc
,

1129 c⁄° *
zP©h
,

1130 
iLöe


1132 *
zEº
;

1133 
iEºno
 = 
î∫o
;

1139 #i‡
SQLITE_THREADSAFE
 && 
	`deföed
(
HAVE_STRERROR_R
)

1140 
aEº
[80];

1141 
	`mem£t
(
aEº
, 0, (aErr));

1142 
zEº
 = 
aEº
;

1156 #i‡
	`deföed
(
STRERROR_R_CHAR_P
Ë|| deföed(
__USE_GNU
)

1157 
zEº
 =

1159 
	`°ªº‹_r
(
iEºno
, 
aEº
, (aErr)-1);

1161 #ñi‡
SQLITE_THREADSAFE


1163 
zEº
 = "";

1166 
zEº
 = 
	`°ªº‹
(
iEºno
);

1169 if–
zP©h
==0 ) zPath = "";

1170 
	`sqlôe3_log
(
îrcode
,

1172 
iLöe
, 
iEºno
, 
zFunc
, 
zP©h
, 
zEº


1175  
îrcode
;

1176 
	}
}

1191 
	$robu°_˛o£
(
unixFûe
 *
pFûe
, 
h
, 
löío
){

1192 if–
	`osClo£
(
h
) ){

1193 
	`unixLogEº‹AtLöe
(
SQLITE_IOERR_CLOSE
, "close",

1194 
pFûe
 ?ÖFûe->
zP©h
 : 0, 
löío
);

1196 
	}
}

1202 
	$°‹eLa°Eºno
(
unixFûe
 *
pFûe
, 
îr‹
){

1203 
pFûe
->
œ°Eºno
 = 
îr‹
;

1204 
	}
}

1209 
	$˛o£PídögFds
(
unixFûe
 *
pFûe
){

1210 
unixInodeInfo
 *
pInode
 = 
pFûe
->pInode;

1211 
UnixUnu£dFd
 *
p
;

1212 
UnixUnu£dFd
 *
pNext
;

1213 
p
=
pInode
->
pUnu£d
;Ö;Ö=
pNext
){

1214 
pNext
 = 
p
->pNext;

1215 
	`robu°_˛o£
(
pFûe
, 
p
->
fd
, 
__LINE__
);

1216 
	`sqlôe3_‰ì
(
p
);

1218 
pInode
->
pUnu£d
 = 0;

1219 
	}
}

1227 
	$ªÀa£InodeInfo
(
unixFûe
 *
pFûe
){

1228 
unixInodeInfo
 *
pInode
 = 
pFûe
->pInode;

1229 
	`as£π
–
	`unixMuãxHñd
() );

1230 if–
	`ALWAYS
(
pInode
) ){

1231 
pInode
->
nRef
--;

1232 if–
pInode
->
nRef
==0 ){

1233 
	`as£π
–
pInode
->
pShmNode
==0 );

1234 
	`˛o£PídögFds
(
pFûe
);

1235 if–
pInode
->
pPªv
 ){

1236 
	`as£π
–
pInode
->
pPªv
->
pNext
==pInode );

1237 
pInode
->
pPªv
->
pNext
 =ÖInode->pNext;

1239 
	`as£π
–
öodeLi°
==
pInode
 );

1240 
öodeLi°
 = 
pInode
->
pNext
;

1242 if–
pInode
->
pNext
 ){

1243 
	`as£π
–
pInode
->
pNext
->
pPªv
==pInode );

1244 
pInode
->
pNext
->
pPªv
 =ÖInode->pPrev;

1246 
	`sqlôe3_‰ì
(
pInode
);

1249 
	}
}

1261 
	$födInodeInfo
(

1262 
unixFûe
 *
pFûe
,

1263 
unixInodeInfo
 **
µInode


1265 
rc
;

1266 
fd
;

1267 
unixFûeId
 
fûeId
;

1268 
°©
 
°©buf
;

1269 
unixInodeInfo
 *
pInode
 = 0;

1271 
	`as£π
–
	`unixMuãxHñd
() );

1276 
fd
 = 
pFûe
->
h
;

1277 
rc
 = 
	`osF°©
(
fd
, &
°©buf
);

1278 if–
rc
!=0 ){

1279 
	`°‹eLa°Eºno
(
pFûe
, 
î∫o
);

1280 #i‡
	`deföed
(
EOVERFLOW
Ë&& deföed(
SQLITE_DISABLE_LFS
)

1281 if–
pFûe
->
œ°Eºno
==
EOVERFLOW
 )  
SQLITE_NOLFS
;

1283  
SQLITE_IOERR
;

1286 #ifde‡
__APPLE__


1297 if–
°©buf
.
°_size
==0 && (
pFûe
->
fsFœgs
 & 
SQLITE_FSFLAGS_IS_MSDOS
)!=0 ){

1298 do{ 
rc
 = 
	`osWrôe
(
fd
, "S", 1); }Ñc<0 && 
î∫o
==
EINTR
 );

1299 if–
rc
!=1 ){

1300 
	`°‹eLa°Eºno
(
pFûe
, 
î∫o
);

1301  
SQLITE_IOERR
;

1303 
rc
 = 
	`osF°©
(
fd
, &
°©buf
);

1304 if–
rc
!=0 ){

1305 
	`°‹eLa°Eºno
(
pFûe
, 
î∫o
);

1306  
SQLITE_IOERR
;

1311 
	`mem£t
(&
fûeId
, 0, (fileId));

1312 
fûeId
.
dev
 = 
°©buf
.
°_dev
;

1313 #i‡
OS_VXWORKS


1314 
fûeId
.
pId
 = 
pFûe
->pId;

1316 
fûeId
.
öo
 = (
u64
)
°©buf
.
°_öo
;

1318 
pInode
 = 
öodeLi°
;

1319  
pInode
 && 
	`memcmp
(&
fûeId
, &pInode->fileId, (fileId)) ){

1320 
pInode
 =ÖInode->
pNext
;

1322 if–
pInode
==0 ){

1323 
pInode
 = 
	`sqlôe3_mÆloc64
( (*pInode) );

1324 if–
pInode
==0 ){

1325  
SQLITE_NOMEM_BKPT
;

1327 
	`mem£t
(
pInode
, 0, (*pInode));

1328 
	`mem˝y
(&
pInode
->
fûeId
, &fileId, (fileId));

1329 
pInode
->
nRef
 = 1;

1330 
pInode
->
pNext
 = 
öodeLi°
;

1331 
pInode
->
pPªv
 = 0;

1332 if–
öodeLi°
 ) inodeLi°->
pPªv
 = 
pInode
;

1333 
öodeLi°
 = 
pInode
;

1335 
pInode
->
nRef
++;

1337 *
µInode
 = 
pInode
;

1338  
SQLITE_OK
;

1339 
	}
}

1344 
	$fûeHasMoved
(
unixFûe
 *
pFûe
){

1345 #i‡
OS_VXWORKS


1346  
pFûe
->
pInode
!=0 &&ÖFûe->
pId
!ıFûe->pInode->
fûeId
.pId;

1348 
°©
 
buf
;

1349  
pFûe
->
pInode
!=0 &&

1350 (
	`osSèt
(
pFûe
->
zP©h
, &
buf
)!=0

1351 || (
u64
)
buf
.
°_öo
!=
pFûe
->
pInode
->
fûeId
.
öo
);

1353 
	}
}

1365 
	$vîifyDbFûe
(
unixFûe
 *
pFûe
){

1366 
°©
 
buf
;

1367 
rc
;

1370 if–
pFûe
->
˘æFœgs
 & 
UNIXFILE_NOLOCK
 ) ;

1372 
rc
 = 
	`osF°©
(
pFûe
->
h
, &
buf
);

1373 if–
rc
!=0 ){

1374 
	`sqlôe3_log
(
SQLITE_WARNING
, "ˇ¬Ÿ f°© db fûê%s", 
pFûe
->
zP©h
);

1377 if–
buf
.
°_∆ök
==0 ){

1378 
	`sqlôe3_log
(
SQLITE_WARNING
, "fûêu∆öked whûê›í: %s", 
pFûe
->
zP©h
);

1381 if–
buf
.
°_∆ök
>1 ){

1382 
	`sqlôe3_log
(
SQLITE_WARNING
, "mu…ùÀÜök†tÿfûe: %s", 
pFûe
->
zP©h
);

1385 if–
	`fûeHasMoved
(
pFûe
) ){

1386 
	`sqlôe3_log
(
SQLITE_WARNING
, "fûêª«med whûê›í: %s", 
pFûe
->
zP©h
);

1389 
	}
}

1398 
	$unixCheckRe£rvedLock
(
sqlôe3_fûe
 *
id
, *
pResOut
){

1399 
rc
 = 
SQLITE_OK
;

1400 
ª£rved
 = 0;

1401 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

1403 
	`SimuœãIOEº‹
– 
SQLITE_IOERR_CHECKRESERVEDLOCK
; );

1405 
	`as£π
–
pFûe
 );

1406 
	`as£π
–
pFûe
->
eFûeLock
<=
SHARED_LOCK
 );

1407 
	`unixE¡îMuãx
();

1410 if–
pFûe
->
pInode
->
eFûeLock
>
SHARED_LOCK
 ){

1411 
ª£rved
 = 1;

1416 #i‚de‡
__DJGPP__


1417 if–!
ª£rved
 && !
pFûe
->
pInode
->
bPro˚ssLock
 ){

1418 
Êock
 
lock
;

1419 
lock
.
l_whí˚
 = 
SEEK_SET
;

1420 
lock
.
l_°¨t
 = 
RESERVED_BYTE
;

1421 
lock
.
l_Àn
 = 1;

1422 
lock
.
l_ty≥
 = 
F_WRLCK
;

1423 if–
	`osF˙é
(
pFûe
->
h
, 
F_GETLK
, &
lock
) ){

1424 
rc
 = 
SQLITE_IOERR_CHECKRESERVEDLOCK
;

1425 
	`°‹eLa°Eºno
(
pFûe
, 
î∫o
);

1426 } if–
lock
.
l_ty≥
!=
F_UNLCK
 ){

1427 
ª£rved
 = 1;

1432 
	`unixLóveMuãx
();

1433 
	`OSTRACE
(("TEST WR-LOCK %d %d %d (unix)\n", 
pFûe
->
h
, 
rc
, 
ª£rved
));

1435 *
pResOut
 = 
ª£rved
;

1436  
rc
;

1437 
	}
}

1458 
	$unixFûeLock
(
unixFûe
 *
pFûe
, 
Êock
 *
pLock
){

1459 
rc
;

1460 
unixInodeInfo
 *
pInode
 = 
pFûe
->pInode;

1461 
	`as£π
–
	`unixMuãxHñd
() );

1462 
	`as£π
–
pInode
!=0 );

1463 if–(
pFûe
->
˘æFœgs
 & (
UNIXFILE_EXCL
|
UNIXFILE_RDONLY
))==UNIXFILE_EXCL ){

1464 if–
pInode
->
bPro˚ssLock
==0 ){

1465 
Êock
 
lock
;

1466 
	`as£π
–
pInode
->
nLock
==0 );

1467 
lock
.
l_whí˚
 = 
SEEK_SET
;

1468 
lock
.
l_°¨t
 = 
SHARED_FIRST
;

1469 
lock
.
l_Àn
 = 
SHARED_SIZE
;

1470 
lock
.
l_ty≥
 = 
F_WRLCK
;

1471 
rc
 = 
	`osF˙é
(
pFûe
->
h
, 
F_SETLK
, &
lock
);

1472 if–
rc
<0 ) Ñc;

1473 
pInode
->
bPro˚ssLock
 = 1;

1474 
pInode
->
nLock
++;

1476 
rc
 = 0;

1479 
rc
 = 
	`osF˙é
(
pFûe
->
h
, 
F_SETLK
, 
pLock
);

1481  
rc
;

1482 
	}
}

1508 
	$unixLock
(
sqlôe3_fûe
 *
id
, 
eFûeLock
){

1548 
rc
 = 
SQLITE_OK
;

1549 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

1550 
unixInodeInfo
 *
pInode
;

1551 
Êock
 
lock
;

1552 
tEºno
 = 0;

1554 
	`as£π
–
pFûe
 );

1555 
	`OSTRACE
(("LOCK %d %†wa†%s(%s,%dËpid=%d (unix)\n", 
pFûe
->
h
,

1556 
	`azFûeLock
(
eFûeLock
),ázFûeLock(
pFûe
->eFileLock),

1557 
	`azFûeLock
(
pFûe
->
pInode
->
eFûeLock
),ÖFûe->pInode->
nSh¨ed
,

1558 
	`osGëpid
(0)));

1564 if–
pFûe
->
eFûeLock
>=eFileLock ){

1565 
	`OSTRACE
(("LOCK %d %†ok (Æªady hñdË(unix)\n", 
pFûe
->
h
,

1566 
	`azFûeLock
(
eFûeLock
)));

1567  
SQLITE_OK
;

1575 
	`as£π
–
pFûe
->
eFûeLock
!=
NO_LOCK
 ||ÉFûeLock==
SHARED_LOCK
 );

1576 
	`as£π
–
eFûeLock
!=
PENDING_LOCK
 );

1577 
	`as£π
–
eFûeLock
!=
RESERVED_LOCK
 || 
pFûe
->eFûeLock==
SHARED_LOCK
 );

1581 
	`unixE¡îMuãx
();

1582 
pInode
 = 
pFûe
->pInode;

1587 if–(
pFûe
->
eFûeLock
!=
pInode
->eFileLock &&

1588 (
pInode
->
eFûeLock
>=
PENDING_LOCK
 ||ÉFûeLock>
SHARED_LOCK
))

1590 
rc
 = 
SQLITE_BUSY
;

1591 
íd_lock
;

1598 if–
eFûeLock
==
SHARED_LOCK
 &&

1599 (
pInode
->
eFûeLock
==
SHARED_LOCK
 ||ÖInode->eFûeLock==
RESERVED_LOCK
) ){

1600 
	`as£π
–
eFûeLock
==
SHARED_LOCK
 );

1601 
	`as£π
–
pFûe
->
eFûeLock
==0 );

1602 
	`as£π
–
pInode
->
nSh¨ed
>0 );

1603 
pFûe
->
eFûeLock
 = 
SHARED_LOCK
;

1604 
pInode
->
nSh¨ed
++;

1605 
pInode
->
nLock
++;

1606 
íd_lock
;

1614 
lock
.
l_Àn
 = 1L;

1615 
lock
.
l_whí˚
 = 
SEEK_SET
;

1616 if–
eFûeLock
==
SHARED_LOCK


1617 || (
eFûeLock
==
EXCLUSIVE_LOCK
 && 
pFûe
->eFûeLock<
PENDING_LOCK
)

1619 
lock
.
l_ty≥
 = (
eFûeLock
==
SHARED_LOCK
?
F_RDLCK
:
F_WRLCK
);

1620 
lock
.
l_°¨t
 = 
PENDING_BYTE
;

1621 if–
	`unixFûeLock
(
pFûe
, &
lock
) ){

1622 
tEºno
 = 
î∫o
;

1623 
rc
 = 
	`sqlôeEº‹FromPosixEº‹
(
tEºno
, 
SQLITE_IOERR_LOCK
);

1624 if–
rc
!=
SQLITE_BUSY
 ){

1625 
	`°‹eLa°Eºno
(
pFûe
, 
tEºno
);

1627 
íd_lock
;

1635 if–
eFûeLock
==
SHARED_LOCK
 ){

1636 
	`as£π
–
pInode
->
nSh¨ed
==0 );

1637 
	`as£π
–
pInode
->
eFûeLock
==0 );

1638 
	`as£π
–
rc
==
SQLITE_OK
 );

1641 
lock
.
l_°¨t
 = 
SHARED_FIRST
;

1642 
lock
.
l_Àn
 = 
SHARED_SIZE
;

1643 if–
	`unixFûeLock
(
pFûe
, &
lock
) ){

1644 
tEºno
 = 
î∫o
;

1645 
rc
 = 
	`sqlôeEº‹FromPosixEº‹
(
tEºno
, 
SQLITE_IOERR_LOCK
);

1649 
lock
.
l_°¨t
 = 
PENDING_BYTE
;

1650 
lock
.
l_Àn
 = 1L;

1651 
lock
.
l_ty≥
 = 
F_UNLCK
;

1652 if–
	`unixFûeLock
(
pFûe
, &
lock
Ë&& 
rc
==
SQLITE_OK
 ){

1654 
tEºno
 = 
î∫o
;

1655 
rc
 = 
SQLITE_IOERR_UNLOCK
;

1658 if–
rc
 ){

1659 if–
rc
!=
SQLITE_BUSY
 ){

1660 
	`°‹eLa°Eºno
(
pFûe
, 
tEºno
);

1662 
íd_lock
;

1664 
pFûe
->
eFûeLock
 = 
SHARED_LOCK
;

1665 
pInode
->
nLock
++;

1666 
pInode
->
nSh¨ed
 = 1;

1668 }if–
eFûeLock
==
EXCLUSIVE_LOCK
 && 
pInode
->
nSh¨ed
>1 ){

1671 
rc
 = 
SQLITE_BUSY
;

1677 
	`as£π
–0!=
pFûe
->
eFûeLock
 );

1678 
lock
.
l_ty≥
 = 
F_WRLCK
;

1680 
	`as£π
–
eFûeLock
==
RESERVED_LOCK
 ||ÉFûeLock==
EXCLUSIVE_LOCK
 );

1681 if–
eFûeLock
==
RESERVED_LOCK
 ){

1682 
lock
.
l_°¨t
 = 
RESERVED_BYTE
;

1683 
lock
.
l_Àn
 = 1L;

1685 
lock
.
l_°¨t
 = 
SHARED_FIRST
;

1686 
lock
.
l_Àn
 = 
SHARED_SIZE
;

1689 if–
	`unixFûeLock
(
pFûe
, &
lock
) ){

1690 
tEºno
 = 
î∫o
;

1691 
rc
 = 
	`sqlôeEº‹FromPosixEº‹
(
tEºno
, 
SQLITE_IOERR_LOCK
);

1692 if–
rc
!=
SQLITE_BUSY
 ){

1693 
	`°‹eLa°Eºno
(
pFûe
, 
tEºno
);

1699 #ifde‡
SQLITE_DEBUG


1705 if–
rc
==
SQLITE_OK


1706 && 
pFûe
->
eFûeLock
<=
SHARED_LOCK


1707 && 
eFûeLock
==
RESERVED_LOCK


1709 
pFûe
->
å™sC¡rChng
 = 0;

1710 
pFûe
->
dbUpd©e
 = 0;

1711 
pFûe
->
öN‹mÆWrôe
 = 1;

1716 if–
rc
==
SQLITE_OK
 ){

1717 
pFûe
->
eFûeLock
 =ÉFileLock;

1718 
pInode
->
eFûeLock
 =ÉFileLock;

1719 }if–
eFûeLock
==
EXCLUSIVE_LOCK
 ){

1720 
pFûe
->
eFûeLock
 = 
PENDING_LOCK
;

1721 
pInode
->
eFûeLock
 = 
PENDING_LOCK
;

1724 
íd_lock
:

1725 
	`unixLóveMuãx
();

1726 
	`OSTRACE
(("LOCK %d %†%†(unix)\n", 
pFûe
->
h
, 
	`azFûeLock
(
eFûeLock
),

1727 
rc
==
SQLITE_OK
 ? "ok" : "failed"));

1728  
rc
;

1729 
	}
}

1735 
	$£tPídögFd
(
unixFûe
 *
pFûe
){

1736 
unixInodeInfo
 *
pInode
 = 
pFûe
->pInode;

1737 
UnixUnu£dFd
 *
p
 = 
pFûe
->
pUnu£d
;

1738 
p
->
pNext
 = 
pInode
->
pUnu£d
;

1739 
pInode
->
pUnu£d
 = 
p
;

1740 
pFûe
->
h
 = -1;

1741 
pFûe
->
pUnu£d
 = 0;

1742 
	}
}

1757 
	$posixU∆ock
(
sqlôe3_fûe
 *
id
, 
eFûeLock
, 
h™dÀNFSU∆ock
){

1758 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

1759 
unixInodeInfo
 *
pInode
;

1760 
Êock
 
lock
;

1761 
rc
 = 
SQLITE_OK
;

1763 
	`as£π
–
pFûe
 );

1764 
	`OSTRACE
(("UNLOCK %d %d wa†%d(%d,%dËpid=%d (unix)\n", 
pFûe
->
h
, 
eFûeLock
,

1765 
pFûe
->
eFûeLock
,ÖFûe->
pInode
->eFûeLock,ÖFûe->pInode->
nSh¨ed
,

1766 
	`osGëpid
(0)));

1768 
	`as£π
–
eFûeLock
<=
SHARED_LOCK
 );

1769 if–
pFûe
->
eFûeLock
<=eFileLock ){

1770  
SQLITE_OK
;

1772 
	`unixE¡îMuãx
();

1773 
pInode
 = 
pFûe
->pInode;

1774 
	`as£π
–
pInode
->
nSh¨ed
!=0 );

1775 if–
pFûe
->
eFûeLock
>
SHARED_LOCK
 ){

1776 
	`as£π
–
pInode
->
eFûeLock
==
pFûe
->eFileLock );

1778 #ifde‡
SQLITE_DEBUG


1787 
pFûe
->
öN‹mÆWrôe
 = 0;

1799 if–
eFûeLock
==
SHARED_LOCK
 ){

1800 #i‡!
	`deföed
(
__APPLE__
Ë|| !
SQLITE_ENABLE_LOCKING_STYLE


1801 ()
h™dÀNFSU∆ock
;

1802 
	`as£π
–
h™dÀNFSU∆ock
==0 );

1804 #i‡
	`deföed
(
__APPLE__
Ë&& 
SQLITE_ENABLE_LOCKING_STYLE


1805 if–
h™dÀNFSU∆ock
 ){

1806 
tEºno
;

1807 
off_t
 
divSize
 = 
SHARED_SIZE
 - 1;

1809 
lock
.
l_ty≥
 = 
F_UNLCK
;

1810 
lock
.
l_whí˚
 = 
SEEK_SET
;

1811 
lock
.
l_°¨t
 = 
SHARED_FIRST
;

1812 
lock
.
l_Àn
 = 
divSize
;

1813 if–
	`unixFûeLock
(
pFûe
, &
lock
)==(-1) ){

1814 
tEºno
 = 
î∫o
;

1815 
rc
 = 
SQLITE_IOERR_UNLOCK
;

1816 
	`°‹eLa°Eºno
(
pFûe
, 
tEºno
);

1817 
íd_u∆ock
;

1819 
lock
.
l_ty≥
 = 
F_RDLCK
;

1820 
lock
.
l_whí˚
 = 
SEEK_SET
;

1821 
lock
.
l_°¨t
 = 
SHARED_FIRST
;

1822 
lock
.
l_Àn
 = 
divSize
;

1823 if–
	`unixFûeLock
(
pFûe
, &
lock
)==(-1) ){

1824 
tEºno
 = 
î∫o
;

1825 
rc
 = 
	`sqlôeEº‹FromPosixEº‹
(
tEºno
, 
SQLITE_IOERR_RDLOCK
);

1826 if–
	`IS_LOCK_ERROR
(
rc
) ){

1827 
	`°‹eLa°Eºno
(
pFûe
, 
tEºno
);

1829 
íd_u∆ock
;

1831 
lock
.
l_ty≥
 = 
F_UNLCK
;

1832 
lock
.
l_whí˚
 = 
SEEK_SET
;

1833 
lock
.
l_°¨t
 = 
SHARED_FIRST
+
divSize
;

1834 
lock
.
l_Àn
 = 
SHARED_SIZE
-
divSize
;

1835 if–
	`unixFûeLock
(
pFûe
, &
lock
)==(-1) ){

1836 
tEºno
 = 
î∫o
;

1837 
rc
 = 
SQLITE_IOERR_UNLOCK
;

1838 
	`°‹eLa°Eºno
(
pFûe
, 
tEºno
);

1839 
íd_u∆ock
;

1844 
lock
.
l_ty≥
 = 
F_RDLCK
;

1845 
lock
.
l_whí˚
 = 
SEEK_SET
;

1846 
lock
.
l_°¨t
 = 
SHARED_FIRST
;

1847 
lock
.
l_Àn
 = 
SHARED_SIZE
;

1848 if–
	`unixFûeLock
(
pFûe
, &
lock
) ){

1855 
rc
 = 
SQLITE_IOERR_RDLOCK
;

1856 
	`°‹eLa°Eºno
(
pFûe
, 
î∫o
);

1857 
íd_u∆ock
;

1861 
lock
.
l_ty≥
 = 
F_UNLCK
;

1862 
lock
.
l_whí˚
 = 
SEEK_SET
;

1863 
lock
.
l_°¨t
 = 
PENDING_BYTE
;

1864 
lock
.
l_Àn
 = 2L; 
	`as£π
–
PENDING_BYTE
+1==
RESERVED_BYTE
 );

1865 if–
	`unixFûeLock
(
pFûe
, &
lock
)==0 ){

1866 
pInode
->
eFûeLock
 = 
SHARED_LOCK
;

1868 
rc
 = 
SQLITE_IOERR_UNLOCK
;

1869 
	`°‹eLa°Eºno
(
pFûe
, 
î∫o
);

1870 
íd_u∆ock
;

1873 if–
eFûeLock
==
NO_LOCK
 ){

1878 
pInode
->
nSh¨ed
--;

1879 if–
pInode
->
nSh¨ed
==0 ){

1880 
lock
.
l_ty≥
 = 
F_UNLCK
;

1881 
lock
.
l_whí˚
 = 
SEEK_SET
;

1882 
lock
.
l_°¨t
 =Üock.
l_Àn
 = 0L;

1883 if–
	`unixFûeLock
(
pFûe
, &
lock
)==0 ){

1884 
pInode
->
eFûeLock
 = 
NO_LOCK
;

1886 
rc
 = 
SQLITE_IOERR_UNLOCK
;

1887 
	`°‹eLa°Eºno
(
pFûe
, 
î∫o
);

1888 
pInode
->
eFûeLock
 = 
NO_LOCK
;

1889 
pFûe
->
eFûeLock
 = 
NO_LOCK
;

1897 
pInode
->
nLock
--;

1898 
	`as£π
–
pInode
->
nLock
>=0 );

1899 if–
pInode
->
nLock
==0 ){

1900 
	`˛o£PídögFds
(
pFûe
);

1904 
íd_u∆ock
:

1905 
	`unixLóveMuãx
();

1906 if–
rc
==
SQLITE_OK
 ) 
pFûe
->
eFûeLock
 =ÉFileLock;

1907  
rc
;

1908 
	}
}

1917 
	$unixU∆ock
(
sqlôe3_fûe
 *
id
, 
eFûeLock
){

1918 #i‡
SQLITE_MAX_MMAP_SIZE
>0

1919 
	`as£π
–
eFûeLock
==
SHARED_LOCK
 || ((
unixFûe
 *)
id
)->
nFëchOut
==0 );

1921  
	`posixU∆ock
(
id
, 
eFûeLock
, 0);

1922 
	}
}

1924 #i‡
SQLITE_MAX_MMAP_SIZE
>0

1925 
unixM≠fûe
(
unixFûe
 *
pFd
, 
i64
 
nByã
);

1926 
unixUnm≠fûe
(
unixFûe
 *
pFd
);

1939 
	$˛o£UnixFûe
(
sqlôe3_fûe
 *
id
){

1940 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

1941 #i‡
SQLITE_MAX_MMAP_SIZE
>0

1942 
	`unixUnm≠fûe
(
pFûe
);

1944 if–
pFûe
->
h
>=0 ){

1945 
	`robu°_˛o£
(
pFûe
,ÖFûe->
h
, 
__LINE__
);

1946 
pFûe
->
h
 = -1;

1948 #i‡
OS_VXWORKS


1949 if–
pFûe
->
pId
 ){

1950 if–
pFûe
->
˘æFœgs
 & 
UNIXFILE_DELETE
 ){

1951 
	`osU∆ök
(
pFûe
->
pId
->
zC™⁄iˇlName
);

1953 
	`vxw‹ksRñó£FûeId
(
pFûe
->
pId
);

1954 
pFûe
->
pId
 = 0;

1957 #ifde‡
SQLITE_UNLINK_AFTER_CLOSE


1958 if–
pFûe
->
˘æFœgs
 & 
UNIXFILE_DELETE
 ){

1959 
	`osU∆ök
(
pFûe
->
zP©h
);

1960 
	`sqlôe3_‰ì
(*(**)&
pFûe
->
zP©h
);

1961 
pFûe
->
zP©h
 = 0;

1964 
	`OSTRACE
(("CLOSE %-3d\n", 
pFûe
->
h
));

1965 
	`O≥nCou¡î
(-1);

1966 
	`sqlôe3_‰ì
(
pFûe
->
pUnu£d
);

1967 
	`mem£t
(
pFûe
, 0, (
unixFûe
));

1968  
SQLITE_OK
;

1969 
	}
}

1974 
	$unixClo£
(
sqlôe3_fûe
 *
id
){

1975 
rc
 = 
SQLITE_OK
;

1976 
unixFûe
 *
pFûe
 = (unixFûê*)
id
;

1977 
	`vîifyDbFûe
(
pFûe
);

1978 
	`unixU∆ock
(
id
, 
NO_LOCK
);

1979 
	`unixE¡îMuãx
();

1984 
	`as£π
–
pFûe
->
pInode
->
nLock
>0 ||ÖFûe->pInode->
bPro˚ssLock
==0 );

1985 if–
	`ALWAYS
(
pFûe
->
pInode
Ë&&ÖFûe->pInode->
nLock
 ){

1991 
	`£tPídögFd
(
pFûe
);

1993 
	`ªÀa£InodeInfo
(
pFûe
);

1994 
rc
 = 
	`˛o£UnixFûe
(
id
);

1995 
	`unixLóveMuãx
();

1996  
rc
;

1997 
	}
}

2019 
	$nﬁockCheckRe£rvedLock
(
sqlôe3_fûe
 *
NŸU£d
, *
pResOut
){

2020 
	`UNUSED_PARAMETER
(
NŸU£d
);

2021 *
pResOut
 = 0;

2022  
SQLITE_OK
;

2023 
	}
}

2024 
	$nﬁockLock
(
sqlôe3_fûe
 *
NŸU£d
, 
NŸU£d2
){

2025 
	`UNUSED_PARAMETER2
(
NŸU£d
, 
NŸU£d2
);

2026  
SQLITE_OK
;

2027 
	}
}

2028 
	$nﬁockU∆ock
(
sqlôe3_fûe
 *
NŸU£d
, 
NŸU£d2
){

2029 
	`UNUSED_PARAMETER2
(
NŸU£d
, 
NŸU£d2
);

2030  
SQLITE_OK
;

2031 
	}
}

2036 
	$nﬁockClo£
(
sqlôe3_fûe
 *
id
) {

2037  
	`˛o£UnixFûe
(
id
);

2038 
	}
}

2069 
	#DOTLOCK_SUFFIX
 ".lock"

	)

2081 
	$dŸlockCheckRe£rvedLock
(
sqlôe3_fûe
 *
id
, *
pResOut
) {

2082 
rc
 = 
SQLITE_OK
;

2083 
ª£rved
 = 0;

2084 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

2086 
	`SimuœãIOEº‹
– 
SQLITE_IOERR_CHECKRESERVEDLOCK
; );

2088 
	`as£π
–
pFûe
 );

2089 
ª£rved
 = 
	`osAc˚ss
((c⁄° *)
pFûe
->
lockögC⁄ãxt
, 0)==0;

2090 
	`OSTRACE
(("TEST WR-LOCK %d %d %d (dŸlock)\n", 
pFûe
->
h
, 
rc
, 
ª£rved
));

2091 *
pResOut
 = 
ª£rved
;

2092  
rc
;

2093 
	}
}

2122 
	$dŸlockLock
(
sqlôe3_fûe
 *
id
, 
eFûeLock
) {

2123 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

2124 *
zLockFûe
 = (*)
pFûe
->
lockögC⁄ãxt
;

2125 
rc
 = 
SQLITE_OK
;

2131 if–
pFûe
->
eFûeLock
 > 
NO_LOCK
 ){

2132 
pFûe
->
eFûeLock
 =ÉFileLock;

2134 #ifde‡
HAVE_UTIME


2135 
	`utime
(
zLockFûe
, 
NULL
);

2137 
	`utimes
(
zLockFûe
, 
NULL
);

2139  
SQLITE_OK
;

2143 
rc
 = 
	`osMkdú
(
zLockFûe
, 0777);

2144 if–
rc
<0 ){

2146 
tEºno
 = 
î∫o
;

2147 if–
EEXIST
 =
tEºno
 ){

2148 
rc
 = 
SQLITE_BUSY
;

2150 
rc
 = 
	`sqlôeEº‹FromPosixEº‹
(
tEºno
, 
SQLITE_IOERR_LOCK
);

2151 if–
rc
!=
SQLITE_BUSY
 ){

2152 
	`°‹eLa°Eºno
(
pFûe
, 
tEºno
);

2155  
rc
;

2159 
pFûe
->
eFûeLock
 =ÉFileLock;

2160  
rc
;

2161 
	}
}

2172 
	$dŸlockU∆ock
(
sqlôe3_fûe
 *
id
, 
eFûeLock
) {

2173 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

2174 *
zLockFûe
 = (*)
pFûe
->
lockögC⁄ãxt
;

2175 
rc
;

2177 
	`as£π
–
pFûe
 );

2178 
	`OSTRACE
(("UNLOCK %d %d wa†%dÖid=%d (dŸlock)\n", 
pFûe
->
h
, 
eFûeLock
,

2179 
pFûe
->
eFûeLock
, 
	`osGëpid
(0)));

2180 
	`as£π
–
eFûeLock
<=
SHARED_LOCK
 );

2183 if–
pFûe
->
eFûeLock
==eFileLock ){

2184  
SQLITE_OK
;

2190 if–
eFûeLock
==
SHARED_LOCK
 ){

2191 
pFûe
->
eFûeLock
 = 
SHARED_LOCK
;

2192  
SQLITE_OK
;

2196 
	`as£π
–
eFûeLock
==
NO_LOCK
 );

2197 
rc
 = 
	`osRmdú
(
zLockFûe
);

2198 if–
rc
<0 ){

2199 
tEºno
 = 
î∫o
;

2200 if–
tEºno
==
ENOENT
 ){

2201 
rc
 = 
SQLITE_OK
;

2203 
rc
 = 
SQLITE_IOERR_UNLOCK
;

2204 
	`°‹eLa°Eºno
(
pFûe
, 
tEºno
);

2206  
rc
;

2208 
pFûe
->
eFûeLock
 = 
NO_LOCK
;

2209  
SQLITE_OK
;

2210 
	}
}

2215 
	$dŸlockClo£
(
sqlôe3_fûe
 *
id
) {

2216 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

2217 
	`as£π
–
id
!=0 );

2218 
	`dŸlockU∆ock
(
id
, 
NO_LOCK
);

2219 
	`sqlôe3_‰ì
(
pFûe
->
lockögC⁄ãxt
);

2220  
	`˛o£UnixFûe
(
id
);

2221 
	}
}

2239 #i‡
SQLITE_ENABLE_LOCKING_STYLE


2244 #ifde‡
EINTR


2245 
	$robu°_Êock
(
fd
, 
›
){

2246 
rc
;

2247 do{ 
rc
 = 
	`Êock
(
fd
,
›
); }Ñc<0 && 
î∫o
==
EINTR
 );

2248  
rc
;

2249 
	}
}

2251 
	#robu°_Êock
(
a
,
b
Ë
	`Êock
◊,b)

	)

2261 
	$ÊockCheckRe£rvedLock
(
sqlôe3_fûe
 *
id
, *
pResOut
){

2262 
rc
 = 
SQLITE_OK
;

2263 
ª£rved
 = 0;

2264 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

2266 
	`SimuœãIOEº‹
– 
SQLITE_IOERR_CHECKRESERVEDLOCK
; );

2268 
	`as£π
–
pFûe
 );

2271 if–
pFûe
->
eFûeLock
>
SHARED_LOCK
 ){

2272 
ª£rved
 = 1;

2276 if–!
ª£rved
 ){

2278 
Ãc
 = 
	`robu°_Êock
(
pFûe
->
h
, 
LOCK_EX
 | 
LOCK_NB
);

2279 if–!
Ãc
 ){

2281 
Ãc
 = 
	`robu°_Êock
(
pFûe
->
h
, 
LOCK_UN
);

2282 i‡–
Ãc
 ) {

2283 
tEºno
 = 
î∫o
;

2285 
Ãc
 = 
SQLITE_IOERR_UNLOCK
;

2286 
	`°‹eLa°Eºno
(
pFûe
, 
tEºno
);

2287 
rc
 = 
Ãc
;

2290 
tEºno
 = 
î∫o
;

2291 
ª£rved
 = 1;

2293 
Ãc
 = 
	`sqlôeEº‹FromPosixEº‹
(
tEºno
, 
SQLITE_IOERR_LOCK
);

2294 if–
	`IS_LOCK_ERROR
(
Ãc
) ){

2295 
	`°‹eLa°Eºno
(
pFûe
, 
tEºno
);

2296 
rc
 = 
Ãc
;

2300 
	`OSTRACE
(("TEST WR-LOCK %d %d %d (Êock)\n", 
pFûe
->
h
, 
rc
, 
ª£rved
));

2302 #ifde‡
SQLITE_IGNORE_FLOCK_LOCK_ERRORS


2303 if–(
rc
 & 
SQLITE_IOERR
) == SQLITE_IOERR ){

2304 
rc
 = 
SQLITE_OK
;

2305 
ª£rved
=1;

2308 *
pResOut
 = 
ª£rved
;

2309  
rc
;

2310 
	}
}

2341 
	$ÊockLock
(
sqlôe3_fûe
 *
id
, 
eFûeLock
) {

2342 
rc
 = 
SQLITE_OK
;

2343 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

2345 
	`as£π
–
pFûe
 );

2349 i‡(
pFûe
->
eFûeLock
 > 
NO_LOCK
) {

2350 
pFûe
->
eFûeLock
 =ÉFileLock;

2351  
SQLITE_OK
;

2356 i‡(
	`robu°_Êock
(
pFûe
->
h
, 
LOCK_EX
 | 
LOCK_NB
)) {

2357 
tEºno
 = 
î∫o
;

2359 
rc
 = 
	`sqlôeEº‹FromPosixEº‹
(
tEºno
, 
SQLITE_IOERR_LOCK
);

2360 if–
	`IS_LOCK_ERROR
(
rc
) ){

2361 
	`°‹eLa°Eºno
(
pFûe
, 
tEºno
);

2365 
pFûe
->
eFûeLock
 =ÉFileLock;

2367 
	`OSTRACE
(("LOCK %d %†%†(Êock)\n", 
pFûe
->
h
, 
	`azFûeLock
(
eFûeLock
),

2368 
rc
==
SQLITE_OK
 ? "ok" : "failed"));

2369 #ifde‡
SQLITE_IGNORE_FLOCK_LOCK_ERRORS


2370 if–(
rc
 & 
SQLITE_IOERR
) == SQLITE_IOERR ){

2371 
rc
 = 
SQLITE_BUSY
;

2374  
rc
;

2375 
	}
}

2385 
	$ÊockU∆ock
(
sqlôe3_fûe
 *
id
, 
eFûeLock
) {

2386 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

2388 
	`as£π
–
pFûe
 );

2389 
	`OSTRACE
(("UNLOCK %d %d wa†%dÖid=%d (Êock)\n", 
pFûe
->
h
, 
eFûeLock
,

2390 
pFûe
->
eFûeLock
, 
	`osGëpid
(0)));

2391 
	`as£π
–
eFûeLock
<=
SHARED_LOCK
 );

2394 if–
pFûe
->
eFûeLock
==eFileLock ){

2395  
SQLITE_OK
;

2399 i‡(
eFûeLock
==
SHARED_LOCK
) {

2400 
pFûe
->
eFûeLock
 =ÉFileLock;

2401  
SQLITE_OK
;

2405 if–
	`robu°_Êock
(
pFûe
->
h
, 
LOCK_UN
) ){

2406 #ifde‡
SQLITE_IGNORE_FLOCK_LOCK_ERRORS


2407  
SQLITE_OK
;

2409  
SQLITE_IOERR_UNLOCK
;

2411 
pFûe
->
eFûeLock
 = 
NO_LOCK
;

2412  
SQLITE_OK
;

2414 
	}
}

2419 
	$ÊockClo£
(
sqlôe3_fûe
 *
id
) {

2420 
	`as£π
–
id
!=0 );

2421 
	`ÊockU∆ock
(
id
, 
NO_LOCK
);

2422  
	`˛o£UnixFûe
(
id
);

2423 
	}
}

2440 #i‡
OS_VXWORKS


2448 
	$£mXCheckRe£rvedLock
(
sqlôe3_fûe
 *
id
, *
pResOut
) {

2449 
rc
 = 
SQLITE_OK
;

2450 
ª£rved
 = 0;

2451 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

2453 
	`SimuœãIOEº‹
– 
SQLITE_IOERR_CHECKRESERVEDLOCK
; );

2455 
	`as£π
–
pFûe
 );

2458 if–
pFûe
->
eFûeLock
>
SHARED_LOCK
 ){

2459 
ª£rved
 = 1;

2463 if–!
ª£rved
 ){

2464 
£m_t
 *
pSem
 = 
pFûe
->
pInode
->pSem;

2466 if–
	`£m_åywaô
(
pSem
)==-1 ){

2467 
tEºno
 = 
î∫o
;

2468 if–
EAGAIN
 !
tEºno
 ){

2469 
rc
 = 
	`sqlôeEº‹FromPosixEº‹
(
tEºno
, 
SQLITE_IOERR_CHECKRESERVEDLOCK
);

2470 
	`°‹eLa°Eºno
(
pFûe
, 
tEºno
);

2473 
ª£rved
 = (
pFûe
->
eFûeLock
 < 
SHARED_LOCK
);

2477 
	`£m_po°
(
pSem
);

2480 
	`OSTRACE
(("TEST WR-LOCK %d %d %d (£m)\n", 
pFûe
->
h
, 
rc
, 
ª£rved
));

2482 *
pResOut
 = 
ª£rved
;

2483  
rc
;

2484 
	}
}

2515 
	$£mXLock
(
sqlôe3_fûe
 *
id
, 
eFûeLock
) {

2516 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

2517 
£m_t
 *
pSem
 = 
pFûe
->
pInode
->pSem;

2518 
rc
 = 
SQLITE_OK
;

2522 i‡(
pFûe
->
eFûeLock
 > 
NO_LOCK
) {

2523 
pFûe
->
eFûeLock
 =ÉFileLock;

2524 
rc
 = 
SQLITE_OK
;

2525 
£m_íd_lock
;

2529 if–
	`£m_åywaô
(
pSem
)==-1 ){

2530 
rc
 = 
SQLITE_BUSY
;

2531 
£m_íd_lock
;

2535 
pFûe
->
eFûeLock
 =ÉFileLock;

2537 
£m_íd_lock
:

2538  
rc
;

2539 
	}
}

2548 
	$£mXU∆ock
(
sqlôe3_fûe
 *
id
, 
eFûeLock
) {

2549 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

2550 
£m_t
 *
pSem
 = 
pFûe
->
pInode
->pSem;

2552 
	`as£π
–
pFûe
 );

2553 
	`as£π
–
pSem
 );

2554 
	`OSTRACE
(("UNLOCK %d %d wa†%dÖid=%d (£m)\n", 
pFûe
->
h
, 
eFûeLock
,

2555 
pFûe
->
eFûeLock
, 
	`osGëpid
(0)));

2556 
	`as£π
–
eFûeLock
<=
SHARED_LOCK
 );

2559 if–
pFûe
->
eFûeLock
==eFileLock ){

2560  
SQLITE_OK
;

2564 i‡(
eFûeLock
==
SHARED_LOCK
) {

2565 
pFûe
->
eFûeLock
 =ÉFileLock;

2566  
SQLITE_OK
;

2570 i‡–
	`£m_po°
(
pSem
)==-1 ) {

2571 
rc
, 
tEºno
 = 
î∫o
;

2572 
rc
 = 
	`sqlôeEº‹FromPosixEº‹
(
tEºno
, 
SQLITE_IOERR_UNLOCK
);

2573 if–
	`IS_LOCK_ERROR
(
rc
) ){

2574 
	`°‹eLa°Eºno
(
pFûe
, 
tEºno
);

2576  
rc
;

2578 
pFûe
->
eFûeLock
 = 
NO_LOCK
;

2579  
SQLITE_OK
;

2580 
	}
}

2585 
	$£mXClo£
(
sqlôe3_fûe
 *
id
) {

2586 if–
id
 ){

2587 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

2588 
	`£mXU∆ock
(
id
, 
NO_LOCK
);

2589 
	`as£π
–
pFûe
 );

2590 
	`unixE¡îMuãx
();

2591 
	`ªÀa£InodeInfo
(
pFûe
);

2592 
	`unixLóveMuãx
();

2593 
	`˛o£UnixFûe
(
id
);

2595  
SQLITE_OK
;

2596 
	}
}

2616 #i‡
deföed
(
__APPLE__
Ë&& 
SQLITE_ENABLE_LOCKING_STYLE


2620 
aÂLockögC⁄ãxt
 
	taÂLockögC⁄ãxt
;

2621 
	saÂLockögC⁄ãxt
 {

2622 
	mª£rved
;

2623 c⁄° *
	mdbP©h
;

2626 
	sByãR™geLockPB2


2628 
	moff£t
;

2629 
	mÀngth
;

2630 
	mªtR™geSèπ
;

2631 
	munLockFœg
;

2632 
	m°¨tEndFœg
;

2633 
	mfd
;

2636 
	#aÂfsByãR™geLock2FSCTL
 
	`_IOWR
('z', 23, 
ByãR™geLockPB2
)

	)

2644 
	$aÂSëLock
(

2645 c⁄° *
∑th
,

2646 
unixFûe
 *
pFûe
,

2647 
off£t
,

2648 
Àngth
,

2649 
£tLockFœg


2651 
ByãR™geLockPB2
 
pb
;

2652 
îr
;

2654 
pb
.
unLockFœg
 = 
£tLockFœg
 ? 0 : 1;

2655 
pb
.
°¨tEndFœg
 = 0;

2656 
pb
.
off£t
 = offset;

2657 
pb
.
Àngth
 =Üength;

2658 
pb
.
fd
 = 
pFûe
->
h
;

2660 
	`OSTRACE
(("AFPSETLOCK [%s] for %d%s inÑange %llx:%llx\n",

2661 (
£tLockFœg
?"ON":"OFF"), 
pFûe
->
h
, (
pb
.
fd
==-1?"[testval-1]":""),

2662 
off£t
, 
Àngth
));

2663 
îr
 = 
	`fs˘l
(
∑th
, 
aÂfsByãR™geLock2FSCTL
, &
pb
, 0);

2664 i‡–
îr
==-1 ) {

2665 
rc
;

2666 
tEºno
 = 
î∫o
;

2667 
	`OSTRACE
(("AFPSETLOCK failedÅo fsctl() '%s' %d %s\n",

2668 
∑th
, 
tEºno
, 
	`°ªº‹
(tErrno)));

2669 #ifde‡
SQLITE_IGNORE_AFP_LOCK_ERRORS


2670 
rc
 = 
SQLITE_BUSY
;

2672 
rc
 = 
	`sqlôeEº‹FromPosixEº‹
(
tEºno
,

2673 
£tLockFœg
 ? 
SQLITE_IOERR_LOCK
 : 
SQLITE_IOERR_UNLOCK
);

2675 if–
	`IS_LOCK_ERROR
(
rc
) ){

2676 
	`°‹eLa°Eºno
(
pFûe
, 
tEºno
);

2678  
rc
;

2680  
SQLITE_OK
;

2682 
	}
}

2690 
	$aÂCheckRe£rvedLock
(
sqlôe3_fûe
 *
id
, *
pResOut
){

2691 
rc
 = 
SQLITE_OK
;

2692 
ª£rved
 = 0;

2693 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

2694 
aÂLockögC⁄ãxt
 *
c⁄ãxt
;

2696 
	`SimuœãIOEº‹
– 
SQLITE_IOERR_CHECKRESERVEDLOCK
; );

2698 
	`as£π
–
pFûe
 );

2699 
c⁄ãxt
 = (
aÂLockögC⁄ãxt
 *Ë
pFûe
->
lockögC⁄ãxt
;

2700 if–
c⁄ãxt
->
ª£rved
 ){

2701 *
pResOut
 = 1;

2702  
SQLITE_OK
;

2704 
	`unixE¡îMuãx
();

2707 if–
pFûe
->
pInode
->
eFûeLock
>
SHARED_LOCK
 ){

2708 
ª£rved
 = 1;

2713 if–!
ª£rved
 ){

2715 
Ãc
 = 
	`aÂSëLock
(
c⁄ãxt
->
dbP©h
, 
pFûe
, 
RESERVED_BYTE
, 1,1);

2716 if–
SQLITE_OK
==
Ãc
 ){

2719 
Ãc
 = 
	`aÂSëLock
(
c⁄ãxt
->
dbP©h
, 
pFûe
, 
RESERVED_BYTE
, 1, 0);

2722 
ª£rved
 = 1;

2724 if–
	`IS_LOCK_ERROR
(
Ãc
) ){

2725 
rc
=
Ãc
;

2729 
	`unixLóveMuãx
();

2730 
	`OSTRACE
(("TEST WR-LOCK %d %d %d (aÂ)\n", 
pFûe
->
h
, 
rc
, 
ª£rved
));

2732 *
pResOut
 = 
ª£rved
;

2733  
rc
;

2734 
	}
}

2760 
	$aÂLock
(
sqlôe3_fûe
 *
id
, 
eFûeLock
){

2761 
rc
 = 
SQLITE_OK
;

2762 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

2763 
unixInodeInfo
 *
pInode
 = 
pFûe
->pInode;

2764 
aÂLockögC⁄ãxt
 *
c⁄ãxt
 = (aÂLockögC⁄ãxà*Ë
pFûe
->
lockögC⁄ãxt
;

2766 
	`as£π
–
pFûe
 );

2767 
	`OSTRACE
(("LOCK %d %†wa†%s(%s,%dËpid=%d (aÂ)\n", 
pFûe
->
h
,

2768 
	`azFûeLock
(
eFûeLock
),ázFûeLock(
pFûe
->eFileLock),

2769 
	`azFûeLock
(
pInode
->
eFûeLock
),ÖInode->
nSh¨ed
 , 
	`osGëpid
(0)));

2775 if–
pFûe
->
eFûeLock
>=eFileLock ){

2776 
	`OSTRACE
(("LOCK %d %†ok (Æªady hñdË◊Â)\n", 
pFûe
->
h
,

2777 
	`azFûeLock
(
eFûeLock
)));

2778  
SQLITE_OK
;

2786 
	`as£π
–
pFûe
->
eFûeLock
!=
NO_LOCK
 ||ÉFûeLock==
SHARED_LOCK
 );

2787 
	`as£π
–
eFûeLock
!=
PENDING_LOCK
 );

2788 
	`as£π
–
eFûeLock
!=
RESERVED_LOCK
 || 
pFûe
->eFûeLock==
SHARED_LOCK
 );

2792 
	`unixE¡îMuãx
();

2793 
pInode
 = 
pFûe
->pInode;

2798 if–(
pFûe
->
eFûeLock
!=
pInode
->eFileLock &&

2799 (
pInode
->
eFûeLock
>=
PENDING_LOCK
 ||ÉFûeLock>
SHARED_LOCK
))

2801 
rc
 = 
SQLITE_BUSY
;

2802 
aÂ_íd_lock
;

2809 if–
eFûeLock
==
SHARED_LOCK
 &&

2810 (
pInode
->
eFûeLock
==
SHARED_LOCK
 ||ÖInode->eFûeLock==
RESERVED_LOCK
) ){

2811 
	`as£π
–
eFûeLock
==
SHARED_LOCK
 );

2812 
	`as£π
–
pFûe
->
eFûeLock
==0 );

2813 
	`as£π
–
pInode
->
nSh¨ed
>0 );

2814 
pFûe
->
eFûeLock
 = 
SHARED_LOCK
;

2815 
pInode
->
nSh¨ed
++;

2816 
pInode
->
nLock
++;

2817 
aÂ_íd_lock
;

2824 if–
eFûeLock
==
SHARED_LOCK


2825 || (
eFûeLock
==
EXCLUSIVE_LOCK
 && 
pFûe
->eFûeLock<
PENDING_LOCK
)

2827 
Áûed
;

2828 
Áûed
 = 
	`aÂSëLock
(
c⁄ãxt
->
dbP©h
, 
pFûe
, 
PENDING_BYTE
, 1, 1);

2829 i‡(
Áûed
) {

2830 
rc
 = 
Áûed
;

2831 
aÂ_íd_lock
;

2838 if–
eFûeLock
==
SHARED_LOCK
 ){

2839 
Ãc1
, 
Ãc2
, 
Ãc1Eºno
 = 0;

2840 
lk
, 
mask
;

2842 
	`as£π
–
pInode
->
nSh¨ed
==0 );

2843 
	`as£π
–
pInode
->
eFûeLock
==0 );

2845 
mask
 = (()==8Ë? 
LARGEST_INT64
 : 0x7fffffff;

2848 
lk
 = 
	`øndom
();

2849 
pInode
->
sh¨edByã
 = (
lk
 & 
mask
)%(
SHARED_SIZE
 - 1);

2850 
Ãc1
 = 
	`aÂSëLock
(
c⁄ãxt
->
dbP©h
, 
pFûe
,

2851 
SHARED_FIRST
+
pInode
->
sh¨edByã
, 1, 1);

2852 if–
	`IS_LOCK_ERROR
(
Ãc1
) ){

2853 
Ãc1Eºno
 = 
pFûe
->
œ°Eºno
;

2856 
Ãc2
 = 
	`aÂSëLock
(
c⁄ãxt
->
dbP©h
, 
pFûe
, 
PENDING_BYTE
, 1, 0);

2858 if–
	`IS_LOCK_ERROR
(
Ãc1
) ) {

2859 
	`°‹eLa°Eºno
(
pFûe
, 
Ãc1Eºno
);

2860 
rc
 = 
Ãc1
;

2861 
aÂ_íd_lock
;

2862 } if–
	`IS_LOCK_ERROR
(
Ãc2
) ){

2863 
rc
 = 
Ãc2
;

2864 
aÂ_íd_lock
;

2865 } if–
Ãc1
 !
SQLITE_OK
 ) {

2866 
rc
 = 
Ãc1
;

2868 
pFûe
->
eFûeLock
 = 
SHARED_LOCK
;

2869 
pInode
->
nLock
++;

2870 
pInode
->
nSh¨ed
 = 1;

2872 }if–
eFûeLock
==
EXCLUSIVE_LOCK
 && 
pInode
->
nSh¨ed
>1 ){

2875 
rc
 = 
SQLITE_BUSY
;

2881 
Áûed
 = 0;

2882 
	`as£π
–0!=
pFûe
->
eFûeLock
 );

2883 i‡(
eFûeLock
 >
RESERVED_LOCK
 && 
pFûe
->eFileLock < RESERVED_LOCK) {

2885 
Áûed
 = 
	`aÂSëLock
(
c⁄ãxt
->
dbP©h
, 
pFûe
, 
RESERVED_BYTE
, 1,1);

2886 if–!
Áûed
 ){

2887 
c⁄ãxt
->
ª£rved
 = 1;

2890 i‡(!
Áûed
 && 
eFûeLock
 =
EXCLUSIVE_LOCK
) {

2896 if–!(
Áûed
 = 
	`aÂSëLock
(
c⁄ãxt
->
dbP©h
, 
pFûe
, 
SHARED_FIRST
 +

2897 
pInode
->
sh¨edByã
, 1, 0)) ){

2898 
Áûed2
 = 
SQLITE_OK
;

2900 
Áûed
 = 
	`aÂSëLock
(
c⁄ãxt
->
dbP©h
, 
pFûe
, 
SHARED_FIRST
,

2901 
SHARED_SIZE
, 1);

2902 if–
Áûed
 && (
Áûed2
 = 
	`aÂSëLock
(
c⁄ãxt
->
dbP©h
, 
pFûe
,

2903 
SHARED_FIRST
 + 
pInode
->
sh¨edByã
, 1, 1)) ){

2907 
rc
 = ((
Áûed
 & 
SQLITE_IOERR
Ë=SQLITE_IOERRË? 
Áûed2
 :

2908 
SQLITE_IOERR_LOCK
;

2909 
aÂ_íd_lock
;

2912 
rc
 = 
Áûed
;

2915 if–
Áûed
 ){

2916 
rc
 = 
Áûed
;

2920 if–
rc
==
SQLITE_OK
 ){

2921 
pFûe
->
eFûeLock
 =ÉFileLock;

2922 
pInode
->
eFûeLock
 =ÉFileLock;

2923 }if–
eFûeLock
==
EXCLUSIVE_LOCK
 ){

2924 
pFûe
->
eFûeLock
 = 
PENDING_LOCK
;

2925 
pInode
->
eFûeLock
 = 
PENDING_LOCK
;

2928 
aÂ_íd_lock
:

2929 
	`unixLóveMuãx
();

2930 
	`OSTRACE
(("LOCK %d %†%†◊Â)\n", 
pFûe
->
h
, 
	`azFûeLock
(
eFûeLock
),

2931 
rc
==
SQLITE_OK
 ? "ok" : "failed"));

2932  
rc
;

2933 
	}
}

2942 
	$aÂU∆ock
(
sqlôe3_fûe
 *
id
, 
eFûeLock
) {

2943 
rc
 = 
SQLITE_OK
;

2944 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

2945 
unixInodeInfo
 *
pInode
;

2946 
aÂLockögC⁄ãxt
 *
c⁄ãxt
 = (aÂLockögC⁄ãxà*Ë
pFûe
->
lockögC⁄ãxt
;

2947 
skùSh¨ed
 = 0;

2948 #ifde‡
SQLITE_TEST


2949 
h
 = 
pFûe
->h;

2952 
	`as£π
–
pFûe
 );

2953 
	`OSTRACE
(("UNLOCK %d %d wa†%d(%d,%dËpid=%d (aÂ)\n", 
pFûe
->
h
, 
eFûeLock
,

2954 
pFûe
->
eFûeLock
,ÖFûe->
pInode
->eFûeLock,ÖFûe->pInode->
nSh¨ed
,

2955 
	`osGëpid
(0)));

2957 
	`as£π
–
eFûeLock
<=
SHARED_LOCK
 );

2958 if–
pFûe
->
eFûeLock
<=eFileLock ){

2959  
SQLITE_OK
;

2961 
	`unixE¡îMuãx
();

2962 
pInode
 = 
pFûe
->pInode;

2963 
	`as£π
–
pInode
->
nSh¨ed
!=0 );

2964 if–
pFûe
->
eFûeLock
>
SHARED_LOCK
 ){

2965 
	`as£π
–
pInode
->
eFûeLock
==
pFûe
->eFileLock );

2966 
	`SimuœãIOEº‹Bíign
(1);

2967 
	`SimuœãIOEº‹
–
h
=(-1) )

2968 
	`SimuœãIOEº‹Bíign
(0);

2970 #ifde‡
SQLITE_DEBUG


2979 
	`as£π
–
pFûe
->
öN‹mÆWrôe
==0

2980 || 
pFûe
->
dbUpd©e
==0

2981 || 
pFûe
->
å™sC¡rChng
==1 );

2982 
pFûe
->
öN‹mÆWrôe
 = 0;

2985 if–
pFûe
->
eFûeLock
==
EXCLUSIVE_LOCK
 ){

2986 
rc
 = 
	`aÂSëLock
(
c⁄ãxt
->
dbP©h
, 
pFûe
, 
SHARED_FIRST
, 
SHARED_SIZE
, 0);

2987 if–
rc
==
SQLITE_OK
 && (
eFûeLock
==
SHARED_LOCK
 || 
pInode
->
nSh¨ed
>1) ){

2989 
sh¨edLockByã
 = 
SHARED_FIRST
+
pInode
->
sh¨edByã
;

2990 
rc
 = 
	`aÂSëLock
(
c⁄ãxt
->
dbP©h
, 
pFûe
, 
sh¨edLockByã
, 1, 1);

2992 
skùSh¨ed
 = 1;

2995 if–
rc
==
SQLITE_OK
 && 
pFûe
->
eFûeLock
>=
PENDING_LOCK
 ){

2996 
rc
 = 
	`aÂSëLock
(
c⁄ãxt
->
dbP©h
, 
pFûe
, 
PENDING_BYTE
, 1, 0);

2998 if–
rc
==
SQLITE_OK
 && 
pFûe
->
eFûeLock
>=
RESERVED_LOCK
 && 
c⁄ãxt
->
ª£rved
 ){

2999 
rc
 = 
	`aÂSëLock
(
c⁄ãxt
->
dbP©h
, 
pFûe
, 
RESERVED_BYTE
, 1, 0);

3000 if–!
rc
 ){

3001 
c⁄ãxt
->
ª£rved
 = 0;

3004 if–
rc
==
SQLITE_OK
 && (
eFûeLock
==
SHARED_LOCK
 || 
pInode
->
nSh¨ed
>1)){

3005 
pInode
->
eFûeLock
 = 
SHARED_LOCK
;

3008 if–
rc
==
SQLITE_OK
 && 
eFûeLock
==
NO_LOCK
 ){

3014 
sh¨edLockByã
 = 
SHARED_FIRST
+
pInode
->
sh¨edByã
;

3015 
pInode
->
nSh¨ed
--;

3016 if–
pInode
->
nSh¨ed
==0 ){

3017 
	`SimuœãIOEº‹Bíign
(1);

3018 
	`SimuœãIOEº‹
–
h
=(-1) )

3019 
	`SimuœãIOEº‹Bíign
(0);

3020 if–!
skùSh¨ed
 ){

3021 
rc
 = 
	`aÂSëLock
(
c⁄ãxt
->
dbP©h
, 
pFûe
, 
sh¨edLockByã
, 1, 0);

3023 if–!
rc
 ){

3024 
pInode
->
eFûeLock
 = 
NO_LOCK
;

3025 
pFûe
->
eFûeLock
 = 
NO_LOCK
;

3028 if–
rc
==
SQLITE_OK
 ){

3029 
pInode
->
nLock
--;

3030 
	`as£π
–
pInode
->
nLock
>=0 );

3031 if–
pInode
->
nLock
==0 ){

3032 
	`˛o£PídögFds
(
pFûe
);

3037 
	`unixLóveMuãx
();

3038 if–
rc
==
SQLITE_OK
 ) 
pFûe
->
eFûeLock
 =ÉFileLock;

3039  
rc
;

3040 
	}
}

3045 
	$aÂClo£
(
sqlôe3_fûe
 *
id
) {

3046 
rc
 = 
SQLITE_OK
;

3047 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

3048 
	`as£π
–
id
!=0 );

3049 
	`aÂU∆ock
(
id
, 
NO_LOCK
);

3050 
	`unixE¡îMuãx
();

3051 if–
pFûe
->
pInode
 &&ÖFûe->pInode->
nLock
 ){

3057 
	`£tPídögFd
(
pFûe
);

3059 
	`ªÀa£InodeInfo
(
pFûe
);

3060 
	`sqlôe3_‰ì
(
pFûe
->
lockögC⁄ãxt
);

3061 
rc
 = 
	`˛o£UnixFûe
(
id
);

3062 
	`unixLóveMuãx
();

3063  
rc
;

3064 
	}
}

3079 #i‡
deföed
(
__APPLE__
Ë&& 
SQLITE_ENABLE_LOCKING_STYLE


3087 
	$nfsU∆ock
(
sqlôe3_fûe
 *
id
, 
eFûeLock
){

3088  
	`posixU∆ock
(
id
, 
eFûeLock
, 1);

3089 
	}
}

3123 
	$£ekAndRód
(
unixFûe
 *
id
, 
sqlôe3_öt64
 
off£t
, *
pBuf
, 
˙t
){

3124 
gŸ
;

3125 
¥i‹
 = 0;

3126 #i‡(!
	`deföed
(
USE_PREAD
Ë&& !deföed(
USE_PREAD64
))

3127 
i64
 
√wOff£t
;

3129 
TIMER_START
;

3130 
	`as£π
–
˙t
==(cnt&0x1ffff) );

3131 
	`as£π
–
id
->
h
>2 );

3133 #i‡
	`deföed
(
USE_PREAD
)

3134 
gŸ
 = 
	`osPªad
(
id
->
h
, 
pBuf
, 
˙t
, 
off£t
);

3135 
	`SimuœãIOEº‹
–
gŸ
 = -1 );

3136 #ñi‡
	`deföed
(
USE_PREAD64
)

3137 
gŸ
 = 
	`osPªad64
(
id
->
h
, 
pBuf
, 
˙t
, 
off£t
);

3138 
	`SimuœãIOEº‹
–
gŸ
 = -1 );

3140 
√wOff£t
 = 
	`l£ek
(
id
->
h
, 
off£t
, 
SEEK_SET
);

3141 
	`SimuœãIOEº‹
–
√wOff£t
 = -1 );

3142 if–
√wOff£t
<0 ){

3143 
	`°‹eLa°Eºno
((
unixFûe
*)
id
, 
î∫o
);

3146 
gŸ
 = 
	`osRód
(
id
->
h
, 
pBuf
, 
˙t
);

3148 if–
gŸ
==
˙t
 ) ;

3149 if–
gŸ
<0 ){

3150 if–
î∫o
==
EINTR
 ){ 
gŸ
 = 1; ; }

3151 
¥i‹
 = 0;

3152 
	`°‹eLa°Eºno
((
unixFûe
*)
id
, 
î∫o
);

3154 }if–
gŸ
>0 ){

3155 
˙t
 -
gŸ
;

3156 
off£t
 +
gŸ
;

3157 
¥i‹
 +
gŸ
;

3158 
pBuf
 = (*)(
gŸ
 + (*)pBuf);

3160 } 
gŸ
>0 );

3161 
TIMER_END
;

3162 
	`OSTRACE
(("READ %-3d %5d %7lld %llu\n",

3163 
id
->
h
, 
gŸ
+
¥i‹
, 
off£t
-¥i‹, 
TIMER_ELAPSED
));

3164  
gŸ
+
¥i‹
;

3165 
	}
}

3172 
	$unixRód
(

3173 
sqlôe3_fûe
 *
id
,

3174 *
pBuf
,

3175 
amt
,

3176 
sqlôe3_öt64
 
off£t


3178 
unixFûe
 *
pFûe
 = (unixFûê*)
id
;

3179 
gŸ
;

3180 
	`as£π
–
id
 );

3181 
	`as£π
–
off£t
>=0 );

3182 
	`as£π
–
amt
>0 );

3187 
	`as£π
–
pFûe
->
pUnu£d
==0

3188 || 
off£t
>=
PENDING_BYTE
+512

3189 || 
off£t
+
amt
<=
PENDING_BYTE


3193 #i‡
SQLITE_MAX_MMAP_SIZE
>0

3196 if–
off£t
<
pFûe
->
mm≠Size
 ){

3197 if–
off£t
+
amt
 <
pFûe
->
mm≠Size
 ){

3198 
	`mem˝y
(
pBuf
, &((
u8
 *)(
pFûe
->
pM≠Regi⁄
))[
off£t
], 
amt
);

3199  
SQLITE_OK
;

3201 
nC›y
 = 
pFûe
->
mm≠Size
 - 
off£t
;

3202 
	`mem˝y
(
pBuf
, &((
u8
 *)(
pFûe
->
pM≠Regi⁄
))[
off£t
], 
nC›y
);

3203 
pBuf
 = &((
u8
 *ÌBuf)[
nC›y
];

3204 
amt
 -
nC›y
;

3205 
off£t
 +
nC›y
;

3210 
gŸ
 = 
	`£ekAndRód
(
pFûe
, 
off£t
, 
pBuf
, 
amt
);

3211 if–
gŸ
==
amt
 ){

3212  
SQLITE_OK
;

3213 }if–
gŸ
<0 ){

3215  
SQLITE_IOERR_READ
;

3217 
	`°‹eLa°Eºno
(
pFûe
, 0);

3219 
	`mem£t
(&((*)
pBuf
)[
gŸ
], 0, 
amt
-got);

3220  
SQLITE_IOERR_SHORT_READ
;

3222 
	}
}

3231 
	$£ekAndWrôeFd
(

3232 
fd
,

3233 
i64
 
iOff
,

3234 c⁄° *
pBuf
,

3235 
nBuf
,

3236 *
piEºno


3238 
rc
 = 0;

3240 
	`as£π
–
nBuf
==(nBuf&0x1ffff) );

3241 
	`as£π
–
fd
>2 );

3242 
	`as£π
–
piEºno
!=0 );

3243 
nBuf
 &= 0x1ffff;

3244 
TIMER_START
;

3246 #i‡
	`deföed
(
USE_PREAD
)

3247 do{ 
rc
 = ()
	`osPwrôe
(
fd
, 
pBuf
, 
nBuf
, 
iOff
); }Ñc<0 && 
î∫o
==
EINTR
 );

3248 #ñi‡
	`deföed
(
USE_PREAD64
)

3249 do{ 
rc
 = ()
	`osPwrôe64
(
fd
, 
pBuf
, 
nBuf
, 
iOff
);}Ñc<0 && 
î∫o
==
EINTR
);

3252 
i64
 
iSìk
 = 
	`l£ek
(
fd
, 
iOff
, 
SEEK_SET
);

3253 
	`SimuœãIOEº‹
–
iSìk
 = -1 );

3254 if–
iSìk
<0 ){

3255 
rc
 = -1;

3258 
rc
 = 
	`osWrôe
(
fd
, 
pBuf
, 
nBuf
);

3259 } 
rc
<0 && 
î∫o
==
EINTR
 );

3262 
TIMER_END
;

3263 
	`OSTRACE
(("WRITE %-3d %5d %7Œd %Œu\n", 
fd
, 
rc
, 
iOff
, 
TIMER_ELAPSED
));

3265 if–
rc
<0 ) *
piEºno
 = 
î∫o
;

3266  
rc
;

3267 
	}
}

3277 
	$£ekAndWrôe
(
unixFûe
 *
id
, 
i64
 
off£t
, c⁄° *
pBuf
, 
˙t
){

3278  
	`£ekAndWrôeFd
(
id
->
h
, 
off£t
, 
pBuf
, 
˙t
, &id->
œ°Eºno
);

3279 
	}
}

3286 
	$unixWrôe
(

3287 
sqlôe3_fûe
 *
id
,

3288 c⁄° *
pBuf
,

3289 
amt
,

3290 
sqlôe3_öt64
 
off£t


3292 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

3293 
wrŸe
 = 0;

3294 
	`as£π
–
id
 );

3295 
	`as£π
–
amt
>0 );

3300 
	`as£π
–
pFûe
->
pUnu£d
==0

3301 || 
off£t
>=
PENDING_BYTE
+512

3302 || 
off£t
+
amt
<=
PENDING_BYTE


3306 #ifde‡
SQLITE_DEBUG


3313 if–
pFûe
->
öN‹mÆWrôe
 ){

3314 
pFûe
->
dbUpd©e
 = 1;

3315 if–
off£t
<=24 && off£t+
amt
>=27 ){

3316 
rc
;

3317 
ﬁdC¡r
[4];

3318 
	`SimuœãIOEº‹Bíign
(1);

3319 
rc
 = 
	`£ekAndRód
(
pFûe
, 24, 
ﬁdC¡r
, 4);

3320 
	`SimuœãIOEº‹Bíign
(0);

3321 if–
rc
!=4 || 
	`memcmp
(
ﬁdC¡r
, &((*)
pBuf
)[24-
off£t
], 4)!=0 ){

3322 
pFûe
->
å™sC¡rChng
 = 1;

3328 #i‡
	`deföed
(
SQLITE_MMAP_READWRITE
Ë&& 
SQLITE_MAX_MMAP_SIZE
>0

3331 if–
off£t
<
pFûe
->
mm≠Size
 ){

3332 if–
off£t
+
amt
 <
pFûe
->
mm≠Size
 ){

3333 
	`mem˝y
(&((
u8
 *)(
pFûe
->
pM≠Regi⁄
))[
off£t
], 
pBuf
, 
amt
);

3334  
SQLITE_OK
;

3336 
nC›y
 = 
pFûe
->
mm≠Size
 - 
off£t
;

3337 
	`mem˝y
(&((
u8
 *)(
pFûe
->
pM≠Regi⁄
))[
off£t
], 
pBuf
, 
nC›y
);

3338 
pBuf
 = &((
u8
 *ÌBuf)[
nC›y
];

3339 
amt
 -
nC›y
;

3340 
off£t
 +
nC›y
;

3345  (
wrŸe
 = 
	`£ekAndWrôe
(
pFûe
, 
off£t
, 
pBuf
, 
amt
))<amt && wrote>0 ){

3346 
amt
 -
wrŸe
;

3347 
off£t
 +
wrŸe
;

3348 
pBuf
 = &((*ÌBuf)[
wrŸe
];

3350 
	`SimuœãIOEº‹
(–
wrŸe
=(-1), 
amt
=1 ));

3351 
	`SimuœãDiskfuŒEº‹
(–
wrŸe
=0, 
amt
=1 ));

3353 if–
amt
>
wrŸe
 ){

3354 if–
wrŸe
<0 && 
pFûe
->
œ°Eºno
!=
ENOSPC
 ){

3356  
SQLITE_IOERR_WRITE
;

3358 
	`°‹eLa°Eºno
(
pFûe
, 0);

3359  
SQLITE_FULL
;

3363  
SQLITE_OK
;

3364 
	}
}

3366 #ifde‡
SQLITE_TEST


3371 
	gsqlôe3_sync_cou¡
 = 0;

3372 
	gsqlôe3_fuŒsync_cou¡
 = 0;

3381 #i‡!
deföed
(
fd©async
Ë&& !
HAVE_FDATASYNC


3382 
	#fd©async
 
fsync


	)

3390 #ifde‡
F_FULLFSYNC


3391 
	#HAVE_FULLFSYNC
 1

	)

3393 
	#HAVE_FULLFSYNC
 0

	)

3421 
	$fuŒ_fsync
(
fd
, 
fuŒSync
, 
d©aO∆y
){

3422 
rc
;

3428 #ifde‡
SQLITE_NO_SYNC


3429 
	`UNUSED_PARAMETER
(
fd
);

3430 
	`UNUSED_PARAMETER
(
fuŒSync
);

3431 
	`UNUSED_PARAMETER
(
d©aO∆y
);

3432 #ñi‡
HAVE_FULLFSYNC


3433 
	`UNUSED_PARAMETER
(
d©aO∆y
);

3435 
	`UNUSED_PARAMETER
(
fuŒSync
);

3436 
	`UNUSED_PARAMETER
(
d©aO∆y
);

3443 #ifde‡
SQLITE_TEST


3444 if–
fuŒSync
 ) 
sqlôe3_fuŒsync_cou¡
++;

3445 
sqlôe3_sync_cou¡
++;

3453 #ifde‡
SQLITE_NO_SYNC


3455 
°©
 
buf
;

3456 
rc
 = 
	`osF°©
(
fd
, &
buf
);

3458 #ñi‡
HAVE_FULLFSYNC


3459 if–
fuŒSync
 ){

3460 
rc
 = 
	`osF˙é
(
fd
, 
F_FULLFSYNC
, 0);

3462 
rc
 = 1;

3472 if–
rc
 )Ñ¯
	`fsync
(
fd
);

3474 #ñi‡
	`deföed
(
__APPLE__
)

3478 
rc
 = 
	`fsync
(
fd
);

3480 
rc
 = 
	`fd©async
(
fd
);

3481 #i‡
OS_VXWORKS


3482 if–
rc
==-1 && 
î∫o
==
ENOTSUP
 ){

3483 
rc
 = 
	`fsync
(
fd
);

3488 if–
OS_VXWORKS
 && 
rc
!= -1 ){

3489 
rc
 = 0;

3491  
rc
;

3492 
	}
}

3517 
	$›íDúe˘‹y
(c⁄° *
zFûíame
, *
pFd
){

3518 
ii
;

3519 
fd
 = -1;

3520 
zDú«me
[
MAX_PATHNAME
+1];

3522 
	`sqlôe3_¢¥ötf
(
MAX_PATHNAME
, 
zDú«me
, "%s", 
zFûíame
);

3523 
ii
=()
	`°æí
(
zDú«me
); ii>0 && zDirname[ii]!='/'; ii--);

3524 if–
ii
>0 ){

3525 
zDú«me
[
ii
] = '\0';

3527 if–
zDú«me
[0]!='/' ) zDirname[0] = '.';

3528 
zDú«me
[1] = 0;

3530 
fd
 = 
	`robu°_›í
(
zDú«me
, 
O_RDONLY
|
O_BINARY
, 0);

3531 if–
fd
>=0 ){

3532 
	`OSTRACE
(("OPENDIR %-3d %s\n", 
fd
, 
zDú«me
));

3534 *
pFd
 = 
fd
;

3535 if–
fd
>=0 )  
SQLITE_OK
;

3536  
	`unixLogEº‹
(
SQLITE_CANTOPEN_BKPT
, "›íDúe˘‹y", 
zDú«me
);

3537 
	}
}

3554 
	$unixSync
(
sqlôe3_fûe
 *
id
, 
Êags
){

3555 
rc
;

3556 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

3558 
isD©aO∆y
 = (
Êags
&
SQLITE_SYNC_DATAONLY
);

3559 
isFuŒsync
 = (
Êags
&0x0F)==
SQLITE_SYNC_FULL
;

3562 
	`as£π
((
Êags
&0x0F)==
SQLITE_SYNC_NORMAL


3563 || (
Êags
&0x0F)==
SQLITE_SYNC_FULL


3569 
	`SimuœãDiskfuŒEº‹
– 
SQLITE_FULL
 );

3571 
	`as£π
–
pFûe
 );

3572 
	`OSTRACE
(("SYNC %-3d\n", 
pFûe
->
h
));

3573 
rc
 = 
	`fuŒ_fsync
(
pFûe
->
h
, 
isFuŒsync
, 
isD©aO∆y
);

3574 
	`SimuœãIOEº‹
–
rc
=1 );

3575 if–
rc
 ){

3576 
	`°‹eLa°Eºno
(
pFûe
, 
î∫o
);

3577  
	`unixLogEº‹
(
SQLITE_IOERR_FSYNC
, "fuŒ_fsync", 
pFûe
->
zP©h
);

3584 if–
pFûe
->
˘æFœgs
 & 
UNIXFILE_DIRSYNC
 ){

3585 
dúfd
;

3586 
	`OSTRACE
(("DIRSYNC %†(have_fuŒfsync=%d fuŒsync=%d)\n", 
pFûe
->
zP©h
,

3587 
HAVE_FULLFSYNC
, 
isFuŒsync
));

3588 
rc
 = 
	`osO≥nDúe˘‹y
(
pFûe
->
zP©h
, &
dúfd
);

3589 if–
rc
==
SQLITE_OK
 ){

3590 
	`fuŒ_fsync
(
dúfd
, 0, 0);

3591 
	`robu°_˛o£
(
pFûe
, 
dúfd
, 
__LINE__
);

3593 
	`as£π
–
rc
==
SQLITE_CANTOPEN
 );

3594 
rc
 = 
SQLITE_OK
;

3596 
pFûe
->
˘æFœgs
 &~
UNIXFILE_DIRSYNC
;

3598  
rc
;

3599 
	}
}

3604 
	$unixTrunˇã
(
sqlôe3_fûe
 *
id
, 
i64
 
nByã
){

3605 
unixFûe
 *
pFûe
 = (unixFûê*)
id
;

3606 
rc
;

3607 
	`as£π
–
pFûe
 );

3608 
	`SimuœãIOEº‹
– 
SQLITE_IOERR_TRUNCATE
 );

3615 if–
pFûe
->
szChunk
>0 ){

3616 
nByã
 = (“Byã + 
pFûe
->
szChunk
 - 1)/pFile->szChunk) *ÖFile->szChunk;

3619 
rc
 = 
	`robu°_·runˇã
(
pFûe
->
h
, 
nByã
);

3620 if–
rc
 ){

3621 
	`°‹eLa°Eºno
(
pFûe
, 
î∫o
);

3622  
	`unixLogEº‹
(
SQLITE_IOERR_TRUNCATE
, "·runˇã", 
pFûe
->
zP©h
);

3624 #ifde‡
SQLITE_DEBUG


3632 if–
pFûe
->
öN‹mÆWrôe
 && 
nByã
==0 ){

3633 
pFûe
->
å™sC¡rChng
 = 1;

3637 #i‡
SQLITE_MAX_MMAP_SIZE
>0

3642 if–
nByã
<
pFûe
->
mm≠Size
 ){

3643 
pFûe
->
mm≠Size
 = 
nByã
;

3647  
SQLITE_OK
;

3649 
	}
}

3654 
	$unixFûeSize
(
sqlôe3_fûe
 *
id
, 
i64
 *
pSize
){

3655 
rc
;

3656 
°©
 
buf
;

3657 
	`as£π
–
id
 );

3658 
rc
 = 
	`osF°©
(((
unixFûe
*)
id
)->
h
, &
buf
);

3659 
	`SimuœãIOEº‹
–
rc
=1 );

3660 if–
rc
!=0 ){

3661 
	`°‹eLa°Eºno
((
unixFûe
*)
id
, 
î∫o
);

3662  
SQLITE_IOERR_FSTAT
;

3664 *
pSize
 = 
buf
.
°_size
;

3672 if–*
pSize
==1 ) *pSize = 0;

3675  
SQLITE_OK
;

3676 
	}
}

3678 #i‡
SQLITE_ENABLE_LOCKING_STYLE
 && 
deföed
(
__APPLE__
)

3683 
¥oxyFûeC⁄åﬁ
(
sqlôe3_fûe
*,,*);

3692 
	$f˙éSizeHöt
(
unixFûe
 *
pFûe
, 
i64
 
nByã
){

3693 if–
pFûe
->
szChunk
>0 ){

3694 
i64
 
nSize
;

3695 
°©
 
buf
;

3697 if–
	`osF°©
(
pFûe
->
h
, &
buf
) ){

3698  
SQLITE_IOERR_FSTAT
;

3701 
nSize
 = ((
nByã
+
pFûe
->
szChunk
-1) /ÖFile->szChunk) *ÖFile->szChunk;

3702 if–
nSize
>(
i64
)
buf
.
°_size
 ){

3704 #i‡
	`deföed
(
HAVE_POSIX_FALLOCATE
) && HAVE_POSIX_FALLOCATE

3708 
îr
;

3710 
îr
 = 
	`osFÆloˇã
(
pFûe
->
h
, 
buf
.
°_size
, 
nSize
-buf.st_size);

3711 } 
îr
==
EINTR
 );

3712 if–
îr
 )  
SQLITE_IOERR_WRITE
;

3721 
nBlk
 = 
buf
.
°_blksize
;

3722 
nWrôe
 = 0;

3723 
i64
 
iWrôe
;

3725 
iWrôe
 = (
buf
.
°_size
/
nBlk
)*nBlk +ÇBlk - 1;

3726 
	`as£π
–
iWrôe
>=
buf
.
°_size
 );

3727 
	`as£π
–((
iWrôe
+1)%
nBlk
)==0 );

3728  ; 
iWrôe
<
nSize
+
nBlk
-1; iWrite+=nBlk ){

3729 if–
iWrôe
>=
nSize
 ) iWrite =ÇSize - 1;

3730 
nWrôe
 = 
	`£ekAndWrôe
(
pFûe
, 
iWrôe
, "", 1);

3731 if–
nWrôe
!=1 )  
SQLITE_IOERR_WRITE
;

3737 #i‡
SQLITE_MAX_MMAP_SIZE
>0

3738 if–
pFûe
->
mm≠SizeMax
>0 && 
nByã
>pFûe->
mm≠Size
 ){

3739 
rc
;

3740 if–
pFûe
->
szChunk
<=0 ){

3741 if–
	`robu°_·runˇã
(
pFûe
->
h
, 
nByã
) ){

3742 
	`°‹eLa°Eºno
(
pFûe
, 
î∫o
);

3743  
	`unixLogEº‹
(
SQLITE_IOERR_TRUNCATE
, "·runˇã", 
pFûe
->
zP©h
);

3747 
rc
 = 
	`unixM≠fûe
(
pFûe
, 
nByã
);

3748  
rc
;

3752  
SQLITE_OK
;

3753 
	}
}

3761 
	$unixModeBô
(
unixFûe
 *
pFûe
, 
mask
, *
pArg
){

3762 if–*
pArg
<0 ){

3763 *
pArg
 = (
pFûe
->
˘æFœgs
 & 
mask
)!=0;

3764 }if–(*
pArg
)==0 ){

3765 
pFûe
->
˘æFœgs
 &~
mask
;

3767 
pFûe
->
˘æFœgs
 |
mask
;

3769 
	}
}

3772 
unixGëTem≤ame
(
nBuf
, *
zBuf
);

3777 
	$unixFûeC⁄åﬁ
(
sqlôe3_fûe
 *
id
, 
›
, *
pArg
){

3778 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

3779  
›
 ){

3780 
SQLITE_FCNTL_LOCKSTATE
: {

3781 *(*)
pArg
 = 
pFûe
->
eFûeLock
;

3782  
SQLITE_OK
;

3784 
SQLITE_FCNTL_LAST_ERRNO
: {

3785 *(*)
pArg
 = 
pFûe
->
œ°Eºno
;

3786  
SQLITE_OK
;

3788 
SQLITE_FCNTL_CHUNK_SIZE
: {

3789 
pFûe
->
szChunk
 = *(*)
pArg
;

3790  
SQLITE_OK
;

3792 
SQLITE_FCNTL_SIZE_HINT
: {

3793 
rc
;

3794 
	`SimuœãIOEº‹Bíign
(1);

3795 
rc
 = 
	`f˙éSizeHöt
(
pFûe
, *(
i64
 *)
pArg
);

3796 
	`SimuœãIOEº‹Bíign
(0);

3797  
rc
;

3799 
SQLITE_FCNTL_PERSIST_WAL
: {

3800 
	`unixModeBô
(
pFûe
, 
UNIXFILE_PERSIST_WAL
, (*)
pArg
);

3801  
SQLITE_OK
;

3803 
SQLITE_FCNTL_POWERSAFE_OVERWRITE
: {

3804 
	`unixModeBô
(
pFûe
, 
UNIXFILE_PSOW
, (*)
pArg
);

3805  
SQLITE_OK
;

3807 
SQLITE_FCNTL_VFSNAME
: {

3808 *(**)
pArg
 = 
	`sqlôe3_m¥ötf
("%s", 
pFûe
->
pVfs
->
zName
);

3809  
SQLITE_OK
;

3811 
SQLITE_FCNTL_TEMPFILENAME
: {

3812 *
zTFûe
 = 
	`sqlôe3_mÆloc64
–
pFûe
->
pVfs
->
mxP©h«me
 );

3813 if–
zTFûe
 ){

3814 
	`unixGëTem≤ame
(
pFûe
->
pVfs
->
mxP©h«me
, 
zTFûe
);

3815 *(**)
pArg
 = 
zTFûe
;

3817  
SQLITE_OK
;

3819 
SQLITE_FCNTL_HAS_MOVED
: {

3820 *(*)
pArg
 = 
	`fûeHasMoved
(
pFûe
);

3821  
SQLITE_OK
;

3823 #i‡
SQLITE_MAX_MMAP_SIZE
>0

3824 
SQLITE_FCNTL_MMAP_SIZE
: {

3825 
i64
 
√wLimô
 = *(i64*)
pArg
;

3826 
rc
 = 
SQLITE_OK
;

3827 if–
√wLimô
>
sqlôe3GlobÆC⁄fig
.
mxMm≠
 ){

3828 
√wLimô
 = 
sqlôe3GlobÆC⁄fig
.
mxMm≠
;

3830 *(
i64
*)
pArg
 = 
pFûe
->
mm≠SizeMax
;

3831 if–
√wLimô
>=0 &&ÇewLimô!=
pFûe
->
mm≠SizeMax
 &&ÖFûe->
nFëchOut
==0 ){

3832 
pFûe
->
mm≠SizeMax
 = 
√wLimô
;

3833 if–
pFûe
->
mm≠Size
>0 ){

3834 
	`unixUnm≠fûe
(
pFûe
);

3835 
rc
 = 
	`unixM≠fûe
(
pFûe
, -1);

3838  
rc
;

3841 #ifde‡
SQLITE_DEBUG


3847 
SQLITE_FCNTL_DB_UNCHANGED
: {

3848 ((
unixFûe
*)
id
)->
dbUpd©e
 = 0;

3849  
SQLITE_OK
;

3852 #i‡
SQLITE_ENABLE_LOCKING_STYLE
 && 
	`deföed
(
__APPLE__
)

3853 
SQLITE_FCNTL_SET_LOCKPROXYFILE
:

3854 
SQLITE_FCNTL_GET_LOCKPROXYFILE
: {

3855  
	`¥oxyFûeC⁄åﬁ
(
id
,
›
,
pArg
);

3859  
SQLITE_NOTFOUND
;

3860 
	}
}

3872 #i‚de‡
__QNXNTO__


3873 
	$unixSe˘‹Size
(
sqlôe3_fûe
 *
NŸU£d
){

3874 
	`UNUSED_PARAMETER
(
NŸU£d
);

3875  
SQLITE_DEFAULT_SECTOR_SIZE
;

3876 
	}
}

3882 #ifde‡
__QNXNTO__


3883 
	~<sys/dcmd_blk.h
>

3884 
	~<sys/°©vfs.h
>

3885 
	$unixSe˘‹Size
(
sqlôe3_fûe
 *
id
){

3886 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

3887 if–
pFûe
->
£˘‹Size
 == 0 ){

3888 
°©vfs
 
fsInfo
;

3891 
pFûe
->
£˘‹Size
 = 
SQLITE_DEFAULT_SECTOR_SIZE
;

3892 
pFûe
->
devi˚Ch¨a˘îi°ics
 = 0;

3893 if–
	`f°©vfs
(
pFûe
->
h
, &
fsInfo
) == -1 ) {

3894  
pFûe
->
£˘‹Size
;

3897 if–!
	`°rcmp
(
fsInfo
.
f_ba£ty≥
, "tmp") ) {

3898 
pFûe
->
£˘‹Size
 = 
fsInfo
.
f_bsize
;

3899 
pFûe
->
devi˚Ch¨a˘îi°ics
 =

3900 
SQLITE_IOCAP_ATOMIC4K
 |

3901 
SQLITE_IOCAP_SAFE_APPEND
 |

3903 
SQLITE_IOCAP_SEQUENTIAL
 |

3906 }if–
	`°r°r
(
fsInfo
.
f_ba£ty≥
, "etfs") ){

3907 
pFûe
->
£˘‹Size
 = 
fsInfo
.
f_bsize
;

3908 
pFûe
->
devi˚Ch¨a˘îi°ics
 =

3910 (
pFûe
->
£˘‹Size
 / 512 * 
SQLITE_IOCAP_ATOMIC512
) |

3911 
SQLITE_IOCAP_SAFE_APPEND
 |

3913 
SQLITE_IOCAP_SEQUENTIAL
 |

3916 }if–!
	`°rcmp
(
fsInfo
.
f_ba£ty≥
, "qnx6") ){

3917 
pFûe
->
£˘‹Size
 = 
fsInfo
.
f_bsize
;

3918 
pFûe
->
devi˚Ch¨a˘îi°ics
 =

3919 
SQLITE_IOCAP_ATOMIC
 |

3920 
SQLITE_IOCAP_SAFE_APPEND
 |

3922 
SQLITE_IOCAP_SEQUENTIAL
 |

3925 }if–!
	`°rcmp
(
fsInfo
.
f_ba£ty≥
, "qnx4") ){

3926 
pFûe
->
£˘‹Size
 = 
fsInfo
.
f_bsize
;

3927 
pFûe
->
devi˚Ch¨a˘îi°ics
 =

3929 ((
pFûe
->
£˘‹Size
 / 512 * 
SQLITE_IOCAP_ATOMIC512
) << 1) - 2 |

3930 
SQLITE_IOCAP_SEQUENTIAL
 |

3933 }if–
	`°r°r
(
fsInfo
.
f_ba£ty≥
, "dos") ){

3934 
pFûe
->
£˘‹Size
 = 
fsInfo
.
f_bsize
;

3935 
pFûe
->
devi˚Ch¨a˘îi°ics
 =

3937 ((
pFûe
->
£˘‹Size
 / 512 * 
SQLITE_IOCAP_ATOMIC512
) << 1) - 2 |

3938 
SQLITE_IOCAP_SEQUENTIAL
 |

3942 
pFûe
->
devi˚Ch¨a˘îi°ics
 =

3943 
SQLITE_IOCAP_ATOMIC512
 |

3944 
SQLITE_IOCAP_SAFE_APPEND
 |

3951 if–
pFûe
->
£˘‹Size
 % 512 != 0 ){

3952 
pFûe
->
devi˚Ch¨a˘îi°ics
 = 0;

3953 
pFûe
->
£˘‹Size
 = 
SQLITE_DEFAULT_SECTOR_SIZE
;

3955  
pFûe
->
£˘‹Size
;

3956 
	}
}

3972 
	$unixDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
 *
id
){

3973 
unixFûe
 *
p
 = (unixFûe*)
id
;

3974 
rc
 = 0;

3975 #ifde‡
__QNXNTO__


3976 if–
p
->
£˘‹Size
==0 ) 
	`unixSe˘‹Size
(
id
);

3977 
rc
 = 
p
->
devi˚Ch¨a˘îi°ics
;

3979 if–
p
->
˘æFœgs
 & 
UNIXFILE_PSOW
 ){

3980 
rc
 |
SQLITE_IOCAP_POWERSAFE_OVERWRITE
;

3982  
rc
;

3983 
	}
}

3985 #i‡!
deföed
(
SQLITE_OMIT_WAL
Ë|| 
SQLITE_MAX_MMAP_SIZE
>0

3993 
	$unixGë∑gesize
(){

3994 #i‡
OS_VXWORKS


3996 #ñi‡
	`deföed
(
_BSD_SOURCE
)

3997  
	`gë∑gesize
();

3999  ()
	`sysc⁄f
(
_SC_PAGESIZE
);

4001 
	}
}

4005 #i‚de‡
SQLITE_OMIT_WAL


4036 
	sunixShmNode
 {

4037 
unixInodeInfo
 *
	mpInode
;

4038 
sqlôe3_muãx
 *
	mmuãx
;

4039 *
	mzFûíame
;

4040 
	mh
;

4041 
	mszRegi⁄
;

4042 
u16
 
	mnRegi⁄
;

4043 
u8
 
	misRód⁄ly
;

4044 **
	m≠Regi⁄
;

4045 
	mnRef
;

4046 
unixShm
 *
	mpFú°
;

4047 #ifde‡
SQLITE_DEBUG


4048 
u8
 
	mex˛Mask
;

4049 
u8
 
	msh¨edMask
;

4050 
u8
 
	m√xtShmId
;

4067 
	sunixShm
 {

4068 
unixShmNode
 *
	mpShmNode
;

4069 
unixShm
 *
	mpNext
;

4070 
u8
 
	mhasMuãx
;

4071 
u8
 
	mid
;

4072 
u16
 
	msh¨edMask
;

4073 
u16
 
	mex˛Mask
;

4079 
	#UNIX_SHM_BASE
 ((22+
SQLITE_SHM_NLOCK
)*4Ë

	)

4080 
	#UNIX_SHM_DMS
 (
UNIX_SHM_BASE
+
SQLITE_SHM_NLOCK
Ë

	)

4088 
	$unixShmSy°emLock
(

4089 
unixFûe
 *
pFûe
,

4090 
lockTy≥
,

4091 
of°
,

4092 
n


4094 
unixShmNode
 *
pShmNode
;

4095 
Êock
 
f
;

4096 
rc
 = 
SQLITE_OK
;

4099 
pShmNode
 = 
pFûe
->
pInode
->pShmNode;

4100 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pShmNode
->
muãx
Ë||ÖShmNode->
nRef
==0 );

4103 
	`as£π
–
n
==1 || 
lockTy≥
!=
F_RDLCK
 );

4106 
	`as£π
–
n
>=1 &&Ç<=
SQLITE_SHM_NLOCK
 );

4108 if–
pShmNode
->
h
>=0 ){

4110 
	`mem£t
(&
f
, 0, (f));

4111 
f
.
l_ty≥
 = 
lockTy≥
;

4112 
f
.
l_whí˚
 = 
SEEK_SET
;

4113 
f
.
l_°¨t
 = 
of°
;

4114 
f
.
l_Àn
 = 
n
;

4116 
rc
 = 
	`osF˙é
(
pShmNode
->
h
, 
F_SETLK
, &
f
);

4117 
rc
 = (rc!=(-1)Ë? 
SQLITE_OK
 : 
SQLITE_BUSY
;

4121 #ifde‡
SQLITE_DEBUG


4122 { 
u16
 
mask
;

4123 
	`OSTRACE
(("SHM-LOCK "));

4124 
mask
 = 
of°
>31 ? 0xfff‡: (1<<(of°+
n
)) - (1<<ofst);

4125 if–
rc
==
SQLITE_OK
 ){

4126 if–
lockTy≥
==
F_UNLCK
 ){

4127 
	`OSTRACE
(("u∆ock %d ok", 
of°
));

4128 
pShmNode
->
ex˛Mask
 &~
mask
;

4129 
pShmNode
->
sh¨edMask
 &~
mask
;

4130 }if–
lockTy≥
==
F_RDLCK
 ){

4131 
	`OSTRACE
(("ªad-lock %d ok", 
of°
));

4132 
pShmNode
->
ex˛Mask
 &~
mask
;

4133 
pShmNode
->
sh¨edMask
 |
mask
;

4135 
	`as£π
–
lockTy≥
==
F_WRLCK
 );

4136 
	`OSTRACE
(("wrôe-lock %d ok", 
of°
));

4137 
pShmNode
->
ex˛Mask
 |
mask
;

4138 
pShmNode
->
sh¨edMask
 &~
mask
;

4141 if–
lockTy≥
==
F_UNLCK
 ){

4142 
	`OSTRACE
(("u∆ock %d faûed", 
of°
));

4143 }if–
lockTy≥
==
F_RDLCK
 ){

4144 
	`OSTRACE
(("read-lock failed"));

4146 
	`as£π
–
lockTy≥
==
F_WRLCK
 );

4147 
	`OSTRACE
(("wrôe-lock %d faûed", 
of°
));

4150 
	`OSTRACE
((" -áfterwards %03x,%03x\n",

4151 
pShmNode
->
sh¨edMask
,ÖShmNode->
ex˛Mask
));

4155  
rc
;

4156 
	}
}

4167 
	$unixShmRegi⁄PîM≠
(){

4168 
shmsz
 = 32*1024;

4169 
pgsz
 = 
	`osGë∑gesize
();

4170 
	`as£π
–((
pgsz
-1)&pgsz)==0 );

4171 if–
pgsz
<
shmsz
 )  1;

4172  
pgsz
/
shmsz
;

4173 
	}
}

4181 
	$unixShmPurge
(
unixFûe
 *
pFd
){

4182 
unixShmNode
 *
p
 = 
pFd
->
pInode
->
pShmNode
;

4183 
	`as£π
–
	`unixMuãxHñd
() );

4184 if–
p
 && 
	`ALWAYS
’->
nRef
==0) ){

4185 
nShmPîM≠
 = 
	`unixShmRegi⁄PîM≠
();

4186 
i
;

4187 
	`as£π
–
p
->
pInode
==
pFd
->pInode );

4188 
	`sqlôe3_muãx_‰ì
(
p
->
muãx
);

4189 
i
=0; i<
p
->
nRegi⁄
; i+=
nShmPîM≠
){

4190 if–
p
->
h
>=0 ){

4191 
	`osMunm≠
(
p
->
≠Regi⁄
[
i
],Ö->
szRegi⁄
);

4193 
	`sqlôe3_‰ì
(
p
->
≠Regi⁄
[
i
]);

4196 
	`sqlôe3_‰ì
(
p
->
≠Regi⁄
);

4197 if–
p
->
h
>=0 ){

4198 
	`robu°_˛o£
(
pFd
, 
p
->
h
, 
__LINE__
);

4199 
p
->
h
 = -1;

4201 
p
->
pInode
->
pShmNode
 = 0;

4202 
	`sqlôe3_‰ì
(
p
);

4204 
	}
}

4241 
	$unixO≥nSh¨edMem‹y
(
unixFûe
 *
pDbFd
){

4242 
unixShm
 *
p
 = 0;

4243 
unixShmNode
 *
pShmNode
;

4244 
rc
;

4245 
unixInodeInfo
 *
pInode
;

4246 *
zShmFûíame
;

4247 
nShmFûíame
;

4250 
p
 = 
	`sqlôe3_mÆloc64
( (*p) );

4251 if–
p
==0 )  
SQLITE_NOMEM_BKPT
;

4252 
	`mem£t
(
p
, 0, (*p));

4253 
	`as£π
–
pDbFd
->
pShm
==0 );

4258 
	`unixE¡îMuãx
();

4259 
pInode
 = 
pDbFd
->pInode;

4260 
pShmNode
 = 
pInode
->pShmNode;

4261 if–
pShmNode
==0 ){

4262 
°©
 
sSèt
;

4263 #i‚de‡
SQLITE_SHM_DIRECTORY


4264 c⁄° *
zBa£P©h
 = 
pDbFd
->
zP©h
;

4271 if–
	`osF°©
(
pDbFd
->
h
, &
sSèt
) ){

4272 
rc
 = 
SQLITE_IOERR_FSTAT
;

4273 
shm_›í_îr
;

4276 #ifde‡
SQLITE_SHM_DIRECTORY


4277 
nShmFûíame
 = (
SQLITE_SHM_DIRECTORY
) + 31;

4279 
nShmFûíame
 = 6 + ()
	`°æí
(
zBa£P©h
);

4281 
pShmNode
 = 
	`sqlôe3_mÆloc64
–(*pShmNodeË+ 
nShmFûíame
 );

4282 if–
pShmNode
==0 ){

4283 
rc
 = 
SQLITE_NOMEM_BKPT
;

4284 
shm_›í_îr
;

4286 
	`mem£t
(
pShmNode
, 0, (*pShmNode)+
nShmFûíame
);

4287 
zShmFûíame
 = 
pShmNode
->
zFûíame
 = (*)&pShmNode[1];

4288 #ifde‡
SQLITE_SHM_DIRECTORY


4289 
	`sqlôe3_¢¥ötf
(
nShmFûíame
, 
zShmFûíame
,

4290 
SQLITE_SHM_DIRECTORY
 "/sqlite-shm-%x-%x",

4291 (
u32
)
sSèt
.
°_öo
, (u32)sSèt.
°_dev
);

4293 
	`sqlôe3_¢¥ötf
(
nShmFûíame
, 
zShmFûíame
, "%s-shm", 
zBa£P©h
);

4294 
	`sqlôe3FûeSuffix3
(
pDbFd
->
zP©h
, 
zShmFûíame
);

4296 
pShmNode
->
h
 = -1;

4297 
pDbFd
->
pInode
->
pShmNode
 =ÖShmNode;

4298 
pShmNode
->
pInode
 = 
pDbFd
->pInode;

4299 if–
sqlôe3GlobÆC⁄fig
.
bC‹eMuãx
 ){

4300 
pShmNode
->
muãx
 = 
	`sqlôe3_muãx_Æloc
(
SQLITE_MUTEX_FAST
);

4301 if–
pShmNode
->
muãx
==0 ){

4302 
rc
 = 
SQLITE_NOMEM_BKPT
;

4303 
shm_›í_îr
;

4307 if–
pInode
->
bPro˚ssLock
==0 ){

4308 
›íFœgs
 = 
O_RDWR
 | 
O_CREAT
;

4309 if–
	`sqlôe3_uri_boﬁón
(
pDbFd
->
zP©h
, "readonly_shm", 0) ){

4310 
›íFœgs
 = 
O_RDONLY
;

4311 
pShmNode
->
isRód⁄ly
 = 1;

4313 
pShmNode
->
h
 = 
	`robu°_›í
(
zShmFûíame
, 
›íFœgs
, (
sSèt
.
°_mode
&0777));

4314 if–
pShmNode
->
h
<0 ){

4315 
rc
 = 
	`unixLogEº‹
(
SQLITE_CANTOPEN_BKPT
, "›í", 
zShmFûíame
);

4316 
shm_›í_îr
;

4323 
	`robu°Fchown
(
pShmNode
->
h
, 
sSèt
.
°_uid
, sSèt.
°_gid
);

4328 
rc
 = 
SQLITE_OK
;

4329 if–
	`unixShmSy°emLock
(
pDbFd
, 
F_WRLCK
, 
UNIX_SHM_DMS
, 1)==
SQLITE_OK
 ){

4330 if–
	`robu°_·runˇã
(
pShmNode
->
h
, 0) ){

4331 
rc
 = 
	`unixLogEº‹
(
SQLITE_IOERR_SHMOPEN
, "·runˇã", 
zShmFûíame
);

4334 if–
rc
==
SQLITE_OK
 ){

4335 
rc
 = 
	`unixShmSy°emLock
(
pDbFd
, 
F_RDLCK
, 
UNIX_SHM_DMS
, 1);

4337 if–
rc
 ) 
shm_›í_îr
;

4342 
p
->
pShmNode
 =ÖShmNode;

4343 #ifde‡
SQLITE_DEBUG


4344 
p
->
id
 = 
pShmNode
->
√xtShmId
++;

4346 
pShmNode
->
nRef
++;

4347 
pDbFd
->
pShm
 = 
p
;

4348 
	`unixLóveMuãx
();

4357 
	`sqlôe3_muãx_íãr
(
pShmNode
->
muãx
);

4358 
p
->
pNext
 = 
pShmNode
->
pFú°
;

4359 
pShmNode
->
pFú°
 = 
p
;

4360 
	`sqlôe3_muãx_Àave
(
pShmNode
->
muãx
);

4361  
SQLITE_OK
;

4364 
shm_›í_îr
:

4365 
	`unixShmPurge
(
pDbFd
);

4366 
	`sqlôe3_‰ì
(
p
);

4367 
	`unixLóveMuãx
();

4368  
rc
;

4369 
	}
}

4390 
	$unixShmM≠
(

4391 
sqlôe3_fûe
 *
fd
,

4392 
iRegi⁄
,

4393 
szRegi⁄
,

4394 
bExãnd
,

4395 vﬁ©ûê**
µ


4397 
unixFûe
 *
pDbFd
 = (unixFûe*)
fd
;

4398 
unixShm
 *
p
;

4399 
unixShmNode
 *
pShmNode
;

4400 
rc
 = 
SQLITE_OK
;

4401 
nShmPîM≠
 = 
	`unixShmRegi⁄PîM≠
();

4402 
nReqRegi⁄
;

4405 if–
pDbFd
->
pShm
==0 ){

4406 
rc
 = 
	`unixO≥nSh¨edMem‹y
(
pDbFd
);

4407 if–
rc
!=
SQLITE_OK
 ) Ñc;

4410 
p
 = 
pDbFd
->
pShm
;

4411 
pShmNode
 = 
p
->pShmNode;

4412 
	`sqlôe3_muãx_íãr
(
pShmNode
->
muãx
);

4413 
	`as£π
–
szRegi⁄
==
pShmNode
->szRegi⁄ ||ÖShmNode->
nRegi⁄
==0 );

4414 
	`as£π
–
pShmNode
->
pInode
==
pDbFd
->pInode );

4415 
	`as£π
–
pShmNode
->
h
>=0 || 
pDbFd
->
pInode
->
bPro˚ssLock
==1 );

4416 
	`as£π
–
pShmNode
->
h
<0 || 
pDbFd
->
pInode
->
bPro˚ssLock
==0 );

4419 
nReqRegi⁄
 = ((
iRegi⁄
+
nShmPîM≠
) /ÇShmPerMap) *ÇShmPerMap;

4421 if–
pShmNode
->
nRegi⁄
<
nReqRegi⁄
 ){

4422 **
≠New
;

4423 
nByã
 = 
nReqRegi⁄
*
szRegi⁄
;

4424 
°©
 
sSèt
;

4426 
pShmNode
->
szRegi⁄
 = szRegion;

4428 if–
pShmNode
->
h
>=0 ){

4433 if–
	`osF°©
(
pShmNode
->
h
, &
sSèt
) ){

4434 
rc
 = 
SQLITE_IOERR_SHMSIZE
;

4435 
shm∑ge_out
;

4438 if–
sSèt
.
°_size
<
nByã
 ){

4442 if–!
bExãnd
 ){

4443 
shm∑ge_out
;

4454 c⁄° 
pgsz
 = 4096;

4455 
iPg
;

4458 
	`as£π
–(
nByã
 % 
pgsz
)==0 );

4459 
iPg
=(
sSèt
.
°_size
/
pgsz
); iPg<(
nByã
/pgsz); iPg++){

4460 
x
 = 0;

4461 if–
	`£ekAndWrôeFd
(
pShmNode
->
h
, 
iPg
*
pgsz
 +Ögsz-1, "", 1, &
x
)!=1 ){

4462 c⁄° *
zFûe
 = 
pShmNode
->
zFûíame
;

4463 
rc
 = 
	`unixLogEº‹
(
SQLITE_IOERR_SHMSIZE
, "wrôe", 
zFûe
);

4464 
shm∑ge_out
;

4472 
≠New
 = (**)
	`sqlôe3_ªÆloc
(

4473 
pShmNode
->
≠Regi⁄
, 
nReqRegi⁄
*(*)

4475 if–!
≠New
 ){

4476 
rc
 = 
SQLITE_IOERR_NOMEM_BKPT
;

4477 
shm∑ge_out
;

4479 
pShmNode
->
≠Regi⁄
 = 
≠New
;

4480  
pShmNode
->
nRegi⁄
<
nReqRegi⁄
 ){

4481 
nM≠
 = 
szRegi⁄
*
nShmPîM≠
;

4482 
i
;

4483 *
pMem
;

4484 if–
pShmNode
->
h
>=0 ){

4485 
pMem
 = 
	`osMm≠
(0, 
nM≠
,

4486 
pShmNode
->
isRód⁄ly
 ? 
PROT_READ
 : PROT_READ|
PROT_WRITE
,

4487 
MAP_SHARED
, 
pShmNode
->
h
, 
szRegi⁄
*(
i64
ÌShmNode->
nRegi⁄


4489 if–
pMem
==
MAP_FAILED
 ){

4490 
rc
 = 
	`unixLogEº‹
(
SQLITE_IOERR_SHMMAP
, "mm≠", 
pShmNode
->
zFûíame
);

4491 
shm∑ge_out
;

4494 
pMem
 = 
	`sqlôe3_mÆloc64
(
szRegi⁄
);

4495 if–
pMem
==0 ){

4496 
rc
 = 
SQLITE_NOMEM_BKPT
;

4497 
shm∑ge_out
;

4499 
	`mem£t
(
pMem
, 0, 
szRegi⁄
);

4502 
i
=0; i<
nShmPîM≠
; i++){

4503 
pShmNode
->
≠Regi⁄
[pShmNode->
nRegi⁄
+
i
] = &((*)
pMem
)[
szRegi⁄
*i];

4505 
pShmNode
->
nRegi⁄
 +
nShmPîM≠
;

4509 
shm∑ge_out
:

4510 if–
pShmNode
->
nRegi⁄
>
iRegi⁄
 ){

4511 *
µ
 = 
pShmNode
->
≠Regi⁄
[
iRegi⁄
];

4513 *
µ
 = 0;

4515 if–
pShmNode
->
isRód⁄ly
 && 
rc
==
SQLITE_OK
 )Ñ¯
SQLITE_READONLY
;

4516 
	`sqlôe3_muãx_Àave
(
pShmNode
->
muãx
);

4517  
rc
;

4518 
	}
}

4528 
	$unixShmLock
(

4529 
sqlôe3_fûe
 *
fd
,

4530 
of°
,

4531 
n
,

4532 
Êags


4534 
unixFûe
 *
pDbFd
 = (unixFûe*)
fd
;

4535 
unixShm
 *
p
 = 
pDbFd
->
pShm
;

4536 
unixShm
 *
pX
;

4537 
unixShmNode
 *
pShmNode
 = 
p
->pShmNode;

4538 
rc
 = 
SQLITE_OK
;

4539 
u16
 
mask
;

4541 
	`as£π
–
pShmNode
==
pDbFd
->
pInode
->pShmNode );

4542 
	`as£π
–
pShmNode
->
pInode
==
pDbFd
->pInode );

4543 
	`as£π
–
of°
>=0 && of°+
n
<=
SQLITE_SHM_NLOCK
 );

4544 
	`as£π
–
n
>=1 );

4545 
	`as£π
–
Êags
==(
SQLITE_SHM_LOCK
 | 
SQLITE_SHM_SHARED
)

4546 || 
Êags
==(
SQLITE_SHM_LOCK
 | 
SQLITE_SHM_EXCLUSIVE
)

4547 || 
Êags
==(
SQLITE_SHM_UNLOCK
 | 
SQLITE_SHM_SHARED
)

4548 || 
Êags
==(
SQLITE_SHM_UNLOCK
 | 
SQLITE_SHM_EXCLUSIVE
) );

4549 
	`as£π
–
n
==1 || (
Êags
 & 
SQLITE_SHM_EXCLUSIVE
)!=0 );

4550 
	`as£π
–
pShmNode
->
h
>=0 || 
pDbFd
->
pInode
->
bPro˚ssLock
==1 );

4551 
	`as£π
–
pShmNode
->
h
<0 || 
pDbFd
->
pInode
->
bPro˚ssLock
==0 );

4553 
mask
 = (1<<(
of°
+
n
)) - (1<<ofst);

4554 
	`as£π
–
n
>1 || 
mask
==(1<<
of°
) );

4555 
	`sqlôe3_muãx_íãr
(
pShmNode
->
muãx
);

4556 if–
Êags
 & 
SQLITE_SHM_UNLOCK
 ){

4557 
u16
 
ÆlMask
 = 0;

4560 
pX
=
pShmNode
->
pFú°
;ÖX;ÖXıX->
pNext
){

4561 if–
pX
==
p
 ) ;

4562 
	`as£π
–(
pX
->
ex˛Mask
 & (
p
->ex˛Mask|p->
sh¨edMask
))==0 );

4563 
ÆlMask
 |
pX
->
sh¨edMask
;

4567 if–(
mask
 & 
ÆlMask
)==0 ){

4568 
rc
 = 
	`unixShmSy°emLock
(
pDbFd
, 
F_UNLCK
, 
of°
+
UNIX_SHM_BASE
, 
n
);

4570 
rc
 = 
SQLITE_OK
;

4574 if–
rc
==
SQLITE_OK
 ){

4575 
p
->
ex˛Mask
 &~
mask
;

4576 
p
->
sh¨edMask
 &~
mask
;

4578 }if–
Êags
 & 
SQLITE_SHM_SHARED
 ){

4579 
u16
 
ÆlSh¨ed
 = 0;

4585 
pX
=
pShmNode
->
pFú°
;ÖX;ÖXıX->
pNext
){

4586 if–(
pX
->
ex˛Mask
 & 
mask
)!=0 ){

4587 
rc
 = 
SQLITE_BUSY
;

4590 
ÆlSh¨ed
 |
pX
->
sh¨edMask
;

4594 if–
rc
==
SQLITE_OK
 ){

4595 if–(
ÆlSh¨ed
 & 
mask
)==0 ){

4596 
rc
 = 
	`unixShmSy°emLock
(
pDbFd
, 
F_RDLCK
, 
of°
+
UNIX_SHM_BASE
, 
n
);

4598 
rc
 = 
SQLITE_OK
;

4603 if–
rc
==
SQLITE_OK
 ){

4604 
p
->
sh¨edMask
 |
mask
;

4610 
pX
=
pShmNode
->
pFú°
;ÖX;ÖXıX->
pNext
){

4611 if–(
pX
->
ex˛Mask
 & 
mask
)!=0 || (pX->
sh¨edMask
 & mask)!=0 ){

4612 
rc
 = 
SQLITE_BUSY
;

4620 if–
rc
==
SQLITE_OK
 ){

4621 
rc
 = 
	`unixShmSy°emLock
(
pDbFd
, 
F_WRLCK
, 
of°
+
UNIX_SHM_BASE
, 
n
);

4622 if–
rc
==
SQLITE_OK
 ){

4623 
	`as£π
–(
p
->
sh¨edMask
 & 
mask
)==0 );

4624 
p
->
ex˛Mask
 |
mask
;

4628 
	`sqlôe3_muãx_Àave
(
pShmNode
->
muãx
);

4629 
	`OSTRACE
(("SHM-LOCK shmid-%d,Öid-%d got %03x,%03x\n",

4630 
p
->
id
, 
	`osGëpid
(0),Ö->
sh¨edMask
,Ö->
ex˛Mask
));

4631  
rc
;

4632 
	}
}

4640 
	$unixShmB¨rõr
(

4641 
sqlôe3_fûe
 *
fd


4643 
	`UNUSED_PARAMETER
(
fd
);

4644 
	`sqlôe3Mem‹yB¨rõr
();

4645 
	`unixE¡îMuãx
();

4646 
	`unixLóveMuãx
();

4647 
	}
}

4656 
	$unixShmUnm≠
(

4657 
sqlôe3_fûe
 *
fd
,

4658 
dñëeFœg


4660 
unixShm
 *
p
;

4661 
unixShmNode
 *
pShmNode
;

4662 
unixShm
 **
µ
;

4663 
unixFûe
 *
pDbFd
;

4665 
pDbFd
 = (
unixFûe
*)
fd
;

4666 
p
 = 
pDbFd
->
pShm
;

4667 if–
p
==0 )  
SQLITE_OK
;

4668 
pShmNode
 = 
p
->pShmNode;

4670 
	`as£π
–
pShmNode
==
pDbFd
->
pInode
->pShmNode );

4671 
	`as£π
–
pShmNode
->
pInode
==
pDbFd
->pInode );

4675 
	`sqlôe3_muãx_íãr
(
pShmNode
->
muãx
);

4676 
µ
=&
pShmNode
->
pFú°
; (*µ)!=
p
;Ö∞&(*µ)->
pNext
){}

4677 *
µ
 = 
p
->
pNext
;

4680 
	`sqlôe3_‰ì
(
p
);

4681 
pDbFd
->
pShm
 = 0;

4682 
	`sqlôe3_muãx_Àave
(
pShmNode
->
muãx
);

4686 
	`unixE¡îMuãx
();

4687 
	`as£π
–
pShmNode
->
nRef
>0 );

4688 
pShmNode
->
nRef
--;

4689 if–
pShmNode
->
nRef
==0 ){

4690 if–
dñëeFœg
 && 
pShmNode
->
h
>=0 ){

4691 
	`osU∆ök
(
pShmNode
->
zFûíame
);

4693 
	`unixShmPurge
(
pDbFd
);

4695 
	`unixLóveMuãx
();

4697  
SQLITE_OK
;

4698 
	}
}

4702 
	#unixShmM≠
 0

	)

4703 
	#unixShmLock
 0

	)

4704 
	#unixShmB¨rõr
 0

	)

4705 
	#unixShmUnm≠
 0

	)

4708 #i‡
SQLITE_MAX_MMAP_SIZE
>0

4712 
	$unixUnm≠fûe
(
unixFûe
 *
pFd
){

4713 
	`as£π
–
pFd
->
nFëchOut
==0 );

4714 if–
pFd
->
pM≠Regi⁄
 ){

4715 
	`osMunm≠
(
pFd
->
pM≠Regi⁄
,ÖFd->
mm≠SizeA˘uÆ
);

4716 
pFd
->
pM≠Regi⁄
 = 0;

4717 
pFd
->
mm≠Size
 = 0;

4718 
pFd
->
mm≠SizeA˘uÆ
 = 0;

4720 
	}
}

4737 
	$unixRem≠fûe
(

4738 
unixFûe
 *
pFd
,

4739 
i64
 
nNew


4741 c⁄° *
zEº
 = "mmap";

4742 
h
 = 
pFd
->h;

4743 
u8
 *
pOrig
 = (u8 *)
pFd
->
pM≠Regi⁄
;

4744 
i64
 
nOrig
 = 
pFd
->
mm≠SizeA˘uÆ
;

4745 
u8
 *
pNew
 = 0;

4746 
Êags
 = 
PROT_READ
;

4748 
	`as£π
–
pFd
->
nFëchOut
==0 );

4749 
	`as£π
–
nNew
>
pFd
->
mm≠Size
 );

4750 
	`as£π
–
nNew
<=
pFd
->
mm≠SizeMax
 );

4751 
	`as£π
–
nNew
>0 );

4752 
	`as£π
–
pFd
->
mm≠SizeA˘uÆ
>ıFd->
mm≠Size
 );

4753 
	`as£π
–
MAP_FAILED
!=0 );

4755 #ifde‡
SQLITE_MMAP_READWRITE


4756 if–(
pFd
->
˘æFœgs
 & 
UNIXFILE_RDONLY
)==0 ) 
Êags
 |
PROT_WRITE
;

4759 if–
pOrig
 ){

4760 #i‡
HAVE_MREMAP


4761 
i64
 
nReu£
 = 
pFd
->
mm≠Size
;

4763 c⁄° 
szSy•age
 = 
	`osGë∑gesize
();

4764 
i64
 
nReu£
 = (
pFd
->
mm≠Size
 & ~(
szSy•age
-1));

4766 
u8
 *
pReq
 = &
pOrig
[
nReu£
];

4769 if–
nReu£
!=
nOrig
 ){

4770 
	`osMunm≠
(
pReq
, 
nOrig
-
nReu£
);

4773 #i‡
HAVE_MREMAP


4774 
pNew
 = 
	`osMªm≠
(
pOrig
, 
nReu£
, 
nNew
, 
MREMAP_MAYMOVE
);

4775 
zEº
 = "mremap";

4777 
pNew
 = 
	`osMm≠
(
pReq
, 
nNew
-
nReu£
, 
Êags
, 
MAP_SHARED
, 
h
,ÇReuse);

4778 if–
pNew
!=
MAP_FAILED
 ){

4779 if–
pNew
!=
pReq
 ){

4780 
	`osMunm≠
(
pNew
, 
nNew
 - 
nReu£
);

4781 
pNew
 = 0;

4783 
pNew
 = 
pOrig
;

4789 if–
pNew
==
MAP_FAILED
 ||ÖNew==0 ){

4790 
	`osMunm≠
(
pOrig
, 
nReu£
);

4795 if–
pNew
==0 ){

4796 
pNew
 = 
	`osMm≠
(0, 
nNew
, 
Êags
, 
MAP_SHARED
, 
h
, 0);

4799 if–
pNew
==
MAP_FAILED
 ){

4800 
pNew
 = 0;

4801 
nNew
 = 0;

4802 
	`unixLogEº‹
(
SQLITE_OK
, 
zEº
, 
pFd
->
zP©h
);

4807 
pFd
->
mm≠SizeMax
 = 0;

4809 
pFd
->
pM≠Regi⁄
 = (*)
pNew
;

4810 
pFd
->
mm≠Size
 =ÖFd->
mm≠SizeA˘uÆ
 = 
nNew
;

4811 
	}
}

4829 
	$unixM≠fûe
(
unixFûe
 *
pFd
, 
i64
 
nM≠
){

4830 
	`as£π
–
nM≠
>=0 || 
pFd
->
nFëchOut
==0 );

4831 
	`as£π
–
nM≠
>0 || (
pFd
->
mm≠Size
==0 &&ÖFd->
pM≠Regi⁄
==0) );

4832 if–
pFd
->
nFëchOut
>0 )  
SQLITE_OK
;

4834 if–
nM≠
<0 ){

4835 
°©
 
°©buf
;

4836 if–
	`osF°©
(
pFd
->
h
, &
°©buf
) ){

4837  
SQLITE_IOERR_FSTAT
;

4839 
nM≠
 = 
°©buf
.
°_size
;

4841 if–
nM≠
>
pFd
->
mm≠SizeMax
 ){

4842 
nM≠
 = 
pFd
->
mm≠SizeMax
;

4845 
	`as£π
–
nM≠
>0 || (
pFd
->
mm≠Size
==0 &&ÖFd->
pM≠Regi⁄
==0) );

4846 if–
nM≠
!=
pFd
->
mm≠Size
 ){

4847 
	`unixRem≠fûe
(
pFd
, 
nM≠
);

4850  
SQLITE_OK
;

4851 
	}
}

4866 
	$unixFëch
(
sqlôe3_fûe
 *
fd
, 
i64
 
iOff
, 
nAmt
, **
µ
){

4867 #i‡
SQLITE_MAX_MMAP_SIZE
>0

4868 
unixFûe
 *
pFd
 = (unixFûê*)
fd
;

4870 *
µ
 = 0;

4872 #i‡
SQLITE_MAX_MMAP_SIZE
>0

4873 if–
pFd
->
mm≠SizeMax
>0 ){

4874 if–
pFd
->
pM≠Regi⁄
==0 ){

4875 
rc
 = 
	`unixM≠fûe
(
pFd
, -1);

4876 if–
rc
!=
SQLITE_OK
 ) Ñc;

4878 if–
pFd
->
mm≠Size
 >
iOff
+
nAmt
 ){

4879 *
µ
 = &((
u8
 *)
pFd
->
pM≠Regi⁄
)[
iOff
];

4880 
pFd
->
nFëchOut
++;

4884  
SQLITE_OK
;

4885 
	}
}

4897 
	$unixUn„tch
(
sqlôe3_fûe
 *
fd
, 
i64
 
iOff
, *
p
){

4898 #i‡
SQLITE_MAX_MMAP_SIZE
>0

4899 
unixFûe
 *
pFd
 = (unixFûê*)
fd
;

4900 
	`UNUSED_PARAMETER
(
iOff
);

4905 
	`as£π
–(
p
==0)==(
pFd
->
nFëchOut
==0) );

4908 
	`as£π
–
p
==0 ||Ö==&((
u8
 *)
pFd
->
pM≠Regi⁄
)[
iOff
] );

4910 if–
p
 ){

4911 
pFd
->
nFëchOut
--;

4913 
	`unixUnm≠fûe
(
pFd
);

4916 
	`as£π
–
pFd
->
nFëchOut
>=0 );

4918 
	`UNUSED_PARAMETER
(
fd
);

4919 
	`UNUSED_PARAMETER
(
p
);

4920 
	`UNUSED_PARAMETER
(
iOff
);

4922  
SQLITE_OK
;

4923 
	}
}

4965 
	#IOMETHODS
(
FINDER
,
METHOD
,
VERSION
,
CLOSE
,
LOCK
,
UNLOCK
,
CKLOCK
,
SHMMAP
) \

4966 c⁄° 
sqlôe3_io_mëhods
 
METHOD
 = { \

4967 
VERSION
, \

4968 
CLOSE
, \

4969 
unixRód
, \

4970 
unixWrôe
, \

4971 
unixTrunˇã
, \

4972 
unixSync
, \

4973 
unixFûeSize
, \

4974 
LOCK
, \

4975 
UNLOCK
, \

4976 
CKLOCK
, \

4977 
unixFûeC⁄åﬁ
, \

4978 
unixSe˘‹Size
, \

4979 
unixDevi˚Ch¨a˘îi°ics
, \

4980 
SHMMAP
, \

4981 
unixShmLock
, \

4982 
unixShmB¨rõr
, \

4983 
unixShmUnm≠
, \

4984 
unixFëch
, \

4985 
unixUn„tch
, \

4987 c⁄° 
sqlôe3_io_mëhods
 *
FINDER
##
	`Im∂
(c⁄° *
z
, 
unixFûe
 *
p
){ \

4988 
	`UNUSED_PARAMETER
(
z
); UNUSED_PARAMETER(
p
); \

4989  &
METHOD
; \

4991 c⁄° 
sqlôe3_io_mëhods
 *(*c⁄° 
FINDER
)(c⁄° *,
unixFûe
 *
p
) \

4992 
FINDER
##
Im∂
;

	)

4999 
	$IOMETHODS
(

5000 
posixIoFödî
,

5001 
posixIoMëhods
,

5003 
unixClo£
,

5004 
unixLock
,

5005 
unixU∆ock
,

5006 
unixCheckRe£rvedLock
,

5007 
unixShmM≠


5009 
	$IOMETHODS
(

5010 
nﬁockIoFödî
,

5011 
nﬁockIoMëhods
,

5013 
nﬁockClo£
,

5014 
nﬁockLock
,

5015 
nﬁockU∆ock
,

5016 
nﬁockCheckRe£rvedLock
,

5019 
	$IOMETHODS
(

5020 
dŸlockIoFödî
,

5021 
dŸlockIoMëhods
,

5023 
dŸlockClo£
,

5024 
dŸlockLock
,

5025 
dŸlockU∆ock
,

5026 
dŸlockCheckRe£rvedLock
,

5030 #i‡
SQLITE_ENABLE_LOCKING_STYLE


5031 
	$IOMETHODS
(

5032 
ÊockIoFödî
,

5033 
ÊockIoMëhods
,

5035 
ÊockClo£
,

5036 
ÊockLock
,

5037 
ÊockU∆ock
,

5038 
ÊockCheckRe£rvedLock
,

5043 #i‡
OS_VXWORKS


5044 
	$IOMETHODS
(

5045 
£mIoFödî
,

5046 
£mIoMëhods
,

5048 
£mXClo£
,

5049 
£mXLock
,

5050 
£mXU∆ock
,

5051 
£mXCheckRe£rvedLock
,

5056 #i‡
	`deföed
(
__APPLE__
Ë&& 
SQLITE_ENABLE_LOCKING_STYLE


5057 
	$IOMETHODS
(

5058 
aÂIoFödî
,

5059 
aÂIoMëhods
,

5061 
aÂClo£
,

5062 
aÂLock
,

5063 
aÂU∆ock
,

5064 
aÂCheckRe£rvedLock
,

5078 #i‡
	`deföed
(
__APPLE__
Ë&& 
SQLITE_ENABLE_LOCKING_STYLE


5079 
	`¥oxyClo£
(
sqlôe3_fûe
*);

5080 
	`¥oxyLock
(
sqlôe3_fûe
*, );

5081 
	`¥oxyU∆ock
(
sqlôe3_fûe
*, );

5082 
	`¥oxyCheckRe£rvedLock
(
sqlôe3_fûe
*, *);

5083 
	$IOMETHODS
(

5084 
¥oxyIoFödî
,

5085 
¥oxyIoMëhods
,

5087 
¥oxyClo£
,

5088 
¥oxyLock
,

5089 
¥oxyU∆ock
,

5090 
¥oxyCheckRe£rvedLock
,

5096 #i‡
	`deföed
(
__APPLE__
Ë&& 
SQLITE_ENABLE_LOCKING_STYLE


5097 
	$IOMETHODS
(

5098 
nfsIoFödî
,

5099 
nfsIoMëhods
,

5101 
unixClo£
,

5102 
unixLock
,

5103 
nfsU∆ock
,

5104 
unixCheckRe£rvedLock
,

5109 #i‡
	`deföed
(
__APPLE__
Ë&& 
SQLITE_ENABLE_LOCKING_STYLE


5117 c⁄° 
sqlôe3_io_mëhods
 *
	$autﬁockIoFödîIm∂
(

5118 c⁄° *
fûeP©h
,

5119 
unixFûe
 *
pNew


5121 c⁄° 
	sM≠pög
 {

5122 c⁄° *
zFûesy°em
;

5123 c⁄° 
sqlôe3_io_mëhods
 *
pMëhods
;

5124 } 
aM≠
[] = {

5125 { "hfs", &
posixIoMëhods
 },

5126 { "ufs", &
posixIoMëhods
 },

5127 { "aÂfs", &
aÂIoMëhods
 },

5128 { "smbfs", &
aÂIoMëhods
 },

5129 { "webdav", &
nﬁockIoMëhods
 },

5132 
i
;

5133 
°©fs
 
fsInfo
;

5134 
Êock
 
lockInfo
;

5136 if–!
fûeP©h
 ){

5139  &
nﬁockIoMëhods
;

5141 if–
	`°©fs
(
fûeP©h
, &
fsInfo
) != -1 ){

5142 if–
fsInfo
.
f_Êags
 & 
MNT_RDONLY
 ){

5143  &
nﬁockIoMëhods
;

5145 
i
=0; 
aM≠
[i].
zFûesy°em
; i++){

5146 if–
	`°rcmp
(
fsInfo
.
f_f°y≥«me
, 
aM≠
[
i
].
zFûesy°em
)==0 ){

5147  
aM≠
[
i
].
pMëhods
;

5156 
lockInfo
.
l_Àn
 = 1;

5157 
lockInfo
.
l_°¨t
 = 0;

5158 
lockInfo
.
l_whí˚
 = 
SEEK_SET
;

5159 
lockInfo
.
l_ty≥
 = 
F_RDLCK
;

5160 if–
	`osF˙é
(
pNew
->
h
, 
F_GETLK
, &
lockInfo
)!=-1 ) {

5161 if–
	`°rcmp
(
fsInfo
.
f_f°y≥«me
, "nfs")==0 ){

5162  &
nfsIoMëhods
;

5164  &
posixIoMëhods
;

5167  &
dŸlockIoMëhods
;

5169 
	}
}

5170 c⁄° 
	gsqlôe3_io_mëhods


5171 *(*c⁄° 
	gautﬁockIoFödî
)(c⁄° *,
	gunixFûe
*Ë
autﬁockIoFödîIm∂
;

5175 #i‡
OS_VXWORKS


5181 c⁄° 
sqlôe3_io_mëhods
 *
	$vxw‹ksIoFödîIm∂
(

5182 c⁄° *
fûeP©h
,

5183 
unixFûe
 *
pNew


5185 
Êock
 
lockInfo
;

5187 if–!
fûeP©h
 ){

5190  &
nﬁockIoMëhods
;

5196 
lockInfo
.
l_Àn
 = 1;

5197 
lockInfo
.
l_°¨t
 = 0;

5198 
lockInfo
.
l_whí˚
 = 
SEEK_SET
;

5199 
lockInfo
.
l_ty≥
 = 
F_RDLCK
;

5200 if–
	`osF˙é
(
pNew
->
h
, 
F_GETLK
, &
lockInfo
)!=-1 ) {

5201  &
posixIoMëhods
;

5203  &
£mIoMëhods
;

5205 
	}
}

5206 c⁄° 
	gsqlôe3_io_mëhods


5207 *(*c⁄° 
	gvxw‹ksIoFödî
)(c⁄° *,
	gunixFûe
*Ë
vxw‹ksIoFödîIm∂
;

5214 c⁄° 
	tsqlôe3_io_mëhods
 *(*
	tfödî_ty≥
)(c⁄° *,
	tunixFûe
*);

5227 
	$fûlInUnixFûe
(

5228 
sqlôe3_vfs
 *
pVfs
,

5229 
h
,

5230 
sqlôe3_fûe
 *
pId
,

5231 c⁄° *
zFûíame
,

5232 
˘æFœgs


5234 c⁄° 
sqlôe3_io_mëhods
 *
pLockögStyÀ
;

5235 
unixFûe
 *
pNew
 = (unixFûê*)
pId
;

5236 
rc
 = 
SQLITE_OK
;

5238 
	`as£π
–
pNew
->
pInode
==
NULL
 );

5244 #i‡
	`deföed
(
__APPLE__
Ë&& 
SQLITE_ENABLE_LOCKING_STYLE


5245 
	`as£π
–
zFûíame
==0 || zFilename[0]=='/'

5246 || 
pVfs
->
pAµD©a
==(*)&
autﬁockIoFödî
 );

5248 
	`as£π
–
zFûíame
==0 || zFilename[0]=='/' );

5252 
	`as£π
–
zFûíame
!=0 || (
˘æFœgs
 & 
UNIXFILE_NOLOCK
)!=0 );

5254 
	`OSTRACE
(("OPEN %-3d %s\n", 
h
, 
zFûíame
));

5255 
pNew
->
h
 = h;

5256 
pNew
->
pVfs
 =ÖVfs;

5257 
pNew
->
zP©h
 = 
zFûíame
;

5258 
pNew
->
˘æFœgs
 = (
u8
)ctrlFlags;

5259 #i‡
SQLITE_MAX_MMAP_SIZE
>0

5260 
pNew
->
mm≠SizeMax
 = 
sqlôe3GlobÆC⁄fig
.
szMm≠
;

5262 if–
	`sqlôe3_uri_boﬁón
(((
˘æFœgs
 & 
UNIXFILE_URI
Ë? 
zFûíame
 : 0),

5263 "psow", 
SQLITE_POWERSAFE_OVERWRITE
) ){

5264 
pNew
->
˘æFœgs
 |
UNIXFILE_PSOW
;

5266 if–
	`°rcmp
(
pVfs
->
zName
,"unix-excl")==0 ){

5267 
pNew
->
˘æFœgs
 |
UNIXFILE_EXCL
;

5270 #i‡
OS_VXWORKS


5271 
pNew
->
pId
 = 
	`vxw‹ksFödFûeId
(
zFûíame
);

5272 if–
pNew
->
pId
==0 ){

5273 
˘æFœgs
 |
UNIXFILE_NOLOCK
;

5274 
rc
 = 
SQLITE_NOMEM_BKPT
;

5278 if–
˘æFœgs
 & 
UNIXFILE_NOLOCK
 ){

5279 
pLockögStyÀ
 = &
nﬁockIoMëhods
;

5281 
pLockögStyÀ
 = (**(
födî_ty≥
*)
pVfs
->
pAµD©a
)(
zFûíame
, 
pNew
);

5282 #i‡
SQLITE_ENABLE_LOCKING_STYLE


5286 
pNew
->
lockögC⁄ãxt
 = (*)
zFûíame
;

5290 if–
pLockögStyÀ
 =&
posixIoMëhods


5291 #i‡
	`deföed
(
__APPLE__
Ë&& 
SQLITE_ENABLE_LOCKING_STYLE


5292 || 
pLockögStyÀ
 =&
nfsIoMëhods


5295 
	`unixE¡îMuãx
();

5296 
rc
 = 
	`födInodeInfo
(
pNew
, &pNew->
pInode
);

5297 if–
rc
!=
SQLITE_OK
 ){

5316 
	`robu°_˛o£
(
pNew
, 
h
, 
__LINE__
);

5317 
h
 = -1;

5319 
	`unixLóveMuãx
();

5322 #i‡
SQLITE_ENABLE_LOCKING_STYLE
 && 
	`deföed
(
__APPLE__
)

5323 if–
pLockögStyÀ
 =&
aÂIoMëhods
 ){

5327 
aÂLockögC⁄ãxt
 *
pCtx
;

5328 
pNew
->
lockögC⁄ãxt
 = 
pCtx
 = 
	`sqlôe3_mÆloc64
( (*pCtx) );

5329 if–
pCtx
==0 ){

5330 
rc
 = 
SQLITE_NOMEM_BKPT
;

5335 
pCtx
->
dbP©h
 = 
zFûíame
;

5336 
pCtx
->
ª£rved
 = 0;

5337 
	`§™domdev
();

5338 
	`unixE¡îMuãx
();

5339 
rc
 = 
	`födInodeInfo
(
pNew
, &pNew->
pInode
);

5340 if–
rc
!=
SQLITE_OK
 ){

5341 
	`sqlôe3_‰ì
(
pNew
->
lockögC⁄ãxt
);

5342 
	`robu°_˛o£
(
pNew
, 
h
, 
__LINE__
);

5343 
h
 = -1;

5345 
	`unixLóveMuãx
();

5350 if–
pLockögStyÀ
 =&
dŸlockIoMëhods
 ){

5354 *
zLockFûe
;

5355 
nFûíame
;

5356 
	`as£π
–
zFûíame
!=0 );

5357 
nFûíame
 = ()
	`°æí
(
zFûíame
) + 6;

5358 
zLockFûe
 = (*)
	`sqlôe3_mÆloc64
(
nFûíame
);

5359 if–
zLockFûe
==0 ){

5360 
rc
 = 
SQLITE_NOMEM_BKPT
;

5362 
	`sqlôe3_¢¥ötf
(
nFûíame
, 
zLockFûe
, "%s" 
DOTLOCK_SUFFIX
, 
zFûíame
);

5364 
pNew
->
lockögC⁄ãxt
 = 
zLockFûe
;

5367 #i‡
OS_VXWORKS


5368 if–
pLockögStyÀ
 =&
£mIoMëhods
 ){

5372 
	`unixE¡îMuãx
();

5373 
rc
 = 
	`födInodeInfo
(
pNew
, &pNew->
pInode
);

5374 if–(
rc
==
SQLITE_OK
Ë&& (
pNew
->
pInode
->
pSem
==
NULL
) ){

5375 *
zSemName
 = 
pNew
->
pInode
->
aSemName
;

5376 
n
;

5377 
	`sqlôe3_¢¥ötf
(
MAX_PATHNAME
, 
zSemName
, "/%s.sem",

5378 
pNew
->
pId
->
zC™⁄iˇlName
);

5379  
n
=1; 
zSemName
[n];Ç++ )

5380 if–
zSemName
[
n
]=='/' ) zSemName[n] = '_';

5381 
pNew
->
pInode
->
pSem
 = 
	`£m_›í
(
zSemName
, 
O_CREAT
, 0666, 1);

5382 if–
pNew
->
pInode
->
pSem
 =
SEM_FAILED
 ){

5383 
rc
 = 
SQLITE_NOMEM_BKPT
;

5384 
pNew
->
pInode
->
aSemName
[0] = '\0';

5387 
	`unixLóveMuãx
();

5391 
	`°‹eLa°Eºno
(
pNew
, 0);

5392 #i‡
OS_VXWORKS


5393 if–
rc
!=
SQLITE_OK
 ){

5394 if–
h
>=0 ) 
	`robu°_˛o£
(
pNew
, h, 
__LINE__
);

5395 
h
 = -1;

5396 
	`osU∆ök
(
zFûíame
);

5397 
pNew
->
˘æFœgs
 |
UNIXFILE_DELETE
;

5400 if–
rc
!=
SQLITE_OK
 ){

5401 if–
h
>=0 ) 
	`robu°_˛o£
(
pNew
, h, 
__LINE__
);

5403 
pNew
->
pMëhod
 = 
pLockögStyÀ
;

5404 
	`O≥nCou¡î
(+1);

5405 
	`vîifyDbFûe
(
pNew
);

5407  
rc
;

5408 
	}
}

5414 c⁄° *
	$unixTempFûeDú
(){

5415 c⁄° *
azDús
[] = {

5423 
i
 = 0;

5424 
°©
 
buf
;

5425 c⁄° *
zDú
 = 
sqlôe3_ãmp_dúe˘‹y
;

5427 if–!
azDús
[0] )ázDús[0] = 
	`gëív
("SQLITE_TMPDIR");

5428 if–!
azDús
[1] )ázDús[1] = 
	`gëív
("TMPDIR");

5430 if–
zDú
!=0

5431 && 
	`osSèt
(
zDú
, &
buf
)==0

5432 && 
	`S_ISDIR
(
buf
.
°_mode
)

5433 && 
	`osAc˚ss
(
zDú
, 03)==0

5435  
zDú
;

5437 if–
i
>=(
azDús
)/(azDirs[0]) ) ;

5438 
zDú
 = 
azDús
[
i
++];

5441 
	}
}

5448 
	$unixGëTem≤ame
(
nBuf
, *
zBuf
){

5449 c⁄° *
zDú
;

5450 
iLimô
 = 0;

5456 
zBuf
[0] = 0;

5457 
	`SimuœãIOEº‹
– 
SQLITE_IOERR
 );

5459 
zDú
 = 
	`unixTempFûeDú
();

5460 if–
zDú
==0 )  
SQLITE_IOERR_GETTEMPPATH
;

5462 
u64
 
r
;

5463 
	`sqlôe3_øndom√ss
((
r
), &r);

5464 
	`as£π
–
nBuf
>2 );

5465 
zBuf
[
nBuf
-2] = 0;

5466 
	`sqlôe3_¢¥ötf
(
nBuf
, 
zBuf
, "%s/"
SQLITE_TEMP_FILE_PREFIX
"%llx%c",

5467 
zDú
, 
r
, 0);

5468 if–
zBuf
[
nBuf
-2]!=0 || (
iLimô
++)>10 )  
SQLITE_ERROR
;

5469 } 
	`osAc˚ss
(
zBuf
,0)==0 );

5470  
SQLITE_OK
;

5471 
	}
}

5473 #i‡
SQLITE_ENABLE_LOCKING_STYLE
 && 
deföed
(
__APPLE__
)

5479 
¥oxyTønsf‹mUnixFûe
(
unixFûe
*, const *);

5498 
UnixUnu£dFd
 *
	$födReußbÀFd
(c⁄° *
zP©h
, 
Êags
){

5499 
UnixUnu£dFd
 *
pUnu£d
 = 0;

5506 #i‡!
OS_VXWORKS


5507 
°©
 
sSèt
;

5517 if–0==
	`osSèt
(
zP©h
, &
sSèt
) ){

5518 
unixInodeInfo
 *
pInode
;

5520 
	`unixE¡îMuãx
();

5521 
pInode
 = 
öodeLi°
;

5522  
pInode
 && (pInode->
fûeId
.
dev
!=
sSèt
.
°_dev


5523 || 
pInode
->
fûeId
.
öo
!=(
u64
)
sSèt
.
°_öo
) ){

5524 
pInode
 =ÖInode->
pNext
;

5526 if–
pInode
 ){

5527 
UnixUnu£dFd
 **
µ
;

5528 
µ
=&
pInode
->
pUnu£d
; *µ && (*µ)->
Êags
!=Êags;Öp=&((*µ)->
pNext
));

5529 
pUnu£d
 = *
µ
;

5530 if–
pUnu£d
 ){

5531 *
µ
 = 
pUnu£d
->
pNext
;

5534 
	`unixLóveMuãx
();

5537  
pUnu£d
;

5538 
	}
}

5543 
	$gëFûeMode
(

5544 c⁄° *
zFûe
,

5545 
mode_t
 *
pMode
,

5546 
uid_t
 *
pUid
,

5547 
gid_t
 *
pGid


5549 
°©
 
sSèt
;

5550 
rc
 = 
SQLITE_OK
;

5551 if–0==
	`osSèt
(
zFûe
, &
sSèt
) ){

5552 *
pMode
 = 
sSèt
.
°_mode
 & 0777;

5553 *
pUid
 = 
sSèt
.
°_uid
;

5554 *
pGid
 = 
sSèt
.
°_gid
;

5556 
rc
 = 
SQLITE_IOERR_FSTAT
;

5558  
rc
;

5559 
	}
}

5582 
	$födCª©eFûeMode
(

5583 c⁄° *
zP©h
,

5584 
Êags
,

5585 
mode_t
 *
pMode
,

5586 
uid_t
 *
pUid
,

5587 
gid_t
 *
pGid


5589 
rc
 = 
SQLITE_OK
;

5590 *
pMode
 = 0;

5591 *
pUid
 = 0;

5592 *
pGid
 = 0;

5593 if–
Êags
 & (
SQLITE_OPEN_WAL
|
SQLITE_OPEN_MAIN_JOURNAL
) ){

5594 
zDb
[
MAX_PATHNAME
+1];

5595 
nDb
;

5609 
nDb
 = 
	`sqlôe3SåÀn30
(
zP©h
) - 1;

5610  
zP©h
[
nDb
]!='-' ){

5611 #i‚de‡
SQLITE_ENABLE_8_3_NAMES


5614 
	`as£π
–
nDb
>0 );

5615 
	`as£π
–
	`sqlôe3Iß um
(
zP©h
[
nDb
]) );

5619 if–
nDb
==0 || 
zP©h
[nDb]=='.' )  
SQLITE_OK
;

5621 
nDb
--;

5623 
	`mem˝y
(
zDb
, 
zP©h
, 
nDb
);

5624 
zDb
[
nDb
] = '\0';

5626 
rc
 = 
	`gëFûeMode
(
zDb
, 
pMode
, 
pUid
, 
pGid
);

5627 }if–
Êags
 & 
SQLITE_OPEN_DELETEONCLOSE
 ){

5628 *
pMode
 = 0600;

5629 }if–
Êags
 & 
SQLITE_OPEN_URI
 ){

5634 c⁄° *
z
 = 
	`sqlôe3_uri_∑ømëî
(
zP©h
, "modeof");

5635 if–
z
 ){

5636 
rc
 = 
	`gëFûeMode
(
z
, 
pMode
, 
pUid
, 
pGid
);

5639  
rc
;

5640 
	}
}

5664 
	$unixO≥n
(

5665 
sqlôe3_vfs
 *
pVfs
,

5666 c⁄° *
zP©h
,

5667 
sqlôe3_fûe
 *
pFûe
,

5668 
Êags
,

5669 *
pOutFœgs


5671 
unixFûe
 *
p
 = (unixFûê*)
pFûe
;

5672 
fd
 = -1;

5673 
›íFœgs
 = 0;

5674 
eTy≥
 = 
Êags
&0xFFFFFF00;

5675 
noLock
;

5676 
rc
 = 
SQLITE_OK
;

5677 
˘æFœgs
 = 0;

5679 
isEx˛usive
 = (
Êags
 & 
SQLITE_OPEN_EXCLUSIVE
);

5680 
isDñëe
 = (
Êags
 & 
SQLITE_OPEN_DELETEONCLOSE
);

5681 
isCª©e
 = (
Êags
 & 
SQLITE_OPEN_CREATE
);

5682 
isRód⁄ly
 = (
Êags
 & 
SQLITE_OPEN_READONLY
);

5683 
isRódWrôe
 = (
Êags
 & 
SQLITE_OPEN_READWRITE
);

5684 #i‡
SQLITE_ENABLE_LOCKING_STYLE


5685 
isAutoProxy
 = (
Êags
 & 
SQLITE_OPEN_AUTOPROXY
);

5687 #i‡
	`deföed
(
__APPLE__
Ë|| 
SQLITE_ENABLE_LOCKING_STYLE


5688 
°©fs
 
fsInfo
;

5695 
syncDú
 = (
isCª©e
 && (

5696 
eTy≥
==
SQLITE_OPEN_MASTER_JOURNAL


5697 || 
eTy≥
==
SQLITE_OPEN_MAIN_JOURNAL


5698 || 
eTy≥
==
SQLITE_OPEN_WAL


5704 
zTm≤ame
[
MAX_PATHNAME
+2];

5705 c⁄° *
zName
 = 
zP©h
;

5714 
	`as£π
((
isRód⁄ly
==0 || 
isRódWrôe
==0) && (isReadWrite || isReadonly));

5715 
	`as£π
(
isCª©e
==0 || 
isRódWrôe
);

5716 
	`as£π
(
isEx˛usive
==0 || 
isCª©e
);

5717 
	`as£π
(
isDñëe
==0 || 
isCª©e
);

5721 
	`as£π
–(!
isDñëe
 && 
zName
Ë|| 
eTy≥
!=
SQLITE_OPEN_MAIN_DB
 );

5722 
	`as£π
–(!
isDñëe
 && 
zName
Ë|| 
eTy≥
!=
SQLITE_OPEN_MAIN_JOURNAL
 );

5723 
	`as£π
–(!
isDñëe
 && 
zName
Ë|| 
eTy≥
!=
SQLITE_OPEN_MASTER_JOURNAL
 );

5724 
	`as£π
–(!
isDñëe
 && 
zName
Ë|| 
eTy≥
!=
SQLITE_OPEN_WAL
 );

5727 
	`as£π
–
eTy≥
==
SQLITE_OPEN_MAIN_DB
 ||ÉTy≥==
SQLITE_OPEN_TEMP_DB


5728 || 
eTy≥
==
SQLITE_OPEN_MAIN_JOURNAL
 ||ÉTy≥==
SQLITE_OPEN_TEMP_JOURNAL


5729 || 
eTy≥
==
SQLITE_OPEN_SUBJOURNAL
 ||ÉTy≥==
SQLITE_OPEN_MASTER_JOURNAL


5730 || 
eTy≥
==
SQLITE_OPEN_TRANSIENT_DB
 ||ÉTy≥==
SQLITE_OPEN_WAL


5738 if–
øndom√ssPid
!=
	`osGëpid
(0) ){

5739 
øndom√ssPid
 = 
	`osGëpid
(0);

5740 
	`sqlôe3_øndom√ss
(0,0);

5743 
	`mem£t
(
p
, 0, (
unixFûe
));

5745 if–
eTy≥
==
SQLITE_OPEN_MAIN_DB
 ){

5746 
UnixUnu£dFd
 *
pUnu£d
;

5747 
pUnu£d
 = 
	`födReußbÀFd
(
zName
, 
Êags
);

5748 if–
pUnu£d
 ){

5749 
fd
 = 
pUnu£d
->fd;

5751 
pUnu£d
 = 
	`sqlôe3_mÆloc64
((*pUnused));

5752 if–!
pUnu£d
 ){

5753  
SQLITE_NOMEM_BKPT
;

5756 
p
->
pUnu£d
 =ÖUnused;

5761 
	`as£π
–(
Êags
 & 
SQLITE_OPEN_URI
Ë|| 
zName
[
	`°æí
(zName)+1]==0 );

5763 }if–!
zName
 ){

5765 
	`as£π
(
isDñëe
 && !
syncDú
);

5766 
rc
 = 
	`unixGëTem≤ame
(
pVfs
->
mxP©h«me
, 
zTm≤ame
);

5767 if–
rc
!=
SQLITE_OK
 ){

5768  
rc
;

5770 
zName
 = 
zTm≤ame
;

5774 
	`as£π
–
zName
[
	`°æí
(zName)+1]==0 );

5781 if–
isRód⁄ly
 ) 
›íFœgs
 |
O_RDONLY
;

5782 if–
isRódWrôe
 ) 
›íFœgs
 |
O_RDWR
;

5783 if–
isCª©e
 ) 
›íFœgs
 |
O_CREAT
;

5784 if–
isEx˛usive
 ) 
›íFœgs
 |(
O_EXCL
|
O_NOFOLLOW
);

5785 
›íFœgs
 |(
O_LARGEFILE
|
O_BINARY
);

5787 if–
fd
<0 ){

5788 
mode_t
 
›íMode
;

5789 
uid_t
 
uid
;

5790 
gid_t
 
gid
;

5791 
rc
 = 
	`födCª©eFûeMode
(
zName
, 
Êags
, &
›íMode
, &
uid
, &
gid
);

5792 if–
rc
!=
SQLITE_OK
 ){

5793 
	`as£π
–!
p
->
pUnu£d
 );

5794 
	`as£π
–
eTy≥
==
SQLITE_OPEN_WAL
 ||ÉTy≥==
SQLITE_OPEN_MAIN_JOURNAL
 );

5795  
rc
;

5797 
fd
 = 
	`robu°_›í
(
zName
, 
›íFœgs
, 
›íMode
);

5798 
	`OSTRACE
(("OPENX %-3d %†0%o\n", 
fd
, 
zName
, 
›íFœgs
));

5799 
	`as£π
–!
isEx˛usive
 || (
›íFœgs
 & 
O_CREAT
)!=0 );

5800 if–
fd
<0 && 
î∫o
!=
EISDIR
 && 
isRódWrôe
 ){

5802 
Êags
 &~(
SQLITE_OPEN_READWRITE
|
SQLITE_OPEN_CREATE
);

5803 
›íFœgs
 &~(
O_RDWR
|
O_CREAT
);

5804 
Êags
 |
SQLITE_OPEN_READONLY
;

5805 
›íFœgs
 |
O_RDONLY
;

5806 
isRód⁄ly
 = 1;

5807 
fd
 = 
	`robu°_›í
(
zName
, 
›íFœgs
, 
›íMode
);

5809 if–
fd
<0 ){

5810 
rc
 = 
	`unixLogEº‹
(
SQLITE_CANTOPEN_BKPT
, "›í", 
zName
);

5811 
›í_föished
;

5818 if–
Êags
 & (
SQLITE_OPEN_WAL
|
SQLITE_OPEN_MAIN_JOURNAL
) ){

5819 
	`robu°Fchown
(
fd
, 
uid
, 
gid
);

5822 
	`as£π
–
fd
>=0 );

5823 if–
pOutFœgs
 ){

5824 *
pOutFœgs
 = 
Êags
;

5827 if–
p
->
pUnu£d
 ){

5828 
p
->
pUnu£d
->
fd
 = fd;

5829 
p
->
pUnu£d
->
Êags
 = flags;

5832 if–
isDñëe
 ){

5833 #i‡
OS_VXWORKS


5834 
zP©h
 = 
zName
;

5835 #ñi‡
	`deföed
(
SQLITE_UNLINK_AFTER_CLOSE
)

5836 
zP©h
 = 
	`sqlôe3_m¥ötf
("%s", 
zName
);

5837 if–
zP©h
==0 ){

5838 
	`robu°_˛o£
(
p
, 
fd
, 
__LINE__
);

5839  
SQLITE_NOMEM_BKPT
;

5842 
	`osU∆ök
(
zName
);

5845 #i‡
SQLITE_ENABLE_LOCKING_STYLE


5847 
p
->
›íFœgs
 = openFlags;

5851 #i‡
	`deföed
(
__APPLE__
Ë|| 
SQLITE_ENABLE_LOCKING_STYLE


5852 if–
	`f°©fs
(
fd
, &
fsInfo
) == -1 ){

5853 
	`°‹eLa°Eºno
(
p
, 
î∫o
);

5854 
	`robu°_˛o£
(
p
, 
fd
, 
__LINE__
);

5855  
SQLITE_IOERR_ACCESS
;

5857 i‡(0 =
	`°∫cmp
("msdos", 
fsInfo
.
f_f°y≥«me
, 5)) {

5858 ((
unixFûe
*)
pFûe
)->
fsFœgs
 |
SQLITE_FSFLAGS_IS_MSDOS
;

5860 i‡(0 =
	`°∫cmp
("exÁt", 
fsInfo
.
f_f°y≥«me
, 5)) {

5861 ((
unixFûe
*)
pFûe
)->
fsFœgs
 |
SQLITE_FSFLAGS_IS_MSDOS
;

5866 if–
isDñëe
 ) 
˘æFœgs
 |
UNIXFILE_DELETE
;

5867 if–
isRód⁄ly
 ) 
˘æFœgs
 |
UNIXFILE_RDONLY
;

5868 
noLock
 = 
eTy≥
!=
SQLITE_OPEN_MAIN_DB
;

5869 if–
noLock
 ) 
˘æFœgs
 |
UNIXFILE_NOLOCK
;

5870 if–
syncDú
 ) 
˘æFœgs
 |
UNIXFILE_DIRSYNC
;

5871 if–
Êags
 & 
SQLITE_OPEN_URI
 ) 
˘æFœgs
 |
UNIXFILE_URI
;

5873 #i‡
SQLITE_ENABLE_LOCKING_STYLE


5874 #i‡
SQLITE_PREFER_PROXY_LOCKING


5875 
isAutoProxy
 = 1;

5877 if–
isAutoProxy
 && (
zP©h
!=
NULL
Ë&& (!
noLock
Ë&& 
pVfs
->
xO≥n
 ){

5878 *
ívf‹˚
 = 
	`gëív
("SQLITE_FORCE_PROXY_LOCKING");

5879 
u£Proxy
 = 0;

5883 if–
ívf‹˚
!=
NULL
 ){

5884 
u£Proxy
 = 
	`©oi
(
ívf‹˚
)>0;

5886 
u£Proxy
 = !(
fsInfo
.
f_Êags
&
MNT_LOCAL
);

5888 if–
u£Proxy
 ){

5889 
rc
 = 
	`fûlInUnixFûe
(
pVfs
, 
fd
, 
pFûe
, 
zP©h
, 
˘æFœgs
);

5890 if–
rc
==
SQLITE_OK
 ){

5891 
rc
 = 
	`¥oxyTønsf‹mUnixFûe
((
unixFûe
*)
pFûe
, ":auto:");

5892 if–
rc
!=
SQLITE_OK
 ){

5897 
	`unixClo£
(
pFûe
);

5898  
rc
;

5901 
›í_föished
;

5906 
rc
 = 
	`fûlInUnixFûe
(
pVfs
, 
fd
, 
pFûe
, 
zP©h
, 
˘æFœgs
);

5908 
›í_föished
:

5909 if–
rc
!=
SQLITE_OK
 ){

5910 
	`sqlôe3_‰ì
(
p
->
pUnu£d
);

5912  
rc
;

5913 
	}
}

5920 
	$unixDñëe
(

5921 
sqlôe3_vfs
 *
NŸU£d
,

5922 c⁄° *
zP©h
,

5923 
dúSync


5925 
rc
 = 
SQLITE_OK
;

5926 
	`UNUSED_PARAMETER
(
NŸU£d
);

5927 
	`SimuœãIOEº‹
( 
SQLITE_IOERR_DELETE
);

5928 if–
	`osU∆ök
(
zP©h
)==(-1) ){

5929 if–
î∫o
==
ENOENT


5930 #i‡
OS_VXWORKS


5931 || 
	`osAc˚ss
(
zP©h
,0)!=0

5934 
rc
 = 
SQLITE_IOERR_DELETE_NOENT
;

5936 
rc
 = 
	`unixLogEº‹
(
SQLITE_IOERR_DELETE
, "u∆ök", 
zP©h
);

5938  
rc
;

5940 #i‚de‡
SQLITE_DISABLE_DIRSYNC


5941 if–(
dúSync
 & 1)!=0 ){

5942 
fd
;

5943 
rc
 = 
	`osO≥nDúe˘‹y
(
zP©h
, &
fd
);

5944 if–
rc
==
SQLITE_OK
 ){

5945 if–
	`fuŒ_fsync
(
fd
,0,0) ){

5946 
rc
 = 
	`unixLogEº‹
(
SQLITE_IOERR_DIR_FSYNC
, "fsync", 
zP©h
);

5948 
	`robu°_˛o£
(0, 
fd
, 
__LINE__
);

5950 
	`as£π
–
rc
==
SQLITE_CANTOPEN
 );

5951 
rc
 = 
SQLITE_OK
;

5955  
rc
;

5956 
	}
}

5968 
	$unixAc˚ss
(

5969 
sqlôe3_vfs
 *
NŸU£d
,

5970 c⁄° *
zP©h
,

5971 
Êags
,

5972 *
pResOut


5974 
	`UNUSED_PARAMETER
(
NŸU£d
);

5975 
	`SimuœãIOEº‹
– 
SQLITE_IOERR_ACCESS
; );

5976 
	`as£π
–
pResOut
!=0 );

5980 
	`as£π
–
Êags
==
SQLITE_ACCESS_EXISTS
 || fœgs==
SQLITE_ACCESS_READWRITE
 );

5982 if–
Êags
==
SQLITE_ACCESS_EXISTS
 ){

5983 
°©
 
buf
;

5984 *
pResOut
 = (0==
	`osSèt
(
zP©h
, &
buf
Ë&& buf.
°_size
>0);

5986 *
pResOut
 = 
	`osAc˚ss
(
zP©h
, 
W_OK
|
R_OK
)==0;

5988  
SQLITE_OK
;

5989 
	}
}

5994 
	$mkFuŒP©h«me
(

5995 c⁄° *
zP©h
,

5996 *
zOut
,

5997 
nOut


5999 
nP©h
 = 
	`sqlôe3SåÀn30
(
zP©h
);

6000 
iOff
 = 0;

6001 if–
zP©h
[0]!='/' ){

6002 if–
	`osGëcwd
(
zOut
, 
nOut
-2)==0 ){

6003  
	`unixLogEº‹
(
SQLITE_CANTOPEN_BKPT
, "gëcwd", 
zP©h
);

6005 
iOff
 = 
	`sqlôe3SåÀn30
(
zOut
);

6006 
zOut
[
iOff
++] = '/';

6008 if–(
iOff
+
nP©h
+1)>
nOut
 ){

6011 
zOut
[
iOff
] = '\0';

6012  
SQLITE_CANTOPEN_BKPT
;

6014 
	`sqlôe3_¢¥ötf
(
nOut
-
iOff
, &
zOut
[iOff], "%s", 
zP©h
);

6015  
SQLITE_OK
;

6016 
	}
}

6027 
	$unixFuŒP©h«me
(

6028 
sqlôe3_vfs
 *
pVfs
,

6029 c⁄° *
zP©h
,

6030 
nOut
,

6031 *
zOut


6033 #i‡!
	`deföed
(
HAVE_READLINK
Ë|| !deföed(
HAVE_LSTAT
)

6034  
	`mkFuŒP©h«me
(
zP©h
, 
zOut
, 
nOut
);

6036 
rc
 = 
SQLITE_OK
;

6037 
nByã
;

6038 
nLök
 = 1;

6039 c⁄° *
zIn
 = 
zP©h
;

6040 *
zDñ
 = 0;

6042 
	`as£π
–
pVfs
->
mxP©h«me
==
MAX_PATHNAME
 );

6043 
	`UNUSED_PARAMETER
(
pVfs
);

6050 
	`SimuœãIOEº‹
– 
SQLITE_ERROR
 );

6056 
bLök
 = 0;

6057 
°©
 
buf
;

6058 if–
	`osL°©
(
zIn
, &
buf
)!=0 ){

6059 if–
î∫o
!=
ENOENT
 ){

6060 
rc
 = 
	`unixLogEº‹
(
SQLITE_CANTOPEN_BKPT
, "l°©", 
zIn
);

6063 
bLök
 = 
	`S_ISLNK
(
buf
.
°_mode
);

6066 if–
bLök
 ){

6067 if–
zDñ
==0 ){

6068 
zDñ
 = 
	`sqlôe3_mÆloc
(
nOut
);

6069 if–
zDñ
==0 ) 
rc
 = 
SQLITE_NOMEM_BKPT
;

6070 }if–++
nLök
>
SQLITE_MAX_SYMLINKS
 ){

6071 
rc
 = 
SQLITE_CANTOPEN_BKPT
;

6074 if–
rc
==
SQLITE_OK
 ){

6075 
nByã
 = 
	`osRódlök
(
zIn
, 
zDñ
, 
nOut
-1);

6076 if–
nByã
<0 ){

6077 
rc
 = 
	`unixLogEº‹
(
SQLITE_CANTOPEN_BKPT
, "ªadlök", 
zIn
);

6079 if–
zDñ
[0]!='/' ){

6080 
n
;

6081 
n
 = 
	`sqlôe3SåÀn30
(
zIn
);Ç>0 && zIn[n-1]!='/';Ç--);

6082 if–
nByã
+
n
+1>
nOut
 ){

6083 
rc
 = 
SQLITE_CANTOPEN_BKPT
;

6085 
	`memmove
(&
zDñ
[
n
], zDñ, 
nByã
+1);

6086 
	`mem˝y
(
zDñ
, 
zIn
, 
n
);

6087 
nByã
 +
n
;

6090 
zDñ
[
nByã
] = '\0';

6094 
zIn
 = 
zDñ
;

6097 
	`as£π
–
rc
!=
SQLITE_OK
 || 
zIn
!=
zOut
 || zIn[0]=='/' );

6098 if–
rc
==
SQLITE_OK
 && 
zIn
!=
zOut
 ){

6099 
rc
 = 
	`mkFuŒP©h«me
(
zIn
, 
zOut
, 
nOut
);

6101 if–
bLök
==0 ) ;

6102 
zIn
 = 
zOut
;

6103 } 
rc
==
SQLITE_OK
 );

6105 
	`sqlôe3_‰ì
(
zDñ
);

6106  
rc
;

6108 
	}
}

6111 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


6116 
	~<dlf˙.h
>

6117 *
	$unixDlO≥n
(
sqlôe3_vfs
 *
NŸU£d
, c⁄° *
zFûíame
){

6118 
	`UNUSED_PARAMETER
(
NŸU£d
);

6119  
	`dl›í
(
zFûíame
, 
RTLD_NOW
 | 
RTLD_GLOBAL
);

6120 
	}
}

6129 
	$unixDlEº‹
(
sqlôe3_vfs
 *
NŸU£d
, 
nBuf
, *
zBufOut
){

6130 c⁄° *
zEº
;

6131 
	`UNUSED_PARAMETER
(
NŸU£d
);

6132 
	`unixE¡îMuãx
();

6133 
zEº
 = 
	`dÀº‹
();

6134 if–
zEº
 ){

6135 
	`sqlôe3_¢¥ötf
(
nBuf
, 
zBufOut
, "%s", 
zEº
);

6137 
	`unixLóveMuãx
();

6138 
	}
}

6139 (*
	$unixDlSym
(
sqlôe3_vfs
 *
NŸU£d
, *
p
, c⁄° *
zSym
))(){

6157 (*(*
x
)(*,const *))();

6158 
	`UNUSED_PARAMETER
(
NŸU£d
);

6159 
x
 = ((*(*)(*,c⁄° *))())
dlsym
;

6160  (*
x
)(
p
, 
zSym
);

6161 
	}
}

6162 
	$unixDlClo£
(
sqlôe3_vfs
 *
NŸU£d
, *
pH™dÀ
){

6163 
	`UNUSED_PARAMETER
(
NŸU£d
);

6164 
	`dl˛o£
(
pH™dÀ
);

6165 
	}
}

6167 
	#unixDlO≥n
 0

	)

6168 
	#unixDlEº‹
 0

	)

6169 
	#unixDlSym
 0

	)

6170 
	#unixDlClo£
 0

	)

6176 
	$unixR™dom√ss
(
sqlôe3_vfs
 *
NŸU£d
, 
nBuf
, *
zBuf
){

6177 
	`UNUSED_PARAMETER
(
NŸU£d
);

6178 
	`as£π
((
size_t
)
nBuf
>=((
time_t
)+()));

6192 
	`mem£t
(
zBuf
, 0, 
nBuf
);

6193 
øndom√ssPid
 = 
	`osGëpid
(0);

6194 #i‡!
	`deföed
(
SQLITE_TEST
Ë&& !deföed(
SQLITE_OMIT_RANDOMNESS
)

6196 
fd
, 
gŸ
;

6197 
fd
 = 
	`robu°_›í
("/dev/uøndom", 
O_RDONLY
, 0);

6198 if–
fd
<0 ){

6199 
time_t
 
t
;

6200 
	`time
(&
t
);

6201 
	`mem˝y
(
zBuf
, &
t
, (t));

6202 
	`mem˝y
(&
zBuf
[(
t
)], &
øndom√ssPid
, (randomnessPid));

6203 
	`as£π
–(
t
)+(
øndom√ssPid
)<=(
size_t
)
nBuf
 );

6204 
nBuf
 = (
t
Ë+ (
øndom√ssPid
);

6206 do{ 
gŸ
 = 
	`osRód
(
fd
, 
zBuf
, 
nBuf
); } gŸ<0 && 
î∫o
==
EINTR
 );

6207 
	`robu°_˛o£
(0, 
fd
, 
__LINE__
);

6211  
nBuf
;

6212 
	}
}

6223 
	$unixSÀï
(
sqlôe3_vfs
 *
NŸU£d
, 
mi¸o£c⁄ds
){

6224 #i‡
OS_VXWORKS


6225 
time•ec
 
•
;

6227 
•
.
tv_£c
 = 
mi¸o£c⁄ds
 / 1000000;

6228 
•
.
tv_n£c
 = (
mi¸o£c⁄ds
 % 1000000) * 1000;

6229 
	`«no¶ìp
(&
•
, 
NULL
);

6230 
	`UNUSED_PARAMETER
(
NŸU£d
);

6231  
mi¸o£c⁄ds
;

6232 #ñi‡
	`deföed
(
HAVE_USLEEP
) && HAVE_USLEEP

6233 
	`u¶ìp
(
mi¸o£c⁄ds
);

6234 
	`UNUSED_PARAMETER
(
NŸU£d
);

6235  
mi¸o£c⁄ds
;

6237 
£c⁄ds
 = (
mi¸o£c⁄ds
+999999)/1000000;

6238 
	`¶ìp
(
£c⁄ds
);

6239 
	`UNUSED_PARAMETER
(
NŸU£d
);

6240  
£c⁄ds
*1000000;

6242 
	}
}

6249 #ifde‡
SQLITE_TEST


6250 
	gsqlôe3_cuºít_time
 = 0;

6263 
	$unixCuºítTimeI¡64
(
sqlôe3_vfs
 *
NŸU£d
, 
sqlôe3_öt64
 *
piNow
){

6264 c⁄° 
sqlôe3_öt64
 
unixEpoch
 = 24405875*(sqlite3_int64)8640000;

6265 
rc
 = 
SQLITE_OK
;

6266 #i‡
	`deföed
(
NO_GETTOD
)

6267 
time_t
 
t
;

6268 
	`time
(&
t
);

6269 *
piNow
 = ((
sqlôe3_öt64
)
t
)*1000 + 
unixEpoch
;

6270 #ñi‡
OS_VXWORKS


6271 
time•ec
 
sNow
;

6272 
	`˛ock_gëtime
(
CLOCK_REALTIME
, &
sNow
);

6273 *
piNow
 = 
unixEpoch
 + 1000*(
sqlôe3_öt64
)
sNow
.
tv_£c
 + sNow.
tv_n£c
/1000000;

6275 
timevÆ
 
sNow
;

6276 ()
	`gëtimeofday
(&
sNow
, 0);

6277 *
piNow
 = 
unixEpoch
 + 1000*(
sqlôe3_öt64
)
sNow
.
tv_£c
 + sNow.
tv_u£c
/1000;

6280 #ifde‡
SQLITE_TEST


6281 if–
sqlôe3_cuºít_time
 ){

6282 *
piNow
 = 1000*(
sqlôe3_öt64
)
sqlôe3_cuºít_time
 + 
unixEpoch
;

6285 
	`UNUSED_PARAMETER
(
NŸU£d
);

6286  
rc
;

6287 
	}
}

6289 #i‚de‡
SQLITE_OMIT_DEPRECATED


6295 
	$unixCuºítTime
(
sqlôe3_vfs
 *
NŸU£d
, *
¥Now
){

6296 
sqlôe3_öt64
 
i
 = 0;

6297 
rc
;

6298 
	`UNUSED_PARAMETER
(
NŸU£d
);

6299 
rc
 = 
	`unixCuºítTimeI¡64
(0, &
i
);

6300 *
¥Now
 = 
i
/86400000.0;

6301  
rc
;

6302 
	}
}

6304 
	#unixCuºítTime
 0

	)

6313 
	$unixGëLa°Eº‹
(
sqlôe3_vfs
 *
NŸU£d
, 
NŸU£d2
, *
NŸU£d3
){

6314 
	`UNUSED_PARAMETER
(
NŸU£d
);

6315 
	`UNUSED_PARAMETER
(
NŸU£d2
);

6316 
	`UNUSED_PARAMETER
(
NŸU£d3
);

6317  
î∫o
;

6318 
	}
}

6478 #i‡
deföed
(
__APPLE__
Ë&& 
SQLITE_ENABLE_LOCKING_STYLE


6484 
¥oxyLockögC⁄ãxt
 
	t¥oxyLockögC⁄ãxt
;

6485 
	s¥oxyLockögC⁄ãxt
 {

6486 
unixFûe
 *
	mc⁄chFûe
;

6487 *
	mc⁄chFûeP©h
;

6488 
unixFûe
 *
	mlockProxy
;

6489 *
	mlockProxyP©h
;

6490 *
	mdbP©h
;

6491 
	mc⁄chHñd
;

6492 
	mnFaûs
;

6493 *
	mﬁdLockögC⁄ãxt
;

6494 
sqlôe3_io_mëhods
 c⁄° *
	mpOldMëhod
;

6502 
	$¥oxyGëLockP©h
(c⁄° *
dbP©h
, *
lP©h
, 
size_t
 
maxLí
){

6503 
Àn
;

6504 
dbLí
;

6505 
i
;

6507 #ifde‡
LOCKPROXYDIR


6508 
Àn
 = 
	`°æ˝y
(
lP©h
, 
LOCKPROXYDIR
, 
maxLí
);

6510 #ifde‡
_CS_DARWIN_USER_TEMP_DIR


6512 if–!
	`c⁄f°r
(
_CS_DARWIN_USER_TEMP_DIR
, 
lP©h
, 
maxLí
) ){

6513 
	`OSTRACE
(("GETLOCKPATH failed %sÉrrno=%dÖid=%d\n",

6514 
lP©h
, 
î∫o
, 
	`osGëpid
(0)));

6515  
SQLITE_IOERR_LOCK
;

6517 
Àn
 = 
	`°æˇt
(
lP©h
, "sqlôïlocks", 
maxLí
);

6520 
Àn
 = 
	`°æ˝y
(
lP©h
, "/tmp/", 
maxLí
);

6524 if–
lP©h
[
Àn
-1]!='/' ){

6525 
Àn
 = 
	`°æˇt
(
lP©h
, "/", 
maxLí
);

6529 
dbLí
 = ()
	`°æí
(
dbP©h
);

6530  
i
=0; i<
dbLí
 && (i+
Àn
+7)<()
maxLí
; i++){

6531 
c
 = 
dbP©h
[
i
];

6532 
lP©h
[
i
+
Àn
] = (
c
=='/')?'_':c;

6534 
lP©h
[
i
+
Àn
]='\0';

6535 
	`°æˇt
(
lP©h
, ":auto:", 
maxLí
);

6536 
	`OSTRACE
(("GETLOCKPATHÖroxyÜockÖ©h=%†pid=%d\n", 
lP©h
, 
	`osGëpid
(0)));

6537  
SQLITE_OK
;

6538 
	}
}

6543 
	$¥oxyCª©eLockP©h
(c⁄° *
lockP©h
){

6544 
i
, 
Àn
;

6545 
buf
[
MAXPATHLEN
];

6546 
°¨t
 = 0;

6548 
	`as£π
(
lockP©h
!=
NULL
);

6550 
Àn
 = ()
	`°æí
(
lockP©h
);

6551 
buf
[0] = 
lockP©h
[0];

6552  
i
=1; i<
Àn
; i++ ){

6553 if–
lockP©h
[
i
] ='/' && (ò- 
°¨t
 > 0) ){

6555 if–
i
-
°¨t
>2 || (i-°¨t==1 && 
buf
[start] != '.' && buf[start] != '/')

6556 || (
i
-
°¨t
==2 && 
buf
[start] != '.' && buf[start+1] != '.') ){

6557 
buf
[
i
]='\0';

6558 if–
	`osMkdú
(
buf
, 
SQLITE_DEFAULT_PROXYDIR_PERMISSIONS
) ){

6559 
îr
=
î∫o
;

6560 if–
îr
!=
EEXIST
 ) {

6561 
	`OSTRACE
(("CREATELOCKPATH FAILED creating %s, "

6563 
buf
, 
	`°ªº‹
(
îr
), 
lockP©h
, 
	`osGëpid
(0)));

6564  
îr
;

6568 
°¨t
=
i
+1;

6570 
buf
[
i
] = 
lockP©h
[i];

6572 
	`OSTRACE
(("CREATELOCKPATHÖroxyÜockÖ©h=%†pid=%d\n",
lockP©h
,
	`osGëpid
(0)));

6574 
	}
}

6583 
	$¥oxyCª©eUnixFûe
(

6584 c⁄° *
∑th
,

6585 
unixFûe
 **
µFûe
,

6586 
i¶ockfûe


6588 
fd
 = -1;

6589 
unixFûe
 *
pNew
;

6590 
rc
 = 
SQLITE_OK
;

6591 
›íFœgs
 = 
O_RDWR
 | 
O_CREAT
;

6592 
sqlôe3_vfs
 
dummyVfs
;

6593 
ãºno
 = 0;

6594 
UnixUnu£dFd
 *
pUnu£d
 = 
NULL
;

6602 
pUnu£d
 = 
	`födReußbÀFd
(
∑th
, 
›íFœgs
);

6603 if–
pUnu£d
 ){

6604 
fd
 = 
pUnu£d
->fd;

6606 
pUnu£d
 = 
	`sqlôe3_mÆloc64
((*pUnused));

6607 if–!
pUnu£d
 ){

6608  
SQLITE_NOMEM_BKPT
;

6611 if–
fd
<0 ){

6612 
fd
 = 
	`robu°_›í
(
∑th
, 
›íFœgs
, 0);

6613 
ãºno
 = 
î∫o
;

6614 if–
fd
<0 && 
î∫o
==
ENOENT
 && 
i¶ockfûe
 ){

6615 if–
	`¥oxyCª©eLockP©h
(
∑th
Ë=
SQLITE_OK
 ){

6616 
fd
 = 
	`robu°_›í
(
∑th
, 
›íFœgs
, 0);

6620 if–
fd
<0 ){

6621 
›íFœgs
 = 
O_RDONLY
;

6622 
fd
 = 
	`robu°_›í
(
∑th
, 
›íFœgs
, 0);

6623 
ãºno
 = 
î∫o
;

6625 if–
fd
<0 ){

6626 if–
i¶ockfûe
 ){

6627  
SQLITE_BUSY
;

6629 
ãºno
) {

6630 
EACCES
:

6631  
SQLITE_PERM
;

6632 
EIO
:

6633  
SQLITE_IOERR_LOCK
;

6635  
SQLITE_CANTOPEN_BKPT
;

6639 
pNew
 = (
unixFûe
 *)
	`sqlôe3_mÆloc64
((*pNew));

6640 if–
pNew
==
NULL
 ){

6641 
rc
 = 
SQLITE_NOMEM_BKPT
;

6642 
íd_¸óã_¥oxy
;

6644 
	`mem£t
(
pNew
, 0, (
unixFûe
));

6645 
pNew
->
›íFœgs
 = openFlags;

6646 
	`mem£t
(&
dummyVfs
, 0, (dummyVfs));

6647 
dummyVfs
.
pAµD©a
 = (*)&
autﬁockIoFödî
;

6648 
dummyVfs
.
zName
 = "dummy";

6649 
pUnu£d
->
fd
 = fd;

6650 
pUnu£d
->
Êags
 = 
›íFœgs
;

6651 
pNew
->
pUnu£d
 =ÖUnused;

6653 
rc
 = 
	`fûlInUnixFûe
(&
dummyVfs
, 
fd
, (
sqlôe3_fûe
*)
pNew
, 
∑th
, 0);

6654 if–
rc
==
SQLITE_OK
 ){

6655 *
µFûe
 = 
pNew
;

6656  
SQLITE_OK
;

6658 
íd_¸óã_¥oxy
:

6659 
	`robu°_˛o£
(
pNew
, 
fd
, 
__LINE__
);

6660 
	`sqlôe3_‰ì
(
pNew
);

6661 
	`sqlôe3_‰ì
(
pUnu£d
);

6662  
rc
;

6663 
	}
}

6665 #ifde‡
SQLITE_TEST


6667 
	gsqlôe3_ho°id_num
 = 0;

6670 
	#PROXY_HOSTIDLEN
 16

	)

6672 #ifde‡
HAVE_GETHOSTUUID


6674 
gëho°uuid
(
uuid_t
 
id
, c⁄° 
time•ec
 *
waô
);

6680 
	$¥oxyGëHo°ID
(*
pHo°ID
, *
pEº‹
){

6681 
	`as£π
(
PROXY_HOSTIDLEN
 =(
uuid_t
));

6682 
	`mem£t
(
pHo°ID
, 0, 
PROXY_HOSTIDLEN
);

6683 #ifde‡
HAVE_GETHOSTUUID


6685 
time•ec
 
timeout
 = {1, 0};

6686 if–
	`gëho°uuid
(
pHo°ID
, &
timeout
) ){

6687 
îr
 = 
î∫o
;

6688 if–
pEº‹
 ){

6689 *
pEº‹
 = 
îr
;

6691  
SQLITE_IOERR
;

6695 
	`UNUSED_PARAMETER
(
pEº‹
);

6697 #ifde‡
SQLITE_TEST


6699 if–
sqlôe3_ho°id_num
 != 0){

6700 
pHo°ID
[0] = ()’Ho°ID[0] + ()(
sqlôe3_ho°id_num
 & 0xFF));

6704  
SQLITE_OK
;

6705 
	}
}

6709 
	#PROXY_CONCHVERSION
 2

	)

6710 
	#PROXY_HEADERLEN
 1

	)

6711 
	#PROXY_PATHINDEX
 (
PROXY_HEADERLEN
+
PROXY_HOSTIDLEN
)

	)

6712 
	#PROXY_MAXCONCHLEN
 (
PROXY_HEADERLEN
+
PROXY_HOSTIDLEN
+
MAXPATHLEN
)

	)

6720 
	$¥oxyBªakC⁄chLock
(
unixFûe
 *
pFûe
, 
uuid_t
 
myHo°ID
){

6721 
¥oxyLockögC⁄ãxt
 *
pCtx
 = (¥oxyLockögC⁄ãxà*)
pFûe
->
lockögC⁄ãxt
;

6722 
unixFûe
 *
c⁄chFûe
 = 
pCtx
->conchFile;

6723 
tP©h
[
MAXPATHLEN
];

6724 
buf
[
PROXY_MAXCONCHLEN
];

6725 *
cP©h
 = 
pCtx
->
c⁄chFûeP©h
;

6726 
size_t
 
ªadLí
 = 0;

6727 
size_t
 
∑thLí
 = 0;

6728 
îrmsg
[64] = "";

6729 
fd
 = -1;

6730 
rc
 = -1;

6731 
	`UNUSED_PARAMETER
(
myHo°ID
);

6734 
∑thLí
 = 
	`°æ˝y
(
tP©h
, 
cP©h
, 
MAXPATHLEN
);

6735 if–
∑thLí
>
MAXPATHLEN
 ||ÖathLen<6 ||

6736 (
	`°æ˝y
(&
tP©h
[
∑thLí
-5], "break", 6) != 5) ){

6737 
	`sqlôe3_¢¥ötf
((
îrmsg
),îrmsg,"∑thÉº‹ (À¿%d)",()
∑thLí
);

6738 
íd_bªaklock
;

6741 
ªadLí
 = 
	`osPªad
(
c⁄chFûe
->
h
, 
buf
, 
PROXY_MAXCONCHLEN
, 0);

6742 if–
ªadLí
<
PROXY_PATHINDEX
 ){

6743 
	`sqlôe3_¢¥ötf
((
îrmsg
),îrmsg,"ªadÉº‹ (À¿%d)",()
ªadLí
);

6744 
íd_bªaklock
;

6747 
fd
 = 
	`robu°_›í
(
tP©h
, (
O_RDWR
|
O_CREAT
|
O_EXCL
), 0);

6748 if–
fd
<0 ){

6749 
	`sqlôe3_¢¥ötf
((
îrmsg
),Éºmsg, "¸óã faûed (%d)", 
î∫o
);

6750 
íd_bªaklock
;

6752 if–
	`osPwrôe
(
fd
, 
buf
, 
ªadLí
, 0Ë!(
ssize_t
)readLen ){

6753 
	`sqlôe3_¢¥ötf
((
îrmsg
),Éºmsg, "wrôêÁûed (%d)", 
î∫o
);

6754 
íd_bªaklock
;

6756 if–
	`ª«me
(
tP©h
, 
cP©h
) ){

6757 
	`sqlôe3_¢¥ötf
((
îrmsg
),Éºmsg, "ª«mêÁûed (%d)", 
î∫o
);

6758 
íd_bªaklock
;

6760 
rc
 = 0;

6761 
	`Ârötf
(
°dîr
, "brokê°Æêlock o¿%s\n", 
cP©h
);

6762 
	`robu°_˛o£
(
pFûe
, 
c⁄chFûe
->
h
, 
__LINE__
);

6763 
c⁄chFûe
->
h
 = 
fd
;

6764 
c⁄chFûe
->
›íFœgs
 = 
O_RDWR
 | 
O_CREAT
;

6766 
íd_bªaklock
:

6767 if–
rc
 ){

6768 if–
fd
>=0 ){

6769 
	`osU∆ök
(
tP©h
);

6770 
	`robu°_˛o£
(
pFûe
, 
fd
, 
__LINE__
);

6772 
	`Ârötf
(
°dîr
, "ÁûedÅÿbªak sèÀÜock o¿%s, %s\n", 
cP©h
, 
îrmsg
);

6774  
rc
;

6775 
	}
}

6780 
	$¥oxyC⁄chLock
(
unixFûe
 *
pFûe
, 
uuid_t
 
myHo°ID
, 
lockTy≥
){

6781 
¥oxyLockögC⁄ãxt
 *
pCtx
 = (¥oxyLockögC⁄ãxà*)
pFûe
->
lockögC⁄ãxt
;

6782 
unixFûe
 *
c⁄chFûe
 = 
pCtx
->conchFile;

6783 
rc
 = 
SQLITE_OK
;

6784 
nTrõs
 = 0;

6785 
time•ec
 
c⁄chModTime
;

6787 
	`mem£t
(&
c⁄chModTime
, 0, (conchModTime));

6789 
rc
 = 
c⁄chFûe
->
pMëhod
->
	`xLock
((
sqlôe3_fûe
*)c⁄chFûe, 
lockTy≥
);

6790 
nTrõs
 ++;

6791 if–
rc
==
SQLITE_BUSY
 ){

6798 
°©
 
buf
;

6799 if–
	`osF°©
(
c⁄chFûe
->
h
, &
buf
) ){

6800 
	`°‹eLa°Eºno
(
pFûe
, 
î∫o
);

6801  
SQLITE_IOERR_LOCK
;

6804 if–
nTrõs
==1 ){

6805 
c⁄chModTime
 = 
buf
.
°_mtime•ec
;

6806 
	`u¶ìp
(500000);

6810 
	`as£π
–
nTrõs
>1 );

6811 if–
c⁄chModTime
.
tv_£c
 !
buf
.
°_mtime•ec
.tv_sec ||

6812 
c⁄chModTime
.
tv_n£c
 !
buf
.
°_mtime•ec
.tv_nsec ){

6813  
SQLITE_BUSY
;

6816 if–
nTrõs
==2 ){

6817 
tBuf
[
PROXY_MAXCONCHLEN
];

6818 
Àn
 = 
	`osPªad
(
c⁄chFûe
->
h
, 
tBuf
, 
PROXY_MAXCONCHLEN
, 0);

6819 if–
Àn
<0 ){

6820 
	`°‹eLa°Eºno
(
pFûe
, 
î∫o
);

6821  
SQLITE_IOERR_LOCK
;

6823 if–
Àn
>
PROXY_PATHINDEX
 && 
tBuf
[0]==()
PROXY_CONCHVERSION
){

6825 if–0!=
	`memcmp
(&
tBuf
[
PROXY_HEADERLEN
], 
myHo°ID
, 
PROXY_HOSTIDLEN
) ){

6826  
SQLITE_BUSY
;

6830  
SQLITE_BUSY
;

6832 
	`u¶ìp
(10000000);

6836 
	`as£π
–
nTrõs
==3 );

6837 if–0==
	`¥oxyBªakC⁄chLock
(
pFûe
, 
myHo°ID
) ){

6838 
rc
 = 
SQLITE_OK
;

6839 if–
lockTy≥
==
EXCLUSIVE_LOCK
 ){

6840 
rc
 = 
c⁄chFûe
->
pMëhod
->
	`xLock
((
sqlôe3_fûe
*)c⁄chFûe, 
SHARED_LOCK
);

6842 if–!
rc
 ){

6843 
rc
 = 
c⁄chFûe
->
pMëhod
->
	`xLock
((
sqlôe3_fûe
*)c⁄chFûe, 
lockTy≥
);

6847 }  
rc
==
SQLITE_BUSY
 && 
nTrõs
<3 );

6849  
rc
;

6850 
	}
}

6858 
	$¥oxyTakeC⁄ch
(
unixFûe
 *
pFûe
){

6859 
¥oxyLockögC⁄ãxt
 *
pCtx
 = (¥oxyLockögC⁄ãxà*)
pFûe
->
lockögC⁄ãxt
;

6861 if–
pCtx
->
c⁄chHñd
!=0 ){

6862  
SQLITE_OK
;

6864 
unixFûe
 *
c⁄chFûe
 = 
pCtx
->conchFile;

6865 
uuid_t
 
myHo°ID
;

6866 
pEº‹
 = 0;

6867 
ªadBuf
[
PROXY_MAXCONCHLEN
];

6868 
lockP©h
[
MAXPATHLEN
];

6869 *
ãmpLockP©h
 = 
NULL
;

6870 
rc
 = 
SQLITE_OK
;

6871 
¸óãC⁄ch
 = 0;

6872 
ho°IdM©ch
 = 0;

6873 
ªadLí
 = 0;

6874 
åyOldLockP©h
 = 0;

6875 
f‹˚NewLockP©h
 = 0;

6877 
	`OSTRACE
(("TAKECONCH %d f‹ %†pid=%d\n", 
c⁄chFûe
->
h
,

6878 (
pCtx
->
lockProxyP©h
 ?ÖCtx->lockProxyPath : ":auto:"),

6879 
	`osGëpid
(0)));

6881 
rc
 = 
	`¥oxyGëHo°ID
(
myHo°ID
, &
pEº‹
);

6882 if–(
rc
&0xff)==
SQLITE_IOERR
 ){

6883 
	`°‹eLa°Eºno
(
pFûe
, 
pEº‹
);

6884 
íd_èkec⁄ch
;

6886 
rc
 = 
	`¥oxyC⁄chLock
(
pFûe
, 
myHo°ID
, 
SHARED_LOCK
);

6887 if–
rc
!=
SQLITE_OK
 ){

6888 
íd_èkec⁄ch
;

6891 
ªadLí
 = 
	`£ekAndRód
((
unixFûe
*)
c⁄chFûe
, 0, 
ªadBuf
, 
PROXY_MAXCONCHLEN
);

6892 if–
ªadLí
<0 ){

6894 
	`°‹eLa°Eºno
(
pFûe
, 
c⁄chFûe
->
œ°Eºno
);

6895 
rc
 = 
SQLITE_IOERR_READ
;

6896 
íd_èkec⁄ch
;

6897 }if–
ªadLí
<=(
PROXY_HEADERLEN
+
PROXY_HOSTIDLEN
) ||

6898 
ªadBuf
[0]!=()
PROXY_CONCHVERSION
 ){

6902 
¸óãC⁄ch
 = 1;

6910 if–!
¸óãC⁄ch
 && !
f‹˚NewLockP©h
 ){

6911 
ho°IdM©ch
 = !
	`memcmp
(&
ªadBuf
[
PROXY_HEADERLEN
], 
myHo°ID
,

6912 
PROXY_HOSTIDLEN
);

6914 if–!
pCtx
->
lockProxyP©h
 ){

6918 if–
ho°IdM©ch
 ){

6919 
size_t
 
∑thLí
 = (
ªadLí
 - 
PROXY_PATHINDEX
);

6921 if–
∑thLí
>=
MAXPATHLEN
 ){

6922 
∑thLí
=
MAXPATHLEN
-1;

6924 
	`mem˝y
(
lockP©h
, &
ªadBuf
[
PROXY_PATHINDEX
], 
∑thLí
);

6925 
lockP©h
[
∑thLí
] = 0;

6926 
ãmpLockP©h
 = 
lockP©h
;

6927 
åyOldLockP©h
 = 1;

6929 
íd_èkec⁄ch
;

6931 }if–
ho°IdM©ch


6932 && !
	`°∫cmp
(
pCtx
->
lockProxyP©h
, &
ªadBuf
[
PROXY_PATHINDEX
],

6933 
ªadLí
-
PROXY_PATHINDEX
)

6936 
íd_èkec⁄ch
;

6941 if–(
c⁄chFûe
->
›íFœgs
&
O_RDWR
) == 0 ){

6942 
rc
 = 
SQLITE_BUSY
;

6943 
íd_èkec⁄ch
;

6947 if–!
pCtx
->
lockProxyP©h
 ){

6948 
	`¥oxyGëLockP©h
(
pCtx
->
dbP©h
, 
lockP©h
, 
MAXPATHLEN
);

6949 
ãmpLockP©h
 = 
lockP©h
;

6957 
	`futimes
(
c⁄chFûe
->
h
, 
NULL
);

6958 if–
ho°IdM©ch
 && !
¸óãC⁄ch
 ){

6959 if–
c⁄chFûe
->
pInode
 && c⁄chFûe->pInode->
nSh¨ed
>1 ){

6962 
rc
 = 
SQLITE_BUSY
;

6964 
rc
 = 
	`¥oxyC⁄chLock
(
pFûe
, 
myHo°ID
, 
EXCLUSIVE_LOCK
);

6967 
rc
 = 
	`¥oxyC⁄chLock
(
pFûe
, 
myHo°ID
, 
EXCLUSIVE_LOCK
);

6969 if–
rc
==
SQLITE_OK
 ){

6970 
wrôeBuf„r
[
PROXY_MAXCONCHLEN
];

6971 
wrôeSize
 = 0;

6973 
wrôeBuf„r
[0] = ()
PROXY_CONCHVERSION
;

6974 
	`mem˝y
(&
wrôeBuf„r
[
PROXY_HEADERLEN
], 
myHo°ID
, 
PROXY_HOSTIDLEN
);

6975 if–
pCtx
->
lockProxyP©h
!=
NULL
 ){

6976 
	`°æ˝y
(&
wrôeBuf„r
[
PROXY_PATHINDEX
], 
pCtx
->
lockProxyP©h
,

6977 
MAXPATHLEN
);

6979 
	`°æ˝y
(&
wrôeBuf„r
[
PROXY_PATHINDEX
], 
ãmpLockP©h
, 
MAXPATHLEN
);

6981 
wrôeSize
 = 
PROXY_PATHINDEX
 + 
	`°æí
(&
wrôeBuf„r
[PROXY_PATHINDEX]);

6982 
	`robu°_·runˇã
(
c⁄chFûe
->
h
, 
wrôeSize
);

6983 
rc
 = 
	`unixWrôe
((
sqlôe3_fûe
 *)
c⁄chFûe
, 
wrôeBuf„r
, 
wrôeSize
, 0);

6984 
	`fuŒ_fsync
(
c⁄chFûe
->
h
,0,0);

6988 if–
rc
==
SQLITE_OK
 && 
¸óãC⁄ch
 ){

6989 
°©
 
buf
;

6990 
îr
 = 
	`osF°©
(
pFûe
->
h
, &
buf
);

6991 if–
îr
==0 ){

6992 
mode_t
 
cmode
 = 
buf
.
°_mode
&(
S_IRUSR
|
S_IWUSR
 | 
S_IRGRP
|
S_IWGRP
 |

6993 
S_IROTH
|
S_IWOTH
);

6995 #i‚de‡
SQLITE_PROXY_DEBUG


6996 
	`osFchmod
(
c⁄chFûe
->
h
, 
cmode
);

6999 
rc
 = 
	`osFchmod
(
c⁄chFûe
->
h
, 
cmode
);

7000 } 
rc
==(-1Ë&& 
î∫o
==
EINTR
 );

7001 if–
rc
!=0 ){

7002 
code
 = 
î∫o
;

7003 
	`Ârötf
(
°dîr
, "fchmod %o FAILED with %d %s\n",

7004 
cmode
, 
code
, 
	`°ªº‹
(code));

7006 
	`Ârötf
(
°dîr
, "fchmod %ÿSUCCEDED\n",
cmode
);

7009 
code
 = 
î∫o
;

7010 
	`Ârötf
(
°dîr
, "STAT FAILED[%d] with %d %s\n",

7011 
îr
, 
code
, 
	`°ªº‹
(code));

7016 
c⁄chFûe
->
pMëhod
->
	`xU∆ock
((
sqlôe3_fûe
*)c⁄chFûe, 
SHARED_LOCK
);

7018 
íd_èkec⁄ch
:

7019 
	`OSTRACE
(("TRANSPROXY: CLOSE %d\n", 
pFûe
->
h
));

7020 if–
rc
==
SQLITE_OK
 && 
pFûe
->
›íFœgs
 ){

7021 
fd
;

7022 if–
pFûe
->
h
>=0 ){

7023 
	`robu°_˛o£
(
pFûe
,ÖFûe->
h
, 
__LINE__
);

7025 
pFûe
->
h
 = -1;

7026 
fd
 = 
	`robu°_›í
(
pCtx
->
dbP©h
, 
pFûe
->
›íFœgs
, 0);

7027 
	`OSTRACE
(("TRANSPROXY: OPEN %d\n", 
fd
));

7028 if–
fd
>=0 ){

7029 
pFûe
->
h
 = 
fd
;

7031 
rc
=
SQLITE_CANTOPEN_BKPT
;

7035 if–
rc
==
SQLITE_OK
 && !
pCtx
->
lockProxy
 ){

7036 *
∑th
 = 
ãmpLockP©h
 ?ÅempLockP©h : 
pCtx
->
lockProxyP©h
;

7037 
rc
 = 
	`¥oxyCª©eUnixFûe
(
∑th
, &
pCtx
->
lockProxy
, 1);

7038 if–
rc
!=
SQLITE_OK
 &&Ñc!=
SQLITE_NOMEM
 && 
åyOldLockP©h
 ){

7042 
f‹˚NewLockP©h
 = 1;

7043 
åyOldLockP©h
 = 0;

7047 if–
rc
==
SQLITE_OK
 ){

7051 if–
ãmpLockP©h
 ){

7052 
pCtx
->
lockProxyP©h
 = 
	`sqlôe3DbSåDup
(0, 
ãmpLockP©h
);

7053 if–!
pCtx
->
lockProxyP©h
 ){

7054 
rc
 = 
SQLITE_NOMEM_BKPT
;

7058 if–
rc
==
SQLITE_OK
 ){

7059 
pCtx
->
c⁄chHñd
 = 1;

7061 if–
pCtx
->
lockProxy
->
pMëhod
 =&
aÂIoMëhods
 ){

7062 
aÂLockögC⁄ãxt
 *
aÂCtx
;

7063 
aÂCtx
 = (
aÂLockögC⁄ãxt
 *)
pCtx
->
lockProxy
->
lockögC⁄ãxt
;

7064 
aÂCtx
->
dbP©h
 = 
pCtx
->
lockProxyP©h
;

7067 
c⁄chFûe
->
pMëhod
->
	`xU∆ock
((
sqlôe3_fûe
*)c⁄chFûe, 
NO_LOCK
);

7069 
	`OSTRACE
(("TAKECONCH %d %s\n", 
c⁄chFûe
->
h
,

7070 
rc
==
SQLITE_OK
?"ok":"failed"));

7071  
rc
;

7075 
	}
}

7080 
	$¥oxyRñó£C⁄ch
(
unixFûe
 *
pFûe
){

7081 
rc
 = 
SQLITE_OK
;

7082 
¥oxyLockögC⁄ãxt
 *
pCtx
;

7083 
unixFûe
 *
c⁄chFûe
;

7085 
pCtx
 = (
¥oxyLockögC⁄ãxt
 *)
pFûe
->
lockögC⁄ãxt
;

7086 
c⁄chFûe
 = 
pCtx
->conchFile;

7087 
	`OSTRACE
(("RELEASECONCH %d f‹ %†pid=%d\n", 
c⁄chFûe
->
h
,

7088 (
pCtx
->
lockProxyP©h
 ?ÖCtx->lockProxyPath : ":auto:"),

7089 
	`osGëpid
(0)));

7090 if–
pCtx
->
c⁄chHñd
>0 ){

7091 
rc
 = 
c⁄chFûe
->
pMëhod
->
	`xU∆ock
((
sqlôe3_fûe
*)c⁄chFûe, 
NO_LOCK
);

7093 
pCtx
->
c⁄chHñd
 = 0;

7094 
	`OSTRACE
(("RELEASECONCH %d %s\n", 
c⁄chFûe
->
h
,

7095 (
rc
==
SQLITE_OK
 ? "ok" : "failed")));

7096  
rc
;

7097 
	}
}

7110 
	$¥oxyCª©eC⁄chP©h«me
(*
dbP©h
, **
pC⁄chP©h
){

7111 
i
;

7112 
Àn
 = ()
	`°æí
(
dbP©h
);

7113 *
c⁄chP©h
;

7117 *
pC⁄chP©h
 = 
c⁄chP©h
 = (*)
	`sqlôe3_mÆloc64
(
Àn
 + 8);

7118 if–
c⁄chP©h
==0 ){

7119  
SQLITE_NOMEM_BKPT
;

7121 
	`mem˝y
(
c⁄chP©h
, 
dbP©h
, 
Àn
+1);

7124  
i
=(
Àn
-1); i>=0; i-- ){

7125 if–
c⁄chP©h
[
i
]=='/' ){

7126 
i
++;

7130 
c⁄chP©h
[
i
]='.';

7131  
i
<
Àn
 ){

7132 
c⁄chP©h
[
i
+1]=
dbP©h
[i];

7133 
i
++;

7137 
	`mem˝y
(&
c⁄chP©h
[
i
+1], "-conch", 7);

7138 
	`as£π
–()
	`°æí
(
c⁄chP©h
Ë=
Àn
+7 );

7140  
SQLITE_OK
;

7141 
	}
}

7147 
	$swôchLockProxyP©h
(
unixFûe
 *
pFûe
, c⁄° *
∑th
) {

7148 
¥oxyLockögC⁄ãxt
 *
pCtx
 = (¥oxyLockögC⁄ãxt*)
pFûe
->
lockögC⁄ãxt
;

7149 *
ﬁdP©h
 = 
pCtx
->
lockProxyP©h
;

7150 
rc
 = 
SQLITE_OK
;

7152 if–
pFûe
->
eFûeLock
!=
NO_LOCK
 ){

7153  
SQLITE_BUSY
;

7157 if–!
∑th
 ||Ö©h[0]=='\0' || !
	`°rcmp
(path, ":auto:") ||

7158 (
ﬁdP©h
 && !
	`°∫cmp
(ﬁdP©h, 
∑th
, 
MAXPATHLEN
)) ){

7159  
SQLITE_OK
;

7161 
unixFûe
 *
lockProxy
 = 
pCtx
->lockProxy;

7162 
pCtx
->
lockProxy
=
NULL
;

7163 
pCtx
->
c⁄chHñd
 = 0;

7164 if–
lockProxy
!=
NULL
 ){

7165 
rc
=
lockProxy
->
pMëhod
->
	`xClo£
((
sqlôe3_fûe
 *)lockProxy);

7166 if–
rc
 ) Ñc;

7167 
	`sqlôe3_‰ì
(
lockProxy
);

7169 
	`sqlôe3_‰ì
(
ﬁdP©h
);

7170 
pCtx
->
lockProxyP©h
 = 
	`sqlôe3DbSåDup
(0, 
∑th
);

7173  
rc
;

7174 
	}
}

7183 
	$¥oxyGëDbP©hF‹UnixFûe
(
unixFûe
 *
pFûe
, *
dbP©h
){

7184 #i‡
	`deföed
(
__APPLE__
)

7185 if–
pFûe
->
pMëhod
 =&
aÂIoMëhods
 ){

7188 
	`as£π
–()
	`°æí
((*)
pFûe
->
lockögC⁄ãxt
)<=
MAXPATHLEN
 );

7189 
	`°æ˝y
(
dbP©h
, ((
aÂLockögC⁄ãxt
 *)
pFûe
->
lockögC⁄ãxt
)->dbPath,

7190 
MAXPATHLEN
);

7193 if–
pFûe
->
pMëhod
 =&
dŸlockIoMëhods
 ){

7196 
Àn
 = 
	`°æí
((*)
pFûe
->
lockögC⁄ãxt
Ë- såÀn(
DOTLOCK_SUFFIX
);

7197 
	`mem˝y
(
dbP©h
, (*)
pFûe
->
lockögC⁄ãxt
, 
Àn
 + 1);

7200 
	`as£π
–
	`°æí
((*)
pFûe
->
lockögC⁄ãxt
)<=
MAXPATHLEN
 );

7201 
	`°æ˝y
(
dbP©h
, (*)
pFûe
->
lockögC⁄ãxt
, 
MAXPATHLEN
);

7203  
SQLITE_OK
;

7204 
	}
}

7214 
	$¥oxyTønsf‹mUnixFûe
(
unixFûe
 *
pFûe
, c⁄° *
∑th
) {

7215 
¥oxyLockögC⁄ãxt
 *
pCtx
;

7216 
dbP©h
[
MAXPATHLEN
+1];

7217 *
lockP©h
=
NULL
;

7218 
rc
 = 
SQLITE_OK
;

7220 if–
pFûe
->
eFûeLock
!=
NO_LOCK
 ){

7221  
SQLITE_BUSY
;

7223 
	`¥oxyGëDbP©hF‹UnixFûe
(
pFûe
, 
dbP©h
);

7224 if–!
∑th
 ||Ö©h[0]=='\0' || !
	`°rcmp
(path, ":auto:") ){

7225 
lockP©h
=
NULL
;

7227 
lockP©h
=(*)
∑th
;

7230 
	`OSTRACE
(("TRANSPROXY %d f‹ %†pid=%d\n", 
pFûe
->
h
,

7231 (
lockP©h
 ?ÜockP©h : ":auto:"), 
	`osGëpid
(0)));

7233 
pCtx
 = 
	`sqlôe3_mÆloc64
( (*pCtx) );

7234 if–
pCtx
==0 ){

7235  
SQLITE_NOMEM_BKPT
;

7237 
	`mem£t
(
pCtx
, 0, (*pCtx));

7239 
rc
 = 
	`¥oxyCª©eC⁄chP©h«me
(
dbP©h
, &
pCtx
->
c⁄chFûeP©h
);

7240 if–
rc
==
SQLITE_OK
 ){

7241 
rc
 = 
	`¥oxyCª©eUnixFûe
(
pCtx
->
c⁄chFûeP©h
, &pCtx->
c⁄chFûe
, 0);

7242 if–
rc
==
SQLITE_CANTOPEN
 && ((
pFûe
->
›íFœgs
&
O_RDWR
) == 0) ){

7248 
°©fs
 
fsInfo
;

7249 
°©
 
c⁄chInfo
;

7250 
goLockÀss
 = 0;

7252 if–
	`osSèt
(
pCtx
->
c⁄chFûeP©h
, &
c⁄chInfo
) == -1 ) {

7253 
îr
 = 
î∫o
;

7254 if–(
îr
==
ENOENT
Ë&& (
	`°©fs
(
dbP©h
, &
fsInfo
) != -1) ){

7255 
goLockÀss
 = (
fsInfo
.
f_Êags
&
MNT_RDONLY
) == MNT_RDONLY;

7258 if–
goLockÀss
 ){

7259 
pCtx
->
c⁄chHñd
 = -1;

7260 
rc
 = 
SQLITE_OK
;

7264 if–
rc
==
SQLITE_OK
 && 
lockP©h
 ){

7265 
pCtx
->
lockProxyP©h
 = 
	`sqlôe3DbSåDup
(0, 
lockP©h
);

7268 if–
rc
==
SQLITE_OK
 ){

7269 
pCtx
->
dbP©h
 = 
	`sqlôe3DbSåDup
(0, dbPath);

7270 if–
pCtx
->
dbP©h
==
NULL
 ){

7271 
rc
 = 
SQLITE_NOMEM_BKPT
;

7274 if–
rc
==
SQLITE_OK
 ){

7278 
pCtx
->
ﬁdLockögC⁄ãxt
 = 
pFûe
->
lockögC⁄ãxt
;

7279 
pFûe
->
lockögC⁄ãxt
 = 
pCtx
;

7280 
pCtx
->
pOldMëhod
 = 
pFûe
->
pMëhod
;

7281 
pFûe
->
pMëhod
 = &
¥oxyIoMëhods
;

7283 if–
pCtx
->
c⁄chFûe
 ){

7284 
pCtx
->
c⁄chFûe
->
pMëhod
->
	`xClo£
((
sqlôe3_fûe
 *)pCtx->conchFile);

7285 
	`sqlôe3_‰ì
(
pCtx
->
c⁄chFûe
);

7287 
	`sqlôe3DbFªe
(0, 
pCtx
->
lockProxyP©h
);

7288 
	`sqlôe3_‰ì
(
pCtx
->
c⁄chFûeP©h
);

7289 
	`sqlôe3_‰ì
(
pCtx
);

7291 
	`OSTRACE
(("TRANSPROXY %d %s\n", 
pFûe
->
h
,

7292 (
rc
==
SQLITE_OK
 ? "ok" : "failed")));

7293  
rc
;

7294 
	}
}

7301 
	$¥oxyFûeC⁄åﬁ
(
sqlôe3_fûe
 *
id
, 
›
, *
pArg
){

7302  
›
 ){

7303 
SQLITE_FCNTL_GET_LOCKPROXYFILE
: {

7304 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

7305 if–
pFûe
->
pMëhod
 =&
¥oxyIoMëhods
 ){

7306 
¥oxyLockögC⁄ãxt
 *
pCtx
 = (¥oxyLockögC⁄ãxt*)
pFûe
->
lockögC⁄ãxt
;

7307 
	`¥oxyTakeC⁄ch
(
pFûe
);

7308 if–
pCtx
->
lockProxyP©h
 ){

7309 *(c⁄° **)
pArg
 = 
pCtx
->
lockProxyP©h
;

7311 *(c⁄° **)
pArg
 = ":auto: (not held)";

7314 *(c⁄° **)
pArg
 = 
NULL
;

7316  
SQLITE_OK
;

7318 
SQLITE_FCNTL_SET_LOCKPROXYFILE
: {

7319 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

7320 
rc
 = 
SQLITE_OK
;

7321 
isProxyStyÀ
 = (
pFûe
->
pMëhod
 =&
¥oxyIoMëhods
);

7322 if–
pArg
==
NULL
 || (const *)pArg==0 ){

7323 if–
isProxyStyÀ
 ){

7328 
rc
 = 
SQLITE_ERROR
 ;

7331 
rc
 = 
SQLITE_OK
;

7334 c⁄° *
¥oxyP©h
 = (c⁄° *)
pArg
;

7335 if–
isProxyStyÀ
 ){

7336 
¥oxyLockögC⁄ãxt
 *
pCtx
 =

7337 (
¥oxyLockögC⁄ãxt
*)
pFûe
->
lockögC⁄ãxt
;

7338 if–!
	`°rcmp
(
pArg
, ":auto:")

7339 || (
pCtx
->
lockProxyP©h
 &&

7340 !
	`°∫cmp
(
pCtx
->
lockProxyP©h
, 
¥oxyP©h
, 
MAXPATHLEN
))

7342 
rc
 = 
SQLITE_OK
;

7344 
rc
 = 
	`swôchLockProxyP©h
(
pFûe
, 
¥oxyP©h
);

7348 
rc
 = 
	`¥oxyTønsf‹mUnixFûe
(
pFûe
, 
¥oxyP©h
);

7351  
rc
;

7354 
	`as£π
( 0 );

7358  
SQLITE_ERROR
;

7359 
	}
}

7374 
	$¥oxyCheckRe£rvedLock
(
sqlôe3_fûe
 *
id
, *
pResOut
) {

7375 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

7376 
rc
 = 
	`¥oxyTakeC⁄ch
(
pFûe
);

7377 if–
rc
==
SQLITE_OK
 ){

7378 
¥oxyLockögC⁄ãxt
 *
pCtx
 = (¥oxyLockögC⁄ãxà*)
pFûe
->
lockögC⁄ãxt
;

7379 if–
pCtx
->
c⁄chHñd
>0 ){

7380 
unixFûe
 *
¥oxy
 = 
pCtx
->
lockProxy
;

7381  
¥oxy
->
pMëhod
->
	`xCheckRe£rvedLock
((
sqlôe3_fûe
*Ìroxy, 
pResOut
);

7383 
pResOut
=0;

7386  
rc
;

7387 
	}
}

7413 
	$¥oxyLock
(
sqlôe3_fûe
 *
id
, 
eFûeLock
) {

7414 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

7415 
rc
 = 
	`¥oxyTakeC⁄ch
(
pFûe
);

7416 if–
rc
==
SQLITE_OK
 ){

7417 
¥oxyLockögC⁄ãxt
 *
pCtx
 = (¥oxyLockögC⁄ãxà*)
pFûe
->
lockögC⁄ãxt
;

7418 if–
pCtx
->
c⁄chHñd
>0 ){

7419 
unixFûe
 *
¥oxy
 = 
pCtx
->
lockProxy
;

7420 
rc
 = 
¥oxy
->
pMëhod
->
	`xLock
((
sqlôe3_fûe
*Ìroxy, 
eFûeLock
);

7421 
pFûe
->
eFûeLock
 = 
¥oxy
->eFileLock;

7426  
rc
;

7427 
	}
}

7437 
	$¥oxyU∆ock
(
sqlôe3_fûe
 *
id
, 
eFûeLock
) {

7438 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

7439 
rc
 = 
	`¥oxyTakeC⁄ch
(
pFûe
);

7440 if–
rc
==
SQLITE_OK
 ){

7441 
¥oxyLockögC⁄ãxt
 *
pCtx
 = (¥oxyLockögC⁄ãxà*)
pFûe
->
lockögC⁄ãxt
;

7442 if–
pCtx
->
c⁄chHñd
>0 ){

7443 
unixFûe
 *
¥oxy
 = 
pCtx
->
lockProxy
;

7444 
rc
 = 
¥oxy
->
pMëhod
->
	`xU∆ock
((
sqlôe3_fûe
*Ìroxy, 
eFûeLock
);

7445 
pFûe
->
eFûeLock
 = 
¥oxy
->eFileLock;

7450  
rc
;

7451 
	}
}

7456 
	$¥oxyClo£
(
sqlôe3_fûe
 *
id
) {

7457 if–
	`ALWAYS
(
id
) ){

7458 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

7459 
¥oxyLockögC⁄ãxt
 *
pCtx
 = (¥oxyLockögC⁄ãxà*)
pFûe
->
lockögC⁄ãxt
;

7460 
unixFûe
 *
lockProxy
 = 
pCtx
->lockProxy;

7461 
unixFûe
 *
c⁄chFûe
 = 
pCtx
->conchFile;

7462 
rc
 = 
SQLITE_OK
;

7464 if–
lockProxy
 ){

7465 
rc
 = 
lockProxy
->
pMëhod
->
	`xU∆ock
((
sqlôe3_fûe
*ÓockProxy, 
NO_LOCK
);

7466 if–
rc
 ) Ñc;

7467 
rc
 = 
lockProxy
->
pMëhod
->
	`xClo£
((
sqlôe3_fûe
*)lockProxy);

7468 if–
rc
 ) Ñc;

7469 
	`sqlôe3_‰ì
(
lockProxy
);

7470 
pCtx
->
lockProxy
 = 0;

7472 if–
c⁄chFûe
 ){

7473 if–
pCtx
->
c⁄chHñd
 ){

7474 
rc
 = 
	`¥oxyRñó£C⁄ch
(
pFûe
);

7475 if–
rc
 ) Ñc;

7477 
rc
 = 
c⁄chFûe
->
pMëhod
->
	`xClo£
((
sqlôe3_fûe
*)conchFile);

7478 if–
rc
 ) Ñc;

7479 
	`sqlôe3_‰ì
(
c⁄chFûe
);

7481 
	`sqlôe3DbFªe
(0, 
pCtx
->
lockProxyP©h
);

7482 
	`sqlôe3_‰ì
(
pCtx
->
c⁄chFûeP©h
);

7483 
	`sqlôe3DbFªe
(0, 
pCtx
->
dbP©h
);

7485 
pFûe
->
lockögC⁄ãxt
 = 
pCtx
->
ﬁdLockögC⁄ãxt
;

7486 
pFûe
->
pMëhod
 = 
pCtx
->
pOldMëhod
;

7487 
	`sqlôe3_‰ì
(
pCtx
);

7488  
pFûe
->
pMëhod
->
	`xClo£
(
id
);

7490  
SQLITE_OK
;

7491 
	}
}

7518 
	$sqlôe3_os_öô
(){

7539 
	#UNIXVFS
(
VFSNAME
, 
FINDER
) { \

7541 (
unixFûe
), \

7542 
MAX_PATHNAME
, \

7544 
VFSNAME
, \

7545 (*)&
FINDER
, \

7546 
unixO≥n
, \

7547 
unixDñëe
, \

7548 
unixAc˚ss
, \

7549 
unixFuŒP©h«me
, \

7550 
unixDlO≥n
, \

7551 
unixDlEº‹
, \

7552 
unixDlSym
, \

7553 
unixDlClo£
, \

7554 
unixR™dom√ss
, \

7555 
unixSÀï
, \

7556 
unixCuºítTime
, \

7557 
unixGëLa°Eº‹
, \

7558 
unixCuºítTimeI¡64
, \

7559 
unixSëSy°emCÆl
, \

7560 
unixGëSy°emCÆl
, \

7561 
unixNextSy°emCÆl
, \

7562 }

	)

7571 
sqlôe3_vfs
 
aVfs
[] = {

7572 #i‡
SQLITE_ENABLE_LOCKING_STYLE
 && 
	`deföed
(
__APPLE__
)

7573 
	`UNIXVFS
("unix", 
autﬁockIoFödî
 ),

7574 #ñi‡
OS_VXWORKS


7575 
	`UNIXVFS
("unix", 
vxw‹ksIoFödî
 ),

7577 
	`UNIXVFS
("unix", 
posixIoFödî
 ),

7579 
	`UNIXVFS
("unix-n⁄e", 
nﬁockIoFödî
 ),

7580 
	`UNIXVFS
("unix-dŸfûe", 
dŸlockIoFödî
 ),

7581 
	`UNIXVFS
("unix-ex˛", 
posixIoFödî
 ),

7582 #i‡
OS_VXWORKS


7583 
	`UNIXVFS
("unix-«med£m", 
£mIoFödî
 ),

7585 #i‡
SQLITE_ENABLE_LOCKING_STYLE
 || 
OS_VXWORKS


7586 
	`UNIXVFS
("unix-posix", 
posixIoFödî
 ),

7588 #i‡
SQLITE_ENABLE_LOCKING_STYLE


7589 
	`UNIXVFS
("unix-Êock", 
ÊockIoFödî
 ),

7591 #i‡
SQLITE_ENABLE_LOCKING_STYLE
 && 
	`deföed
(
__APPLE__
)

7592 
	`UNIXVFS
("unix-aÂ", 
aÂIoFödî
 ),

7593 
	`UNIXVFS
("unix-nfs", 
nfsIoFödî
 ),

7594 
	`UNIXVFS
("unix-¥oxy", 
¥oxyIoFödî
 ),

7597 
i
;

7601 
	`as£π
–
	`AºaySize
(
aSysˇŒ
)==28 );

7604 
i
=0; i<((
aVfs
)/(
sqlôe3_vfs
)); i++){

7605 
	`sqlôe3_vfs_ªgi°î
(&
aVfs
[
i
], i==0);

7607  
SQLITE_OK
;

7608 
	}
}

7617 
	$sqlôe3_os_íd
(){

7618  
SQLITE_OK
;

7619 
	}
}

	@os_win.c

15 
	~"sqlôeI¡.h
"

16 #i‡
SQLITE_OS_WIN


21 
	~"os_comm⁄.h
"

26 
	~"os_wö.h
"

32 #i‡!
SQLITE_OS_WINNT
 && !
deföed
(
SQLITE_OMIT_WAL
)

37 #i‡!
SQLITE_OS_WINNT
 && 
SQLITE_MAX_MMAP_SIZE
>0

46 #i‡!
SQLITE_OS_WINCE
 && !
SQLITE_OS_WINRT
 && !
deföed
(
SQLITE_WIN32_NO_ANSI
)

47 
	#SQLITE_WIN32_HAS_ANSI


	)

54 #i‡(
SQLITE_OS_WINCE
 || 
SQLITE_OS_WINNT
 || 
SQLITE_OS_WINRT
) && \

55 !
	$deföed
(
SQLITE_WIN32_NO_WIDE
)

56 
	#SQLITE_WIN32_HAS_WIDE


	)

62 #i‡!
	`deföed
(
SQLITE_WIN32_HAS_ANSI
Ë&& !deföed(
SQLITE_WIN32_HAS_WIDE
)

71 #i‚de‡
NTDDI_WIN8


72 
	#NTDDI_WIN8
 0x06020000

	)

75 #i‚de‡
NTDDI_WINBLUE


76 
	#NTDDI_WINBLUE
 0x06030000

	)

79 #i‚de‡
NTDDI_WINTHRESHOLD


80 
	#NTDDI_WINTHRESHOLD
 0x06040000

	)

87 #i‚de‡
SQLITE_WIN32_GETVERSIONEX


88 #i‡
	`deföed
(
NTDDI_VERSION
Ë&& NTDDI_VERSION >
NTDDI_WINBLUE


89 
	#SQLITE_WIN32_GETVERSIONEX
 0

	)

91 
	#SQLITE_WIN32_GETVERSIONEX
 1

	)

100 #i‚de‡
SQLITE_WIN32_CREATEFILEMAPPINGA


101 #i‡
	`deföed
(
NTDDI_VERSION
Ë&& NTDDI_VERSION >
NTDDI_WINTHRESHOLD


102 
	#SQLITE_WIN32_CREATEFILEMAPPINGA
 0

	)

104 
	#SQLITE_WIN32_CREATEFILEMAPPINGA
 1

	)

111 #i‚de‡
MAX_PATH


112 
	#MAX_PATH
 (260)

	)

119 #i‚de‡
SQLITE_WIN32_MAX_PATH_CHARS


120 
	#SQLITE_WIN32_MAX_PATH_CHARS
 (
MAX_PATH
)

	)

126 #i‚de‡
UNICODE_STRING_MAX_CHARS


127 
	#UNICODE_STRING_MAX_CHARS
 (32767)

	)

134 #i‚de‡
SQLITE_WINNT_MAX_PATH_CHARS


135 
	#SQLITE_WINNT_MAX_PATH_CHARS
 (
UNICODE_STRING_MAX_CHARS
)

	)

143 #i‚de‡
SQLITE_WIN32_MAX_PATH_BYTES


144 
	#SQLITE_WIN32_MAX_PATH_BYTES
 (
SQLITE_WIN32_MAX_PATH_CHARS
*4)

	)

151 #i‚de‡
SQLITE_WINNT_MAX_PATH_BYTES


152 
	#SQLITE_WINNT_MAX_PATH_BYTES
 \

153 ((
WCHAR
Ë* 
SQLITE_WINNT_MAX_PATH_CHARS
)

	)

159 #i‚de‡
SQLITE_WIN32_MAX_ERRMSG_CHARS


160 
	#SQLITE_WIN32_MAX_ERRMSG_CHARS
 (1024)

	)

167 #i‚de‡
wöIsDúSï


168 
	#wöIsDúSï
(
a
Ë((◊Ë='/'Ë|| (◊Ë='\\'))

	)

175 #i‚de‡
UNUSED_VARIABLE_VALUE


176 
	#UNUSED_VARIABLE_VALUE
(
x
Ë()(x)

	)

182 #i‚de‡
wöGëDúSï


183 
	#wöGëDúSï
(Ë'\\'

	)

191 #i‡
SQLITE_WIN32_FILEMAPPING_API
 && \

192 (!
	`deföed
(
SQLITE_OMIT_WAL
Ë|| 
SQLITE_MAX_MMAP_SIZE
>0)

197 #i‡
SQLITE_OS_WINRT


198 
WINBASEAPI
 
HANDLE
 
WINAPI
 
	`Cª©eFûeM≠pögFromAµ
(HANDLE, \

199 
LPSECURITY_ATTRIBUTES
, 
ULONG
, 
ULONG64
, 
LPCWSTR
);

201 
WINBASEAPI
 
LPVOID
 
WINAPI
 
	`M≠VõwOfFûeFromAµ
(
HANDLE
, 
ULONG
, 
ULONG64
, 
SIZE_T
);

203 #i‡
	`deföed
(
SQLITE_WIN32_HAS_ANSI
)

204 
WINBASEAPI
 
HANDLE
 
WINAPI
 
	`Cª©eFûeM≠pögA
(HANDLE, 
LPSECURITY_ATTRIBUTES
, \

205 
DWORD
, DWORD, DWORD, 
LPCSTR
);

208 #i‡
	`deföed
(
SQLITE_WIN32_HAS_WIDE
)

209 
WINBASEAPI
 
HANDLE
 
WINAPI
 
	`Cª©eFûeM≠pögW
(HANDLE, 
LPSECURITY_ATTRIBUTES
, \

210 
DWORD
, DWORD, DWORD, 
LPCWSTR
);

213 
WINBASEAPI
 
LPVOID
 
WINAPI
 
	`M≠VõwOfFûe
(
HANDLE
, 
DWORD
, DWORD, DWORD, 
SIZE_T
);

220 
WINBASEAPI
 
BOOL
 
WINAPI
 
	`FlushVõwOfFûe
(
LPCVOID
, 
SIZE_T
);

221 
WINBASEAPI
 
BOOL
 
WINAPI
 
	`Unm≠VõwOfFûe
(
LPCVOID
);

227 #i‚de‡
INVALID_FILE_ATTRIBUTES


228 
	#INVALID_FILE_ATTRIBUTES
 ((
DWORD
)-1)

	)

231 #i‚de‡
FILE_FLAG_MASK


232 
	#FILE_FLAG_MASK
 (0xFF3C0000)

	)

235 #i‚de‡
FILE_ATTRIBUTE_MASK


236 
	#FILE_ATTRIBUTE_MASK
 (0x0003FFF7)

	)

239 #i‚de‡
SQLITE_OMIT_WAL


241 
wöShm
 
	twöShm
;

242 
wöShmNode
 
	twöShmNode
;

249 #i‡
SQLITE_OS_WINCE


250 
	swö˚Lock
 {

251 
nRódîs
;

252 
BOOL
 
bPídög
;

253 
BOOL
 
bRe£rved
;

254 
BOOL
 
bEx˛usive
;

255 } 
	twö˚Lock
;

262 
wöFûe
 
	twöFûe
;

263 
	swöFûe
 {

264 c⁄° 
sqlôe3_io_mëhods
 *
pMëhod
;

265 
sqlôe3_vfs
 *
pVfs
;

266 
HANDLE
 
h
;

267 
u8
 
lockty≥
;

268 
sh¨edLockByã
;

269 
u8
 
˘æFœgs
;

270 
DWORD
 
œ°Eºno
;

271 #i‚de‡
SQLITE_OMIT_WAL


272 
wöShm
 *
pShm
;

274 c⁄° *
zP©h
;

275 
szChunk
;

276 #i‡
SQLITE_OS_WINCE


277 
LPWSTR
 
zDñëeOnClo£
;

278 
HANDLE
 
hMuãx
;

279 
HANDLE
 
hSh¨ed
;

280 
wö˚Lock
 
loˇl
;

281 
wö˚Lock
 *
sh¨ed
;

283 #i‡
SQLITE_MAX_MMAP_SIZE
>0

284 
nFëchOut
;

285 
HANDLE
 
hM≠
;

286 *
pM≠Regi⁄
;

287 
sqlôe3_öt64
 
mm≠Size
;

288 
sqlôe3_öt64
 
mm≠SizeA˘uÆ
;

289 
sqlôe3_öt64
 
mm≠SizeMax
;

297 
wöVfsAµD©a
 
	twöVfsAµD©a
;

298 
	swöVfsAµD©a
 {

299 c⁄° 
sqlôe3_io_mëhods
 *
pMëhod
;

300 *
pAµD©a
;

301 
BOOL
 
bNoLock
;

307 
	#WINFILE_RDONLY
 0x02

	)

308 
	#WINFILE_PERSIST_WAL
 0x04

	)

309 
	#WINFILE_PSOW
 0x10

	)

314 #i‚de‡
SQLITE_WIN32_DBG_BUF_SIZE


315 
	#SQLITE_WIN32_DBG_BUF_SIZE
 (()(4096-(
DWORD
)))

	)

322 #i‚de‡
SQLITE_WIN32_DATA_DIRECTORY_TYPE


323 
	#SQLITE_WIN32_DATA_DIRECTORY_TYPE
 (1)

	)

330 #i‚de‡
SQLITE_WIN32_TEMP_DIRECTORY_TYPE


331 
	#SQLITE_WIN32_TEMP_DIRECTORY_TYPE
 (2)

	)

338 #ifde‡
SQLITE_WIN32_MALLOC


354 #i‚de‡
SQLITE_WIN32_HEAP_CREATE


355 
	#SQLITE_WIN32_HEAP_CREATE
 (
TRUE
)

	)

362 #i‚de‡
SQLITE_WIN32_CACHE_SIZE


363 #i‡
SQLITE_DEFAULT_CACHE_SIZE
>=0

364 
	#SQLITE_WIN32_CACHE_SIZE
 (
SQLITE_DEFAULT_CACHE_SIZE
)

	)

366 
	#SQLITE_WIN32_CACHE_SIZE
 (-(
SQLITE_DEFAULT_CACHE_SIZE
))

	)

373 #i‚de‡
SQLITE_WIN32_HEAP_INIT_SIZE


374 
	#SQLITE_WIN32_HEAP_INIT_SIZE
 ((
SQLITE_WIN32_CACHE_SIZE
) * \

375 (
SQLITE_DEFAULT_PAGE_SIZE
Ë+ 4194304)

	)

381 #i‚de‡
SQLITE_WIN32_HEAP_MAX_SIZE


382 
	#SQLITE_WIN32_HEAP_MAX_SIZE
 (0)

	)

389 #i‚de‡
SQLITE_WIN32_HEAP_FLAGS


390 
	#SQLITE_WIN32_HEAP_FLAGS
 (0)

	)

398 
wöMemD©a
 
	twöMemD©a
;

399 
	swöMemD©a
 {

400 #i‚de‡
NDEBUG


401 
u32
 
magic1
;

403 
HANDLE
 
hHóp
;

404 
BOOL
 
bOw√d
;

405 #i‚de‡
NDEBUG


406 
u32
 
magic2
;

410 #i‚de‡
NDEBUG


411 
	#WINMEM_MAGIC1
 0x42b2830b

	)

412 
	#WINMEM_MAGIC2
 0xbd4d7cf4

	)

415 
wöMemD©a
 
wö_mem_d©a
 = {

416 #i‚de‡
NDEBUG


417 
WINMEM_MAGIC1
,

419 
NULL
, 
FALSE


420 #i‚de‡
NDEBUG


421 ,
WINMEM_MAGIC2


423 
	}
};

425 #i‚de‡
NDEBUG


426 
	#wöMemAs£πMagic1
(Ë
	`as£π
–
wö_mem_d©a
.
magic1
==
WINMEM_MAGIC1
 )

	)

427 
	#wöMemAs£πMagic2
(Ë
	`as£π
–
wö_mem_d©a
.
magic2
==
WINMEM_MAGIC2
 )

	)

428 
	#wöMemAs£πMagic
(Ë
	`wöMemAs£πMagic1
(); 
	`wöMemAs£πMagic2
();

	)

430 
	#wöMemAs£πMagic
()

	)

433 
	#wöMemGëD©aPå
(Ë&
wö_mem_d©a


	)

434 
	#wöMemGëHóp
(Ë
wö_mem_d©a
.
hHóp


	)

435 
	#wöMemGëOw√d
(Ë
wö_mem_d©a
.
bOw√d


	)

437 *
wöMemMÆloc
(
nByãs
);

438 
wöMemFªe
(*
pPri‹
);

439 *
wöMemRóŒoc
(*
pPri‹
, 
nByãs
);

440 
wöMemSize
(*
p
);

441 
wöMemRoundup
(
n
);

442 
wöMemInô
(*
pAµD©a
);

443 
wöMemShutdown
(*
pAµD©a
);

445 c⁄° 
sqlôe3_mem_mëhods
 *
sqlôe3MemGëWö32
();

460 #ifde‡
SQLITE_TEST


461 
LONG
 
SQLITE_WIN32_VOLATILE
 
	gsqlôe3_os_ty≥
 = 0;

463 
LONG
 
SQLITE_WIN32_VOLATILE
 
	gsqlôe3_os_ty≥
 = 0;

466 #i‚de‡
SYSCALL


467 
	#SYSCALL
 
sqlôe3_sysˇŒ_±r


	)

474 #i‡
SQLITE_OS_WINCE
 || 
SQLITE_OS_WINRT


475 
	#osAªFûeApisANSI
(Ë1

	)

484 
	swö_sysˇŒ
 {

485 c⁄° *
	mzName
;

486 
sqlôe3_sysˇŒ_±r
 
	mpCuºít
;

487 
sqlôe3_sysˇŒ_±r
 
	mpDeÁu…
;

488 } 
	gaSysˇŒ
[] = {

489 #i‡!
SQLITE_OS_WINCE
 && !
SQLITE_OS_WINRT


490 { "AªFûeApisANSI", (
SYSCALL
)
AªFûeApisANSI
, 0 },

492 { "AªFûeApisANSI", (
SYSCALL
)0, 0 },

495 #i‚de‡
osAªFûeApisANSI


496 
	#osAªFûeApisANSI
 ((
	`BOOL
(
WINAPI
*)(
VOID
))
aSysˇŒ
[0].
pCuºít
)

	)

499 #i‡
SQLITE_OS_WINCE
 && 
deföed
(
SQLITE_WIN32_HAS_WIDE
)

500 { "Ch¨LowîW", (
SYSCALL
)
Ch¨LowîW
, 0 },

502 { "Ch¨LowîW", (
SYSCALL
)0, 0 },

505 
	#osCh¨LowîW
 ((
	`LPWSTR
(
WINAPI
*)(
LPWSTR
))
aSysˇŒ
[1].
pCuºít
)

	)

507 #i‡
SQLITE_OS_WINCE
 && 
deföed
(
SQLITE_WIN32_HAS_WIDE
)

508 { "Ch¨UµîW", (
SYSCALL
)
Ch¨UµîW
, 0 },

510 { "Ch¨UµîW", (
SYSCALL
)0, 0 },

513 
	#osCh¨UµîW
 ((
	`LPWSTR
(
WINAPI
*)(
LPWSTR
))
aSysˇŒ
[2].
pCuºít
)

	)

515 { "Clo£H™dÀ", (
SYSCALL
)
Clo£H™dÀ
, 0 },

517 
	#osClo£H™dÀ
 ((
	`BOOL
(
WINAPI
*)(
HANDLE
))
aSysˇŒ
[3].
pCuºít
)

	)

519 #i‡
deföed
(
SQLITE_WIN32_HAS_ANSI
)

520 { "Cª©eFûeA", (
SYSCALL
)
Cª©eFûeA
, 0 },

522 { "Cª©eFûeA", (
SYSCALL
)0, 0 },

525 
	#osCª©eFûeA
 ((
	`HANDLE
(
WINAPI
*)(
LPCSTR
,
DWORD
,DWORD, \

526 
LPSECURITY_ATTRIBUTES
,
DWORD
,DWORD,
HANDLE
))
aSysˇŒ
[4].
pCuºít
)

	)

528 #i‡!
SQLITE_OS_WINRT
 && 
deföed
(
SQLITE_WIN32_HAS_WIDE
)

529 { "Cª©eFûeW", (
SYSCALL
)
Cª©eFûeW
, 0 },

531 { "Cª©eFûeW", (
SYSCALL
)0, 0 },

534 
	#osCª©eFûeW
 ((
	`HANDLE
(
WINAPI
*)(
LPCWSTR
,
DWORD
,DWORD, \

535 
LPSECURITY_ATTRIBUTES
,
DWORD
,DWORD,
HANDLE
))
aSysˇŒ
[5].
pCuºít
)

	)

537 #i‡!
SQLITE_OS_WINRT
 && 
deföed
(
SQLITE_WIN32_HAS_ANSI
) && \

538 (!
deföed
(
SQLITE_OMIT_WAL
Ë|| 
SQLITE_MAX_MMAP_SIZE
>0) && \

539 
SQLITE_WIN32_CREATEFILEMAPPINGA


540 { "Cª©eFûeM≠pögA", (
SYSCALL
)
Cª©eFûeM≠pögA
, 0 },

542 { "Cª©eFûeM≠pögA", (
SYSCALL
)0, 0 },

545 
	#osCª©eFûeM≠pögA
 ((
	`HANDLE
(
WINAPI
*)(
HANDLE
,
LPSECURITY_ATTRIBUTES
, \

546 
DWORD
,DWORD,DWORD,
LPCSTR
))
aSysˇŒ
[6].
pCuºít
)

	)

548 #i‡
SQLITE_OS_WINCE
 || (!
SQLITE_OS_WINRT
 && 
deföed
(
SQLITE_WIN32_HAS_WIDE
) && \

549 (!
deföed
(
SQLITE_OMIT_WAL
Ë|| 
SQLITE_MAX_MMAP_SIZE
>0))

550 { "Cª©eFûeM≠pögW", (
SYSCALL
)
Cª©eFûeM≠pögW
, 0 },

552 { "Cª©eFûeM≠pögW", (
SYSCALL
)0, 0 },

555 
	#osCª©eFûeM≠pögW
 ((
	`HANDLE
(
WINAPI
*)(
HANDLE
,
LPSECURITY_ATTRIBUTES
, \

556 
DWORD
,DWORD,DWORD,
LPCWSTR
))
aSysˇŒ
[7].
pCuºít
)

	)

558 #i‡!
SQLITE_OS_WINRT
 && 
deföed
(
SQLITE_WIN32_HAS_WIDE
)

559 { "Cª©eMuãxW", (
SYSCALL
)
Cª©eMuãxW
, 0 },

561 { "Cª©eMuãxW", (
SYSCALL
)0, 0 },

564 
	#osCª©eMuãxW
 ((
	`HANDLE
(
WINAPI
*)(
LPSECURITY_ATTRIBUTES
,
BOOL
, \

565 
LPCWSTR
))
aSysˇŒ
[8].
pCuºít
)

	)

567 #i‡
deföed
(
SQLITE_WIN32_HAS_ANSI
)

568 { "DñëeFûeA", (
SYSCALL
)
DñëeFûeA
, 0 },

570 { "DñëeFûeA", (
SYSCALL
)0, 0 },

573 
	#osDñëeFûeA
 ((
	`BOOL
(
WINAPI
*)(
LPCSTR
))
aSysˇŒ
[9].
pCuºít
)

	)

575 #i‡
deföed
(
SQLITE_WIN32_HAS_WIDE
)

576 { "DñëeFûeW", (
SYSCALL
)
DñëeFûeW
, 0 },

578 { "DñëeFûeW", (
SYSCALL
)0, 0 },

581 
	#osDñëeFûeW
 ((
	`BOOL
(
WINAPI
*)(
LPCWSTR
))
aSysˇŒ
[10].
pCuºít
)

	)

583 #i‡
SQLITE_OS_WINCE


584 { "FûeTimeToLoˇlFûeTime", (
SYSCALL
)
FûeTimeToLoˇlFûeTime
, 0 },

586 { "FûeTimeToLoˇlFûeTime", (
SYSCALL
)0, 0 },

589 
	#osFûeTimeToLoˇlFûeTime
 ((
	`BOOL
(
WINAPI
*)(
CONST
 
FILETIME
*, \

590 
LPFILETIME
))
aSysˇŒ
[11].
pCuºít
)

	)

592 #i‡
SQLITE_OS_WINCE


593 { "FûeTimeToSy°emTime", (
SYSCALL
)
FûeTimeToSy°emTime
, 0 },

595 { "FûeTimeToSy°emTime", (
SYSCALL
)0, 0 },

598 
	#osFûeTimeToSy°emTime
 ((
	`BOOL
(
WINAPI
*)(
CONST
 
FILETIME
*, \

599 
LPSYSTEMTIME
))
aSysˇŒ
[12].
pCuºít
)

	)

601 { "FlushFûeBuf„rs", (
SYSCALL
)
FlushFûeBuf„rs
, 0 },

603 
	#osFlushFûeBuf„rs
 ((
	`BOOL
(
WINAPI
*)(
HANDLE
))
aSysˇŒ
[13].
pCuºít
)

	)

605 #i‡
deföed
(
SQLITE_WIN32_HAS_ANSI
)

606 { "F‹m©MesßgeA", (
SYSCALL
)
F‹m©MesßgeA
, 0 },

608 { "F‹m©MesßgeA", (
SYSCALL
)0, 0 },

611 
	#osF‹m©MesßgeA
 ((
	`DWORD
(
WINAPI
*)(
DWORD
,
LPCVOID
,DWORD,DWORD,
LPSTR
, \

612 
DWORD
,
va_li°
*))
aSysˇŒ
[14].
pCuºít
)

	)

614 #i‡
deföed
(
SQLITE_WIN32_HAS_WIDE
)

615 { "F‹m©MesßgeW", (
SYSCALL
)
F‹m©MesßgeW
, 0 },

617 { "F‹m©MesßgeW", (
SYSCALL
)0, 0 },

620 
	#osF‹m©MesßgeW
 ((
	`DWORD
(
WINAPI
*)(
DWORD
,
LPCVOID
,DWORD,DWORD,
LPWSTR
, \

621 
DWORD
,
va_li°
*))
aSysˇŒ
[15].
pCuºít
)

	)

623 #i‡!
deföed
(
SQLITE_OMIT_LOAD_EXTENSION
)

624 { "FªeLibøry", (
SYSCALL
)
FªeLibøry
, 0 },

626 { "FªeLibøry", (
SYSCALL
)0, 0 },

629 
	#osFªeLibøry
 ((
	`BOOL
(
WINAPI
*)(
HMODULE
))
aSysˇŒ
[16].
pCuºít
)

	)

631 { "GëCuºítPro˚ssId", (
SYSCALL
)
GëCuºítPro˚ssId
, 0 },

633 
	#osGëCuºítPro˚ssId
 ((
	`DWORD
(
WINAPI
*)(
VOID
))
aSysˇŒ
[17].
pCuºít
)

	)

635 #i‡!
SQLITE_OS_WINCE
 && 
deföed
(
SQLITE_WIN32_HAS_ANSI
)

636 { "GëDiskFªeS∑˚A", (
SYSCALL
)
GëDiskFªeS∑˚A
, 0 },

638 { "GëDiskFªeS∑˚A", (
SYSCALL
)0, 0 },

641 
	#osGëDiskFªeS∑˚A
 ((
	`BOOL
(
WINAPI
*)(
LPCSTR
,
LPDWORD
,LPDWORD,LPDWORD, \

642 
LPDWORD
))
aSysˇŒ
[18].
pCuºít
)

	)

644 #i‡!
SQLITE_OS_WINCE
 && !
SQLITE_OS_WINRT
 && 
deföed
(
SQLITE_WIN32_HAS_WIDE
)

645 { "GëDiskFªeS∑˚W", (
SYSCALL
)
GëDiskFªeS∑˚W
, 0 },

647 { "GëDiskFªeS∑˚W", (
SYSCALL
)0, 0 },

650 
	#osGëDiskFªeS∑˚W
 ((
	`BOOL
(
WINAPI
*)(
LPCWSTR
,
LPDWORD
,LPDWORD,LPDWORD, \

651 
LPDWORD
))
aSysˇŒ
[19].
pCuºít
)

	)

653 #i‡
deföed
(
SQLITE_WIN32_HAS_ANSI
)

654 { "GëFûeAâribuãsA", (
SYSCALL
)
GëFûeAâribuãsA
, 0 },

656 { "GëFûeAâribuãsA", (
SYSCALL
)0, 0 },

659 
	#osGëFûeAâribuãsA
 ((
	`DWORD
(
WINAPI
*)(
LPCSTR
))
aSysˇŒ
[20].
pCuºít
)

	)

661 #i‡!
SQLITE_OS_WINRT
 && 
deföed
(
SQLITE_WIN32_HAS_WIDE
)

662 { "GëFûeAâribuãsW", (
SYSCALL
)
GëFûeAâribuãsW
, 0 },

664 { "GëFûeAâribuãsW", (
SYSCALL
)0, 0 },

667 
	#osGëFûeAâribuãsW
 ((
	`DWORD
(
WINAPI
*)(
LPCWSTR
))
aSysˇŒ
[21].
pCuºít
)

	)

669 #i‡
deföed
(
SQLITE_WIN32_HAS_WIDE
)

670 { "GëFûeAâribuãsExW", (
SYSCALL
)
GëFûeAâribuãsExW
, 0 },

672 { "GëFûeAâribuãsExW", (
SYSCALL
)0, 0 },

675 
	#osGëFûeAâribuãsExW
 ((
	`BOOL
(
WINAPI
*)(
LPCWSTR
,
GET_FILEEX_INFO_LEVELS
, \

676 
LPVOID
))
aSysˇŒ
[22].
pCuºít
)

	)

678 #i‡!
SQLITE_OS_WINRT


679 { "GëFûeSize", (
SYSCALL
)
GëFûeSize
, 0 },

681 { "GëFûeSize", (
SYSCALL
)0, 0 },

684 
	#osGëFûeSize
 ((
	`DWORD
(
WINAPI
*)(
HANDLE
,
LPDWORD
))
aSysˇŒ
[23].
pCuºít
)

	)

686 #i‡!
SQLITE_OS_WINCE
 && 
deföed
(
SQLITE_WIN32_HAS_ANSI
)

687 { "GëFuŒP©hNameA", (
SYSCALL
)
GëFuŒP©hNameA
, 0 },

689 { "GëFuŒP©hNameA", (
SYSCALL
)0, 0 },

692 
	#osGëFuŒP©hNameA
 ((
	`DWORD
(
WINAPI
*)(
LPCSTR
,
DWORD
,
LPSTR
, \

693 
LPSTR
*))
aSysˇŒ
[24].
pCuºít
)

	)

695 #i‡!
SQLITE_OS_WINCE
 && !
SQLITE_OS_WINRT
 && 
deföed
(
SQLITE_WIN32_HAS_WIDE
)

696 { "GëFuŒP©hNameW", (
SYSCALL
)
GëFuŒP©hNameW
, 0 },

698 { "GëFuŒP©hNameW", (
SYSCALL
)0, 0 },

701 
	#osGëFuŒP©hNameW
 ((
	`DWORD
(
WINAPI
*)(
LPCWSTR
,
DWORD
,
LPWSTR
, \

702 
LPWSTR
*))
aSysˇŒ
[25].
pCuºít
)

	)

704 { "GëLa°Eº‹", (
SYSCALL
)
GëLa°Eº‹
, 0 },

706 
	#osGëLa°Eº‹
 ((
	`DWORD
(
WINAPI
*)(
VOID
))
aSysˇŒ
[26].
pCuºít
)

	)

708 #i‡!
deföed
(
SQLITE_OMIT_LOAD_EXTENSION
)

709 #i‡
SQLITE_OS_WINCE


711 { "GëProcAddªssA", (
SYSCALL
)
GëProcAddªssA
, 0 },

715 { "GëProcAddªssA", (
SYSCALL
)
GëProcAddªss
, 0 },

718 { "GëProcAddªssA", (
SYSCALL
)0, 0 },

721 
	#osGëProcAddªssA
 ((
	`FARPROC
(
WINAPI
*)(
HMODULE
, \

722 
LPCSTR
))
aSysˇŒ
[27].
pCuºít
)

	)

724 #i‡!
SQLITE_OS_WINRT


725 { "GëSy°emInfo", (
SYSCALL
)
GëSy°emInfo
, 0 },

727 { "GëSy°emInfo", (
SYSCALL
)0, 0 },

730 
	#osGëSy°emInfo
 ((
	`VOID
(
WINAPI
*)(
LPSYSTEM_INFO
))
aSysˇŒ
[28].
pCuºít
)

	)

732 { "GëSy°emTime", (
SYSCALL
)
GëSy°emTime
, 0 },

734 
	#osGëSy°emTime
 ((
	`VOID
(
WINAPI
*)(
LPSYSTEMTIME
))
aSysˇŒ
[29].
pCuºít
)

	)

736 #i‡!
SQLITE_OS_WINCE


737 { "GëSy°emTimeAsFûeTime", (
SYSCALL
)
GëSy°emTimeAsFûeTime
, 0 },

739 { "GëSy°emTimeAsFûeTime", (
SYSCALL
)0, 0 },

742 
	#osGëSy°emTimeAsFûeTime
 ((
	`VOID
(
WINAPI
*)( \

743 
LPFILETIME
))
aSysˇŒ
[30].
pCuºít
)

	)

745 #i‡
deföed
(
SQLITE_WIN32_HAS_ANSI
)

746 { "GëTempP©hA", (
SYSCALL
)
GëTempP©hA
, 0 },

748 { "GëTempP©hA", (
SYSCALL
)0, 0 },

751 
	#osGëTempP©hA
 ((
	`DWORD
(
WINAPI
*)(
DWORD
,
LPSTR
))
aSysˇŒ
[31].
pCuºít
)

	)

753 #i‡!
SQLITE_OS_WINRT
 && 
deföed
(
SQLITE_WIN32_HAS_WIDE
)

754 { "GëTempP©hW", (
SYSCALL
)
GëTempP©hW
, 0 },

756 { "GëTempP©hW", (
SYSCALL
)0, 0 },

759 
	#osGëTempP©hW
 ((
	`DWORD
(
WINAPI
*)(
DWORD
,
LPWSTR
))
aSysˇŒ
[32].
pCuºít
)

	)

761 #i‡!
SQLITE_OS_WINRT


762 { "GëTickCou¡", (
SYSCALL
)
GëTickCou¡
, 0 },

764 { "GëTickCou¡", (
SYSCALL
)0, 0 },

767 
	#osGëTickCou¡
 ((
	`DWORD
(
WINAPI
*)(
VOID
))
aSysˇŒ
[33].
pCuºít
)

	)

769 #i‡
deföed
(
SQLITE_WIN32_HAS_ANSI
Ë&& 
SQLITE_WIN32_GETVERSIONEX


770 { "GëVîsi⁄ExA", (
SYSCALL
)
GëVîsi⁄ExA
, 0 },

772 { "GëVîsi⁄ExA", (
SYSCALL
)0, 0 },

775 
	#osGëVîsi⁄ExA
 ((
	`BOOL
(
WINAPI
*)( \

776 
LPOSVERSIONINFOA
))
aSysˇŒ
[34].
pCuºít
)

	)

778 #i‡!
SQLITE_OS_WINRT
 && 
deföed
(
SQLITE_WIN32_HAS_WIDE
) && \

779 
SQLITE_WIN32_GETVERSIONEX


780 { "GëVîsi⁄ExW", (
SYSCALL
)
GëVîsi⁄ExW
, 0 },

782 { "GëVîsi⁄ExW", (
SYSCALL
)0, 0 },

785 
	#osGëVîsi⁄ExW
 ((
	`BOOL
(
WINAPI
*)( \

786 
LPOSVERSIONINFOW
))
aSysˇŒ
[35].
pCuºít
)

	)

788 { "HópAŒoc", (
SYSCALL
)
HópAŒoc
, 0 },

790 
	#osHópAŒoc
 ((
	`LPVOID
(
WINAPI
*)(
HANDLE
,
DWORD
, \

791 
SIZE_T
))
aSysˇŒ
[36].
pCuºít
)

	)

793 #i‡!
SQLITE_OS_WINRT


794 { "HópCª©e", (
SYSCALL
)
HópCª©e
, 0 },

796 { "HópCª©e", (
SYSCALL
)0, 0 },

799 
	#osHópCª©e
 ((
	`HANDLE
(
WINAPI
*)(
DWORD
,
SIZE_T
, \

800 
SIZE_T
))
aSysˇŒ
[37].
pCuºít
)

	)

802 #i‡!
SQLITE_OS_WINRT


803 { "HópDe°roy", (
SYSCALL
)
HópDe°roy
, 0 },

805 { "HópDe°roy", (
SYSCALL
)0, 0 },

808 
	#osHópDe°roy
 ((
	`BOOL
(
WINAPI
*)(
HANDLE
))
aSysˇŒ
[38].
pCuºít
)

	)

810 { "HópFªe", (
SYSCALL
)
HópFªe
, 0 },

812 
	#osHópFªe
 ((
	`BOOL
(
WINAPI
*)(
HANDLE
,
DWORD
,
LPVOID
))
aSysˇŒ
[39].
pCuºít
)

	)

814 { "HópReAŒoc", (
SYSCALL
)
HópReAŒoc
, 0 },

816 
	#osHópReAŒoc
 ((
	`LPVOID
(
WINAPI
*)(
HANDLE
,
DWORD
,
LPVOID
, \

817 
SIZE_T
))
aSysˇŒ
[40].
pCuºít
)

	)

819 { "HópSize", (
SYSCALL
)
HópSize
, 0 },

821 
	#osHópSize
 ((
	`SIZE_T
(
WINAPI
*)(
HANDLE
,
DWORD
, \

822 
LPCVOID
))
aSysˇŒ
[41].
pCuºít
)

	)

824 #i‡!
SQLITE_OS_WINRT


825 { "HópVÆid©e", (
SYSCALL
)
HópVÆid©e
, 0 },

827 { "HópVÆid©e", (
SYSCALL
)0, 0 },

830 
	#osHópVÆid©e
 ((
	`BOOL
(
WINAPI
*)(
HANDLE
,
DWORD
, \

831 
LPCVOID
))
aSysˇŒ
[42].
pCuºít
)

	)

833 #i‡!
SQLITE_OS_WINCE
 && !
SQLITE_OS_WINRT


834 { "HópCom∑˘", (
SYSCALL
)
HópCom∑˘
, 0 },

836 { "HópCom∑˘", (
SYSCALL
)0, 0 },

839 
	#osHópCom∑˘
 ((
	`UINT
(
WINAPI
*)(
HANDLE
,
DWORD
))
aSysˇŒ
[43].
pCuºít
)

	)

841 #i‡
deföed
(
SQLITE_WIN32_HAS_ANSI
Ë&& !deföed(
SQLITE_OMIT_LOAD_EXTENSION
)

842 { "LﬂdLibøryA", (
SYSCALL
)
LﬂdLibøryA
, 0 },

844 { "LﬂdLibøryA", (
SYSCALL
)0, 0 },

847 
	#osLﬂdLibøryA
 ((
	`HMODULE
(
WINAPI
*)(
LPCSTR
))
aSysˇŒ
[44].
pCuºít
)

	)

849 #i‡!
SQLITE_OS_WINRT
 && 
deföed
(
SQLITE_WIN32_HAS_WIDE
) && \

850 !
deföed
(
SQLITE_OMIT_LOAD_EXTENSION
)

851 { "LﬂdLibøryW", (
SYSCALL
)
LﬂdLibøryW
, 0 },

853 { "LﬂdLibøryW", (
SYSCALL
)0, 0 },

856 
	#osLﬂdLibøryW
 ((
	`HMODULE
(
WINAPI
*)(
LPCWSTR
))
aSysˇŒ
[45].
pCuºít
)

	)

858 #i‡!
SQLITE_OS_WINRT


859 { "LoˇlFªe", (
SYSCALL
)
LoˇlFªe
, 0 },

861 { "LoˇlFªe", (
SYSCALL
)0, 0 },

864 
	#osLoˇlFªe
 ((
	`HLOCAL
(
WINAPI
*)(
HLOCAL
))
aSysˇŒ
[46].
pCuºít
)

	)

866 #i‡!
SQLITE_OS_WINCE
 && !
SQLITE_OS_WINRT


867 { "LockFûe", (
SYSCALL
)
LockFûe
, 0 },

869 { "LockFûe", (
SYSCALL
)0, 0 },

872 #i‚de‡
osLockFûe


873 
	#osLockFûe
 ((
	`BOOL
(
WINAPI
*)(
HANDLE
,
DWORD
,DWORD,DWORD, \

874 
DWORD
))
aSysˇŒ
[47].
pCuºít
)

	)

877 #i‡!
SQLITE_OS_WINCE


878 { "LockFûeEx", (
SYSCALL
)
LockFûeEx
, 0 },

880 { "LockFûeEx", (
SYSCALL
)0, 0 },

883 #i‚de‡
osLockFûeEx


884 
	#osLockFûeEx
 ((
	`BOOL
(
WINAPI
*)(
HANDLE
,
DWORD
,DWORD,DWORD,DWORD, \

885 
LPOVERLAPPED
))
aSysˇŒ
[48].
pCuºít
)

	)

888 #i‡
SQLITE_OS_WINCE
 || (!
SQLITE_OS_WINRT
 && \

889 (!
deföed
(
SQLITE_OMIT_WAL
Ë|| 
SQLITE_MAX_MMAP_SIZE
>0))

890 { "M≠VõwOfFûe", (
SYSCALL
)
M≠VõwOfFûe
, 0 },

892 { "M≠VõwOfFûe", (
SYSCALL
)0, 0 },

895 
	#osM≠VõwOfFûe
 ((
	`LPVOID
(
WINAPI
*)(
HANDLE
,
DWORD
,DWORD,DWORD, \

896 
SIZE_T
))
aSysˇŒ
[49].
pCuºít
)

	)

898 { "Mu…iByãToWideCh¨", (
SYSCALL
)
Mu…iByãToWideCh¨
, 0 },

900 
	#osMu…iByãToWideCh¨
 (((
WINAPI
*)(
UINT
,
DWORD
,
LPCSTR
,,
LPWSTR
, \

901 ))
aSysˇŒ
[50].
pCuºít
)

	)

903 { "QuîyPîf‹m™˚Cou¡î", (
SYSCALL
)
QuîyPîf‹m™˚Cou¡î
, 0 },

905 
	#osQuîyPîf‹m™˚Cou¡î
 ((
	`BOOL
(
WINAPI
*)( \

906 
LARGE_INTEGER
*))
aSysˇŒ
[51].
pCuºít
)

	)

908 { "RódFûe", (
SYSCALL
)
RódFûe
, 0 },

910 
	#osRódFûe
 ((
	`BOOL
(
WINAPI
*)(
HANDLE
,
LPVOID
,
DWORD
,
LPDWORD
, \

911 
LPOVERLAPPED
))
aSysˇŒ
[52].
pCuºít
)

	)

913 { "SëEndOfFûe", (
SYSCALL
)
SëEndOfFûe
, 0 },

915 
	#osSëEndOfFûe
 ((
	`BOOL
(
WINAPI
*)(
HANDLE
))
aSysˇŒ
[53].
pCuºít
)

	)

917 #i‡!
SQLITE_OS_WINRT


918 { "SëFûePoöãr", (
SYSCALL
)
SëFûePoöãr
, 0 },

920 { "SëFûePoöãr", (
SYSCALL
)0, 0 },

923 
	#osSëFûePoöãr
 ((
	`DWORD
(
WINAPI
*)(
HANDLE
,
LONG
,
PLONG
, \

924 
DWORD
))
aSysˇŒ
[54].
pCuºít
)

	)

926 #i‡!
SQLITE_OS_WINRT


927 { "SÀï", (
SYSCALL
)
SÀï
, 0 },

929 { "SÀï", (
SYSCALL
)0, 0 },

932 
	#osSÀï
 ((
	`VOID
(
WINAPI
*)(
DWORD
))
aSysˇŒ
[55].
pCuºít
)

	)

934 { "Sy°emTimeToFûeTime", (
SYSCALL
)
Sy°emTimeToFûeTime
, 0 },

936 
	#osSy°emTimeToFûeTime
 ((
	`BOOL
(
WINAPI
*)(
CONST
 
SYSTEMTIME
*, \

937 
LPFILETIME
))
aSysˇŒ
[56].
pCuºít
)

	)

939 #i‡!
SQLITE_OS_WINCE
 && !
SQLITE_OS_WINRT


940 { "U∆ockFûe", (
SYSCALL
)
U∆ockFûe
, 0 },

942 { "U∆ockFûe", (
SYSCALL
)0, 0 },

945 #i‚de‡
osU∆ockFûe


946 
	#osU∆ockFûe
 ((
	`BOOL
(
WINAPI
*)(
HANDLE
,
DWORD
,DWORD,DWORD, \

947 
DWORD
))
aSysˇŒ
[57].
pCuºít
)

	)

950 #i‡!
SQLITE_OS_WINCE


951 { "U∆ockFûeEx", (
SYSCALL
)
U∆ockFûeEx
, 0 },

953 { "U∆ockFûeEx", (
SYSCALL
)0, 0 },

956 
	#osU∆ockFûeEx
 ((
	`BOOL
(
WINAPI
*)(
HANDLE
,
DWORD
,DWORD,DWORD, \

957 
LPOVERLAPPED
))
aSysˇŒ
[58].
pCuºít
)

	)

959 #i‡
SQLITE_OS_WINCE
 || !
deföed
(
SQLITE_OMIT_WAL
Ë|| 
SQLITE_MAX_MMAP_SIZE
>0

960 { "Unm≠VõwOfFûe", (
SYSCALL
)
Unm≠VõwOfFûe
, 0 },

962 { "Unm≠VõwOfFûe", (
SYSCALL
)0, 0 },

965 
	#osUnm≠VõwOfFûe
 ((
	`BOOL
(
WINAPI
*)(
LPCVOID
))
aSysˇŒ
[59].
pCuºít
)

	)

967 { "WideCh¨ToMu…iByã", (
SYSCALL
)
WideCh¨ToMu…iByã
, 0 },

969 
	#osWideCh¨ToMu…iByã
 (((
WINAPI
*)(
UINT
,
DWORD
,
LPCWSTR
,,
LPSTR
,, \

970 
LPCSTR
,
LPBOOL
))
aSysˇŒ
[60].
pCuºít
)

	)

972 { "WrôeFûe", (
SYSCALL
)
WrôeFûe
, 0 },

974 
	#osWrôeFûe
 ((
	`BOOL
(
WINAPI
*)(
HANDLE
,
LPCVOID
,
DWORD
,
LPDWORD
, \

975 
LPOVERLAPPED
))
aSysˇŒ
[61].
pCuºít
)

	)

977 #i‡
SQLITE_OS_WINRT


978 { "Cª©eEvítExW", (
SYSCALL
)
Cª©eEvítExW
, 0 },

980 { "Cª©eEvítExW", (
SYSCALL
)0, 0 },

983 
	#osCª©eEvítExW
 ((
	`HANDLE
(
WINAPI
*)(
LPSECURITY_ATTRIBUTES
,
LPCWSTR
, \

984 
DWORD
,DWORD))
aSysˇŒ
[62].
pCuºít
)

	)

986 #i‡!
SQLITE_OS_WINRT


987 { "WaôF‹SögÀObje˘", (
SYSCALL
)
WaôF‹SögÀObje˘
, 0 },

989 { "WaôF‹SögÀObje˘", (
SYSCALL
)0, 0 },

992 
	#osWaôF‹SögÀObje˘
 ((
	`DWORD
(
WINAPI
*)(
HANDLE
, \

993 
DWORD
))
aSysˇŒ
[63].
pCuºít
)

	)

995 #i‡!
SQLITE_OS_WINCE


996 { "WaôF‹SögÀObje˘Ex", (
SYSCALL
)
WaôF‹SögÀObje˘Ex
, 0 },

998 { "WaôF‹SögÀObje˘Ex", (
SYSCALL
)0, 0 },

1001 
	#osWaôF‹SögÀObje˘Ex
 ((
	`DWORD
(
WINAPI
*)(
HANDLE
,
DWORD
, \

1002 
BOOL
))
aSysˇŒ
[64].
pCuºít
)

	)

1004 #i‡
SQLITE_OS_WINRT


1005 { "SëFûePoöãrEx", (
SYSCALL
)
SëFûePoöãrEx
, 0 },

1007 { "SëFûePoöãrEx", (
SYSCALL
)0, 0 },

1010 
	#osSëFûePoöãrEx
 ((
	`BOOL
(
WINAPI
*)(
HANDLE
,
LARGE_INTEGER
, \

1011 
PLARGE_INTEGER
,
DWORD
))
aSysˇŒ
[65].
pCuºít
)

	)

1013 #i‡
SQLITE_OS_WINRT


1014 { "GëFûeInf‹m©i⁄ByH™dÀEx", (
SYSCALL
)
GëFûeInf‹m©i⁄ByH™dÀEx
, 0 },

1016 { "GëFûeInf‹m©i⁄ByH™dÀEx", (
SYSCALL
)0, 0 },

1019 
	#osGëFûeInf‹m©i⁄ByH™dÀEx
 ((
	`BOOL
(
WINAPI
*)(
HANDLE
, \

1020 
FILE_INFO_BY_HANDLE_CLASS
,
LPVOID
,
DWORD
))
aSysˇŒ
[66].
pCuºít
)

	)

1022 #i‡
SQLITE_OS_WINRT
 && (!
deföed
(
SQLITE_OMIT_WAL
Ë|| 
SQLITE_MAX_MMAP_SIZE
>0)

1023 { "M≠VõwOfFûeFromAµ", (
SYSCALL
)
M≠VõwOfFûeFromAµ
, 0 },

1025 { "M≠VõwOfFûeFromAµ", (
SYSCALL
)0, 0 },

1028 
	#osM≠VõwOfFûeFromAµ
 ((
	`LPVOID
(
WINAPI
*)(
HANDLE
,
ULONG
,
ULONG64
, \

1029 
SIZE_T
))
aSysˇŒ
[67].
pCuºít
)

	)

1031 #i‡
SQLITE_OS_WINRT


1032 { "Cª©eFûe2", (
SYSCALL
)
Cª©eFûe2
, 0 },

1034 { "Cª©eFûe2", (
SYSCALL
)0, 0 },

1037 
	#osCª©eFûe2
 ((
	`HANDLE
(
WINAPI
*)(
LPCWSTR
,
DWORD
,DWORD,DWORD, \

1038 
LPCREATEFILE2_EXTENDED_PARAMETERS
))
aSysˇŒ
[68].
pCuºít
)

	)

1040 #i‡
SQLITE_OS_WINRT
 && !
deföed
(
SQLITE_OMIT_LOAD_EXTENSION
)

1041 { "LﬂdPackagedLibøry", (
SYSCALL
)
LﬂdPackagedLibøry
, 0 },

1043 { "LﬂdPackagedLibøry", (
SYSCALL
)0, 0 },

1046 
	#osLﬂdPackagedLibøry
 ((
	`HMODULE
(
WINAPI
*)(
LPCWSTR
, \

1047 
DWORD
))
aSysˇŒ
[69].
pCuºít
)

	)

1049 #i‡
SQLITE_OS_WINRT


1050 { "GëTickCou¡64", (
SYSCALL
)
GëTickCou¡64
, 0 },

1052 { "GëTickCou¡64", (
SYSCALL
)0, 0 },

1055 
	#osGëTickCou¡64
 ((
	`ULONGLONG
(
WINAPI
*)(
VOID
))
aSysˇŒ
[70].
pCuºít
)

	)

1057 #i‡
SQLITE_OS_WINRT


1058 { "GëN©iveSy°emInfo", (
SYSCALL
)
GëN©iveSy°emInfo
, 0 },

1060 { "GëN©iveSy°emInfo", (
SYSCALL
)0, 0 },

1063 
	#osGëN©iveSy°emInfo
 ((
	`VOID
(
WINAPI
*)( \

1064 
LPSYSTEM_INFO
))
aSysˇŒ
[71].
pCuºít
)

	)

1066 #i‡
deföed
(
SQLITE_WIN32_HAS_ANSI
)

1067 { "OuçutDebugSåögA", (
SYSCALL
)
OuçutDebugSåögA
, 0 },

1069 { "OuçutDebugSåögA", (
SYSCALL
)0, 0 },

1072 
	#osOuçutDebugSåögA
 ((
	`VOID
(
WINAPI
*)(
LPCSTR
))
aSysˇŒ
[72].
pCuºít
)

	)

1074 #i‡
deföed
(
SQLITE_WIN32_HAS_WIDE
)

1075 { "OuçutDebugSåögW", (
SYSCALL
)
OuçutDebugSåögW
, 0 },

1077 { "OuçutDebugSåögW", (
SYSCALL
)0, 0 },

1080 
	#osOuçutDebugSåögW
 ((
	`VOID
(
WINAPI
*)(
LPCWSTR
))
aSysˇŒ
[73].
pCuºít
)

	)

1082 { "GëPro˚ssHóp", (
SYSCALL
)
GëPro˚ssHóp
, 0 },

1084 
	#osGëPro˚ssHóp
 ((
	`HANDLE
(
WINAPI
*)(
VOID
))
aSysˇŒ
[74].
pCuºít
)

	)

1086 #i‡
SQLITE_OS_WINRT
 && (!
deföed
(
SQLITE_OMIT_WAL
Ë|| 
SQLITE_MAX_MMAP_SIZE
>0)

1087 { "Cª©eFûeM≠pögFromAµ", (
SYSCALL
)
Cª©eFûeM≠pögFromAµ
, 0 },

1089 { "Cª©eFûeM≠pögFromAµ", (
SYSCALL
)0, 0 },

1092 
	#osCª©eFûeM≠pögFromAµ
 ((
	`HANDLE
(
WINAPI
*)(
HANDLE
, \

1093 
LPSECURITY_ATTRIBUTES
,
ULONG
,
ULONG64
,
LPCWSTR
))
aSysˇŒ
[75].
pCuºít
)

	)

1100 #i‡
deföed
(
I¡îlockedCom∑ªExch™ge
)

1101 { "I¡îlockedCom∑ªExch™ge", (
SYSCALL
)0, 0 },

1103 
	#osI¡îlockedCom∑ªExch™ge
 
I¡îlockedCom∑ªExch™ge


	)

1105 { "I¡îlockedCom∑ªExch™ge", (
SYSCALL
)
I¡îlockedCom∑ªExch™ge
, 0 },

1107 
	#osI¡îlockedCom∑ªExch™ge
 ((
	`LONG
(
WINAPI
*)(
LONG
 \

1108 
SQLITE_WIN32_VOLATILE
*, 
LONG
,LONG))
aSysˇŒ
[76].
pCuºít
)

	)

1111 #i‡!
SQLITE_OS_WINCE
 && !
SQLITE_OS_WINRT
 && 
SQLITE_WIN32_USE_UUID


1112 { "UuidCª©e", (
SYSCALL
)
UuidCª©e
, 0 },

1114 { "UuidCª©e", (
SYSCALL
)0, 0 },

1117 
	#osUuidCª©e
 ((
	`RPC_STATUS
(
RPC_ENTRY
*)(
UUID
*))
aSysˇŒ
[77].
pCuºít
)

	)

1119 #i‡!
SQLITE_OS_WINCE
 && !
SQLITE_OS_WINRT
 && 
SQLITE_WIN32_USE_UUID


1120 { "UuidCª©eSequítül", (
SYSCALL
)
UuidCª©eSequítül
, 0 },

1122 { "UuidCª©eSequítül", (
SYSCALL
)0, 0 },

1125 
	#osUuidCª©eSequítül
 \

1126 ((
	`RPC_STATUS
(
RPC_ENTRY
*)(
UUID
*))
aSysˇŒ
[78].
pCuºít
)

	)

1128 #i‡!
deföed
(
SQLITE_NO_SYNC
Ë&& 
SQLITE_MAX_MMAP_SIZE
>0

1129 { "FlushVõwOfFûe", (
SYSCALL
)
FlushVõwOfFûe
, 0 },

1131 { "FlushVõwOfFûe", (
SYSCALL
)0, 0 },

1134 
	#osFlushVõwOfFûe
 \

1135 ((
	`BOOL
(
WINAPI
*)(
LPCVOID
,
SIZE_T
))
aSysˇŒ
[79].
pCuºít
)

	)

1145 
	$wöSëSy°emCÆl
(

1146 
sqlôe3_vfs
 *
pNŸU£d
,

1147 c⁄° *
zName
,

1148 
sqlôe3_sysˇŒ_±r
 
pNewFunc


1150 
i
;

1151 
rc
 = 
SQLITE_NOTFOUND
;

1153 
	`UNUSED_PARAMETER
(
pNŸU£d
);

1154 if–
zName
==0 ){

1158 
rc
 = 
SQLITE_OK
;

1159 
i
=0; i<(
aSysˇŒ
)/(aSyscall[0]); i++){

1160 if–
aSysˇŒ
[
i
].
pDeÁu…
 ){

1161 
aSysˇŒ
[
i
].
pCuºít
 =áSysˇŒ[i].
pDeÁu…
;

1168 
i
=0; i<(
aSysˇŒ
)/(aSyscall[0]); i++){

1169 if–
	`°rcmp
(
zName
, 
aSysˇŒ
[
i
].zName)==0 ){

1170 if–
aSysˇŒ
[
i
].
pDeÁu…
==0 ){

1171 
aSysˇŒ
[
i
].
pDeÁu…
 =áSysˇŒ[i].
pCuºít
;

1173 
rc
 = 
SQLITE_OK
;

1174 if–
pNewFunc
==0 )ÖNewFun¯
aSysˇŒ
[
i
].
pDeÁu…
;

1175 
aSysˇŒ
[
i
].
pCuºít
 = 
pNewFunc
;

1180  
rc
;

1181 
	}
}

1188 
sqlôe3_sysˇŒ_±r
 
	$wöGëSy°emCÆl
(

1189 
sqlôe3_vfs
 *
pNŸU£d
,

1190 c⁄° *
zName


1192 
i
;

1194 
	`UNUSED_PARAMETER
(
pNŸU£d
);

1195 
i
=0; i<(
aSysˇŒ
)/(aSyscall[0]); i++){

1196 if–
	`°rcmp
(
zName
, 
aSysˇŒ
[
i
].zName)==0 ) áSysˇŒ[i].
pCuºít
;

1199 
	}
}

1207 c⁄° *
	$wöNextSy°emCÆl
(
sqlôe3_vfs
 *
p
, c⁄° *
zName
){

1208 
i
 = -1;

1210 
	`UNUSED_PARAMETER
(
p
);

1211 if–
zName
 ){

1212 
i
=0; i<
	`AºaySize
(
aSysˇŒ
)-1; i++){

1213 if–
	`°rcmp
(
zName
, 
aSysˇŒ
[
i
].zName)==0 ) ;

1216 
i
++; i<
	`AºaySize
(
aSysˇŒ
); i++){

1217 if–
aSysˇŒ
[
i
].
pCuºít
!=0 ) áSysˇŒ[i].
zName
;

1220 
	}
}

1222 #ifde‡
SQLITE_WIN32_MALLOC


1230 
	$sqlôe3_wö32_com∑˘_hóp
(
LPUINT
 
≤L¨ge°
){

1231 
rc
 = 
SQLITE_OK
;

1232 
UINT
 
nL¨ge°
 = 0;

1233 
HANDLE
 
hHóp
;

1235 
	`wöMemAs£πMagic
();

1236 
hHóp
 = 
	`wöMemGëHóp
();

1237 
	`as£π
–
hHóp
!=0 );

1238 
	`as£π
–
hHóp
!=
INVALID_HANDLE_VALUE
 );

1239 #i‡!
SQLITE_OS_WINRT
 && 
	`deföed
(
SQLITE_WIN32_MALLOC_VALIDATE
)

1240 
	`as£π
–
	`osHópVÆid©e
(
hHóp
, 
SQLITE_WIN32_HEAP_FLAGS
, 
NULL
) );

1242 #i‡!
SQLITE_OS_WINCE
 && !
SQLITE_OS_WINRT


1243 if–(
nL¨ge°
=
	`osHópCom∑˘
(
hHóp
, 
SQLITE_WIN32_HEAP_FLAGS
))==0 ){

1244 
DWORD
 
œ°Eºno
 = 
	`osGëLa°Eº‹
();

1245 if–
œ°Eºno
==
NO_ERROR
 ){

1246 
	`sqlôe3_log
(
SQLITE_NOMEM
, "failedÅo HeapCompact (no space), heap=%p",

1247 (*)
hHóp
);

1248 
rc
 = 
SQLITE_NOMEM_BKPT
;

1250 
	`sqlôe3_log
(
SQLITE_ERROR
, "failedÅo HeapCompact (%lu), heap=%p",

1251 
	`osGëLa°Eº‹
(), (*)
hHóp
);

1252 
rc
 = 
SQLITE_ERROR
;

1256 
	`sqlôe3_log
(
SQLITE_NOTFOUND
, "failedÅo HeapCompact, heap=%p",

1257 (*)
hHóp
);

1258 
rc
 = 
SQLITE_NOTFOUND
;

1260 if–
≤L¨ge°
 ) *≤L¨ge° = 
nL¨ge°
;

1261  
rc
;

1262 
	}
}

1270 
	$sqlôe3_wö32_ª£t_hóp
(){

1271 
rc
;

1272 
	`MUTEX_LOGIC
–
sqlôe3_muãx
 *
pMa°î
; )

1273 
	`MUTEX_LOGIC
–
sqlôe3_muãx
 *
pMem
; )

1274 
	`MUTEX_LOGIC
–
pMa°î
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
); )

1275 
	`MUTEX_LOGIC
–
pMem
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MEM
); )

1276 
	`sqlôe3_muãx_íãr
(
pMa°î
);

1277 
	`sqlôe3_muãx_íãr
(
pMem
);

1278 
	`wöMemAs£πMagic
();

1279 if–
	`wöMemGëHóp
()!=
NULL
 && 
	`wöMemGëOw√d
(Ë&& 
	`sqlôe3_mem‹y_u£d
()==0 ){

1287 
	`as£π
–
	`wöMemGëHóp
()!=
NULL
 );

1288 
	`as£π
–
	`wöMemGëOw√d
() );

1289 
	`as£π
–
	`sqlôe3_mem‹y_u£d
()==0 );

1290 
	`wöMemShutdown
(
	`wöMemGëD©aPå
());

1291 
	`as£π
–
	`wöMemGëHóp
()==
NULL
 );

1292 
	`as£π
–!
	`wöMemGëOw√d
() );

1293 
	`as£π
–
	`sqlôe3_mem‹y_u£d
()==0 );

1294 
rc
 = 
	`wöMemInô
(
	`wöMemGëD©aPå
());

1295 
	`as£π
–
rc
!=
SQLITE_OK
 || 
	`wöMemGëHóp
()!=
NULL
 );

1296 
	`as£π
–
rc
!=
SQLITE_OK
 || 
	`wöMemGëOw√d
() );

1297 
	`as£π
–
rc
!=
SQLITE_OK
 || 
	`sqlôe3_mem‹y_u£d
()==0 );

1302 
rc
 = 
SQLITE_BUSY
;

1304 
	`sqlôe3_muãx_Àave
(
pMem
);

1305 
	`sqlôe3_muãx_Àave
(
pMa°î
);

1306  
rc
;

1307 
	}
}

1315 
	$sqlôe3_wö32_wrôe_debug
(c⁄° *
zBuf
, 
nBuf
){

1316 
zDbgBuf
[
SQLITE_WIN32_DBG_BUF_SIZE
];

1317 
nMö
 = 
	`MIN
(
nBuf
, (
SQLITE_WIN32_DBG_BUF_SIZE
 - 1));

1318 if–
nMö
<-1 )ÇMin = -1;

1319 
	`as£π
–
nMö
==-1 ||ÇMö==0 ||ÇMö<
SQLITE_WIN32_DBG_BUF_SIZE
 );

1320 #ifde‡
SQLITE_ENABLE_API_ARMOR


1321 if–!
zBuf
 ){

1322 ()
SQLITE_MISUSE_BKPT
;

1326 #i‡
	`deföed
(
SQLITE_WIN32_HAS_ANSI
)

1327 if–
nMö
>0 ){

1328 
	`mem£t
(
zDbgBuf
, 0, 
SQLITE_WIN32_DBG_BUF_SIZE
);

1329 
	`mem˝y
(
zDbgBuf
, 
zBuf
, 
nMö
);

1330 
	`osOuçutDebugSåögA
(
zDbgBuf
);

1332 
	`osOuçutDebugSåögA
(
zBuf
);

1334 #ñi‡
	`deföed
(
SQLITE_WIN32_HAS_WIDE
)

1335 
	`mem£t
(
zDbgBuf
, 0, 
SQLITE_WIN32_DBG_BUF_SIZE
);

1336 i‡–
	`osMu…iByãToWideCh¨
(

1337 
	`osAªFûeApisANSI
(Ë? 
CP_ACP
 : 
CP_OEMCP
, 0, 
zBuf
,

1338 
nMö
, (
LPWSTR
)
zDbgBuf
, 
SQLITE_WIN32_DBG_BUF_SIZE
/(
WCHAR
))<=0 ){

1341 
	`osOuçutDebugSåögW
((
LPCWSTR
)
zDbgBuf
);

1343 if–
nMö
>0 ){

1344 
	`mem£t
(
zDbgBuf
, 0, 
SQLITE_WIN32_DBG_BUF_SIZE
);

1345 
	`mem˝y
(
zDbgBuf
, 
zBuf
, 
nMö
);

1346 
	`Ârötf
(
°dîr
, "%s", 
zDbgBuf
);

1348 
	`Ârötf
(
°dîr
, "%s", 
zBuf
);

1351 
	}
}

1357 #i‡
SQLITE_OS_WINRT


1358 
HANDLE
 
	g¶ìpObj
 = 
NULL
;

1361 
	$sqlôe3_wö32_¶ìp
(
DWORD
 
mûli£c⁄ds
){

1362 #i‡
SQLITE_OS_WINRT


1363 i‡–
¶ìpObj
==
NULL
 ){

1364 
¶ìpObj
 = 
	`osCª©eEvítExW
(
NULL
, NULL, 
CREATE_EVENT_MANUAL_RESET
,

1365 
SYNCHRONIZE
);

1367 
	`as£π
–
¶ìpObj
!=
NULL
 );

1368 
	`osWaôF‹SögÀObje˘Ex
(
¶ìpObj
, 
mûli£c⁄ds
, 
FALSE
);

1370 
	`osSÀï
(
mûli£c⁄ds
);

1372 
	}
}

1374 #i‡
SQLITE_MAX_WORKER_THREADS
>0 && !
SQLITE_OS_WINCE
 && !
SQLITE_OS_WINRT
 && \

1375 
	gSQLITE_THREADSAFE
>0

1376 
DWORD
 
	$sqlôe3Wö32Waô
(
HANDLE
 
hObje˘
){

1377 
DWORD
 
rc
;

1378  (
rc
 = 
	`osWaôF‹SögÀObje˘Ex
(
hObje˘
, 
INFINITE
,

1379 
TRUE
))==
WAIT_IO_COMPLETION
 ){}

1380  
rc
;

1381 
	}
}

1396 #i‡!
SQLITE_WIN32_GETVERSIONEX


1397 
	#osIsNT
(Ë(1)

	)

1398 #ñi‡
SQLITE_OS_WINCE
 || 
SQLITE_OS_WINRT
 || !
deföed
(
SQLITE_WIN32_HAS_ANSI
)

1399 
	#osIsNT
(Ë(1)

	)

1400 #ñi‡!
deföed
(
SQLITE_WIN32_HAS_WIDE
)

1401 
	#osIsNT
(Ë(0)

	)

1403 
	#osIsNT
(Ë((
sqlôe3_os_ty≥
==2Ë|| 
	`sqlôe3_wö32_is_¡
())

	)

1410 
	$sqlôe3_wö32_is_¡
(){

1411 #i‡
SQLITE_OS_WINRT


1417 #ñi‡
SQLITE_WIN32_GETVERSIONEX


1418 if–
	`osI¡îlockedCom∑ªExch™ge
(&
sqlôe3_os_ty≥
, 0, 0)==0 ){

1419 #i‡
	`deföed
(
SQLITE_WIN32_HAS_ANSI
)

1420 
OSVERSIONINFOA
 
sInfo
;

1421 
sInfo
.
dwOSVîsi⁄InfoSize
 = (sInfo);

1422 
	`osGëVîsi⁄ExA
(&
sInfo
);

1423 
	`osI¡îlockedCom∑ªExch™ge
(&
sqlôe3_os_ty≥
,

1424 (
sInfo
.
dwPœtf‹mId
 =
VER_PLATFORM_WIN32_NT
) ? 2 : 1, 0);

1425 #ñi‡
	`deföed
(
SQLITE_WIN32_HAS_WIDE
)

1426 
OSVERSIONINFOW
 
sInfo
;

1427 
sInfo
.
dwOSVîsi⁄InfoSize
 = (sInfo);

1428 
	`osGëVîsi⁄ExW
(&
sInfo
);

1429 
	`osI¡îlockedCom∑ªExch™ge
(&
sqlôe3_os_ty≥
,

1430 (
sInfo
.
dwPœtf‹mId
 =
VER_PLATFORM_WIN32_NT
) ? 2 : 1, 0);

1433  
	`osI¡îlockedCom∑ªExch™ge
(&
sqlôe3_os_ty≥
, 2, 2)==2;

1434 #ñi‡
SQLITE_TEST


1435  
	`osI¡îlockedCom∑ªExch™ge
(&
sqlôe3_os_ty≥
, 2, 2)==2;

1443 
	}
}

1445 #ifde‡
SQLITE_WIN32_MALLOC


1449 *
	$wöMemMÆloc
(
nByãs
){

1450 
HANDLE
 
hHóp
;

1451 *
p
;

1453 
	`wöMemAs£πMagic
();

1454 
hHóp
 = 
	`wöMemGëHóp
();

1455 
	`as£π
–
hHóp
!=0 );

1456 
	`as£π
–
hHóp
!=
INVALID_HANDLE_VALUE
 );

1457 #i‡!
SQLITE_OS_WINRT
 && 
	`deföed
(
SQLITE_WIN32_MALLOC_VALIDATE
)

1458 
	`as£π
–
	`osHópVÆid©e
(
hHóp
, 
SQLITE_WIN32_HEAP_FLAGS
, 
NULL
) );

1460 
	`as£π
–
nByãs
>=0 );

1461 
p
 = 
	`osHópAŒoc
(
hHóp
, 
SQLITE_WIN32_HEAP_FLAGS
, (
SIZE_T
)
nByãs
);

1462 if–!
p
 ){

1463 
	`sqlôe3_log
(
SQLITE_NOMEM
, "failedÅo HeapAlloc %u bytes (%lu), heap=%p",

1464 
nByãs
, 
	`osGëLa°Eº‹
(), (*)
hHóp
);

1466  
p
;

1467 
	}
}

1472 
	$wöMemFªe
(*
pPri‹
){

1473 
HANDLE
 
hHóp
;

1475 
	`wöMemAs£πMagic
();

1476 
hHóp
 = 
	`wöMemGëHóp
();

1477 
	`as£π
–
hHóp
!=0 );

1478 
	`as£π
–
hHóp
!=
INVALID_HANDLE_VALUE
 );

1479 #i‡!
SQLITE_OS_WINRT
 && 
	`deföed
(
SQLITE_WIN32_MALLOC_VALIDATE
)

1480 
	`as£π
–
	`osHópVÆid©e
(
hHóp
, 
SQLITE_WIN32_HEAP_FLAGS
, 
pPri‹
) );

1482 if–!
pPri‹
 ) ;

1483 if–!
	`osHópFªe
(
hHóp
, 
SQLITE_WIN32_HEAP_FLAGS
, 
pPri‹
) ){

1484 
	`sqlôe3_log
(
SQLITE_NOMEM
, "failedÅo HeapFree block %p (%lu), heap=%p",

1485 
pPri‹
, 
	`osGëLa°Eº‹
(), (*)
hHóp
);

1487 
	}
}

1492 *
	$wöMemRóŒoc
(*
pPri‹
, 
nByãs
){

1493 
HANDLE
 
hHóp
;

1494 *
p
;

1496 
	`wöMemAs£πMagic
();

1497 
hHóp
 = 
	`wöMemGëHóp
();

1498 
	`as£π
–
hHóp
!=0 );

1499 
	`as£π
–
hHóp
!=
INVALID_HANDLE_VALUE
 );

1500 #i‡!
SQLITE_OS_WINRT
 && 
	`deföed
(
SQLITE_WIN32_MALLOC_VALIDATE
)

1501 
	`as£π
–
	`osHópVÆid©e
(
hHóp
, 
SQLITE_WIN32_HEAP_FLAGS
, 
pPri‹
) );

1503 
	`as£π
–
nByãs
>=0 );

1504 if–!
pPri‹
 ){

1505 
p
 = 
	`osHópAŒoc
(
hHóp
, 
SQLITE_WIN32_HEAP_FLAGS
, (
SIZE_T
)
nByãs
);

1507 
p
 = 
	`osHópReAŒoc
(
hHóp
, 
SQLITE_WIN32_HEAP_FLAGS
, 
pPri‹
, (
SIZE_T
)
nByãs
);

1509 if–!
p
 ){

1510 
	`sqlôe3_log
(
SQLITE_NOMEM
, "failedÅo %s %u bytes (%lu), heap=%p",

1511 
pPri‹
 ? "HópReAŒoc" : "HópAŒoc", 
nByãs
, 
	`osGëLa°Eº‹
(),

1512 (*)
hHóp
);

1514  
p
;

1515 
	}
}

1520 
	$wöMemSize
(*
p
){

1521 
HANDLE
 
hHóp
;

1522 
SIZE_T
 
n
;

1524 
	`wöMemAs£πMagic
();

1525 
hHóp
 = 
	`wöMemGëHóp
();

1526 
	`as£π
–
hHóp
!=0 );

1527 
	`as£π
–
hHóp
!=
INVALID_HANDLE_VALUE
 );

1528 #i‡!
SQLITE_OS_WINRT
 && 
	`deföed
(
SQLITE_WIN32_MALLOC_VALIDATE
)

1529 
	`as£π
–
	`osHópVÆid©e
(
hHóp
, 
SQLITE_WIN32_HEAP_FLAGS
, 
p
) );

1531 if–!
p
 )  0;

1532 
n
 = 
	`osHópSize
(
hHóp
, 
SQLITE_WIN32_HEAP_FLAGS
, 
p
);

1533 if–
n
==(
SIZE_T
)-1 ){

1534 
	`sqlôe3_log
(
SQLITE_NOMEM
, "failedÅo HeapSize block %p (%lu), heap=%p",

1535 
p
, 
	`osGëLa°Eº‹
(), (*)
hHóp
);

1538  ()
n
;

1539 
	}
}

1544 
	$wöMemRoundup
(
n
){

1545  
n
;

1546 
	}
}

1551 
	$wöMemInô
(*
pAµD©a
){

1552 
wöMemD©a
 *
pWöMemD©a
 = (wöMemD©®*)
pAµD©a
;

1554 if–!
pWöMemD©a
 )  
SQLITE_ERROR
;

1555 
	`as£π
–
pWöMemD©a
->
magic1
==
WINMEM_MAGIC1
 );

1556 
	`as£π
–
pWöMemD©a
->
magic2
==
WINMEM_MAGIC2
 );

1558 #i‡!
SQLITE_OS_WINRT
 && 
SQLITE_WIN32_HEAP_CREATE


1559 if–!
pWöMemD©a
->
hHóp
 ){

1560 
DWORD
 
dwInôülSize
 = 
SQLITE_WIN32_HEAP_INIT_SIZE
;

1561 
DWORD
 
dwMaximumSize
 = (DWORD)
sqlôe3GlobÆC⁄fig
.
nHóp
;

1562 if–
dwMaximumSize
==0 ){

1563 
dwMaximumSize
 = 
SQLITE_WIN32_HEAP_MAX_SIZE
;

1564 }if–
dwInôülSize
>
dwMaximumSize
 ){

1565 
dwInôülSize
 = 
dwMaximumSize
;

1567 
pWöMemD©a
->
hHóp
 = 
	`osHópCª©e
(
SQLITE_WIN32_HEAP_FLAGS
,

1568 
dwInôülSize
, 
dwMaximumSize
);

1569 if–!
pWöMemD©a
->
hHóp
 ){

1570 
	`sqlôe3_log
(
SQLITE_NOMEM
,

1572 
	`osGëLa°Eº‹
(), 
SQLITE_WIN32_HEAP_FLAGS
, 
dwInôülSize
,

1573 
dwMaximumSize
);

1574  
SQLITE_NOMEM_BKPT
;

1576 
pWöMemD©a
->
bOw√d
 = 
TRUE
;

1577 
	`as£π
–
pWöMemD©a
->
bOw√d
 );

1580 
pWöMemD©a
->
hHóp
 = 
	`osGëPro˚ssHóp
();

1581 if–!
pWöMemD©a
->
hHóp
 ){

1582 
	`sqlôe3_log
(
SQLITE_NOMEM
,

1583 "ÁûedÅÿGëPro˚ssHó∞(%lu)", 
	`osGëLa°Eº‹
());

1584  
SQLITE_NOMEM_BKPT
;

1586 
pWöMemD©a
->
bOw√d
 = 
FALSE
;

1587 
	`as£π
–!
pWöMemD©a
->
bOw√d
 );

1589 
	`as£π
–
pWöMemD©a
->
hHóp
!=0 );

1590 
	`as£π
–
pWöMemD©a
->
hHóp
!=
INVALID_HANDLE_VALUE
 );

1591 #i‡!
SQLITE_OS_WINRT
 && 
	`deföed
(
SQLITE_WIN32_MALLOC_VALIDATE
)

1592 
	`as£π
–
	`osHópVÆid©e
(
pWöMemD©a
->
hHóp
, 
SQLITE_WIN32_HEAP_FLAGS
, 
NULL
) );

1594  
SQLITE_OK
;

1595 
	}
}

1600 
	$wöMemShutdown
(*
pAµD©a
){

1601 
wöMemD©a
 *
pWöMemD©a
 = (wöMemD©®*)
pAµD©a
;

1603 if–!
pWöMemD©a
 ) ;

1604 
	`as£π
–
pWöMemD©a
->
magic1
==
WINMEM_MAGIC1
 );

1605 
	`as£π
–
pWöMemD©a
->
magic2
==
WINMEM_MAGIC2
 );

1607 if–
pWöMemD©a
->
hHóp
 ){

1608 
	`as£π
–
pWöMemD©a
->
hHóp
!=
INVALID_HANDLE_VALUE
 );

1609 #i‡!
SQLITE_OS_WINRT
 && 
	`deföed
(
SQLITE_WIN32_MALLOC_VALIDATE
)

1610 
	`as£π
–
	`osHópVÆid©e
(
pWöMemD©a
->
hHóp
, 
SQLITE_WIN32_HEAP_FLAGS
, 
NULL
) );

1612 if–
pWöMemD©a
->
bOw√d
 ){

1613 if–!
	`osHópDe°roy
(
pWöMemD©a
->
hHóp
) ){

1614 
	`sqlôe3_log
(
SQLITE_NOMEM
, "failedÅo HeapDestroy (%lu), heap=%p",

1615 
	`osGëLa°Eº‹
(), (*)
pWöMemD©a
->
hHóp
);

1617 
pWöMemD©a
->
bOw√d
 = 
FALSE
;

1619 
pWöMemD©a
->
hHóp
 = 
NULL
;

1621 
	}
}

1631 c⁄° 
sqlôe3_mem_mëhods
 *
	$sqlôe3MemGëWö32
(){

1632 c⁄° 
sqlôe3_mem_mëhods
 
wöMemMëhods
 = {

1633 
wöMemMÆloc
,

1634 
wöMemFªe
,

1635 
wöMemRóŒoc
,

1636 
wöMemSize
,

1637 
wöMemRoundup
,

1638 
wöMemInô
,

1639 
wöMemShutdown
,

1640 &
wö_mem_d©a


1642  &
wöMemMëhods
;

1643 
	}
}

1645 
	$sqlôe3MemSëDeÁu…
(){

1646 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_MALLOC
, 
	`sqlôe3MemGëWö32
());

1647 
	}
}

1655 
LPWSTR
 
	$wöUtf8ToUnicode
(c⁄° *
zText
){

1656 
nCh¨
;

1657 
LPWSTR
 
zWideText
;

1659 
nCh¨
 = 
	`osMu…iByãToWideCh¨
(
CP_UTF8
, 0, 
zText
, -1, 
NULL
, 0);

1660 if–
nCh¨
==0 ){

1663 
zWideText
 = 
	`sqlôe3MÆlocZîo
–
nCh¨
*(
WCHAR
) );

1664 if–
zWideText
==0 ){

1667 
nCh¨
 = 
	`osMu…iByãToWideCh¨
(
CP_UTF8
, 0, 
zText
, -1, 
zWideText
,

1668 
nCh¨
);

1669 if–
nCh¨
==0 ){

1670 
	`sqlôe3_‰ì
(
zWideText
);

1671 
zWideText
 = 0;

1673  
zWideText
;

1674 
	}
}

1681 *
	$wöUnicodeToUtf8
(
LPCWSTR
 
zWideText
){

1682 
nByã
;

1683 *
zText
;

1685 
nByã
 = 
	`osWideCh¨ToMu…iByã
(
CP_UTF8
, 0, 
zWideText
, -1, 0, 0, 0, 0);

1686 if–
nByã
 == 0 ){

1689 
zText
 = 
	`sqlôe3MÆlocZîo
–
nByã
 );

1690 if–
zText
==0 ){

1693 
nByã
 = 
	`osWideCh¨ToMu…iByã
(
CP_UTF8
, 0, 
zWideText
, -1, 
zText
,ÇByte,

1695 if–
nByã
 == 0 ){

1696 
	`sqlôe3_‰ì
(
zText
);

1697 
zText
 = 0;

1699  
zText
;

1700 
	}
}

1708 
LPWSTR
 
	$wöMbcsToUnicode
(c⁄° *
zText
, 
u£Ansi
){

1709 
nByã
;

1710 
LPWSTR
 
zMbcsText
;

1711 
codïage
 = 
u£Ansi
 ? 
CP_ACP
 : 
CP_OEMCP
;

1713 
nByã
 = 
	`osMu…iByãToWideCh¨
(
codïage
, 0, 
zText
, -1, 
NULL
,

1714 0)*(
WCHAR
);

1715 if–
nByã
==0 ){

1718 
zMbcsText
 = 
	`sqlôe3MÆlocZîo
–
nByã
*(
WCHAR
) );

1719 if–
zMbcsText
==0 ){

1722 
nByã
 = 
	`osMu…iByãToWideCh¨
(
codïage
, 0, 
zText
, -1, 
zMbcsText
,

1723 
nByã
);

1724 if–
nByã
==0 ){

1725 
	`sqlôe3_‰ì
(
zMbcsText
);

1726 
zMbcsText
 = 0;

1728  
zMbcsText
;

1729 
	}
}

1737 *
	$wöUnicodeToMbcs
(
LPCWSTR
 
zWideText
, 
u£Ansi
){

1738 
nByã
;

1739 *
zText
;

1740 
codïage
 = 
u£Ansi
 ? 
CP_ACP
 : 
CP_OEMCP
;

1742 
nByã
 = 
	`osWideCh¨ToMu…iByã
(
codïage
, 0, 
zWideText
, -1, 0, 0, 0, 0);

1743 if–
nByã
 == 0 ){

1746 
zText
 = 
	`sqlôe3MÆlocZîo
–
nByã
 );

1747 if–
zText
==0 ){

1750 
nByã
 = 
	`osWideCh¨ToMu…iByã
(
codïage
, 0, 
zWideText
, -1, 
zText
,

1751 
nByã
, 0, 0);

1752 if–
nByã
 == 0 ){

1753 
	`sqlôe3_‰ì
(
zText
);

1754 
zText
 = 0;

1756  
zText
;

1757 
	}
}

1764 *
	$wöMbcsToUtf8
(c⁄° *
zText
, 
u£Ansi
){

1765 *
zTextUtf8
;

1766 
LPWSTR
 
zTmpWide
;

1768 
zTmpWide
 = 
	`wöMbcsToUnicode
(
zText
, 
u£Ansi
);

1769 if–
zTmpWide
==0 ){

1772 
zTextUtf8
 = 
	`wöUnicodeToUtf8
(
zTmpWide
);

1773 
	`sqlôe3_‰ì
(
zTmpWide
);

1774  
zTextUtf8
;

1775 
	}
}

1782 *
	$wöUtf8ToMbcs
(c⁄° *
zText
, 
u£Ansi
){

1783 *
zTextMbcs
;

1784 
LPWSTR
 
zTmpWide
;

1786 
zTmpWide
 = 
	`wöUtf8ToUnicode
(
zText
);

1787 if–
zTmpWide
==0 ){

1790 
zTextMbcs
 = 
	`wöUnicodeToMbcs
(
zTmpWide
, 
u£Ansi
);

1791 
	`sqlôe3_‰ì
(
zTmpWide
);

1792  
zTextMbcs
;

1793 
	}
}

1798 
LPWSTR
 
	$sqlôe3_wö32_utf8_to_unicode
(c⁄° *
zText
){

1799 #ifde‡
SQLITE_ENABLE_API_ARMOR


1800 if–!
zText
 ){

1801 ()
SQLITE_MISUSE_BKPT
;

1805 #i‚de‡
SQLITE_OMIT_AUTOINIT


1806 if–
	`sqlôe3_öôülize
() )  0;

1808  
	`wöUtf8ToUnicode
(
zText
);

1809 
	}
}

1814 *
	$sqlôe3_wö32_unicode_to_utf8
(
LPCWSTR
 
zWideText
){

1815 #ifde‡
SQLITE_ENABLE_API_ARMOR


1816 if–!
zWideText
 ){

1817 ()
SQLITE_MISUSE_BKPT
;

1821 #i‚de‡
SQLITE_OMIT_AUTOINIT


1822 if–
	`sqlôe3_öôülize
() )  0;

1824  
	`wöUnicodeToUtf8
(
zWideText
);

1825 
	}
}

1830 *
	$sqlôe3_wö32_mbcs_to_utf8
(c⁄° *
zText
){

1831 #ifde‡
SQLITE_ENABLE_API_ARMOR


1832 if–!
zText
 ){

1833 ()
SQLITE_MISUSE_BKPT
;

1837 #i‚de‡
SQLITE_OMIT_AUTOINIT


1838 if–
	`sqlôe3_öôülize
() )  0;

1840  
	`wöMbcsToUtf8
(
zText
, 
	`osAªFûeApisANSI
());

1841 
	}
}

1846 *
	$sqlôe3_wö32_mbcs_to_utf8_v2
(c⁄° *
zText
, 
u£Ansi
){

1847 #ifde‡
SQLITE_ENABLE_API_ARMOR


1848 if–!
zText
 ){

1849 ()
SQLITE_MISUSE_BKPT
;

1853 #i‚de‡
SQLITE_OMIT_AUTOINIT


1854 if–
	`sqlôe3_öôülize
() )  0;

1856  
	`wöMbcsToUtf8
(
zText
, 
u£Ansi
);

1857 
	}
}

1862 *
	$sqlôe3_wö32_utf8_to_mbcs
(c⁄° *
zText
){

1863 #ifde‡
SQLITE_ENABLE_API_ARMOR


1864 if–!
zText
 ){

1865 ()
SQLITE_MISUSE_BKPT
;

1869 #i‚de‡
SQLITE_OMIT_AUTOINIT


1870 if–
	`sqlôe3_öôülize
() )  0;

1872  
	`wöUtf8ToMbcs
(
zText
, 
	`osAªFûeApisANSI
());

1873 
	}
}

1878 *
	$sqlôe3_wö32_utf8_to_mbcs_v2
(c⁄° *
zText
, 
u£Ansi
){

1879 #ifde‡
SQLITE_ENABLE_API_ARMOR


1880 if–!
zText
 ){

1881 ()
SQLITE_MISUSE_BKPT
;

1885 #i‚de‡
SQLITE_OMIT_AUTOINIT


1886 if–
	`sqlôe3_öôülize
() )  0;

1888  
	`wöUtf8ToMbcs
(
zText
, 
u£Ansi
);

1889 
	}
}

1898 
	$sqlôe3_wö32_£t_dúe˘‹y
(
DWORD
 
ty≥
, 
LPCWSTR
 
zVÆue
){

1899 **
µDúe˘‹y
 = 0;

1900 #i‚de‡
SQLITE_OMIT_AUTOINIT


1901 
rc
 = 
	`sqlôe3_öôülize
();

1902 if–
rc
 ) Ñc;

1904 if–
ty≥
==
SQLITE_WIN32_DATA_DIRECTORY_TYPE
 ){

1905 
µDúe˘‹y
 = &
sqlôe3_d©a_dúe˘‹y
;

1906 }if–
ty≥
==
SQLITE_WIN32_TEMP_DIRECTORY_TYPE
 ){

1907 
µDúe˘‹y
 = &
sqlôe3_ãmp_dúe˘‹y
;

1909 
	`as£π
–!
µDúe˘‹y
 || 
ty≥
==
SQLITE_WIN32_DATA_DIRECTORY_TYPE


1910 || 
ty≥
==
SQLITE_WIN32_TEMP_DIRECTORY_TYPE


1912 
	`as£π
–!
µDúe˘‹y
 || 
	`sqlôe3MemdebugHasTy≥
(*µDúe˘‹y, 
MEMTYPE_HEAP
) );

1913 if–
µDúe˘‹y
 ){

1914 *
zVÆueUtf8
 = 0;

1915 if–
zVÆue
 && zValue[0] ){

1916 
zVÆueUtf8
 = 
	`wöUnicodeToUtf8
(
zVÆue
);

1917 i‡–
zVÆueUtf8
==0 ){

1918  
SQLITE_NOMEM_BKPT
;

1921 
	`sqlôe3_‰ì
(*
µDúe˘‹y
);

1922 *
µDúe˘‹y
 = 
zVÆueUtf8
;

1923  
SQLITE_OK
;

1925  
SQLITE_ERROR
;

1926 
	}
}

1933 
	$wöGëLa°Eº‹Msg
(
DWORD
 
œ°Eºno
, 
nBuf
, *
zBuf
){

1938 
DWORD
 
dwLí
 = 0;

1939 *
zOut
 = 0;

1941 if–
	`osIsNT
() ){

1942 #i‡
SQLITE_OS_WINRT


1943 
WCHAR
 
zTempWide
[
SQLITE_WIN32_MAX_ERRMSG_CHARS
+1];

1944 
dwLí
 = 
	`osF‹m©MesßgeW
(
FORMAT_MESSAGE_FROM_SYSTEM
 |

1945 
FORMAT_MESSAGE_IGNORE_INSERTS
,

1946 
NULL
,

1947 
œ°Eºno
,

1949 
zTempWide
,

1950 
SQLITE_WIN32_MAX_ERRMSG_CHARS
,

1953 
LPWSTR
 
zTempWide
 = 
NULL
;

1954 
dwLí
 = 
	`osF‹m©MesßgeW
(
FORMAT_MESSAGE_ALLOCATE_BUFFER
 |

1955 
FORMAT_MESSAGE_FROM_SYSTEM
 |

1956 
FORMAT_MESSAGE_IGNORE_INSERTS
,

1957 
NULL
,

1958 
œ°Eºno
,

1960 (
LPWSTR
Ë&
zTempWide
,

1964 if–
dwLí
 > 0 ){

1966 
	`sqlôe3BegöBíignMÆloc
();

1967 
zOut
 = 
	`wöUnicodeToUtf8
(
zTempWide
);

1968 
	`sqlôe3EndBíignMÆloc
();

1969 #i‡!
SQLITE_OS_WINRT


1971 
	`osLoˇlFªe
(
zTempWide
);

1975 #ifde‡
SQLITE_WIN32_HAS_ANSI


1977 *
zTemp
 = 
NULL
;

1978 
dwLí
 = 
	`osF‹m©MesßgeA
(
FORMAT_MESSAGE_ALLOCATE_BUFFER
 |

1979 
FORMAT_MESSAGE_FROM_SYSTEM
 |

1980 
FORMAT_MESSAGE_IGNORE_INSERTS
,

1981 
NULL
,

1982 
œ°Eºno
,

1984 (
LPSTR
Ë&
zTemp
,

1987 if–
dwLí
 > 0 ){

1989 
	`sqlôe3BegöBíignMÆloc
();

1990 
zOut
 = 
	`wöMbcsToUtf8
(
zTemp
, 
	`osAªFûeApisANSI
());

1991 
	`sqlôe3EndBíignMÆloc
();

1993 
	`osLoˇlFªe
(
zTemp
);

1997 if–0 =
dwLí
 ){

1998 
	`sqlôe3_¢¥ötf
(
nBuf
, 
zBuf
, "OsEº‹ 0x%lx (%lu)", 
œ°Eºno
,ÜastErrno);

2001 
	`sqlôe3_¢¥ötf
(
nBuf
, 
zBuf
, "%s", 
zOut
);

2003 
	`sqlôe3_‰ì
(
zOut
);

2006 
	}
}

2023 
	#wöLogEº‹
(
a
,
b
,
c
,
d
Ë
	`wöLogEº‹AtLöe
◊,b,c,d,
__LINE__
)

	)

2024 
	$wöLogEº‹AtLöe
(

2025 
îrcode
,

2026 
DWORD
 
œ°Eºno
,

2027 c⁄° *
zFunc
,

2028 c⁄° *
zP©h
,

2029 
iLöe


2031 
zMsg
[500];

2032 
i
;

2034 
zMsg
[0] = 0;

2035 
	`wöGëLa°Eº‹Msg
(
œ°Eºno
, (
zMsg
), zMsg);

2036 
	`as£π
–
îrcode
!=
SQLITE_OK
 );

2037 if–
zP©h
==0 ) zPath = "";

2038 
i
=0; 
zMsg
[i] && zMsg[i]!='\r' && zMsg[i]!='\n'; i++){}

2039 
zMsg
[
i
] = 0;

2040 
	`sqlôe3_log
(
îrcode
,

2042 
iLöe
, 
œ°Eºno
, 
zFunc
, 
zP©h
, 
zMsg


2045  
îrcode
;

2046 
	}
}

2054 #i‚de‡
SQLITE_WIN32_IOERR_RETRY


2055 
	#SQLITE_WIN32_IOERR_RETRY
 10

	)

2057 #i‚de‡
SQLITE_WIN32_IOERR_RETRY_DELAY


2058 
	#SQLITE_WIN32_IOERR_RETRY_DELAY
 25

	)

2060 
	gwöI€ºRëry
 = 
SQLITE_WIN32_IOERR_RETRY
;

2061 
	gwöI€ºRëryDñay
 = 
SQLITE_WIN32_IOERR_RETRY_DELAY
;

2079 #i‡!
deföed
(
wöI€ºC™Rëry1
)

2080 
	#wöI€ºC™Rëry1
(
a
Ë((◊)==
ERROR_ACCESS_DENIED
) || \

2081 ((
a
)==
ERROR_SHARING_VIOLATION
) || \

2082 ((
a
)==
ERROR_LOCK_VIOLATION
) || \

2083 ((
a
)==
ERROR_DEV_NOT_EXIST
) || \

2084 ((
a
)==
ERROR_NETNAME_DELETED
) || \

2085 ((
a
)==
ERROR_SEM_TIMEOUT
) || \

2086 ((
a
)==
ERROR_NETWORK_UNREACHABLE
))

	)

2094 
	$wöRëryI€º
(*
≤Rëry
, 
DWORD
 *
pEº‹
){

2095 
DWORD
 
e
 = 
	`osGëLa°Eº‹
();

2096 if–*
≤Rëry
>=
wöI€ºRëry
 ){

2097 if–
pEº‹
 ){

2098 *
pEº‹
 = 
e
;

2102 if–
	`wöI€ºC™Rëry1
(
e
) ){

2103 
	`sqlôe3_wö32_¶ìp
(
wöI€ºRëryDñay
*(1+*
≤Rëry
));

2104 ++*
≤Rëry
;

2107 #i‡
	`deföed
(
wöI€ºC™Rëry2
)

2108 if–
	`wöI€ºC™Rëry2
(
e
) ){

2109 
	`sqlôe3_wö32_¶ìp
(
wöI€ºRëryDñay
*(1+*
≤Rëry
));

2110 ++*
≤Rëry
;

2114 if–
pEº‹
 ){

2115 *
pEº‹
 = 
e
;

2118 
	}
}

2123 
	$wöLogI€º
(
nRëry
, 
löío
){

2124 if–
nRëry
 ){

2125 
	`sqlôe3_log
(
SQLITE_NOTICE
,

2127 
wöI€ºRëryDñay
*
nRëry
*“Rëry+1)/2, 
löío


2130 
	}
}

2136 #i‡!
deföed
(
SQLITE_OMIT_LOCALTIME
Ë&& deföed(
_WIN32_WCE
) && \

2137 (!
deföed
(
SQLITE_MSVC_LOCALTIME_API
Ë|| !
	gSQLITE_MSVC_LOCALTIME_API
)

2142 
	~<time.h
>

2143 
tm
 *
__cde˛
 
	$loˇ…ime
(c⁄° 
time_t
 *
t
)

2145 
tm
 
y
;

2146 
FILETIME
 
uTm
, 
lTm
;

2147 
SYSTEMTIME
 
pTm
;

2148 
sqlôe3_öt64
 
t64
;

2149 
t64
 = *
t
;

2150 
t64
 = (t64 + 11644473600)*10000000;

2151 
uTm
.
dwLowD©eTime
 = (
DWORD
)(
t64
 & 0xFFFFFFFF);

2152 
uTm
.
dwHighD©eTime
(
DWORD
)(
t64
 >> 32);

2153 
	`osFûeTimeToLoˇlFûeTime
(&
uTm
,&
lTm
);

2154 
	`osFûeTimeToSy°emTime
(&
lTm
,&
pTm
);

2155 
y
.
tm_yór
 = 
pTm
.
wYór
 - 1900;

2156 
y
.
tm_m⁄
 = 
pTm
.
wM⁄th
 - 1;

2157 
y
.
tm_wday
 = 
pTm
.
wDayOfWìk
;

2158 
y
.
tm_mday
 = 
pTm
.
wDay
;

2159 
y
.
tm_hour
 = 
pTm
.
wHour
;

2160 
y
.
tm_mö
 = 
pTm
.
wMöuã
;

2161 
y
.
tm_£c
 = 
pTm
.
wSec⁄d
;

2162  &
y
;

2163 
	}
}

2166 #i‡
SQLITE_OS_WINCE


2170 
	#HANDLE_TO_WINFILE
(
a
Ë(
wöFûe
*)&((*Ô)[-()
	`off£tof
(wöFûe,
h
)]

	)

2175 
	$wö˚MuãxAcquúe
(
HANDLE
 
h
){

2176 
DWORD
 
dwEº
;

2178 
dwEº
 = 
	`osWaôF‹SögÀObje˘
(
h
, 
INFINITE
);

2179 } 
dwEº
 !
WAIT_OBJECT_0
 && dwEº !
WAIT_ABANDONED
);

2180 
	}
}

2184 
	#wö˚MuãxRñó£
(
h
Ë
	`Rñó£Muãx
(h)

	)

2190 
	$wö˚Cª©eLock
(c⁄° *
zFûíame
, 
wöFûe
 *
pFûe
){

2191 
LPWSTR
 
zTok
;

2192 
LPWSTR
 
zName
;

2193 
DWORD
 
œ°Eºno
;

2194 
BOOL
 
bLogged
 = 
FALSE
;

2195 
BOOL
 
bInô
 = 
TRUE
;

2197 
zName
 = 
	`wöUtf8ToUnicode
(
zFûíame
);

2198 if–
zName
==0 ){

2200  
SQLITE_IOERR_NOMEM_BKPT
;

2204 
	`mem£t
(&
pFûe
->
loˇl
, 0, (pFile->local));

2208 
zTok
 = 
	`osCh¨LowîW
(
zName
);

2209 ;*
zTok
;zTok++){

2210 i‡(*
zTok
 == '\\') *zTok = '_';

2214 
pFûe
->
hMuãx
 = 
	`osCª©eMuãxW
(
NULL
, 
FALSE
, 
zName
);

2215 i‡(!
pFûe
->
hMuãx
){

2216 
pFûe
->
œ°Eºno
 = 
	`osGëLa°Eº‹
();

2217 
	`sqlôe3_‰ì
(
zName
);

2218  
	`wöLogEº‹
(
SQLITE_IOERR
, 
pFûe
->
œ°Eºno
,

2219 "wö˚Cª©eLock1", 
zFûíame
);

2223 
	`wö˚MuãxAcquúe
(
pFûe
->
hMuãx
);

2229 
	`osCh¨UµîW
(
zName
);

2230 
pFûe
->
hSh¨ed
 = 
	`osCª©eFûeM≠pögW
(
INVALID_HANDLE_VALUE
, 
NULL
,

2231 
PAGE_READWRITE
, 0, (
wö˚Lock
),

2232 
zName
);

2236 
œ°Eºno
 = 
	`osGëLa°Eº‹
();

2237 i‡(
œ°Eºno
 =
ERROR_ALREADY_EXISTS
){

2238 
bInô
 = 
FALSE
;

2241 
	`sqlôe3_‰ì
(
zName
);

2244 if–
pFûe
->
hSh¨ed
 ){

2245 
pFûe
->
sh¨ed
 = (
wö˚Lock
*)
	`osM≠VõwOfFûe
’Fûe->
hSh¨ed
,

2246 
FILE_MAP_READ
|
FILE_MAP_WRITE
, 0, 0, (
wö˚Lock
));

2248 if–!
pFûe
->
sh¨ed
 ){

2249 
pFûe
->
œ°Eºno
 = 
	`osGëLa°Eº‹
();

2250 
	`wöLogEº‹
(
SQLITE_IOERR
, 
pFûe
->
œ°Eºno
,

2251 "wö˚Cª©eLock2", 
zFûíame
);

2252 
bLogged
 = 
TRUE
;

2253 
	`osClo£H™dÀ
(
pFûe
->
hSh¨ed
);

2254 
pFûe
->
hSh¨ed
 = 
NULL
;

2259 if–
pFûe
->
hSh¨ed
==
NULL
 ){

2260 if–!
bLogged
 ){

2261 
pFûe
->
œ°Eºno
 =ÜastErrno;

2262 
	`wöLogEº‹
(
SQLITE_IOERR
, 
pFûe
->
œ°Eºno
,

2263 "wö˚Cª©eLock3", 
zFûíame
);

2264 
bLogged
 = 
TRUE
;

2266 
	`wö˚MuãxRñó£
(
pFûe
->
hMuãx
);

2267 
	`osClo£H™dÀ
(
pFûe
->
hMuãx
);

2268 
pFûe
->
hMuãx
 = 
NULL
;

2269  
SQLITE_IOERR
;

2273 if–
bInô
 ){

2274 
	`mem£t
(
pFûe
->
sh¨ed
, 0, (
wö˚Lock
));

2277 
	`wö˚MuãxRñó£
(
pFûe
->
hMuãx
);

2278  
SQLITE_OK
;

2279 
	}
}

2284 
	$wö˚De°royLock
(
wöFûe
 *
pFûe
){

2285 i‡(
pFûe
->
hMuãx
){

2287 
	`wö˚MuãxAcquúe
(
pFûe
->
hMuãx
);

2291 i‡(
pFûe
->
loˇl
.
nRódîs
){

2292 
pFûe
->
sh¨ed
->
nRódîs
 --;

2294 i‡(
pFûe
->
loˇl
.
bRe£rved
){

2295 
pFûe
->
sh¨ed
->
bRe£rved
 = 
FALSE
;

2297 i‡(
pFûe
->
loˇl
.
bPídög
){

2298 
pFûe
->
sh¨ed
->
bPídög
 = 
FALSE
;

2300 i‡(
pFûe
->
loˇl
.
bEx˛usive
){

2301 
pFûe
->
sh¨ed
->
bEx˛usive
 = 
FALSE
;

2305 
	`osUnm≠VõwOfFûe
(
pFûe
->
sh¨ed
);

2306 
	`osClo£H™dÀ
(
pFûe
->
hSh¨ed
);

2309 
	`wö˚MuãxRñó£
(
pFûe
->
hMuãx
);

2310 
	`osClo£H™dÀ
(
pFûe
->
hMuãx
);

2311 
pFûe
->
hMuãx
 = 
NULL
;

2313 
	}
}

2318 
BOOL
 
	$wö˚LockFûe
(

2319 
LPHANDLE
 
phFûe
,

2320 
DWORD
 
dwFûeOff£tLow
,

2321 
DWORD
 
dwFûeOff£tHigh
,

2322 
DWORD
 
nNumbîOfByãsToLockLow
,

2323 
DWORD
 
nNumbîOfByãsToLockHigh


2325 
wöFûe
 *
pFûe
 = 
	`HANDLE_TO_WINFILE
(
phFûe
);

2326 
BOOL
 
bRëu∫
 = 
FALSE
;

2328 
	`UNUSED_PARAMETER
(
dwFûeOff£tHigh
);

2329 
	`UNUSED_PARAMETER
(
nNumbîOfByãsToLockHigh
);

2331 i‡(!
pFûe
->
hMuãx
Ë 
TRUE
;

2332 
	`wö˚MuãxAcquúe
(
pFûe
->
hMuãx
);

2335 i‡(
dwFûeOff£tLow
 =(
DWORD
)
SHARED_FIRST


2336 && 
nNumbîOfByãsToLockLow
 =(
DWORD
)
SHARED_SIZE
){

2337 i‡(
pFûe
->
sh¨ed
->
nRódîs
 =0 &&ÖFûe->sh¨ed->
bEx˛usive
 == 0){

2338 
pFûe
->
sh¨ed
->
bEx˛usive
 = 
TRUE
;

2339 
pFûe
->
loˇl
.
bEx˛usive
 = 
TRUE
;

2340 
bRëu∫
 = 
TRUE
;

2345 i‡(
dwFûeOff£tLow
 =(
DWORD
)
SHARED_FIRST
 &&

2346 
nNumbîOfByãsToLockLow
 == 1){

2347 i‡(
pFûe
->
sh¨ed
->
bEx˛usive
 == 0){

2348 
pFûe
->
loˇl
.
nRódîs
 ++;

2349 i‡(
pFûe
->
loˇl
.
nRódîs
 == 1){

2350 
pFûe
->
sh¨ed
->
nRódîs
 ++;

2352 
bRëu∫
 = 
TRUE
;

2357 i‡(
dwFûeOff£tLow
 =(
DWORD
)
PENDING_BYTE


2358 && 
nNumbîOfByãsToLockLow
 == 1){

2360 i‡(
pFûe
->
sh¨ed
->
bPídög
 == 0) {

2361 
pFûe
->
sh¨ed
->
bPídög
 = 
TRUE
;

2362 
pFûe
->
loˇl
.
bPídög
 = 
TRUE
;

2363 
bRëu∫
 = 
TRUE
;

2368 i‡(
dwFûeOff£tLow
 =(
DWORD
)
RESERVED_BYTE


2369 && 
nNumbîOfByãsToLockLow
 == 1){

2370 i‡(
pFûe
->
sh¨ed
->
bRe£rved
 == 0) {

2371 
pFûe
->
sh¨ed
->
bRe£rved
 = 
TRUE
;

2372 
pFûe
->
loˇl
.
bRe£rved
 = 
TRUE
;

2373 
bRëu∫
 = 
TRUE
;

2377 
	`wö˚MuãxRñó£
(
pFûe
->
hMuãx
);

2378  
bRëu∫
;

2379 
	}
}

2384 
BOOL
 
	$wö˚U∆ockFûe
(

2385 
LPHANDLE
 
phFûe
,

2386 
DWORD
 
dwFûeOff£tLow
,

2387 
DWORD
 
dwFûeOff£tHigh
,

2388 
DWORD
 
nNumbîOfByãsToU∆ockLow
,

2389 
DWORD
 
nNumbîOfByãsToU∆ockHigh


2391 
wöFûe
 *
pFûe
 = 
	`HANDLE_TO_WINFILE
(
phFûe
);

2392 
BOOL
 
bRëu∫
 = 
FALSE
;

2394 
	`UNUSED_PARAMETER
(
dwFûeOff£tHigh
);

2395 
	`UNUSED_PARAMETER
(
nNumbîOfByãsToU∆ockHigh
);

2397 i‡(!
pFûe
->
hMuãx
Ë 
TRUE
;

2398 
	`wö˚MuãxAcquúe
(
pFûe
->
hMuãx
);

2401 i‡(
dwFûeOff£tLow
 =(
DWORD
)
SHARED_FIRST
){

2403 i‡(
pFûe
->
loˇl
.
bEx˛usive
){

2404 
	`as£π
(
nNumbîOfByãsToU∆ockLow
 =(
DWORD
)
SHARED_SIZE
);

2405 
pFûe
->
loˇl
.
bEx˛usive
 = 
FALSE
;

2406 
pFûe
->
sh¨ed
->
bEx˛usive
 = 
FALSE
;

2407 
bRëu∫
 = 
TRUE
;

2411 i‡(
pFûe
->
loˇl
.
nRódîs
){

2412 
	`as£π
(
nNumbîOfByãsToU∆ockLow
 =(
DWORD
)
SHARED_SIZE


2413 || 
nNumbîOfByãsToU∆ockLow
 == 1);

2414 
pFûe
->
loˇl
.
nRódîs
 --;

2415 i‡(
pFûe
->
loˇl
.
nRódîs
 == 0)

2417 
pFûe
->
sh¨ed
->
nRódîs
 --;

2419 
bRëu∫
 = 
TRUE
;

2424 i‡(
dwFûeOff£tLow
 =(
DWORD
)
PENDING_BYTE


2425 && 
nNumbîOfByãsToU∆ockLow
 == 1){

2426 i‡(
pFûe
->
loˇl
.
bPídög
){

2427 
pFûe
->
loˇl
.
bPídög
 = 
FALSE
;

2428 
pFûe
->
sh¨ed
->
bPídög
 = 
FALSE
;

2429 
bRëu∫
 = 
TRUE
;

2433 i‡(
dwFûeOff£tLow
 =(
DWORD
)
RESERVED_BYTE


2434 && 
nNumbîOfByãsToU∆ockLow
 == 1){

2435 i‡(
pFûe
->
loˇl
.
bRe£rved
) {

2436 
pFûe
->
loˇl
.
bRe£rved
 = 
FALSE
;

2437 
pFûe
->
sh¨ed
->
bRe£rved
 = 
FALSE
;

2438 
bRëu∫
 = 
TRUE
;

2442 
	`wö˚MuãxRñó£
(
pFûe
->
hMuãx
);

2443  
bRëu∫
;

2444 
	}
}

2453 
BOOL
 
	$wöLockFûe
(

2454 
LPHANDLE
 
phFûe
,

2455 
DWORD
 
Êags
,

2456 
DWORD
 
off£tLow
,

2457 
DWORD
 
off£tHigh
,

2458 
DWORD
 
numByãsLow
,

2459 
DWORD
 
numByãsHigh


2461 #i‡
SQLITE_OS_WINCE


2466  
	`wö˚LockFûe
(
phFûe
, 
off£tLow
, 
off£tHigh
,

2467 
numByãsLow
, 
numByãsHigh
);

2469 if–
	`osIsNT
() ){

2470 
OVERLAPPED
 
ovÕ
;

2471 
	`mem£t
(&
ovÕ
, 0, (
OVERLAPPED
));

2472 
ovÕ
.
Off£t
 = 
off£tLow
;

2473 
ovÕ
.
Off£tHigh
 = 
off£tHigh
;

2474  
	`osLockFûeEx
(*
phFûe
, 
Êags
, 0, 
numByãsLow
, 
numByãsHigh
, &
ovÕ
);

2476  
	`osLockFûe
(*
phFûe
, 
off£tLow
, 
off£tHigh
, 
numByãsLow
,

2477 
numByãsHigh
);

2480 
	}
}

2485 
BOOL
 
	$wöU∆ockFûe
(

2486 
LPHANDLE
 
phFûe
,

2487 
DWORD
 
off£tLow
,

2488 
DWORD
 
off£tHigh
,

2489 
DWORD
 
numByãsLow
,

2490 
DWORD
 
numByãsHigh


2492 #i‡
SQLITE_OS_WINCE


2497  
	`wö˚U∆ockFûe
(
phFûe
, 
off£tLow
, 
off£tHigh
,

2498 
numByãsLow
, 
numByãsHigh
);

2500 if–
	`osIsNT
() ){

2501 
OVERLAPPED
 
ovÕ
;

2502 
	`mem£t
(&
ovÕ
, 0, (
OVERLAPPED
));

2503 
ovÕ
.
Off£t
 = 
off£tLow
;

2504 
ovÕ
.
Off£tHigh
 = 
off£tHigh
;

2505  
	`osU∆ockFûeEx
(*
phFûe
, 0, 
numByãsLow
, 
numByãsHigh
, &
ovÕ
);

2507  
	`osU∆ockFûe
(*
phFûe
, 
off£tLow
, 
off£tHigh
, 
numByãsLow
,

2508 
numByãsHigh
);

2511 
	}
}

2521 #i‚de‡
INVALID_SET_FILE_POINTER


2522 
	#INVALID_SET_FILE_POINTER
 ((
DWORD
)-1)

	)

2530 
	$wöSìkFûe
(
wöFûe
 *
pFûe
, 
sqlôe3_öt64
 
iOff£t
){

2531 #i‡!
SQLITE_OS_WINRT


2532 
LONG
 
uµîBôs
;

2533 
LONG
 
lowîBôs
;

2534 
DWORD
 
dwRë
;

2535 
DWORD
 
œ°Eºno
;

2537 
	`OSTRACE
(("SEEK fûe=%p, off£t=%Œd\n", 
pFûe
->
h
, 
iOff£t
));

2539 
uµîBôs
 = (
LONG
)((
iOff£t
>>32) & 0x7fffffff);

2540 
lowîBôs
 = (
LONG
)(
iOff£t
 & 0xffffffff);

2549 
dwRë
 = 
	`osSëFûePoöãr
(
pFûe
->
h
, 
lowîBôs
, &
uµîBôs
, 
FILE_BEGIN
);

2551 if–(
dwRë
==
INVALID_SET_FILE_POINTER


2552 && ((
œ°Eºno
 = 
	`osGëLa°Eº‹
())!=
NO_ERROR
)) ){

2553 
pFûe
->
œ°Eºno
 =ÜastErrno;

2554 
	`wöLogEº‹
(
SQLITE_IOERR_SEEK
, 
pFûe
->
œ°Eºno
,

2555 "wöSìkFûe", 
pFûe
->
zP©h
);

2556 
	`OSTRACE
(("SEEK fûe=%p,Ñc=SQLITE_IOERR_SEEK\n", 
pFûe
->
h
));

2560 
	`OSTRACE
(("SEEK fûe=%p,Ñc=SQLITE_OK\n", 
pFûe
->
h
));

2567 
LARGE_INTEGER
 
x
;

2568 
BOOL
 
bRë
;

2570 
x
.
QuadP¨t
 = 
iOff£t
;

2571 
bRë
 = 
	`osSëFûePoöãrEx
(
pFûe
->
h
, 
x
, 0, 
FILE_BEGIN
);

2573 if(!
bRë
){

2574 
pFûe
->
œ°Eºno
 = 
	`osGëLa°Eº‹
();

2575 
	`wöLogEº‹
(
SQLITE_IOERR_SEEK
, 
pFûe
->
œ°Eºno
,

2576 "wöSìkFûe", 
pFûe
->
zP©h
);

2577 
	`OSTRACE
(("SEEK fûe=%p,Ñc=SQLITE_IOERR_SEEK\n", 
pFûe
->
h
));

2581 
	`OSTRACE
(("SEEK fûe=%p,Ñc=SQLITE_OK\n", 
pFûe
->
h
));

2584 
	}
}

2586 #i‡
SQLITE_MAX_MMAP_SIZE
>0

2588 
wöM≠fûe
(
wöFûe
*, 
sqlôe3_öt64
);

2589 
wöUnm≠fûe
(
wöFûe
*);

2602 
	#MX_CLOSE_ATTEMPT
 3

	)

2603 
	$wöClo£
(
sqlôe3_fûe
 *
id
){

2604 
rc
, 
˙t
 = 0;

2605 
wöFûe
 *
pFûe
 = (wöFûe*)
id
;

2607 
	`as£π
–
id
!=0 );

2608 #i‚de‡
SQLITE_OMIT_WAL


2609 
	`as£π
–
pFûe
->
pShm
==0 );

2611 
	`as£π
–
pFûe
->
h
!=
NULL
 &&ÖFûe->h!=
INVALID_HANDLE_VALUE
 );

2612 
	`OSTRACE
(("CLOSEÖid=%lu,ÖFile=%p, file=%p\n",

2613 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
h
));

2615 #i‡
SQLITE_MAX_MMAP_SIZE
>0

2616 
	`wöUnm≠fûe
(
pFûe
);

2620 
rc
 = 
	`osClo£H™dÀ
(
pFûe
->
h
);

2622 } 
rc
==0 && ++
˙t
 < 
MX_CLOSE_ATTEMPT
 && (
	`sqlôe3_wö32_¶ìp
(100), 1) );

2623 #i‡
SQLITE_OS_WINCE


2624 
	#WINCE_DELETION_ATTEMPTS
 3

	)

2626 
wöVfsAµD©a
 *
pAµD©a
 = (wöVfsAµD©a*)
pFûe
->
pVfs
->pAppData;

2627 if–
pAµD©a
==
NULL
 || !pAµD©a->
bNoLock
 ){

2628 
	`wö˚De°royLock
(
pFûe
);

2631 if–
pFûe
->
zDñëeOnClo£
 ){

2632 
˙t
 = 0;

2634 
	`osDñëeFûeW
(
pFûe
->
zDñëeOnClo£
)==0

2635 && 
	`osGëFûeAâribuãsW
(
pFûe
->
zDñëeOnClo£
)!=0xffffffff

2636 && 
˙t
++ < 
WINCE_DELETION_ATTEMPTS


2638 
	`sqlôe3_wö32_¶ìp
(100);

2640 
	`sqlôe3_‰ì
(
pFûe
->
zDñëeOnClo£
);

2643 if–
rc
 ){

2644 
pFûe
->
h
 = 
NULL
;

2646 
	`O≥nCou¡î
(-1);

2647 
	`OSTRACE
(("CLOSEÖid=%lu,ÖFile=%p, file=%p,Ñc=%s\n",

2648 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
h
, 
rc
 ? "ok" : "failed"));

2649  
rc
 ? 
SQLITE_OK


2650 : 
	`wöLogEº‹
(
SQLITE_IOERR_CLOSE
, 
	`osGëLa°Eº‹
(),

2651 "wöClo£", 
pFûe
->
zP©h
);

2652 
	}
}

2659 
	$wöRód
(

2660 
sqlôe3_fûe
 *
id
,

2661 *
pBuf
,

2662 
amt
,

2663 
sqlôe3_öt64
 
off£t


2665 #i‡!
SQLITE_OS_WINCE
 && !
	`deföed
(
SQLITE_WIN32_NO_OVERLAPPED
)

2666 
OVERLAPPED
 
ovîœµed
;

2668 
wöFûe
 *
pFûe
 = (wöFûe*)
id
;

2669 
DWORD
 
nRód
;

2670 
nRëry
 = 0;

2672 
	`as£π
–
id
!=0 );

2673 
	`as£π
–
amt
>0 );

2674 
	`as£π
–
off£t
>=0 );

2675 
	`SimuœãIOEº‹
( 
SQLITE_IOERR_READ
);

2676 
	`OSTRACE
(("READÖid=%lu,ÖFile=%p, file=%p, buffer=%p,ámount=%d, "

2677 "off£t=%Œd,Üock=%d\n", 
	`osGëCuºítPro˚ssId
(), 
pFûe
,

2678 
pFûe
->
h
, 
pBuf
, 
amt
, 
off£t
,ÖFûe->
lockty≥
));

2680 #i‡
SQLITE_MAX_MMAP_SIZE
>0

2683 if–
off£t
<
pFûe
->
mm≠Size
 ){

2684 if–
off£t
+
amt
 <
pFûe
->
mm≠Size
 ){

2685 
	`mem˝y
(
pBuf
, &((
u8
 *)(
pFûe
->
pM≠Regi⁄
))[
off£t
], 
amt
);

2686 
	`OSTRACE
(("READ-MMAPÖid=%lu,ÖFile=%p, file=%p,Ñc=SQLITE_OK\n",

2687 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
h
));

2688  
SQLITE_OK
;

2690 
nC›y
 = ()(
pFûe
->
mm≠Size
 - 
off£t
);

2691 
	`mem˝y
(
pBuf
, &((
u8
 *)(
pFûe
->
pM≠Regi⁄
))[
off£t
], 
nC›y
);

2692 
pBuf
 = &((
u8
 *ÌBuf)[
nC›y
];

2693 
amt
 -
nC›y
;

2694 
off£t
 +
nC›y
;

2699 #i‡
SQLITE_OS_WINCE
 || 
	`deföed
(
SQLITE_WIN32_NO_OVERLAPPED
)

2700 if–
	`wöSìkFûe
(
pFûe
, 
off£t
) ){

2701 
	`OSTRACE
(("READÖid=%lu,ÖFile=%p, file=%p,Ñc=SQLITE_FULL\n",

2702 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
h
));

2703  
SQLITE_FULL
;

2705  !
	`osRódFûe
(
pFûe
->
h
, 
pBuf
, 
amt
, &
nRód
, 0) ){

2707 
	`mem£t
(&
ovîœµed
, 0, (
OVERLAPPED
));

2708 
ovîœµed
.
Off£t
 = (
LONG
)(
off£t
 & 0xffffffff);

2709 
ovîœµed
.
Off£tHigh
 = (
LONG
)((
off£t
>>32) & 0x7fffffff);

2710  !
	`osRódFûe
(
pFûe
->
h
, 
pBuf
, 
amt
, &
nRód
, &
ovîœµed
) &&

2711 
	`osGëLa°Eº‹
()!=
ERROR_HANDLE_EOF
 ){

2713 
DWORD
 
œ°Eºno
;

2714 if–
	`wöRëryI€º
(&
nRëry
, &
œ°Eºno
) ) ;

2715 
pFûe
->
œ°Eºno
 =ÜastErrno;

2716 
	`OSTRACE
(("READÖid=%lu,ÖFile=%p, file=%p,Ñc=SQLITE_IOERR_READ\n",

2717 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
h
));

2718  
	`wöLogEº‹
(
SQLITE_IOERR_READ
, 
pFûe
->
œ°Eºno
,

2719 "wöRód", 
pFûe
->
zP©h
);

2721 
	`wöLogI€º
(
nRëry
, 
__LINE__
);

2722 if–
nRód
<(
DWORD
)
amt
 ){

2724 
	`mem£t
(&((*)
pBuf
)[
nRód
], 0, 
amt
-nRead);

2725 
	`OSTRACE
(("READÖid=%lu,ÖFile=%p, file=%p,Ñc=SQLITE_IOERR_SHORT_READ\n",

2726 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
h
));

2727  
SQLITE_IOERR_SHORT_READ
;

2730 
	`OSTRACE
(("READÖid=%lu,ÖFile=%p, file=%p,Ñc=SQLITE_OK\n",

2731 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
h
));

2732  
SQLITE_OK
;

2733 
	}
}

2739 
	$wöWrôe
(

2740 
sqlôe3_fûe
 *
id
,

2741 c⁄° *
pBuf
,

2742 
amt
,

2743 
sqlôe3_öt64
 
off£t


2745 
rc
 = 0;

2746 
wöFûe
 *
pFûe
 = (wöFûe*)
id
;

2747 
nRëry
 = 0;

2749 
	`as£π
–
amt
>0 );

2750 
	`as£π
–
pFûe
 );

2751 
	`SimuœãIOEº‹
( 
SQLITE_IOERR_WRITE
);

2752 
	`SimuœãDiskfuŒEº‹
( 
SQLITE_FULL
);

2754 
	`OSTRACE
(("WRITEÖid=%lu,ÖFile=%p, file=%p, buffer=%p,ámount=%d, "

2755 "off£t=%Œd,Üock=%d\n", 
	`osGëCuºítPro˚ssId
(), 
pFûe
,

2756 
pFûe
->
h
, 
pBuf
, 
amt
, 
off£t
,ÖFûe->
lockty≥
));

2758 #i‡
	`deföed
(
SQLITE_MMAP_READWRITE
Ë&& 
SQLITE_MAX_MMAP_SIZE
>0

2761 if–
off£t
<
pFûe
->
mm≠Size
 ){

2762 if–
off£t
+
amt
 <
pFûe
->
mm≠Size
 ){

2763 
	`mem˝y
(&((
u8
 *)(
pFûe
->
pM≠Regi⁄
))[
off£t
], 
pBuf
, 
amt
);

2764 
	`OSTRACE
(("WRITE-MMAPÖid=%lu,ÖFile=%p, file=%p,Ñc=SQLITE_OK\n",

2765 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
h
));

2766  
SQLITE_OK
;

2768 
nC›y
 = ()(
pFûe
->
mm≠Size
 - 
off£t
);

2769 
	`mem˝y
(&((
u8
 *)(
pFûe
->
pM≠Regi⁄
))[
off£t
], 
pBuf
, 
nC›y
);

2770 
pBuf
 = &((
u8
 *ÌBuf)[
nC›y
];

2771 
amt
 -
nC›y
;

2772 
off£t
 +
nC›y
;

2777 #i‡
SQLITE_OS_WINCE
 || 
	`deföed
(
SQLITE_WIN32_NO_OVERLAPPED
)

2778 
rc
 = 
	`wöSìkFûe
(
pFûe
, 
off£t
);

2779 if–
rc
==0 ){

2783 #i‡!
SQLITE_OS_WINCE
 && !
	`deföed
(
SQLITE_WIN32_NO_OVERLAPPED
)

2784 
OVERLAPPED
 
ovîœµed
;

2786 
u8
 *
aRem
 = (u8 *)
pBuf
;

2787 
nRem
 = 
amt
;

2788 
DWORD
 
nWrôe
;

2789 
DWORD
 
œ°Eºno
 = 
NO_ERROR
;

2791 #i‡!
SQLITE_OS_WINCE
 && !
	`deföed
(
SQLITE_WIN32_NO_OVERLAPPED
)

2792 
	`mem£t
(&
ovîœµed
, 0, (
OVERLAPPED
));

2793 
ovîœµed
.
Off£t
 = (
LONG
)(
off£t
 & 0xffffffff);

2794 
ovîœµed
.
Off£tHigh
 = (
LONG
)((
off£t
>>32) & 0x7fffffff);

2797  
nRem
>0 ){

2798 #i‡
SQLITE_OS_WINCE
 || 
	`deföed
(
SQLITE_WIN32_NO_OVERLAPPED
)

2799 if–!
	`osWrôeFûe
(
pFûe
->
h
, 
aRem
, 
nRem
, &
nWrôe
, 0) ){

2801 if–!
	`osWrôeFûe
(
pFûe
->
h
, 
aRem
, 
nRem
, &
nWrôe
, &
ovîœµed
) ){

2803 if–
	`wöRëryI€º
(&
nRëry
, &
œ°Eºno
) ) ;

2806 
	`as£π
–
nWrôe
==0 ||ÇWrôe<=(
DWORD
)
nRem
 );

2807 if–
nWrôe
==0 ||ÇWrôe>(
DWORD
)
nRem
 ){

2808 
œ°Eºno
 = 
	`osGëLa°Eº‹
();

2811 #i‡!
SQLITE_OS_WINCE
 && !
	`deföed
(
SQLITE_WIN32_NO_OVERLAPPED
)

2812 
off£t
 +
nWrôe
;

2813 
ovîœµed
.
Off£t
 = (
LONG
)(
off£t
 & 0xffffffff);

2814 
ovîœµed
.
Off£tHigh
 = (
LONG
)((
off£t
>>32) & 0x7fffffff);

2816 
aRem
 +
nWrôe
;

2817 
nRem
 -
nWrôe
;

2819 if–
nRem
>0 ){

2820 
pFûe
->
œ°Eºno
 =ÜastErrno;

2821 
rc
 = 1;

2825 if–
rc
 ){

2826 if––
pFûe
->
œ°Eºno
==
ERROR_HANDLE_DISK_FULL
 )

2827 || ( 
pFûe
->
œ°Eºno
==
ERROR_DISK_FULL
 )){

2828 
	`OSTRACE
(("WRITEÖid=%lu,ÖFile=%p, file=%p,Ñc=SQLITE_FULL\n",

2829 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
h
));

2830  
	`wöLogEº‹
(
SQLITE_FULL
, 
pFûe
->
œ°Eºno
,

2831 "wöWrôe1", 
pFûe
->
zP©h
);

2833 
	`OSTRACE
(("WRITEÖid=%lu,ÖFile=%p, file=%p,Ñc=SQLITE_IOERR_WRITE\n",

2834 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
h
));

2835  
	`wöLogEº‹
(
SQLITE_IOERR_WRITE
, 
pFûe
->
œ°Eºno
,

2836 "wöWrôe2", 
pFûe
->
zP©h
);

2838 
	`wöLogI€º
(
nRëry
, 
__LINE__
);

2840 
	`OSTRACE
(("WRITEÖid=%lu,ÖFile=%p, file=%p,Ñc=SQLITE_OK\n",

2841 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
h
));

2842  
SQLITE_OK
;

2843 
	}
}

2848 
	$wöTrunˇã
(
sqlôe3_fûe
 *
id
, 
sqlôe3_öt64
 
nByã
){

2849 
wöFûe
 *
pFûe
 = (wöFûe*)
id
;

2850 
rc
 = 
SQLITE_OK
;

2851 
DWORD
 
œ°Eºno
;

2853 
	`as£π
–
pFûe
 );

2854 
	`SimuœãIOEº‹
( 
SQLITE_IOERR_TRUNCATE
);

2855 
	`OSTRACE
(("TRUNCATEÖid=%lu,ÖFile=%p, file=%p, size=%lld,Üock=%d\n",

2856 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
h
, 
nByã
,ÖFûe->
lockty≥
));

2863 if–
pFûe
->
szChunk
>0 ){

2864 
nByã
 = (“Byã + 
pFûe
->
szChunk
 - 1)/pFile->szChunk) *ÖFile->szChunk;

2868 if–
	`wöSìkFûe
(
pFûe
, 
nByã
) ){

2869 
rc
 = 
	`wöLogEº‹
(
SQLITE_IOERR_TRUNCATE
, 
pFûe
->
œ°Eºno
,

2870 "wöTrunˇã1", 
pFûe
->
zP©h
);

2871 }if–0==
	`osSëEndOfFûe
(
pFûe
->
h
) &&

2872 ((
œ°Eºno
 = 
	`osGëLa°Eº‹
())!=
ERROR_USER_MAPPED_FILE
) ){

2873 
pFûe
->
œ°Eºno
 =ÜastErrno;

2874 
rc
 = 
	`wöLogEº‹
(
SQLITE_IOERR_TRUNCATE
, 
pFûe
->
œ°Eºno
,

2875 "wöTrunˇã2", 
pFûe
->
zP©h
);

2878 #i‡
SQLITE_MAX_MMAP_SIZE
>0

2883 if–
pFûe
->
pM≠Regi⁄
 && 
nByã
<pFûe->
mm≠Size
 ){

2884 
pFûe
->
mm≠Size
 = 
nByã
;

2888 
	`OSTRACE
(("TRUNCATEÖid=%lu,ÖFile=%p, file=%p,Ñc=%s\n",

2889 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
h
, 
	`sqlôe3EºName
(
rc
)));

2890  
rc
;

2891 
	}
}

2893 #ifde‡
SQLITE_TEST


2898 
	gsqlôe3_sync_cou¡
 = 0;

2899 
	gsqlôe3_fuŒsync_cou¡
 = 0;

2905 
	$wöSync
(
sqlôe3_fûe
 *
id
, 
Êags
){

2906 #i‚de‡
SQLITE_NO_SYNC


2910 
BOOL
 
rc
;

2912 #i‡!
	`deföed
(
NDEBUG
Ë|| !deföed(
SQLITE_NO_SYNC
) || \

2913 
	`deföed
(
SQLITE_HAVE_OS_TRACE
)

2918 
wöFûe
 *
pFûe
 = (wöFûe*)
id
;

2920 
	`UNUSED_PARAMETER
(
id
);

2923 
	`as£π
–
pFûe
 );

2925 
	`as£π
((
Êags
&0x0F)==
SQLITE_SYNC_NORMAL


2926 || (
Êags
&0x0F)==
SQLITE_SYNC_FULL


2932 
	`SimuœãDiskfuŒEº‹
– 
SQLITE_FULL
 );

2934 
	`OSTRACE
(("SYNCÖid=%lu,ÖFile=%p, file=%p, flags=%x,Üock=%d\n",

2935 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
h
, 
Êags
,

2936 
pFûe
->
lockty≥
));

2938 #i‚de‡
SQLITE_TEST


2939 
	`UNUSED_PARAMETER
(
Êags
);

2941 if–(
Êags
&0x0F)==
SQLITE_SYNC_FULL
 ){

2942 
sqlôe3_fuŒsync_cou¡
++;

2944 
sqlôe3_sync_cou¡
++;

2950 #ifde‡
SQLITE_NO_SYNC


2951 
	`OSTRACE
(("SYNC-NOPÖid=%lu,ÖFile=%p, file=%p,Ñc=SQLITE_OK\n",

2952 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
h
));

2953  
SQLITE_OK
;

2955 #i‡
SQLITE_MAX_MMAP_SIZE
>0

2956 if–
pFûe
->
pM≠Regi⁄
 ){

2957 if–
	`osFlushVõwOfFûe
(
pFûe
->
pM≠Regi⁄
, 0) ){

2958 
	`OSTRACE
(("SYNC-MMAPÖid=%lu,ÖFile=%p,ÖMapRegion=%p, "

2959 "rc=SQLITE_OK\n", 
	`osGëCuºítPro˚ssId
(),

2960 
pFûe
,ÖFûe->
pM≠Regi⁄
));

2962 
pFûe
->
œ°Eºno
 = 
	`osGëLa°Eº‹
();

2963 
	`OSTRACE
(("SYNC-MMAPÖid=%lu,ÖFile=%p,ÖMapRegion=%p, "

2964 "rc=SQLITE_IOERR_MMAP\n", 
	`osGëCuºítPro˚ssId
(),

2965 
pFûe
,ÖFûe->
pM≠Regi⁄
));

2966  
	`wöLogEº‹
(
SQLITE_IOERR_MMAP
, 
pFûe
->
œ°Eºno
,

2967 "wöSync1", 
pFûe
->
zP©h
);

2971 
rc
 = 
	`osFlushFûeBuf„rs
(
pFûe
->
h
);

2972 
	`SimuœãIOEº‹
–
rc
=
FALSE
 );

2973 if–
rc
 ){

2974 
	`OSTRACE
(("SYNCÖid=%lu,ÖFile=%p, file=%p,Ñc=SQLITE_OK\n",

2975 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
h
));

2976  
SQLITE_OK
;

2978 
pFûe
->
œ°Eºno
 = 
	`osGëLa°Eº‹
();

2979 
	`OSTRACE
(("SYNCÖid=%lu,ÖFile=%p, file=%p,Ñc=SQLITE_IOERR_FSYNC\n",

2980 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
h
));

2981  
	`wöLogEº‹
(
SQLITE_IOERR_FSYNC
, 
pFûe
->
œ°Eºno
,

2982 "wöSync2", 
pFûe
->
zP©h
);

2985 
	}
}

2990 
	$wöFûeSize
(
sqlôe3_fûe
 *
id
, 
sqlôe3_öt64
 *
pSize
){

2991 
wöFûe
 *
pFûe
 = (wöFûe*)
id
;

2992 
rc
 = 
SQLITE_OK
;

2994 
	`as£π
–
id
!=0 );

2995 
	`as£π
–
pSize
!=0 );

2996 
	`SimuœãIOEº‹
( 
SQLITE_IOERR_FSTAT
);

2997 
	`OSTRACE
(("SIZE fûe=%p,ÖSize=%p\n", 
pFûe
->
h
, 
pSize
));

2999 #i‡
SQLITE_OS_WINRT


3001 
FILE_STANDARD_INFO
 
öfo
;

3002 if–
	`osGëFûeInf‹m©i⁄ByH™dÀEx
(
pFûe
->
h
, 
FûeSènd¨dInfo
,

3003 &
öfo
, (info)) ){

3004 *
pSize
 = 
öfo
.
EndOfFûe
.
QuadP¨t
;

3006 
pFûe
->
œ°Eºno
 = 
	`osGëLa°Eº‹
();

3007 
rc
 = 
	`wöLogEº‹
(
SQLITE_IOERR_FSTAT
, 
pFûe
->
œ°Eºno
,

3008 "wöFûeSize", 
pFûe
->
zP©h
);

3013 
DWORD
 
uµîBôs
;

3014 
DWORD
 
lowîBôs
;

3015 
DWORD
 
œ°Eºno
;

3017 
lowîBôs
 = 
	`osGëFûeSize
(
pFûe
->
h
, &
uµîBôs
);

3018 *
pSize
 = (((
sqlôe3_öt64
)
uµîBôs
)<<32Ë+ 
lowîBôs
;

3019 if–(
lowîBôs
 =
INVALID_FILE_SIZE
)

3020 && ((
œ°Eºno
 = 
	`osGëLa°Eº‹
())!=
NO_ERROR
) ){

3021 
pFûe
->
œ°Eºno
 =ÜastErrno;

3022 
rc
 = 
	`wöLogEº‹
(
SQLITE_IOERR_FSTAT
, 
pFûe
->
œ°Eºno
,

3023 "wöFûeSize", 
pFûe
->
zP©h
);

3027 
	`OSTRACE
(("SIZE file=%p,ÖSize=%p, *pSize=%lld,Ñc=%s\n",

3028 
pFûe
->
h
, 
pSize
, *pSize, 
	`sqlôe3EºName
(
rc
)));

3029  
rc
;

3030 
	}
}

3035 #i‚de‡
LOCKFILE_FAIL_IMMEDIATELY


3036 
	#LOCKFILE_FAIL_IMMEDIATELY
 1

	)

3039 #i‚de‡
LOCKFILE_EXCLUSIVE_LOCK


3040 
	#LOCKFILE_EXCLUSIVE_LOCK
 2

	)

3050 #i‚de‡
SQLITE_LOCKFILE_FLAGS


3051 
	#SQLITE_LOCKFILE_FLAGS
 (
LOCKFILE_FAIL_IMMEDIATELY
 | \

3052 
LOCKFILE_EXCLUSIVE_LOCK
)

	)

3059 #i‚de‡
SQLITE_LOCKFILEEX_FLAGS


3060 
	#SQLITE_LOCKFILEEX_FLAGS
 (
LOCKFILE_FAIL_IMMEDIATELY
)

	)

3068 
	$wöGëRódLock
(
wöFûe
 *
pFûe
){

3069 
ªs
;

3070 
	`OSTRACE
(("READ-LOCK fûe=%p,Üock=%d\n", 
pFûe
->
h
,ÖFûe->
lockty≥
));

3071 if–
	`osIsNT
() ){

3072 #i‡
SQLITE_OS_WINCE


3077 
ªs
 = 
	`wö˚LockFûe
(&
pFûe
->
h
, 
SHARED_FIRST
, 0, 1, 0);

3079 
ªs
 = 
	`wöLockFûe
(&
pFûe
->
h
, 
SQLITE_LOCKFILEEX_FLAGS
, 
SHARED_FIRST
, 0,

3080 
SHARED_SIZE
, 0);

3083 #ifde‡
SQLITE_WIN32_HAS_ANSI


3085 
lk
;

3086 
	`sqlôe3_øndom√ss
((
lk
), &lk);

3087 
pFûe
->
sh¨edLockByã
 = ()((
lk
 & 0x7fffffff)%(
SHARED_SIZE
 - 1));

3088 
ªs
 = 
	`wöLockFûe
(&
pFûe
->
h
, 
SQLITE_LOCKFILE_FLAGS
,

3089 
SHARED_FIRST
+
pFûe
->
sh¨edLockByã
, 0, 1, 0);

3092 if–
ªs
 == 0 ){

3093 
pFûe
->
œ°Eºno
 = 
	`osGëLa°Eº‹
();

3096 
	`OSTRACE
(("READ-LOCK fûe=%p,Ñesu…=%d\n", 
pFûe
->
h
, 
ªs
));

3097  
ªs
;

3098 
	}
}

3103 
	$wöU∆ockRódLock
(
wöFûe
 *
pFûe
){

3104 
ªs
;

3105 
DWORD
 
œ°Eºno
;

3106 
	`OSTRACE
(("READ-UNLOCK fûe=%p,Üock=%d\n", 
pFûe
->
h
,ÖFûe->
lockty≥
));

3107 if–
	`osIsNT
() ){

3108 
ªs
 = 
	`wöU∆ockFûe
(&
pFûe
->
h
, 
SHARED_FIRST
, 0, 
SHARED_SIZE
, 0);

3110 #ifde‡
SQLITE_WIN32_HAS_ANSI


3112 
ªs
 = 
	`wöU∆ockFûe
(&
pFûe
->
h
, 
SHARED_FIRST
+pFûe->
sh¨edLockByã
, 0, 1, 0);

3115 if–
ªs
==0 && ((
œ°Eºno
 = 
	`osGëLa°Eº‹
())!=
ERROR_NOT_LOCKED
) ){

3116 
pFûe
->
œ°Eºno
 =ÜastErrno;

3117 
	`wöLogEº‹
(
SQLITE_IOERR_UNLOCK
, 
pFûe
->
œ°Eºno
,

3118 "wöU∆ockRódLock", 
pFûe
->
zP©h
);

3120 
	`OSTRACE
(("READ-UNLOCK fûe=%p,Ñesu…=%d\n", 
pFûe
->
h
, 
ªs
));

3121  
ªs
;

3122 
	}
}

3150 
	$wöLock
(
sqlôe3_fûe
 *
id
, 
lockty≥
){

3151 
rc
 = 
SQLITE_OK
;

3152 
ªs
 = 1;

3153 
√wLockty≥
;

3154 
gŸPídögLock
 = 0;

3155 
wöFûe
 *
pFûe
 = (wöFûe*)
id
;

3156 
DWORD
 
œ°Eºno
 = 
NO_ERROR
;

3158 
	`as£π
–
id
!=0 );

3159 
	`OSTRACE
(("LOCK file=%p, oldLock=%d(%d),ÇewLock=%d\n",

3160 
pFûe
->
h
,ÖFûe->
lockty≥
,ÖFûe->
sh¨edLockByã
,Üocktype));

3166 if–
pFûe
->
lockty≥
>=locktype ){

3167 
	`OSTRACE
(("LOCK-HELD fûe=%p,Ñc=SQLITE_OK\n", 
pFûe
->
h
));

3168  
SQLITE_OK
;

3173 if–(
pFûe
->
˘æFœgs
 & 
WINFILE_RDONLY
)!=0 && 
lockty≥
>=
RESERVED_LOCK
 ){

3174  
SQLITE_IOERR_LOCK
;

3179 
	`as£π
–
pFûe
->
lockty≥
!=
NO_LOCK
 ||Üockty≥==
SHARED_LOCK
 );

3180 
	`as£π
–
lockty≥
!=
PENDING_LOCK
 );

3181 
	`as£π
–
lockty≥
!=
RESERVED_LOCK
 || 
pFûe
->lockty≥==
SHARED_LOCK
 );

3187 
√wLockty≥
 = 
pFûe
->
lockty≥
;

3188 if–
pFûe
->
lockty≥
==
NO_LOCK


3189 || (
lockty≥
==
EXCLUSIVE_LOCK
 && 
pFûe
->lockty≥<=
RESERVED_LOCK
)

3191 
˙t
 = 3;

3192  
˙t
-->0 && (
ªs
 = 
	`wöLockFûe
(&
pFûe
->
h
, 
SQLITE_LOCKFILE_FLAGS
,

3193 
PENDING_BYTE
, 0, 1, 0))==0 ){

3200 
œ°Eºno
 = 
	`osGëLa°Eº‹
();

3201 
	`OSTRACE
(("LOCK-PENDING-FAIL file=%p, count=%d,Ñesult=%d\n",

3202 
pFûe
->
h
, 
˙t
, 
ªs
));

3203 if–
œ°Eºno
==
ERROR_INVALID_HANDLE
 ){

3204 
pFûe
->
œ°Eºno
 =ÜastErrno;

3205 
rc
 = 
SQLITE_IOERR_LOCK
;

3206 
	`OSTRACE
(("LOCK-FAIL file=%p, count=%d,Ñc=%s\n",

3207 
pFûe
->
h
, 
˙t
, 
	`sqlôe3EºName
(
rc
)));

3208  
rc
;

3210 if–
˙t
 ) 
	`sqlôe3_wö32_¶ìp
(1);

3212 
gŸPídögLock
 = 
ªs
;

3213 if–!
ªs
 ){

3214 
œ°Eºno
 = 
	`osGëLa°Eº‹
();

3220 if–
lockty≥
==
SHARED_LOCK
 && 
ªs
 ){

3221 
	`as£π
–
pFûe
->
lockty≥
==
NO_LOCK
 );

3222 
ªs
 = 
	`wöGëRódLock
(
pFûe
);

3223 if–
ªs
 ){

3224 
√wLockty≥
 = 
SHARED_LOCK
;

3226 
œ°Eºno
 = 
	`osGëLa°Eº‹
();

3232 if–
lockty≥
==
RESERVED_LOCK
 && 
ªs
 ){

3233 
	`as£π
–
pFûe
->
lockty≥
==
SHARED_LOCK
 );

3234 
ªs
 = 
	`wöLockFûe
(&
pFûe
->
h
, 
SQLITE_LOCKFILE_FLAGS
, 
RESERVED_BYTE
, 0, 1, 0);

3235 if–
ªs
 ){

3236 
√wLockty≥
 = 
RESERVED_LOCK
;

3238 
œ°Eºno
 = 
	`osGëLa°Eº‹
();

3244 if–
lockty≥
==
EXCLUSIVE_LOCK
 && 
ªs
 ){

3245 
√wLockty≥
 = 
PENDING_LOCK
;

3246 
gŸPídögLock
 = 0;

3251 if–
lockty≥
==
EXCLUSIVE_LOCK
 && 
ªs
 ){

3252 
	`as£π
–
pFûe
->
lockty≥
>=
SHARED_LOCK
 );

3253 
ªs
 = 
	`wöU∆ockRódLock
(
pFûe
);

3254 
ªs
 = 
	`wöLockFûe
(&
pFûe
->
h
, 
SQLITE_LOCKFILE_FLAGS
, 
SHARED_FIRST
, 0,

3255 
SHARED_SIZE
, 0);

3256 if–
ªs
 ){

3257 
√wLockty≥
 = 
EXCLUSIVE_LOCK
;

3259 
œ°Eºno
 = 
	`osGëLa°Eº‹
();

3260 
	`wöGëRódLock
(
pFûe
);

3267 if–
gŸPídögLock
 && 
lockty≥
==
SHARED_LOCK
 ){

3268 
	`wöU∆ockFûe
(&
pFûe
->
h
, 
PENDING_BYTE
, 0, 1, 0);

3274 if–
ªs
 ){

3275 
rc
 = 
SQLITE_OK
;

3277 
pFûe
->
œ°Eºno
 =ÜastErrno;

3278 
rc
 = 
SQLITE_BUSY
;

3279 
	`OSTRACE
(("LOCK-FAIL file=%p, wanted=%d, got=%d\n",

3280 
pFûe
->
h
, 
lockty≥
, 
√wLockty≥
));

3282 
pFûe
->
lockty≥
 = (
u8
)
√wLockty≥
;

3283 
	`OSTRACE
(("LOCK file=%p,Üock=%d,Ñc=%s\n",

3284 
pFûe
->
h
,ÖFûe->
lockty≥
, 
	`sqlôe3EºName
(
rc
)));

3285  
rc
;

3286 
	}
}

3293 
	$wöCheckRe£rvedLock
(
sqlôe3_fûe
 *
id
, *
pResOut
){

3294 
ªs
;

3295 
wöFûe
 *
pFûe
 = (wöFûe*)
id
;

3297 
	`SimuœãIOEº‹
– 
SQLITE_IOERR_CHECKRESERVEDLOCK
; );

3298 
	`OSTRACE
(("TEST-WR-LOCK fûe=%p,ÖResOut=%p\n", 
pFûe
->
h
, 
pResOut
));

3300 
	`as£π
–
id
!=0 );

3301 if–
pFûe
->
lockty≥
>=
RESERVED_LOCK
 ){

3302 
ªs
 = 1;

3303 
	`OSTRACE
(("TEST-WR-LOCK fûe=%p,Ñesu…=%d (loˇl)\n", 
pFûe
->
h
, 
ªs
));

3305 
ªs
 = 
	`wöLockFûe
(&
pFûe
->
h
, 
SQLITE_LOCKFILEEX_FLAGS
,
RESERVED_BYTE
,0,1,0);

3306 if–
ªs
 ){

3307 
	`wöU∆ockFûe
(&
pFûe
->
h
, 
RESERVED_BYTE
, 0, 1, 0);

3309 
ªs
 = !res;

3310 
	`OSTRACE
(("TEST-WR-LOCK fûe=%p,Ñesu…=%d (ªmŸe)\n", 
pFûe
->
h
, 
ªs
));

3312 *
pResOut
 = 
ªs
;

3313 
	`OSTRACE
(("TEST-WR-LOCK file=%p,ÖResOut=%p, *pResOut=%d,Ñc=SQLITE_OK\n",

3314 
pFûe
->
h
, 
pResOut
, *pResOut));

3315  
SQLITE_OK
;

3316 
	}
}

3329 
	$wöU∆ock
(
sqlôe3_fûe
 *
id
, 
lockty≥
){

3330 
ty≥
;

3331 
wöFûe
 *
pFûe
 = (wöFûe*)
id
;

3332 
rc
 = 
SQLITE_OK
;

3333 
	`as£π
–
pFûe
!=0 );

3334 
	`as£π
–
lockty≥
<=
SHARED_LOCK
 );

3335 
	`OSTRACE
(("UNLOCK file=%p, oldLock=%d(%d),ÇewLock=%d\n",

3336 
pFûe
->
h
,ÖFûe->
lockty≥
,ÖFûe->
sh¨edLockByã
,Üocktype));

3337 
ty≥
 = 
pFûe
->
lockty≥
;

3338 if–
ty≥
>=
EXCLUSIVE_LOCK
 ){

3339 
	`wöU∆ockFûe
(&
pFûe
->
h
, 
SHARED_FIRST
, 0, 
SHARED_SIZE
, 0);

3340 if–
lockty≥
==
SHARED_LOCK
 && !
	`wöGëRódLock
(
pFûe
) ){

3343 
rc
 = 
	`wöLogEº‹
(
SQLITE_IOERR_UNLOCK
, 
	`osGëLa°Eº‹
(),

3344 "wöU∆ock", 
pFûe
->
zP©h
);

3347 if–
ty≥
>=
RESERVED_LOCK
 ){

3348 
	`wöU∆ockFûe
(&
pFûe
->
h
, 
RESERVED_BYTE
, 0, 1, 0);

3350 if–
lockty≥
==
NO_LOCK
 && 
ty≥
>=
SHARED_LOCK
 ){

3351 
	`wöU∆ockRódLock
(
pFûe
);

3353 if–
ty≥
>=
PENDING_LOCK
 ){

3354 
	`wöU∆ockFûe
(&
pFûe
->
h
, 
PENDING_BYTE
, 0, 1, 0);

3356 
pFûe
->
lockty≥
 = (
u8
)locktype;

3357 
	`OSTRACE
(("UNLOCK file=%p,Üock=%d,Ñc=%s\n",

3358 
pFûe
->
h
,ÖFûe->
lockty≥
, 
	`sqlôe3EºName
(
rc
)));

3359  
rc
;

3360 
	}
}

3379 
	$wöNﬁockLock
(
sqlôe3_fûe
 *
id
, 
lockty≥
){

3380 
	`UNUSED_PARAMETER
(
id
);

3381 
	`UNUSED_PARAMETER
(
lockty≥
);

3382  
SQLITE_OK
;

3383 
	}
}

3385 
	$wöNﬁockCheckRe£rvedLock
(
sqlôe3_fûe
 *
id
, *
pResOut
){

3386 
	`UNUSED_PARAMETER
(
id
);

3387 
	`UNUSED_PARAMETER
(
pResOut
);

3388  
SQLITE_OK
;

3389 
	}
}

3391 
	$wöNﬁockU∆ock
(
sqlôe3_fûe
 *
id
, 
lockty≥
){

3392 
	`UNUSED_PARAMETER
(
id
);

3393 
	`UNUSED_PARAMETER
(
lockty≥
);

3394  
SQLITE_OK
;

3395 
	}
}

3406 
	$wöModeBô
(
wöFûe
 *
pFûe
, 
mask
, *
pArg
){

3407 if–*
pArg
<0 ){

3408 *
pArg
 = (
pFûe
->
˘æFœgs
 & 
mask
)!=0;

3409 }if–(*
pArg
)==0 ){

3410 
pFûe
->
˘æFœgs
 &~
mask
;

3412 
pFûe
->
˘æFœgs
 |
mask
;

3414 
	}
}

3417 
wöGëTem≤ame
(
sqlôe3_vfs
 *, **);

3418 
wöIsDú
(const *);

3419 
BOOL
 
wöIsDriveLëãrAndCﬁ⁄
(const *);

3424 
	$wöFûeC⁄åﬁ
(
sqlôe3_fûe
 *
id
, 
›
, *
pArg
){

3425 
wöFûe
 *
pFûe
 = (wöFûe*)
id
;

3426 
	`OSTRACE
(("FCNTL fûe=%p, op=%d,ÖArg=%p\n", 
pFûe
->
h
, 
›
, 
pArg
));

3427  
›
 ){

3428 
SQLITE_FCNTL_LOCKSTATE
: {

3429 *(*)
pArg
 = 
pFûe
->
lockty≥
;

3430 
	`OSTRACE
(("FCNTL fûe=%p,Ñc=SQLITE_OK\n", 
pFûe
->
h
));

3431  
SQLITE_OK
;

3433 
SQLITE_FCNTL_LAST_ERRNO
: {

3434 *(*)
pArg
 = ()
pFûe
->
œ°Eºno
;

3435 
	`OSTRACE
(("FCNTL fûe=%p,Ñc=SQLITE_OK\n", 
pFûe
->
h
));

3436  
SQLITE_OK
;

3438 
SQLITE_FCNTL_CHUNK_SIZE
: {

3439 
pFûe
->
szChunk
 = *(*)
pArg
;

3440 
	`OSTRACE
(("FCNTL fûe=%p,Ñc=SQLITE_OK\n", 
pFûe
->
h
));

3441  
SQLITE_OK
;

3443 
SQLITE_FCNTL_SIZE_HINT
: {

3444 if–
pFûe
->
szChunk
>0 ){

3445 
sqlôe3_öt64
 
ﬁdSz
;

3446 
rc
 = 
	`wöFûeSize
(
id
, &
ﬁdSz
);

3447 if–
rc
==
SQLITE_OK
 ){

3448 
sqlôe3_öt64
 
√wSz
 = *(sqlôe3_öt64*)
pArg
;

3449 if–
√wSz
>
ﬁdSz
 ){

3450 
	`SimuœãIOEº‹Bíign
(1);

3451 
rc
 = 
	`wöTrunˇã
(
id
, 
√wSz
);

3452 
	`SimuœãIOEº‹Bíign
(0);

3455 
	`OSTRACE
(("FCNTL fûe=%p,Ñc=%s\n", 
pFûe
->
h
, 
	`sqlôe3EºName
(
rc
)));

3456  
rc
;

3458 
	`OSTRACE
(("FCNTL fûe=%p,Ñc=SQLITE_OK\n", 
pFûe
->
h
));

3459  
SQLITE_OK
;

3461 
SQLITE_FCNTL_PERSIST_WAL
: {

3462 
	`wöModeBô
(
pFûe
, 
WINFILE_PERSIST_WAL
, (*)
pArg
);

3463 
	`OSTRACE
(("FCNTL fûe=%p,Ñc=SQLITE_OK\n", 
pFûe
->
h
));

3464  
SQLITE_OK
;

3466 
SQLITE_FCNTL_POWERSAFE_OVERWRITE
: {

3467 
	`wöModeBô
(
pFûe
, 
WINFILE_PSOW
, (*)
pArg
);

3468 
	`OSTRACE
(("FCNTL fûe=%p,Ñc=SQLITE_OK\n", 
pFûe
->
h
));

3469  
SQLITE_OK
;

3471 
SQLITE_FCNTL_VFSNAME
: {

3472 *(**)
pArg
 = 
	`sqlôe3_m¥ötf
("%s", 
pFûe
->
pVfs
->
zName
);

3473 
	`OSTRACE
(("FCNTL fûe=%p,Ñc=SQLITE_OK\n", 
pFûe
->
h
));

3474  
SQLITE_OK
;

3476 
SQLITE_FCNTL_WIN32_AV_RETRY
: {

3477 *
a
 = (*)
pArg
;

3478 if–
a
[0]>0 ){

3479 
wöI€ºRëry
 = 
a
[0];

3481 
a
[0] = 
wöI€ºRëry
;

3483 if–
a
[1]>0 ){

3484 
wöI€ºRëryDñay
 = 
a
[1];

3486 
a
[1] = 
wöI€ºRëryDñay
;

3488 
	`OSTRACE
(("FCNTL fûe=%p,Ñc=SQLITE_OK\n", 
pFûe
->
h
));

3489  
SQLITE_OK
;

3491 
SQLITE_FCNTL_WIN32_GET_HANDLE
: {

3492 
LPHANDLE
 
phFûe
 = (LPHANDLE)
pArg
;

3493 *
phFûe
 = 
pFûe
->
h
;

3494 
	`OSTRACE
(("FCNTL fûe=%p,Ñc=SQLITE_OK\n", 
pFûe
->
h
));

3495  
SQLITE_OK
;

3497 #ifde‡
SQLITE_TEST


3498 
SQLITE_FCNTL_WIN32_SET_HANDLE
: {

3499 
LPHANDLE
 
phFûe
 = (LPHANDLE)
pArg
;

3500 
HANDLE
 
hOldFûe
 = 
pFûe
->
h
;

3501 
pFûe
->
h
 = *
phFûe
;

3502 *
phFûe
 = 
hOldFûe
;

3503 
	`OSTRACE
(("FCNTL oldFile=%p,ÇewFile=%p,Ñc=SQLITE_OK\n",

3504 
hOldFûe
, 
pFûe
->
h
));

3505  
SQLITE_OK
;

3508 
SQLITE_FCNTL_TEMPFILENAME
: {

3509 *
zTFûe
 = 0;

3510 
rc
 = 
	`wöGëTem≤ame
(
pFûe
->
pVfs
, &
zTFûe
);

3511 if–
rc
==
SQLITE_OK
 ){

3512 *(**)
pArg
 = 
zTFûe
;

3514 
	`OSTRACE
(("FCNTL fûe=%p,Ñc=%s\n", 
pFûe
->
h
, 
	`sqlôe3EºName
(
rc
)));

3515  
rc
;

3517 #i‡
SQLITE_MAX_MMAP_SIZE
>0

3518 
SQLITE_FCNTL_MMAP_SIZE
: {

3519 
i64
 
√wLimô
 = *(i64*)
pArg
;

3520 
rc
 = 
SQLITE_OK
;

3521 if–
√wLimô
>
sqlôe3GlobÆC⁄fig
.
mxMm≠
 ){

3522 
√wLimô
 = 
sqlôe3GlobÆC⁄fig
.
mxMm≠
;

3524 *(
i64
*)
pArg
 = 
pFûe
->
mm≠SizeMax
;

3525 if–
√wLimô
>=0 &&ÇewLimô!=
pFûe
->
mm≠SizeMax
 &&ÖFûe->
nFëchOut
==0 ){

3526 
pFûe
->
mm≠SizeMax
 = 
√wLimô
;

3527 if–
pFûe
->
mm≠Size
>0 ){

3528 
	`wöUnm≠fûe
(
pFûe
);

3529 
rc
 = 
	`wöM≠fûe
(
pFûe
, -1);

3532 
	`OSTRACE
(("FCNTL fûe=%p,Ñc=%s\n", 
pFûe
->
h
, 
	`sqlôe3EºName
(
rc
)));

3533  
rc
;

3537 
	`OSTRACE
(("FCNTL fûe=%p,Ñc=SQLITE_NOTFOUND\n", 
pFûe
->
h
));

3538  
SQLITE_NOTFOUND
;

3539 
	}
}

3551 
	$wöSe˘‹Size
(
sqlôe3_fûe
 *
id
){

3552 ()
id
;

3553  
SQLITE_DEFAULT_SECTOR_SIZE
;

3554 
	}
}

3559 
	$wöDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
 *
id
){

3560 
wöFûe
 *
p
 = (wöFûe*)
id
;

3561  
SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN
 |

3562 ((
p
->
˘æFœgs
 & 
WINFILE_PSOW
)?
SQLITE_IOCAP_POWERSAFE_OVERWRITE
:0);

3563 
	}
}

3571 
SYSTEM_INFO
 
	gwöSysInfo
;

3573 #i‚de‡
SQLITE_OMIT_WAL


3588 
	$wöShmE¡îMuãx
(){

3589 
	`sqlôe3_muãx_íãr
(
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_VFS1
));

3590 
	}
}

3591 
	$wöShmLóveMuãx
(){

3592 
	`sqlôe3_muãx_Àave
(
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_VFS1
));

3593 
	}
}

3594 #i‚de‡
NDEBUG


3595 
	$wöShmMuãxHñd
() {

3596  
	`sqlôe3_muãx_hñd
(
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_VFS1
));

3597 
	}
}

3623 
	swöShmNode
 {

3624 
sqlôe3_muãx
 *
	mmuãx
;

3625 *
	mzFûíame
;

3626 
wöFûe
 
	mhFûe
;

3628 
	mszRegi⁄
;

3629 
	mnRegi⁄
;

3630 
	sShmRegi⁄
 {

3631 
HANDLE
 
	mhM≠
;

3632 *
	mpM≠
;

3633 } *
	maRegi⁄
;

3634 
DWORD
 
	mœ°Eºno
;

3636 
	mnRef
;

3637 
wöShm
 *
	mpFú°
;

3638 
wöShmNode
 *
	mpNext
;

3639 #i‡
deföed
(
SQLITE_DEBUG
Ë|| deföed(
SQLITE_HAVE_OS_TRACE
)

3640 
u8
 
	m√xtShmId
;

3649 
wöShmNode
 *
	gwöShmNodeLi°
 = 0;

3664 
	swöShm
 {

3665 
wöShmNode
 *
	mpShmNode
;

3666 
wöShm
 *
	mpNext
;

3667 
u8
 
	mhasMuãx
;

3668 
u16
 
	msh¨edMask
;

3669 
u16
 
	mex˛Mask
;

3670 #i‡
deföed
(
SQLITE_DEBUG
Ë|| deföed(
SQLITE_HAVE_OS_TRACE
)

3671 
u8
 
	mid
;

3678 
	#WIN_SHM_BASE
 ((22+
SQLITE_SHM_NLOCK
)*4Ë

	)

3679 
	#WIN_SHM_DMS
 (
WIN_SHM_BASE
+
SQLITE_SHM_NLOCK
Ë

	)

3684 
	#WINSHM_UNLCK
 1

	)

3685 
	#WINSHM_RDLCK
 2

	)

3686 
	#WINSHM_WRLCK
 3

	)

3687 
	$wöShmSy°emLock
(

3688 
wöShmNode
 *
pFûe
,

3689 
lockTy≥
,

3690 
of°
,

3691 
nByã


3693 
rc
 = 0;

3696 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pFûe
->
muãx
Ë||ÖFûe->
nRef
==0 );

3698 
	`OSTRACE
(("SHM-LOCK file=%p,Üock=%d, offset=%d, size=%d\n",

3699 
pFûe
->
hFûe
.
h
, 
lockTy≥
, 
of°
, 
nByã
));

3702 if–
lockTy≥
==
WINSHM_UNLCK
 ){

3703 
rc
 = 
	`wöU∆ockFûe
(&
pFûe
->
hFûe
.
h
, 
of°
, 0, 
nByã
, 0);

3706 
DWORD
 
dwFœgs
 = 
LOCKFILE_FAIL_IMMEDIATELY
;

3707 if–
lockTy≥
 =
WINSHM_WRLCK
 ) 
dwFœgs
 |
LOCKFILE_EXCLUSIVE_LOCK
;

3708 
rc
 = 
	`wöLockFûe
(&
pFûe
->
hFûe
.
h
, 
dwFœgs
, 
of°
, 0, 
nByã
, 0);

3711 if–
rc
!= 0 ){

3712 
rc
 = 
SQLITE_OK
;

3714 
pFûe
->
œ°Eºno
 = 
	`osGëLa°Eº‹
();

3715 
rc
 = 
SQLITE_BUSY
;

3718 
	`OSTRACE
(("SHM-LOCK file=%p, func=%s,Érrno=%lu,Ñc=%s\n",

3719 
pFûe
->
hFûe
.
h
, (
lockTy≥
 =
WINSHM_UNLCK
) ? "winUnlockFile" :

3720 "wöLockFûe", 
pFûe
->
œ°Eºno
, 
	`sqlôe3EºName
(
rc
)));

3722  
rc
;

3723 
	}
}

3726 
wöO≥n
(
sqlôe3_vfs
*,c⁄° *,
sqlôe3_fûe
*,,*);

3727 
wöDñëe
(
sqlôe3_vfs
 *,const *,);

3735 
	$wöShmPurge
(
sqlôe3_vfs
 *
pVfs
, 
dñëeFœg
){

3736 
wöShmNode
 **
µ
;

3737 
wöShmNode
 *
p
;

3738 
	`as£π
–
	`wöShmMuãxHñd
() );

3739 
	`OSTRACE
(("SHM-PURGEÖid=%lu, deleteFlag=%d\n",

3740 
	`osGëCuºítPro˚ssId
(), 
dñëeFœg
));

3741 
µ
 = &
wöShmNodeLi°
;

3742  (
p
 = *
µ
)!=0 ){

3743 if–
p
->
nRef
==0 ){

3744 
i
;

3745 if–
p
->
muãx
 ){ 
	`sqlôe3_muãx_‰ì
(p->mutex); }

3746 
i
=0; i<
p
->
nRegi⁄
; i++){

3747 
BOOL
 
bRc
 = 
	`osUnm≠VõwOfFûe
(
p
->
aRegi⁄
[
i
].
pM≠
);

3748 
	`OSTRACE
(("SHM-PURGE-UNMAPÖid=%lu,Ñegion=%d,Ñc=%s\n",

3749 
	`osGëCuºítPro˚ssId
(), 
i
, 
bRc
 ? "ok" : "failed"));

3750 
	`UNUSED_VARIABLE_VALUE
(
bRc
);

3751 
bRc
 = 
	`osClo£H™dÀ
(
p
->
aRegi⁄
[
i
].
hM≠
);

3752 
	`OSTRACE
(("SHM-PURGE-CLOSEÖid=%lu,Ñegion=%d,Ñc=%s\n",

3753 
	`osGëCuºítPro˚ssId
(), 
i
, 
bRc
 ? "ok" : "failed"));

3754 
	`UNUSED_VARIABLE_VALUE
(
bRc
);

3756 if–
p
->
hFûe
.
h
!=
NULL
 &&Ö->hFûe.h!=
INVALID_HANDLE_VALUE
 ){

3757 
	`SimuœãIOEº‹Bíign
(1);

3758 
	`wöClo£
((
sqlôe3_fûe
 *)&
p
->
hFûe
);

3759 
	`SimuœãIOEº‹Bíign
(0);

3761 if–
dñëeFœg
 ){

3762 
	`SimuœãIOEº‹Bíign
(1);

3763 
	`sqlôe3BegöBíignMÆloc
();

3764 
	`wöDñëe
(
pVfs
, 
p
->
zFûíame
, 0);

3765 
	`sqlôe3EndBíignMÆloc
();

3766 
	`SimuœãIOEº‹Bíign
(0);

3768 *
µ
 = 
p
->
pNext
;

3769 
	`sqlôe3_‰ì
(
p
->
aRegi⁄
);

3770 
	`sqlôe3_‰ì
(
p
);

3772 
µ
 = &
p
->
pNext
;

3775 
	}
}

3784 
	$wöO≥nSh¨edMem‹y
(
wöFûe
 *
pDbFd
){

3785 
wöShm
 *
p
;

3786 
wöShmNode
 *
pShmNode
 = 0;

3787 
rc
;

3788 
wöShmNode
 *
pNew
;

3789 
nName
;

3791 
	`as£π
–
pDbFd
->
pShm
==0 );

3796 
p
 = 
	`sqlôe3MÆlocZîo
( (*p) );

3797 if–
p
==0 )  
SQLITE_IOERR_NOMEM_BKPT
;

3798 
nName
 = 
	`sqlôe3SåÀn30
(
pDbFd
->
zP©h
);

3799 
pNew
 = 
	`sqlôe3MÆlocZîo
–(*
pShmNode
Ë+ 
nName
 + 17 );

3800 if–
pNew
==0 ){

3801 
	`sqlôe3_‰ì
(
p
);

3802  
SQLITE_IOERR_NOMEM_BKPT
;

3804 
pNew
->
zFûíame
 = (*)&pNew[1];

3805 
	`sqlôe3_¢¥ötf
(
nName
+15, 
pNew
->
zFûíame
, "%s-shm", 
pDbFd
->
zP©h
);

3806 
	`sqlôe3FûeSuffix3
(
pDbFd
->
zP©h
, 
pNew
->
zFûíame
);

3811 
	`wöShmE¡îMuãx
();

3812 
pShmNode
 = 
wöShmNodeLi°
;ÖShmNode;ÖShmNodeıShmNode->
pNext
){

3816 if–
	`sqlôe3SåICmp
(
pShmNode
->
zFûíame
, 
pNew
->zFilename)==0 ) ;

3818 if–
pShmNode
 ){

3819 
	`sqlôe3_‰ì
(
pNew
);

3821 
pShmNode
 = 
pNew
;

3822 
pNew
 = 0;

3823 ((
wöFûe
*)(&
pShmNode
->
hFûe
))->
h
 = 
INVALID_HANDLE_VALUE
;

3824 
pShmNode
->
pNext
 = 
wöShmNodeLi°
;

3825 
wöShmNodeLi°
 = 
pShmNode
;

3827 if–
sqlôe3GlobÆC⁄fig
.
bC‹eMuãx
 ){

3828 
pShmNode
->
muãx
 = 
	`sqlôe3_muãx_Æloc
(
SQLITE_MUTEX_FAST
);

3829 if–
pShmNode
->
muãx
==0 ){

3830 
rc
 = 
SQLITE_IOERR_NOMEM_BKPT
;

3831 
shm_›í_îr
;

3835 
rc
 = 
	`wöO≥n
(
pDbFd
->
pVfs
,

3836 
pShmNode
->
zFûíame
,

3837 (
sqlôe3_fûe
*)&
pShmNode
->
hFûe
,

3838 
SQLITE_OPEN_WAL
 | 
SQLITE_OPEN_READWRITE
 | 
SQLITE_OPEN_CREATE
,

3840 if–
SQLITE_OK
!=
rc
 ){

3841 
shm_›í_îr
;

3847 if–
	`wöShmSy°emLock
(
pShmNode
, 
WINSHM_WRLCK
, 
WIN_SHM_DMS
, 1)==
SQLITE_OK
 ){

3848 
rc
 = 
	`wöTrunˇã
((
sqlôe3_fûe
 *)&
pShmNode
->
hFûe
, 0);

3849 if–
rc
!=
SQLITE_OK
 ){

3850 
rc
 = 
	`wöLogEº‹
(
SQLITE_IOERR_SHMOPEN
, 
	`osGëLa°Eº‹
(),

3851 "wöO≥nShm", 
pDbFd
->
zP©h
);

3854 if–
rc
==
SQLITE_OK
 ){

3855 
	`wöShmSy°emLock
(
pShmNode
, 
WINSHM_UNLCK
, 
WIN_SHM_DMS
, 1);

3856 
rc
 = 
	`wöShmSy°emLock
(
pShmNode
, 
WINSHM_RDLCK
, 
WIN_SHM_DMS
, 1);

3858 if–
rc
 ) 
shm_›í_îr
;

3862 
p
->
pShmNode
 =ÖShmNode;

3863 #i‡
	`deföed
(
SQLITE_DEBUG
Ë|| deföed(
SQLITE_HAVE_OS_TRACE
)

3864 
p
->
id
 = 
pShmNode
->
√xtShmId
++;

3866 
pShmNode
->
nRef
++;

3867 
pDbFd
->
pShm
 = 
p
;

3868 
	`wöShmLóveMuãx
();

3877 
	`sqlôe3_muãx_íãr
(
pShmNode
->
muãx
);

3878 
p
->
pNext
 = 
pShmNode
->
pFú°
;

3879 
pShmNode
->
pFú°
 = 
p
;

3880 
	`sqlôe3_muãx_Àave
(
pShmNode
->
muãx
);

3881  
SQLITE_OK
;

3884 
shm_›í_îr
:

3885 
	`wöShmSy°emLock
(
pShmNode
, 
WINSHM_UNLCK
, 
WIN_SHM_DMS
, 1);

3886 
	`wöShmPurge
(
pDbFd
->
pVfs
, 0);

3887 
	`sqlôe3_‰ì
(
p
);

3888 
	`sqlôe3_‰ì
(
pNew
);

3889 
	`wöShmLóveMuãx
();

3890  
rc
;

3891 
	}
}

3897 
	$wöShmUnm≠
(

3898 
sqlôe3_fûe
 *
fd
,

3899 
dñëeFœg


3901 
wöFûe
 *
pDbFd
;

3902 
wöShm
 *
p
;

3903 
wöShmNode
 *
pShmNode
;

3904 
wöShm
 **
µ
;

3906 
pDbFd
 = (
wöFûe
*)
fd
;

3907 
p
 = 
pDbFd
->
pShm
;

3908 if–
p
==0 )  
SQLITE_OK
;

3909 
pShmNode
 = 
p
->pShmNode;

3913 
	`sqlôe3_muãx_íãr
(
pShmNode
->
muãx
);

3914 
µ
=&
pShmNode
->
pFú°
; (*µ)!=
p
;Ö∞&(*µ)->
pNext
){}

3915 *
µ
 = 
p
->
pNext
;

3918 
	`sqlôe3_‰ì
(
p
);

3919 
pDbFd
->
pShm
 = 0;

3920 
	`sqlôe3_muãx_Àave
(
pShmNode
->
muãx
);

3924 
	`wöShmE¡îMuãx
();

3925 
	`as£π
–
pShmNode
->
nRef
>0 );

3926 
pShmNode
->
nRef
--;

3927 if–
pShmNode
->
nRef
==0 ){

3928 
	`wöShmPurge
(
pDbFd
->
pVfs
, 
dñëeFœg
);

3930 
	`wöShmLóveMuãx
();

3932  
SQLITE_OK
;

3933 
	}
}

3938 
	$wöShmLock
(

3939 
sqlôe3_fûe
 *
fd
,

3940 
of°
,

3941 
n
,

3942 
Êags


3944 
wöFûe
 *
pDbFd
 = (wöFûe*)
fd
;

3945 
wöShm
 *
p
 = 
pDbFd
->
pShm
;

3946 
wöShm
 *
pX
;

3947 
wöShmNode
 *
pShmNode
 = 
p
->pShmNode;

3948 
rc
 = 
SQLITE_OK
;

3949 
u16
 
mask
;

3951 
	`as£π
–
of°
>=0 && of°+
n
<=
SQLITE_SHM_NLOCK
 );

3952 
	`as£π
–
n
>=1 );

3953 
	`as£π
–
Êags
==(
SQLITE_SHM_LOCK
 | 
SQLITE_SHM_SHARED
)

3954 || 
Êags
==(
SQLITE_SHM_LOCK
 | 
SQLITE_SHM_EXCLUSIVE
)

3955 || 
Êags
==(
SQLITE_SHM_UNLOCK
 | 
SQLITE_SHM_SHARED
)

3956 || 
Êags
==(
SQLITE_SHM_UNLOCK
 | 
SQLITE_SHM_EXCLUSIVE
) );

3957 
	`as£π
–
n
==1 || (
Êags
 & 
SQLITE_SHM_EXCLUSIVE
)!=0 );

3959 
mask
 = (
u16
)((1U<<(
of°
+
n
)) - (1U<<ofst));

3960 
	`as£π
–
n
>1 || 
mask
==(1<<
of°
) );

3961 
	`sqlôe3_muãx_íãr
(
pShmNode
->
muãx
);

3962 if–
Êags
 & 
SQLITE_SHM_UNLOCK
 ){

3963 
u16
 
ÆlMask
 = 0;

3966 
pX
=
pShmNode
->
pFú°
;ÖX;ÖXıX->
pNext
){

3967 if–
pX
==
p
 ) ;

3968 
	`as£π
–(
pX
->
ex˛Mask
 & (
p
->ex˛Mask|p->
sh¨edMask
))==0 );

3969 
ÆlMask
 |
pX
->
sh¨edMask
;

3973 if–(
mask
 & 
ÆlMask
)==0 ){

3974 
rc
 = 
	`wöShmSy°emLock
(
pShmNode
, 
WINSHM_UNLCK
, 
of°
+
WIN_SHM_BASE
, 
n
);

3976 
rc
 = 
SQLITE_OK
;

3980 if–
rc
==
SQLITE_OK
 ){

3981 
p
->
ex˛Mask
 &~
mask
;

3982 
p
->
sh¨edMask
 &~
mask
;

3984 }if–
Êags
 & 
SQLITE_SHM_SHARED
 ){

3985 
u16
 
ÆlSh¨ed
 = 0;

3991 
pX
=
pShmNode
->
pFú°
;ÖX;ÖXıX->
pNext
){

3992 if–(
pX
->
ex˛Mask
 & 
mask
)!=0 ){

3993 
rc
 = 
SQLITE_BUSY
;

3996 
ÆlSh¨ed
 |
pX
->
sh¨edMask
;

4000 if–
rc
==
SQLITE_OK
 ){

4001 if–(
ÆlSh¨ed
 & 
mask
)==0 ){

4002 
rc
 = 
	`wöShmSy°emLock
(
pShmNode
, 
WINSHM_RDLCK
, 
of°
+
WIN_SHM_BASE
, 
n
);

4004 
rc
 = 
SQLITE_OK
;

4009 if–
rc
==
SQLITE_OK
 ){

4010 
p
->
sh¨edMask
 |
mask
;

4016 
pX
=
pShmNode
->
pFú°
;ÖX;ÖXıX->
pNext
){

4017 if–(
pX
->
ex˛Mask
 & 
mask
)!=0 || (pX->
sh¨edMask
 & mask)!=0 ){

4018 
rc
 = 
SQLITE_BUSY
;

4026 if–
rc
==
SQLITE_OK
 ){

4027 
rc
 = 
	`wöShmSy°emLock
(
pShmNode
, 
WINSHM_WRLCK
, 
of°
+
WIN_SHM_BASE
, 
n
);

4028 if–
rc
==
SQLITE_OK
 ){

4029 
	`as£π
–(
p
->
sh¨edMask
 & 
mask
)==0 );

4030 
p
->
ex˛Mask
 |
mask
;

4034 
	`sqlôe3_muãx_Àave
(
pShmNode
->
muãx
);

4035 
	`OSTRACE
(("SHM-LOCKÖid=%lu, id=%d, sharedMask=%03x,ÉxclMask=%03x,Ñc=%s\n",

4036 
	`osGëCuºítPro˚ssId
(), 
p
->
id
,Ö->
sh¨edMask
,Ö->
ex˛Mask
,

4037 
	`sqlôe3EºName
(
rc
)));

4038  
rc
;

4039 
	}
}

4047 
	$wöShmB¨rõr
(

4048 
sqlôe3_fûe
 *
fd


4050 
	`UNUSED_PARAMETER
(
fd
);

4051 
	`sqlôe3Mem‹yB¨rõr
();

4052 
	`wöShmE¡îMuãx
();

4053 
	`wöShmLóveMuãx
();

4054 
	}
}

4075 
	$wöShmM≠
(

4076 
sqlôe3_fûe
 *
fd
,

4077 
iRegi⁄
,

4078 
szRegi⁄
,

4079 
isWrôe
,

4080 vﬁ©ûê**
µ


4082 
wöFûe
 *
pDbFd
 = (wöFûe*)
fd
;

4083 
wöShm
 *
pShm
 = 
pDbFd
->pShm;

4084 
wöShmNode
 *
pShmNode
;

4085 
rc
 = 
SQLITE_OK
;

4087 if–!
pShm
 ){

4088 
rc
 = 
	`wöO≥nSh¨edMem‹y
(
pDbFd
);

4089 if–
rc
!=
SQLITE_OK
 ) Ñc;

4090 
pShm
 = 
pDbFd
->pShm;

4092 
pShmNode
 = 
pShm
->pShmNode;

4094 
	`sqlôe3_muãx_íãr
(
pShmNode
->
muãx
);

4095 
	`as£π
–
szRegi⁄
==
pShmNode
->szRegi⁄ ||ÖShmNode->
nRegi⁄
==0 );

4097 if–
pShmNode
->
nRegi⁄
<=
iRegi⁄
 ){

4098 
ShmRegi⁄
 *
≠New
;

4099 
nByã
 = (
iRegi⁄
+1)*
szRegi⁄
;

4100 
sqlôe3_öt64
 
sz
;

4102 
pShmNode
->
szRegi⁄
 = szRegion;

4108 
rc
 = 
	`wöFûeSize
((
sqlôe3_fûe
 *)&
pShmNode
->
hFûe
, &
sz
);

4109 if–
rc
!=
SQLITE_OK
 ){

4110 
rc
 = 
	`wöLogEº‹
(
SQLITE_IOERR_SHMSIZE
, 
	`osGëLa°Eº‹
(),

4111 "wöShmM≠1", 
pDbFd
->
zP©h
);

4112 
shm∑ge_out
;

4115 if–
sz
<
nByã
 ){

4122 if–!
isWrôe
 ) 
shm∑ge_out
;

4123 
rc
 = 
	`wöTrunˇã
((
sqlôe3_fûe
 *)&
pShmNode
->
hFûe
, 
nByã
);

4124 if–
rc
!=
SQLITE_OK
 ){

4125 
rc
 = 
	`wöLogEº‹
(
SQLITE_IOERR_SHMSIZE
, 
	`osGëLa°Eº‹
(),

4126 "wöShmM≠2", 
pDbFd
->
zP©h
);

4127 
shm∑ge_out
;

4132 
≠New
 = (
ShmRegi⁄
 *)
	`sqlôe3_ªÆloc64
(

4133 
pShmNode
->
aRegi⁄
, (
iRegi⁄
+1)*(
≠New
[0])

4135 if–!
≠New
 ){

4136 
rc
 = 
SQLITE_IOERR_NOMEM_BKPT
;

4137 
shm∑ge_out
;

4139 
pShmNode
->
aRegi⁄
 = 
≠New
;

4141  
pShmNode
->
nRegi⁄
<=
iRegi⁄
 ){

4142 
HANDLE
 
hM≠
 = 
NULL
;

4143 *
pM≠
 = 0;

4145 #i‡
SQLITE_OS_WINRT


4146 
hM≠
 = 
	`osCª©eFûeM≠pögFromAµ
(
pShmNode
->
hFûe
.
h
,

4147 
NULL
, 
PAGE_READWRITE
, 
nByã
, NULL

4149 #ñi‡
	`deföed
(
SQLITE_WIN32_HAS_WIDE
)

4150 
hM≠
 = 
	`osCª©eFûeM≠pögW
(
pShmNode
->
hFûe
.
h
,

4151 
NULL
, 
PAGE_READWRITE
, 0, 
nByã
, NULL

4153 #ñi‡
	`deföed
(
SQLITE_WIN32_HAS_ANSI
Ë&& 
SQLITE_WIN32_CREATEFILEMAPPINGA


4154 
hM≠
 = 
	`osCª©eFûeM≠pögA
(
pShmNode
->
hFûe
.
h
,

4155 
NULL
, 
PAGE_READWRITE
, 0, 
nByã
, NULL

4158 
	`OSTRACE
(("SHM-MAP-CREATEÖid=%lu,Ñegion=%d, size=%d,Ñc=%s\n",

4159 
	`osGëCuºítPro˚ssId
(), 
pShmNode
->
nRegi⁄
, 
nByã
,

4160 
hM≠
 ? "ok" : "failed"));

4161 if–
hM≠
 ){

4162 
iOff£t
 = 
pShmNode
->
nRegi⁄
*
szRegi⁄
;

4163 
iOff£tShi·
 = 
iOff£t
 % 
wöSysInfo
.
dwAŒoˇti⁄Gønuœrôy
;

4164 #i‡
SQLITE_OS_WINRT


4165 
pM≠
 = 
	`osM≠VõwOfFûeFromAµ
(
hM≠
, 
FILE_MAP_WRITE
 | 
FILE_MAP_READ
,

4166 
iOff£t
 - 
iOff£tShi·
, 
szRegi⁄
 + iOffsetShift

4169 
pM≠
 = 
	`osM≠VõwOfFûe
(
hM≠
, 
FILE_MAP_WRITE
 | 
FILE_MAP_READ
,

4170 0, 
iOff£t
 - 
iOff£tShi·
, 
szRegi⁄
 + iOffsetShift

4173 
	`OSTRACE
(("SHM-MAP-MAPÖid=%lu,Ñegion=%d, offset=%d, size=%d,Ñc=%s\n",

4174 
	`osGëCuºítPro˚ssId
(), 
pShmNode
->
nRegi⁄
, 
iOff£t
,

4175 
szRegi⁄
, 
pM≠
 ? "ok" : "failed"));

4177 if–!
pM≠
 ){

4178 
pShmNode
->
œ°Eºno
 = 
	`osGëLa°Eº‹
();

4179 
rc
 = 
	`wöLogEº‹
(
SQLITE_IOERR_SHMMAP
, 
pShmNode
->
œ°Eºno
,

4180 "wöShmM≠3", 
pDbFd
->
zP©h
);

4181 if–
hM≠
 ) 
	`osClo£H™dÀ
(hMap);

4182 
shm∑ge_out
;

4185 
pShmNode
->
aRegi⁄
[pShmNode->
nRegi⁄
].
pM≠
 =ÖMap;

4186 
pShmNode
->
aRegi⁄
[pShmNode->
nRegi⁄
].
hM≠
 = hMap;

4187 
pShmNode
->
nRegi⁄
++;

4191 
shm∑ge_out
:

4192 if–
pShmNode
->
nRegi⁄
>
iRegi⁄
 ){

4193 
iOff£t
 = 
iRegi⁄
*
szRegi⁄
;

4194 
iOff£tShi·
 = 
iOff£t
 % 
wöSysInfo
.
dwAŒoˇti⁄Gønuœrôy
;

4195 *
p
 = (*)
pShmNode
->
aRegi⁄
[
iRegi⁄
].
pM≠
;

4196 *
µ
 = (*)&
p
[
iOff£tShi·
];

4198 *
µ
 = 0;

4200 
	`sqlôe3_muãx_Àave
(
pShmNode
->
muãx
);

4201  
rc
;

4202 
	}
}

4205 
	#wöShmM≠
 0

	)

4206 
	#wöShmLock
 0

	)

4207 
	#wöShmB¨rõr
 0

	)

4208 
	#wöShmUnm≠
 0

	)

4214 #i‡
SQLITE_MAX_MMAP_SIZE
>0

4215 
	$wöUnm≠fûe
(
wöFûe
 *
pFûe
){

4216 
	`as£π
–
pFûe
!=0 );

4217 
	`OSTRACE
(("UNMAP-FILEÖid=%lu,ÖFile=%p, hMap=%p,ÖMapRegion=%p, "

4219 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
hM≠
,ÖFûe->
pM≠Regi⁄
,

4220 
pFûe
->
mm≠Size
,ÖFûe->
mm≠SizeA˘uÆ
,ÖFûe->
mm≠SizeMax
));

4221 if–
pFûe
->
pM≠Regi⁄
 ){

4222 if–!
	`osUnm≠VõwOfFûe
(
pFûe
->
pM≠Regi⁄
) ){

4223 
pFûe
->
œ°Eºno
 = 
	`osGëLa°Eº‹
();

4224 
	`OSTRACE
(("UNMAP-FILEÖid=%lu,ÖFile=%p,ÖMapRegion=%p, "

4225 "rc=SQLITE_IOERR_MMAP\n", 
	`osGëCuºítPro˚ssId
(), 
pFûe
,

4226 
pFûe
->
pM≠Regi⁄
));

4227  
	`wöLogEº‹
(
SQLITE_IOERR_MMAP
, 
pFûe
->
œ°Eºno
,

4228 "wöUnm≠fûe1", 
pFûe
->
zP©h
);

4230 
pFûe
->
pM≠Regi⁄
 = 0;

4231 
pFûe
->
mm≠Size
 = 0;

4232 
pFûe
->
mm≠SizeA˘uÆ
 = 0;

4234 if–
pFûe
->
hM≠
!=
NULL
 ){

4235 if–!
	`osClo£H™dÀ
(
pFûe
->
hM≠
) ){

4236 
pFûe
->
œ°Eºno
 = 
	`osGëLa°Eº‹
();

4237 
	`OSTRACE
(("UNMAP-FILEÖid=%lu,ÖFile=%p, hMap=%p,Ñc=SQLITE_IOERR_MMAP\n",

4238 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
hM≠
));

4239  
	`wöLogEº‹
(
SQLITE_IOERR_MMAP
, 
pFûe
->
œ°Eºno
,

4240 "wöUnm≠fûe2", 
pFûe
->
zP©h
);

4242 
pFûe
->
hM≠
 = 
NULL
;

4244 
	`OSTRACE
(("UNMAP-FILEÖid=%lu,ÖFile=%p,Ñc=SQLITE_OK\n",

4245 
	`osGëCuºítPro˚ssId
(), 
pFûe
));

4246  
SQLITE_OK
;

4247 
	}
}

4265 
	$wöM≠fûe
(
wöFûe
 *
pFd
, 
sqlôe3_öt64
 
nByã
){

4266 
sqlôe3_öt64
 
nM≠
 = 
nByã
;

4267 
rc
;

4269 
	`as£π
–
nM≠
>=0 || 
pFd
->
nFëchOut
==0 );

4270 
	`OSTRACE
(("MAP-FILEÖid=%lu,ÖFile=%p, size=%lld\n",

4271 
	`osGëCuºítPro˚ssId
(), 
pFd
, 
nByã
));

4273 if–
pFd
->
nFëchOut
>0 )  
SQLITE_OK
;

4275 if–
nM≠
<0 ){

4276 
rc
 = 
	`wöFûeSize
((
sqlôe3_fûe
*)
pFd
, &
nM≠
);

4277 if–
rc
 ){

4278 
	`OSTRACE
(("MAP-FILEÖid=%lu,ÖFile=%p,Ñc=SQLITE_IOERR_FSTAT\n",

4279 
	`osGëCuºítPro˚ssId
(), 
pFd
));

4280  
SQLITE_IOERR_FSTAT
;

4283 if–
nM≠
>
pFd
->
mm≠SizeMax
 ){

4284 
nM≠
 = 
pFd
->
mm≠SizeMax
;

4286 
nM≠
 &~(
sqlôe3_öt64
)(
wöSysInfo
.
dwPageSize
 - 1);

4288 if–
nM≠
==0 && 
pFd
->
mm≠Size
>0 ){

4289 
	`wöUnm≠fûe
(
pFd
);

4291 if–
nM≠
!=
pFd
->
mm≠Size
 ){

4292 *
pNew
 = 0;

4293 
DWORD
 
¥Ÿe˘
 = 
PAGE_READONLY
;

4294 
DWORD
 
Êags
 = 
FILE_MAP_READ
;

4296 
	`wöUnm≠fûe
(
pFd
);

4297 #ifde‡
SQLITE_MMAP_READWRITE


4298 if–(
pFd
->
˘æFœgs
 & 
WINFILE_RDONLY
)==0 ){

4299 
¥Ÿe˘
 = 
PAGE_READWRITE
;

4300 
Êags
 |
FILE_MAP_WRITE
;

4303 #i‡
SQLITE_OS_WINRT


4304 
pFd
->
hM≠
 = 
	`osCª©eFûeM≠pögFromAµ
’Fd->
h
, 
NULL
, 
¥Ÿe˘
, 
nM≠
, NULL);

4305 #ñi‡
	`deföed
(
SQLITE_WIN32_HAS_WIDE
)

4306 
pFd
->
hM≠
 = 
	`osCª©eFûeM≠pögW
’Fd->
h
, 
NULL
, 
¥Ÿe˘
,

4307 (
DWORD
)((
nM≠
>>32) & 0xffffffff),

4308 (
DWORD
)(
nM≠
 & 0xffffffff), 
NULL
);

4309 #ñi‡
	`deföed
(
SQLITE_WIN32_HAS_ANSI
Ë&& 
SQLITE_WIN32_CREATEFILEMAPPINGA


4310 
pFd
->
hM≠
 = 
	`osCª©eFûeM≠pögA
’Fd->
h
, 
NULL
, 
¥Ÿe˘
,

4311 (
DWORD
)((
nM≠
>>32) & 0xffffffff),

4312 (
DWORD
)(
nM≠
 & 0xffffffff), 
NULL
);

4314 if–
pFd
->
hM≠
==
NULL
 ){

4315 
pFd
->
œ°Eºno
 = 
	`osGëLa°Eº‹
();

4316 
rc
 = 
	`wöLogEº‹
(
SQLITE_IOERR_MMAP
, 
pFd
->
œ°Eºno
,

4317 "wöM≠fûe1", 
pFd
->
zP©h
);

4319 
	`OSTRACE
(("MAP-FILE-CREATEÖid=%lu,ÖFile=%p,Ñc=%s\n",

4320 
	`osGëCuºítPro˚ssId
(), 
pFd
, 
	`sqlôe3EºName
(
rc
)));

4321  
SQLITE_OK
;

4323 
	`as£π
–(
nM≠
 % 
wöSysInfo
.
dwPageSize
)==0 );

4324 
	`as£π
–(
SIZE_T
)==(
sqlôe3_öt64
Ë|| 
nM≠
<=0xffffffff );

4325 #i‡
SQLITE_OS_WINRT


4326 
pNew
 = 
	`osM≠VõwOfFûeFromAµ
(
pFd
->
hM≠
, 
Êags
, 0, (
SIZE_T
)
nM≠
);

4328 
pNew
 = 
	`osM≠VõwOfFûe
(
pFd
->
hM≠
, 
Êags
, 0, 0, (
SIZE_T
)
nM≠
);

4330 if–
pNew
==
NULL
 ){

4331 
	`osClo£H™dÀ
(
pFd
->
hM≠
);

4332 
pFd
->
hM≠
 = 
NULL
;

4333 
pFd
->
œ°Eºno
 = 
	`osGëLa°Eº‹
();

4334 
rc
 = 
	`wöLogEº‹
(
SQLITE_IOERR_MMAP
, 
pFd
->
œ°Eºno
,

4335 "wöM≠fûe2", 
pFd
->
zP©h
);

4337 
	`OSTRACE
(("MAP-FILE-MAPÖid=%lu,ÖFile=%p,Ñc=%s\n",

4338 
	`osGëCuºítPro˚ssId
(), 
pFd
, 
	`sqlôe3EºName
(
rc
)));

4339  
SQLITE_OK
;

4341 
pFd
->
pM≠Regi⁄
 = 
pNew
;

4342 
pFd
->
mm≠Size
 = 
nM≠
;

4343 
pFd
->
mm≠SizeA˘uÆ
 = 
nM≠
;

4346 
	`OSTRACE
(("MAP-FILEÖid=%lu,ÖFile=%p,Ñc=SQLITE_OK\n",

4347 
	`osGëCuºítPro˚ssId
(), 
pFd
));

4348  
SQLITE_OK
;

4349 
	}
}

4364 
	$wöFëch
(
sqlôe3_fûe
 *
fd
, 
i64
 
iOff
, 
nAmt
, **
µ
){

4365 #i‡
SQLITE_MAX_MMAP_SIZE
>0

4366 
wöFûe
 *
pFd
 = (wöFûe*)
fd
;

4368 *
µ
 = 0;

4370 
	`OSTRACE
(("FETCHÖid=%lu,ÖFile=%p, offset=%lld,ámount=%d,Öp=%p\n",

4371 
	`osGëCuºítPro˚ssId
(), 
fd
, 
iOff
, 
nAmt
, 
µ
));

4373 #i‡
SQLITE_MAX_MMAP_SIZE
>0

4374 if–
pFd
->
mm≠SizeMax
>0 ){

4375 if–
pFd
->
pM≠Regi⁄
==0 ){

4376 
rc
 = 
	`wöM≠fûe
(
pFd
, -1);

4377 if–
rc
!=
SQLITE_OK
 ){

4378 
	`OSTRACE
(("FETCHÖid=%lu,ÖFile=%p,Ñc=%s\n",

4379 
	`osGëCuºítPro˚ssId
(), 
pFd
, 
	`sqlôe3EºName
(
rc
)));

4380  
rc
;

4383 if–
pFd
->
mm≠Size
 >
iOff
+
nAmt
 ){

4384 *
µ
 = &((
u8
 *)
pFd
->
pM≠Regi⁄
)[
iOff
];

4385 
pFd
->
nFëchOut
++;

4390 
	`OSTRACE
(("FETCHÖid=%lu,ÖFile=%p,Öp=%p, *pp=%p,Ñc=SQLITE_OK\n",

4391 
	`osGëCuºítPro˚ssId
(), 
fd
, 
µ
, *pp));

4392  
SQLITE_OK
;

4393 
	}
}

4405 
	$wöUn„tch
(
sqlôe3_fûe
 *
fd
, 
i64
 
iOff
, *
p
){

4406 #i‡
SQLITE_MAX_MMAP_SIZE
>0

4407 
wöFûe
 *
pFd
 = (wöFûe*)
fd
;

4412 
	`as£π
–(
p
==0)==(
pFd
->
nFëchOut
==0) );

4415 
	`as£π
–
p
==0 ||Ö==&((
u8
 *)
pFd
->
pM≠Regi⁄
)[
iOff
] );

4417 
	`OSTRACE
(("UNFETCHÖid=%lu,ÖFile=%p, offset=%lld,Ö=%p\n",

4418 
	`osGëCuºítPro˚ssId
(), 
pFd
, 
iOff
, 
p
));

4420 if–
p
 ){

4421 
pFd
->
nFëchOut
--;

4427 
	`wöUnm≠fûe
(
pFd
);

4430 
	`as£π
–
pFd
->
nFëchOut
>=0 );

4433 
	`OSTRACE
(("UNFETCHÖid=%lu,ÖFile=%p,Ñc=SQLITE_OK\n",

4434 
	`osGëCuºítPro˚ssId
(), 
fd
));

4435  
SQLITE_OK
;

4436 
	}
}

4448 c⁄° 
sqlôe3_io_mëhods
 
	gwöIoMëhod
 = {

4450 
wöClo£
,

4451 
wöRód
,

4452 
wöWrôe
,

4453 
wöTrunˇã
,

4454 
wöSync
,

4455 
wöFûeSize
,

4456 
wöLock
,

4457 
wöU∆ock
,

4458 
wöCheckRe£rvedLock
,

4459 
wöFûeC⁄åﬁ
,

4460 
wöSe˘‹Size
,

4461 
wöDevi˚Ch¨a˘îi°ics
,

4462 
wöShmM≠
,

4463 
wöShmLock
,

4464 
wöShmB¨rõr
,

4465 
wöShmUnm≠
,

4466 
wöFëch
,

4467 
wöUn„tch


4474 c⁄° 
sqlôe3_io_mëhods
 
	gwöIoNﬁockMëhod
 = {

4476 
wöClo£
,

4477 
wöRód
,

4478 
wöWrôe
,

4479 
wöTrunˇã
,

4480 
wöSync
,

4481 
wöFûeSize
,

4482 
wöNﬁockLock
,

4483 
wöNﬁockU∆ock
,

4484 
wöNﬁockCheckRe£rvedLock
,

4485 
wöFûeC⁄åﬁ
,

4486 
wöSe˘‹Size
,

4487 
wöDevi˚Ch¨a˘îi°ics
,

4488 
wöShmM≠
,

4489 
wöShmLock
,

4490 
wöShmB¨rõr
,

4491 
wöShmUnm≠
,

4492 
wöFëch
,

4493 
wöUn„tch


4496 
wöVfsAµD©a
 
	gwöAµD©a
 = {

4497 &
wöIoMëhod
,

4502 
wöVfsAµD©a
 
	gwöNﬁockAµD©a
 = {

4503 &
wöIoNﬁockMëhod
,

4515 #i‡
deföed
(
__CYGWIN__
)

4521 *
	$wöC⁄vîtToUtf8Fûíame
(c⁄° *
zFûíame
){

4522 *
zC⁄vîãd
 = 0;

4523 if–
	`osIsNT
() ){

4524 
zC⁄vîãd
 = 
	`wöUnicodeToUtf8
(
zFûíame
);

4526 #ifde‡
SQLITE_WIN32_HAS_ANSI


4528 
zC⁄vîãd
 = 
	`wöMbcsToUtf8
(
zFûíame
, 
	`osAªFûeApisANSI
());

4532  
zC⁄vîãd
;

4533 
	}
}

4542 *
	$wöC⁄vîtFromUtf8Fûíame
(c⁄° *
zFûíame
){

4543 *
zC⁄vîãd
 = 0;

4544 if–
	`osIsNT
() ){

4545 
zC⁄vîãd
 = 
	`wöUtf8ToUnicode
(
zFûíame
);

4547 #ifde‡
SQLITE_WIN32_HAS_ANSI


4549 
zC⁄vîãd
 = 
	`wöUtf8ToMbcs
(
zFûíame
, 
	`osAªFûeApisANSI
());

4553  
zC⁄vîãd
;

4554 
	}
}

4561 
	$wöMakeEndInDúSï
(
nBuf
, *
zBuf
){

4562 if–
zBuf
 ){

4563 
nLí
 = 
	`sqlôe3SåÀn30
(
zBuf
);

4564 if–
nLí
>0 ){

4565 if–
	`wöIsDúSï
(
zBuf
[
nLí
-1]) ){

4567 }if–
nLí
+1<
nBuf
 ){

4568 
zBuf
[
nLí
] = 
	`wöGëDúSï
();

4569 
zBuf
[
nLí
+1] = '\0';

4575 
	}
}

4581 
	$wöGëTem≤ame
(
sqlôe3_vfs
 *
pVfs
, **
pzBuf
){

4582 
zCh¨s
[] =

4586 
size_t
 
i
, 
j
;

4587 
nPª
 = 
	`sqlôe3SåÀn30
(
SQLITE_TEMP_FILE_PREFIX
);

4588 
nMax
, 
nBuf
, 
nDú
, 
nLí
;

4589 *
zBuf
;

4595 
	`SimuœãIOEº‹
– 
SQLITE_IOERR
 );

4600 
nMax
 = 
pVfs
->
mxP©h«me
; 
nBuf
 =ÇMax + 2;

4601 
zBuf
 = 
	`sqlôe3MÆlocZîo
–
nBuf
 );

4602 if–!
zBuf
 ){

4603 
	`OSTRACE
(("TEMP-FILENAMEÑc=SQLITE_IOERR_NOMEM\n"));

4604  
SQLITE_IOERR_NOMEM_BKPT
;

4611 
nDú
 = 
nMax
 - (
nPª
 + 15);

4612 
	`as£π
–
nDú
>0 );

4613 if–
sqlôe3_ãmp_dúe˘‹y
 ){

4614 
nDúLí
 = 
	`sqlôe3SåÀn30
(
sqlôe3_ãmp_dúe˘‹y
);

4615 if–
nDúLí
>0 ){

4616 if–!
	`wöIsDúSï
(
sqlôe3_ãmp_dúe˘‹y
[
nDúLí
-1]) ){

4617 
nDúLí
++;

4619 if–
nDúLí
>
nDú
 ){

4620 
	`sqlôe3_‰ì
(
zBuf
);

4621 
	`OSTRACE
(("TEMP-FILENAMEÑc=SQLITE_ERROR\n"));

4622  
	`wöLogEº‹
(
SQLITE_ERROR
, 0, "winGetTempname1", 0);

4624 
	`sqlôe3_¢¥ötf
(
nMax
, 
zBuf
, "%s", 
sqlôe3_ãmp_dúe˘‹y
);

4627 #i‡
	`deföed
(
__CYGWIN__
)

4629 c⁄° *
azDús
[] = {

4641 
i
;

4642 c⁄° *
zDú
 = 0;

4644 if–!
azDús
[0] )ázDús[0] = 
	`gëív
("SQLITE_TMPDIR");

4645 if–!
azDús
[1] )ázDús[1] = 
	`gëív
("TMPDIR");

4646 if–!
azDús
[2] )ázDús[2] = 
	`gëív
("TMP");

4647 if–!
azDús
[3] )ázDús[3] = 
	`gëív
("TEMP");

4648 if–!
azDús
[4] )ázDús[4] = 
	`gëív
("USERPROFILE");

4649 
i
=0; i<(
azDús
)/◊zDús[0]); 
zDú
=azDirs[i++]){

4650 *
zC⁄vîãd
;

4651 if–
zDú
==0 ) ;

4657 if–
	`wöIsDriveLëãrAndCﬁ⁄
(
zDú
) ){

4658 
zC⁄vîãd
 = 
	`wöC⁄vîtFromUtf8Fûíame
(
zDú
);

4659 if–!
zC⁄vîãd
 ){

4660 
	`sqlôe3_‰ì
(
zBuf
);

4661 
	`OSTRACE
(("TEMP-FILENAMEÑc=SQLITE_IOERR_NOMEM\n"));

4662  
SQLITE_IOERR_NOMEM_BKPT
;

4664 if–
	`wöIsDú
(
zC⁄vîãd
) ){

4665 
	`sqlôe3_¢¥ötf
(
nMax
, 
zBuf
, "%s", 
zDú
);

4666 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

4669 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

4671 
zC⁄vîãd
 = 
	`sqlôe3MÆlocZîo
–
nMax
+1 );

4672 if–!
zC⁄vîãd
 ){

4673 
	`sqlôe3_‰ì
(
zBuf
);

4674 
	`OSTRACE
(("TEMP-FILENAMEÑc=SQLITE_IOERR_NOMEM\n"));

4675  
SQLITE_IOERR_NOMEM_BKPT
;

4677 if–
	`cygwö_c⁄v_∑th
(

4678 
	`osIsNT
(Ë? 
CCP_POSIX_TO_WIN_W
 : 
CCP_POSIX_TO_WIN_A
, 
zDú
,

4679 
zC⁄vîãd
, 
nMax
+1)<0 ){

4680 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

4681 
	`sqlôe3_‰ì
(
zBuf
);

4682 
	`OSTRACE
(("TEMP-FILENAMEÑc=SQLITE_IOERR_CONVPATH\n"));

4683  
	`wöLogEº‹
(
SQLITE_IOERR_CONVPATH
, (
DWORD
)
î∫o
,

4684 "wöGëTem≤ame2", 
zDú
);

4686 if–
	`wöIsDú
(
zC⁄vîãd
) ){

4691 *
zUtf8
 = 
	`wöC⁄vîtToUtf8Fûíame
(
zC⁄vîãd
);

4692 if–!
zUtf8
 ){

4693 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

4694 
	`sqlôe3_‰ì
(
zBuf
);

4695 
	`OSTRACE
(("TEMP-FILENAMEÑc=SQLITE_IOERR_NOMEM\n"));

4696  
SQLITE_IOERR_NOMEM_BKPT
;

4698 
	`sqlôe3_¢¥ötf
(
nMax
, 
zBuf
, "%s", 
zUtf8
);

4699 
	`sqlôe3_‰ì
(
zUtf8
);

4700 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

4703 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

4707 #ñi‡!
SQLITE_OS_WINRT
 && !
	`deföed
(
__CYGWIN__
)

4708 if–
	`osIsNT
() ){

4709 *
zMu…i
;

4710 
LPWSTR
 
zWideP©h
 = 
	`sqlôe3MÆlocZîo
–
nMax
*(
WCHAR
) );

4711 if–!
zWideP©h
 ){

4712 
	`sqlôe3_‰ì
(
zBuf
);

4713 
	`OSTRACE
(("TEMP-FILENAMEÑc=SQLITE_IOERR_NOMEM\n"));

4714  
SQLITE_IOERR_NOMEM_BKPT
;

4716 if–
	`osGëTempP©hW
(
nMax
, 
zWideP©h
)==0 ){

4717 
	`sqlôe3_‰ì
(
zWideP©h
);

4718 
	`sqlôe3_‰ì
(
zBuf
);

4719 
	`OSTRACE
(("TEMP-FILENAMEÑc=SQLITE_IOERR_GETTEMPPATH\n"));

4720  
	`wöLogEº‹
(
SQLITE_IOERR_GETTEMPPATH
, 
	`osGëLa°Eº‹
(),

4723 
zMu…i
 = 
	`wöUnicodeToUtf8
(
zWideP©h
);

4724 if–
zMu…i
 ){

4725 
	`sqlôe3_¢¥ötf
(
nMax
, 
zBuf
, "%s", 
zMu…i
);

4726 
	`sqlôe3_‰ì
(
zMu…i
);

4727 
	`sqlôe3_‰ì
(
zWideP©h
);

4729 
	`sqlôe3_‰ì
(
zWideP©h
);

4730 
	`sqlôe3_‰ì
(
zBuf
);

4731 
	`OSTRACE
(("TEMP-FILENAMEÑc=SQLITE_IOERR_NOMEM\n"));

4732  
SQLITE_IOERR_NOMEM_BKPT
;

4735 #ifde‡
SQLITE_WIN32_HAS_ANSI


4737 *
zUtf8
;

4738 *
zMbcsP©h
 = 
	`sqlôe3MÆlocZîo
–
nMax
 );

4739 if–!
zMbcsP©h
 ){

4740 
	`sqlôe3_‰ì
(
zBuf
);

4741 
	`OSTRACE
(("TEMP-FILENAMEÑc=SQLITE_IOERR_NOMEM\n"));

4742  
SQLITE_IOERR_NOMEM_BKPT
;

4744 if–
	`osGëTempP©hA
(
nMax
, 
zMbcsP©h
)==0 ){

4745 
	`sqlôe3_‰ì
(
zBuf
);

4746 
	`OSTRACE
(("TEMP-FILENAMEÑc=SQLITE_IOERR_GETTEMPPATH\n"));

4747  
	`wöLogEº‹
(
SQLITE_IOERR_GETTEMPPATH
, 
	`osGëLa°Eº‹
(),

4750 
zUtf8
 = 
	`wöMbcsToUtf8
(
zMbcsP©h
, 
	`osAªFûeApisANSI
());

4751 if–
zUtf8
 ){

4752 
	`sqlôe3_¢¥ötf
(
nMax
, 
zBuf
, "%s", 
zUtf8
);

4753 
	`sqlôe3_‰ì
(
zUtf8
);

4755 
	`sqlôe3_‰ì
(
zBuf
);

4756 
	`OSTRACE
(("TEMP-FILENAMEÑc=SQLITE_IOERR_NOMEM\n"));

4757  
SQLITE_IOERR_NOMEM_BKPT
;

4768 if–!
	`wöMakeEndInDúSï
(
nDú
+1, 
zBuf
) ){

4769 
	`sqlôe3_‰ì
(
zBuf
);

4770 
	`OSTRACE
(("TEMP-FILENAMEÑc=SQLITE_ERROR\n"));

4771  
	`wöLogEº‹
(
SQLITE_ERROR
, 0, "winGetTempname4", 0);

4785 
nLí
 = 
	`sqlôe3SåÀn30
(
zBuf
);

4786 if–(
nLí
 + 
nPª
 + 17Ë> 
nBuf
 ){

4787 
	`sqlôe3_‰ì
(
zBuf
);

4788 
	`OSTRACE
(("TEMP-FILENAMEÑc=SQLITE_ERROR\n"));

4789  
	`wöLogEº‹
(
SQLITE_ERROR
, 0, "winGetTempname5", 0);

4792 
	`sqlôe3_¢¥ötf
(
nBuf
-16-
nLí
, 
zBuf
+nLí, 
SQLITE_TEMP_FILE_PREFIX
);

4794 
j
 = 
	`sqlôe3SåÀn30
(
zBuf
);

4795 
	`sqlôe3_øndom√ss
(15, &
zBuf
[
j
]);

4796 
i
=0; i<15; i++, 
j
++){

4797 
zBuf
[
j
] = ()
zCh¨s
[ (()zBuf[j])%((zChars)-1) ];

4799 
zBuf
[
j
] = 0;

4800 
zBuf
[
j
+1] = 0;

4801 *
pzBuf
 = 
zBuf
;

4803 
	`OSTRACE
(("TEMP-FILENAMEÇame=%s,Ñc=SQLITE_OK\n", 
zBuf
));

4804  
SQLITE_OK
;

4805 
	}
}

4812 
	$wöIsDú
(c⁄° *
zC⁄vîãd
){

4813 
DWORD
 
©å
;

4814 
rc
 = 0;

4815 
DWORD
 
œ°Eºno
;

4817 if–
	`osIsNT
() ){

4818 
˙t
 = 0;

4819 
WIN32_FILE_ATTRIBUTE_DATA
 
sAârD©a
;

4820 
	`mem£t
(&
sAârD©a
, 0, (sAttrData));

4821  !(
rc
 = 
	`osGëFûeAâribuãsExW
((
LPCWSTR
)
zC⁄vîãd
,

4822 
GëFûeExInfoSènd¨d
,

4823 &
sAârD©a
)Ë&& 
	`wöRëryI€º
(&
˙t
, &
œ°Eºno
) ){}

4824 if–!
rc
 ){

4827 
©å
 = 
sAârD©a
.
dwFûeAâribuãs
;

4828 #i‡
SQLITE_OS_WINCE
==0

4830 
©å
 = 
	`osGëFûeAâribuãsA
((*)
zC⁄vîãd
);

4833  (
©å
!=
INVALID_FILE_ATTRIBUTES
Ë&& (©å&
FILE_ATTRIBUTE_DIRECTORY
);

4834 
	}
}

4839 
	$wöO≥n
(

4840 
sqlôe3_vfs
 *
pVfs
,

4841 c⁄° *
zName
,

4842 
sqlôe3_fûe
 *
id
,

4843 
Êags
,

4844 *
pOutFœgs


4846 
HANDLE
 
h
;

4847 
DWORD
 
œ°Eºno
 = 0;

4848 
DWORD
 
dwDesúedAc˚ss
;

4849 
DWORD
 
dwSh¨eMode
;

4850 
DWORD
 
dwCª©i⁄Di•osôi⁄
;

4851 
DWORD
 
dwFœgsAndAâribuãs
 = 0;

4852 #i‡
SQLITE_OS_WINCE


4853 
isTemp
 = 0;

4855 
wöVfsAµD©a
 *
pAµD©a
;

4856 
wöFûe
 *
pFûe
 = (wöFûe*)
id
;

4857 *
zC⁄vîãd
;

4858 c⁄° *
zUtf8Name
 = 
zName
;

4859 
˙t
 = 0;

4864 *
zTm≤ame
 = 0;

4866 
rc
 = 
SQLITE_OK
;

4867 #i‡!
	`deföed
(
NDEBUG
Ë|| 
SQLITE_OS_WINCE


4868 
eTy≥
 = 
Êags
&0xFFFFFF00;

4871 
isEx˛usive
 = (
Êags
 & 
SQLITE_OPEN_EXCLUSIVE
);

4872 
isDñëe
 = (
Êags
 & 
SQLITE_OPEN_DELETEONCLOSE
);

4873 
isCª©e
 = (
Êags
 & 
SQLITE_OPEN_CREATE
);

4874 
isRód⁄ly
 = (
Êags
 & 
SQLITE_OPEN_READONLY
);

4875 
isRódWrôe
 = (
Êags
 & 
SQLITE_OPEN_READWRITE
);

4877 #i‚de‡
NDEBUG


4878 
isO≥nJou∫Æ
 = (
isCª©e
 && (

4879 
eTy≥
==
SQLITE_OPEN_MASTER_JOURNAL


4880 || 
eTy≥
==
SQLITE_OPEN_MAIN_JOURNAL


4881 || 
eTy≥
==
SQLITE_OPEN_WAL


4885 
	`OSTRACE
(("OPENÇame=%s,ÖFile=%p, flags=%x,ÖOutFlags=%p\n",

4886 
zUtf8Name
, 
id
, 
Êags
, 
pOutFœgs
));

4895 
	`as£π
((
isRód⁄ly
==0 || 
isRódWrôe
==0) && (isReadWrite || isReadonly));

4896 
	`as£π
(
isCª©e
==0 || 
isRódWrôe
);

4897 
	`as£π
(
isEx˛usive
==0 || 
isCª©e
);

4898 
	`as£π
(
isDñëe
==0 || 
isCª©e
);

4902 
	`as£π
–(!
isDñëe
 && 
zName
Ë|| 
eTy≥
!=
SQLITE_OPEN_MAIN_DB
 );

4903 
	`as£π
–(!
isDñëe
 && 
zName
Ë|| 
eTy≥
!=
SQLITE_OPEN_MAIN_JOURNAL
 );

4904 
	`as£π
–(!
isDñëe
 && 
zName
Ë|| 
eTy≥
!=
SQLITE_OPEN_MASTER_JOURNAL
 );

4905 
	`as£π
–(!
isDñëe
 && 
zName
Ë|| 
eTy≥
!=
SQLITE_OPEN_WAL
 );

4908 
	`as£π
–
eTy≥
==
SQLITE_OPEN_MAIN_DB
 ||ÉTy≥==
SQLITE_OPEN_TEMP_DB


4909 || 
eTy≥
==
SQLITE_OPEN_MAIN_JOURNAL
 ||ÉTy≥==
SQLITE_OPEN_TEMP_JOURNAL


4910 || 
eTy≥
==
SQLITE_OPEN_SUBJOURNAL
 ||ÉTy≥==
SQLITE_OPEN_MASTER_JOURNAL


4911 || 
eTy≥
==
SQLITE_OPEN_TRANSIENT_DB
 ||ÉTy≥==
SQLITE_OPEN_WAL


4914 
	`as£π
–
pFûe
!=0 );

4915 
	`mem£t
(
pFûe
, 0, (
wöFûe
));

4916 
pFûe
->
h
 = 
INVALID_HANDLE_VALUE
;

4918 #i‡
SQLITE_OS_WINRT


4919 if–!
zUtf8Name
 && !
sqlôe3_ãmp_dúe˘‹y
 ){

4920 
	`sqlôe3_log
(
SQLITE_ERROR
,

4928 if–!
zUtf8Name
 ){

4929 
	`as£π
–
isDñëe
 && !
isO≥nJou∫Æ
 );

4930 
rc
 = 
	`wöGëTem≤ame
(
pVfs
, &
zTm≤ame
);

4931 if–
rc
!=
SQLITE_OK
 ){

4932 
	`OSTRACE
(("OPENÇame=%s,Ñc=%s", 
zUtf8Name
, 
	`sqlôe3EºName
(
rc
)));

4933  
rc
;

4935 
zUtf8Name
 = 
zTm≤ame
;

4942 
	`as£π
–(
eTy≥
!=
SQLITE_OPEN_MAIN_DB
Ë|| (
Êags
 & 
SQLITE_OPEN_URI
) ||

4943 
zUtf8Name
[
	`sqlôe3SåÀn30
(zUtf8Name)+1]==0 );

4946 
zC⁄vîãd
 = 
	`wöC⁄vîtFromUtf8Fûíame
(
zUtf8Name
);

4947 if–
zC⁄vîãd
==0 ){

4948 
	`sqlôe3_‰ì
(
zTm≤ame
);

4949 
	`OSTRACE
(("OPENÇame=%s,Ñc=SQLITE_IOERR_NOMEM", 
zUtf8Name
));

4950  
SQLITE_IOERR_NOMEM_BKPT
;

4953 if–
	`wöIsDú
(
zC⁄vîãd
) ){

4954 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

4955 
	`sqlôe3_‰ì
(
zTm≤ame
);

4956 
	`OSTRACE
(("OPENÇame=%s,Ñc=SQLITE_CANTOPEN_ISDIR", 
zUtf8Name
));

4957  
SQLITE_CANTOPEN_ISDIR
;

4960 if–
isRódWrôe
 ){

4961 
dwDesúedAc˚ss
 = 
GENERIC_READ
 | 
GENERIC_WRITE
;

4963 
dwDesúedAc˚ss
 = 
GENERIC_READ
;

4970 if–
isEx˛usive
 ){

4973 
dwCª©i⁄Di•osôi⁄
 = 
CREATE_NEW
;

4974 }if–
isCª©e
 ){

4976 
dwCª©i⁄Di•osôi⁄
 = 
OPEN_ALWAYS
;

4979 
dwCª©i⁄Di•osôi⁄
 = 
OPEN_EXISTING
;

4982 
dwSh¨eMode
 = 
FILE_SHARE_READ
 | 
FILE_SHARE_WRITE
;

4984 if–
isDñëe
 ){

4985 #i‡
SQLITE_OS_WINCE


4986 
dwFœgsAndAâribuãs
 = 
FILE_ATTRIBUTE_HIDDEN
;

4987 
isTemp
 = 1;

4989 
dwFœgsAndAâribuãs
 = 
FILE_ATTRIBUTE_TEMPORARY


4990 | 
FILE_ATTRIBUTE_HIDDEN


4991 | 
FILE_FLAG_DELETE_ON_CLOSE
;

4994 
dwFœgsAndAâribuãs
 = 
FILE_ATTRIBUTE_NORMAL
;

4998 #i‡
SQLITE_OS_WINCE


4999 
dwFœgsAndAâribuãs
 |
FILE_FLAG_RANDOM_ACCESS
;

5002 if–
	`osIsNT
() ){

5003 #i‡
SQLITE_OS_WINRT


5004 
CREATEFILE2_EXTENDED_PARAMETERS
 
exãndedP¨amëîs
;

5005 
exãndedP¨amëîs
.
dwSize
 = (
CREATEFILE2_EXTENDED_PARAMETERS
);

5006 
exãndedP¨amëîs
.
dwFûeAâribuãs
 =

5007 
dwFœgsAndAâribuãs
 & 
FILE_ATTRIBUTE_MASK
;

5008 
exãndedP¨amëîs
.
dwFûeFœgs
 = 
dwFœgsAndAâribuãs
 & 
FILE_FLAG_MASK
;

5009 
exãndedP¨amëîs
.
dwSecurôyQosFœgs
 = 
SECURITY_ANONYMOUS
;

5010 
exãndedP¨amëîs
.
ÕSecurôyAâribuãs
 = 
NULL
;

5011 
exãndedP¨amëîs
.
hTem∂©eFûe
 = 
NULL
;

5012  (
h
 = 
	`osCª©eFûe2
((
LPCWSTR
)
zC⁄vîãd
,

5013 
dwDesúedAc˚ss
,

5014 
dwSh¨eMode
,

5015 
dwCª©i⁄Di•osôi⁄
,

5016 &
exãndedP¨amëîs
))==
INVALID_HANDLE_VALUE
 &&

5017 
	`wöRëryI€º
(&
˙t
, &
œ°Eºno
) ){

5021  (
h
 = 
	`osCª©eFûeW
((
LPCWSTR
)
zC⁄vîãd
,

5022 
dwDesúedAc˚ss
,

5023 
dwSh¨eMode
, 
NULL
,

5024 
dwCª©i⁄Di•osôi⁄
,

5025 
dwFœgsAndAâribuãs
,

5026 
NULL
))==
INVALID_HANDLE_VALUE
 &&

5027 
	`wöRëryI€º
(&
˙t
, &
œ°Eºno
) ){

5032 #ifde‡
SQLITE_WIN32_HAS_ANSI


5034  (
h
 = 
	`osCª©eFûeA
((
LPCSTR
)
zC⁄vîãd
,

5035 
dwDesúedAc˚ss
,

5036 
dwSh¨eMode
, 
NULL
,

5037 
dwCª©i⁄Di•osôi⁄
,

5038 
dwFœgsAndAâribuãs
,

5039 
NULL
))==
INVALID_HANDLE_VALUE
 &&

5040 
	`wöRëryI€º
(&
˙t
, &
œ°Eºno
) ){

5045 
	`wöLogI€º
(
˙t
, 
__LINE__
);

5047 
	`OSTRACE
(("OPEN fûe=%p,Çame=%s,ác˚ss=%lx,Ñc=%s\n", 
h
, 
zUtf8Name
,

5048 
dwDesúedAc˚ss
, (
h
==
INVALID_HANDLE_VALUE
) ? "failed" : "ok"));

5050 if–
h
==
INVALID_HANDLE_VALUE
 ){

5051 
pFûe
->
œ°Eºno
 =ÜastErrno;

5052 
	`wöLogEº‹
(
SQLITE_CANTOPEN
, 
pFûe
->
œ°Eºno
, "wöO≥n", 
zUtf8Name
);

5053 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

5054 
	`sqlôe3_‰ì
(
zTm≤ame
);

5055 if–
isRódWrôe
 && !
isEx˛usive
 ){

5056  
	`wöO≥n
(
pVfs
, 
zName
, 
id
,

5057 ((
Êags
|
SQLITE_OPEN_READONLY
) &

5058 ~(
SQLITE_OPEN_CREATE
|
SQLITE_OPEN_READWRITE
)),

5059 
pOutFœgs
);

5061  
SQLITE_CANTOPEN_BKPT
;

5065 if–
pOutFœgs
 ){

5066 if–
isRódWrôe
 ){

5067 *
pOutFœgs
 = 
SQLITE_OPEN_READWRITE
;

5069 *
pOutFœgs
 = 
SQLITE_OPEN_READONLY
;

5073 
	`OSTRACE
(("OPEN file=%p,Çame=%s,áccess=%lx,ÖOutFlags=%p, *pOutFlags=%d, "

5074 "rc=%s\n", 
h
, 
zUtf8Name
, 
dwDesúedAc˚ss
, 
pOutFœgs
,ÖOutFlags ?

5075 *
pOutFœgs
 : 0, (
h
==
INVALID_HANDLE_VALUE
) ? "failed" : "ok"));

5077 
pAµD©a
 = (
wöVfsAµD©a
*)
pVfs
->pAppData;

5079 #i‡
SQLITE_OS_WINCE


5081 if–
isRódWrôe
 && 
eTy≥
==
SQLITE_OPEN_MAIN_DB


5082 && ((
pAµD©a
==
NULL
Ë|| !pAµD©a->
bNoLock
)

5083 && (
rc
 = 
	`wö˚Cª©eLock
(
zName
, 
pFûe
))!=
SQLITE_OK


5085 
	`osClo£H™dÀ
(
h
);

5086 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

5087 
	`sqlôe3_‰ì
(
zTm≤ame
);

5088 
	`OSTRACE
(("OPEN-CE-LOCKÇame=%s,Ñc=%s\n", 
zName
, 
	`sqlôe3EºName
(
rc
)));

5089  
rc
;

5092 if–
isTemp
 ){

5093 
pFûe
->
zDñëeOnClo£
 = 
zC⁄vîãd
;

5097 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

5100 
	`sqlôe3_‰ì
(
zTm≤ame
);

5101 
pFûe
->
pMëhod
 = 
pAµD©a
 ?ÖAµD©a->pMëhod : &
wöIoMëhod
;

5102 
pFûe
->
pVfs
 =ÖVfs;

5103 
pFûe
->
h
 = h;

5104 if–
isRód⁄ly
 ){

5105 
pFûe
->
˘æFœgs
 |
WINFILE_RDONLY
;

5107 if–
	`sqlôe3_uri_boﬁón
(
zName
, "psow", 
SQLITE_POWERSAFE_OVERWRITE
) ){

5108 
pFûe
->
˘æFœgs
 |
WINFILE_PSOW
;

5110 
pFûe
->
œ°Eºno
 = 
NO_ERROR
;

5111 
pFûe
->
zP©h
 = 
zName
;

5112 #i‡
SQLITE_MAX_MMAP_SIZE
>0

5113 
pFûe
->
hM≠
 = 
NULL
;

5114 
pFûe
->
pM≠Regi⁄
 = 0;

5115 
pFûe
->
mm≠Size
 = 0;

5116 
pFûe
->
mm≠SizeA˘uÆ
 = 0;

5117 
pFûe
->
mm≠SizeMax
 = 
sqlôe3GlobÆC⁄fig
.
szMm≠
;

5120 
	`O≥nCou¡î
(+1);

5121  
rc
;

5122 
	}
}

5136 
	$wöDñëe
(

5137 
sqlôe3_vfs
 *
pVfs
,

5138 c⁄° *
zFûíame
,

5139 
syncDú


5141 
˙t
 = 0;

5142 
rc
;

5143 
DWORD
 
©å
;

5144 
DWORD
 
œ°Eºno
 = 0;

5145 *
zC⁄vîãd
;

5146 
	`UNUSED_PARAMETER
(
pVfs
);

5147 
	`UNUSED_PARAMETER
(
syncDú
);

5149 
	`SimuœãIOEº‹
( 
SQLITE_IOERR_DELETE
);

5150 
	`OSTRACE
(("DELETEÇame=%s, syncDú=%d\n", 
zFûíame
, 
syncDú
));

5152 
zC⁄vîãd
 = 
	`wöC⁄vîtFromUtf8Fûíame
(
zFûíame
);

5153 if–
zC⁄vîãd
==0 ){

5154 
	`OSTRACE
(("DELETEÇame=%s,Ñc=SQLITE_IOERR_NOMEM\n", 
zFûíame
));

5155  
SQLITE_IOERR_NOMEM_BKPT
;

5157 if–
	`osIsNT
() ){

5159 #i‡
SQLITE_OS_WINRT


5160 
WIN32_FILE_ATTRIBUTE_DATA
 
sAârD©a
;

5161 
	`mem£t
(&
sAârD©a
, 0, (sAttrData));

5162 i‡–
	`osGëFûeAâribuãsExW
(
zC⁄vîãd
, 
GëFûeExInfoSènd¨d
,

5163 &
sAârD©a
) ){

5164 
©å
 = 
sAârD©a
.
dwFûeAâribuãs
;

5166 
œ°Eºno
 = 
	`osGëLa°Eº‹
();

5167 if–
œ°Eºno
==
ERROR_FILE_NOT_FOUND


5168 || 
œ°Eºno
==
ERROR_PATH_NOT_FOUND
 ){

5169 
rc
 = 
SQLITE_IOERR_DELETE_NOENT
;

5171 
rc
 = 
SQLITE_ERROR
;

5176 
©å
 = 
	`osGëFûeAâribuãsW
(
zC⁄vîãd
);

5178 i‡–
©å
==
INVALID_FILE_ATTRIBUTES
 ){

5179 
œ°Eºno
 = 
	`osGëLa°Eº‹
();

5180 if–
œ°Eºno
==
ERROR_FILE_NOT_FOUND


5181 || 
œ°Eºno
==
ERROR_PATH_NOT_FOUND
 ){

5182 
rc
 = 
SQLITE_IOERR_DELETE_NOENT
;

5184 
rc
 = 
SQLITE_ERROR
;

5188 i‡–
©å
&
FILE_ATTRIBUTE_DIRECTORY
 ){

5189 
rc
 = 
SQLITE_ERROR
;

5192 i‡–
	`osDñëeFûeW
(
zC⁄vîãd
) ){

5193 
rc
 = 
SQLITE_OK
;

5196 i‡–!
	`wöRëryI€º
(&
˙t
, &
œ°Eºno
) ){

5197 
rc
 = 
SQLITE_ERROR
;

5202 #ifde‡
SQLITE_WIN32_HAS_ANSI


5205 
©å
 = 
	`osGëFûeAâribuãsA
(
zC⁄vîãd
);

5206 i‡–
©å
==
INVALID_FILE_ATTRIBUTES
 ){

5207 
œ°Eºno
 = 
	`osGëLa°Eº‹
();

5208 if–
œ°Eºno
==
ERROR_FILE_NOT_FOUND


5209 || 
œ°Eºno
==
ERROR_PATH_NOT_FOUND
 ){

5210 
rc
 = 
SQLITE_IOERR_DELETE_NOENT
;

5212 
rc
 = 
SQLITE_ERROR
;

5216 i‡–
©å
&
FILE_ATTRIBUTE_DIRECTORY
 ){

5217 
rc
 = 
SQLITE_ERROR
;

5220 i‡–
	`osDñëeFûeA
(
zC⁄vîãd
) ){

5221 
rc
 = 
SQLITE_OK
;

5224 i‡–!
	`wöRëryI€º
(&
˙t
, &
œ°Eºno
) ){

5225 
rc
 = 
SQLITE_ERROR
;

5231 if–
rc
 &&Ñc!=
SQLITE_IOERR_DELETE_NOENT
 ){

5232 
rc
 = 
	`wöLogEº‹
(
SQLITE_IOERR_DELETE
, 
œ°Eºno
, "wöDñëe", 
zFûíame
);

5234 
	`wöLogI€º
(
˙t
, 
__LINE__
);

5236 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

5237 
	`OSTRACE
(("DELETEÇame=%s,Ñc=%s\n", 
zFûíame
, 
	`sqlôe3EºName
(
rc
)));

5238  
rc
;

5239 
	}
}

5244 
	$wöAc˚ss
(

5245 
sqlôe3_vfs
 *
pVfs
,

5246 c⁄° *
zFûíame
,

5247 
Êags
,

5248 *
pResOut


5250 
DWORD
 
©å
;

5251 
rc
 = 0;

5252 
DWORD
 
œ°Eºno
 = 0;

5253 *
zC⁄vîãd
;

5254 
	`UNUSED_PARAMETER
(
pVfs
);

5256 
	`SimuœãIOEº‹
– 
SQLITE_IOERR_ACCESS
; );

5257 
	`OSTRACE
(("ACCESSÇame=%s, flags=%x,ÖResOut=%p\n",

5258 
zFûíame
, 
Êags
, 
pResOut
));

5260 
zC⁄vîãd
 = 
	`wöC⁄vîtFromUtf8Fûíame
(
zFûíame
);

5261 if–
zC⁄vîãd
==0 ){

5262 
	`OSTRACE
(("ACCESSÇame=%s,Ñc=SQLITE_IOERR_NOMEM\n", 
zFûíame
));

5263  
SQLITE_IOERR_NOMEM_BKPT
;

5265 if–
	`osIsNT
() ){

5266 
˙t
 = 0;

5267 
WIN32_FILE_ATTRIBUTE_DATA
 
sAârD©a
;

5268 
	`mem£t
(&
sAârD©a
, 0, (sAttrData));

5269  !(
rc
 = 
	`osGëFûeAâribuãsExW
((
LPCWSTR
)
zC⁄vîãd
,

5270 
GëFûeExInfoSènd¨d
,

5271 &
sAârD©a
)Ë&& 
	`wöRëryI€º
(&
˙t
, &
œ°Eºno
) ){}

5272 if–
rc
 ){

5276 if–
Êags
==
SQLITE_ACCESS_EXISTS


5277 && 
sAârD©a
.
nFûeSizeHigh
==0

5278 && 
sAârD©a
.
nFûeSizeLow
==0 ){

5279 
©å
 = 
INVALID_FILE_ATTRIBUTES
;

5281 
©å
 = 
sAârD©a
.
dwFûeAâribuãs
;

5284 
	`wöLogI€º
(
˙t
, 
__LINE__
);

5285 if–
œ°Eºno
!=
ERROR_FILE_NOT_FOUND
 &&Üa°Eºno!=
ERROR_PATH_NOT_FOUND
 ){

5286 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

5287  
	`wöLogEº‹
(
SQLITE_IOERR_ACCESS
, 
œ°Eºno
, "winAccess",

5288 
zFûíame
);

5290 
©å
 = 
INVALID_FILE_ATTRIBUTES
;

5294 #ifde‡
SQLITE_WIN32_HAS_ANSI


5296 
©å
 = 
	`osGëFûeAâribuãsA
((*)
zC⁄vîãd
);

5299 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

5300  
Êags
 ){

5301 
SQLITE_ACCESS_READ
:

5302 
SQLITE_ACCESS_EXISTS
:

5303 
rc
 = 
©å
!=
INVALID_FILE_ATTRIBUTES
;

5305 
SQLITE_ACCESS_READWRITE
:

5306 
rc
 = 
©å
!=
INVALID_FILE_ATTRIBUTES
 &&

5307 (
©å
 & 
FILE_ATTRIBUTE_READONLY
)==0;

5310 
	`as£π
(!"Invalid flagsárgument");

5312 *
pResOut
 = 
rc
;

5313 
	`OSTRACE
(("ACCESSÇame=%s,ÖResOut=%p, *pResOut=%d,Ñc=SQLITE_OK\n",

5314 
zFûíame
, 
pResOut
, *pResOut));

5315  
SQLITE_OK
;

5316 
	}
}

5322 
BOOL
 
	$wöIsDriveLëãrAndCﬁ⁄
(

5323 c⁄° *
zP©h«me


5325  ( 
	`sqlôe3IßÕha
(
zP©h«me
[0]) && zPathname[1]==':' );

5326 
	}
}

5334 
BOOL
 
	$wöIsVîb©imP©h«me
(

5335 c⁄° *
zP©h«me


5344 i‡–
	`wöIsDúSï
(
zP©h«me
[0]) ){

5345  
TRUE
;

5354 i‡–
	`wöIsDriveLëãrAndCﬁ⁄
(
zP©h«me
) ){

5355  
TRUE
;

5362  
FALSE
;

5363 
	}
}

5370 
	$wöFuŒP©h«me
(

5371 
sqlôe3_vfs
 *
pVfs
,

5372 c⁄° *
zRñ©ive
,

5373 
nFuŒ
,

5374 *
zFuŒ


5376 #i‡!
SQLITE_OS_WINCE
 && !
SQLITE_OS_WINRT
 && !
	`deföed
(
__CYGWIN__
)

5377 
DWORD
 
nByã
;

5378 *
zC⁄vîãd
;

5379 *
zOut
;

5385 if–
zRñ©ive
[0]=='/' && 
	`wöIsDriveLëãrAndCﬁ⁄
(zRelative+1) ){

5386 
zRñ©ive
++;

5389 #i‡
	`deföed
(
__CYGWIN__
)

5390 
	`SimuœãIOEº‹
– 
SQLITE_ERROR
 );

5391 
	`UNUSED_PARAMETER
(
nFuŒ
);

5392 
	`as£π
–
nFuŒ
>=
pVfs
->
mxP©h«me
 );

5393 i‡–
sqlôe3_d©a_dúe˘‹y
 && !
	`wöIsVîb©imP©h«me
(
zRñ©ive
) ){

5400 *
zOut
 = 
	`sqlôe3MÆlocZîo
–
pVfs
->
mxP©h«me
+1 );

5401 if–!
zOut
 ){

5402  
SQLITE_IOERR_NOMEM_BKPT
;

5404 if–
	`cygwö_c⁄v_∑th
(

5405 (
	`osIsNT
(Ë? 
CCP_POSIX_TO_WIN_W
 : 
CCP_POSIX_TO_WIN_A
) |

5406 
CCP_RELATIVE
, 
zRñ©ive
, 
zOut
, 
pVfs
->
mxP©h«me
+1)<0 ){

5407 
	`sqlôe3_‰ì
(
zOut
);

5408  
	`wöLogEº‹
(
SQLITE_CANTOPEN_CONVPATH
, (
DWORD
)
î∫o
,

5409 "wöFuŒP©h«me1", 
zRñ©ive
);

5411 *
zUtf8
 = 
	`wöC⁄vîtToUtf8Fûíame
(
zOut
);

5412 if–!
zUtf8
 ){

5413 
	`sqlôe3_‰ì
(
zOut
);

5414  
SQLITE_IOERR_NOMEM_BKPT
;

5416 
	`sqlôe3_¢¥ötf
(
	`MIN
(
nFuŒ
, 
pVfs
->
mxP©h«me
), 
zFuŒ
, "%s%c%s",

5417 
sqlôe3_d©a_dúe˘‹y
, 
	`wöGëDúSï
(), 
zUtf8
);

5418 
	`sqlôe3_‰ì
(
zUtf8
);

5419 
	`sqlôe3_‰ì
(
zOut
);

5422 *
zOut
 = 
	`sqlôe3MÆlocZîo
–
pVfs
->
mxP©h«me
+1 );

5423 if–!
zOut
 ){

5424  
SQLITE_IOERR_NOMEM_BKPT
;

5426 if–
	`cygwö_c⁄v_∑th
(

5427 (
	`osIsNT
(Ë? 
CCP_POSIX_TO_WIN_W
 : 
CCP_POSIX_TO_WIN_A
),

5428 
zRñ©ive
, 
zOut
, 
pVfs
->
mxP©h«me
+1)<0 ){

5429 
	`sqlôe3_‰ì
(
zOut
);

5430  
	`wöLogEº‹
(
SQLITE_CANTOPEN_CONVPATH
, (
DWORD
)
î∫o
,

5431 "wöFuŒP©h«me2", 
zRñ©ive
);

5433 *
zUtf8
 = 
	`wöC⁄vîtToUtf8Fûíame
(
zOut
);

5434 if–!
zUtf8
 ){

5435 
	`sqlôe3_‰ì
(
zOut
);

5436  
SQLITE_IOERR_NOMEM_BKPT
;

5438 
	`sqlôe3_¢¥ötf
(
	`MIN
(
nFuŒ
, 
pVfs
->
mxP©h«me
), 
zFuŒ
, "%s", 
zUtf8
);

5439 
	`sqlôe3_‰ì
(
zUtf8
);

5440 
	`sqlôe3_‰ì
(
zOut
);

5443  
SQLITE_OK
;

5446 #i‡(
SQLITE_OS_WINCE
 || 
SQLITE_OS_WINRT
Ë&& !
	`deföed
(
__CYGWIN__
)

5447 
	`SimuœãIOEº‹
– 
SQLITE_ERROR
 );

5450 i‡–
sqlôe3_d©a_dúe˘‹y
 && !
	`wöIsVîb©imP©h«me
(
zRñ©ive
) ){

5457 
	`sqlôe3_¢¥ötf
(
	`MIN
(
nFuŒ
, 
pVfs
->
mxP©h«me
), 
zFuŒ
, "%s%c%s",

5458 
sqlôe3_d©a_dúe˘‹y
, 
	`wöGëDúSï
(), 
zRñ©ive
);

5460 
	`sqlôe3_¢¥ötf
(
	`MIN
(
nFuŒ
, 
pVfs
->
mxP©h«me
), 
zFuŒ
, "%s", 
zRñ©ive
);

5462  
SQLITE_OK
;

5465 #i‡!
SQLITE_OS_WINCE
 && !
SQLITE_OS_WINRT
 && !
	`deföed
(
__CYGWIN__
)

5471 
	`SimuœãIOEº‹
– 
SQLITE_ERROR
 );

5472 i‡–
sqlôe3_d©a_dúe˘‹y
 && !
	`wöIsVîb©imP©h«me
(
zRñ©ive
) ){

5479 
	`sqlôe3_¢¥ötf
(
	`MIN
(
nFuŒ
, 
pVfs
->
mxP©h«me
), 
zFuŒ
, "%s%c%s",

5480 
sqlôe3_d©a_dúe˘‹y
, 
	`wöGëDúSï
(), 
zRñ©ive
);

5481  
SQLITE_OK
;

5483 
zC⁄vîãd
 = 
	`wöC⁄vîtFromUtf8Fûíame
(
zRñ©ive
);

5484 if–
zC⁄vîãd
==0 ){

5485  
SQLITE_IOERR_NOMEM_BKPT
;

5487 if–
	`osIsNT
() ){

5488 
LPWSTR
 
zTemp
;

5489 
nByã
 = 
	`osGëFuŒP©hNameW
((
LPCWSTR
)
zC⁄vîãd
, 0, 0, 0);

5490 if–
nByã
==0 ){

5491 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

5492  
	`wöLogEº‹
(
SQLITE_CANTOPEN_FULLPATH
, 
	`osGëLa°Eº‹
(),

5493 "wöFuŒP©h«me1", 
zRñ©ive
);

5495 
nByã
 += 3;

5496 
zTemp
 = 
	`sqlôe3MÆlocZîo
–
nByã
*(zTemp[0]) );

5497 if–
zTemp
==0 ){

5498 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

5499  
SQLITE_IOERR_NOMEM_BKPT
;

5501 
nByã
 = 
	`osGëFuŒP©hNameW
((
LPCWSTR
)
zC⁄vîãd
,ÇByã, 
zTemp
, 0);

5502 if–
nByã
==0 ){

5503 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

5504 
	`sqlôe3_‰ì
(
zTemp
);

5505  
	`wöLogEº‹
(
SQLITE_CANTOPEN_FULLPATH
, 
	`osGëLa°Eº‹
(),

5506 "wöFuŒP©h«me2", 
zRñ©ive
);

5508 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

5509 
zOut
 = 
	`wöUnicodeToUtf8
(
zTemp
);

5510 
	`sqlôe3_‰ì
(
zTemp
);

5512 #ifde‡
SQLITE_WIN32_HAS_ANSI


5514 *
zTemp
;

5515 
nByã
 = 
	`osGëFuŒP©hNameA
((*)
zC⁄vîãd
, 0, 0, 0);

5516 if–
nByã
==0 ){

5517 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

5518  
	`wöLogEº‹
(
SQLITE_CANTOPEN_FULLPATH
, 
	`osGëLa°Eº‹
(),

5519 "wöFuŒP©h«me3", 
zRñ©ive
);

5521 
nByã
 += 3;

5522 
zTemp
 = 
	`sqlôe3MÆlocZîo
–
nByã
*(zTemp[0]) );

5523 if–
zTemp
==0 ){

5524 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

5525  
SQLITE_IOERR_NOMEM_BKPT
;

5527 
nByã
 = 
	`osGëFuŒP©hNameA
((*)
zC⁄vîãd
,ÇByã, 
zTemp
, 0);

5528 if–
nByã
==0 ){

5529 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

5530 
	`sqlôe3_‰ì
(
zTemp
);

5531  
	`wöLogEº‹
(
SQLITE_CANTOPEN_FULLPATH
, 
	`osGëLa°Eº‹
(),

5532 "wöFuŒP©h«me4", 
zRñ©ive
);

5534 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

5535 
zOut
 = 
	`wöMbcsToUtf8
(
zTemp
, 
	`osAªFûeApisANSI
());

5536 
	`sqlôe3_‰ì
(
zTemp
);

5539 if–
zOut
 ){

5540 
	`sqlôe3_¢¥ötf
(
	`MIN
(
nFuŒ
, 
pVfs
->
mxP©h«me
), 
zFuŒ
, "%s", 
zOut
);

5541 
	`sqlôe3_‰ì
(
zOut
);

5542  
SQLITE_OK
;

5544  
SQLITE_IOERR_NOMEM_BKPT
;

5547 
	}
}

5549 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


5554 *
	$wöDlO≥n
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zFûíame
){

5555 
HANDLE
 
h
;

5556 #i‡
	`deföed
(
__CYGWIN__
)

5557 
nFuŒ
 = 
pVfs
->
mxP©h«me
+1;

5558 *
zFuŒ
 = 
	`sqlôe3MÆlocZîo
–
nFuŒ
 );

5559 *
zC⁄vîãd
 = 0;

5560 if–
zFuŒ
==0 ){

5561 
	`OSTRACE
(("DLOPENÇame=%s, h™dÀ=%p\n", 
zFûíame
, (*)0));

5564 if–
	`wöFuŒP©h«me
(
pVfs
, 
zFûíame
, 
nFuŒ
, 
zFuŒ
)!=
SQLITE_OK
 ){

5565 
	`sqlôe3_‰ì
(
zFuŒ
);

5566 
	`OSTRACE
(("DLOPENÇame=%s, h™dÀ=%p\n", 
zFûíame
, (*)0));

5569 
zC⁄vîãd
 = 
	`wöC⁄vîtFromUtf8Fûíame
(
zFuŒ
);

5570 
	`sqlôe3_‰ì
(
zFuŒ
);

5572 *
zC⁄vîãd
 = 
	`wöC⁄vîtFromUtf8Fûíame
(
zFûíame
);

5573 
	`UNUSED_PARAMETER
(
pVfs
);

5575 if–
zC⁄vîãd
==0 ){

5576 
	`OSTRACE
(("DLOPENÇame=%s, h™dÀ=%p\n", 
zFûíame
, (*)0));

5579 if–
	`osIsNT
() ){

5580 #i‡
SQLITE_OS_WINRT


5581 
h
 = 
	`osLﬂdPackagedLibøry
((
LPCWSTR
)
zC⁄vîãd
, 0);

5583 
h
 = 
	`osLﬂdLibøryW
((
LPCWSTR
)
zC⁄vîãd
);

5586 #ifde‡
SQLITE_WIN32_HAS_ANSI


5588 
h
 = 
	`osLﬂdLibøryA
((*)
zC⁄vîãd
);

5591 
	`OSTRACE
(("DLOPENÇame=%s, h™dÀ=%p\n", 
zFûíame
, (*)
h
));

5592 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

5593  (*)
h
;

5594 
	}
}

5595 
	$wöDlEº‹
(
sqlôe3_vfs
 *
pVfs
, 
nBuf
, *
zBufOut
){

5596 
	`UNUSED_PARAMETER
(
pVfs
);

5597 
	`wöGëLa°Eº‹Msg
(
	`osGëLa°Eº‹
(), 
nBuf
, 
zBufOut
);

5598 
	}
}

5599 (*
	$wöDlSym
(
sqlôe3_vfs
 *
pVfs
,*
pH
,c⁄° *
zSym
))(){

5600 
FARPROC
 
¥oc
;

5601 
	`UNUSED_PARAMETER
(
pVfs
);

5602 
¥oc
 = 
	`osGëProcAddªssA
((
HANDLE
)
pH
, 
zSym
);

5603 
	`OSTRACE
(("DLSYM handle=%p, symbol=%s,áddress=%p\n",

5604 (*)
pH
, 
zSym
, (*)
¥oc
));

5605  ((*)())
¥oc
;

5606 
	}
}

5607 
	$wöDlClo£
(
sqlôe3_vfs
 *
pVfs
, *
pH™dÀ
){

5608 
	`UNUSED_PARAMETER
(
pVfs
);

5609 
	`osFªeLibøry
((
HANDLE
)
pH™dÀ
);

5610 
	`OSTRACE
(("DLCLOSE h™dÀ=%p\n", (*)
pH™dÀ
));

5611 
	}
}

5613 
	#wöDlO≥n
 0

	)

5614 
	#wöDlEº‹
 0

	)

5615 
	#wöDlSym
 0

	)

5616 
	#wöDlClo£
 0

	)

5620 
E¡r›yG©hîî
 
	tE¡r›yG©hîî
;

5621 
	sE¡r›yG©hîî
 {

5622 *
	ma
;

5623 
	m«
;

5624 
	mi
;

5625 
	mnX‹
;

5628 #i‡!
deföed
(
SQLITE_TEST
Ë&& !deföed(
SQLITE_OMIT_RANDOMNESS
)

5630 
	$x‹Mem‹y
(
E¡r›yG©hîî
 *
p
, *
x
, 
sz
){

5631 
j
, 
k
;

5632 
j
=0, 
k
=
p
->
i
; j<
sz
; j++){

5633 
p
->
a
[
k
++] ^
x
[
j
];

5634 if–
k
>=
p
->
«
 ) k = 0;

5636 
p
->
i
 = 
k
;

5637 
p
->
nX‹
 +
sz
;

5638 
	}
}

5644 
	$wöR™dom√ss
(
sqlôe3_vfs
 *
pVfs
, 
nBuf
, *
zBuf
){

5645 #i‡
	`deföed
(
SQLITE_TEST
Ë|| deföed(
SQLITE_OMIT_RANDOMNESS
)

5646 
	`UNUSED_PARAMETER
(
pVfs
);

5647 
	`mem£t
(
zBuf
, 0, 
nBuf
);

5648  
nBuf
;

5650 
E¡r›yG©hîî
 
e
;

5651 
	`UNUSED_PARAMETER
(
pVfs
);

5652 
	`mem£t
(
zBuf
, 0, 
nBuf
);

5653 #i‡
	`deföed
(
_MSC_VER
Ë&& _MSC_VER>=1400 && !
SQLITE_OS_WINCE


5654 
	`ønd_s
((*)
zBuf
);

5656 
e
.
a
 = (*)
zBuf
;

5657 
e
.
«
 = 
nBuf
;

5658 
e
.
nX‹
 = 0;

5659 
e
.
i
 = 0;

5661 
SYSTEMTIME
 
x
;

5662 
	`osGëSy°emTime
(&
x
);

5663 
	`x‹Mem‹y
(&
e
, (*)&
x
, (
SYSTEMTIME
));

5666 
DWORD
 
pid
 = 
	`osGëCuºítPro˚ssId
();

5667 
	`x‹Mem‹y
(&
e
, (*)&
pid
, (
DWORD
));

5669 #i‡
SQLITE_OS_WINRT


5671 
ULONGLONG
 
˙t
 = 
	`osGëTickCou¡64
();

5672 
	`x‹Mem‹y
(&
e
, (*)&
˙t
, (
ULONGLONG
));

5676 
DWORD
 
˙t
 = 
	`osGëTickCou¡
();

5677 
	`x‹Mem‹y
(&
e
, (*)&
˙t
, (
DWORD
));

5681 
LARGE_INTEGER
 
i
;

5682 
	`osQuîyPîf‹m™˚Cou¡î
(&
i
);

5683 
	`x‹Mem‹y
(&
e
, (*)&
i
, (
LARGE_INTEGER
));

5685 #i‡!
SQLITE_OS_WINCE
 && !
SQLITE_OS_WINRT
 && 
SQLITE_WIN32_USE_UUID


5687 
UUID
 
id
;

5688 
	`mem£t
(&
id
, 0, (
UUID
));

5689 
	`osUuidCª©e
(&
id
);

5690 
	`x‹Mem‹y
(&
e
, (*)&
id
, (
UUID
));

5691 
	`mem£t
(&
id
, 0, (
UUID
));

5692 
	`osUuidCª©eSequítül
(&
id
);

5693 
	`x‹Mem‹y
(&
e
, (*)&
id
, (
UUID
));

5696  
e
.
nX‹
>
nBuf
 ?ÇBuf :É.nXor;

5698 
	}
}

5704 
	$wöSÀï
(
sqlôe3_vfs
 *
pVfs
, 
mi¸o£c
){

5705 
	`sqlôe3_wö32_¶ìp
((
mi¸o£c
+999)/1000);

5706 
	`UNUSED_PARAMETER
(
pVfs
);

5707  ((
mi¸o£c
+999)/1000)*1000;

5708 
	}
}

5715 #ifde‡
SQLITE_TEST


5716 
	gsqlôe3_cuºít_time
 = 0;

5729 
	$wöCuºítTimeI¡64
(
sqlôe3_vfs
 *
pVfs
, 
sqlôe3_öt64
 *
piNow
){

5733 
FILETIME
 
·
;

5734 c⁄° 
sqlôe3_öt64
 
wöFûëimeEpoch
 = 23058135*(sqlite3_int64)8640000;

5735 #ifde‡
SQLITE_TEST


5736 c⁄° 
sqlôe3_öt64
 
unixEpoch
 = 24405875*(sqlite3_int64)8640000;

5739 c⁄° 
sqlôe3_öt64
 
max32BôVÆue
 =

5740 (
sqlôe3_öt64
)2000000000 + (sqlite3_int64)2000000000 +

5741 (
sqlôe3_öt64
)294967296;

5743 #i‡
SQLITE_OS_WINCE


5744 
SYSTEMTIME
 
time
;

5745 
	`osGëSy°emTime
(&
time
);

5747 i‡(!
	`osSy°emTimeToFûeTime
(&
time
,&
·
)){

5748  
SQLITE_ERROR
;

5751 
	`osGëSy°emTimeAsFûeTime
–&
·
 );

5754 *
piNow
 = 
wöFûëimeEpoch
 +

5755 ((((
sqlôe3_öt64
)
·
.
dwHighD©eTime
)*
max32BôVÆue
) +

5756 (
sqlôe3_öt64
)
·
.
dwLowD©eTime
)/(sqlite3_int64)10000;

5758 #ifde‡
SQLITE_TEST


5759 if–
sqlôe3_cuºít_time
 ){

5760 *
piNow
 = 1000*(
sqlôe3_öt64
)
sqlôe3_cuºít_time
 + 
unixEpoch
;

5763 
	`UNUSED_PARAMETER
(
pVfs
);

5764  
SQLITE_OK
;

5765 
	}
}

5772 
	$wöCuºítTime
(
sqlôe3_vfs
 *
pVfs
, *
¥Now
){

5773 
rc
;

5774 
sqlôe3_öt64
 
i
;

5775 
rc
 = 
	`wöCuºítTimeI¡64
(
pVfs
, &
i
);

5776 if–!
rc
 ){

5777 *
¥Now
 = 
i
/86400000.0;

5779  
rc
;

5780 
	}
}

5812 
	$wöGëLa°Eº‹
(
sqlôe3_vfs
 *
pVfs
, 
nBuf
, *
zBuf
){

5813 
DWORD
 
e
 = 
	`osGëLa°Eº‹
();

5814 
	`UNUSED_PARAMETER
(
pVfs
);

5815 if–
nBuf
>0 ) 
	`wöGëLa°Eº‹Msg
(
e
,ÇBuf, 
zBuf
);

5816  
e
;

5817 
	}
}

5822 
	$sqlôe3_os_öô
(){

5823 
sqlôe3_vfs
 
wöVfs
 = {

5825 (
wöFûe
),

5826 
SQLITE_WIN32_MAX_PATH_BYTES
,

5829 &
wöAµD©a
,

5830 
wöO≥n
,

5831 
wöDñëe
,

5832 
wöAc˚ss
,

5833 
wöFuŒP©h«me
,

5834 
wöDlO≥n
,

5835 
wöDlEº‹
,

5836 
wöDlSym
,

5837 
wöDlClo£
,

5838 
wöR™dom√ss
,

5839 
wöSÀï
,

5840 
wöCuºítTime
,

5841 
wöGëLa°Eº‹
,

5842 
wöCuºítTimeI¡64
,

5843 
wöSëSy°emCÆl
,

5844 
wöGëSy°emCÆl
,

5845 
wöNextSy°emCÆl
,

5847 #i‡
	`deföed
(
SQLITE_WIN32_HAS_WIDE
)

5848 
sqlôe3_vfs
 
wöL⁄gP©hVfs
 = {

5850 (
wöFûe
),

5851 
SQLITE_WINNT_MAX_PATH_BYTES
,

5854 &
wöAµD©a
,

5855 
wöO≥n
,

5856 
wöDñëe
,

5857 
wöAc˚ss
,

5858 
wöFuŒP©h«me
,

5859 
wöDlO≥n
,

5860 
wöDlEº‹
,

5861 
wöDlSym
,

5862 
wöDlClo£
,

5863 
wöR™dom√ss
,

5864 
wöSÀï
,

5865 
wöCuºítTime
,

5866 
wöGëLa°Eº‹
,

5867 
wöCuºítTimeI¡64
,

5868 
wöSëSy°emCÆl
,

5869 
wöGëSy°emCÆl
,

5870 
wöNextSy°emCÆl
,

5873 
sqlôe3_vfs
 
wöNﬁockVfs
 = {

5875 (
wöFûe
),

5876 
SQLITE_WIN32_MAX_PATH_BYTES
,

5879 &
wöNﬁockAµD©a
,

5880 
wöO≥n
,

5881 
wöDñëe
,

5882 
wöAc˚ss
,

5883 
wöFuŒP©h«me
,

5884 
wöDlO≥n
,

5885 
wöDlEº‹
,

5886 
wöDlSym
,

5887 
wöDlClo£
,

5888 
wöR™dom√ss
,

5889 
wöSÀï
,

5890 
wöCuºítTime
,

5891 
wöGëLa°Eº‹
,

5892 
wöCuºítTimeI¡64
,

5893 
wöSëSy°emCÆl
,

5894 
wöGëSy°emCÆl
,

5895 
wöNextSy°emCÆl
,

5897 #i‡
	`deföed
(
SQLITE_WIN32_HAS_WIDE
)

5898 
sqlôe3_vfs
 
wöL⁄gP©hNﬁockVfs
 = {

5900 (
wöFûe
),

5901 
SQLITE_WINNT_MAX_PATH_BYTES
,

5904 &
wöNﬁockAµD©a
,

5905 
wöO≥n
,

5906 
wöDñëe
,

5907 
wöAc˚ss
,

5908 
wöFuŒP©h«me
,

5909 
wöDlO≥n
,

5910 
wöDlEº‹
,

5911 
wöDlSym
,

5912 
wöDlClo£
,

5913 
wöR™dom√ss
,

5914 
wöSÀï
,

5915 
wöCuºítTime
,

5916 
wöGëLa°Eº‹
,

5917 
wöCuºítTimeI¡64
,

5918 
wöSëSy°emCÆl
,

5919 
wöGëSy°emCÆl
,

5920 
wöNextSy°emCÆl
,

5926 
	`as£π
–
	`AºaySize
(
aSysˇŒ
)==80 );

5929 
	`mem£t
(&
wöSysInfo
, 0, (
SYSTEM_INFO
));

5930 #i‡
SQLITE_OS_WINRT


5931 
	`osGëN©iveSy°emInfo
(&
wöSysInfo
);

5933 
	`osGëSy°emInfo
(&
wöSysInfo
);

5935 
	`as£π
–
wöSysInfo
.
dwAŒoˇti⁄Gønuœrôy
>0 );

5936 
	`as£π
–
wöSysInfo
.
dwPageSize
>0 );

5938 
	`sqlôe3_vfs_ªgi°î
(&
wöVfs
, 1);

5940 #i‡
	`deföed
(
SQLITE_WIN32_HAS_WIDE
)

5941 
	`sqlôe3_vfs_ªgi°î
(&
wöL⁄gP©hVfs
, 0);

5944 
	`sqlôe3_vfs_ªgi°î
(&
wöNﬁockVfs
, 0);

5946 #i‡
	`deföed
(
SQLITE_WIN32_HAS_WIDE
)

5947 
	`sqlôe3_vfs_ªgi°î
(&
wöL⁄gP©hNﬁockVfs
, 0);

5950  
SQLITE_OK
;

5951 
	}
}

5953 
	$sqlôe3_os_íd
(){

5954 #i‡
SQLITE_OS_WINRT


5955 if–
¶ìpObj
!=
NULL
 ){

5956 
	`osClo£H™dÀ
(
¶ìpObj
);

5957 
¶ìpObj
 = 
NULL
;

5960  
SQLITE_OK
;

5961 
	}
}

	@os_win.h

15 #i‚de‡
SQLITE_OS_WIN_H


16 
	#SQLITE_OS_WIN_H


	)

21 
	~"wödows.h
"

23 #ifde‡
__CYGWIN__


24 
	~<sys/cygwö.h
>

25 
	~<î∫o.h
>

45 #i‡
SQLITE_OS_WIN
 && !
deföed
(
SQLITE_OS_WINNT
)

46 
	#SQLITE_OS_WINNT
 1

	)

53 #i‡
deföed
(
_WIN32_WCE
)

54 
	#SQLITE_OS_WINCE
 1

	)

56 
	#SQLITE_OS_WINCE
 0

	)

63 #i‡!
deföed
(
SQLITE_OS_WINRT
)

64 
	#SQLITE_OS_WINRT
 0

	)

71 #i‡
SQLITE_OS_WINCE


72 
	#SQLITE_WIN32_VOLATILE


	)

74 
	#SQLITE_WIN32_VOLATILE
 vﬁ©ûe

	)

81 #i‡
SQLITE_OS_WIN
 && !
SQLITE_OS_WINCE
 && !
SQLITE_OS_WINRT
 && \

82 
	gSQLITE_THREADSAFE
>0 && !
	$deföed
(
__CYGWIN__
)

83 
	#SQLITE_OS_WIN_THREADS
 1

	)

85 
	#SQLITE_OS_WIN_THREADS
 0

	)

	@pager.c

21 #i‚de‡
SQLITE_OMIT_DISKIO


22 
	~"sqlôeI¡.h
"

23 
	~"wÆ.h
"

24 
	~"log.h
"

25 
log°©e
;

118 
	gsqlôe3PagîTø˚
=1;

119 
	#sqlôe3DebugPrötf
 
¥ötf


	)

120 
	#PAGERTRACE
(
X
Ëif–
sqlôe3PagîTø˚
 ){ 
sqlôe3DebugPrötf
 X; }

	)

122 
	#PAGERTRACE
(
X
)

	)

133 
	#PAGERID
(
p
Ë(()’->
fd
))

	)

134 
	#FILEHANDLEID
(
fd
Ë(()fd)

	)

353 
	#PAGER_OPEN
 0

	)

354 
	#PAGER_READER
 1

	)

355 
	#PAGER_WRITER_LOCKED
 2

	)

356 
	#PAGER_WRITER_CACHEMOD
 3

	)

357 
	#PAGER_WRITER_DBMOD
 4

	)

358 
	#PAGER_WRITER_FINISHED
 5

	)

359 
	#PAGER_ERROR
 6

	)

409 
	#UNKNOWN_LOCK
 (
EXCLUSIVE_LOCK
+1)

	)

414 #ifde‡
SQLITE_HAS_CODEC


415 
	#CODEC1
(
P
,
D
,
N
,
X
,
E
) \

416 if–
P
->
xCodec
 && P->
	`xCodec
(P->
pCodec
,
D
,
N
,
X
)==0 ){ 
E
; }

	)

417 
	#CODEC2
(
P
,
D
,
N
,
X
,
E
,
O
) \

418 if–
P
->
xCodec
==0 ){ 
O
=(*)
D
; }\

419 if–(
O
=(*)(
P
->
	`xCodec
(P->
pCodec
,
D
,
N
,
X
)))==0 ){ 
E
; }

	)

421 
	#CODEC1
(
P
,
D
,
N
,
X
,
E
Ë

	)

422 
	#CODEC2
(
P
,
D
,
N
,
X
,
E
,
O
ËO=(*)
	)
D

431 
	#MAX_SECTOR_SIZE
 0x10000

	)

447 
PagîSavïoöt
 
	tPagîSavïoöt
;

448 
	sPagîSavïoöt
 {

449 
i64
 
	miOff£t
;

450 
i64
 
	miHdrOff£t
;

451 
Bôvec
 *
	mpInSavïoöt
;

452 
Pgno
 
	mnOrig
;

453 
Pgno
 
	miSubRec
;

454 #i‚de‡
SQLITE_OMIT_WAL


455 
u32
 
	maWÆD©a
[
WAL_SAVEPOINT_NDATA
];

462 
	#SPILLFLAG_OFF
 0x01

	)

463 
	#SPILLFLAG_ROLLBACK
 0x02

	)

464 
	#SPILLFLAG_NOSYNC
 0x04

	)

622 
	sPagî
 {

623 
sqlôe3_vfs
 *
	mpVfs
;

624 
u8
 
	mex˛usiveMode
;

625 
u8
 
	mjou∫ÆMode
;

626 
u8
 
	mu£Jou∫Æ
;

627 
u8
 
	mnoSync
;

628 
u8
 
	mfuŒSync
;

629 
u8
 
	mexåaSync
;

630 
u8
 
	mck±SyncFœgs
;

631 
u8
 
	mwÆSyncFœgs
;

632 
u8
 
	msyncFœgs
;

633 
u8
 
	mãmpFûe
;

634 
u8
 
	mnoLock
;

635 
u8
 
	mªadO∆y
;

636 
u8
 
	mmemDb
;

647 
u8
 
	meSèã
;

648 
u8
 
	meLock
;

649 
u8
 
	mch™geCou¡D⁄e
;

650 
u8
 
	m£tMa°î
;

651 
u8
 
	mdoNŸSpûl
;

652 
u8
 
	msubjInMem‹y
;

653 
u8
 
	mbU£Fëch
;

654 
u8
 
	mhasHñdSh¨edLock
;

655 
Pgno
 
	mdbSize
;

656 
Pgno
 
	mdbOrigSize
;

657 
Pgno
 
	mdbFûeSize
;

658 
Pgno
 
	mdbHötSize
;

659 
	mîrCode
;

660 
	mnRec
;

661 
u32
 
	mcksumInô
;

662 
u32
 
	mnSubRec
;

663 
Bôvec
 *
	mpInJou∫Æ
;

664 
sqlôe3_fûe
 *
	mfd
;

665 
sqlôe3_fûe
 *
	mjfd
;

666 
sqlôe3_fûe
 *
	msjfd
;

667 
i64
 
	mjou∫ÆOff
;

668 
i64
 
	mjou∫ÆHdr
;

669 
sqlôe3_backup
 *
	mpBackup
;

670 
PagîSavïoöt
 *
	maSavïoöt
;

671 
	mnSavïoöt
;

672 
u32
 
	miD©aVîsi⁄
;

673 
	mdbFûeVîs
[16];

675 
	mnMm≠Out
;

676 
sqlôe3_öt64
 
	mszMm≠
;

677 
PgHdr
 *
	mpMm≠Fªñi°
;

682 
u16
 
	mnExåa
;

683 
i16
 
	mnRe£rve
;

684 
u32
 
	mvfsFœgs
;

685 
u32
 
	m£˘‹Size
;

686 
	m∑geSize
;

687 
Pgno
 
	mmxPgno
;

688 
i64
 
	mjou∫ÆSizeLimô
;

689 *
	mzFûíame
;

690 *
	mzJou∫Æ
;

691 (*
	mxBusyH™dÀr
)(*);

692 *
	mpBusyH™dÀrArg
;

693 
	maSèt
[3];

694 #ifde‡
SQLITE_TEST


695 
	mnRód
;

697 (*
	mxReöôî
)(
	mDbPage
*);

698 (*
	mxGë
)(
	mPagî
*,
	mPgno
,
	mDbPage
**,);

699 #ifde‡
SQLITE_HAS_CODEC


700 *(*
	mxCodec
)(*,*,
	mPgno
,);

701 (*
	mxCodecSizeChng
)(*,,);

702 (*
	mxCodecFªe
)(*);

703 *
	mpCodec
;

705 *
	mpTmpS∑˚
;

706 
PCache
 *
	mpPCache
;

707 #i‚de‡
SQLITE_OMIT_WAL


708 
WÆ
 *
	mpWÆ
;

709 *
	mzWÆ
;

711 
Loggî
 *
	mpLoggî
;

719 
	#PAGER_STAT_HIT
 0

	)

720 
	#PAGER_STAT_MISS
 1

	)

721 
	#PAGER_STAT_WRITE
 2

	)

728 #ifde‡
SQLITE_TEST


729 
	gsqlôe3_∑gî_ªaddb_cou¡
 = 0;

730 
	gsqlôe3_∑gî_wrôedb_cou¡
 = 0;

731 
	gsqlôe3_∑gî_wrôej_cou¡
 = 0;

732 
	#PAGER_INCR
(
v
Ëv++

	)

734 
	#PAGER_INCR
(
v
)

	)

762 c⁄° 
	gaJou∫ÆMagic
[] = {

770 
	#JOURNAL_PG_SZ
(
pPagî
Ë(’Pagî->
∑geSize
Ë+ 8)

	)

776 
	#JOURNAL_HDR_SZ
(
pPagî
Ë’Pagî->
£˘‹Size
)

	)

784 #ifde‡
SQLITE_OMIT_MEMORYDB


785 
	#MEMDB
 0

	)

787 
	#MEMDB
 
pPagî
->
memDb


	)

794 #i‡
SQLITE_MAX_MMAP_SIZE
>0

795 
	#USEFETCH
(
x
Ë((x)->
bU£Fëch
)

	)

797 
	#USEFETCH
(
x
Ë0

	)

803 
	#PAGER_MAX_PGNO
 2147483647

	)

817 
	#isO≥n
(
pFd
Ë(’Fd)->
pMëhods
!=0)

	)

823 #i‚de‡
SQLITE_OMIT_WAL


824 
	$sqlôe3PagîU£WÆ
(
Pagî
 *
pPagî
){

825  (
pPagî
->
pWÆ
!=0);

826 
	}
}

827 
	#∑gîU£WÆ
(
x
Ë
	`sqlôe3PagîU£WÆ
(x)

	)

829 
	#∑gîU£WÆ
(
x
Ë0

	)

830 
	#∑gîRﬁlbackWÆ
(
x
Ë0

	)

831 
	#∑gîWÆFømes
(
v
,
w
,
x
,
y
Ë0

	)

832 
	#∑gîO≥nWÆIfPª£¡
(
z
Ë
SQLITE_OK


	)

833 
	#∑gîBegöRódTønß˘i⁄
(
z
Ë
SQLITE_OK


	)

836 #i‚de‡
NDEBUG


845 
	$as£π_∑gî_°©e
(
Pagî
 *
p
){

846 
Pagî
 *
pPagî
 = 
p
;

849 
	`as£π
–
p
->
eSèã
==
PAGER_OPEN


850 || 
p
->
eSèã
==
PAGER_READER


851 || 
p
->
eSèã
==
PAGER_WRITER_LOCKED


852 || 
p
->
eSèã
==
PAGER_WRITER_CACHEMOD


853 || 
p
->
eSèã
==
PAGER_WRITER_DBMOD


854 || 
p
->
eSèã
==
PAGER_WRITER_FINISHED


855 || 
p
->
eSèã
==
PAGER_ERROR


862 
	`as£π
–
p
->
ãmpFûe
==0 ||Ö->
eLock
==
EXCLUSIVE_LOCK
 );

863 
	`as£π
–
p
->
ãmpFûe
==0 || 
pPagî
->
ch™geCou¡D⁄e
 );

868 
	`as£π
–
p
->
jou∫ÆMode
==
PAGER_JOURNALMODE_OFF
 ||Ö->
u£Jou∫Æ
 );

869 
	`as£π
–
p
->
jou∫ÆMode
!=
PAGER_JOURNALMODE_OFF
 || !
	`isO≥n
’->
jfd
) );

879 if–
MEMDB
 ){

880 
	`as£π
–!
	`isO≥n
(
p
->
fd
) );

881 
	`as£π
–
p
->
noSync
 );

882 
	`as£π
–
p
->
jou∫ÆMode
==
PAGER_JOURNALMODE_OFF


883 || 
p
->
jou∫ÆMode
==
PAGER_JOURNALMODE_MEMORY


885 
	`as£π
–
p
->
eSèã
!=
PAGER_ERROR
 &&Ö->eSèã!=
PAGER_OPEN
 );

886 
	`as£π
–
	`∑gîU£WÆ
(
p
)==0 );

892 
	`as£π
–
pPagî
->
ch™geCou¡D⁄e
==0 ||ÖPagî->
eLock
>=
RESERVED_LOCK
 );

893 
	`as£π
–
p
->
eLock
!=
PENDING_LOCK
 );

895  
p
->
eSèã
 ){

896 
PAGER_OPEN
:

897 
	`as£π
–!
MEMDB
 );

898 
	`as£π
–
pPagî
->
îrCode
==
SQLITE_OK
 );

899 
	`as£π
–
	`sqlôe3PˇcheRefCou¡
(
pPagî
->
pPCache
)==0 ||ÖPagî->
ãmpFûe
 );

902 
PAGER_READER
:

903 
	`as£π
–
pPagî
->
îrCode
==
SQLITE_OK
 );

904 
	`as£π
–
p
->
eLock
!=
UNKNOWN_LOCK
 );

905 
	`as£π
–
p
->
eLock
>=
SHARED_LOCK
 );

908 
PAGER_WRITER_LOCKED
:

909 
	`as£π
–
p
->
eLock
!=
UNKNOWN_LOCK
 );

910 
	`as£π
–
pPagî
->
îrCode
==
SQLITE_OK
 );

911 if–!
	`∑gîU£WÆ
(
pPagî
) ){

912 
	`as£π
–
p
->
eLock
>=
RESERVED_LOCK
 );

914 
	`as£π
–
pPagî
->
dbSize
=ıPagî->
dbOrigSize
 );

915 
	`as£π
–
pPagî
->
dbOrigSize
=ıPagî->
dbFûeSize
 );

916 
	`as£π
–
pPagî
->
dbOrigSize
=ıPagî->
dbHötSize
 );

917 
	`as£π
–
pPagî
->
£tMa°î
==0 );

920 
PAGER_WRITER_CACHEMOD
:

921 
	`as£π
–
p
->
eLock
!=
UNKNOWN_LOCK
 );

922 
	`as£π
–
pPagî
->
îrCode
==
SQLITE_OK
 );

923 if–!
	`∑gîU£WÆ
(
pPagî
) ){

929 
	`as£π
–
p
->
eLock
>=
RESERVED_LOCK
 );

930 
	`as£π
–
	`isO≥n
(
p
->
jfd
)

931 || 
p
->
jou∫ÆMode
==
PAGER_JOURNALMODE_OFF


932 || 
p
->
jou∫ÆMode
==
PAGER_JOURNALMODE_WAL


935 
	`as£π
–
pPagî
->
dbOrigSize
=ıPagî->
dbFûeSize
 );

936 
	`as£π
–
pPagî
->
dbOrigSize
=ıPagî->
dbHötSize
 );

939 
PAGER_WRITER_DBMOD
:

940 
	`as£π
–
p
->
eLock
==
EXCLUSIVE_LOCK
 );

941 
	`as£π
–
pPagî
->
îrCode
==
SQLITE_OK
 );

942 
	`as£π
–!
	`∑gîU£WÆ
(
pPagî
) );

943 
	`as£π
–
p
->
eLock
>=
EXCLUSIVE_LOCK
 );

944 
	`as£π
–
	`isO≥n
(
p
->
jfd
)

945 || 
p
->
jou∫ÆMode
==
PAGER_JOURNALMODE_OFF


946 || 
p
->
jou∫ÆMode
==
PAGER_JOURNALMODE_WAL


948 
	`as£π
–
pPagî
->
dbOrigSize
<ıPagî->
dbHötSize
 );

951 
PAGER_WRITER_FINISHED
:

952 
	`as£π
–
p
->
eLock
==
EXCLUSIVE_LOCK
 );

953 
	`as£π
–
pPagî
->
îrCode
==
SQLITE_OK
 );

954 
	`as£π
–!
	`∑gîU£WÆ
(
pPagî
) );

955 
	`as£π
–
	`isO≥n
(
p
->
jfd
)

956 || 
p
->
jou∫ÆMode
==
PAGER_JOURNALMODE_OFF


957 || 
p
->
jou∫ÆMode
==
PAGER_JOURNALMODE_WAL


961 
PAGER_ERROR
:

966 
	`as£π
–
pPagî
->
îrCode
!=
SQLITE_OK
 );

967 
	`as£π
–
	`sqlôe3PˇcheRefCou¡
(
pPagî
->
pPCache
)>0 ||ÖPagî->
ãmpFûe
 );

972 
	}
}

975 #ifde‡
SQLITE_DEBUG


984 *
	$¥öt_∑gî_°©e
(
Pagî
 *
p
){

985 
zRë
[1024];

987 
	`sqlôe3_¢¥ötf
(1024, 
zRë
,

996 , 
p
->
zFûíame


997 , 
p
->
eSèã
==
PAGER_OPEN
 ? "OPEN" :

998 
p
->
eSèã
==
PAGER_READER
 ? "READER" :

999 
p
->
eSèã
==
PAGER_WRITER_LOCKED
 ? "WRITER_LOCKED" :

1000 
p
->
eSèã
==
PAGER_WRITER_CACHEMOD
 ? "WRITER_CACHEMOD" :

1001 
p
->
eSèã
==
PAGER_WRITER_DBMOD
 ? "WRITER_DBMOD" :

1002 
p
->
eSèã
==
PAGER_WRITER_FINISHED
 ? "WRITER_FINISHED" :

1003 
p
->
eSèã
==
PAGER_ERROR
 ? "ERROR" : "?error?"

1004 , ()
p
->
îrCode


1005 , 
p
->
eLock
==
NO_LOCK
 ? "NO_LOCK" :

1006 
p
->
eLock
==
RESERVED_LOCK
 ? "RESERVED" :

1007 
p
->
eLock
==
EXCLUSIVE_LOCK
 ? "EXCLUSIVE" :

1008 
p
->
eLock
==
SHARED_LOCK
 ? "SHARED" :

1009 
p
->
eLock
==
UNKNOWN_LOCK
 ? "UNKNOWN" : "?error?"

1010 , 
p
->
ex˛usiveMode
 ? "exclusive" : "normal"

1011 , 
p
->
jou∫ÆMode
==
PAGER_JOURNALMODE_MEMORY
 ? "memory" :

1012 
p
->
jou∫ÆMode
==
PAGER_JOURNALMODE_OFF
 ? "off" :

1013 
p
->
jou∫ÆMode
==
PAGER_JOURNALMODE_DELETE
 ? "delete" :

1014 
p
->
jou∫ÆMode
==
PAGER_JOURNALMODE_PERSIST
 ? "persist" :

1015 
p
->
jou∫ÆMode
==
PAGER_JOURNALMODE_TRUNCATE
 ? "truncate" :

1016 
p
->
jou∫ÆMode
==
PAGER_JOURNALMODE_WAL
 ? "wal" : "?error?"

1017 , ()
p
->
ãmpFûe
, (Ì->
memDb
, (Ì->
u£Jou∫Æ


1018 , 
p
->
jou∫ÆOff
,Ö->
jou∫ÆHdr


1019 , ()
p
->
dbSize
, (Ì->
dbOrigSize
, (Ì->
dbFûeSize


1022  
zRë
;

1023 
	}
}

1027 
gëPageN‹mÆ
(
Pagî
*,
Pgno
,
DbPage
**,);

1028 
gëPageEº‹
(
Pagî
*,
Pgno
,
DbPage
**,);

1029 #i‡
SQLITE_MAX_MMAP_SIZE
>0

1030 
gëPageMM≠
(
Pagî
*,
Pgno
,
DbPage
**,);

1037 
	$£tGëãrMëhod
(
Pagî
 *
pPagî
){

1038 if–
pPagî
->
îrCode
 ){

1039 
pPagî
->
xGë
 = 
gëPageEº‹
;

1040 #i‡
SQLITE_MAX_MMAP_SIZE
>0

1041 }if–
	`USEFETCH
(
pPagî
)

1042 #ifde‡
SQLITE_HAS_CODEC


1043 && 
pPagî
->
xCodec
==0

1046 
pPagî
->
xGë
 = 
gëPageMM≠
;

1049 
pPagî
->
xGë
 = 
gëPageN‹mÆ
;

1051 
	}
}

1062 
	$subjRequúesPage
(
PgHdr
 *
pPg
){

1063 
Pagî
 *
pPagî
 = 
pPg
->pPager;

1064 
PagîSavïoöt
 *
p
;

1065 
Pgno
 
pgno
 = 
pPg
->pgno;

1066 
i
;

1067 
i
=0; i<
pPagî
->
nSavïoöt
; i++){

1068 
p
 = &
pPagî
->
aSavïoöt
[
i
];

1069 if–
p
->
nOrig
>=
pgno
 && 0==
	`sqlôe3BôvecTe°NŸNuŒ
’->
pInSavïoöt
,Ögno) ){

1074 
	}
}

1076 #ifde‡
SQLITE_DEBUG


1080 
	$∑geInJou∫Æ
(
Pagî
 *
pPagî
, 
PgHdr
 *
pPg
){

1081  
	`sqlôe3BôvecTe°
(
pPagî
->
pInJou∫Æ
, 
pPg
->
pgno
);

1082 
	}
}

1092 
	$ªad32bôs
(
sqlôe3_fûe
 *
fd
, 
i64
 
off£t
, 
u32
 *
pRes
){

1093 
ac
[4];

1094 
rc
 = 
	`sqlôe3OsRód
(
fd
, 
ac
, ◊c), 
off£t
);

1095 if–
rc
==
SQLITE_OK
 ){

1096 *
pRes
 = 
	`sqlôe3Gë4byã
(
ac
);

1098  
rc
;

1099 
	}
}

1104 
	#put32bôs
(
A
,
B
Ë
	`sqlôe3Put4byã
((
u8
*)A,B)

	)

1111 
	$wrôe32bôs
(
sqlôe3_fûe
 *
fd
, 
i64
 
off£t
, 
u32
 
vÆ
){

1112 
ac
[4];

1113 
	`put32bôs
(
ac
, 
vÆ
);

1114  
	`sqlôe3OsWrôe
(
fd
, 
ac
, 4, 
off£t
);

1115 
	}
}

1126 
	$∑gîU∆ockDb
(
Pagî
 *
pPagî
, 
eLock
){

1127 
rc
 = 
SQLITE_OK
;

1129 
	`as£π
–!
pPagî
->
ex˛usiveMode
 ||ÖPagî->
eLock
==eLock );

1130 
	`as£π
–
eLock
==
NO_LOCK
 ||ÉLock==
SHARED_LOCK
 );

1131 
	`as£π
–
eLock
!=
NO_LOCK
 || 
	`∑gîU£WÆ
(
pPagî
)==0 );

1132 if–
	`isO≥n
(
pPagî
->
fd
) ){

1133 
	`as£π
–
pPagî
->
eLock
>=eLock );

1134 
rc
 = 
pPagî
->
noLock
 ? 
SQLITE_OK
 : 
	`sqlôe3OsU∆ock
’Pagî->
fd
, 
eLock
);

1135 if–
pPagî
->
eLock
!=
UNKNOWN_LOCK
 ){

1136 
pPagî
->
eLock
 = (
u8
)eLock;

1138 
	`IOTRACE
(("UNLOCK %∞%d\n", 
pPagî
, 
eLock
))

1140  
rc
;

1141 
	}
}

1153 
	$∑gîLockDb
(
Pagî
 *
pPagî
, 
eLock
){

1154 
rc
 = 
SQLITE_OK
;

1156 
	`as£π
–
eLock
==
SHARED_LOCK
 ||ÉLock==
RESERVED_LOCK
 ||ÉLock==
EXCLUSIVE_LOCK
 );

1157 if–
pPagî
->
eLock
<eLock ||ÖPagî->eLock==
UNKNOWN_LOCK
 ){

1158 
rc
 = 
pPagî
->
noLock
 ? 
SQLITE_OK
 : 
	`sqlôe3OsLock
’Pagî->
fd
, 
eLock
);

1159 if–
rc
==
SQLITE_OK
 && (
pPagî
->
eLock
!=
UNKNOWN_LOCK
||eLock==
EXCLUSIVE_LOCK
) ){

1160 
pPagî
->
eLock
 = (
u8
)eLock;

1161 
	`IOTRACE
(("LOCK %∞%d\n", 
pPagî
, 
eLock
))

1164  
rc
;

1165 
	}
}

1184 #ifde‡
SQLITE_ENABLE_ATOMIC_WRITE


1185 
	$j∫lBuf„rSize
(
Pagî
 *
pPagî
){

1186 
	`as£π
–!
MEMDB
 );

1187 if–!
pPagî
->
ãmpFûe
 ){

1188 
dc
;

1189 
nSe˘‹
;

1190 
szPage
;

1192 
	`as£π
–
	`isO≥n
(
pPagî
->
fd
) );

1193 
dc
 = 
	`sqlôe3OsDevi˚Ch¨a˘îi°ics
(
pPagî
->
fd
);

1194 
nSe˘‹
 = 
pPagî
->
£˘‹Size
;

1195 
szPage
 = 
pPagî
->
∑geSize
;

1197 
	`as£π
(
SQLITE_IOCAP_ATOMIC512
==(512>>8));

1198 
	`as£π
(
SQLITE_IOCAP_ATOMIC64K
==(65536>>8));

1199 if–0==(
dc
&(
SQLITE_IOCAP_ATOMIC
|(
szPage
>>8)Ë|| 
nSe˘‹
>szPage) ){

1204  
	`JOURNAL_HDR_SZ
(
pPagî
Ë+ 
	`JOURNAL_PG_SZ
(pPager);

1205 
	}
}

1207 
	#j∫lBuf„rSize
(
x
Ë0

	)

1215 #ifde‡
SQLITE_CHECK_PAGES


1219 
u32
 
	$∑gî_d©ahash
(
nByã
, *
pD©a
){

1220 
u32
 
hash
 = 0;

1221 
i
;

1222 
i
=0; i<
nByã
; i++){

1223 
hash
 = (hash*1039Ë+ 
pD©a
[
i
];

1225  
hash
;

1226 
	}
}

1227 
u32
 
	$∑gî_∑gehash
(
PgHdr
 *
pPage
){

1228  
	`∑gî_d©ahash
(
pPage
->
pPagî
->
∑geSize
, (*ÌPage->
pD©a
);

1229 
	}
}

1230 
	$∑gî_£t_∑gehash
(
PgHdr
 *
pPage
){

1231 
pPage
->
∑geHash
 = 
	`∑gî_∑gehash
(pPage);

1232 
	}
}

1239 
	#CHECK_PAGE
(
x
Ë
	`checkPage
(x)

	)

1240 
	$checkPage
(
PgHdr
 *
pPg
){

1241 
Pagî
 *
pPagî
 = 
pPg
->pPager;

1242 
	`as£π
–
pPagî
->
eSèã
!=
PAGER_ERROR
 );

1243 
	`as£π
–(
pPg
->
Êags
&
PGHDR_DIRTY
Ë||ÖPg->
∑geHash
==
	`∑gî_∑gehash
(pPg) );

1244 
	}
}

1247 
	#∑gî_d©ahash
(
X
,
Y
Ë0

	)

1248 
	#∑gî_∑gehash
(
X
Ë0

	)

1249 
	#∑gî_£t_∑gehash
(
X
)

	)

1250 
	#CHECK_PAGE
(
x
)

	)

1278 
	$ªadMa°îJou∫Æ
(
sqlôe3_fûe
 *
pJ∫l
, *
zMa°î
, 
u32
 
nMa°î
){

1279 
rc
;

1280 
u32
 
Àn
;

1281 
i64
 
szJ
;

1282 
u32
 
cksum
;

1283 
u32
 
u
;

1284 
aMagic
[8];

1285 
zMa°î
[0] = '\0';

1287 if–
SQLITE_OK
!=(
rc
 = 
	`sqlôe3OsFûeSize
(
pJ∫l
, &
szJ
))

1288 || 
szJ
<16

1289 || 
SQLITE_OK
!=(
rc
 = 
	`ªad32bôs
(
pJ∫l
, 
szJ
-16, &
Àn
))

1290 || 
Àn
>=
nMa°î


1291 || 
Àn
==0

1292 || 
SQLITE_OK
!=(
rc
 = 
	`ªad32bôs
(
pJ∫l
, 
szJ
-12, &
cksum
))

1293 || 
SQLITE_OK
!=(
rc
 = 
	`sqlôe3OsRód
(
pJ∫l
, 
aMagic
, 8, 
szJ
-8))

1294 || 
	`memcmp
(
aMagic
, 
aJou∫ÆMagic
, 8)

1295 || 
SQLITE_OK
!=(
rc
 = 
	`sqlôe3OsRód
(
pJ∫l
, 
zMa°î
, 
Àn
, 
szJ
-16-len))

1297  
rc
;

1301 
u
=0; u<
Àn
; u++){

1302 
cksum
 -
zMa°î
[
u
];

1304 if–
cksum
 ){

1310 
Àn
 = 0;

1312 
zMa°î
[
Àn
] = '\0';

1314  
SQLITE_OK
;

1315 
	}
}

1332 
i64
 
	$jou∫ÆHdrOff£t
(
Pagî
 *
pPagî
){

1333 
i64
 
off£t
 = 0;

1334 
i64
 
c
 = 
pPagî
->
jou∫ÆOff
;

1335 if–
c
 ){

1336 
off£t
 = ((
c
-1)/
	`JOURNAL_HDR_SZ
(
pPagî
) + 1) * JOURNAL_HDR_SZ(pPager);

1338 
	`as£π
–
off£t
%
	`JOURNAL_HDR_SZ
(
pPagî
)==0 );

1339 
	`as£π
–
off£t
>=
c
 );

1340 
	`as£π
–(
off£t
-
c
)<
	`JOURNAL_HDR_SZ
(
pPagî
) );

1341  
off£t
;

1342 
	}
}

1365 
	$zîoJou∫ÆHdr
(
Pagî
 *
pPagî
, 
doTrunˇã
){

1366 
rc
 = 
SQLITE_OK
;

1367 
	`as£π
–
	`isO≥n
(
pPagî
->
jfd
) );

1368 
	`as£π
–!
	`sqlôe3Jou∫ÆIsInMem‹y
(
pPagî
->
jfd
) );

1369 if–
pPagî
->
jou∫ÆOff
 ){

1370 c⁄° 
i64
 
iLimô
 = 
pPagî
->
jou∫ÆSizeLimô
;

1372 
	`IOTRACE
(("JZEROHDR %p\n", 
pPagî
))

1373 if–
doTrunˇã
 || 
iLimô
==0 ){

1374 
rc
 = 
	`sqlôe3OsTrunˇã
(
pPagî
->
jfd
, 0);

1376 c⁄° 
zîoHdr
[28] = {0};

1377 
rc
 = 
	`sqlôe3OsWrôe
(
pPagî
->
jfd
, 
zîoHdr
, (zeroHdr), 0);

1379 if–
rc
==
SQLITE_OK
 && !
pPagî
->
noSync
 ){

1380 
rc
 = 
	`sqlôe3OsSync
(
pPagî
->
jfd
, 
SQLITE_SYNC_DATAONLY
|pPagî->
syncFœgs
);

1389 if–
rc
==
SQLITE_OK
 && 
iLimô
>0 ){

1390 
i64
 
sz
;

1391 
rc
 = 
	`sqlôe3OsFûeSize
(
pPagî
->
jfd
, &
sz
);

1392 if–
rc
==
SQLITE_OK
 && 
sz
>
iLimô
 ){

1393 
rc
 = 
	`sqlôe3OsTrunˇã
(
pPagî
->
jfd
, 
iLimô
);

1397  
rc
;

1398 
	}
}

1415 
	$wrôeJou∫ÆHdr
(
Pagî
 *
pPagî
){

1416 
rc
 = 
SQLITE_OK
;

1417 *
zHódî
 = 
pPagî
->
pTmpS∑˚
;

1418 
u32
 
nHódî
 = (u32)
pPagî
->
∑geSize
;

1419 
u32
 
nWrôe
;

1420 
ii
;

1422 
	`as£π
–
	`isO≥n
(
pPagî
->
jfd
) );

1424 if–
nHódî
>
	`JOURNAL_HDR_SZ
(
pPagî
) ){

1425 
nHódî
 = 
	`JOURNAL_HDR_SZ
(
pPagî
);

1432 
ii
=0; ii<
pPagî
->
nSavïoöt
; ii++){

1433 if–
pPagî
->
aSavïoöt
[
ii
].
iHdrOff£t
==0 ){

1434 
pPagî
->
aSavïoöt
[
ii
].
iHdrOff£t
 =ÖPagî->
jou∫ÆOff
;

1438 
pPagî
->
jou∫ÆHdr
 =ÖPagî->
jou∫ÆOff
 = 
	`jou∫ÆHdrOff£t
(pPager);

1460 
	`as£π
–
	`isO≥n
(
pPagî
->
fd
Ë||ÖPagî->
noSync
 );

1461 if–
pPagî
->
noSync
 || (pPagî->
jou∫ÆMode
==
PAGER_JOURNALMODE_MEMORY
)

1462 || (
	`sqlôe3OsDevi˚Ch¨a˘îi°ics
(
pPagî
->
fd
)&
SQLITE_IOCAP_SAFE_APPEND
)

1464 
	`mem˝y
(
zHódî
, 
aJou∫ÆMagic
, (aJournalMagic));

1465 
	`put32bôs
(&
zHódî
[(
aJou∫ÆMagic
)], 0xffffffff);

1467 
	`mem£t
(
zHódî
, 0, (
aJou∫ÆMagic
)+4);

1471 
	`sqlôe3_øndom√ss
((
pPagî
->
cksumInô
), &pPager->cksumInit);

1472 
	`put32bôs
(&
zHódî
[(
aJou∫ÆMagic
)+4], 
pPagî
->
cksumInô
);

1474 
	`put32bôs
(&
zHódî
[(
aJou∫ÆMagic
)+8], 
pPagî
->
dbOrigSize
);

1476 
	`put32bôs
(&
zHódî
[(
aJou∫ÆMagic
)+12], 
pPagî
->
£˘‹Size
);

1479 
	`put32bôs
(&
zHódî
[(
aJou∫ÆMagic
)+16], 
pPagî
->
∑geSize
);

1486 
	`mem£t
(&
zHódî
[(
aJou∫ÆMagic
)+20], 0,

1487 
nHódî
-((
aJou∫ÆMagic
)+20));

1506 
nWrôe
=0; 
rc
==
SQLITE_OK
&&nWrôe<
	`JOURNAL_HDR_SZ
(
pPagî
);ÇWrôe+=
nHódî
){

1507 
	`IOTRACE
(("JHDR %∞%Œd %d\n", 
pPagî
,ÖPagî->
jou∫ÆHdr
, 
nHódî
))

1508 
rc
 = 
	`sqlôe3OsWrôe
(
pPagî
->
jfd
, 
zHódî
, 
nHódî
,ÖPagî->
jou∫ÆOff
);

1509 
	`as£π
–
pPagî
->
jou∫ÆHdr
 <pPagî->
jou∫ÆOff
 );

1510 
pPagî
->
jou∫ÆOff
 +
nHódî
;

1513  
rc
;

1514 
	}
}

1533 
	$ªadJou∫ÆHdr
(

1534 
Pagî
 *
pPagî
,

1535 
isHŸ
,

1536 
i64
 
jou∫ÆSize
,

1537 
u32
 *
pNRec
,

1538 
u32
 *
pDbSize


1540 
rc
;

1541 
aMagic
[8];

1542 
i64
 
iHdrOff
;

1544 
	`as£π
–
	`isO≥n
(
pPagî
->
jfd
) );

1550 
pPagî
->
jou∫ÆOff
 = 
	`jou∫ÆHdrOff£t
(pPager);

1551 if–
pPagî
->
jou∫ÆOff
+
	`JOURNAL_HDR_SZ
’PagîË> 
jou∫ÆSize
 ){

1552  
SQLITE_DONE
;

1554 
iHdrOff
 = 
pPagî
->
jou∫ÆOff
;

1561 if–
isHŸ
 || 
iHdrOff
!=
pPagî
->
jou∫ÆHdr
 ){

1562 
rc
 = 
	`sqlôe3OsRód
(
pPagî
->
jfd
, 
aMagic
, ◊Magic), 
iHdrOff
);

1563 if–
rc
 ){

1564  
rc
;

1566 if–
	`memcmp
(
aMagic
, 
aJou∫ÆMagic
, (aMagic))!=0 ){

1567  
SQLITE_DONE
;

1575 if–
SQLITE_OK
!=(
rc
 = 
	`ªad32bôs
(
pPagî
->
jfd
, 
iHdrOff
+8, 
pNRec
))

1576 || 
SQLITE_OK
!=(
rc
 = 
	`ªad32bôs
(
pPagî
->
jfd
, 
iHdrOff
+12, &pPagî->
cksumInô
))

1577 || 
SQLITE_OK
!=(
rc
 = 
	`ªad32bôs
(
pPagî
->
jfd
, 
iHdrOff
+16, 
pDbSize
))

1579  
rc
;

1582 if–
pPagî
->
jou∫ÆOff
==0 ){

1583 
u32
 
iPageSize
;

1584 
u32
 
iSe˘‹Size
;

1587 if–
SQLITE_OK
!=(
rc
 = 
	`ªad32bôs
(
pPagî
->
jfd
, 
iHdrOff
+20, &
iSe˘‹Size
))

1588 || 
SQLITE_OK
!=(
rc
 = 
	`ªad32bôs
(
pPagî
->
jfd
, 
iHdrOff
+24, &
iPageSize
))

1590  
rc
;

1597 if–
iPageSize
==0 ){

1598 
iPageSize
 = 
pPagî
->
∑geSize
;

1606 if–
iPageSize
<512 || 
iSe˘‹Size
<32

1607 || 
iPageSize
>
SQLITE_MAX_PAGE_SIZE
 || 
iSe˘‹Size
>
MAX_SECTOR_SIZE


1608 || ((
iPageSize
-1)&iPageSize)!=0 || ((
iSe˘‹Size
-1)&iSectorSize)!=0

1615  
SQLITE_DONE
;

1622 
rc
 = 
	`sqlôe3PagîSëPagesize
(
pPagî
, &
iPageSize
, -1);

1623 
	`ã°ˇ£
–
rc
!=
SQLITE_OK
 );

1631 
pPagî
->
£˘‹Size
 = 
iSe˘‹Size
;

1634 
pPagî
->
jou∫ÆOff
 +
	`JOURNAL_HDR_SZ
(pPager);

1635  
rc
;

1636 
	}
}

1658 
	$wrôeMa°îJou∫Æ
(
Pagî
 *
pPagî
, c⁄° *
zMa°î
){

1659 
rc
;

1660 
nMa°î
;

1661 
i64
 
iHdrOff
;

1662 
i64
 
j∫lSize
;

1663 
u32
 
cksum
 = 0;

1665 
	`as£π
–
pPagî
->
£tMa°î
==0 );

1666 
	`as£π
–!
	`∑gîU£WÆ
(
pPagî
) );

1668 if–!
zMa°î


1669 || 
pPagî
->
jou∫ÆMode
==
PAGER_JOURNALMODE_MEMORY


1670 || !
	`isO≥n
(
pPagî
->
jfd
)

1672  
SQLITE_OK
;

1674 
pPagî
->
£tMa°î
 = 1;

1675 
	`as£π
–
pPagî
->
jou∫ÆHdr
 <pPagî->
jou∫ÆOff
 );

1678 
nMa°î
=0; 
zMa°î
[nMaster];ÇMaster++){

1679 
cksum
 +
zMa°î
[
nMa°î
];

1686 if–
pPagî
->
fuŒSync
 ){

1687 
pPagî
->
jou∫ÆOff
 = 
	`jou∫ÆHdrOff£t
(pPager);

1689 
iHdrOff
 = 
pPagî
->
jou∫ÆOff
;

1694 if–(0 !(
rc
 = 
	`wrôe32bôs
(
pPagî
->
jfd
, 
iHdrOff
, 
	`PAGER_MJ_PGNO
(pPager))))

1695 || (0 !(
rc
 = 
	`sqlôe3OsWrôe
(
pPagî
->
jfd
, 
zMa°î
, 
nMa°î
, 
iHdrOff
+4)))

1696 || (0 !(
rc
 = 
	`wrôe32bôs
(
pPagî
->
jfd
, 
iHdrOff
+4+
nMa°î
,ÇMaster)))

1697 || (0 !(
rc
 = 
	`wrôe32bôs
(
pPagî
->
jfd
, 
iHdrOff
+4+
nMa°î
+4, 
cksum
)))

1698 || (0 !(
rc
 = 
	`sqlôe3OsWrôe
(
pPagî
->
jfd
, 
aJou∫ÆMagic
, 8,

1699 
iHdrOff
+4+
nMa°î
+8)))

1701  
rc
;

1703 
pPagî
->
jou∫ÆOff
 +(
nMa°î
+20);

1715 if–
SQLITE_OK
==(
rc
 = 
	`sqlôe3OsFûeSize
(
pPagî
->
jfd
, &
j∫lSize
))

1716 && 
j∫lSize
>
pPagî
->
jou∫ÆOff


1718 
rc
 = 
	`sqlôe3OsTrunˇã
(
pPagî
->
jfd
,ÖPagî->
jou∫ÆOff
);

1720  
rc
;

1721 
	}
}

1726 
	$∑gî_ª£t
(
Pagî
 *
pPagî
){

1727 
pPagî
->
iD©aVîsi⁄
++;

1728 
	`sqlôe3BackupRe°¨t
(
pPagî
->
pBackup
);

1729 
	`sqlôe3PˇcheCÀ¨
(
pPagî
->
pPCache
);

1730 
	}
}

1735 
u32
 
	$sqlôe3PagîD©aVîsi⁄
(
Pagî
 *
pPagî
){

1736 
	`as£π
–
pPagî
->
eSèã
>
PAGER_OPEN
 );

1737  
pPagî
->
iD©aVîsi⁄
;

1738 
	}
}

1745 
	$ªÀa£AŒSavïoöts
(
Pagî
 *
pPagî
){

1746 
ii
;

1747 
ii
=0; ii<
pPagî
->
nSavïoöt
; ii++){

1748 
	`sqlôe3BôvecDe°roy
(
pPagî
->
aSavïoöt
[
ii
].
pInSavïoöt
);

1750 if–!
pPagî
->
ex˛usiveMode
 || 
	`sqlôe3Jou∫ÆIsInMem‹y
’Pagî->
sjfd
) ){

1751 
	`sqlôe3OsClo£
(
pPagî
->
sjfd
);

1753 
	`sqlôe3_‰ì
(
pPagî
->
aSavïoöt
);

1754 
pPagî
->
aSavïoöt
 = 0;

1755 
pPagî
->
nSavïoöt
 = 0;

1756 
pPagî
->
nSubRec
 = 0;

1757 
	}
}

1764 
	$addToSavïoötBôvecs
(
Pagî
 *
pPagî
, 
Pgno
 
pgno
){

1765 
ii
;

1766 
rc
 = 
SQLITE_OK
;

1768 
ii
=0; ii<
pPagî
->
nSavïoöt
; ii++){

1769 
PagîSavïoöt
 *
p
 = &
pPagî
->
aSavïoöt
[
ii
];

1770 if–
pgno
<=
p
->
nOrig
 ){

1771 
rc
 |
	`sqlôe3BôvecSë
(
p
->
pInSavïoöt
, 
pgno
);

1772 
	`ã°ˇ£
–
rc
==
SQLITE_NOMEM
 );

1773 
	`as£π
–
rc
==
SQLITE_OK
 ||Ñc==
SQLITE_NOMEM
 );

1776  
rc
;

1777 
	}
}

1796 
	$∑gî_u∆ock
(
Pagî
 *
pPagî
){

1798 
	`as£π
–
pPagî
->
eSèã
==
PAGER_READER


1799 || 
pPagî
->
eSèã
==
PAGER_OPEN


1800 || 
pPagî
->
eSèã
==
PAGER_ERROR


1803 
	`sqlôe3BôvecDe°roy
(
pPagî
->
pInJou∫Æ
);

1804 
pPagî
->
pInJou∫Æ
 = 0;

1805 
	`ªÀa£AŒSavïoöts
(
pPagî
);

1807 if–
	`∑gîU£WÆ
(
pPagî
) ){

1808 
	`as£π
–!
	`isO≥n
(
pPagî
->
jfd
) );

1809 
	`sqlôe3WÆEndRódTønß˘i⁄
(
pPagî
->
pWÆ
);

1810 
pPagî
->
eSèã
 = 
PAGER_OPEN
;

1811 }if–!
pPagî
->
ex˛usiveMode
 ){

1812 
rc
;

1813 
iDc
 = 
	`isO≥n
(
pPagî
->
fd
)?
	`sqlôe3OsDevi˚Ch¨a˘îi°ics
(pPager->fd):0;

1820 
	`as£π
–(
PAGER_JOURNALMODE_MEMORY
 & 5)!=1 );

1821 
	`as£π
–(
PAGER_JOURNALMODE_OFF
 & 5)!=1 );

1822 
	`as£π
–(
PAGER_JOURNALMODE_WAL
 & 5)!=1 );

1823 
	`as£π
–(
PAGER_JOURNALMODE_DELETE
 & 5)!=1 );

1824 
	`as£π
–(
PAGER_JOURNALMODE_TRUNCATE
 & 5)==1 );

1825 
	`as£π
–(
PAGER_JOURNALMODE_PERSIST
 & 5)==1 );

1826 if–0==(
iDc
 & 
SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN
)

1827 || 1!=(
pPagî
->
jou∫ÆMode
 & 5)

1829 
	`sqlôe3OsClo£
(
pPagî
->
jfd
);

1837 
rc
 = 
	`∑gîU∆ockDb
(
pPagî
, 
NO_LOCK
);

1838 if–
rc
!=
SQLITE_OK
 && 
pPagî
->
eSèã
==
PAGER_ERROR
 ){

1839 
pPagî
->
eLock
 = 
UNKNOWN_LOCK
;

1846 
	`as£π
–
pPagî
->
îrCode
 ||ÖPagî->
eSèã
!=
PAGER_ERROR
 );

1847 
pPagî
->
ch™geCou¡D⁄e
 = 0;

1848 
pPagî
->
eSèã
 = 
PAGER_OPEN
;

1856 
	`as£π
–
pPagî
->
îrCode
==
SQLITE_OK
 || !
MEMDB
 );

1857 if–
pPagî
->
îrCode
 ){

1858 if–
pPagî
->
ãmpFûe
==0 ){

1859 
	`∑gî_ª£t
(
pPagî
);

1860 
pPagî
->
ch™geCou¡D⁄e
 = 0;

1861 
pPagî
->
eSèã
 = 
PAGER_OPEN
;

1863 
pPagî
->
eSèã
 = (
	`isO≥n
’Pagî->
jfd
Ë? 
PAGER_OPEN
 : 
PAGER_READER
);

1865 if–
	`USEFETCH
(
pPagî
ËË
	`sqlôe3OsUn„tch
’Pagî->
fd
, 0, 0);

1866 
pPagî
->
îrCode
 = 
SQLITE_OK
;

1867 
	`£tGëãrMëhod
(
pPagî
);

1870 
pPagî
->
jou∫ÆOff
 = 0;

1871 
pPagî
->
jou∫ÆHdr
 = 0;

1872 
pPagî
->
£tMa°î
 = 0;

1873 
	}
}

1894 
	$∑gî_îr‹
(
Pagî
 *
pPagî
, 
rc
){

1895 
rc2
 = 
rc
 & 0xff;

1896 
	`as£π
–
rc
==
SQLITE_OK
 || !
MEMDB
 );

1897 
	`as£π
(

1898 
pPagî
->
îrCode
==
SQLITE_FULL
 ||

1899 
pPagî
->
îrCode
==
SQLITE_OK
 ||

1900 (
pPagî
->
îrCode
 & 0xff)==
SQLITE_IOERR


1902 if–
rc2
==
SQLITE_FULL
 ||Ñc2==
SQLITE_IOERR
 ){

1903 
pPagî
->
îrCode
 = 
rc
;

1904 
pPagî
->
eSèã
 = 
PAGER_ERROR
;

1905 
	`£tGëãrMëhod
(
pPagî
);

1907  
rc
;

1908 
	}
}

1910 
∑gî_åunˇã
(
Pagî
 *
pPagî
, 
Pgno
 
nPage
);

1928 
	$∑gîFlushOnCommô
(
Pagî
 *
pPagî
, 
bCommô
){

1929 if–
pPagî
->
ãmpFûe
==0 )  1;

1930 if–!
bCommô
 )  0;

1931 if–!
	`isO≥n
(
pPagî
->
fd
) )  0;

1932  (
	`sqlôe3PCachePî˚¡Dúty
(
pPagî
->
pPCache
)>=25);

1933 
	}
}

1988 
	$∑gî_íd_å™ß˘i⁄
(
Pagî
 *
pPagî
, 
hasMa°î
, 
bCommô
){

1989 
rc
 = 
SQLITE_OK
;

1990 
rc2
 = 
SQLITE_OK
;

2005 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

2006 
	`as£π
–
pPagî
->
eSèã
!=
PAGER_ERROR
 );

2007 if–
pPagî
->
eSèã
<
PAGER_WRITER_LOCKED
 &&ÖPagî->
eLock
<
RESERVED_LOCK
 ){

2008  
SQLITE_OK
;

2011 
	`ªÀa£AŒSavïoöts
(
pPagî
);

2012 
	`as£π
–
	`isO≥n
(
pPagî
->
jfd
Ë||ÖPagî->
pInJou∫Æ
==0 );

2013 if–
	`isO≥n
(
pPagî
->
jfd
) ){

2014 
	`as£π
–!
	`∑gîU£WÆ
(
pPagî
) );

2017 if–
	`sqlôe3Jou∫ÆIsInMem‹y
(
pPagî
->
jfd
) ){

2019 
	`sqlôe3OsClo£
(
pPagî
->
jfd
);

2020 }if–
pPagî
->
jou∫ÆMode
==
PAGER_JOURNALMODE_TRUNCATE
 ){

2021 if–
pPagî
->
jou∫ÆOff
==0 ){

2022 
rc
 = 
SQLITE_OK
;

2024 
rc
 = 
	`sqlôe3OsTrunˇã
(
pPagî
->
jfd
, 0);

2025 if–
rc
==
SQLITE_OK
 && 
pPagî
->
fuŒSync
 ){

2031 
rc
 = 
	`sqlôe3OsSync
(
pPagî
->
jfd
,ÖPagî->
syncFœgs
);

2034 
pPagî
->
jou∫ÆOff
 = 0;

2035 }if–
pPagî
->
jou∫ÆMode
==
PAGER_JOURNALMODE_PERSIST


2036 || (
pPagî
->
ex˛usiveMode
 &&ÖPagî->
jou∫ÆMode
!=
PAGER_JOURNALMODE_WAL
)

2038 
rc
 = 
	`zîoJou∫ÆHdr
(
pPagî
, 
hasMa°î
||pPagî->
ãmpFûe
);

2039 
pPagî
->
jou∫ÆOff
 = 0;

2046 
bDñëe
 = !
pPagî
->
ãmpFûe
;

2047 
	`as£π
–
	`sqlôe3Jou∫ÆIsInMem‹y
(
pPagî
->
jfd
)==0 );

2048 
	`as£π
–
pPagî
->
jou∫ÆMode
==
PAGER_JOURNALMODE_DELETE


2049 || 
pPagî
->
jou∫ÆMode
==
PAGER_JOURNALMODE_MEMORY


2050 || 
pPagî
->
jou∫ÆMode
==
PAGER_JOURNALMODE_WAL


2052 
	`sqlôe3OsClo£
(
pPagî
->
jfd
);

2053 if–
bDñëe
 ){

2054 
rc
 = 
	`sqlôe3OsDñëe
(
pPagî
->
pVfs
,ÖPagî->
zJou∫Æ
,ÖPagî->
exåaSync
);

2059 #ifde‡
SQLITE_CHECK_PAGES


2060 
	`sqlôe3PˇcheIãøãDúty
(
pPagî
->
pPCache
, 
∑gî_£t_∑gehash
);

2061 if–
pPagî
->
dbSize
==0 && 
	`sqlôe3PˇcheRefCou¡
’Pagî->
pPCache
)>0 ){

2062 
PgHdr
 *
p
 = 
	`sqlôe3PagîLookup
(
pPagî
, 1);

2063 if–
p
 ){

2064 
p
->
∑geHash
 = 0;

2065 
	`sqlôe3PagîUƒefNŸNuŒ
(
p
);

2070 
	`sqlôe3BôvecDe°roy
(
pPagî
->
pInJou∫Æ
);

2071 
pPagî
->
pInJou∫Æ
 = 0;

2072 
pPagî
->
nRec
 = 0;

2073 if–
rc
==
SQLITE_OK
 ){

2074 if–
MEMDB
 || 
	`∑gîFlushOnCommô
(
pPagî
, 
bCommô
) ){

2075 
	`sqlôe3PˇcheCÀ™AŒ
(
pPagî
->
pPCache
);

2077 
	`sqlôe3PˇcheCÀ¨WrôabÀ
(
pPagî
->
pPCache
);

2079 
	`sqlôe3PˇcheTrunˇã
(
pPagî
->
pPCache
,ÖPagî->
dbSize
);

2082 if–
	`∑gîU£WÆ
(
pPagî
) ){

2087 
rc2
 = 
	`sqlôe3WÆEndWrôeTønß˘i⁄
(
pPagî
->
pWÆ
);

2088 
	`as£π
–
rc2
==
SQLITE_OK
 );

2089 }if–
rc
==
SQLITE_OK
 && 
bCommô
 && 
pPagî
->
dbFûeSize
>pPagî->
dbSize
 ){

2096 
	`as£π
–
pPagî
->
eLock
==
EXCLUSIVE_LOCK
 );

2097 
rc
 = 
	`∑gî_åunˇã
(
pPagî
,ÖPagî->
dbSize
);

2100 if–
rc
==
SQLITE_OK
 && 
bCommô
 && 
	`isO≥n
(
pPagî
->
fd
) ){

2101 
rc
 = 
	`sqlôe3OsFûeC⁄åﬁ
(
pPagî
->
fd
, 
SQLITE_FCNTL_COMMIT_PHASETWO
, 0);

2102 if–
rc
==
SQLITE_NOTFOUND
 )Ñ¯
SQLITE_OK
;

2105 if–!
pPagî
->
ex˛usiveMode


2106 && (!
	`∑gîU£WÆ
(
pPagî
Ë|| 
	`sqlôe3WÆEx˛usiveMode
’Pagî->
pWÆ
, 0))

2108 
rc2
 = 
	`∑gîU∆ockDb
(
pPagî
, 
SHARED_LOCK
);

2109 
pPagî
->
ch™geCou¡D⁄e
 = 0;

2111 
pPagî
->
eSèã
 = 
PAGER_READER
;

2112 
pPagî
->
£tMa°î
 = 0;

2114  (
rc
==
SQLITE_OK
?
rc2
:rc);

2115 
	}
}

2134 
	$∑gîU∆ockAndRﬁlback
(
Pagî
 *
pPagî
){

2135 if–
pPagî
->
eSèã
!=
PAGER_ERROR
 &&ÖPagî->eSèã!=
PAGER_OPEN
 ){

2136 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

2137 if–
pPagî
->
eSèã
>=
PAGER_WRITER_LOCKED
 ){

2138 
	`sqlôe3BegöBíignMÆloc
();

2139 
	`sqlôe3PagîRﬁlback
(
pPagî
);

2140 
	`sqlôe3EndBíignMÆloc
();

2141 }if–!
pPagî
->
ex˛usiveMode
 ){

2142 
	`as£π
–
pPagî
->
eSèã
==
PAGER_READER
 );

2143 
	`∑gî_íd_å™ß˘i⁄
(
pPagî
, 0, 0);

2146 
	`∑gî_u∆ock
(
pPagî
);

2147 
	}
}

2168 
u32
 
	$∑gî_cksum
(
Pagî
 *
pPagî
, c⁄° 
u8
 *
aD©a
){

2169 
u32
 
cksum
 = 
pPagî
->
cksumInô
;

2170 
i
 = 
pPagî
->
∑geSize
-200;

2171  
i
>0 ){

2172 
cksum
 +
aD©a
[
i
];

2173 
i
 -= 200;

2175  
cksum
;

2176 
	}
}

2182 #ifde‡
SQLITE_HAS_CODEC


2183 
	$∑gîRï‹tSize
(
Pagî
 *
pPagî
){

2184 if–
pPagî
->
xCodecSizeChng
 ){

2185 
pPagî
->
	`xCodecSizeChng
’Pagî->
pCodec
,ÖPagî->
∑geSize
,

2186 ()
pPagî
->
nRe£rve
);

2188 
	}
}

2190 
	#∑gîRï‹tSize
(
X
Ë

	)

2193 #ifde‡
SQLITE_HAS_CODEC


2199 
	$sqlôe3PagîAlignRe£rve
(
Pagî
 *
pDe°
, Pagî *
pSrc
){

2200 if–
pDe°
->
nRe£rve
!=
pSrc
->nReserve ){

2201 
pDe°
->
nRe£rve
 = 
pSrc
->nReserve;

2202 
	`∑gîRï‹tSize
(
pDe°
);

2204 
	}
}

2244 
	$∑gî_∂ayback_⁄e_∑ge
(

2245 
Pagî
 *
pPagî
,

2246 
i64
 *
pOff£t
,

2247 
Bôvec
 *
pD⁄e
,

2248 
isMaöJ∫l
,

2249 
isSavï¡


2251 
rc
;

2252 
PgHdr
 *
pPg
;

2253 
Pgno
 
pgno
;

2254 
u32
 
cksum
;

2255 *
aD©a
;

2256 
sqlôe3_fûe
 *
jfd
;

2257 
isSyn˚d
;

2259 
	`as£π
–(
isMaöJ∫l
&~1)==0 );

2260 
	`as£π
–(
isSavï¡
&~1)==0 );

2261 
	`as£π
–
isMaöJ∫l
 || 
pD⁄e
 );

2262 
	`as£π
–
isSavï¡
 || 
pD⁄e
==0 );

2264 
aD©a
 = 
pPagî
->
pTmpS∑˚
;

2265 
	`as£π
–
aD©a
 );

2266 
	`as£π
–
	`∑gîU£WÆ
(
pPagî
)==0 || (!
isMaöJ∫l
 && 
isSavï¡
) );

2274 
	`as£π
–
pPagî
->
eSèã
>=
PAGER_WRITER_CACHEMOD


2275 || (
pPagî
->
eSèã
==
PAGER_OPEN
 &&ÖPagî->
eLock
==
EXCLUSIVE_LOCK
)

2277 
	`as£π
–
pPagî
->
eSèã
>=
PAGER_WRITER_CACHEMOD
 || 
isMaöJ∫l
 );

2282 
jfd
 = 
isMaöJ∫l
 ? 
pPagî
->jfd :ÖPagî->
sjfd
;

2283 
rc
 = 
	`ªad32bôs
(
jfd
, *
pOff£t
, &
pgno
);

2284 if–
rc
!=
SQLITE_OK
 ) Ñc;

2285 
rc
 = 
	`sqlôe3OsRód
(
jfd
, (
u8
*)
aD©a
, 
pPagî
->
∑geSize
, (*
pOff£t
)+4);

2286 if–
rc
!=
SQLITE_OK
 ) Ñc;

2287 *
pOff£t
 +
pPagî
->
∑geSize
 + 4 + 
isMaöJ∫l
*4;

2294 if–
pgno
==0 ||Ögno==
	`PAGER_MJ_PGNO
(
pPagî
) ){

2295 
	`as£π
–!
isSavï¡
 );

2296  
SQLITE_DONE
;

2298 if–
pgno
>(
Pgno
)
pPagî
->
dbSize
 || 
	`sqlôe3BôvecTe°
(
pD⁄e
,Ögno) ){

2299  
SQLITE_OK
;

2301 if–
isMaöJ∫l
 ){

2302 
rc
 = 
	`ªad32bôs
(
jfd
, (*
pOff£t
)-4, &
cksum
);

2303 if–
rc
 ) Ñc;

2304 if–!
isSavï¡
 && 
	`∑gî_cksum
(
pPagî
, (
u8
*)
aD©a
)!=
cksum
 ){

2305  
SQLITE_DONE
;

2312 if–
pD⁄e
 && (
rc
 = 
	`sqlôe3BôvecSë
’D⁄e, 
pgno
))!=
SQLITE_OK
 ){

2313  
rc
;

2318 if–
pgno
==1 && 
pPagî
->
nRe£rve
!=((
u8
*)
aD©a
)[20] ){

2319 
pPagî
->
nRe£rve
 = ((
u8
*)
aD©a
)[20];

2320 
	`∑gîRï‹tSize
(
pPagî
);

2358 if–
	`∑gîU£WÆ
(
pPagî
) ){

2359 
pPg
 = 0;

2361 
pPg
 = 
	`sqlôe3PagîLookup
(
pPagî
, 
pgno
);

2363 
	`as£π
–
pPg
 || !
MEMDB
 );

2364 
	`as£π
–
pPagî
->
eSèã
!=
PAGER_OPEN
 || 
pPg
==0 ||ÖPagî->
ãmpFûe
 );

2365 
	`PAGERTRACE
(("PLAYBACK %dÖage %d hash(%08x) %s\n",

2366 
	`PAGERID
(
pPagî
), 
pgno
, 
	`∑gî_d©ahash
’Pagî->
∑geSize
, (
u8
*)
aD©a
),

2367 (
isMaöJ∫l
?"main-journal":"sub-journal")

2369 if–
isMaöJ∫l
 ){

2370 
isSyn˚d
 = 
pPagî
->
noSync
 || (*
pOff£t
 <pPagî->
jou∫ÆHdr
);

2372 
isSyn˚d
 = (
pPg
==0 || 0==’Pg->
Êags
 & 
PGHDR_NEED_SYNC
));

2374 if–
	`isO≥n
(
pPagî
->
fd
)

2375 && (
pPagî
->
eSèã
>=
PAGER_WRITER_DBMOD
 ||ÖPagî->eSèã==
PAGER_OPEN
)

2376 && 
isSyn˚d


2378 
i64
 
of°
 = (
pgno
-1)*(i64)
pPagî
->
∑geSize
;

2379 
	`ã°ˇ£
–!
isSavï¡
 && 
pPg
!=0 && (pPg->
Êags
&
PGHDR_NEED_SYNC
)!=0 );

2380 
	`as£π
–!
	`∑gîU£WÆ
(
pPagî
) );

2381 
rc
 = 
	`sqlôe3OsWrôe
(
pPagî
->
fd
, (
u8
 *)
aD©a
,ÖPagî->
∑geSize
, 
of°
);

2382 if–
pgno
>
pPagî
->
dbFûeSize
 ){

2383 
pPagî
->
dbFûeSize
 = 
pgno
;

2385 if–
pPagî
->
pBackup
 ){

2386 
	`CODEC1
(
pPagî
, 
aD©a
, 
pgno
, 3, 
rc
=
SQLITE_NOMEM_BKPT
);

2387 
	`sqlôe3BackupUpd©e
(
pPagî
->
pBackup
, 
pgno
, (
u8
*)
aD©a
);

2388 
	`CODEC2
(
pPagî
, 
aD©a
, 
pgno
, 7, 
rc
=
SQLITE_NOMEM_BKPT
,áData);

2390 }if–!
isMaöJ∫l
 && 
pPg
==0 ){

2407 
	`as£π
–
isSavï¡
 );

2408 
	`as£π
–(
pPagî
->
doNŸSpûl
 & 
SPILLFLAG_ROLLBACK
)==0 );

2409 
pPagî
->
doNŸSpûl
 |
SPILLFLAG_ROLLBACK
;

2410 
rc
 = 
	`sqlôe3PagîGë
(
pPagî
, 
pgno
, &
pPg
, 1);

2411 
	`as£π
–(
pPagî
->
doNŸSpûl
 & 
SPILLFLAG_ROLLBACK
)!=0 );

2412 
pPagî
->
doNŸSpûl
 &~
SPILLFLAG_ROLLBACK
;

2413 if–
rc
!=
SQLITE_OK
 ) Ñc;

2414 
	`sqlôe3PˇcheMakeDúty
(
pPg
);

2416 if–
pPg
 ){

2423 *
pD©a
;

2424 
pD©a
 = 
pPg
->pData;

2425 
	`mem˝y
(
pD©a
, (
u8
*)
aD©a
, 
pPagî
->
∑geSize
);

2426 
pPagî
->
	`xReöôî
(
pPg
);

2431 
	`∑gî_£t_∑gehash
(
pPg
);

2435 if–
pgno
==1 ){

2436 
	`mem˝y
(&
pPagî
->
dbFûeVîs
, &((
u8
*)
pD©a
)[24],(pPager->dbFileVers));

2440 
	`CODEC1
(
pPagî
, 
pD©a
, 
pPg
->
pgno
, 3, 
rc
=
SQLITE_NOMEM_BKPT
);

2441 
	`sqlôe3PˇcheRñó£
(
pPg
);

2443  
rc
;

2444 
	}
}

2489 
	$∑gî_dñma°î
(
Pagî
 *
pPagî
, c⁄° *
zMa°î
){

2490 
sqlôe3_vfs
 *
pVfs
 = 
pPagî
->pVfs;

2491 
rc
;

2492 
sqlôe3_fûe
 *
pMa°î
;

2493 
sqlôe3_fûe
 *
pJou∫Æ
;

2494 *
zMa°îJou∫Æ
 = 0;

2495 
i64
 
nMa°îJou∫Æ
;

2496 *
zJou∫Æ
;

2497 *
zMa°îPå
;

2498 
nMa°îPå
;

2503 
pMa°î
 = (
sqlôe3_fûe
 *)
	`sqlôe3MÆlocZîo
(
pVfs
->
szOsFûe
 * 2);

2504 
pJou∫Æ
 = (
sqlôe3_fûe
 *)(((
u8
 *)
pMa°î
Ë+ 
pVfs
->
szOsFûe
);

2505 if–!
pMa°î
 ){

2506 
rc
 = 
SQLITE_NOMEM_BKPT
;

2508 c⁄° 
Êags
 = (
SQLITE_OPEN_READONLY
|
SQLITE_OPEN_MASTER_JOURNAL
);

2509 
rc
 = 
	`sqlôe3OsO≥n
(
pVfs
, 
zMa°î
, 
pMa°î
, 
Êags
, 0);

2511 if–
rc
!=
SQLITE_OK
 ) 
dñma°î_out
;

2518 
rc
 = 
	`sqlôe3OsFûeSize
(
pMa°î
, &
nMa°îJou∫Æ
);

2519 if–
rc
!=
SQLITE_OK
 ) 
dñma°î_out
;

2520 
nMa°îPå
 = 
pVfs
->
mxP©h«me
+1;

2521 
zMa°îJou∫Æ
 = 
	`sqlôe3MÆloc
(
nMa°îJou∫Æ
 + 
nMa°îPå
 + 1);

2522 if–!
zMa°îJou∫Æ
 ){

2523 
rc
 = 
SQLITE_NOMEM_BKPT
;

2524 
dñma°î_out
;

2526 
zMa°îPå
 = &
zMa°îJou∫Æ
[
nMa°îJou∫Æ
+1];

2527 
rc
 = 
	`sqlôe3OsRód
(
pMa°î
, 
zMa°îJou∫Æ
, ()
nMa°îJou∫Æ
, 0);

2528 if–
rc
!=
SQLITE_OK
 ) 
dñma°î_out
;

2529 
zMa°îJou∫Æ
[
nMa°îJou∫Æ
] = 0;

2531 
zJou∫Æ
 = 
zMa°îJou∫Æ
;

2532  (
zJou∫Æ
-
zMa°îJou∫Æ
)<
nMa°îJou∫Æ
 ){

2533 
exi°s
;

2534 
rc
 = 
	`sqlôe3OsAc˚ss
(
pVfs
, 
zJou∫Æ
, 
SQLITE_ACCESS_EXISTS
, &
exi°s
);

2535 if–
rc
!=
SQLITE_OK
 ){

2536 
dñma°î_out
;

2538 if–
exi°s
 ){

2543 
c
;

2544 
Êags
 = (
SQLITE_OPEN_READONLY
|
SQLITE_OPEN_MAIN_JOURNAL
);

2545 
rc
 = 
	`sqlôe3OsO≥n
(
pVfs
, 
zJou∫Æ
, 
pJou∫Æ
, 
Êags
, 0);

2546 if–
rc
!=
SQLITE_OK
 ){

2547 
dñma°î_out
;

2550 
rc
 = 
	`ªadMa°îJou∫Æ
(
pJou∫Æ
, 
zMa°îPå
, 
nMa°îPå
);

2551 
	`sqlôe3OsClo£
(
pJou∫Æ
);

2552 if–
rc
!=
SQLITE_OK
 ){

2553 
dñma°î_out
;

2556 
c
 = 
zMa°îPå
[0]!=0 && 
	`°rcmp
(zMa°îPå, 
zMa°î
)==0;

2557 if–
c
 ){

2559 
dñma°î_out
;

2562 
zJou∫Æ
 +(
	`sqlôe3SåÀn30
(zJournal)+1);

2565 
	`sqlôe3OsClo£
(
pMa°î
);

2566 
rc
 = 
	`sqlôe3OsDñëe
(
pVfs
, 
zMa°î
, 0);

2568 
dñma°î_out
:

2569 
	`sqlôe3_‰ì
(
zMa°îJou∫Æ
);

2570 if–
pMa°î
 ){

2571 
	`sqlôe3OsClo£
(
pMa°î
);

2572 
	`as£π
–!
	`isO≥n
(
pJou∫Æ
) );

2573 
	`sqlôe3_‰ì
(
pMa°î
);

2575  
rc
;

2576 
	}
}

2599 
	$∑gî_åunˇã
(
Pagî
 *
pPagî
, 
Pgno
 
nPage
){

2600 
rc
 = 
SQLITE_OK
;

2601 
	`as£π
–
pPagî
->
eSèã
!=
PAGER_ERROR
 );

2602 
	`as£π
–
pPagî
->
eSèã
!=
PAGER_READER
 );

2604 if–
	`isO≥n
(
pPagî
->
fd
)

2605 && (
pPagî
->
eSèã
>=
PAGER_WRITER_DBMOD
 ||ÖPagî->eSèã==
PAGER_OPEN
)

2607 
i64
 
cuºítSize
, 
√wSize
;

2608 
szPage
 = 
pPagî
->
∑geSize
;

2609 
	`as£π
–
pPagî
->
eLock
==
EXCLUSIVE_LOCK
 );

2611 
rc
 = 
	`sqlôe3OsFûeSize
(
pPagî
->
fd
, &
cuºítSize
);

2612 
√wSize
 = 
szPage
*(
i64
)
nPage
;

2613 if–
rc
==
SQLITE_OK
 && 
cuºítSize
!=
√wSize
 ){

2614 if–
cuºítSize
>
√wSize
 ){

2615 
rc
 = 
	`sqlôe3OsTrunˇã
(
pPagî
->
fd
, 
√wSize
);

2616 }if–(
cuºítSize
+
szPage
)<=
√wSize
 ){

2617 *
pTmp
 = 
pPagî
->
pTmpS∑˚
;

2618 
	`mem£t
(
pTmp
, 0, 
szPage
);

2619 
	`ã°ˇ£
–(
√wSize
-
szPage
Ë=
cuºítSize
 );

2620 
	`ã°ˇ£
–(
√wSize
-
szPage
Ë> 
cuºítSize
 );

2621 
rc
 = 
	`sqlôe3OsWrôe
(
pPagî
->
fd
, 
pTmp
, 
szPage
, 
√wSize
-szPage);

2623 if–
rc
==
SQLITE_OK
 ){

2624 
pPagî
->
dbFûeSize
 = 
nPage
;

2628  
rc
;

2629 
	}
}

2635 
	$sqlôe3Se˘‹Size
(
sqlôe3_fûe
 *
pFûe
){

2636 
iRë
 = 
	`sqlôe3OsSe˘‹Size
(
pFûe
);

2637 if–
iRë
<32 ){

2638 
iRë
 = 512;

2639 }if–
iRë
>
MAX_SECTOR_SIZE
 ){

2640 
	`as£π
–
MAX_SECTOR_SIZE
>=512 );

2641 
iRë
 = 
MAX_SECTOR_SIZE
;

2643  
iRë
;

2644 
	}
}

2669 
	$£tSe˘‹Size
(
Pagî
 *
pPagî
){

2670 
	`as£π
–
	`isO≥n
(
pPagî
->
fd
Ë||ÖPagî->
ãmpFûe
 );

2672 if–
pPagî
->
ãmpFûe


2673 || (
	`sqlôe3OsDevi˚Ch¨a˘îi°ics
(
pPagî
->
fd
) &

2674 
SQLITE_IOCAP_POWERSAFE_OVERWRITE
)!=0

2679 
pPagî
->
£˘‹Size
 = 512;

2681 
pPagî
->
£˘‹Size
 = 
	`sqlôe3Se˘‹Size
’Pagî->
fd
);

2683 
	}
}

2742 
	$∑gî_∂ayback
(
Pagî
 *
pPagî
, 
isHŸ
){

2743 
sqlôe3_vfs
 *
pVfs
 = 
pPagî
->pVfs;

2744 
i64
 
szJ
;

2745 
u32
 
nRec
;

2746 
u32
 
u
;

2747 
Pgno
 
mxPg
 = 0;

2748 
rc
;

2749 
ªs
 = 1;

2750 *
zMa°î
 = 0;

2751 
√edPagîRe£t
;

2752 
nPœyback
 = 0;

2757 
	`as£π
–
	`isO≥n
(
pPagî
->
jfd
) );

2758 
rc
 = 
	`sqlôe3OsFûeSize
(
pPagî
->
jfd
, &
szJ
);

2759 if–
rc
!=
SQLITE_OK
 ){

2760 
íd_∂ayback
;

2774 
zMa°î
 = 
pPagî
->
pTmpS∑˚
;

2775 
rc
 = 
	`ªadMa°îJou∫Æ
(
pPagî
->
jfd
, 
zMa°î
,ÖPagî->
pVfs
->
mxP©h«me
+1);

2776 if–
rc
==
SQLITE_OK
 && 
zMa°î
[0] ){

2777 
rc
 = 
	`sqlôe3OsAc˚ss
(
pVfs
, 
zMa°î
, 
SQLITE_ACCESS_EXISTS
, &
ªs
);

2779 
zMa°î
 = 0;

2780 if–
rc
!=
SQLITE_OK
 || !
ªs
 ){

2781 
íd_∂ayback
;

2783 
pPagî
->
jou∫ÆOff
 = 0;

2784 
√edPagîRe£t
 = 
isHŸ
;

2796 
rc
 = 
	`ªadJou∫ÆHdr
(
pPagî
, 
isHŸ
, 
szJ
, &
nRec
, &
mxPg
);

2797 if–
rc
!=
SQLITE_OK
 ){

2798 if–
rc
==
SQLITE_DONE
 ){

2799 
rc
 = 
SQLITE_OK
;

2801 
íd_∂ayback
;

2809 if–
nRec
==0xffffffff ){

2810 
	`as£π
–
pPagî
->
jou∫ÆOff
==
	`JOURNAL_HDR_SZ
(pPager) );

2811 
nRec
 = ()((
szJ
 - 
	`JOURNAL_HDR_SZ
(
pPagî
))/
	`JOURNAL_PG_SZ
(pPager));

2828 if–
nRec
==0 && !
isHŸ
 &&

2829 
pPagî
->
jou∫ÆHdr
+
	`JOURNAL_HDR_SZ
’Pagî)=ıPagî->
jou∫ÆOff
 ){

2830 
nRec
 = ()((
szJ
 - 
pPagî
->
jou∫ÆOff
Ë/ 
	`JOURNAL_PG_SZ
(pPager));

2836 if–
pPagî
->
jou∫ÆOff
==
	`JOURNAL_HDR_SZ
(pPager) ){

2837 
rc
 = 
	`∑gî_åunˇã
(
pPagî
, 
mxPg
);

2838 if–
rc
!=
SQLITE_OK
 ){

2839 
íd_∂ayback
;

2841 
pPagî
->
dbSize
 = 
mxPg
;

2847 
u
=0; u<
nRec
; u++){

2848 if–
√edPagîRe£t
 ){

2849 
	`∑gî_ª£t
(
pPagî
);

2850 
√edPagîRe£t
 = 0;

2852 
rc
 = 
	`∑gî_∂ayback_⁄e_∑ge
(
pPagî
,&pPagî->
jou∫ÆOff
,0,1,0);

2853 if–
rc
==
SQLITE_OK
 ){

2854 
nPœyback
++;

2856 if–
rc
==
SQLITE_DONE
 ){

2857 
pPagî
->
jou∫ÆOff
 = 
szJ
;

2859 }if–
rc
==
SQLITE_IOERR_SHORT_READ
 ){

2865 
rc
 = 
SQLITE_OK
;

2866 
íd_∂ayback
;

2873 
íd_∂ayback
;

2879 
	`as£π
( 0 );

2881 
íd_∂ayback
:

2887 #ifde‡
SQLITE_DEBUG


2888 if–
pPagî
->
fd
->
pMëhods
 ){

2889 
	`sqlôe3OsFûeC⁄åﬁHöt
(
pPagî
->
fd
,
SQLITE_FCNTL_DB_UNCHANGED
,0);

2902 
pPagî
->
ch™geCou¡D⁄e
 =ÖPagî->
ãmpFûe
;

2904 if–
rc
==
SQLITE_OK
 ){

2905 
zMa°î
 = 
pPagî
->
pTmpS∑˚
;

2906 
rc
 = 
	`ªadMa°îJou∫Æ
(
pPagî
->
jfd
, 
zMa°î
,ÖPagî->
pVfs
->
mxP©h«me
+1);

2907 
	`ã°ˇ£
–
rc
!=
SQLITE_OK
 );

2909 if–
rc
==
SQLITE_OK


2910 && (
pPagî
->
eSèã
>=
PAGER_WRITER_DBMOD
 ||ÖPagî->eSèã==
PAGER_OPEN
)

2912 
rc
 = 
	`sqlôe3PagîSync
(
pPagî
, 0);

2914 if–
rc
==
SQLITE_OK
 ){

2915 
rc
 = 
	`∑gî_íd_å™ß˘i⁄
(
pPagî
, 
zMa°î
[0]!='\0', 0);

2916 
	`ã°ˇ£
–
rc
!=
SQLITE_OK
 );

2918 if–
rc
==
SQLITE_OK
 && 
zMa°î
[0] && 
ªs
 ){

2922 
rc
 = 
	`∑gî_dñma°î
(
pPagî
, 
zMa°î
);

2923 
	`ã°ˇ£
–
rc
!=
SQLITE_OK
 );

2925 if–
isHŸ
 && 
nPœyback
 ){

2926 
	`sqlôe3_log
(
SQLITE_NOTICE_RECOVER_ROLLBACK
, "recovered %dÖages from %s",

2927 
nPœyback
, 
pPagî
->
zJou∫Æ
);

2934 
	`£tSe˘‹Size
(
pPagî
);

2935  
rc
;

2936 
	}
}

2950 
	$ªadDbPage
(
PgHdr
 *
pPg
, 
u32
 
iFøme
){

2951 
Pagî
 *
pPagî
 = 
pPg
->pPager;

2952 
Pgno
 
pgno
 = 
pPg
->pgno;

2953 
rc
 = 
SQLITE_OK
;

2954 
pgsz
 = 
pPagî
->
∑geSize
;

2956 
	`as£π
–
pPagî
->
eSèã
>=
PAGER_READER
 && !
MEMDB
 );

2957 
	`as£π
–
	`isO≥n
(
pPagî
->
fd
) );

2959 #i‚de‡
SQLITE_OMIT_WAL


2960 if–
iFøme
 ){

2962 
rc
 = 
	`sqlôe3WÆRódFøme
(
pPagî
->
pWÆ
, 
iFøme
, 
pgsz
, 
pPg
->
pD©a
);

2966 
i64
 
iOff£t
 = (
pgno
-1)*(i64)
pPagî
->
∑geSize
;

2967 
rc
 = 
	`sqlôe3OsRód
(
pPagî
->
fd
, 
pPg
->
pD©a
, 
pgsz
, 
iOff£t
);

2968 if–
rc
==
SQLITE_IOERR_SHORT_READ
 ){

2969 
rc
 = 
SQLITE_OK
;

2973 if–
pgno
==1 ){

2974 if–
rc
 ){

2987 
	`mem£t
(
pPagî
->
dbFûeVîs
, 0xff, (pPager->dbFileVers));

2989 
u8
 *
dbFûeVîs
 = &((u8*)
pPg
->
pD©a
)[24];

2990 
	`mem˝y
(&
pPagî
->
dbFûeVîs
, dbFileVers, (pPager->dbFileVers));

2993 
	`CODEC1
(
pPagî
, 
pPg
->
pD©a
, 
pgno
, 3, 
rc
 = 
SQLITE_NOMEM_BKPT
);

2995 
	`PAGER_INCR
(
sqlôe3_∑gî_ªaddb_cou¡
);

2996 
	`PAGER_INCR
(
pPagî
->
nRód
);

2997 
	`IOTRACE
(("PGIN %∞%d\n", 
pPagî
, 
pgno
));

2998 
	`PAGERTRACE
(("FETCH %dÖage %d hash(%08x)\n",

2999 
	`PAGERID
(
pPagî
), 
pgno
, 
	`∑gî_∑gehash
(
pPg
)));

3001  
rc
;

3002 
	}
}

3012 
	$∑gî_wrôe_ch™gecou¡î
(
PgHdr
 *
pPg
){

3013 
u32
 
ch™ge_cou¡î
;

3016 
ch™ge_cou¡î
 = 
	`sqlôe3Gë4byã
((
u8
*)
pPg
->
pPagî
->
dbFûeVîs
)+1;

3017 
	`put32bôs
(((*)
pPg
->
pD©a
)+24, 
ch™ge_cou¡î
);

3022 
	`put32bôs
(((*)
pPg
->
pD©a
)+92, 
ch™ge_cou¡î
);

3023 
	`put32bôs
(((*)
pPg
->
pD©a
)+96, 
SQLITE_VERSION_NUMBER
);

3024 
	}
}

3026 #i‚de‡
SQLITE_OMIT_WAL


3039 
	$∑gîUndoCÆlback
(*
pCtx
, 
Pgno
 
iPg
){

3040 
rc
 = 
SQLITE_OK
;

3041 
Pagî
 *
pPagî
 = (Pagî *)
pCtx
;

3042 
PgHdr
 *
pPg
;

3044 
	`as£π
–
	`∑gîU£WÆ
(
pPagî
) );

3045 
pPg
 = 
	`sqlôe3PagîLookup
(
pPagî
, 
iPg
);

3046 if–
pPg
 ){

3047 if–
	`sqlôe3PˇchePageRefcou¡
(
pPg
)==1 ){

3048 
	`sqlôe3PˇcheDr›
(
pPg
);

3050 
u32
 
iFøme
 = 0;

3051 
rc
 = 
	`sqlôe3WÆFödFøme
(
pPagî
->
pWÆ
, 
pPg
->
pgno
, &
iFøme
);

3052 if–
rc
==
SQLITE_OK
 ){

3053 
rc
 = 
	`ªadDbPage
(
pPg
, 
iFøme
);

3055 if–
rc
==
SQLITE_OK
 ){

3056 
pPagî
->
	`xReöôî
(
pPg
);

3058 
	`sqlôe3PagîUƒefNŸNuŒ
(
pPg
);

3070 
	`sqlôe3BackupRe°¨t
(
pPagî
->
pBackup
);

3072  
rc
;

3073 
	}
}

3078 
	$∑gîRﬁlbackWÆ
(
Pagî
 *
pPagî
){

3079 
rc
;

3080 
PgHdr
 *
pLi°
;

3089 
pPagî
->
dbSize
 =ÖPagî->
dbOrigSize
;

3090 
rc
 = 
	`sqlôe3WÆUndo
(
pPagî
->
pWÆ
, 
∑gîUndoCÆlback
, (*)pPager);

3091 
pLi°
 = 
	`sqlôe3PˇcheDútyLi°
(
pPagî
->
pPCache
);

3092  
pLi°
 && 
rc
==
SQLITE_OK
 ){

3093 
PgHdr
 *
pNext
 = 
pLi°
->
pDúty
;

3094 
rc
 = 
	`∑gîUndoCÆlback
((*)
pPagî
, 
pLi°
->
pgno
);

3095 
pLi°
 = 
pNext
;

3098  
rc
;

3099 
	}
}

3110 
	$∑gîWÆFømes
(

3111 
Pagî
 *
pPagî
,

3112 
PgHdr
 *
pLi°
,

3113 
Pgno
 
nTrunˇã
,

3114 
isCommô


3116 
rc
;

3117 
nLi°
;

3118 
PgHdr
 *
p
;

3120 
	`as£π
–
pPagî
->
pWÆ
 );

3121 
	`as£π
–
pLi°
 );

3122 #ifde‡
SQLITE_DEBUG


3124 
p
=
pLi°
;Ö &&Ö->
pDúty
;Ö=p->pDirty){

3125 
	`as£π
–
p
->
pgno
 <Ö->
pDúty
->pgno );

3129 
	`as£π
–
pLi°
->
pDúty
==0 || 
isCommô
 );

3130 if–
isCommô
 ){

3135 
PgHdr
 **
µNext
 = &
pLi°
;

3136 
nLi°
 = 0;

3137 
p
=
pLi°
; (*
µNext
 =Ö)!=0;Öı->
pDúty
){

3138 if–
p
->
pgno
<=
nTrunˇã
 ){

3139 
µNext
 = &
p
->
pDúty
;

3140 
nLi°
++;

3143 
	`as£π
–
pLi°
 );

3145 
nLi°
 = 1;

3147 
pPagî
->
aSèt
[
PAGER_STAT_WRITE
] +
nLi°
;

3149 if–
pLi°
->
pgno
==1 ) 
	`∑gî_wrôe_ch™gecou¡î
(pList);

3150 
rc
 = 
	`sqlôe3WÆFømes
(
pPagî
->
pWÆ
,

3151 
pPagî
->
∑geSize
, 
pLi°
, 
nTrunˇã
, 
isCommô
,ÖPagî->
wÆSyncFœgs


3153 if–
rc
==
SQLITE_OK
 && 
pPagî
->
pBackup
 ){

3154 
p
=
pLi°
;Ö;Öı->
pDúty
){

3155 
	`sqlôe3BackupUpd©e
(
pPagî
->
pBackup
, 
p
->
pgno
, (
u8
 *Ì->
pD©a
);

3159 #ifde‡
SQLITE_CHECK_PAGES


3160 
pLi°
 = 
	`sqlôe3PˇcheDútyLi°
(
pPagî
->
pPCache
);

3161 
p
=
pLi°
;Ö;Öı->
pDúty
){

3162 
	`∑gî_£t_∑gehash
(
p
);

3166  
rc
;

3167 
	}
}

3177 
	$∑gîBegöRódTønß˘i⁄
(
Pagî
 *
pPagî
){

3178 
rc
;

3179 
ch™ged
 = 0;

3181 
	`as£π
–
	`∑gîU£WÆ
(
pPagî
) );

3182 
	`as£π
–
pPagî
->
eSèã
==
PAGER_OPEN
 ||ÖPagî->eSèã==
PAGER_READER
 );

3189 
	`sqlôe3WÆEndRódTønß˘i⁄
(
pPagî
->
pWÆ
);

3191 
rc
 = 
	`sqlôe3WÆBegöRódTønß˘i⁄
(
pPagî
->
pWÆ
, &
ch™ged
);

3192 if–
rc
!=
SQLITE_OK
 || 
ch™ged
 ){

3193 
	`∑gî_ª£t
(
pPagî
);

3194 if–
	`USEFETCH
(
pPagî
ËË
	`sqlôe3OsUn„tch
’Pagî->
fd
, 0, 0);

3197  
rc
;

3198 
	}
}

3210 
	$∑gîPagecou¡
(
Pagî
 *
pPagî
, 
Pgno
 *
≤Page
){

3211 
Pgno
 
nPage
;

3219 
	`as£π
–
pPagî
->
eSèã
==
PAGER_OPEN
 );

3220 
	`as£π
–
pPagî
->
eLock
>=
SHARED_LOCK
 );

3221 
	`as£π
–
	`isO≥n
(
pPagî
->
fd
) );

3222 
	`as£π
–
pPagî
->
ãmpFûe
==0 );

3223 
nPage
 = 
	`sqlôe3WÆDbsize
(
pPagî
->
pWÆ
);

3230 if–
nPage
==0 && 
	`ALWAYS
(
	`isO≥n
(
pPagî
->
fd
)) ){

3231 
i64
 
n
 = 0;

3232 
rc
 = 
	`sqlôe3OsFûeSize
(
pPagî
->
fd
, &
n
);

3233 if–
rc
!=
SQLITE_OK
 ){

3234  
rc
;

3236 
nPage
 = (
Pgno
)((
n
+
pPagî
->
∑geSize
-1) /ÖPager->pageSize);

3243 if–
nPage
>
pPagî
->
mxPgno
 ){

3244 
pPagî
->
mxPgno
 = (
Pgno
)
nPage
;

3247 *
≤Page
 = 
nPage
;

3248  
SQLITE_OK
;

3249 
	}
}

3251 #i‚de‡
SQLITE_OMIT_WAL


3270 
	$∑gîO≥nWÆIfPª£¡
(
Pagî
 *
pPagî
){

3271 
rc
 = 
SQLITE_OK
;

3272 
	`as£π
–
pPagî
->
eSèã
==
PAGER_OPEN
 );

3273 
	`as£π
–
pPagî
->
eLock
>=
SHARED_LOCK
 );

3275 if–!
pPagî
->
ãmpFûe
 ){

3276 
isWÆ
;

3277 
Pgno
 
nPage
;

3279 
rc
 = 
	`∑gîPagecou¡
(
pPagî
, &
nPage
);

3280 if–
rc
 ) Ñc;

3281 if–
nPage
==0 ){

3282 
rc
 = 
	`sqlôe3OsDñëe
(
pPagî
->
pVfs
,ÖPagî->
zWÆ
, 0);

3283 if–
rc
==
SQLITE_IOERR_DELETE_NOENT
 )Ñ¯
SQLITE_OK
;

3284 
isWÆ
 = 0;

3286 
rc
 = 
	`sqlôe3OsAc˚ss
(

3287 
pPagî
->
pVfs
,ÖPagî->
zWÆ
, 
SQLITE_ACCESS_EXISTS
, &
isWÆ


3290 if–
rc
==
SQLITE_OK
 ){

3291 if–
isWÆ
 ){

3292 
	`ã°ˇ£
–
	`sqlôe3PˇchePagecou¡
(
pPagî
->
pPCache
)==0 );

3293 
rc
 = 
	`sqlôe3PagîO≥nWÆ
(
pPagî
, 0);

3294 }if–
pPagî
->
jou∫ÆMode
==
PAGER_JOURNALMODE_WAL
 ){

3295 
pPagî
->
jou∫ÆMode
 = 
PAGER_JOURNALMODE_DELETE
;

3299  
rc
;

3300 
	}
}

3339 
	$∑gîPœybackSavïoöt
(
Pagî
 *
pPagî
, 
PagîSavïoöt
 *
pSavïoöt
){

3340 
i64
 
szJ
;

3341 
i64
 
iHdrOff
;

3342 
rc
 = 
SQLITE_OK
;

3343 
Bôvec
 *
pD⁄e
 = 0;

3345 
	`as£π
–
pPagî
->
eSèã
!=
PAGER_ERROR
 );

3346 
	`as£π
–
pPagî
->
eSèã
>=
PAGER_WRITER_LOCKED
 );

3349 if–
pSavïoöt
 ){

3350 
pD⁄e
 = 
	`sqlôe3BôvecCª©e
(
pSavïoöt
->
nOrig
);

3351 if–!
pD⁄e
 ){

3352  
SQLITE_NOMEM_BKPT
;

3359 
pPagî
->
dbSize
 = 
pSavïoöt
 ?ÖSavïoöt->
nOrig
 :ÖPagî->
dbOrigSize
;

3360 
pPagî
->
ch™geCou¡D⁄e
 =ÖPagî->
ãmpFûe
;

3362 if–!
pSavïoöt
 && 
	`∑gîU£WÆ
(
pPagî
) ){

3363  
	`∑gîRﬁlbackWÆ
(
pPagî
);

3371 
szJ
 = 
pPagî
->
jou∫ÆOff
;

3372 
	`as£π
–
	`∑gîU£WÆ
(
pPagî
)==0 || 
szJ
==0 );

3381 if–
pSavïoöt
 && !
	`∑gîU£WÆ
(
pPagî
) ){

3382 
iHdrOff
 = 
pSavïoöt
->
iHdrOff£t
 ?ÖSavïoöt->iHdrOff£à: 
szJ
;

3383 
pPagî
->
jou∫ÆOff
 = 
pSavïoöt
->
iOff£t
;

3384  
rc
==
SQLITE_OK
 && 
pPagî
->
jou∫ÆOff
<
iHdrOff
 ){

3385 
rc
 = 
	`∑gî_∂ayback_⁄e_∑ge
(
pPagî
, &pPagî->
jou∫ÆOff
, 
pD⁄e
, 1, 1);

3387 
	`as£π
–
rc
!=
SQLITE_DONE
 );

3389 
pPagî
->
jou∫ÆOff
 = 0;

3397  
rc
==
SQLITE_OK
 && 
pPagî
->
jou∫ÆOff
<
szJ
 ){

3398 
u32
 
ii
;

3399 
u32
 
nJRec
 = 0;

3400 
u32
 
dummy
;

3401 
rc
 = 
	`ªadJou∫ÆHdr
(
pPagî
, 0, 
szJ
, &
nJRec
, &
dummy
);

3402 
	`as£π
–
rc
!=
SQLITE_DONE
 );

3409 if–
nJRec
==0

3410 && 
pPagî
->
jou∫ÆHdr
+
	`JOURNAL_HDR_SZ
’Pagî)=ıPagî->
jou∫ÆOff


3412 
nJRec
 = (
u32
)((
szJ
 - 
pPagî
->
jou∫ÆOff
)/
	`JOURNAL_PG_SZ
(pPager));

3414 
ii
=0; 
rc
==
SQLITE_OK
 && ii<
nJRec
 && 
pPagî
->
jou∫ÆOff
<
szJ
; ii++){

3415 
rc
 = 
	`∑gî_∂ayback_⁄e_∑ge
(
pPagî
, &pPagî->
jou∫ÆOff
, 
pD⁄e
, 1, 1);

3417 
	`as£π
–
rc
!=
SQLITE_DONE
 );

3419 
	`as£π
–
rc
!=
SQLITE_OK
 || 
pPagî
->
jou∫ÆOff
>=
szJ
 );

3425 if–
pSavïoöt
 ){

3426 
u32
 
ii
;

3427 
i64
 
off£t
 = (i64)
pSavïoöt
->
iSubRec
*(4+
pPagî
->
∑geSize
);

3429 if–
	`∑gîU£WÆ
(
pPagî
) ){

3430 
rc
 = 
	`sqlôe3WÆSavïoötUndo
(
pPagî
->
pWÆ
, 
pSavïoöt
->
aWÆD©a
);

3432 
ii
=
pSavïoöt
->
iSubRec
; 
rc
==
SQLITE_OK
 && ii<
pPagî
->
nSubRec
; ii++){

3433 
	`as£π
–
off£t
==(
i64
)
ii
*(4+
pPagî
->
∑geSize
) );

3434 
rc
 = 
	`∑gî_∂ayback_⁄e_∑ge
(
pPagî
, &
off£t
, 
pD⁄e
, 0, 1);

3436 
	`as£π
–
rc
!=
SQLITE_DONE
 );

3439 
	`sqlôe3BôvecDe°roy
(
pD⁄e
);

3440 if–
rc
==
SQLITE_OK
 ){

3441 
pPagî
->
jou∫ÆOff
 = 
szJ
;

3444  
rc
;

3445 
	}
}

3451 
	$sqlôe3PagîSëCachesize
(
Pagî
 *
pPagî
, 
mxPage
){

3452 
	`sqlôe3PˇcheSëCachesize
(
pPagî
->
pPCache
, 
mxPage
);

3453 
	}
}

3459 
	$sqlôe3PagîSëSpûlsize
(
Pagî
 *
pPagî
, 
mxPage
){

3460  
	`sqlôe3PˇcheSëSpûlsize
(
pPagî
->
pPCache
, 
mxPage
);

3461 
	}
}

3466 
	$∑gîFixM≠limô
(
Pagî
 *
pPagî
){

3467 #i‡
SQLITE_MAX_MMAP_SIZE
>0

3468 
sqlôe3_fûe
 *
fd
 = 
pPagî
->fd;

3469 if–
	`isO≥n
(
fd
Ë&& fd->
pMëhods
->
iVîsi⁄
>=3 ){

3470 
sqlôe3_öt64
 
sz
;

3471 
sz
 = 
pPagî
->
szMm≠
;

3472 
pPagî
->
bU£Fëch
 = (
sz
>0);

3473 
	`£tGëãrMëhod
(
pPagî
);

3474 
	`sqlôe3OsFûeC⁄åﬁHöt
(
pPagî
->
fd
, 
SQLITE_FCNTL_MMAP_SIZE
, &
sz
);

3477 
	}
}

3482 
	$sqlôe3PagîSëMm≠Limô
(
Pagî
 *
pPagî
, 
sqlôe3_öt64
 
szMm≠
){

3483 
pPagî
->
szMm≠
 = szMmap;

3484 
	`∑gîFixM≠limô
(
pPagî
);

3485 
	}
}

3490 
	$sqlôe3PagîShrök
(
Pagî
 *
pPagî
){

3491 
	`sqlôe3PˇcheShrök
(
pPagî
->
pPCache
);

3492 
	}
}

3545 #i‚de‡
SQLITE_OMIT_PAGER_PRAGMAS


3546 
	$sqlôe3PagîSëFœgs
(

3547 
Pagî
 *
pPagî
,

3548 
pgFœgs


3550 
Àvñ
 = 
pgFœgs
 & 
PAGER_SYNCHRONOUS_MASK
;

3551 if–
pPagî
->
ãmpFûe
 ){

3552 
pPagî
->
noSync
 = 1;

3553 
pPagî
->
fuŒSync
 = 0;

3554 
pPagî
->
exåaSync
 = 0;

3556 
pPagî
->
noSync
 = 
Àvñ
==
PAGER_SYNCHRONOUS_OFF
 ?1:0;

3557 
pPagî
->
fuŒSync
 = 
Àvñ
>=
PAGER_SYNCHRONOUS_FULL
 ?1:0;

3558 
pPagî
->
exåaSync
 = 
Àvñ
==
PAGER_SYNCHRONOUS_EXTRA
 ?1:0;

3560 if–
pPagî
->
noSync
 ){

3561 
pPagî
->
syncFœgs
 = 0;

3562 
pPagî
->
ck±SyncFœgs
 = 0;

3563 }if–
pgFœgs
 & 
PAGER_FULLFSYNC
 ){

3564 
pPagî
->
syncFœgs
 = 
SQLITE_SYNC_FULL
;

3565 
pPagî
->
ck±SyncFœgs
 = 
SQLITE_SYNC_FULL
;

3566 }if–
pgFœgs
 & 
PAGER_CKPT_FULLFSYNC
 ){

3567 
pPagî
->
syncFœgs
 = 
SQLITE_SYNC_NORMAL
;

3568 
pPagî
->
ck±SyncFœgs
 = 
SQLITE_SYNC_FULL
;

3570 
pPagî
->
syncFœgs
 = 
SQLITE_SYNC_NORMAL
;

3571 
pPagî
->
ck±SyncFœgs
 = 
SQLITE_SYNC_NORMAL
;

3573 
pPagî
->
wÆSyncFœgs
 =ÖPagî->
syncFœgs
;

3574 if–
pPagî
->
fuŒSync
 ){

3575 
pPagî
->
wÆSyncFœgs
 |
WAL_SYNC_TRANSACTIONS
;

3577 if–
pgFœgs
 & 
PAGER_CACHESPILL
 ){

3578 
pPagî
->
doNŸSpûl
 &~
SPILLFLAG_OFF
;

3580 
pPagî
->
doNŸSpûl
 |
SPILLFLAG_OFF
;

3582 
	}
}

3590 #ifde‡
SQLITE_TEST


3591 
	gsqlôe3_›íãmp_cou¡
 = 0;

3609 
	$∑gîO≥¡emp
(

3610 
Pagî
 *
pPagî
,

3611 
sqlôe3_fûe
 *
pFûe
,

3612 
vfsFœgs


3614 
rc
;

3616 #ifde‡
SQLITE_TEST


3617 
sqlôe3_›íãmp_cou¡
++;

3620 
vfsFœgs
 |
SQLITE_OPEN_READWRITE
 | 
SQLITE_OPEN_CREATE
 |

3621 
SQLITE_OPEN_EXCLUSIVE
 | 
SQLITE_OPEN_DELETEONCLOSE
;

3622 
rc
 = 
	`sqlôe3OsO≥n
(
pPagî
->
pVfs
, 0, 
pFûe
, 
vfsFœgs
, 0);

3623 
	`as£π
–
rc
!=
SQLITE_OK
 || 
	`isO≥n
(
pFûe
) );

3624  
rc
;

3625 
	}
}

3648 
	$sqlôe3PagîSëBusyh™dÀr
(

3649 
Pagî
 *
pPagî
,

3650 (*
xBusyH™dÀr
)(*),

3651 *
pBusyH™dÀrArg


3653 
pPagî
->
xBusyH™dÀr
 = xBusyHandler;

3654 
pPagî
->
pBusyH™dÀrArg
 =ÖBusyHandlerArg;

3656 if–
	`isO≥n
(
pPagî
->
fd
) ){

3657 **
≠
 = (**)&
pPagî
->
xBusyH™dÀr
;

3658 
	`as£π
–(((*)(*))(
≠
[0]))==
xBusyH™dÀr
 );

3659 
	`as£π
–
≠
[1]==
pBusyH™dÀrArg
 );

3660 
	`sqlôe3OsFûeC⁄åﬁHöt
(
pPagî
->
fd
, 
SQLITE_FCNTL_BUSYHANDLER
, (*)
≠
);

3662 
	}
}

3694 
	$sqlôe3PagîSëPagesize
(
Pagî
 *
pPagî
, 
u32
 *
pPageSize
, 
nRe£rve
){

3695 
rc
 = 
SQLITE_OK
;

3707 
u32
 
∑geSize
 = *
pPageSize
;

3708 
	`as£π
–
∑geSize
==0 || (∑geSize>=512 &&ÖageSize<=
SQLITE_MAX_PAGE_SIZE
) );

3709 if–(
pPagî
->
memDb
==0 ||ÖPagî->
dbSize
==0)

3710 && 
	`sqlôe3PˇcheRefCou¡
(
pPagî
->
pPCache
)==0

3711 && 
∑geSize
 &&ÖageSize!=(
u32
)
pPagî
->pageSize

3713 *
pNew
 = 
NULL
;

3714 
i64
 
nByã
 = 0;

3716 if–
pPagî
->
eSèã
>
PAGER_OPEN
 && 
	`isO≥n
’Pagî->
fd
) ){

3717 
rc
 = 
	`sqlôe3OsFûeSize
(
pPagî
->
fd
, &
nByã
);

3719 if–
rc
==
SQLITE_OK
 ){

3720 
pNew
 = (*)
	`sqlôe3PageMÆloc
(
∑geSize
);

3721 if–!
pNew
 ) 
rc
 = 
SQLITE_NOMEM_BKPT
;

3724 if–
rc
==
SQLITE_OK
 ){

3725 
	`∑gî_ª£t
(
pPagî
);

3726 
rc
 = 
	`sqlôe3PˇcheSëPageSize
(
pPagî
->
pPCache
, 
∑geSize
);

3728 if–
rc
==
SQLITE_OK
 ){

3729 
	`sqlôe3PageFªe
(
pPagî
->
pTmpS∑˚
);

3730 
pPagî
->
pTmpS∑˚
 = 
pNew
;

3731 
pPagî
->
dbSize
 = (
Pgno
)((
nByã
+
∑geSize
-1)/pageSize);

3732 
pPagî
->
∑geSize
 =ÖageSize;

3734 
	`sqlôe3PageFªe
(
pNew
);

3738 *
pPageSize
 = 
pPagî
->
∑geSize
;

3739 if–
rc
==
SQLITE_OK
 ){

3740 if–
nRe£rve
<0 )ÇRe£rvê
pPagî
->nReserve;

3741 
	`as£π
–
nRe£rve
>=0 &&ÇReserve<1000 );

3742 
pPagî
->
nRe£rve
 = (
i16
)nReserve;

3743 
	`∑gîRï‹tSize
(
pPagî
);

3744 
	`∑gîFixM≠limô
(
pPagî
);

3746  
rc
;

3747 
	}
}

3757 *
	$sqlôe3PagîTempS∑˚
(
Pagî
 *
pPagî
){

3758  
pPagî
->
pTmpS∑˚
;

3759 
	}
}

3768 
	$sqlôe3PagîMaxPageCou¡
(
Pagî
 *
pPagî
, 
mxPage
){

3769 if–
mxPage
>0 ){

3770 
pPagî
->
mxPgno
 = 
mxPage
;

3772 
	`as£π
–
pPagî
->
eSèã
!=
PAGER_OPEN
 );

3773 
	`as£π
–
pPagî
->
mxPgno
>ıPagî->
dbSize
 );

3774  
pPagî
->
mxPgno
;

3775 
	}
}

3785 #ifde‡
SQLITE_TEST


3786 
sqlôe3_io_îr‹_≥ndög
;

3787 
sqlôe3_io_îr‹_hô
;

3788 
	gßved_˙t
;

3789 
	$dißbÀ_simuœãd_io_îr‹s
(){

3790 
ßved_˙t
 = 
sqlôe3_io_îr‹_≥ndög
;

3791 
sqlôe3_io_îr‹_≥ndög
 = -1;

3792 
	}
}

3793 
	$íabÀ_simuœãd_io_îr‹s
(){

3794 
sqlôe3_io_îr‹_≥ndög
 = 
ßved_˙t
;

3795 
	}
}

3797 
	#dißbÀ_simuœãd_io_îr‹s
()

	)

3798 
	#íabÀ_simuœãd_io_îr‹s
()

	)

3815 
	$sqlôe3PagîRódFûehódî
(
Pagî
 *
pPagî
, 
N
, *
pDe°
){

3816 
rc
 = 
SQLITE_OK
;

3817 
	`mem£t
(
pDe°
, 0, 
N
);

3818 
	`as£π
–
	`isO≥n
(
pPagî
->
fd
Ë||ÖPagî->
ãmpFûe
 );

3824 
	`as£π
–!
	`∑gîU£WÆ
(
pPagî
) );

3826 if–
	`isO≥n
(
pPagî
->
fd
) ){

3827 
	`IOTRACE
(("DBHDR %∞0 %d\n", 
pPagî
, 
N
))

3828 
rc
 = 
	`sqlôe3OsRód
(
pPagî
->
fd
, 
pDe°
, 
N
, 0);

3829 if–
rc
==
SQLITE_IOERR_SHORT_READ
 ){

3830 
rc
 = 
SQLITE_OK
;

3833  
rc
;

3834 
	}
}

3843 
	$sqlôe3PagîPagecou¡
(
Pagî
 *
pPagî
, *
≤Page
){

3844 
	`as£π
–
pPagî
->
eSèã
>=
PAGER_READER
 );

3845 
	`as£π
–
pPagî
->
eSèã
!=
PAGER_WRITER_FINISHED
 );

3846 *
≤Page
 = ()
pPagî
->
dbSize
;

3847 
	}
}

3864 
	$∑gî_waô_⁄_lock
(
Pagî
 *
pPagî
, 
lockty≥
){

3865 
rc
;

3872 
	`as£π
–(
pPagî
->
eLock
>=
lockty≥
)

3873 || (
pPagî
->
eLock
==
NO_LOCK
 && 
lockty≥
==
SHARED_LOCK
)

3874 || (
pPagî
->
eLock
==
RESERVED_LOCK
 && 
lockty≥
==
EXCLUSIVE_LOCK
)

3878 
rc
 = 
	`∑gîLockDb
(
pPagî
, 
lockty≥
);

3879 } 
rc
==
SQLITE_BUSY
 && 
pPagî
->
	`xBusyH™dÀr
’Pagî->
pBusyH™dÀrArg
) );

3880  
rc
;

3881 
	}
}

3905 #i‡
deföed
(
SQLITE_DEBUG
)

3906 
	$as£πTrunˇãC⁄°øötCb
(
PgHdr
 *
pPg
){

3907 
	`as£π
–
pPg
->
Êags
&
PGHDR_DIRTY
 );

3908 
	`as£π
–!
	`subjRequúesPage
(
pPg
Ë||ÖPg->
pgno
<ıPg->
pPagî
->
dbSize
 );

3909 
	}
}

3910 
	$as£πTrunˇãC⁄°øöt
(
Pagî
 *
pPagî
){

3911 
	`sqlôe3PˇcheIãøãDúty
(
pPagî
->
pPCache
, 
as£πTrunˇãC⁄°øötCb
);

3912 
	}
}

3914 
	#as£πTrunˇãC⁄°øöt
(
pPagî
)

	)

3928 
	$sqlôe3PagîTrunˇãImage
(
Pagî
 *
pPagî
, 
Pgno
 
nPage
){

3929 
	`as£π
–
pPagî
->
dbSize
>=
nPage
 );

3930 
	`as£π
–
pPagî
->
eSèã
>=
PAGER_WRITER_CACHEMOD
 );

3931 
pPagî
->
dbSize
 = 
nPage
;

3942 
	}
}

3959 
	$∑gîSyncHŸJou∫Æ
(
Pagî
 *
pPagî
){

3960 
rc
 = 
SQLITE_OK
;

3961 if–!
pPagî
->
noSync
 ){

3962 
rc
 = 
	`sqlôe3OsSync
(
pPagî
->
jfd
, 
SQLITE_SYNC_NORMAL
);

3964 if–
rc
==
SQLITE_OK
 ){

3965 
rc
 = 
	`sqlôe3OsFûeSize
(
pPagî
->
jfd
, &pPagî->
jou∫ÆHdr
);

3967  
rc
;

3968 
	}
}

3970 #i‡
SQLITE_MAX_MMAP_SIZE
>0

3981 
	$∑gîAcquúeM≠Page
(

3982 
Pagî
 *
pPagî
,

3983 
Pgno
 
pgno
,

3984 *
pD©a
,

3985 
PgHdr
 **
µPage


3987 
PgHdr
 *
p
;

3989 if–
pPagî
->
pMm≠Fªñi°
 ){

3990 *
µPage
 = 
p
 = 
pPagî
->
pMm≠Fªñi°
;

3991 
pPagî
->
pMm≠Fªñi°
 = 
p
->
pDúty
;

3992 
p
->
pDúty
 = 0;

3993 
	`as£π
–
pPagî
->
nExåa
>=8 );

3994 
	`mem£t
(
p
->
pExåa
, 0, 8);

3996 *
µPage
 = 
p
 = (
PgHdr
 *)
	`sqlôe3MÆlocZîo
((PgHdrË+ 
pPagî
->
nExåa
);

3997 if–
p
==0 ){

3998 
	`sqlôe3OsUn„tch
(
pPagî
->
fd
, (
i64
)(
pgno
-1Ë*ÖPagî->
∑geSize
, 
pD©a
);

3999  
SQLITE_NOMEM_BKPT
;

4001 
p
->
pExåa
 = (*)&p[1];

4002 
p
->
Êags
 = 
PGHDR_MMAP
;

4003 
p
->
nRef
 = 1;

4004 
p
->
pPagî
 =ÖPager;

4007 
	`as£π
–
p
->
pExåa
==(*)&p[1] );

4008 
	`as£π
–
p
->
pPage
==0 );

4009 
	`as£π
–
p
->
Êags
==
PGHDR_MMAP
 );

4010 
	`as£π
–
p
->
pPagî
==pPager );

4011 
	`as£π
–
p
->
nRef
==1 );

4013 
p
->
pgno
 =Ögno;

4014 
p
->
pD©a
 =ÖData;

4015 
pPagî
->
nMm≠Out
++;

4017  
SQLITE_OK
;

4018 
	}
}

4025 
	$∑gîRñó£M≠Page
(
PgHdr
 *
pPg
){

4026 
Pagî
 *
pPagî
 = 
pPg
->pPager;

4027 
pPagî
->
nMm≠Out
--;

4028 
pPg
->
pDúty
 = 
pPagî
->
pMm≠Fªñi°
;

4029 
pPagî
->
pMm≠Fªñi°
 = 
pPg
;

4031 
	`as£π
–
pPagî
->
fd
->
pMëhods
->
iVîsi⁄
>=3 );

4032 
	`sqlôe3OsUn„tch
(
pPagî
->
fd
, (
i64
)(
pPg
->
pgno
-1)*pPagî->
∑geSize
,ÖPg->
pD©a
);

4033 
	}
}

4038 
	$∑gîFªeM≠Hdrs
(
Pagî
 *
pPagî
){

4039 
PgHdr
 *
p
;

4040 
PgHdr
 *
pNext
;

4041 
p
=
pPagî
->
pMm≠Fªñi°
;Ö;Ö=
pNext
){

4042 
pNext
 = 
p
->
pDúty
;

4043 
	`sqlôe3_‰ì
(
p
);

4045 
	}
}

4062 
	$sqlôe3PagîClo£
(
Pagî
 *
pPagî
, 
sqlôe3
 *
db
){

4063 
u8
 *
pTmp
 = (u8 *)
pPagî
->
pTmpS∑˚
;

4065 
	`as£π
–
db
 || 
	`∑gîU£WÆ
(
pPagî
)==0 );

4066 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

4067 
	`dißbÀ_simuœãd_io_îr‹s
();

4068 
	`sqlôe3BegöBíignMÆloc
();

4069 
	`∑gîFªeM≠Hdrs
(
pPagî
);

4071 
pPagî
->
ex˛usiveMode
 = 0;

4072 #i‚de‡
SQLITE_OMIT_WAL


4073 
	`as£π
–
db
 || 
pPagî
->
pWÆ
==0 );

4074 
	`sqlôe3WÆClo£
(
pPagî
->
pWÆ
, 
db
,ÖPagî->
ck±SyncFœgs
,ÖPagî->
∑geSize
,

4075 (
db
 && (db->
Êags
 & 
SQLITE_NoCk±OnClo£
Ë? 0 : 
pTmp
)

4077 
pPagî
->
pWÆ
 = 0;

4079 
	`∑gî_ª£t
(
pPagî
);

4080 if–
MEMDB
 ){

4081 
	`∑gî_u∆ock
(
pPagî
);

4094 if–
	`isO≥n
(
pPagî
->
jfd
) ){

4095 
	`∑gî_îr‹
(
pPagî
, 
	`∑gîSyncHŸJou∫Æ
(pPager));

4097 
	`∑gîU∆ockAndRﬁlback
(
pPagî
);

4099 
	`sqlôe3EndBíignMÆloc
();

4100 
	`íabÀ_simuœãd_io_îr‹s
();

4101 
	`PAGERTRACE
(("CLOSE %d\n", 
	`PAGERID
(
pPagî
)));

4102 
	`IOTRACE
(("CLOSE %p\n", 
pPagî
))

4103 
	`sqlôe3OsClo£
(
pPagî
->
jfd
);

4104 
	`sqlôe3OsClo£
(
pPagî
->
fd
);

4105 
	`sqlôe3PageFªe
(
pTmp
);

4106 
	`sqlôe3PˇcheClo£
(
pPagî
->
pPCache
);

4108 #ifde‡
SQLITE_HAS_CODEC


4109 if–
pPagî
->
xCodecFªe
 )ÖPagî->
	`xCodecFªe
’Pagî->
pCodec
);

4112 
	`as£π
–!
pPagî
->
aSavïoöt
 && !pPagî->
pInJou∫Æ
 );

4113 
	`as£π
–!
	`isO≥n
(
pPagî
->
jfd
Ë&& !isO≥n’Pagî->
sjfd
) );

4115 
	`sqlôe3_‰ì
(
pPagî
);

4116  
SQLITE_OK
;

4117 
	}
}

4119 #i‡!
deföed
(
NDEBUG
Ë|| deföed(
SQLITE_TEST
)

4123 
Pgno
 
	$sqlôe3PagîPagíumbî
(
DbPage
 *
pPg
){

4124  
pPg
->
pgno
;

4125 
	}
}

4131 
	$sqlôe3PagîRef
(
DbPage
 *
pPg
){

4132 
	`sqlôe3PˇcheRef
(
pPg
);

4133 
	}
}

4170 
	$syncJou∫Æ
(
Pagî
 *
pPagî
, 
√wHdr
){

4171 
rc
;

4173 
	`as£π
–
pPagî
->
eSèã
==
PAGER_WRITER_CACHEMOD


4174 || 
pPagî
->
eSèã
==
PAGER_WRITER_DBMOD


4176 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

4177 
	`as£π
–!
	`∑gîU£WÆ
(
pPagî
) );

4179 
rc
 = 
	`sqlôe3PagîEx˛usiveLock
(
pPagî
);

4180 if–
rc
!=
SQLITE_OK
 ) Ñc;

4182 if–!
pPagî
->
noSync
 ){

4183 
	`as£π
–!
pPagî
->
ãmpFûe
 );

4184 if–
	`isO≥n
(
pPagî
->
jfd
Ë&&ÖPagî->
jou∫ÆMode
!=
PAGER_JOURNALMODE_MEMORY
 ){

4185 c⁄° 
iDc
 = 
	`sqlôe3OsDevi˚Ch¨a˘îi°ics
(
pPagî
->
fd
);

4186 
	`as£π
–
	`isO≥n
(
pPagî
->
jfd
) );

4188 if–0==(
iDc
&
SQLITE_IOCAP_SAFE_APPEND
) ){

4211 
i64
 
iNextHdrOff£t
;

4212 
u8
 
aMagic
[8];

4213 
u8
 
zHódî
[(
aJou∫ÆMagic
)+4];

4215 
	`mem˝y
(
zHódî
, 
aJou∫ÆMagic
, (aJournalMagic));

4216 
	`put32bôs
(&
zHódî
[(
aJou∫ÆMagic
)], 
pPagî
->
nRec
);

4218 
iNextHdrOff£t
 = 
	`jou∫ÆHdrOff£t
(
pPagî
);

4219 
rc
 = 
	`sqlôe3OsRód
(
pPagî
->
jfd
, 
aMagic
, 8, 
iNextHdrOff£t
);

4220 if–
rc
==
SQLITE_OK
 && 0==
	`memcmp
(
aMagic
, 
aJou∫ÆMagic
, 8) ){

4221 c⁄° 
u8
 
zîobyã
 = 0;

4222 
rc
 = 
	`sqlôe3OsWrôe
(
pPagî
->
jfd
, &
zîobyã
, 1, 
iNextHdrOff£t
);

4224 if–
rc
!=
SQLITE_OK
 &&Ñc!=
SQLITE_IOERR_SHORT_READ
 ){

4225  
rc
;

4239 if–
pPagî
->
fuŒSync
 && 0==(
iDc
&
SQLITE_IOCAP_SEQUENTIAL
) ){

4240 
	`PAGERTRACE
(("SYNC jou∫Æ o‡%d\n", 
	`PAGERID
(
pPagî
)));

4241 
	`IOTRACE
(("JSYNC %p\n", 
pPagî
))

4242 
rc
 = 
	`sqlôe3OsSync
(
pPagî
->
jfd
,ÖPagî->
syncFœgs
);

4243 if–
rc
!=
SQLITE_OK
 ) Ñc;

4245 
	`IOTRACE
(("JHDR %∞%Œd\n", 
pPagî
,ÖPagî->
jou∫ÆHdr
));

4246 
rc
 = 
	`sqlôe3OsWrôe
(

4247 
pPagî
->
jfd
, 
zHódî
, (zHódî),ÖPagî->
jou∫ÆHdr


4249 if–
rc
!=
SQLITE_OK
 ) Ñc;

4251 if–0==(
iDc
&
SQLITE_IOCAP_SEQUENTIAL
) ){

4252 
	`PAGERTRACE
(("SYNC jou∫Æ o‡%d\n", 
	`PAGERID
(
pPagî
)));

4253 
	`IOTRACE
(("JSYNC %p\n", 
pPagî
))

4254 
rc
 = 
	`sqlôe3OsSync
(
pPagî
->
jfd
,ÖPagî->
syncFœgs
|

4255 (
pPagî
->
syncFœgs
==
SQLITE_SYNC_FULL
?
SQLITE_SYNC_DATAONLY
:0)

4257 if–
rc
!=
SQLITE_OK
 ) Ñc;

4260 
pPagî
->
jou∫ÆHdr
 =ÖPagî->
jou∫ÆOff
;

4261 if–
√wHdr
 && 0==(
iDc
&
SQLITE_IOCAP_SAFE_APPEND
) ){

4262 
pPagî
->
nRec
 = 0;

4263 
rc
 = 
	`wrôeJou∫ÆHdr
(
pPagî
);

4264 if–
rc
!=
SQLITE_OK
 ) Ñc;

4267 
pPagî
->
jou∫ÆHdr
 =ÖPagî->
jou∫ÆOff
;

4275 
	`sqlôe3PˇcheCÀ¨SyncFœgs
(
pPagî
->
pPCache
);

4276 
pPagî
->
eSèã
 = 
PAGER_WRITER_DBMOD
;

4277 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

4278  
SQLITE_OK
;

4279 
	}
}

4313 
	$∑gî_wrôe_∑gñi°
(
Pagî
 *
pPagî
, 
PgHdr
 *
pLi°
){

4314 
rc
 = 
SQLITE_OK
;

4317 
	`as£π
–!
	`∑gîU£WÆ
(
pPagî
) );

4318 
	`as£π
–
pPagî
->
ãmpFûe
 ||ÖPagî->
eSèã
==
PAGER_WRITER_DBMOD
 );

4319 
	`as£π
–
pPagî
->
eLock
==
EXCLUSIVE_LOCK
 );

4320 
	`as£π
–
	`isO≥n
(
pPagî
->
fd
Ë|| 
pLi°
->
pDúty
==0 );

4326 if–!
	`isO≥n
(
pPagî
->
fd
) ){

4327 
	`as£π
–
pPagî
->
ãmpFûe
 && 
rc
==
SQLITE_OK
 );

4328 
rc
 = 
	`∑gîO≥¡emp
(
pPagî
,ÖPagî->
fd
,ÖPagî->
vfsFœgs
);

4334 
	`as£π
–
rc
!=
SQLITE_OK
 || 
	`isO≥n
(
pPagî
->
fd
) );

4335 if–
rc
==
SQLITE_OK


4336 && 
pPagî
->
dbHötSize
<pPagî->
dbSize


4337 && (
pLi°
->
pDúty
 ||ÖLi°->
pgno
>
pPagî
->
dbHötSize
)

4339 
sqlôe3_öt64
 
szFûe
 = 
pPagî
->
∑geSize
 * (sqlôe3_öt64ÌPagî->
dbSize
;

4340 
	`sqlôe3OsFûeC⁄åﬁHöt
(
pPagî
->
fd
, 
SQLITE_FCNTL_SIZE_HINT
, &
szFûe
);

4341 
pPagî
->
dbHötSize
 =ÖPagî->
dbSize
;

4344  
rc
==
SQLITE_OK
 && 
pLi°
 ){

4345 
Pgno
 
pgno
 = 
pLi°
->pgno;

4355 if–
pgno
<=
pPagî
->
dbSize
 && 0==(
pLi°
->
Êags
&
PGHDR_DONT_WRITE
) ){

4356 
i64
 
off£t
 = (
pgno
-1)*(i64)
pPagî
->
∑geSize
;

4357 *
pD©a
;

4359 
	`as£π
–(
pLi°
->
Êags
&
PGHDR_NEED_SYNC
)==0 );

4360 if–
pLi°
->
pgno
==1 ) 
	`∑gî_wrôe_ch™gecou¡î
(pList);

4363 
	`CODEC2
(
pPagî
, 
pLi°
->
pD©a
, 
pgno
, 6,  
SQLITE_NOMEM_BKPT
,ÖData);

4366 
rc
 = 
	`sqlôe3OsWrôe
(
pPagî
->
fd
, 
pD©a
,ÖPagî->
∑geSize
, 
off£t
);

4372 if–
pgno
==1 ){

4373 
	`mem˝y
(&
pPagî
->
dbFûeVîs
, &
pD©a
[24], (pPager->dbFileVers));

4375 if–
pgno
>
pPagî
->
dbFûeSize
 ){

4376 
pPagî
->
dbFûeSize
 = 
pgno
;

4378 
pPagî
->
aSèt
[
PAGER_STAT_WRITE
]++;

4381 
	`sqlôe3BackupUpd©e
(
pPagî
->
pBackup
, 
pgno
, (
u8
*)
pLi°
->
pD©a
);

4383 
	`PAGERTRACE
(("STORE %dÖage %d hash(%08x)\n",

4384 
	`PAGERID
(
pPagî
), 
pgno
, 
	`∑gî_∑gehash
(
pLi°
)));

4385 
	`IOTRACE
(("PGOUT %∞%d\n", 
pPagî
, 
pgno
));

4386 
	`PAGER_INCR
(
sqlôe3_∑gî_wrôedb_cou¡
);

4388 
	`PAGERTRACE
(("NOSTORE %dÖagê%d\n", 
	`PAGERID
(
pPagî
), 
pgno
));

4390 
	`∑gî_£t_∑gehash
(
pLi°
);

4391 
pLi°
 =ÖLi°->
pDúty
;

4394  
rc
;

4395 
	}
}

4405 
	$›íSubJou∫Æ
(
Pagî
 *
pPagî
){

4406 
rc
 = 
SQLITE_OK
;

4407 if–!
	`isO≥n
(
pPagî
->
sjfd
) ){

4408 c⁄° 
Êags
 = 
SQLITE_OPEN_SUBJOURNAL
 | 
SQLITE_OPEN_READWRITE


4409 | 
SQLITE_OPEN_CREATE
 | 
SQLITE_OPEN_EXCLUSIVE


4410 | 
SQLITE_OPEN_DELETEONCLOSE
;

4411 
nStmtSpûl
 = 
sqlôe3C⁄fig
.nStmtSpill;

4412 if–
pPagî
->
jou∫ÆMode
==
PAGER_JOURNALMODE_MEMORY
 ||ÖPagî->
subjInMem‹y
 ){

4413 
nStmtSpûl
 = -1;

4415 
rc
 = 
	`sqlôe3Jou∫ÆO≥n
(
pPagî
->
pVfs
, 0,ÖPagî->
sjfd
, 
Êags
, 
nStmtSpûl
);

4417  
rc
;

4418 
	}
}

4431 
	$subjou∫ÆPage
(
PgHdr
 *
pPg
){

4432 
rc
 = 
SQLITE_OK
;

4433 
Pagî
 *
pPagî
 = 
pPg
->pPager;

4434 if–
pPagî
->
jou∫ÆMode
!=
PAGER_JOURNALMODE_OFF
 ){

4437 
	`as£π
–
pPagî
->
u£Jou∫Æ
 );

4438 
	`as£π
–
	`isO≥n
(
pPagî
->
jfd
Ë|| 
	`∑gîU£WÆ
(pPager) );

4439 
	`as£π
–
	`isO≥n
(
pPagî
->
sjfd
Ë||ÖPagî->
nSubRec
==0 );

4440 
	`as£π
–
	`∑gîU£WÆ
(
pPagî
)

4441 || 
	`∑geInJou∫Æ
(
pPagî
, 
pPg
)

4442 || 
pPg
->
pgno
>
pPagî
->
dbOrigSize


4444 
rc
 = 
	`›íSubJou∫Æ
(
pPagî
);

4448 if–
rc
==
SQLITE_OK
 ){

4449 *
pD©a
 = 
pPg
->pData;

4450 
i64
 
off£t
 = (i64)
pPagî
->
nSubRec
*(4+pPagî->
∑geSize
);

4451 *
pD©a2
;

4453 
	`CODEC2
(
pPagî
, 
pD©a
, 
pPg
->
pgno
, 7,  
SQLITE_NOMEM_BKPT
, 
pD©a2
);

4454 
	`PAGERTRACE
(("STMT-JOURNAL %dÖagê%d\n", 
	`PAGERID
(
pPagî
), 
pPg
->
pgno
));

4455 
rc
 = 
	`wrôe32bôs
(
pPagî
->
sjfd
, 
off£t
, 
pPg
->
pgno
);

4456 if–
rc
==
SQLITE_OK
 ){

4457 
rc
 = 
	`sqlôe3OsWrôe
(
pPagî
->
sjfd
, 
pD©a2
,ÖPagî->
∑geSize
, 
off£t
+4);

4461 if–
rc
==
SQLITE_OK
 ){

4462 
pPagî
->
nSubRec
++;

4463 
	`as£π
–
pPagî
->
nSavïoöt
>0 );

4464 
rc
 = 
	`addToSavïoötBôvecs
(
pPagî
, 
pPg
->
pgno
);

4466  
rc
;

4467 
	}
}

4468 
	$subjou∫ÆPageIfRequúed
(
PgHdr
 *
pPg
){

4469 if–
	`subjRequúesPage
(
pPg
) ){

4470  
	`subjou∫ÆPage
(
pPg
);

4472  
SQLITE_OK
;

4474 
	}
}

4495 
	$∑gîSåess
(*
p
, 
PgHdr
 *
pPg
){

4496 
Pagî
 *
pPagî
 = (Pagî *)
p
;

4497 
rc
 = 
SQLITE_OK
;

4499 
	`as£π
–
pPg
->
pPagî
==pPager );

4500 
	`as£π
–
pPg
->
Êags
&
PGHDR_DIRTY
 );

4518 if–
	`NEVER
(
pPagî
->
îrCode
ËË 
SQLITE_OK
;

4519 
	`ã°ˇ£
–
pPagî
->
doNŸSpûl
 & 
SPILLFLAG_ROLLBACK
 );

4520 
	`ã°ˇ£
–
pPagî
->
doNŸSpûl
 & 
SPILLFLAG_OFF
 );

4521 
	`ã°ˇ£
–
pPagî
->
doNŸSpûl
 & 
SPILLFLAG_NOSYNC
 );

4522 if–
pPagî
->
doNŸSpûl


4523 && ((
pPagî
->
doNŸSpûl
 & (
SPILLFLAG_ROLLBACK
|
SPILLFLAG_OFF
))!=0

4524 || (
pPg
->
Êags
 & 
PGHDR_NEED_SYNC
)!=0)

4526  
SQLITE_OK
;

4529 
pPg
->
pDúty
 = 0;

4530 if–
	`∑gîU£WÆ
(
pPagî
) ){

4532 
rc
 = 
	`subjou∫ÆPageIfRequúed
(
pPg
);

4533 if–
rc
==
SQLITE_OK
 ){

4534 
rc
 = 
	`∑gîWÆFømes
(
pPagî
, 
pPg
, 0, 0);

4539 if–
pPg
->
Êags
&
PGHDR_NEED_SYNC


4540 || 
pPagî
->
eSèã
==
PAGER_WRITER_CACHEMOD


4542 
rc
 = 
	`syncJou∫Æ
(
pPagî
, 1);

4546 if–
rc
==
SQLITE_OK
 ){

4547 
	`as£π
–(
pPg
->
Êags
&
PGHDR_NEED_SYNC
)==0 );

4548 
rc
 = 
	`∑gî_wrôe_∑gñi°
(
pPagî
, 
pPg
);

4553 if–
rc
==
SQLITE_OK
 ){

4554 
	`PAGERTRACE
(("STRESS %dÖagê%d\n", 
	`PAGERID
(
pPagî
), 
pPg
->
pgno
));

4555 
	`sqlôe3PˇcheMakeCÀ™
(
pPg
);

4558  
	`∑gî_îr‹
(
pPagî
, 
rc
);

4559 
	}
}

4564 
	$sqlôe3PagîFlush
(
Pagî
 *
pPagî
){

4565 
rc
 = 
pPagî
->
îrCode
;

4566 if–!
MEMDB
 ){

4567 
PgHdr
 *
pLi°
 = 
	`sqlôe3PˇcheDútyLi°
(
pPagî
->
pPCache
);

4568 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

4569  
rc
==
SQLITE_OK
 && 
pLi°
 ){

4570 
PgHdr
 *
pNext
 = 
pLi°
->
pDúty
;

4571 if–
pLi°
->
nRef
==0 ){

4572 
rc
 = 
	`∑gîSåess
((*)
pPagî
, 
pLi°
);

4574 
pLi°
 = 
pNext
;

4578  
rc
;

4579 
	}
}

4613 
	$sqlôe3PagîO≥n
(

4614 
sqlôe3_vfs
 *
pVfs
,

4615 
Pagî
 **
µPagî
,

4616 c⁄° *
zFûíame
,

4617 
nExåa
,

4618 
Êags
,

4619 
vfsFœgs
,

4620 (*
xReöô
)(
DbPage
*)

4622 
u8
 *
pPå
;

4623 
Pagî
 *
pPagî
 = 0;

4624 
rc
 = 
SQLITE_OK
;

4625 
ãmpFûe
 = 0;

4626 
memDb
 = 0;

4627 
ªadO∆y
 = 0;

4628 
jou∫ÆFûeSize
;

4629 *
zP©h«me
 = 0;

4630 
nP©h«me
 = 0;

4631 
u£Jou∫Æ
 = (
Êags
 & 
PAGER_OMIT_JOURNAL
)==0;

4632 
pˇcheSize
 = 
	`sqlôe3PˇcheSize
();

4633 
u32
 
szPageDÊt
 = 
SQLITE_DEFAULT_PAGE_SIZE
;

4634 c⁄° *
zUri
 = 0;

4635 
nUri
 = 0;

4639 
jou∫ÆFûeSize
 = 
	`ROUND8
(
	`sqlôe3Jou∫ÆSize
(
pVfs
));

4642 *
µPagî
 = 0;

4644 #i‚de‡
SQLITE_OMIT_MEMORYDB


4645 if–
Êags
 & 
PAGER_MEMORY
 ){

4646 
memDb
 = 1;

4647 if–
zFûíame
 && zFilename[0] ){

4648 
zP©h«me
 = 
	`sqlôe3DbSåDup
(0, 
zFûíame
);

4649 if–
zP©h«me
==0 )  
SQLITE_NOMEM_BKPT
;

4650 
nP©h«me
 = 
	`sqlôe3SåÀn30
(
zP©h«me
);

4651 
zFûíame
 = 0;

4660 if–
zFûíame
 && zFilename[0] ){

4661 c⁄° *
z
;

4662 
nP©h«me
 = 
pVfs
->
mxP©h«me
+1;

4663 
zP©h«me
 = 
	`sqlôe3DbMÆlocRaw
(0, 
nP©h«me
*2);

4664 if–
zP©h«me
==0 ){

4665  
SQLITE_NOMEM_BKPT
;

4667 
zP©h«me
[0] = 0;

4668 
rc
 = 
	`sqlôe3OsFuŒP©h«me
(
pVfs
, 
zFûíame
, 
nP©h«me
, 
zP©h«me
);

4669 
nP©h«me
 = 
	`sqlôe3SåÀn30
(
zP©h«me
);

4670 
z
 = 
zUri
 = &
zFûíame
[
	`sqlôe3SåÀn30
(zFilename)+1];

4673  *
z
 ){

4674 
z
 +
	`sqlôe3SåÀn30
(z)+1;

4675 
z
 +
	`sqlôe3SåÀn30
(z)+1;

4677 
nUri
 = ()(&
z
[1] - 
zUri
);

4678 
	`as£π
–
nUri
>=0 );

4679 if–
rc
==
SQLITE_OK
 && 
nP©h«me
+8>
pVfs
->
mxP©h«me
 ){

4686 
rc
 = 
SQLITE_CANTOPEN_BKPT
;

4688 if–
rc
!=
SQLITE_OK
 ){

4689 
	`sqlôe3DbFªe
(0, 
zP©h«me
);

4690  
rc
;

4706 
pPå
 = (
u8
 *)
	`sqlôe3MÆlocZîo
(

4707 
	`ROUND8
((*
pPagî
)) +

4708 
	`ROUND8
(
pˇcheSize
) +

4709 
	`ROUND8
(
pVfs
->
szOsFûe
) +

4710 
jou∫ÆFûeSize
 * 2 +

4711 
nP©h«me
 + 1 + 
nUri
 +

4712 
nP©h«me
 + 8 + 2

4713 #i‚de‡
SQLITE_OMIT_WAL


4714 + 
nP©h«me
 + 4 + 2

4717 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(
	`SQLITE_INT_TO_PTR
(
jou∫ÆFûeSize
)) );

4718 if–!
pPå
 ){

4719 
	`sqlôe3DbFªe
(0, 
zP©h«me
);

4720  
SQLITE_NOMEM_BKPT
;

4722 
pPagî
 = (
Pagî
*)(
pPå
);

4723 
pPagî
->
pPCache
 = (
PCache
*)(
pPå
 +
	`ROUND8
((*pPager)));

4724 
pPagî
->
fd
 = (
sqlôe3_fûe
*)(
pPå
 +
	`ROUND8
(
pˇcheSize
));

4725 
pPagî
->
sjfd
 = (
sqlôe3_fûe
*)(
pPå
 +
	`ROUND8
(
pVfs
->
szOsFûe
));

4726 
pPagî
->
jfd
 = (
sqlôe3_fûe
*)(
pPå
 +
jou∫ÆFûeSize
);

4727 
pPagî
->
zFûíame
 = (*)(
pPå
 +
jou∫ÆFûeSize
);

4728 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(
pPagî
->
jfd
) );

4731 if–
zP©h«me
 ){

4732 
	`as£π
–
nP©h«me
>0 );

4733 
pPagî
->
zJou∫Æ
 = (*)(
pPå
 +
nP©h«me
 + 1 + 
nUri
);

4734 
	`mem˝y
(
pPagî
->
zFûíame
, 
zP©h«me
, 
nP©h«me
);

4735 if–
nUri
 ) 
	`mem˝y
(&
pPagî
->
zFûíame
[
nP©h«me
+1], 
zUri
,ÇUri);

4736 
	`mem˝y
(
pPagî
->
zJou∫Æ
, 
zP©h«me
, 
nP©h«me
);

4737 
	`mem˝y
(&
pPagî
->
zJou∫Æ
[
nP©h«me
], "-journal\000", 8+2);

4738 
	`sqlôe3FûeSuffix3
(
pPagî
->
zFûíame
,ÖPagî->
zJou∫Æ
);

4739 #i‚de‡
SQLITE_OMIT_WAL


4740 
pPagî
->
zWÆ
 = &pPagî->
zJou∫Æ
[
nP©h«me
+8+1];

4741 
	`mem˝y
(
pPagî
->
zWÆ
, 
zP©h«me
, 
nP©h«me
);

4742 
	`mem˝y
(&
pPagî
->
zWÆ
[
nP©h«me
], "-wal\000", 4+1);

4743 
	`sqlôe3FûeSuffix3
(
pPagî
->
zFûíame
,ÖPagî->
zWÆ
);

4745 
	`sqlôe3DbFªe
(0, 
zP©h«me
);

4747 
pPagî
->
pVfs
 =ÖVfs;

4748 
pPagî
->
vfsFœgs
 = vfsFlags;

4752 if–
zFûíame
 && zFilename[0] ){

4753 
fout
 = 0;

4754 
rc
 = 
	`sqlôe3OsO≥n
(
pVfs
, 
pPagî
->
zFûíame
,ÖPagî->
fd
, 
vfsFœgs
, &
fout
);

4755 
	`as£π
–!
memDb
 );

4756 
ªadO∆y
 = (
fout
&
SQLITE_OPEN_READONLY
);

4766 if–
rc
==
SQLITE_OK
 ){

4767 
iDc
 = 
	`sqlôe3OsDevi˚Ch¨a˘îi°ics
(
pPagî
->
fd
);

4768 if–!
ªadO∆y
 ){

4769 
	`£tSe˘‹Size
(
pPagî
);

4770 
	`as£π
(
SQLITE_DEFAULT_PAGE_SIZE
<=
SQLITE_MAX_DEFAULT_PAGE_SIZE
);

4771 if–
szPageDÊt
<
pPagî
->
£˘‹Size
 ){

4772 if–
pPagî
->
£˘‹Size
>
SQLITE_MAX_DEFAULT_PAGE_SIZE
 ){

4773 
szPageDÊt
 = 
SQLITE_MAX_DEFAULT_PAGE_SIZE
;

4775 
szPageDÊt
 = (
u32
)
pPagî
->
£˘‹Size
;

4778 #ifde‡
SQLITE_ENABLE_ATOMIC_WRITE


4780 
ii
;

4781 
	`as£π
(
SQLITE_IOCAP_ATOMIC512
==(512>>8));

4782 
	`as£π
(
SQLITE_IOCAP_ATOMIC64K
==(65536>>8));

4783 
	`as£π
(
SQLITE_MAX_DEFAULT_PAGE_SIZE
<=65536);

4784 
ii
=
szPageDÊt
; ii<=
SQLITE_MAX_DEFAULT_PAGE_SIZE
; ii=ii*2){

4785 if–
iDc
&(
SQLITE_IOCAP_ATOMIC
|(
ii
>>8)) ){

4786 
szPageDÊt
 = 
ii
;

4792 
pPagî
->
noLock
 = 
	`sqlôe3_uri_boﬁón
(
zFûíame
, "nolock", 0);

4793 if–(
iDc
 & 
SQLITE_IOCAP_IMMUTABLE
)!=0

4794 || 
	`sqlôe3_uri_boﬁón
(
zFûíame
, "immutable", 0) ){

4795 
vfsFœgs
 |
SQLITE_OPEN_READONLY
;

4796 
a˘_like_ãmp_fûe
;

4810 
a˘_like_ãmp_fûe
:

4811 
ãmpFûe
 = 1;

4812 
pPagî
->
eSèã
 = 
PAGER_READER
;

4813 
pPagî
->
eLock
 = 
EXCLUSIVE_LOCK
;

4814 
pPagî
->
noLock
 = 1;

4815 
ªadO∆y
 = (
vfsFœgs
&
SQLITE_OPEN_READONLY
);

4821 if–
rc
==
SQLITE_OK
 ){

4822 
	`as£π
–
pPagî
->
memDb
==0 );

4823 
rc
 = 
	`sqlôe3PagîSëPagesize
(
pPagî
, &
szPageDÊt
, -1);

4824 
	`ã°ˇ£
–
rc
!=
SQLITE_OK
 );

4828 if–
rc
==
SQLITE_OK
 ){

4829 
nExåa
 = 
	`ROUND8
(nExtra);

4830 
	`as£π
–
nExåa
>=8 &&ÇExtra<1000 );

4831 
rc
 = 
	`sqlôe3PˇcheO≥n
(
szPageDÊt
, 
nExåa
, !
memDb
,

4832 !
memDb
?
∑gîSåess
:0, (*)
pPagî
,ÖPagî->
pPCache
);

4837 if–
rc
!=
SQLITE_OK
 ){

4838 
	`sqlôe3OsClo£
(
pPagî
->
fd
);

4839 
	`sqlôe3PageFªe
(
pPagî
->
pTmpS∑˚
);

4840 
	`sqlôe3_‰ì
(
pPagî
);

4841  
rc
;

4844 
	`PAGERTRACE
(("OPEN %d %s\n", 
	`FILEHANDLEID
(
pPagî
->
fd
),ÖPagî->
zFûíame
));

4845 
	`IOTRACE
(("OPEN %∞%s\n", 
pPagî
,ÖPagî->
zFûíame
))

4847 
pPagî
->
u£Jou∫Æ
 = (
u8
)useJournal;

4854 
pPagî
->
mxPgno
 = 
SQLITE_MAX_PAGE_COUNT
;

4857 
pPagî
->
ãmpFûe
 = (
u8
)tempFile;

4858 
	`as£π
–
ãmpFûe
==
PAGER_LOCKINGMODE_NORMAL


4859 || 
ãmpFûe
==
PAGER_LOCKINGMODE_EXCLUSIVE
 );

4860 
	`as£π
–
PAGER_LOCKINGMODE_EXCLUSIVE
==1 );

4861 
pPagî
->
ex˛usiveMode
 = (
u8
)
ãmpFûe
;

4862 
pPagî
->
ch™geCou¡D⁄e
 =ÖPagî->
ãmpFûe
;

4863 
pPagî
->
memDb
 = (
u8
)memDb;

4864 
pPagî
->
ªadO∆y
 = (
u8
)readOnly;

4865 
	`as£π
–
u£Jou∫Æ
 || 
pPagî
->
ãmpFûe
 );

4866 
pPagî
->
noSync
 =ÖPagî->
ãmpFûe
;

4867 if–
pPagî
->
noSync
 ){

4868 
	`as£π
–
pPagî
->
fuŒSync
==0 );

4869 
	`as£π
–
pPagî
->
exåaSync
==0 );

4870 
	`as£π
–
pPagî
->
syncFœgs
==0 );

4871 
	`as£π
–
pPagî
->
wÆSyncFœgs
==0 );

4872 
	`as£π
–
pPagî
->
ck±SyncFœgs
==0 );

4874 
pPagî
->
fuŒSync
 = 1;

4875 
pPagî
->
exåaSync
 = 0;

4876 
pPagî
->
syncFœgs
 = 
SQLITE_SYNC_NORMAL
;

4877 
pPagî
->
wÆSyncFœgs
 = 
SQLITE_SYNC_NORMAL
 | 
WAL_SYNC_TRANSACTIONS
;

4878 
pPagî
->
ck±SyncFœgs
 = 
SQLITE_SYNC_NORMAL
;

4883 
pPagî
->
nExåa
 = (
u16
)nExtra;

4884 
pPagî
->
jou∫ÆSizeLimô
 = 
SQLITE_DEFAULT_JOURNAL_SIZE_LIMIT
;

4885 
	`as£π
–
	`isO≥n
(
pPagî
->
fd
Ë|| 
ãmpFûe
 );

4886 
	`£tSe˘‹Size
(
pPagî
);

4887 if–!
u£Jou∫Æ
 ){

4888 
pPagî
->
jou∫ÆMode
 = 
PAGER_JOURNALMODE_OFF
;

4889 }if–
memDb
 ){

4890 
pPagî
->
jou∫ÆMode
 = 
PAGER_JOURNALMODE_MEMORY
;

4894 
pPagî
->
xReöôî
 = 
xReöô
;

4895 
	`£tGëãrMëhod
(
pPagî
);

4899 *
µPagî
 = 
pPagî
;

4900  
SQLITE_OK
;

4901 
	}
}

4909 
	$d©aba£IsUnmoved
(
Pagî
 *
pPagî
){

4910 
bHasMoved
 = 0;

4911 
rc
;

4913 if–
pPagî
->
ãmpFûe
 )  
SQLITE_OK
;

4914 if–
pPagî
->
dbSize
==0 )  
SQLITE_OK
;

4915 
	`as£π
–
pPagî
->
zFûíame
 &&ÖPager->zFilename[0] );

4916 
rc
 = 
	`sqlôe3OsFûeC⁄åﬁ
(
pPagî
->
fd
, 
SQLITE_FCNTL_HAS_MOVED
, &
bHasMoved
);

4917 if–
rc
==
SQLITE_NOTFOUND
 ){

4921 
rc
 = 
SQLITE_OK
;

4922 }if–
rc
==
SQLITE_OK
 && 
bHasMoved
 ){

4923 
rc
 = 
SQLITE_READONLY_DBMOVED
;

4925  
rc
;

4926 
	}
}

4960 
	$hasHŸJou∫Æ
(
Pagî
 *
pPagî
, *
pExi°s
){

4961 
sqlôe3_vfs
 * c⁄° 
pVfs
 = 
pPagî
->pVfs;

4962 
rc
 = 
SQLITE_OK
;

4963 
exi°s
 = 1;

4964 
j∫lO≥n
 = !!
	`isO≥n
(
pPagî
->
jfd
);

4966 
	`as£π
–
pPagî
->
u£Jou∫Æ
 );

4967 
	`as£π
–
	`isO≥n
(
pPagî
->
fd
) );

4968 
	`as£π
–
pPagî
->
eSèã
==
PAGER_OPEN
 );

4970 
	`as£π
–
j∫lO≥n
==0 || ( 
	`sqlôe3OsDevi˚Ch¨a˘îi°ics
(
pPagî
->
jfd
) &

4971 
SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN


4974 *
pExi°s
 = 0;

4975 if–!
j∫lO≥n
 ){

4976 
rc
 = 
	`sqlôe3OsAc˚ss
(
pVfs
, 
pPagî
->
zJou∫Æ
, 
SQLITE_ACCESS_EXISTS
, &
exi°s
);

4978 if–
rc
==
SQLITE_OK
 && 
exi°s
 ){

4979 
locked
 = 0;

4989 
rc
 = 
	`sqlôe3OsCheckRe£rvedLock
(
pPagî
->
fd
, &
locked
);

4990 if–
rc
==
SQLITE_OK
 && !
locked
 ){

4991 
Pgno
 
nPage
;

4993 
	`as£π
–
pPagî
->
ãmpFûe
==0 );

4994 
rc
 = 
	`∑gîPagecou¡
(
pPagî
, &
nPage
);

4995 if–
rc
==
SQLITE_OK
 ){

5004 if–
nPage
==0 && !
j∫lO≥n
 ){

5005 
	`sqlôe3BegöBíignMÆloc
();

5006 if–
	`∑gîLockDb
(
pPagî
, 
RESERVED_LOCK
)==
SQLITE_OK
 ){

5007 
	`sqlôe3OsDñëe
(
pVfs
, 
pPagî
->
zJou∫Æ
, 0);

5008 if–!
pPagî
->
ex˛usiveMode
 ) 
	`∑gîU∆ockDb
’Pagî, 
SHARED_LOCK
);

5010 
	`sqlôe3EndBíignMÆloc
();

5018 if–!
j∫lO≥n
 ){

5019 
f
 = 
SQLITE_OPEN_READONLY
|
SQLITE_OPEN_MAIN_JOURNAL
;

5020 
rc
 = 
	`sqlôe3OsO≥n
(
pVfs
, 
pPagî
->
zJou∫Æ
,ÖPagî->
jfd
, 
f
, &f);

5022 if–
rc
==
SQLITE_OK
 ){

5023 
u8
 
fú°
 = 0;

5024 
rc
 = 
	`sqlôe3OsRód
(
pPagî
->
jfd
, (*)&
fú°
, 1, 0);

5025 if–
rc
==
SQLITE_IOERR_SHORT_READ
 ){

5026 
rc
 = 
SQLITE_OK
;

5028 if–!
j∫lO≥n
 ){

5029 
	`sqlôe3OsClo£
(
pPagî
->
jfd
);

5031 *
pExi°s
 = (
fú°
!=0);

5032 }if–
rc
==
SQLITE_CANTOPEN
 ){

5042 *
pExi°s
 = 1;

5043 
rc
 = 
SQLITE_OK
;

5050  
rc
;

5051 
	}
}

5080 
	$sqlôe3PagîSh¨edLock
(
Pagî
 *
pPagî
){

5081 
rc
 = 
SQLITE_OK
;

5087 
	`as£π
–
	`sqlôe3PˇcheRefCou¡
(
pPagî
->
pPCache
)==0 );

5088 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

5089 
	`as£π
–
pPagî
->
eSèã
==
PAGER_OPEN
 ||ÖPagî->eSèã==
PAGER_READER
 );

5090 
	`as£π
–
pPagî
->
îrCode
==
SQLITE_OK
 );

5092 if–!
	`∑gîU£WÆ
(
pPagî
Ë&&ÖPagî->
eSèã
==
PAGER_OPEN
 ){

5093 
bHŸJou∫Æ
 = 1;

5095 
	`as£π
–!
MEMDB
 );

5096 
	`as£π
–
pPagî
->
ãmpFûe
==0 ||ÖPagî->
eLock
==
EXCLUSIVE_LOCK
 );

5098 
rc
 = 
	`∑gî_waô_⁄_lock
(
pPagî
, 
SHARED_LOCK
);

5099 if–
rc
!=
SQLITE_OK
 ){

5100 
	`as£π
–
pPagî
->
eLock
==
NO_LOCK
 ||ÖPagî->eLock==
UNKNOWN_LOCK
 );

5101 
Áûed
;

5107 if–
pPagî
->
eLock
<=
SHARED_LOCK
 ){

5108 
rc
 = 
	`hasHŸJou∫Æ
(
pPagî
, &
bHŸJou∫Æ
);

5110 if–
rc
!=
SQLITE_OK
 ){

5111 
Áûed
;

5113 if–
bHŸJou∫Æ
 ){

5114 if–
pPagî
->
ªadO∆y
 ){

5115 
rc
 = 
SQLITE_READONLY_ROLLBACK
;

5116 
Áûed
;

5134 
rc
 = 
	`∑gîLockDb
(
pPagî
, 
EXCLUSIVE_LOCK
);

5135 if–
rc
!=
SQLITE_OK
 ){

5136 
Áûed
;

5152 if–!
	`isO≥n
(
pPagî
->
jfd
) ){

5153 
sqlôe3_vfs
 * c⁄° 
pVfs
 = 
pPagî
->pVfs;

5154 
bExi°s
;

5155 
rc
 = 
	`sqlôe3OsAc˚ss
(

5156 
pVfs
, 
pPagî
->
zJou∫Æ
, 
SQLITE_ACCESS_EXISTS
, &
bExi°s
);

5157 if–
rc
==
SQLITE_OK
 && 
bExi°s
 ){

5158 
fout
 = 0;

5159 
f
 = 
SQLITE_OPEN_READWRITE
|
SQLITE_OPEN_MAIN_JOURNAL
;

5160 
	`as£π
–!
pPagî
->
ãmpFûe
 );

5161 
rc
 = 
	`sqlôe3OsO≥n
(
pVfs
, 
pPagî
->
zJou∫Æ
,ÖPagî->
jfd
, 
f
, &
fout
);

5162 
	`as£π
–
rc
!=
SQLITE_OK
 || 
	`isO≥n
(
pPagî
->
jfd
) );

5163 if–
rc
==
SQLITE_OK
 && 
fout
&
SQLITE_OPEN_READONLY
 ){

5164 
rc
 = 
SQLITE_CANTOPEN_BKPT
;

5165 
	`sqlôe3OsClo£
(
pPagî
->
jfd
);

5178 if–
	`isO≥n
(
pPagî
->
jfd
) ){

5179 
	`as£π
–
rc
==
SQLITE_OK
 );

5180 
rc
 = 
	`∑gîSyncHŸJou∫Æ
(
pPagî
);

5181 if–
rc
==
SQLITE_OK
 ){

5182 
rc
 = 
	`∑gî_∂ayback
(
pPagî
, !pPagî->
ãmpFûe
);

5183 
pPagî
->
eSèã
 = 
PAGER_OPEN
;

5185 }if–!
pPagî
->
ex˛usiveMode
 ){

5186 
	`∑gîU∆ockDb
(
pPagî
, 
SHARED_LOCK
);

5189 if–
rc
!=
SQLITE_OK
 ){

5206 
	`∑gî_îr‹
(
pPagî
, 
rc
);

5207 
Áûed
;

5210 
	`as£π
–
pPagî
->
eSèã
==
PAGER_OPEN
 );

5211 
	`as£π
–(
pPagî
->
eLock
==
SHARED_LOCK
)

5212 || (
pPagî
->
ex˛usiveMode
 &&ÖPagî->
eLock
>
SHARED_LOCK
)

5216 if–!
pPagî
->
ãmpFûe
 &&ÖPagî->
hasHñdSh¨edLock
 ){

5233 
Pgno
 
nPage
 = 0;

5234 
dbFûeVîs
[(
pPagî
->dbFileVers)];

5236 
rc
 = 
	`∑gîPagecou¡
(
pPagî
, &
nPage
);

5237 if–
rc
 ) 
Áûed
;

5239 if–
nPage
>0 ){

5240 
	`IOTRACE
(("CKVERS %∞%d\n", 
pPagî
, (
dbFûeVîs
)));

5241 
rc
 = 
	`sqlôe3OsRód
(
pPagî
->
fd
, &
dbFûeVîs
, (dbFileVers), 24);

5242 if–
rc
!=
SQLITE_OK
 &&Ñc!=
SQLITE_IOERR_SHORT_READ
 ){

5243 
Áûed
;

5246 
	`mem£t
(
dbFûeVîs
, 0, (dbFileVers));

5249 if–
	`memcmp
(
pPagî
->
dbFûeVîs
, dbFileVers, (dbFileVers))!=0 ){

5250 
	`∑gî_ª£t
(
pPagî
);

5258 if–
	`USEFETCH
(
pPagî
) ){

5259 
	`sqlôe3OsUn„tch
(
pPagî
->
fd
, 0, 0);

5267 
rc
 = 
	`∑gîO≥nWÆIfPª£¡
(
pPagî
);

5268 #i‚de‡
SQLITE_OMIT_WAL


5269 
	`as£π
–
pPagî
->
pWÆ
==0 || 
rc
==
SQLITE_OK
 );

5273 if–
	`∑gîU£WÆ
(
pPagî
) ){

5274 
	`as£π
–
rc
==
SQLITE_OK
 );

5275 
rc
 = 
	`∑gîBegöRódTønß˘i⁄
(
pPagî
);

5278 if–
pPagî
->
ãmpFûe
==0 &&ÖPagî->
eSèã
==
PAGER_OPEN
 && 
rc
==
SQLITE_OK
 ){

5279 
rc
 = 
	`∑gîPagecou¡
(
pPagî
, &pPagî->
dbSize
);

5282 
Áûed
:

5283 if–
rc
!=
SQLITE_OK
 ){

5284 
	`as£π
–!
MEMDB
 );

5285 
	`∑gî_u∆ock
(
pPagî
);

5286 
	`as£π
–
pPagî
->
eSèã
==
PAGER_OPEN
 );

5288 
pPagî
->
eSèã
 = 
PAGER_READER
;

5289 
pPagî
->
hasHñdSh¨edLock
 = 1;

5291  
rc
;

5292 
	}
}

5302 
	$∑gîU∆ockIfUnu£d
(
Pagî
 *
pPagî
){

5303 if–
pPagî
->
nMm≠Out
==0 && (
	`sqlôe3PˇcheRefCou¡
’Pagî->
pPCache
)==0) ){

5304 
	`∑gîU∆ockAndRﬁlback
(
pPagî
);

5306 
	}
}

5365 
	$gëPageN‹mÆ
(

5366 
Pagî
 *
pPagî
,

5367 
Pgno
 
pgno
,

5368 
DbPage
 **
µPage
,

5369 
Êags


5371 
rc
 = 
SQLITE_OK
;

5372 
PgHdr
 *
pPg
;

5373 
u8
 
noC⁄ã¡
;

5374 
sqlôe3_pˇche_∑ge
 *
pBa£
;

5376 
	`as£π
–
pPagî
->
îrCode
==
SQLITE_OK
 );

5377 
	`as£π
–
pPagî
->
eSèã
>=
PAGER_READER
 );

5378 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

5379 
	`as£π
–
pPagî
->
hasHñdSh¨edLock
==1 );

5381 if–
pgno
==0 )  
SQLITE_CORRUPT_BKPT
;

5382 
pBa£
 = 
	`sqlôe3PˇcheFëch
(
pPagî
->
pPCache
, 
pgno
, 3);

5383 if–
pBa£
==0 ){

5384 
pPg
 = 0;

5385 
rc
 = 
	`sqlôe3PˇcheFëchSåess
(
pPagî
->
pPCache
, 
pgno
, &
pBa£
);

5386 if–
rc
!=
SQLITE_OK
 ) 
∑gî_acquúe_îr
;

5387 if–
pBa£
==0 ){

5388 
rc
 = 
SQLITE_NOMEM_BKPT
;

5389 
∑gî_acquúe_îr
;

5392 
pPg
 = *
µPage
 = 
	`sqlôe3PˇcheFëchFöish
(
pPagî
->
pPCache
, 
pgno
, 
pBa£
);

5393 
	`as£π
–
pPg
==(*
µPage
) );

5394 
	`as£π
–
pPg
->
pgno
==pgno );

5395 
	`as£π
–
pPg
->
pPagî
==pPager ||ÖPg->pPager==0 );

5397 
noC⁄ã¡
 = (
Êags
 & 
PAGER_GET_NOCONTENT
)!=0;

5398 if–
pPg
->
pPagî
 && !
noC⁄ã¡
 ){

5401 
	`as£π
–
pgno
<=
PAGER_MAX_PGNO
 &&Ögno!=
	`PAGER_MJ_PGNO
(
pPagî
) );

5402 
pPagî
->
aSèt
[
PAGER_STAT_HIT
]++;

5403  
SQLITE_OK
;

5412 if–
pgno
>
PAGER_MAX_PGNO
 ||Ögno==
	`PAGER_MJ_PGNO
(
pPagî
) ){

5413 
rc
 = 
SQLITE_CORRUPT_BKPT
;

5414 
∑gî_acquúe_îr
;

5417 
pPg
->
pPagî
 =ÖPager;

5419 
	`as£π
–!
	`isO≥n
(
pPagî
->
fd
Ë|| !
MEMDB
 );

5420 if–!
	`isO≥n
(
pPagî
->
fd
Ë||ÖPagî->
dbSize
<
pgno
 || 
noC⁄ã¡
 ){

5421 if–
pgno
>
pPagî
->
mxPgno
 ){

5422 
rc
 = 
SQLITE_FULL
;

5423 
∑gî_acquúe_îr
;

5425 if–
noC⁄ã¡
 ){

5432 
	`sqlôe3BegöBíignMÆloc
();

5433 if–
pgno
<=
pPagî
->
dbOrigSize
 ){

5434 
	`TESTONLY
–
rc
 = ) 
	`sqlôe3BôvecSë
(
pPagî
->
pInJou∫Æ
, 
pgno
);

5435 
	`ã°ˇ£
–
rc
==
SQLITE_NOMEM
 );

5437 
	`TESTONLY
–
rc
 = ) 
	`addToSavïoötBôvecs
(
pPagî
, 
pgno
);

5438 
	`ã°ˇ£
–
rc
==
SQLITE_NOMEM
 );

5439 
	`sqlôe3EndBíignMÆloc
();

5441 
	`mem£t
(
pPg
->
pD©a
, 0, 
pPagî
->
∑geSize
);

5442 
	`IOTRACE
(("ZERO %∞%d\n", 
pPagî
, 
pgno
));

5444 
u32
 
iFøme
 = 0;

5445 if–
	`∑gîU£WÆ
(
pPagî
) ){

5446 
rc
 = 
	`sqlôe3WÆFödFøme
(
pPagî
->
pWÆ
, 
pgno
, &
iFøme
);

5447 if–
rc
!=
SQLITE_OK
 ) 
∑gî_acquúe_îr
;

5449 
	`as£π
–
pPg
->
pPagî
==pPager );

5450 
pPagî
->
aSèt
[
PAGER_STAT_MISS
]++;

5451 
rc
 = 
	`ªadDbPage
(
pPg
, 
iFøme
);

5452 if–
rc
!=
SQLITE_OK
 ){

5453 
∑gî_acquúe_îr
;

5456 
	`∑gî_£t_∑gehash
(
pPg
);

5458  
SQLITE_OK
;

5460 
∑gî_acquúe_îr
:

5461 
	`as£π
–
rc
!=
SQLITE_OK
 );

5462 if–
pPg
 ){

5463 
	`sqlôe3PˇcheDr›
(
pPg
);

5465 
	`∑gîU∆ockIfUnu£d
(
pPagî
);

5466 *
µPage
 = 0;

5467  
rc
;

5468 
	}
}

5470 #i‡
SQLITE_MAX_MMAP_SIZE
>0

5472 
	$gëPageMM≠
(

5473 
Pagî
 *
pPagî
,

5474 
Pgno
 
pgno
,

5475 
DbPage
 **
µPage
,

5476 
Êags


5478 
rc
 = 
SQLITE_OK
;

5479 
PgHdr
 *
pPg
 = 0;

5480 
u32
 
iFøme
 = 0;

5486 c⁄° 
bMm≠Ok
 = (
pgno
>1

5487 && (
pPagî
->
eSèã
==
PAGER_READER
 || (
Êags
 & 
PAGER_GET_READONLY
))

5490 
	`as£π
–
	`USEFETCH
(
pPagî
) );

5491 #ifde‡
SQLITE_HAS_CODEC


5492 
	`as£π
–
pPagî
->
xCodec
==0 );

5499 if–
pgno
<=1 &&Ögno==0 ){

5500  
SQLITE_CORRUPT_BKPT
;

5502 
	`as£π
–
pPagî
->
eSèã
>=
PAGER_READER
 );

5503 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

5504 
	`as£π
–
pPagî
->
hasHñdSh¨edLock
==1 );

5505 
	`as£π
–
pPagî
->
îrCode
==
SQLITE_OK
 );

5507 if–
bMm≠Ok
 && 
	`∑gîU£WÆ
(
pPagî
) ){

5508 
rc
 = 
	`sqlôe3WÆFödFøme
(
pPagî
->
pWÆ
, 
pgno
, &
iFøme
);

5509 if–
rc
!=
SQLITE_OK
 ){

5510 *
µPage
 = 0;

5511  
rc
;

5514 if–
bMm≠Ok
 && 
iFøme
==0 ){

5515 *
pD©a
 = 0;

5516 
rc
 = 
	`sqlôe3OsFëch
(
pPagî
->
fd
,

5517 (
i64
)(
pgno
-1Ë* 
pPagî
->
∑geSize
,ÖPagî->∑geSize, &
pD©a


5519 if–
rc
==
SQLITE_OK
 && 
pD©a
 ){

5520 if–
pPagî
->
eSèã
>
PAGER_READER
 ||ÖPagî->
ãmpFûe
 ){

5521 
pPg
 = 
	`sqlôe3PagîLookup
(
pPagî
, 
pgno
);

5523 if–
pPg
==0 ){

5524 
rc
 = 
	`∑gîAcquúeM≠Page
(
pPagî
, 
pgno
, 
pD©a
, &
pPg
);

5526 
	`sqlôe3OsUn„tch
(
pPagî
->
fd
, (
i64
)(
pgno
-1)*pPagî->
∑geSize
, 
pD©a
);

5528 if–
pPg
 ){

5529 
	`as£π
–
rc
==
SQLITE_OK
 );

5530 *
µPage
 = 
pPg
;

5531  
SQLITE_OK
;

5534 if–
rc
!=
SQLITE_OK
 ){

5535 *
µPage
 = 0;

5536  
rc
;

5539  
	`gëPageN‹mÆ
(
pPagî
, 
pgno
, 
µPage
, 
Êags
);

5540 
	}
}

5544 
	$gëPageEº‹
(

5545 
Pagî
 *
pPagî
,

5546 
Pgno
 
pgno
,

5547 
DbPage
 **
µPage
,

5548 
Êags


5550 
	`UNUSED_PARAMETER
(
pgno
);

5551 
	`UNUSED_PARAMETER
(
Êags
);

5552 
	`as£π
–
pPagî
->
îrCode
!=
SQLITE_OK
 );

5553 *
µPage
 = 0;

5554  
pPagî
->
îrCode
;

5555 
	}
}

5560 
	$sqlôe3PagîGë
(

5561 
Pagî
 *
pPagî
,

5562 
Pgno
 
pgno
,

5563 
DbPage
 **
µPage
,

5564 
Êags


5566  
pPagî
->
	`xGë
’Pagî, 
pgno
, 
µPage
, 
Êags
);

5567 
	}
}

5580 
DbPage
 *
	$sqlôe3PagîLookup
(
Pagî
 *
pPagî
, 
Pgno
 
pgno
){

5581 
sqlôe3_pˇche_∑ge
 *
pPage
;

5582 
	`as£π
–
pPagî
!=0 );

5583 
	`as£π
–
pgno
!=0 );

5584 
	`as£π
–
pPagî
->
pPCache
!=0 );

5585 
pPage
 = 
	`sqlôe3PˇcheFëch
(
pPagî
->
pPCache
, 
pgno
, 0);

5586 
	`as£π
–
pPage
==0 || 
pPagî
->
hasHñdSh¨edLock
 );

5587 if–
pPage
==0 )  0;

5588  
	`sqlôe3PˇcheFëchFöish
(
pPagî
->
pPCache
, 
pgno
, 
pPage
);

5589 
	}
}

5599 
	$sqlôe3PagîUƒefNŸNuŒ
(
DbPage
 *
pPg
){

5600 
Pagî
 *
pPagî
;

5601 
	`as£π
–
pPg
!=0 );

5602 
pPagî
 = 
pPg
->pPager;

5603 if–
pPg
->
Êags
 & 
PGHDR_MMAP
 ){

5604 
	`∑gîRñó£M≠Page
(
pPg
);

5606 
	`sqlôe3PˇcheRñó£
(
pPg
);

5608 
	`∑gîU∆ockIfUnu£d
(
pPagî
);

5609 
	}
}

5610 
	$sqlôe3PagîUƒef
(
DbPage
 *
pPg
){

5611 if–
pPg
 ) 
	`sqlôe3PagîUƒefNŸNuŒ
(pPg);

5612 
	}
}

5636 
	$∑gî_›í_jou∫Æ
(
Pagî
 *
pPagî
){

5637 
rc
 = 
SQLITE_OK
;

5638 
sqlôe3_vfs
 * c⁄° 
pVfs
 = 
pPagî
->pVfs;

5640 
	`as£π
–
pPagî
->
eSèã
==
PAGER_WRITER_LOCKED
 );

5641 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

5642 
	`as£π
–
pPagî
->
pInJou∫Æ
==0 );

5647 if–
	`NEVER
(
pPagî
->
îrCode
) ) ÖPager->errCode;

5649 if–!
	`∑gîU£WÆ
(
pPagî
Ë&&ÖPagî->
jou∫ÆMode
!=
PAGER_JOURNALMODE_OFF
 ){

5650 
pPagî
->
pInJou∫Æ
 = 
	`sqlôe3BôvecCª©e
’Pagî->
dbSize
);

5651 if–
pPagî
->
pInJou∫Æ
==0 ){

5652  
SQLITE_NOMEM_BKPT
;

5656 if–!
	`isO≥n
(
pPagî
->
jfd
) ){

5657 if–
pPagî
->
jou∫ÆMode
==
PAGER_JOURNALMODE_MEMORY
 ){

5658 
	`sqlôe3MemJou∫ÆO≥n
(
pPagî
->
jfd
);

5660 
Êags
 = 
SQLITE_OPEN_READWRITE
|
SQLITE_OPEN_CREATE
;

5661 
nSpûl
;

5663 if–
pPagî
->
ãmpFûe
 ){

5664 
Êags
 |(
SQLITE_OPEN_DELETEONCLOSE
|
SQLITE_OPEN_TEMP_JOURNAL
);

5665 
nSpûl
 = 
sqlôe3C⁄fig
.
nStmtSpûl
;

5667 
Êags
 |
SQLITE_OPEN_MAIN_JOURNAL
;

5668 
nSpûl
 = 
	`j∫lBuf„rSize
(
pPagî
);

5673 
rc
 = 
	`d©aba£IsUnmoved
(
pPagî
);

5674 if–
rc
==
SQLITE_OK
 ){

5675 
rc
 = 
	`sqlôe3Jou∫ÆO≥n
 (

5676 
pVfs
, 
pPagî
->
zJou∫Æ
,ÖPagî->
jfd
, 
Êags
, 
nSpûl


5680 
	`as£π
–
rc
!=
SQLITE_OK
 || 
	`isO≥n
(
pPagî
->
jfd
) );

5687 if–
rc
==
SQLITE_OK
 ){

5689 
pPagî
->
nRec
 = 0;

5690 
pPagî
->
jou∫ÆOff
 = 0;

5691 
pPagî
->
£tMa°î
 = 0;

5692 
pPagî
->
jou∫ÆHdr
 = 0;

5693 
rc
 = 
	`wrôeJou∫ÆHdr
(
pPagî
);

5697 if–
rc
!=
SQLITE_OK
 ){

5698 
	`sqlôe3BôvecDe°roy
(
pPagî
->
pInJou∫Æ
);

5699 
pPagî
->
pInJou∫Æ
 = 0;

5701 
	`as£π
–
pPagî
->
eSèã
==
PAGER_WRITER_LOCKED
 );

5702 
pPagî
->
eSèã
 = 
PAGER_WRITER_CACHEMOD
;

5705  
rc
;

5706 
	}
}

5725 
	$sqlôe3PagîBegö
(
Pagî
 *
pPagî
, 
exFœg
, 
subjInMem‹y
){

5726 
rc
 = 
SQLITE_OK
;

5728 if–
pPagî
->
îrCode
 ) ÖPager->errCode;

5729 
	`as£π
–
pPagî
->
eSèã
>=
PAGER_READER
 &&ÖPagî->eSèã<
PAGER_ERROR
 );

5730 
pPagî
->
subjInMem‹y
 = (
u8
)subjInMemory;

5732 if–
	`ALWAYS
(
pPagî
->
eSèã
==
PAGER_READER
) ){

5733 
	`as£π
–
pPagî
->
pInJou∫Æ
==0 );

5735 if–
	`∑gîU£WÆ
(
pPagî
) ){

5739 if–
pPagî
->
ex˛usiveMode
 && 
	`sqlôe3WÆEx˛usiveMode
’Pagî->
pWÆ
, -1) ){

5740 
rc
 = 
	`∑gîLockDb
(
pPagî
, 
EXCLUSIVE_LOCK
);

5741 if–
rc
!=
SQLITE_OK
 ){

5742  
rc
;

5744 ()
	`sqlôe3WÆEx˛usiveMode
(
pPagî
->
pWÆ
, 1);

5752 
rc
 = 
	`sqlôe3WÆBegöWrôeTønß˘i⁄
(
pPagî
->
pWÆ
);

5759 
rc
 = 
	`∑gîLockDb
(
pPagî
, 
RESERVED_LOCK
);

5760 if–
rc
==
SQLITE_OK
 && 
exFœg
 ){

5761 
rc
 = 
	`∑gî_waô_⁄_lock
(
pPagî
, 
EXCLUSIVE_LOCK
);

5765 if–
rc
==
SQLITE_OK
 ){

5775 
pPagî
->
eSèã
 = 
PAGER_WRITER_LOCKED
;

5776 
pPagî
->
dbHötSize
 =ÖPagî->
dbSize
;

5777 
pPagî
->
dbFûeSize
 =ÖPagî->
dbSize
;

5778 
pPagî
->
dbOrigSize
 =ÖPagî->
dbSize
;

5779 
pPagî
->
jou∫ÆOff
 = 0;

5782 
	`as£π
–
rc
==
SQLITE_OK
 || 
pPagî
->
eSèã
==
PAGER_READER
 );

5783 
	`as£π
–
rc
!=
SQLITE_OK
 || 
pPagî
->
eSèã
==
PAGER_WRITER_LOCKED
 );

5784 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

5787 
	`PAGERTRACE
(("TRANSACTION %d\n", 
	`PAGERID
(
pPagî
)));

5788  
rc
;

5789 
	}
}

5794 
SQLITE_NOINLINE
 
	$∑gîAddPageToRﬁlbackJou∫Æ
(
PgHdr
 *
pPg
){

5795 
Pagî
 *
pPagî
 = 
pPg
->pPager;

5796 
rc
;

5797 
u32
 
cksum
;

5798 *
pD©a2
;

5799 
i64
 
iOff
 = 
pPagî
->
jou∫ÆOff
;

5804 
	`as£π
–
pPg
->
pgno
!=
	`PAGER_MJ_PGNO
(
pPagî
) );

5806 
	`as£π
–
pPagî
->
jou∫ÆHdr
<ıPagî->
jou∫ÆOff
 );

5807 
	`CODEC2
(
pPagî
, 
pPg
->
pD©a
,ÖPg->
pgno
, 7,  
SQLITE_NOMEM_BKPT
, 
pD©a2
);

5808 
cksum
 = 
	`∑gî_cksum
(
pPagî
, (
u8
*)
pD©a2
);

5817 
pPg
->
Êags
 |
PGHDR_NEED_SYNC
;

5819 
rc
 = 
	`wrôe32bôs
(
pPagî
->
jfd
, 
iOff
, 
pPg
->
pgno
);

5820 if–
rc
!=
SQLITE_OK
 ) Ñc;

5821 
rc
 = 
	`sqlôe3OsWrôe
(
pPagî
->
jfd
, 
pD©a2
,ÖPagî->
∑geSize
, 
iOff
+4);

5822 if–
rc
!=
SQLITE_OK
 ) Ñc;

5823 
rc
 = 
	`wrôe32bôs
(
pPagî
->
jfd
, 
iOff
+pPagî->
∑geSize
+4, 
cksum
);

5824 if–
rc
!=
SQLITE_OK
 ) Ñc;

5826 
	`IOTRACE
(("JOUT %∞%d %Œd %d\n", 
pPagî
, 
pPg
->
pgno
,

5827 
pPagî
->
jou∫ÆOff
,ÖPagî->
∑geSize
));

5828 
	`PAGER_INCR
(
sqlôe3_∑gî_wrôej_cou¡
);

5829 
	`PAGERTRACE
(("JOURNAL %dÖage %dÇeedSync=%d hash(%08x)\n",

5830 
	`PAGERID
(
pPagî
), 
pPg
->
pgno
,

5831 ((
pPg
->
Êags
&
PGHDR_NEED_SYNC
)?1:0), 
	`∑gî_∑gehash
(pPg)));

5833 
pPagî
->
jou∫ÆOff
 +8 +ÖPagî->
∑geSize
;

5834 
pPagî
->
nRec
++;

5835 
	`as£π
–
pPagî
->
pInJou∫Æ
!=0 );

5836 
rc
 = 
	`sqlôe3BôvecSë
(
pPagî
->
pInJou∫Æ
, 
pPg
->
pgno
);

5837 
	`ã°ˇ£
–
rc
==
SQLITE_NOMEM
 );

5838 
	`as£π
–
rc
==
SQLITE_OK
 ||Ñc==
SQLITE_NOMEM
 );

5839 
rc
 |
	`addToSavïoötBôvecs
(
pPagî
, 
pPg
->
pgno
);

5840 
	`as£π
–
rc
==
SQLITE_OK
 ||Ñc==
SQLITE_NOMEM
 );

5841  
rc
;

5842 
	}
}

5851 
	$∑gî_wrôe
(
PgHdr
 *
pPg
){

5852 
Pagî
 *
pPagî
 = 
pPg
->pPager;

5853 
rc
 = 
SQLITE_OK
;

5859 
	`as£π
–
pPagî
->
eSèã
==
PAGER_WRITER_LOCKED


5860 || 
pPagî
->
eSèã
==
PAGER_WRITER_CACHEMOD


5861 || 
pPagî
->
eSèã
==
PAGER_WRITER_DBMOD


5863 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

5864 
	`as£π
–
pPagî
->
îrCode
==0 );

5865 
	`as£π
–
pPagî
->
ªadO∆y
==0 );

5866 
	`CHECK_PAGE
(
pPg
);

5877 if–
pPagî
->
eSèã
==
PAGER_WRITER_LOCKED
 ){

5878 
rc
 = 
	`∑gî_›í_jou∫Æ
(
pPagî
);

5879 if–
rc
!=
SQLITE_OK
 ) Ñc;

5881 
	`as£π
–
pPagî
->
eSèã
>=
PAGER_WRITER_CACHEMOD
 );

5882 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

5885 
	`sqlôe3PˇcheMakeDúty
(
pPg
);

5891 
	`as£π
–(
pPagî
->
pInJou∫Æ
!=0Ë=
	`isO≥n
’Pagî->
jfd
) );

5892 if–
pPagî
->
pInJou∫Æ
!=0

5893 && 
	`sqlôe3BôvecTe°NŸNuŒ
(
pPagî
->
pInJou∫Æ
, 
pPg
->
pgno
)==0

5895 
	`as£π
–
	`∑gîU£WÆ
(
pPagî
)==0 );

5896 if–
pPg
->
pgno
<=
pPagî
->
dbOrigSize
 ){

5897 
rc
 = 
	`∑gîAddPageToRﬁlbackJou∫Æ
(
pPg
);

5898 if–
rc
!=
SQLITE_OK
 ){

5899  
rc
;

5902 if–
pPagî
->
eSèã
!=
PAGER_WRITER_DBMOD
 ){

5903 
pPg
->
Êags
 |
PGHDR_NEED_SYNC
;

5905 
	`PAGERTRACE
(("APPEND %dÖage %dÇeedSync=%d\n",

5906 
	`PAGERID
(
pPagî
), 
pPg
->
pgno
,

5907 ((
pPg
->
Êags
&
PGHDR_NEED_SYNC
)?1:0)));

5916 
pPg
->
Êags
 |
PGHDR_WRITEABLE
;

5921 if–
pPagî
->
nSavïoöt
>0 ){

5922 
rc
 = 
	`subjou∫ÆPageIfRequúed
(
pPg
);

5926 if–
pPagî
->
dbSize
<
pPg
->
pgno
 ){

5927 
pPagî
->
dbSize
 = 
pPg
->
pgno
;

5929  
rc
;

5930 
	}
}

5943 
SQLITE_NOINLINE
 
	$∑gîWrôeL¨geSe˘‹
(
PgHdr
 *
pPg
){

5944 
rc
 = 
SQLITE_OK
;

5945 
Pgno
 
nPageCou¡
;

5946 
Pgno
 
pg1
;

5947 
nPage
 = 0;

5948 
ii
;

5949 
√edSync
 = 0;

5950 
Pagî
 *
pPagî
 = 
pPg
->pPager;

5951 
Pgno
 
nPagePîSe˘‹
 = (
pPagî
->
£˘‹Size
/pPagî->
∑geSize
);

5957 
	`as£π
–!
MEMDB
 );

5958 
	`as£π
–(
pPagî
->
doNŸSpûl
 & 
SPILLFLAG_NOSYNC
)==0 );

5959 
pPagî
->
doNŸSpûl
 |
SPILLFLAG_NOSYNC
;

5965 
pg1
 = ((
pPg
->
pgno
-1Ë& ~(
nPagePîSe˘‹
-1)) + 1;

5967 
nPageCou¡
 = 
pPagî
->
dbSize
;

5968 if–
pPg
->
pgno
>
nPageCou¡
 ){

5969 
nPage
 = (
pPg
->
pgno
 - 
pg1
)+1;

5970 }if–(
pg1
+
nPagePîSe˘‹
-1)>
nPageCou¡
 ){

5971 
nPage
 = 
nPageCou¡
+1-
pg1
;

5973 
nPage
 = 
nPagePîSe˘‹
;

5975 
	`as£π
(
nPage
>0);

5976 
	`as£π
(
pg1
<=
pPg
->
pgno
);

5977 
	`as£π
((
pg1
+
nPage
)>
pPg
->
pgno
);

5979 
ii
=0; ii<
nPage
 && 
rc
==
SQLITE_OK
; ii++){

5980 
Pgno
 
pg
 = 
pg1
+
ii
;

5981 
PgHdr
 *
pPage
;

5982 if–
pg
==
pPg
->
pgno
 || !
	`sqlôe3BôvecTe°
(
pPagî
->
pInJou∫Æ
,Ög) ){

5983 if–
pg
!=
	`PAGER_MJ_PGNO
(
pPagî
) ){

5984 
rc
 = 
	`sqlôe3PagîGë
(
pPagî
, 
pg
, &
pPage
, 0);

5985 if–
rc
==
SQLITE_OK
 ){

5986 
rc
 = 
	`∑gî_wrôe
(
pPage
);

5987 if–
pPage
->
Êags
&
PGHDR_NEED_SYNC
 ){

5988 
√edSync
 = 1;

5990 
	`sqlôe3PagîUƒefNŸNuŒ
(
pPage
);

5993 }if–(
pPage
 = 
	`sqlôe3PagîLookup
(
pPagî
, 
pg
))!=0 ){

5994 if–
pPage
->
Êags
&
PGHDR_NEED_SYNC
 ){

5995 
√edSync
 = 1;

5997 
	`sqlôe3PagîUƒefNŸNuŒ
(
pPage
);

6007 if–
rc
==
SQLITE_OK
 && 
√edSync
 ){

6008 
	`as£π
–!
MEMDB
 );

6009 
ii
=0; ii<
nPage
; ii++){

6010 
PgHdr
 *
pPage
 = 
	`sqlôe3PagîLookup
(
pPagî
, 
pg1
+
ii
);

6011 if–
pPage
 ){

6012 
pPage
->
Êags
 |
PGHDR_NEED_SYNC
;

6013 
	`sqlôe3PagîUƒefNŸNuŒ
(
pPage
);

6018 
	`as£π
–(
pPagî
->
doNŸSpûl
 & 
SPILLFLAG_NOSYNC
)!=0 );

6019 
pPagî
->
doNŸSpûl
 &~
SPILLFLAG_NOSYNC
;

6020  
rc
;

6021 
	}
}

6037 
	$sqlôe3PagîWrôe
(
PgHdr
 *
pPg
){

6038 
Pagî
 *
pPagî
 = 
pPg
->pPager;

6039 
	`as£π
–(
pPg
->
Êags
 & 
PGHDR_MMAP
)==0 );

6040 
	`as£π
–
pPagî
->
eSèã
>=
PAGER_WRITER_LOCKED
 );

6041 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

6042 if–(
pPg
->
Êags
 & 
PGHDR_WRITEABLE
)!=0 && 
pPagî
->
dbSize
>ıPg->
pgno
 ){

6043 if–
pPagî
->
nSavïoöt
 )  
	`subjou∫ÆPageIfRequúed
(
pPg
);

6044  
SQLITE_OK
;

6045 }if–
pPagî
->
îrCode
 ){

6046  
pPagî
->
îrCode
;

6047 }if–
pPagî
->
£˘‹Size
 > (
u32
ÌPagî->
∑geSize
 ){

6048 
	`as£π
–
pPagî
->
ãmpFûe
==0 );

6049  
	`∑gîWrôeL¨geSe˘‹
(
pPg
);

6051  
	`∑gî_wrôe
(
pPg
);

6053 
	}
}

6060 #i‚de‡
NDEBUG


6061 
	$sqlôe3PagîIswrôóbÀ
(
DbPage
 *
pPg
){

6062  
pPg
->
Êags
 & 
PGHDR_WRITEABLE
;

6063 
	}
}

6086 
	$sqlôe3PagîD⁄tWrôe
(
PgHdr
 *
pPg
){

6087 
Pagî
 *
pPagî
 = 
pPg
->pPager;

6088 if–!
pPagî
->
ãmpFûe
 && (
pPg
->
Êags
&
PGHDR_DIRTY
Ë&&ÖPagî->
nSavïoöt
==0 ){

6089 
	`PAGERTRACE
(("DONT_WRITEÖagê%d o‡%d\n", 
pPg
->
pgno
, 
	`PAGERID
(
pPagî
)));

6090 
	`IOTRACE
(("CLEAN %∞%d\n", 
pPagî
, 
pPg
->
pgno
))

6091 
pPg
->
Êags
 |
PGHDR_DONT_WRITE
;

6092 
pPg
->
Êags
 &~
PGHDR_WRITEABLE
;

6093 
	`ã°ˇ£
–
pPg
->
Êags
 & 
PGHDR_NEED_SYNC
 );

6094 
	`∑gî_£t_∑gehash
(
pPg
);

6096 
	}
}

6120 
	$∑gî_ö¸_ch™gecou¡î
(
Pagî
 *
pPagî
, 
isDúe˘Mode
){

6121 
rc
 = 
SQLITE_OK
;

6123 
	`as£π
–
pPagî
->
eSèã
==
PAGER_WRITER_CACHEMOD


6124 || 
pPagî
->
eSèã
==
PAGER_WRITER_DBMOD


6126 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

6138 #i‚de‡
SQLITE_ENABLE_ATOMIC_WRITE


6139 
	#DIRECT_MODE
 0

	)

6140 
	`as£π
–
isDúe˘Mode
==0 );

6141 
	`UNUSED_PARAMETER
(
isDúe˘Mode
);

6143 
	#DIRECT_MODE
 
isDúe˘Mode


	)

6146 if–!
pPagî
->
ch™geCou¡D⁄e
 && 
	`ALWAYS
’Pagî->
dbSize
>0) ){

6147 
PgHdr
 *
pPgHdr
;

6149 
	`as£π
–!
pPagî
->
ãmpFûe
 && 
	`isO≥n
’Pagî->
fd
) );

6152 
rc
 = 
	`sqlôe3PagîGë
(
pPagî
, 1, &
pPgHdr
, 0);

6153 
	`as£π
–
pPgHdr
==0 || 
rc
==
SQLITE_OK
 );

6160 if–!
DIRECT_MODE
 && 
	`ALWAYS
(
rc
==
SQLITE_OK
) ){

6161 
rc
 = 
	`sqlôe3PagîWrôe
(
pPgHdr
);

6164 if–
rc
==
SQLITE_OK
 ){

6166 
	`∑gî_wrôe_ch™gecou¡î
(
pPgHdr
);

6169 if–
DIRECT_MODE
 ){

6170 c⁄° *
zBuf
;

6171 
	`as£π
–
pPagî
->
dbFûeSize
>0 );

6172 
	`CODEC2
(
pPagî
, 
pPgHdr
->
pD©a
, 1, 6, 
rc
=
SQLITE_NOMEM_BKPT
, 
zBuf
);

6173 if–
rc
==
SQLITE_OK
 ){

6174 
rc
 = 
	`sqlôe3OsWrôe
(
pPagî
->
fd
, 
zBuf
,ÖPagî->
∑geSize
, 0);

6175 
pPagî
->
aSèt
[
PAGER_STAT_WRITE
]++;

6177 if–
rc
==
SQLITE_OK
 ){

6181 c⁄° *
pC›y
 = (c⁄° *)&((c⁄° *)
zBuf
)[24];

6182 
	`mem˝y
(&
pPagî
->
dbFûeVîs
, 
pC›y
, (pPager->dbFileVers));

6183 
pPagî
->
ch™geCou¡D⁄e
 = 1;

6186 
pPagî
->
ch™geCou¡D⁄e
 = 1;

6191 
	`sqlôe3PagîUƒef
(
pPgHdr
);

6193  
rc
;

6194 
	}
}

6203 
	$sqlôe3PagîSync
(
Pagî
 *
pPagî
, c⁄° *
zMa°î
){

6204 
rc
 = 
SQLITE_OK
;

6206 if–
	`isO≥n
(
pPagî
->
fd
) ){

6207 *
pArg
 = (*)
zMa°î
;

6208 
rc
 = 
	`sqlôe3OsFûeC⁄åﬁ
(
pPagî
->
fd
, 
SQLITE_FCNTL_SYNC
, 
pArg
);

6209 if–
rc
==
SQLITE_NOTFOUND
 )Ñ¯
SQLITE_OK
;

6211 if–
rc
==
SQLITE_OK
 && !
pPagî
->
noSync
 ){

6212 
	`as£π
–!
MEMDB
 );

6213 
rc
 = 
	`sqlôe3OsSync
(
pPagî
->
fd
,ÖPagî->
syncFœgs
);

6215  
rc
;

6216 
	}
}

6229 
	$sqlôe3PagîEx˛usiveLock
(
Pagî
 *
pPagî
){

6230 
rc
 = 
pPagî
->
îrCode
;

6231 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

6232 if–
rc
==
SQLITE_OK
 ){

6233 
	`as£π
–
pPagî
->
eSèã
==
PAGER_WRITER_CACHEMOD


6234 || 
pPagî
->
eSèã
==
PAGER_WRITER_DBMOD


6235 || 
pPagî
->
eSèã
==
PAGER_WRITER_LOCKED


6237 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

6238 if–0==
	`∑gîU£WÆ
(
pPagî
) ){

6239 
rc
 = 
	`∑gî_waô_⁄_lock
(
pPagî
, 
EXCLUSIVE_LOCK
);

6242  
rc
;

6243 
	}
}

6271 
	$sqlôe3PagîCommôPha£O√
(

6272 
Pagî
 *
pPagî
,

6273 c⁄° *
zMa°î
,

6274 
noSync


6276 
rc
 = 
SQLITE_OK
;

6278 
	`as£π
–
pPagî
->
eSèã
==
PAGER_WRITER_LOCKED


6279 || 
pPagî
->
eSèã
==
PAGER_WRITER_CACHEMOD


6280 || 
pPagî
->
eSèã
==
PAGER_WRITER_DBMOD


6281 || 
pPagî
->
eSèã
==
PAGER_ERROR


6283 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

6286 if–
	`NEVER
(
pPagî
->
îrCode
) ) ÖPager->errCode;

6289 if–
	`sqlôe3Fau…Sim
(400ËË 
SQLITE_IOERR
;

6291 
	`PAGERTRACE
(("DATABASE SYNC: File=%s zMaster=%sÇSize=%d\n",

6292 
pPagî
->
zFûíame
, 
zMa°î
,ÖPagî->
dbSize
));

6295 if–
pPagî
->
eSèã
<
PAGER_WRITER_CACHEMOD
 )  
SQLITE_OK
;

6297 
	`as£π
–
MEMDB
==0 || 
pPagî
->
ãmpFûe
 );

6298 
	`as£π
–
	`isO≥n
(
pPagî
->
fd
Ë||ÖPagî->
ãmpFûe
 );

6299 if–0==
	`∑gîFlushOnCommô
(
pPagî
, 1) ){

6303 
	`sqlôe3BackupRe°¨t
(
pPagî
->
pBackup
);

6305 if–
	`∑gîU£WÆ
(
pPagî
) ){

6306 
PgHdr
 *
pLi°
 = 
	`sqlôe3PˇcheDútyLi°
(
pPagî
->
pPCache
);

6307 
PgHdr
 *
pPageO√
 = 0;

6308 if–
pLi°
==0 ){

6311 
rc
 = 
	`sqlôe3PagîGë
(
pPagî
, 1, &
pPageO√
, 0);

6312 
pLi°
 = 
pPageO√
;

6313 
pLi°
->
pDúty
 = 0;

6315 
	`as£π
–
rc
==
SQLITE_OK
 );

6316 if–
	`ALWAYS
(
pLi°
) ){

6317 
rc
 = 
	`∑gîWÆFømes
(
pPagî
, 
pLi°
,ÖPagî->
dbSize
, 1);

6319 
	`sqlôe3PagîUƒef
(
pPageO√
);

6320 if–
rc
==
SQLITE_OK
 ){

6321 
	`sqlôe3PˇcheCÀ™AŒ
(
pPagî
->
pPCache
);

6347 #ifde‡
SQLITE_ENABLE_ATOMIC_WRITE


6348 
PgHdr
 *
pPg
;

6349 
	`as£π
–
	`isO≥n
(
pPagî
->
jfd
)

6350 || 
pPagî
->
jou∫ÆMode
==
PAGER_JOURNALMODE_OFF


6351 || 
pPagî
->
jou∫ÆMode
==
PAGER_JOURNALMODE_WAL


6353 if–!
zMa°î
 && 
	`isO≥n
(
pPagî
->
jfd
)

6354 && 
pPagî
->
jou∫ÆOff
==
	`j∫lBuf„rSize
(pPager)

6355 && 
pPagî
->
dbSize
>ıPagî->
dbOrigSize


6356 && (0==(
pPg
 = 
	`sqlôe3PˇcheDútyLi°
(
pPagî
->
pPCache
)Ë|| 0=ıPg->
pDúty
)

6364 
rc
 = 
	`∑gî_ö¸_ch™gecou¡î
(
pPagî
, 1);

6366 
rc
 = 
	`sqlôe3Jou∫ÆCª©e
(
pPagî
->
jfd
);

6367 if–
rc
==
SQLITE_OK
 ){

6368 
rc
 = 
	`∑gî_ö¸_ch™gecou¡î
(
pPagî
, 0);

6372 
rc
 = 
	`∑gî_ö¸_ch™gecou¡î
(
pPagî
, 0);

6374 if–
rc
!=
SQLITE_OK
 ) 
commô_pha£_⁄e_exô
;

6380 
rc
 = 
	`wrôeMa°îJou∫Æ
(
pPagî
, 
zMa°î
);

6381 if–
rc
!=
SQLITE_OK
 ) 
commô_pha£_⁄e_exô
;

6394 
rc
 = 
	`syncJou∫Æ
(
pPagî
, 0);

6395 if–
rc
!=
SQLITE_OK
 ) 
commô_pha£_⁄e_exô
;

6397 
rc
 = 
	`∑gî_wrôe_∑gñi°
(
pPagî
,
	`sqlôe3PˇcheDútyLi°
’Pagî->
pPCache
));

6398 if–
rc
!=
SQLITE_OK
 ){

6399 
	`as£π
–
rc
!=
SQLITE_IOERR_BLOCKED
 );

6400 
commô_pha£_⁄e_exô
;

6402 
	`sqlôe3PˇcheCÀ™AŒ
(
pPagî
->
pPCache
);

6410 if–
pPagî
->
dbSize
>pPagî->
dbFûeSize
 ){

6411 
Pgno
 
nNew
 = 
pPagî
->
dbSize
 - (pPagî->dbSize==
	`PAGER_MJ_PGNO
(pPager));

6412 
	`as£π
–
pPagî
->
eSèã
==
PAGER_WRITER_DBMOD
 );

6413 
rc
 = 
	`∑gî_åunˇã
(
pPagî
, 
nNew
);

6414 if–
rc
!=
SQLITE_OK
 ) 
commô_pha£_⁄e_exô
;

6418 if–!
noSync
 ){

6419 
rc
 = 
	`sqlôe3PagîSync
(
pPagî
, 
zMa°î
);

6421 
	`IOTRACE
(("DBSYNC %p\n", 
pPagî
))

6425 
commô_pha£_⁄e_exô
:

6426 if–
rc
==
SQLITE_OK
 && !
	`∑gîU£WÆ
(
pPagî
) ){

6427 
pPagî
->
eSèã
 = 
PAGER_WRITER_FINISHED
;

6429  
rc
;

6430 
	}
}

6448 
	$sqlôe3PagîCommôPha£Two
(
Pagî
 *
pPagî
){

6449 
rc
 = 
SQLITE_OK
;

6454 if–
	`NEVER
(
pPagî
->
îrCode
) ) ÖPager->errCode;

6456 
	`as£π
–
pPagî
->
eSèã
==
PAGER_WRITER_LOCKED


6457 || 
pPagî
->
eSèã
==
PAGER_WRITER_FINISHED


6458 || (
	`∑gîU£WÆ
(
pPagî
Ë&&ÖPagî->
eSèã
==
PAGER_WRITER_CACHEMOD
)

6460 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

6473 if–
pPagî
->
eSèã
==
PAGER_WRITER_LOCKED


6474 && 
pPagî
->
ex˛usiveMode


6475 && 
pPagî
->
jou∫ÆMode
==
PAGER_JOURNALMODE_PERSIST


6477 
	`as£π
–
pPagî
->
jou∫ÆOff
==
	`JOURNAL_HDR_SZ
(pPager) || !pPager->journalOff );

6478 
pPagî
->
eSèã
 = 
PAGER_READER
;

6479  
SQLITE_OK
;

6482 
	`PAGERTRACE
(("COMMIT %d\n", 
	`PAGERID
(
pPagî
)));

6483 
pPagî
->
iD©aVîsi⁄
++;

6484 
rc
 = 
	`∑gî_íd_å™ß˘i⁄
(
pPagî
,ÖPagî->
£tMa°î
, 1);

6485  
	`∑gî_îr‹
(
pPagî
, 
rc
);

6486 
	}
}

6514 
	$sqlôe3PagîRﬁlback
(
Pagî
 *
pPagî
){

6515 
rc
 = 
SQLITE_OK
;

6516 
	`PAGERTRACE
(("ROLLBACK %d\n", 
	`PAGERID
(
pPagî
)));

6522 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

6523 if–
pPagî
->
eSèã
==
PAGER_ERROR
 ) ÖPagî->
îrCode
;

6524 if–
pPagî
->
eSèã
<=
PAGER_READER
 )  
SQLITE_OK
;

6526 if–
	`∑gîU£WÆ
(
pPagî
) ){

6527 
rc2
;

6528 
rc
 = 
	`sqlôe3PagîSavïoöt
(
pPagî
, 
SAVEPOINT_ROLLBACK
, -1);

6529 
rc2
 = 
	`∑gî_íd_å™ß˘i⁄
(
pPagî
,ÖPagî->
£tMa°î
, 0);

6530 if–
rc
==
SQLITE_OK
 )Ñ¯
rc2
;

6531 }if–!
	`isO≥n
(
pPagî
->
jfd
Ë||ÖPagî->
eSèã
==
PAGER_WRITER_LOCKED
 ){

6532 
eSèã
 = 
pPagî
->eState;

6533 
rc
 = 
	`∑gî_íd_å™ß˘i⁄
(
pPagî
, 0, 0);

6534 if–!
MEMDB
 && 
eSèã
>
PAGER_WRITER_LOCKED
 ){

6539 
pPagî
->
îrCode
 = 
SQLITE_ABORT
;

6540 
pPagî
->
eSèã
 = 
PAGER_ERROR
;

6541 
	`£tGëãrMëhod
(
pPagî
);

6542  
rc
;

6545 
rc
 = 
	`∑gî_∂ayback
(
pPagî
, 0);

6548 
	`as£π
–
pPagî
->
eSèã
==
PAGER_READER
 || 
rc
!=
SQLITE_OK
 );

6549 
	`as£π
–
rc
==
SQLITE_OK
 ||Ñc==
SQLITE_FULL
 ||Ñc==
SQLITE_CORRUPT


6550 || 
rc
==
SQLITE_NOMEM
 || (rc&0xFF)==
SQLITE_IOERR


6551 || 
rc
==
SQLITE_CANTOPEN


6557  
	`∑gî_îr‹
(
pPagî
, 
rc
);

6558 
	}
}

6564 
u8
 
	$sqlôe3PagîI§ód⁄ly
(
Pagî
 *
pPagî
){

6565  
pPagî
->
ªadO∆y
;

6566 
	}
}

6568 #ifde‡
SQLITE_DEBUG


6572 
	$sqlôe3PagîRefcou¡
(
Pagî
 *
pPagî
){

6573  
	`sqlôe3PˇcheRefCou¡
(
pPagî
->
pPCache
);

6574 
	}
}

6581 
	$sqlôe3PagîMemU£d
(
Pagî
 *
pPagî
){

6582 
≥rPageSize
 = 
pPagî
->
∑geSize
 +ÖPagî->
nExåa
 + (
PgHdr
)

6584  
≥rPageSize
*
	`sqlôe3PˇchePagecou¡
(
pPagî
->
pPCache
)

6585 + 
	`sqlôe3MÆlocSize
(
pPagî
)

6586 + 
pPagî
->
∑geSize
;

6587 
	}
}

6592 
	$sqlôe3PagîPageRefcou¡
(
DbPage
 *
pPage
){

6593  
	`sqlôe3PˇchePageRefcou¡
(
pPage
);

6594 
	}
}

6596 #ifde‡
SQLITE_TEST


6600 *
	$sqlôe3PagîSèts
(
Pagî
 *
pPagî
){

6601 
a
[11];

6602 
a
[0] = 
	`sqlôe3PˇcheRefCou¡
(
pPagî
->
pPCache
);

6603 
a
[1] = 
	`sqlôe3PˇchePagecou¡
(
pPagî
->
pPCache
);

6604 
a
[2] = 
	`sqlôe3PˇcheGëCachesize
(
pPagî
->
pPCache
);

6605 
a
[3] = 
pPagî
->
eSèã
==
PAGER_OPEN
 ? -1 : (ËpPagî->
dbSize
;

6606 
a
[4] = 
pPagî
->
eSèã
;

6607 
a
[5] = 
pPagî
->
îrCode
;

6608 
a
[6] = 
pPagî
->
aSèt
[
PAGER_STAT_HIT
];

6609 
a
[7] = 
pPagî
->
aSèt
[
PAGER_STAT_MISS
];

6610 
a
[8] = 0;

6611 
a
[9] = 
pPagî
->
nRód
;

6612 
a
[10] = 
pPagî
->
aSèt
[
PAGER_STAT_WRITE
];

6613  
a
;

6614 
	}
}

6624 
	$sqlôe3PagîCacheSèt
(
Pagî
 *
pPagî
, 
eSèt
, 
ª£t
, *
≤VÆ
){

6626 
	`as£π
–
eSèt
==
SQLITE_DBSTATUS_CACHE_HIT


6627 || 
eSèt
==
SQLITE_DBSTATUS_CACHE_MISS


6628 || 
eSèt
==
SQLITE_DBSTATUS_CACHE_WRITE


6631 
	`as£π
–
SQLITE_DBSTATUS_CACHE_HIT
+1==
SQLITE_DBSTATUS_CACHE_MISS
 );

6632 
	`as£π
–
SQLITE_DBSTATUS_CACHE_HIT
+2==
SQLITE_DBSTATUS_CACHE_WRITE
 );

6633 
	`as£π
–
PAGER_STAT_HIT
==0 && 
PAGER_STAT_MISS
==1 && 
PAGER_STAT_WRITE
==2 );

6635 *
≤VÆ
 +
pPagî
->
aSèt
[
eSèt
 - 
SQLITE_DBSTATUS_CACHE_HIT
];

6636 if–
ª£t
 ){

6637 
pPagî
->
aSèt
[
eSèt
 - 
SQLITE_DBSTATUS_CACHE_HIT
] = 0;

6639 
	}
}

6644 
	$sqlôe3PagîIsMemdb
(
Pagî
 *
pPagî
){

6645  
pPagî
->
ãmpFûe
;

6646 
	}
}

6658 
SQLITE_NOINLINE
 
	$∑gîO≥nSavïoöt
(
Pagî
 *
pPagî
, 
nSavïoöt
){

6659 
rc
 = 
SQLITE_OK
;

6660 
nCuºít
 = 
pPagî
->
nSavïoöt
;

6661 
ii
;

6662 
PagîSavïoöt
 *
aNew
;

6664 
	`as£π
–
pPagî
->
eSèã
>=
PAGER_WRITER_LOCKED
 );

6665 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

6666 
	`as£π
–
nSavïoöt
>
nCuºít
 && 
pPagî
->
u£Jou∫Æ
 );

6672 
aNew
 = (
PagîSavïoöt
 *)
	`sqlôe3RóŒoc
(

6673 
pPagî
->
aSavïoöt
, (
PagîSavïoöt
)*
nSavïoöt


6675 if–!
aNew
 ){

6676  
SQLITE_NOMEM_BKPT
;

6678 
	`mem£t
(&
aNew
[
nCuºít
], 0, (
nSavïoöt
-nCuºítË* (
PagîSavïoöt
));

6679 
pPagî
->
aSavïoöt
 = 
aNew
;

6682 
ii
=
nCuºít
; ii<
nSavïoöt
; ii++){

6683 
aNew
[
ii
].
nOrig
 = 
pPagî
->
dbSize
;

6684 if–
	`isO≥n
(
pPagî
->
jfd
Ë&&ÖPagî->
jou∫ÆOff
>0 ){

6685 
aNew
[
ii
].
iOff£t
 = 
pPagî
->
jou∫ÆOff
;

6687 
aNew
[
ii
].
iOff£t
 = 
	`JOURNAL_HDR_SZ
(
pPagî
);

6689 
aNew
[
ii
].
iSubRec
 = 
pPagî
->
nSubRec
;

6690 
aNew
[
ii
].
pInSavïoöt
 = 
	`sqlôe3BôvecCª©e
(
pPagî
->
dbSize
);

6691 if–!
aNew
[
ii
].
pInSavïoöt
 ){

6692  
SQLITE_NOMEM_BKPT
;

6694 if–
	`∑gîU£WÆ
(
pPagî
) ){

6695 
	`sqlôe3WÆSavïoöt
(
pPagî
->
pWÆ
, 
aNew
[
ii
].
aWÆD©a
);

6697 
pPagî
->
nSavïoöt
 = 
ii
+1;

6699 
	`as£π
–
pPagî
->
nSavïoöt
==nSavepoint );

6700 
	`as£πTrunˇãC⁄°øöt
(
pPagî
);

6701  
rc
;

6702 
	}
}

6703 
	$sqlôe3PagîO≥nSavïoöt
(
Pagî
 *
pPagî
, 
nSavïoöt
){

6704 
	`as£π
–
pPagî
->
eSèã
>=
PAGER_WRITER_LOCKED
 );

6705 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

6707 if–
nSavïoöt
>
pPagî
->nSavïoöà&&ÖPagî->
u£Jou∫Æ
 ){

6708  
	`∑gîO≥nSavïoöt
(
pPagî
, 
nSavïoöt
);

6710  
SQLITE_OK
;

6712 
	}
}

6745 
	$sqlôe3PagîSavïoöt
(
Pagî
 *
pPagî
, 
›
, 
iSavïoöt
){

6746 
rc
 = 
pPagî
->
îrCode
;

6748 #ifde‡
SQLITE_ENABLE_ZIPVFS


6749 if–
›
==
SAVEPOINT_RELEASE
 ) 
rc
 = 
SQLITE_OK
;

6752 
	`as£π
–
›
==
SAVEPOINT_RELEASE
 || op==
SAVEPOINT_ROLLBACK
 );

6753 
	`as£π
–
iSavïoöt
>=0 || 
›
==
SAVEPOINT_ROLLBACK
 );

6755 if–
rc
==
SQLITE_OK
 && 
iSavïoöt
<
pPagî
->
nSavïoöt
 ){

6756 
ii
;

6757 
nNew
;

6763 
nNew
 = 
iSavïoöt
 + (–
›
==
SAVEPOINT_RELEASE
 ) ? 0 : 1);

6764 
ii
=
nNew
; ii<
pPagî
->
nSavïoöt
; ii++){

6765 
	`sqlôe3BôvecDe°roy
(
pPagî
->
aSavïoöt
[
ii
].
pInSavïoöt
);

6767 
pPagî
->
nSavïoöt
 = 
nNew
;

6771 if–
›
==
SAVEPOINT_RELEASE
 ){

6772 if–
nNew
==0 && 
	`isO≥n
(
pPagî
->
sjfd
) ){

6774 if–
	`sqlôe3Jou∫ÆIsInMem‹y
(
pPagî
->
sjfd
) ){

6775 
rc
 = 
	`sqlôe3OsTrunˇã
(
pPagî
->
sjfd
, 0);

6776 
	`as£π
–
rc
==
SQLITE_OK
 );

6778 
pPagî
->
nSubRec
 = 0;

6786 if–
	`∑gîU£WÆ
(
pPagî
Ë|| 
	`isO≥n
’Pagî->
jfd
) ){

6787 
PagîSavïoöt
 *
pSavïoöt
 = (
nNew
==0)?0:&
pPagî
->
aSavïoöt
[nNew-1];

6788 
rc
 = 
	`∑gîPœybackSavïoöt
(
pPagî
, 
pSavïoöt
);

6789 
	`as£π
(
rc
!=
SQLITE_DONE
);

6792 #ifde‡
SQLITE_ENABLE_ZIPVFS


6798 
pPagî
->
jou∫ÆMode
==
PAGER_JOURNALMODE_OFF


6799 && 
pPagî
->
eSèã
>=
PAGER_WRITER_CACHEMOD


6801 
pPagî
->
îrCode
 = 
SQLITE_ABORT
;

6802 
pPagî
->
eSèã
 = 
PAGER_ERROR
;

6803 
	`£tGëãrMëhod
(
pPagî
);

6808  
rc
;

6809 
	}
}

6821 c⁄° *
	$sqlôe3PagîFûíame
(
Pagî
 *
pPagî
, 
nuŒIfMemDb
){

6822  (
nuŒIfMemDb
 && 
pPagî
->
memDb
Ë? "" :ÖPagî->
zFûíame
;

6823 
	}
}

6828 
sqlôe3_vfs
 *
	$sqlôe3PagîVfs
(
Pagî
 *
pPagî
){

6829  
pPagî
->
pVfs
;

6830 
	}
}

6837 
sqlôe3_fûe
 *
	$sqlôe3PagîFûe
(
Pagî
 *
pPagî
){

6838  
pPagî
->
fd
;

6839 
	}
}

6845 
sqlôe3_fûe
 *
	$sqlôe3PagîJ∫lFûe
(
Pagî
 *
pPagî
){

6846 #i‡
SQLITE_OMIT_WAL


6847  
pPagî
->
jfd
;

6849  
pPagî
->
pWÆ
 ? 
	`sqlôe3WÆFûe
’Pagî->pWÆË:ÖPagî->
jfd
;

6851 
	}
}

6856 c⁄° *
	$sqlôe3PagîJou∫Æ«me
(
Pagî
 *
pPagî
){

6857  
pPagî
->
zJou∫Æ
;

6858 
	}
}

6860 #ifde‡
SQLITE_HAS_CODEC


6864 
	$sqlôe3PagîSëCodec
(

6865 
Pagî
 *
pPagî
,

6866 *(*
xCodec
)(*,*,
Pgno
,),

6867 (*
xCodecSizeChng
)(*,,),

6868 (*
xCodecFªe
)(*),

6869 *
pCodec


6871 if–
pPagî
->
xCodecFªe
 )ÖPagî->
	`xCodecFªe
’Pagî->
pCodec
);

6872 
pPagî
->
xCodec
 =ÖPagî->
memDb
 ? 0 : xCodec;

6873 
pPagî
->
xCodecSizeChng
 = xCodecSizeChng;

6874 
pPagî
->
xCodecFªe
 = xCodecFree;

6875 
pPagî
->
pCodec
 =ÖCodec;

6876 
	`£tGëãrMëhod
(
pPagî
);

6877 
	`∑gîRï‹tSize
(
pPagî
);

6878 
	}
}

6879 *
	$sqlôe3PagîGëCodec
(
Pagî
 *
pPagî
){

6880  
pPagî
->
pCodec
;

6881 
	}
}

6890 *
	$sqlôe3PagîCodec
(
PgHdr
 *
pPg
){

6891 *
aD©a
 = 0;

6892 
	`CODEC2
(
pPg
->
pPagî
,ÖPg->
pD©a
,ÖPg->
pgno
, 6,  0, 
aD©a
);

6893  
aD©a
;

6894 
	}
}

6899 
	$sqlôe3PagîSèã
(
Pagî
 *
pPagî
){

6900  
pPagî
->
eSèã
;

6901 
	}
}

6904 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


6930 
	$sqlôe3PagîMovïage
(
Pagî
 *
pPagî
, 
DbPage
 *
pPg
, 
Pgno
 
pgno
, 
isCommô
){

6931 
PgHdr
 *
pPgOld
;

6932 
Pgno
 
√edSyncPgno
 = 0;

6933 
rc
;

6934 
Pgno
 
‹igPgno
;

6936 
	`as£π
–
pPg
->
nRef
>0 );

6937 
	`as£π
–
pPagî
->
eSèã
==
PAGER_WRITER_CACHEMOD


6938 || 
pPagî
->
eSèã
==
PAGER_WRITER_DBMOD


6940 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

6945 
	`as£π
–
pPagî
->
ãmpFûe
 || !
MEMDB
 );

6946 if–
pPagî
->
ãmpFûe
 ){

6947 
rc
 = 
	`sqlôe3PagîWrôe
(
pPg
);

6948 if–
rc
 ) Ñc;

6969 if–(
pPg
->
Êags
 & 
PGHDR_DIRTY
)!=0

6970 && 
SQLITE_OK
!=(
rc
 = 
	`subjou∫ÆPageIfRequúed
(
pPg
))

6972  
rc
;

6975 
	`PAGERTRACE
(("MOVE %dÖage %d (needSync=%d) movesÅo %d\n",

6976 
	`PAGERID
(
pPagî
), 
pPg
->
pgno
, (pPg->
Êags
&
PGHDR_NEED_SYNC
)?1:0,Ögno));

6977 
	`IOTRACE
(("MOVE %∞%d %d\n", 
pPagî
, 
pPg
->
pgno
,Ögno))

6986 if–(
pPg
->
Êags
&
PGHDR_NEED_SYNC
Ë&& !
isCommô
 ){

6987 
√edSyncPgno
 = 
pPg
->
pgno
;

6988 
	`as£π
–
pPagî
->
jou∫ÆMode
==
PAGER_JOURNALMODE_OFF
 ||

6989 
	`∑geInJou∫Æ
(
pPagî
, 
pPg
Ë||ÖPg->
pgno
>pPagî->
dbOrigSize
 );

6990 
	`as£π
–
pPg
->
Êags
&
PGHDR_DIRTY
 );

6998 
pPg
->
Êags
 &~
PGHDR_NEED_SYNC
;

6999 
pPgOld
 = 
	`sqlôe3PagîLookup
(
pPagî
, 
pgno
);

7000 
	`as£π
–!
pPgOld
 ||ÖPgOld->
nRef
==1 );

7001 if–
pPgOld
 ){

7002 
pPg
->
Êags
 |(
pPgOld
->Êags&
PGHDR_NEED_SYNC
);

7003 if–
pPagî
->
ãmpFûe
 ){

7006 
	`sqlôe3PˇcheMove
(
pPgOld
, 
pPagî
->
dbSize
+1);

7008 
	`sqlôe3PˇcheDr›
(
pPgOld
);

7012 
‹igPgno
 = 
pPg
->
pgno
;

7013 
	`sqlôe3PˇcheMove
(
pPg
, 
pgno
);

7014 
	`sqlôe3PˇcheMakeDúty
(
pPg
);

7020 if–
pPagî
->
ãmpFûe
 && 
pPgOld
 ){

7021 
	`sqlôe3PˇcheMove
(
pPgOld
, 
‹igPgno
);

7022 
	`sqlôe3PagîUƒefNŸNuŒ
(
pPgOld
);

7025 if–
√edSyncPgno
 ){

7040 
PgHdr
 *
pPgHdr
;

7041 
rc
 = 
	`sqlôe3PagîGë
(
pPagî
, 
√edSyncPgno
, &
pPgHdr
, 0);

7042 if–
rc
!=
SQLITE_OK
 ){

7043 if–
√edSyncPgno
<=
pPagî
->
dbOrigSize
 ){

7044 
	`as£π
–
pPagî
->
pTmpS∑˚
!=0 );

7045 
	`sqlôe3BôvecCÀ¨
(
pPagî
->
pInJou∫Æ
, 
√edSyncPgno
,ÖPagî->
pTmpS∑˚
);

7047  
rc
;

7049 
pPgHdr
->
Êags
 |
PGHDR_NEED_SYNC
;

7050 
	`sqlôe3PˇcheMakeDúty
(
pPgHdr
);

7051 
	`sqlôe3PagîUƒefNŸNuŒ
(
pPgHdr
);

7054  
SQLITE_OK
;

7055 
	}
}

7064 
	$sqlôe3PagîRekey
(
DbPage
 *
pPg
, 
Pgno
 
iNew
, 
u16
 
Êags
){

7065 
	`as£π
–
pPg
->
pgno
!=
iNew
 );

7066 
pPg
->
Êags
 = flags;

7067 
	`sqlôe3PˇcheMove
(
pPg
, 
iNew
);

7068 
	}
}

7073 *
	$sqlôe3PagîGëD©a
(
DbPage
 *
pPg
){

7074 
	`as£π
–
pPg
->
nRef
>0 ||ÖPg->
pPagî
->
memDb
 );

7075  
pPg
->
pD©a
;

7076 
	}
}

7082 *
	$sqlôe3PagîGëExåa
(
DbPage
 *
pPg
){

7083  
pPg
->
pExåa
;

7084 
	}
}

7096 
	$sqlôe3PagîLockögMode
(
Pagî
 *
pPagî
, 
eMode
){

7097 
	`as£π
–
eMode
==
PAGER_LOCKINGMODE_QUERY


7098 || 
eMode
==
PAGER_LOCKINGMODE_NORMAL


7099 || 
eMode
==
PAGER_LOCKINGMODE_EXCLUSIVE
 );

7100 
	`as£π
–
PAGER_LOCKINGMODE_QUERY
<0 );

7101 
	`as£π
–
PAGER_LOCKINGMODE_NORMAL
>=0 && 
PAGER_LOCKINGMODE_EXCLUSIVE
>=0 );

7102 
	`as£π
–
pPagî
->
ex˛usiveMode
 || 0==
	`sqlôe3WÆHópMem‹y
’Pagî->
pWÆ
) );

7103 if–
eMode
>=0 && !
pPagî
->
ãmpFûe
 && !
	`sqlôe3WÆHópMem‹y
’Pagî->
pWÆ
) ){

7104 
pPagî
->
ex˛usiveMode
 = (
u8
)
eMode
;

7106  ()
pPagî
->
ex˛usiveMode
;

7107 
	}
}

7129 
	$sqlôe3PagîSëJou∫ÆMode
(
Pagî
 *
pPagî
, 
eMode
){

7130 
u8
 
eOld
 = 
pPagî
->
jou∫ÆMode
;

7132 #ifde‡
SQLITE_DEBUG


7135 
	`¥öt_∑gî_°©e
(
pPagî
);

7140 
	`as£π
–
eMode
==
PAGER_JOURNALMODE_DELETE


7141 || 
eMode
==
PAGER_JOURNALMODE_TRUNCATE


7142 || 
eMode
==
PAGER_JOURNALMODE_PERSIST


7143 || 
eMode
==
PAGER_JOURNALMODE_OFF


7144 || 
eMode
==
PAGER_JOURNALMODE_WAL


7145 || 
eMode
==
PAGER_JOURNALMODE_MEMORY
 );

7151 
	`as£π
–
pPagî
->
ãmpFûe
==0 || 
eMode
!=
PAGER_JOURNALMODE_WAL
 );

7156 if–
MEMDB
 ){

7157 
	`as£π
–
eOld
==
PAGER_JOURNALMODE_MEMORY
 ||ÉOld==
PAGER_JOURNALMODE_OFF
 );

7158 if–
eMode
!=
PAGER_JOURNALMODE_MEMORY
 &&ÉMode!=
PAGER_JOURNALMODE_OFF
 ){

7159 
eMode
 = 
eOld
;

7163 if–
eMode
!=
eOld
 ){

7166 
	`as£π
–
pPagî
->
eSèã
!=
PAGER_ERROR
 );

7167 
pPagî
->
jou∫ÆMode
 = (
u8
)
eMode
;

7173 
	`as£π
–(
PAGER_JOURNALMODE_TRUNCATE
 & 5)==1 );

7174 
	`as£π
–(
PAGER_JOURNALMODE_PERSIST
 & 5)==1 );

7175 
	`as£π
–(
PAGER_JOURNALMODE_DELETE
 & 5)==0 );

7176 
	`as£π
–(
PAGER_JOURNALMODE_MEMORY
 & 5)==4 );

7177 
	`as£π
–(
PAGER_JOURNALMODE_OFF
 & 5)==0 );

7178 
	`as£π
–(
PAGER_JOURNALMODE_WAL
 & 5)==5 );

7180 
	`as£π
–
	`isO≥n
(
pPagî
->
fd
Ë||ÖPagî->
ex˛usiveMode
 );

7181 if–!
pPagî
->
ex˛usiveMode
 && (
eOld
 & 5)==1 && (
eMode
 & 1)==0 ){

7191 
	`sqlôe3OsClo£
(
pPagî
->
jfd
);

7192 if–
pPagî
->
eLock
>=
RESERVED_LOCK
 ){

7193 
	`sqlôe3OsDñëe
(
pPagî
->
pVfs
,ÖPagî->
zJou∫Æ
, 0);

7195 
rc
 = 
SQLITE_OK
;

7196 
°©e
 = 
pPagî
->
eSèã
;

7197 
	`as£π
–
°©e
==
PAGER_OPEN
 || sèã==
PAGER_READER
 );

7198 if–
°©e
==
PAGER_OPEN
 ){

7199 
rc
 = 
	`sqlôe3PagîSh¨edLock
(
pPagî
);

7201 if–
pPagî
->
eSèã
==
PAGER_READER
 ){

7202 
	`as£π
–
rc
==
SQLITE_OK
 );

7203 
rc
 = 
	`∑gîLockDb
(
pPagî
, 
RESERVED_LOCK
);

7205 if–
rc
==
SQLITE_OK
 ){

7206 
	`sqlôe3OsDñëe
(
pPagî
->
pVfs
,ÖPagî->
zJou∫Æ
, 0);

7208 if–
rc
==
SQLITE_OK
 && 
°©e
==
PAGER_READER
 ){

7209 
	`∑gîU∆ockDb
(
pPagî
, 
SHARED_LOCK
);

7210 }if–
°©e
==
PAGER_OPEN
 ){

7211 
	`∑gî_u∆ock
(
pPagî
);

7213 
	`as£π
–
°©e
==
pPagî
->
eSèã
 );

7215 }if–
eMode
==
PAGER_JOURNALMODE_OFF
 ){

7216 
	`sqlôe3OsClo£
(
pPagî
->
jfd
);

7221  ()
pPagî
->
jou∫ÆMode
;

7222 
	}
}

7227 
	$sqlôe3PagîGëJou∫ÆMode
(
Pagî
 *
pPagî
){

7228  ()
pPagî
->
jou∫ÆMode
;

7229 
	}
}

7236 
	$sqlôe3PagîOkToCh™geJou∫ÆMode
(
Pagî
 *
pPagî
){

7237 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

7238 if–
pPagî
->
eSèã
>=
PAGER_WRITER_CACHEMOD
 )  0;

7239 if–
	`NEVER
(
	`isO≥n
(
pPagî
->
jfd
Ë&&ÖPagî->
jou∫ÆOff
>0) )  0;

7241 
	}
}

7249 
i64
 
	$sqlôe3PagîJou∫ÆSizeLimô
(
Pagî
 *
pPagî
, 
i64
 
iLimô
){

7250 if–
iLimô
>=-1 ){

7251 
pPagî
->
jou∫ÆSizeLimô
 = 
iLimô
;

7252 
	`sqlôe3WÆLimô
(
pPagî
->
pWÆ
, 
iLimô
);

7254  
pPagî
->
jou∫ÆSizeLimô
;

7255 
	}
}

7263 
sqlôe3_backup
 **
	$sqlôe3PagîBackupPå
(
Pagî
 *
pPagî
){

7264  &
pPagî
->
pBackup
;

7265 
	}
}

7267 #i‚de‡
SQLITE_OMIT_VACUUM


7271 
	$sqlôe3PagîCÀ¨Cache
(
Pagî
 *
pPagî
){

7272 
	`as£π
–
MEMDB
==0 || 
pPagî
->
ãmpFûe
 );

7273 if–
pPagî
->
ãmpFûe
==0 ) 
	`∑gî_ª£t
(pPager);

7274 
	}
}

7278 #i‚de‡
SQLITE_OMIT_WAL


7286 
	$sqlôe3PagîCheckpoöt
(

7287 
Pagî
 *
pPagî
,

7288 
sqlôe3
 *
db
,

7289 
eMode
,

7290 *
≤Log
,

7291 *
≤Ck±


7293 
rc
 = 
SQLITE_OK
;

7294 if–
pPagî
->
pWÆ
 ){

7295 
rc
 = 
	`sqlôe3WÆCheckpoöt
(
pPagî
->
pWÆ
, 
db
, 
eMode
,

7296 (
eMode
==
SQLITE_CHECKPOINT_PASSIVE
 ? 0 : 
pPagî
->
xBusyH™dÀr
),

7297 
pPagî
->
pBusyH™dÀrArg
,

7298 
pPagî
->
ck±SyncFœgs
,ÖPagî->
∑geSize
, (
u8
 *ÌPagî->
pTmpS∑˚
,

7299 
≤Log
, 
≤Ck±


7302  
rc
;

7303 
	}
}

7305 
	$sqlôe3PagîWÆCÆlback
(
Pagî
 *
pPagî
){

7306  
	`sqlôe3WÆCÆlback
(
pPagî
->
pWÆ
);

7307 
	}
}

7313 
	$sqlôe3PagîWÆSuµ‹ãd
(
Pagî
 *
pPagî
){

7314 c⁄° 
sqlôe3_io_mëhods
 *
pMëhods
 = 
pPagî
->
fd
->pMethods;

7315 if–
pPagî
->
noLock
 )  0;

7316  
pPagî
->
ex˛usiveMode
 || (
pMëhods
->
iVîsi⁄
>=2 &&ÖMëhods->
xShmM≠
);

7317 
	}
}

7323 
	$∑gîEx˛usiveLock
(
Pagî
 *
pPagî
){

7324 
rc
;

7326 
	`as£π
–
pPagî
->
eLock
==
SHARED_LOCK
 ||ÖPagî->eLock==
EXCLUSIVE_LOCK
 );

7327 
rc
 = 
	`∑gîLockDb
(
pPagî
, 
EXCLUSIVE_LOCK
);

7328 if–
rc
!=
SQLITE_OK
 ){

7331 
	`∑gîU∆ockDb
(
pPagî
, 
SHARED_LOCK
);

7334  
rc
;

7335 
	}
}

7343 
	$∑gîO≥nWÆ
(
Pagî
 *
pPagî
){

7344 
rc
 = 
SQLITE_OK
;

7346 
	`as£π
–
pPagî
->
pWÆ
==0 &&ÖPagî->
ãmpFûe
==0 );

7347 
	`as£π
–
pPagî
->
eLock
==
SHARED_LOCK
 ||ÖPagî->eLock==
EXCLUSIVE_LOCK
 );

7354 if–
pPagî
->
ex˛usiveMode
 ){

7355 
rc
 = 
	`∑gîEx˛usiveLock
(
pPagî
);

7361 if–
rc
==
SQLITE_OK
 ){

7362 
rc
 = 
	`sqlôe3WÆO≥n
(
pPagî
->
pVfs
,

7363 
pPagî
->
fd
,ÖPagî->
zWÆ
,ÖPagî->
ex˛usiveMode
,

7364 
pPagî
->
jou∫ÆSizeLimô
, &pPagî->
pWÆ


7367 
	`∑gîFixM≠limô
(
pPagî
);

7369  
rc
;

7370 
	}
}

7388 
	$sqlôe3PagîO≥nWÆ
(

7389 
Pagî
 *
pPagî
,

7390 *
pbO≥n


7392 
rc
 = 
SQLITE_OK
;

7394 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

7395 
	`as£π
–
pPagî
->
eSèã
==
PAGER_OPEN
 || 
pbO≥n
 );

7396 
	`as£π
–
pPagî
->
eSèã
==
PAGER_READER
 || !
pbO≥n
 );

7397 
	`as£π
–
pbO≥n
==0 || *pbOpen==0 );

7398 
	`as£π
–
pbO≥n
!=0 || (!
pPagî
->
ãmpFûe
 && !pPagî->
pWÆ
) );

7400 if–!
pPagî
->
ãmpFûe
 && !pPagî->
pWÆ
 ){

7401 if–!
	`sqlôe3PagîWÆSuµ‹ãd
(
pPagî
ËË 
SQLITE_CANTOPEN
;

7404 
	`sqlôe3OsClo£
(
pPagî
->
jfd
);

7406 
rc
 = 
	`∑gîO≥nWÆ
(
pPagî
);

7408 
	`sqlôe3LoggîO≥nPha£Two
(
pPagî
,ÖPagî->
pLoggî
);

7410 if–
rc
==
SQLITE_OK
 ){

7411 
pPagî
->
jou∫ÆMode
 = 
PAGER_JOURNALMODE_WAL
;

7412 
pPagî
->
eSèã
 = 
PAGER_OPEN
;

7415 *
pbO≥n
 = 1;

7418  
rc
;

7419 
	}
}

7430 
	$sqlôe3PagîClo£WÆ
(
Pagî
 *
pPagî
, 
sqlôe3
 *
db
){

7431 
rc
 = 
SQLITE_OK
;

7433 
	`as£π
–
pPagî
->
jou∫ÆMode
==
PAGER_JOURNALMODE_WAL
 );

7439 if–!
pPagî
->
pWÆ
 ){

7440 
logexi°s
 = 0;

7441 
rc
 = 
	`∑gîLockDb
(
pPagî
, 
SHARED_LOCK
);

7442 if–
rc
==
SQLITE_OK
 ){

7443 
rc
 = 
	`sqlôe3OsAc˚ss
(

7444 
pPagî
->
pVfs
,ÖPagî->
zWÆ
, 
SQLITE_ACCESS_EXISTS
, &
logexi°s


7447 if–
rc
==
SQLITE_OK
 && 
logexi°s
 ){

7448 
rc
 = 
	`∑gîO≥nWÆ
(
pPagî
);

7455 if–
rc
==
SQLITE_OK
 && 
pPagî
->
pWÆ
 ){

7456 
rc
 = 
	`∑gîEx˛usiveLock
(
pPagî
);

7457 if–
rc
==
SQLITE_OK
 ){

7458 
rc
 = 
	`sqlôe3WÆClo£
(
pPagî
->
pWÆ
, 
db
,ÖPagî->
ck±SyncFœgs
,

7459 
pPagî
->
∑geSize
, (
u8
*ÌPagî->
pTmpS∑˚
);

7460 
pPagî
->
pWÆ
 = 0;

7461 
	`∑gîFixM≠limô
(
pPagî
);

7462 if–
rc
 && !
pPagî
->
ex˛usiveMode
 ) 
	`∑gîU∆ockDb
’Pagî, 
SHARED_LOCK
);

7465  
rc
;

7466 
	}
}

7468 #ifde‡
SQLITE_ENABLE_SNAPSHOT


7473 
	$sqlôe3PagîS«pshŸGë
(
Pagî
 *
pPagî
, 
sqlôe3_¢≠shŸ
 **
µS«pshŸ
){

7474 
rc
 = 
SQLITE_ERROR
;

7475 if–
pPagî
->
pWÆ
 ){

7476 
rc
 = 
	`sqlôe3WÆS«pshŸGë
(
pPagî
->
pWÆ
, 
µS«pshŸ
);

7478  
rc
;

7479 
	}
}

7486 
	$sqlôe3PagîS«pshŸO≥n
(
Pagî
 *
pPagî
, 
sqlôe3_¢≠shŸ
 *
pS«pshŸ
){

7487 
rc
 = 
SQLITE_OK
;

7488 if–
pPagî
->
pWÆ
 ){

7489 
	`sqlôe3WÆS«pshŸO≥n
(
pPagî
->
pWÆ
, 
pS«pshŸ
);

7491 
rc
 = 
SQLITE_ERROR
;

7493  
rc
;

7494 
	}
}

7500 
	$sqlôe3PagîS«pshŸRecovî
(
Pagî
 *
pPagî
){

7501 
rc
;

7502 if–
pPagî
->
pWÆ
 ){

7503 
rc
 = 
	`sqlôe3WÆS«pshŸRecovî
(
pPagî
->
pWÆ
);

7505 
rc
 = 
SQLITE_ERROR
;

7507  
rc
;

7508 
	}
}

7512 #ifde‡
SQLITE_ENABLE_ZIPVFS


7520 
	$sqlôe3PagîWÆFømesize
(
Pagî
 *
pPagî
){

7521 
	`as£π
–
pPagî
->
eSèã
>=
PAGER_READER
 );

7522  
	`sqlôe3WÆFømesize
(
pPagî
->
pWÆ
);

7523 
	}
}

	@pager.h

17 #i‚de‡
SQLITE_PAGER_H


18 
	#SQLITE_PAGER_H


	)

25 #i‚de‡
SQLITE_DEFAULT_JOURNAL_SIZE_LIMIT


26 
	#SQLITE_DEFAULT_JOURNAL_SIZE_LIMIT
 -1

	)

28 
	~"log.h
"

34 
u32
 
	tPgno
;

39 
Pagî
 
	tPagî
;

44 
PgHdr
 
	tDbPage
;

54 
	#PAGER_MJ_PGNO
(
x
Ë((
Pgno
)((
PENDING_BYTE
/((x)->
∑geSize
))+1))

	)

61 
	#PAGER_OMIT_JOURNAL
 0x0001

	)

62 
	#PAGER_MEMORY
 0x0002

	)

67 
	#PAGER_LOCKINGMODE_QUERY
 -1

	)

68 
	#PAGER_LOCKINGMODE_NORMAL
 0

	)

69 
	#PAGER_LOCKINGMODE_EXCLUSIVE
 1

	)

78 
	#PAGER_JOURNALMODE_QUERY
 (-1Ë

	)

79 
	#PAGER_JOURNALMODE_DELETE
 0

	)

80 
	#PAGER_JOURNALMODE_PERSIST
 1

	)

81 
	#PAGER_JOURNALMODE_OFF
 2

	)

82 
	#PAGER_JOURNALMODE_TRUNCATE
 3

	)

83 
	#PAGER_JOURNALMODE_MEMORY
 4

	)

84 
	#PAGER_JOURNALMODE_WAL
 5

	)

89 
	#PAGER_GET_NOCONTENT
 0x01

	)

90 
	#PAGER_GET_READONLY
 0x02

	)

100 
	#PAGER_SYNCHRONOUS_OFF
 0x01

	)

101 
	#PAGER_SYNCHRONOUS_NORMAL
 0x02

	)

102 
	#PAGER_SYNCHRONOUS_FULL
 0x03

	)

103 
	#PAGER_SYNCHRONOUS_EXTRA
 0x04

	)

104 
	#PAGER_SYNCHRONOUS_MASK
 0x07

	)

105 
	#PAGER_FULLFSYNC
 0x08

	)

106 
	#PAGER_CKPT_FULLFSYNC
 0x10

	)

107 
	#PAGER_CACHESPILL
 0x20

	)

108 
	#PAGER_FLAGS_MASK
 0x38

	)

117 
sqlôe3PagîO≥n
(

118 
sqlôe3_vfs
*,

119 
Pagî
 **
µPagî
,

124 (*)(
DbPage
*)

126 
	`sqlôe3PagîClo£
(
Pagî
 *
pPagî
, 
sqlôe3
*);

127 
	`sqlôe3PagîRódFûehódî
(
Pagî
*, , *);

130 
	`sqlôe3PagîSëBusyh™dÀr
(
Pagî
*, (*)(*), *);

131 
	`sqlôe3PagîSëPagesize
(
Pagî
*, 
u32
*, );

132 #ifde‡
SQLITE_HAS_CODEC


133 
	`sqlôe3PagîAlignRe£rve
(
Pagî
*,Pager*);

135 
	`sqlôe3PagîMaxPageCou¡
(
Pagî
*, );

136 
	`sqlôe3PagîSëCachesize
(
Pagî
*, );

137 
	`sqlôe3PagîSëSpûlsize
(
Pagî
*, );

138 
	`sqlôe3PagîSëMm≠Limô
(
Pagî
 *, 
sqlôe3_öt64
);

139 
	`sqlôe3PagîShrök
(
Pagî
*);

140 
	`sqlôe3PagîSëFœgs
(
Pagî
*,);

141 
	`sqlôe3PagîLockögMode
(
Pagî
 *, );

142 
	`sqlôe3PagîSëJou∫ÆMode
(
Pagî
 *, );

143 
	`sqlôe3PagîGëJou∫ÆMode
(
Pagî
*);

144 
	`sqlôe3PagîOkToCh™geJou∫ÆMode
(
Pagî
*);

145 
i64
 
	`sqlôe3PagîJou∫ÆSizeLimô
(
Pagî
 *, i64);

146 
sqlôe3_backup
 **
	`sqlôe3PagîBackupPå
(
Pagî
*);

147 
	`sqlôe3PagîFlush
(
Pagî
*);

150 
	`sqlôe3PagîGë
(
Pagî
 *
pPagî
, 
Pgno
 
pgno
, 
DbPage
 **
µPage
, 
˛rFœg
);

151 
DbPage
 *
	`sqlôe3PagîLookup
(
Pagî
 *
pPagî
, 
Pgno
 
pgno
);

152 
	`sqlôe3PagîRef
(
DbPage
*);

153 
	`sqlôe3PagîUƒef
(
DbPage
*);

154 
	`sqlôe3PagîUƒefNŸNuŒ
(
DbPage
*);

157 
	`sqlôe3PagîWrôe
(
DbPage
*);

158 
	`sqlôe3PagîD⁄tWrôe
(
DbPage
*);

159 
	`sqlôe3PagîMovïage
(
Pagî
*,
DbPage
*,
Pgno
,);

160 
	`sqlôe3PagîPageRefcou¡
(
DbPage
*);

161 *
	`sqlôe3PagîGëD©a
(
DbPage
 *);

162 *
	`sqlôe3PagîGëExåa
(
DbPage
 *);

165 
	`sqlôe3PagîPagecou¡
(
Pagî
*, *);

166 
	`sqlôe3PagîBegö
(
Pagî
*, 
exFœg
, );

167 
	`sqlôe3PagîCommôPha£O√
(
Pagî
*,c⁄° *
zMa°î
, );

168 
	`sqlôe3PagîEx˛usiveLock
(
Pagî
*);

169 
	`sqlôe3PagîSync
(
Pagî
 *
pPagî
, c⁄° *
zMa°î
);

170 
	`sqlôe3PagîCommôPha£Two
(
Pagî
*);

171 
	`sqlôe3PagîRﬁlback
(
Pagî
*);

172 
	`sqlôe3PagîO≥nSavïoöt
(
Pagî
 *
pPagî
, 
n
);

173 
	`sqlôe3PagîSavïoöt
(
Pagî
 *
pPagî
, 
›
, 
iSavïoöt
);

174 
	`sqlôe3PagîSh¨edLock
(
Pagî
 *
pPagî
);

176 #i‚de‡
SQLITE_OMIT_WAL


177 
	`sqlôe3PagîCheckpoöt
(
Pagî
 *
pPagî
, 
sqlôe3
*, , *, *);

178 
	`sqlôe3PagîWÆSuµ‹ãd
(
Pagî
 *
pPagî
);

179 
	`sqlôe3PagîWÆCÆlback
(
Pagî
 *
pPagî
);

180 
	`sqlôe3PagîO≥nWÆ
(
Pagî
 *
pPagî
, *
pisO≥n
);

181 
	`sqlôe3PagîClo£WÆ
(
Pagî
 *
pPagî
, 
sqlôe3
*);

182 
	`sqlôe3PagîU£WÆ
(
Pagî
 *
pPagî
);

183 #ifde‡
SQLITE_ENABLE_SNAPSHOT


184 
	`sqlôe3PagîS«pshŸGë
(
Pagî
 *
pPagî
, 
sqlôe3_¢≠shŸ
 **
µS«pshŸ
);

185 
	`sqlôe3PagîS«pshŸO≥n
(
Pagî
 *
pPagî
, 
sqlôe3_¢≠shŸ
 *
pS«pshŸ
);

186 
	`sqlôe3PagîS«pshŸRecovî
(
Pagî
 *
pPagî
);

189 
	#sqlôe3PagîU£WÆ
(
x
Ë0

	)

192 #ifde‡
SQLITE_ENABLE_ZIPVFS


193 
	`sqlôe3PagîWÆFømesize
(
Pagî
 *
pPagî
);

197 
u8
 
	`sqlôe3PagîI§ód⁄ly
(
Pagî
*);

198 
u32
 
	`sqlôe3PagîD©aVîsi⁄
(
Pagî
*);

199 #ifde‡
SQLITE_DEBUG


200 
	`sqlôe3PagîRefcou¡
(
Pagî
*);

202 
	`sqlôe3PagîMemU£d
(
Pagî
*);

203 c⁄° *
	`sqlôe3PagîFûíame
(
Pagî
*, );

204 
sqlôe3_vfs
 *
	`sqlôe3PagîVfs
(
Pagî
*);

205 
sqlôe3_fûe
 *
	`sqlôe3PagîFûe
(
Pagî
*);

206 
sqlôe3_fûe
 *
	`sqlôe3PagîJ∫lFûe
(
Pagî
*);

207 c⁄° *
	`sqlôe3PagîJou∫Æ«me
(
Pagî
*);

208 *
	`sqlôe3PagîTempS∑˚
(
Pagî
*);

209 
	`sqlôe3PagîIsMemdb
(
Pagî
*);

210 
	`sqlôe3PagîCacheSèt
(
Pagî
 *, , , *);

211 
	`sqlôe3PagîCÀ¨Cache
(
Pagî
*);

212 
	`sqlôe3Se˘‹Size
(
sqlôe3_fûe
 *);

215 
	`sqlôe3PagîTrunˇãImage
(
Pagî
*,
Pgno
);

217 
	`sqlôe3PagîRekey
(
DbPage
*, 
Pgno
, 
u16
);

219 #i‡
	`deföed
(
SQLITE_HAS_CODEC
Ë&& !deföed(
SQLITE_OMIT_WAL
)

220 *
	`sqlôe3PagîCodec
(
DbPage
 *);

224 #i‡!
	`deföed
(
NDEBUG
Ë|| deföed(
SQLITE_TEST
)

225 
Pgno
 
	`sqlôe3PagîPagíumbî
(
DbPage
*);

226 
	`sqlôe3PagîIswrôóbÀ
(
DbPage
*);

228 #ifde‡
SQLITE_TEST


229 *
	`sqlôe3PagîSèts
(
Pagî
*);

230 
	`sqlôe3PagîRefdump
(
Pagî
*);

231 
	`dißbÀ_simuœãd_io_îr‹s
();

232 
	`íabÀ_simuœãd_io_îr‹s
();

234 
	#dißbÀ_simuœãd_io_îr‹s
()

	)

235 
	#íabÀ_simuœãd_io_îr‹s
()

	)

	@parse.y

19 %
tokí_¥efix
 
TK_


24 %
tokí_ty≥
 {
Tokí
}

25 %
deÁu…_ty≥
 {
Tokí
}

28 %
exåa_¨gumít
 {
P¨£
 *
pP¨£
}

32 %
sy¡ax_îr‹
 {

33 
UNUSED_PARAMETER
(
yymaj‹
);

34 
as£π
–
TOKEN
.
z
[0] );

35 
sqlôe3Eº‹Msg
(
pP¨£
, "√¨ \"%T\": sy¡axÉº‹", &
TOKEN
);

37 %
°ack_ovîÊow
 {

38 
sqlôe3Eº‹Msg
(
pP¨£
, "parser stack overflow");

43 %
«me
 
sqlôe3P¨£r


48 %
ö˛ude
 {

49 
	~"sqlôeI¡.h
"

55 
	#YYNOERRORRECOVERY
 1

	)

60 
	#yyã°ˇ£
(
X
Ë
	`ã°ˇ£
(X)

	)

66 
	#YYPARSEFREENEVERNULL
 1

	)

72 
	#YYMALLOCARGTYPE
 
u64


	)

78 
	sLimôVÆ
 {

79 
Ex¥
 *
pLimô
;

80 
Ex¥
 *
pOff£t
;

92 
	sTrigEvít
 { 
a
; 
IdLi°
 * 
b
; };

98 
dißbÀLookaside
(
P¨£
 *
pP¨£
){

99 
pP¨£
->
dißbÀLookaside
++;

100 
pP¨£
->
db
->
lookaside
.
bDißbÀ
++;

106 
öput
 ::
cmdli°
.

107 
cmdli°
 ::cmdli° 
ecmd
.

108 
cmdli°
 ::
ecmd
.

109 
ecmd
 ::
SEMI
.

110 
ecmd
 ::
ex∂aö
 
cmdx
 
SEMI
.

111 
ex∂aö
 ::= .

112 %
i‚def
 
SQLITE_OMIT_EXPLAIN


113 
ex∂aö
 ::
EXPLAIN
. { 
pP¨£
->explain = 1; }

114 
ex∂aö
 ::
EXPLAIN
 
QUERY
 
PLAN
. { 
pP¨£
->explain = 2; }

115 %
ídif
 
SQLITE_OMIT_EXPLAIN


116 
cmdx
 ::
cmd
. { 
sqlôe3FöishCodög
(
pP¨£
); }

121 
cmd
 ::
BEGIN
 
	$å™°y≥
(
Y
Ë
å™s_›t
. {
	`sqlôe3BegöTønß˘i⁄
(
pP¨£
, Y);
	}
}

122 
å™s_›t
 ::= .

123 
å™s_›t
 ::
TRANSACTION
.

124 
å™s_›t
 ::
TRANSACTION
 
nm
.

125 %
ty≥
 
å™°y≥
 {}

126 
	$å™°y≥
(
A
Ë::. {A = 
TK_DEFERRED
;
	}
}

127 
	$å™°y≥
(
A
Ë::
	`DEFERRED
(
X
). {A = @X; 
	}
}

128 
	$å™°y≥
(
A
Ë::
	`IMMEDIATE
(
X
). {A = @X; 
	}
}

129 
	$å™°y≥
(
A
Ë::
	`EXCLUSIVE
(
X
). {A = @X; 
	}
}

130 
cmd
 ::
COMMIT
 
å™s_›t
. {
sqlôe3CommôTønß˘i⁄
(
pP¨£
);}

131 
cmd
 ::
END
 
å™s_›t
. {
sqlôe3CommôTønß˘i⁄
(
pP¨£
);}

132 
cmd
 ::
ROLLBACK
 
å™s_›t
. {
sqlôe3RﬁlbackTønß˘i⁄
(
pP¨£
);}

134 
ßvïoöt_›t
 ::
SAVEPOINT
.

135 
ßvïoöt_›t
 ::= .

136 
cmd
 ::
SAVEPOINT
 
nm
(
X
). {

137 
sqlôe3Savïoöt
(
pP¨£
, 
SAVEPOINT_BEGIN
, &
X
);

139 
cmd
 ::
RELEASE
 
ßvïoöt_›t
 
nm
(
X
). {

140 
sqlôe3Savïoöt
(
pP¨£
, 
SAVEPOINT_RELEASE
, &
X
);

142 
cmd
 ::
ROLLBACK
 
å™s_›t
 
TO
 
ßvïoöt_›t
 
nm
(
X
). {

143 
sqlôe3Savïoöt
(
pP¨£
, 
SAVEPOINT_ROLLBACK
, &
X
);

148 
cmd
 ::
¸óã_èbÀ
 
¸óã_èbÀ_¨gs
.

149 
¸óã_èbÀ
 ::
¸óãkw
 
	$ãmp
(
T
Ë
TABLE
 
	$i‚Ÿexi°s
(
E
Ë
	$nm
(
Y
Ë
	`dbnm
(
Z
). {

150 
	`sqlôe3SèπTabÀ
(
pP¨£
,&
Y
,&
Z
,
T
,0,0,
E
);

151 
	}
}

152 
	$¸óãkw
(
A
Ë::
	`CREATE
(A). {
	`dißbÀLookaside
(
pP¨£
);
	}
}

154 %
ty≥
 
i‚Ÿexi°s
 {}

155 
	$i‚Ÿexi°s
(
A
Ë::. {A = 0;
	}
}

156 
	$i‚Ÿexi°s
(
A
Ë::
IF
 
NOT
 
EXISTS
. {A = 1;
	}
}

157 %
ty≥
 
ãmp
 {}

158 %
i‚def
 
SQLITE_OMIT_TEMPDB


159 
	$ãmp
(
A
Ë::
TEMP
. {A = 1;
	}
}

160 %
ídif
 
SQLITE_OMIT_TEMPDB


161 
	$ãmp
(
A
Ë::. {A = 0;
	}
}

162 
¸óã_èbÀ_¨gs
 ::
LP
 
cﬁum∆i°
 
	$c⁄¶i°_›t
(
X
Ë
	$RP
(
E
Ë
	`èbÀ_›ti⁄s
(
F
). {

163 
	`sqlôe3EndTabÀ
(
pP¨£
,&
X
,&
E
,
F
,0);

164 
	}
}

165 
¸óã_èbÀ_¨gs
 ::
AS
 
£À˘
(
S
). {

166 
sqlôe3EndTabÀ
(
pP¨£
,0,0,0,
S
);

167 
sqlôe3Sñe˘Dñëe
(
pP¨£
->
db
, 
S
);

169 %
ty≥
 
èbÀ_›ti⁄s
 {}

170 
	$èbÀ_›ti⁄s
(
A
Ë::. {A = 0;
	}
}

171 
	$èbÀ_›ti⁄s
(
A
Ë::
WITHOUT
 
	`nm
(
X
). {

172 if–
X
.
n
==5 && 
	`sqlôe3_°∫icmp
(X.
z
,"rowid",5)==0 ){

173 
A
 = 
TF_WôhoutRowid
 | 
TF_NoVisibÀRowid
;

175 
A
 = 0;

176 
	`sqlôe3Eº‹Msg
(
pP¨£
, "unknow¿èbÀ o±i⁄: %.*s", 
X
.
n
, X.
z
);

178 
	}
}

179 
cﬁum∆i°
 ::cﬁum∆i° 
COMMA
 
cﬁum¬ame
 
ˇrgli°
.

180 
cﬁum∆i°
 ::
cﬁum¬ame
 
ˇrgli°
.

181 
	$cﬁum¬ame
(
A
Ë::
	$nm
(
A
Ë
	`ty≥tokí
(
Y
). {
	`sqlôe3AddCﬁumn
(
pP¨£
,&A,&Y);
	}
}

194 %
À·
 
OR
.

195 %
À·
 
AND
.

196 %
right
 
NOT
.

197 %
À·
 
IS
 
MATCH
 
LIKE_KW
 
BETWEEN
 
IN
 
ISNULL
 
NOTNULL
 
NE
 
EQ
.

198 %
À·
 
GT
 
LE
 
LT
 
GE
.

199 %
right
 
ESCAPE
.

200 %
À·
 
BITAND
 
BITOR
 
LSHIFT
 
RSHIFT
.

201 %
À·
 
PLUS
 
MINUS
.

202 %
À·
 
STAR
 
SLASH
 
REM
.

203 %
À·
 
CONCAT
.

204 %
À·
 
COLLATE
.

205 %
right
 
BITNOT
.

210 %
tokí_˛ass
 
id
 
ID
|
INDEXED
.

216 %
ÁŒback
 
ID


217 
ABORT
 
ACTION
 
AFTER
 
ANALYZE
 
ASC
 
ATTACH
 
BEFORE
 
BEGIN
 
BY
 
CASCADE
 
CAST
 
COLUMNKW


218 
CONFLICT
 
DATABASE
 
DEFERRED
 
DESC
 
DETACH
 
EACH
 
END
 
EXCLUSIVE
 
EXPLAIN
 
FAIL
 
FOR


219 
IGNORE
 
IMMEDIATE
 
INITIALLY
 
INSTEAD
 
LIKE_KW
 
MATCH
 
NO
 
PLAN


220 
QUERY
 
KEY
 
OF
 
OFFSET
 
PRAGMA
 
RAISE
 
RECURSIVE
 
RELEASE
 
REPLACE
 
RESTRICT
 
ROW


221 
ROLLBACK
 
SAVEPOINT
 
TEMP
 
TRIGGER
 
VACUUM
 
VIEW
 
VIRTUAL
 
WITH
 
WITHOUT


222 %
ifdef
 
SQLITE_OMIT_COMPOUND_SELECT


223 
EXCEPT
 
INTERSECT
 
UNION


224 %
ídif
 
SQLITE_OMIT_COMPOUND_SELECT


225 
REINDEX
 
RENAME
 
CTIME_KW
 
IF


227 %
wûdˇrd
 
ANY
.

232 %
tokí_˛ass
 
ids
 
ID
|
STRING
.

236 %
ty≥
 
nm
 {
Tokí
}

237 
	$nm
(
A
Ë::
	`id
(A).

238 
	$nm
(
A
Ë::
	`STRING
(A).

239 
	$nm
(
A
Ë::
	`JOIN_KW
(A).

245 %
ty≥
 
ty≥tokí
 {
Tokí
}

246 
	$ty≥tokí
(
A
Ë::. {A.
n
 = 0; A.
z
 = 0;
	}
}

247 
	$ty≥tokí
(
A
Ë::
	`ty≥«me
(A).

248 
	$ty≥tokí
(
A
Ë::
	$ty≥«me
(
A
Ë
LP
 sig√d 
	`RP
(
Y
). {

249 
A
.
n
 = ()(&
Y
.
z
[Y.n] - A.z);

250 
	}
}

251 
	$ty≥tokí
(
A
Ë::
	$ty≥«me
(
A
Ë
LP
 sig√d 
COMMA
 sig√d 
	`RP
(
Y
). {

252 
A
.
n
 = ()(&
Y
.
z
[Y.n] - A.z);

253 
	}
}

254 %
ty≥
 
ty≥«me
 {
Tokí
}

255 
	$ty≥«me
(
A
Ë::
	`ids
(A).

256 
	$ty≥«me
(
A
Ë::
	$ty≥«me
(
A
Ë
	`ids
(
Y
). {A.
n
=Y.n+()(Y.
z
-A.z);
	}
}

257 sig√d ::
∂us_num
.

258 sig√d ::
möus_num
.

263 
ˇrgli°
 ::ˇrgli° 
cc⁄s
.

264 
ˇrgli°
 ::= .

265 
cc⁄s
 ::
CONSTRAINT
 
nm
(
X
). {
pP¨£
->
c⁄°øötName
 = X;}

266 
cc⁄s
 ::
DEFAULT
 
ãrm
(
X
). {
sqlôe3AddDeÁu…VÆue
(
pP¨£
,&X);}

267 
cc⁄s
 ::
DEFAULT
 
LP
 
	$ex¥
(
X
Ë
RP
. {
	`sqlôe3AddDeÁu…VÆue
(
pP¨£
,&X);
	}
}

268 
cc⁄s
 ::
DEFAULT
 
PLUS
 
ãrm
(
X
). {
sqlôe3AddDeÁu…VÆue
(
pP¨£
,&X);}

269 
cc⁄s
 ::
DEFAULT
 
	$MINUS
(
A
Ë
	`ãrm
(
X
). {

270 
Ex¥S∑n
 
v
;

271 
v
.
pEx¥
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_UMINUS
, 
X
.pExpr, 0);

272 
v
.
zSèπ
 = 
A
.
z
;

273 
v
.
zEnd
 = 
X
.zEnd;

274 
	`sqlôe3AddDeÁu…VÆue
(
pP¨£
,&
v
);

275 
	}
}

276 
cc⁄s
 ::
DEFAULT
 
id
(
X
). {

277 
Ex¥S∑n
 
v
;

278 
•™Ex¥
(&
v
, 
pP¨£
, 
TK_STRING
, 
X
);

279 
sqlôe3AddDeÁu…VÆue
(
pP¨£
,&
v
);

285 
cc⁄s
 ::
NULL
 
⁄c⁄f
.

286 
cc⁄s
 ::
NOT
 
NULL
 
⁄c⁄f
(
R
). {
sqlôe3AddNŸNuŒ
(
pP¨£
, R);}

287 
cc⁄s
 ::
PRIMARY
 
KEY
 
	$s‹t‹dî
(
Z
Ë
	$⁄c⁄f
(
R
Ë
	`autoöc
(
I
).

288 {
	`sqlôe3AddPrim¨yKey
(
pP¨£
,0,
R
,
I
,
Z
);
	}
}

289 
cc⁄s
 ::
UNIQUE
 
⁄c⁄f
(
R
). {
sqlôe3Cª©eIndex
(
pP¨£
,0,0,0,0,R,0,0,0,0,

290 
SQLITE_IDXTYPE_UNIQUE
);}

291 
cc⁄s
 ::
CHECK
 
LP
 
	$ex¥
(
X
Ë
RP
. {
	`sqlôe3AddCheckC⁄°øöt
(
pP¨£
,X.
pEx¥
);
	}
}

292 
cc⁄s
 ::
REFERENCES
 
	$nm
(
T
Ë
	$eidli°_›t
(
TA
Ë
	`ªÁrgs
(
R
).

293 {
	`sqlôe3Cª©eF‹eignKey
(
pP¨£
,0,&
T
,
TA
,
R
);
	}
}

294 
cc⁄s
 ::
de„r_sub˛au£
(
D
). {
sqlôe3De„rF‹eignKey
(
pP¨£
,D);}

295 
cc⁄s
 ::
COLLATE
 
ids
(
C
). {
sqlôe3AddCﬁœãTy≥
(
pP¨£
, &C);}

298 %
ty≥
 
autoöc
 {}

299 
	$autoöc
(
X
Ë::. {X = 0;
	}
}

300 
	$autoöc
(
X
Ë::
AUTOINCR
. {X = 1;
	}
}

307 %
ty≥
 
ªÁrgs
 {}

308 
	$ªÁrgs
(
A
Ë::. { A = 
OE_N⁄e
*0x0101; 
	}
}

309 
	$ªÁrgs
(
A
Ë::
	$ªÁrgs
(
A
Ë
	`ªÁrg
(
Y
). { A = (A & ~Y.
mask
Ë| Y.
vÆue
; 
	}
}

310 %
ty≥
 
ªÁrg
 {°ru˘ {
vÆue
; 
mask
;}}

311 
	$ªÁrg
(
A
Ë::
MATCH
 
nm
. { A.
vÆue
 = 0; A.
mask
 = 0x000000; 
	}
}

312 
	$ªÁrg
(
A
Ë::
ON
 
INSERT
 
ªÁ˘
. { A.
vÆue
 = 0; A.
mask
 = 0x000000; 
	}
}

313 
	$ªÁrg
(
A
Ë::
ON
 
DELETE
 
	`ªÁ˘
(
X
). { A.
vÆue
 = X; A.
mask
 = 0x0000ff; 
	}
}

314 
	$ªÁrg
(
A
Ë::
ON
 
UPDATE
 
	`ªÁ˘
(
X
). { A.
vÆue
 = X<<8; A.
mask
 = 0x00ff00; 
	}
}

315 %
ty≥
 
ªÁ˘
 {}

316 
	$ªÁ˘
(
A
Ë::
SET
 
NULL
. { A = 
OE_SëNuŒ
; 
	}
}

317 
	$ªÁ˘
(
A
Ë::
SET
 
DEFAULT
. { A = 
OE_SëDÊt
; 
	}
}

318 
	$ªÁ˘
(
A
Ë::
CASCADE
. { A = 
OE_Casˇde
; 
	}
}

319 
	$ªÁ˘
(
A
Ë::
RESTRICT
. { A = 
OE_Re°ri˘
; 
	}
}

320 
	$ªÁ˘
(
A
Ë::
NO
 
ACTION
. { A = 
OE_N⁄e
; 
	}
}

321 %
ty≥
 
de„r_sub˛au£
 {}

322 
	$de„r_sub˛au£
(
A
Ë::
NOT
 
DEFERRABLE
 
öô_de„ºed_¥ed_›t
. {A = 0;
	}
}

323 
	$de„r_sub˛au£
(
A
Ë::
DEFERRABLE
 
	`öô_de„ºed_¥ed_›t
(
X
). {A = X;
	}
}

324 %
ty≥
 
öô_de„ºed_¥ed_›t
 {}

325 
	$öô_de„ºed_¥ed_›t
(
A
Ë::. {A = 0;
	}
}

326 
	$öô_de„ºed_¥ed_›t
(
A
Ë::
INITIALLY
 
DEFERRED
. {A = 1;
	}
}

327 
	$öô_de„ºed_¥ed_›t
(
A
Ë::
INITIALLY
 
IMMEDIATE
. {A = 0;
	}
}

329 
	$c⁄¶i°_›t
(
A
Ë::. {A.
n
 = 0; A.
z
 = 0;
	}
}

330 
	$c⁄¶i°_›t
(
A
Ë::
	$COMMA
(
A
Ë
c⁄¶i°
.

331 
c⁄¶i°
 ::c⁄¶i° 
tc⁄scomma
 
tc⁄s
.

332 
c⁄¶i°
 ::
tc⁄s
.

333 
tc⁄scomma
 ::
COMMA
. {
pP¨£
->
c⁄°øötName
.
n
 = 0;
	}
}

334 
tc⁄scomma
 ::= .

335 
tc⁄s
 ::
CONSTRAINT
 
nm
(
X
). {
pP¨£
->
c⁄°øötName
 = X;}

336 
tc⁄s
 ::
PRIMARY
 
KEY
 
LP
 
	$s‹éi°
(
X
Ë
	$autoöc
(
I
Ë
RP
 
	`⁄c⁄f
(
R
).

337 {
	`sqlôe3AddPrim¨yKey
(
pP¨£
,
X
,
R
,
I
,0);
	}
}

338 
tc⁄s
 ::
UNIQUE
 
LP
 
	$s‹éi°
(
X
Ë
RP
 
	`⁄c⁄f
(
R
).

339 {
	`sqlôe3Cª©eIndex
(
pP¨£
,0,0,0,
X
,
R
,0,0,0,0,

340 
SQLITE_IDXTYPE_UNIQUE
);
	}
}

341 
tc⁄s
 ::
CHECK
 
LP
 
	$ex¥
(
E
Ë
RP
 
⁄c⁄f
.

342 {
	`sqlôe3AddCheckC⁄°øöt
(
pP¨£
,
E
.
pEx¥
);
	}
}

343 
tc⁄s
 ::
FOREIGN
 
KEY
 
LP
 
	$eidli°
(
FA
Ë
RP


344 
REFERENCES
 
	$nm
(
T
Ë
	$eidli°_›t
(
TA
Ë
	$ªÁrgs
(
R
Ë
	`de„r_sub˛au£_›t
(
D
). {

345 
	`sqlôe3Cª©eF‹eignKey
(
pP¨£
, 
FA
, &
T
, 
TA
, 
R
);

346 
	`sqlôe3De„rF‹eignKey
(
pP¨£
, 
D
);

347 
	}
}

348 %
ty≥
 
de„r_sub˛au£_›t
 {}

349 
	$de„r_sub˛au£_›t
(
A
Ë::. {A = 0;
	}
}

350 
	$de„r_sub˛au£_›t
(
A
Ë::
	`de„r_sub˛au£
(A).

355 %
ty≥
 
⁄c⁄f
 {
	}
}

356 %
ty≥
 
‹c⁄f
 {}

357 %
ty≥
 
ªsﬁvëy≥
 {}

358 
	$⁄c⁄f
(
A
Ë::. {A = 
OE_DeÁu…
;
	}
}

359 
	$⁄c⁄f
(
A
Ë::
ON
 
CONFLICT
 
	`ªsﬁvëy≥
(
X
). {A = X;
	}
}

360 
	$‹c⁄f
(
A
Ë::. {A = 
OE_DeÁu…
;
	}
}

361 
	$‹c⁄f
(
A
Ë::
OR
 
	`ªsﬁvëy≥
(
X
). {A = X;
	}
}

362 
	$ªsﬁvëy≥
(
A
Ë::
	`øi£ty≥
(A).

363 
	$ªsﬁvëy≥
(
A
Ë::
IGNORE
. {A = 
OE_Ign‹e
;
	}
}

364 
	$ªsﬁvëy≥
(
A
Ë::
REPLACE
. {A = 
OE_Rïœ˚
;
	}
}

368 
cmd
 ::
DROP
 
TABLE
 
	$i„xi°s
(
E
Ë
	`fuŒ«me
(
X
). {

369 
	`sqlôe3Dr›TabÀ
(
pP¨£
, 
X
, 0, 
E
);

370 
	}
}

371 %
ty≥
 
i„xi°s
 {}

372 
	$i„xi°s
(
A
Ë::
IF
 
EXISTS
. {A = 1;
	}
}

373 
	$i„xi°s
(
A
Ë::. {A = 0;
	}
}

377 %
i‚def
 
SQLITE_OMIT_VIEW


378 
cmd
 ::
	$¸óãkw
(
X
Ë
	$ãmp
(
T
Ë
VIEW
 
	$i‚Ÿexi°s
(
E
Ë
	$nm
(
Y
Ë
	$dbnm
(
Z
Ë
	$eidli°_›t
(
C
)

379 
AS
 
	`£À˘
(
S
). {

380 
	`sqlôe3Cª©eVõw
(
pP¨£
, &
X
, &
Y
, &
Z
, 
C
, 
S
, 
T
, 
E
);

381 
	}
}

382 
cmd
 ::
DROP
 
VIEW
 
	$i„xi°s
(
E
Ë
	`fuŒ«me
(
X
). {

383 
	`sqlôe3Dr›TabÀ
(
pP¨£
, 
X
, 1, 
E
);

384 
	}
}

385 %
ídif
 
SQLITE_OMIT_VIEW


389 
cmd
 ::
£À˘
(
X
). {

390 
Sñe˘De°
 
de°
 = {
SRT_Ouçut
, 0, 0, 0, 0, 0};

391 
sqlôe3Sñe˘
(
pP¨£
, 
X
, &
de°
);

392 
sqlôe3Sñe˘Dñëe
(
pP¨£
->
db
, 
X
);

395 %
ty≥
 
£À˘
 {
Sñe˘
*}

396 %
de°ru˘‹
 
£À˘
 {
sqlôe3Sñe˘Dñëe
(
pP¨£
->
db
, 
$$
);}

397 %
ty≥
 
£À˘nowôh
 {
Sñe˘
*}

398 %
de°ru˘‹
 
£À˘nowôh
 {
sqlôe3Sñe˘Dñëe
(
pP¨£
->
db
, 
$$
);}

399 %
ty≥
 
⁄e£À˘
 {
Sñe˘
*}

400 %
de°ru˘‹
 
⁄e£À˘
 {
sqlôe3Sñe˘Dñëe
(
pP¨£
->
db
, 
$$
);}

402 %
ö˛ude
 {

408 
∑r£rDoubÀLökSñe˘
(
P¨£
 *
pP¨£
, 
Sñe˘
 *
p
){

409 if–
p
->
pPri‹
 ){

410 
Sñe˘
 *
pNext
 = 0, *
pLo›
;

411 
mxSñe˘
, 
˙t
 = 0;

412 
pLo›
=
p
;ÖLo›; 
pNext
ıLo›,ÖLo›ıLo›->
pPri‹
, 
˙t
++){

413 
pLo›
->
pNext
 =ÖNext;

414 
pLo›
->
£lFœgs
 |
SF_Compound
;

416 if–(
p
->
£lFœgs
 & 
SF_Mu…iVÆue
)==0 &&

417 (
mxSñe˘
 = 
pP¨£
->
db
->
aLimô
[
SQLITE_LIMIT_COMPOUND_SELECT
])>0 &&

418 
˙t
>
mxSñe˘


420 
sqlôe3Eº‹Msg
(
pP¨£
, "too manyÅerms in compound SELECT");

426 
	$£À˘
(
A
Ë::
	$wôh
(
W
Ë
	`£À˘nowôh
(
X
). {

427 
Sñe˘
 *
p
 = 
X
;

428 if–
p
 ){

429 
p
->
pWôh
 = 
W
;

430 
	`∑r£rDoubÀLökSñe˘
(
pP¨£
, 
p
);

432 
	`sqlôe3WôhDñëe
(
pP¨£
->
db
, 
W
);

434 
A
 = 
p
;

435 
	}
}

437 
	$£À˘nowôh
(
A
Ë::
	`⁄e£À˘
(A).

438 %
i‚def
 
SQLITE_OMIT_COMPOUND_SELECT


439 
	$£À˘nowôh
(
A
Ë::
	$£À˘nowôh
(
A
Ë
	$mu…i£À˘_›
(
Y
Ë
	`⁄e£À˘
(
Z
). {

440 
Sñe˘
 *
pRhs
 = 
Z
;

441 
Sñe˘
 *
pLhs
 = 
A
;

442 if–
pRhs
 &&ÖRhs->
pPri‹
 ){

443 
SrcLi°
 *
pFrom
;

444 
Tokí
 
x
;

445 
x
.
n
 = 0;

446 
	`∑r£rDoubÀLökSñe˘
(
pP¨£
, 
pRhs
);

447 
pFrom
 = 
	`sqlôe3SrcLi°AµídFromTîm
(
pP¨£
,0,0,0,&
x
,
pRhs
,0,0);

448 
pRhs
 = 
	`sqlôe3Sñe˘New
(
pP¨£
,0,
pFrom
,0,0,0,0,0,0,0);

450 if–
pRhs
 ){

451 
pRhs
->
›
 = (
u8
)
Y
;

452 
pRhs
->
pPri‹
 = 
pLhs
;

453 if–
	`ALWAYS
(
pLhs
ËËpLhs->
£lFœgs
 &~
SF_Mu…iVÆue
;

454 
pRhs
->
£lFœgs
 &~
SF_Mu…iVÆue
;

455 if–
Y
!=
TK_ALL
 ) 
pP¨£
->
hasCompound
 = 1;

457 
	`sqlôe3Sñe˘Dñëe
(
pP¨£
->
db
, 
pLhs
);

459 
A
 = 
pRhs
;

460 
	}
}

461 %
ty≥
 
mu…i£À˘_›
 {}

462 
	$mu…i£À˘_›
(
A
Ë::
	`UNION
(
OP
). {A = @OP; 
	}
}

463 
	$mu…i£À˘_›
(
A
Ë::
UNION
 
ALL
. {A = 
TK_ALL
;
	}
}

464 
	$mu…i£À˘_›
(
A
Ë::
EXCEPT
|
	`INTERSECT
(
OP
). {A = @OP; 
	}
}

465 %
ídif
 
SQLITE_OMIT_COMPOUND_SELECT


466 
	$⁄e£À˘
(
A
Ë::
	$SELECT
(
S
Ë
	$di°ö˘
(
D
Ë
	$£lcﬁli°
(
W
Ë
	$‰om
(
X
Ë
	$whîe_›t
(
Y
)

467 
	$groupby_›t
(
P
Ë
	$havög_›t
(
Q
Ë
	$‹dîby_›t
(
Z
Ë
	`limô_›t
(
L
). {

468 #i‡
SELECTTRACE_ENABLED


469 
Tokí
 
s
 = 
S
;

471 
A
 = 
	`sqlôe3Sñe˘New
(
pP¨£
,
W
,
X
,
Y
,
P
,
Q
,
Z
,
D
,
L
.
pLimô
,L.
pOff£t
);

472 #i‡
SELECTTRACE_ENABLED


482 if–
A
!=0 ){

483 c⁄° *
z
 = 
s
.z+6;

484 
i
;

485 
	`sqlôe3_¢¥ötf
((
A
->
zSñName
), A->zSelName, "#%d",

486 ++
pP¨£
->
nSñe˘
);

487  
z
[0]==' ' ) z++;

488 if–
z
[0]=='/' && z[1]=='*' ){

489 
z
 += 2;

490  
z
[0]==' ' ) z++;

491 
i
=0; 
	`sqlôe3Iß um
(
z
[i]); i++){}

492 
	`sqlôe3_¢¥ötf
((
A
->
zSñName
), A->zSñName, "%.*s", 
i
, 
z
);

496 
	}
}

497 
	$⁄e£À˘
(
A
Ë::
	`vÆues
(A).

499 %
ty≥
 
vÆues
 {
Sñe˘
*
	}
}

500 %
de°ru˘‹
 
vÆues
 {
sqlôe3Sñe˘Dñëe
(
pP¨£
->
db
, 
$$
);}

501 
	$vÆues
(
A
Ë::
VALUES
 
LP
 
	$√x¥li°
(
X
Ë
RP
. {

502 
A
 = 
	`sqlôe3Sñe˘New
(
pP¨£
,
X
,0,0,0,0,0,
SF_VÆues
,0,0);

503 
	}
}

504 
	$vÆues
(
A
Ë::
	$vÆues
(
A
Ë
COMMA
 
LP
 
	$ex¥li°
(
Y
Ë
RP
. {

505 
Sñe˘
 *
pRight
, *
pLe·
 = 
A
;

506 
pRight
 = 
	`sqlôe3Sñe˘New
(
pP¨£
,
Y
,0,0,0,0,0,
SF_VÆues
|
SF_Mu…iVÆue
,0,0);

507 if–
	`ALWAYS
(
pLe·
ËËpLe·->
£lFœgs
 &~
SF_Mu…iVÆue
;

508 if–
pRight
 ){

509 
pRight
->
›
 = 
TK_ALL
;

510 
pRight
->
pPri‹
 = 
pLe·
;

511 
A
 = 
pRight
;

513 
A
 = 
pLe·
;

515 
	}
}

520 %
ty≥
 
di°ö˘
 {}

521 
	$di°ö˘
(
A
Ë::
DISTINCT
. {A = 
SF_Di°ö˘
;
	}
}

522 
	$di°ö˘
(
A
Ë::
ALL
. {A = 
SF_AŒ
;
	}
}

523 
	$di°ö˘
(
A
Ë::. {A = 0;
	}
}

530 %
ty≥
 
£lcﬁli°
 {
Ex¥Li°
*}

531 %
de°ru˘‹
 
£lcﬁli°
 {
sqlôe3Ex¥Li°Dñëe
(
pP¨£
->
db
, 
$$
);}

532 %
ty≥
 
s˛p
 {
Ex¥Li°
*}

533 %
de°ru˘‹
 
s˛p
 {
sqlôe3Ex¥Li°Dñëe
(
pP¨£
->
db
, 
$$
);}

534 
	$s˛p
(
A
Ë::
	$£lcﬁli°
(
A
Ë
COMMA
.

535 
	$s˛p
(
A
Ë::. {A = 0;
	}
}

536 
	$£lcﬁli°
(
A
Ë::
	$s˛p
(
A
Ë
	$ex¥
(
X
Ë
	`as
(
Y
). {

537 
A
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
, A, 
X
.
pEx¥
);

538 if–
Y
.
n
>0 ) 
	`sqlôe3Ex¥Li°SëName
(
pP¨£
, 
A
, &Y, 1);

539 
	`sqlôe3Ex¥Li°SëS∑n
(
pP¨£
,
A
,&
X
);

540 
	}
}

541 
	$£lcﬁli°
(
A
Ë::
	$s˛p
(
A
Ë
STAR
. {

542 
Ex¥
 *
p
 = 
	`sqlôe3Ex¥
(
pP¨£
->
db
, 
TK_ASTERISK
, 0);

543 
A
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
, A, 
p
);

544 
	}
}

545 
	$£lcﬁli°
(
A
Ë::
	$s˛p
(
A
Ë
	$nm
(
X
Ë
DOT
 
STAR
. {

546 
Ex¥
 *
pRight
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_ASTERISK
, 0, 0);

547 
Ex¥
 *
pLe·
 = 
	`sqlôe3Ex¥AŒoc
(
pP¨£
->
db
, 
TK_ID
, &
X
, 1);

548 
Ex¥
 *
pDŸ
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_DOT
, 
pLe·
, 
pRight
);

549 
A
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
,A, 
pDŸ
);

550 
	}
}

555 %
ty≥
 
as
 {
Tokí
}

556 
	$as
(
X
Ë::
AS
 
	`nm
(
Y
). {X = Y;
	}
}

557 
	$as
(
X
Ë::
	`ids
(X).

558 
	$as
(
X
Ë::. {X.
n
 = 0; X.
z
 = 0;
	}
}

561 %
ty≥
 
£…abli°
 {
SrcLi°
*}

562 %
de°ru˘‹
 
£…abli°
 {
sqlôe3SrcLi°Dñëe
(
pP¨£
->
db
, 
$$
);}

563 %
ty≥
 
°l_¥efix
 {
SrcLi°
*}

564 %
de°ru˘‹
 
°l_¥efix
 {
sqlôe3SrcLi°Dñëe
(
pP¨£
->
db
, 
$$
);}

565 %
ty≥
 
‰om
 {
SrcLi°
*}

566 %
de°ru˘‹
 
‰om
 {
sqlôe3SrcLi°Dñëe
(
pP¨£
->
db
, 
$$
);}

570 
	$‰om
(
A
Ë::. {A = 
	`sqlôe3DbMÆlocZîo
(
pP¨£
->
db
, (*A));
	}
}

571 
	$‰om
(
A
Ë::
FROM
 
	`£…abli°
(
X
). {

572 
A
 = 
X
;

573 
	`sqlôe3SrcLi°Shi·JoöTy≥
(
A
);

574 
	}
}

579 
	$°l_¥efix
(
A
Ë::
	$£…abli°
(
A
Ë
	`joö›
(
Y
). {

580 if–
	`ALWAYS
(
A
 && A->
nSrc
>0ËËA->
a
[A->nSrc-1].
fg
.
joöty≥
 = (
u8
)
Y
;

581 
	}
}

582 
	$°l_¥efix
(
A
Ë::. {A = 0;
	}
}

583 
	$£…abli°
(
A
Ë::
	$°l_¥efix
(
A
Ë
	$nm
(
Y
Ë
	$dbnm
(
D
Ë
	$as
(
Z
Ë
	$ödexed_›t
(
I
)

584 
	$⁄_›t
(
N
Ë
	`usög_›t
(
U
). {

585 
A
 = 
	`sqlôe3SrcLi°AµídFromTîm
(
pP¨£
,A,&
Y
,&
D
,&
Z
,0,
N
,
U
);

586 
	`sqlôe3SrcLi°IndexedBy
(
pP¨£
, 
A
, &
I
);

587 
	}
}

588 
	$£…abli°
(
A
Ë::
	$°l_¥efix
(
A
Ë
	$nm
(
Y
Ë
	$dbnm
(
D
Ë
LP
 
	$ex¥li°
(
E
Ë
RP
 
	$as
(
Z
)

589 
	$⁄_›t
(
N
Ë
	`usög_›t
(
U
). {

590 
A
 = 
	`sqlôe3SrcLi°AµídFromTîm
(
pP¨£
,A,&
Y
,&
D
,&
Z
,0,
N
,
U
);

591 
	`sqlôe3SrcLi°FuncArgs
(
pP¨£
, 
A
, 
E
);

592 
	}
}

593 %
i‚def
 
SQLITE_OMIT_SUBQUERY


594 
	$£…abli°
(
A
Ë::
	$°l_¥efix
(
A
Ë
LP
 
	$£À˘
(
S
Ë
RP


595 
	$as
(
Z
Ë
	$⁄_›t
(
N
Ë
	`usög_›t
(
U
). {

596 
A
 = 
	`sqlôe3SrcLi°AµídFromTîm
(
pP¨£
,A,0,0,&
Z
,
S
,
N
,
U
);

597 
	}
}

598 
	$£…abli°
(
A
Ë::
	$°l_¥efix
(
A
Ë
LP
 
	$£…abli°
(
F
Ë
RP


599 
	$as
(
Z
Ë
	$⁄_›t
(
N
Ë
	`usög_›t
(
U
). {

600 if–
A
==0 && 
Z
.
n
==0 && 
N
==0 && 
U
==0 ){

601 
A
 = 
F
;

602 }if–
F
->
nSrc
==1 ){

603 
A
 = 
	`sqlôe3SrcLi°AµídFromTîm
(
pP¨£
,A,0,0,&
Z
,0,
N
,
U
);

604 if–
A
 ){

605 
SrcLi°_ôem
 *
pNew
 = &
A
->
a
[A->
nSrc
-1];

606 
SrcLi°_ôem
 *
pOld
 = 
F
->
a
;

607 
pNew
->
zName
 = 
pOld
->zName;

608 
pNew
->
zD©aba£
 = 
pOld
->zDatabase;

609 
pNew
->
pSñe˘
 = 
pOld
->pSelect;

610 
pOld
->
zName
 =ÖOld->
zD©aba£
 = 0;

611 
pOld
->
pSñe˘
 = 0;

613 
	`sqlôe3SrcLi°Dñëe
(
pP¨£
->
db
, 
F
);

615 
Sñe˘
 *
pSubquîy
;

616 
	`sqlôe3SrcLi°Shi·JoöTy≥
(
F
);

617 
pSubquîy
 = 
	`sqlôe3Sñe˘New
(
pP¨£
,0,
F
,0,0,0,0,
SF_Ne°edFrom
,0,0);

618 
A
 = 
	`sqlôe3SrcLi°AµídFromTîm
(
pP¨£
,A,0,0,&
Z
,
pSubquîy
,
N
,
U
);

620 
	}
}

621 %
ídif
 
SQLITE_OMIT_SUBQUERY


623 %
ty≥
 
dbnm
 {
Tokí
}

624 
	$dbnm
(
A
Ë::. {A.
z
=0; A.
n
=0;
	}
}

625 
	$dbnm
(
A
Ë::
DOT
 
	`nm
(
X
). {A = X;
	}
}

627 %
ty≥
 
fuŒ«me
 {
SrcLi°
*}

628 %
de°ru˘‹
 
fuŒ«me
 {
sqlôe3SrcLi°Dñëe
(
pP¨£
->
db
, 
$$
);}

629 
	$fuŒ«me
(
A
Ë::
	$nm
(
X
Ë
	`dbnm
(
Y
).

630 {
A
 = 
	`sqlôe3SrcLi°Aµíd
(
pP¨£
->
db
,0,&
X
,&
Y
); 
	}
}

632 %
ty≥
 
joö›
 {}

633 
	$joö›
(
X
Ë::
COMMA
|
JOIN
. { X = 
JT_INNER
; 
	}
}

634 
	$joö›
(
X
Ë::
	$JOIN_KW
(
A
Ë
JOIN
.

635 {
X
 = 
	`sqlôe3JoöTy≥
(
pP¨£
,&
A
,0,0); 
	}
}

636 
	$joö›
(
X
Ë::
	$JOIN_KW
(
A
Ë
	$nm
(
B
Ë
JOIN
.

637 {
X
 = 
	`sqlôe3JoöTy≥
(
pP¨£
,&
A
,&
B
,0); 
	}
}

638 
	$joö›
(
X
Ë::
	$JOIN_KW
(
A
Ë
	$nm
(
B
Ë
	$nm
(
C
Ë
JOIN
.

639 {
X
 = 
	`sqlôe3JoöTy≥
(
pP¨£
,&
A
,&
B
,&
C
); 
	}
}

641 %
ty≥
 
⁄_›t
 {
Ex¥
*}

642 %
de°ru˘‹
 
⁄_›t
 {
sqlôe3Ex¥Dñëe
(
pP¨£
->
db
, 
$$
);}

643 
	$⁄_›t
(
N
Ë::
ON
 
	`ex¥
(
E
). {N = E.
pEx¥
;
	}
}

644 
	$⁄_›t
(
N
Ë::. {N = 0;
	}
}

656 %
ty≥
 
ödexed_›t
 {
Tokí
}

657 
	$ödexed_›t
(
A
Ë::. {A.
z
=0; A.
n
=0;
	}
}

658 
	$ödexed_›t
(
A
Ë::
INDEXED
 
BY
 
	`nm
(
X
). {A = X;
	}
}

659 
	$ödexed_›t
(
A
Ë::
NOT
 
INDEXED
. {A.
z
=0; A.
n
=1;
	}
}

661 %
ty≥
 
usög_›t
 {
IdLi°
*}

662 %
de°ru˘‹
 
usög_›t
 {
sqlôe3IdLi°Dñëe
(
pP¨£
->
db
, 
$$
);}

663 
	$usög_›t
(
U
Ë::
USING
 
LP
 
	$idli°
(
L
Ë
RP
. {
U
 = L;
	}
}

664 
	$usög_›t
(
U
Ë::. {U = 0;
	}
}

667 %
ty≥
 
‹dîby_›t
 {
Ex¥Li°
*}

668 %
de°ru˘‹
 
‹dîby_›t
 {
sqlôe3Ex¥Li°Dñëe
(
pP¨£
->
db
, 
$$
);}

674 %
ty≥
 
s‹éi°
 {
Ex¥Li°
*}

675 %
de°ru˘‹
 
s‹éi°
 {
sqlôe3Ex¥Li°Dñëe
(
pP¨£
->
db
, 
$$
);}

677 
	$‹dîby_›t
(
A
Ë::. {A = 0;
	}
}

678 
	$‹dîby_›t
(
A
Ë::
ORDER
 
BY
 
	`s‹éi°
(
X
). {A = X;
	}
}

679 
	$s‹éi°
(
A
Ë::
	$s‹éi°
(
A
Ë
COMMA
 
	$ex¥
(
Y
Ë
	`s‹t‹dî
(
Z
). {

680 
A
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
,A,
Y
.
pEx¥
);

681 
	`sqlôe3Ex¥Li°SëS‹tOrdî
(
A
,
Z
);

682 
	}
}

683 
	$s‹éi°
(
A
Ë::
	$ex¥
(
Y
Ë
	`s‹t‹dî
(
Z
). {

684 
A
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
,0,
Y
.
pEx¥
);

685 
	`sqlôe3Ex¥Li°SëS‹tOrdî
(
A
,
Z
);

686 
	}
}

688 %
ty≥
 
s‹t‹dî
 {}

690 
	$s‹t‹dî
(
A
Ë::
ASC
. {A = 
SQLITE_SO_ASC
;
	}
}

691 
	$s‹t‹dî
(
A
Ë::
DESC
. {A = 
SQLITE_SO_DESC
;
	}
}

692 
	$s‹t‹dî
(
A
Ë::. {A = 
SQLITE_SO_UNDEFINED
;
	}
}

694 %
ty≥
 
groupby_›t
 {
Ex¥Li°
*}

695 %
de°ru˘‹
 
groupby_›t
 {
sqlôe3Ex¥Li°Dñëe
(
pP¨£
->
db
, 
$$
);}

696 
	$groupby_›t
(
A
Ë::. {A = 0;
	}
}

697 
	$groupby_›t
(
A
Ë::
GROUP
 
BY
 
	`√x¥li°
(
X
). {A = X;
	}
}

699 %
ty≥
 
havög_›t
 {
Ex¥
*}

700 %
de°ru˘‹
 
havög_›t
 {
sqlôe3Ex¥Dñëe
(
pP¨£
->
db
, 
$$
);}

701 
	$havög_›t
(
A
Ë::. {A = 0;
	}
}

702 
	$havög_›t
(
A
Ë::
HAVING
 
	`ex¥
(
X
). {A = X.
pEx¥
;
	}
}

704 %
ty≥
 
limô_›t
 {
LimôVÆ
}

717 
	$limô_›t
(
A
Ë::. {A.
pLimô
 = 0; A.
pOff£t
 = 0;
	}
}

718 
	$limô_›t
(
A
Ë::
LIMIT
 
	`ex¥
(
X
). {A.
pLimô
 = X.
pEx¥
; A.
pOff£t
 = 0;
	}
}

719 
	$limô_›t
(
A
Ë::
LIMIT
 
	$ex¥
(
X
Ë
OFFSET
 
	`ex¥
(
Y
).

720 {
A
.
pLimô
 = 
X
.
pEx¥
; A.
pOff£t
 = 
Y
.pEx¥;
	}
}

721 
	$limô_›t
(
A
Ë::
LIMIT
 
	$ex¥
(
X
Ë
COMMA
 
	`ex¥
(
Y
).

722 {
A
.
pOff£t
 = 
X
.
pEx¥
; A.
pLimô
 = 
Y
.pEx¥;
	}
}

726 %
ifdef
 
SQLITE_ENABLE_UPDATE_DELETE_LIMIT


727 
cmd
 ::
	$wôh
(
C
Ë
DELETE
 
FROM
 
	$fuŒ«me
(
X
Ë
	$ödexed_›t
(
I
Ë
	$whîe_›t
(
W
)

728 
	$‹dîby_›t
(
O
Ë
	`limô_›t
(
L
). {

729 
	`sqlôe3WôhPush
(
pP¨£
, 
C
, 1);

730 
	`sqlôe3SrcLi°IndexedBy
(
pP¨£
, 
X
, &
I
);

731 
W
 = 
	`sqlôe3LimôWhîe
(
pP¨£
, 
X
, W, 
O
, 
L
.
pLimô
, L.
pOff£t
, "DELETE");

732 
	`sqlôe3DñëeFrom
(
pP¨£
,
X
,
W
);

733 
	}
}

734 %
ídif


735 %
i‚def
 
SQLITE_ENABLE_UPDATE_DELETE_LIMIT


736 
cmd
 ::
	$wôh
(
C
Ë
DELETE
 
FROM
 
	$fuŒ«me
(
X
Ë
	$ödexed_›t
(
I
Ë
	`whîe_›t
(
W
). {

737 
	`sqlôe3WôhPush
(
pP¨£
, 
C
, 1);

738 
	`sqlôe3SrcLi°IndexedBy
(
pP¨£
, 
X
, &
I
);

739 
	`sqlôe3DñëeFrom
(
pP¨£
,
X
,
W
);

740 
	}
}

741 %
ídif


743 %
ty≥
 
whîe_›t
 {
Ex¥
*}

744 %
de°ru˘‹
 
whîe_›t
 {
sqlôe3Ex¥Dñëe
(
pP¨£
->
db
, 
$$
);}

746 
	$whîe_›t
(
A
Ë::. {A = 0;
	}
}

747 
	$whîe_›t
(
A
Ë::
WHERE
 
	`ex¥
(
X
). {A = X.
pEx¥
;
	}
}

751 %
ifdef
 
SQLITE_ENABLE_UPDATE_DELETE_LIMIT


752 
cmd
 ::
	$wôh
(
C
Ë
UPDATE
 
	$‹c⁄f
(
R
Ë
	$fuŒ«me
(
X
Ë
	$ödexed_›t
(
I
Ë
SET
 
	$£éi°
(
Y
)

753 
	$whîe_›t
(
W
Ë
	$‹dîby_›t
(
O
Ë
	`limô_›t
(
L
). {

754 
	`sqlôe3WôhPush
(
pP¨£
, 
C
, 1);

755 
	`sqlôe3SrcLi°IndexedBy
(
pP¨£
, 
X
, &
I
);

756 
	`sqlôe3Ex¥Li°CheckLígth
(
pP¨£
,
Y
,"setÜist");

757 
W
 = 
	`sqlôe3LimôWhîe
(
pP¨£
, 
X
, W, 
O
, 
L
.
pLimô
, L.
pOff£t
, "UPDATE");

758 
	`sqlôe3Upd©e
(
pP¨£
,
X
,
Y
,
W
,
R
);

759 
	}
}

760 %
ídif


761 %
i‚def
 
SQLITE_ENABLE_UPDATE_DELETE_LIMIT


762 
cmd
 ::
	$wôh
(
C
Ë
UPDATE
 
	$‹c⁄f
(
R
Ë
	$fuŒ«me
(
X
Ë
	$ödexed_›t
(
I
Ë
SET
 
	$£éi°
(
Y
)

763 
	`whîe_›t
(
W
). {

764 
	`sqlôe3WôhPush
(
pP¨£
, 
C
, 1);

765 
	`sqlôe3SrcLi°IndexedBy
(
pP¨£
, 
X
, &
I
);

766 
	`sqlôe3Ex¥Li°CheckLígth
(
pP¨£
,
Y
,"setÜist");

767 
	`sqlôe3Upd©e
(
pP¨£
,
X
,
Y
,
W
,
R
);

768 
	}
}

769 %
ídif


771 %
ty≥
 
£éi°
 {
Ex¥Li°
*}

772 %
de°ru˘‹
 
£éi°
 {
sqlôe3Ex¥Li°Dñëe
(
pP¨£
->
db
, 
$$
);}

774 
	$£éi°
(
A
Ë::
	$£éi°
(
A
Ë
COMMA
 
	$nm
(
X
Ë
EQ
 
	`ex¥
(
Y
). {

775 
A
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
, A, 
Y
.
pEx¥
);

776 
	`sqlôe3Ex¥Li°SëName
(
pP¨£
, 
A
, &
X
, 1);

777 
	}
}

778 
	$£éi°
(
A
Ë::
	$£éi°
(
A
Ë
COMMA
 
LP
 
	$idli°
(
X
Ë
RP
 
EQ
 
	`ex¥
(
Y
). {

779 
A
 = 
	`sqlôe3Ex¥Li°AµídVe˘‹
(
pP¨£
, A, 
X
, 
Y
.
pEx¥
);

780 
	}
}

781 
	$£éi°
(
A
Ë::
	$nm
(
X
Ë
EQ
 
	`ex¥
(
Y
). {

782 
A
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
, 0, 
Y
.
pEx¥
);

783 
	`sqlôe3Ex¥Li°SëName
(
pP¨£
, 
A
, &
X
, 1);

784 
	}
}

785 
	$£éi°
(
A
Ë::
LP
 
	$idli°
(
X
Ë
RP
 
EQ
 
	`ex¥
(
Y
). {

786 
A
 = 
	`sqlôe3Ex¥Li°AµídVe˘‹
(
pP¨£
, 0, 
X
, 
Y
.
pEx¥
);

787 
	}
}

791 
cmd
 ::
	$wôh
(
W
Ë
	$ö£π_cmd
(
R
Ë
INTO
 
	$fuŒ«me
(
X
Ë
	$idli°_›t
(
F
Ë
	`£À˘
(
S
). {

792 
	`sqlôe3WôhPush
(
pP¨£
, 
W
, 1);

793 
	`sqlôe3In£π
(
pP¨£
, 
X
, 
S
, 
F
, 
R
);

794 
	}
}

795 
cmd
 ::
	$wôh
(
W
Ë
	$ö£π_cmd
(
R
Ë
INTO
 
	$fuŒ«me
(
X
Ë
	$idli°_›t
(
F
Ë
DEFAULT
 
VALUES
.

797 
	`sqlôe3WôhPush
(
pP¨£
, 
W
, 1);

798 
	`sqlôe3In£π
(
pP¨£
, 
X
, 0, 
F
, 
R
);

799 
	}
}

801 %
ty≥
 
ö£π_cmd
 {}

802 
	$ö£π_cmd
(
A
Ë::
INSERT
 
	`‹c⁄f
(
R
). {A = R;
	}
}

803 
	$ö£π_cmd
(
A
Ë::
REPLACE
. {A = 
OE_Rïœ˚
;
	}
}

805 %
ty≥
 
idli°_›t
 {
IdLi°
*}

806 %
de°ru˘‹
 
idli°_›t
 {
sqlôe3IdLi°Dñëe
(
pP¨£
->
db
, 
$$
);}

807 %
ty≥
 
idli°
 {
IdLi°
*}

808 %
de°ru˘‹
 
idli°
 {
sqlôe3IdLi°Dñëe
(
pP¨£
->
db
, 
$$
);}

810 
	$idli°_›t
(
A
Ë::. {A = 0;
	}
}

811 
	$idli°_›t
(
A
Ë::
LP
 
	$idli°
(
X
Ë
RP
. {
A
 = X;
	}
}

812 
	$idli°
(
A
Ë::
	$idli°
(
A
Ë
COMMA
 
	`nm
(
Y
).

813 {
A
 = 
	`sqlôe3IdLi°Aµíd
(
pP¨£
->
db
,A,&
Y
);
	}
}

814 
	$idli°
(
A
Ë::
	`nm
(
Y
).

815 {
A
 = 
	`sqlôe3IdLi°Aµíd
(
pP¨£
->
db
,0,&
Y
); 
	}
}

820 %
ty≥
 
ex¥
 {
Ex¥S∑n
}

821 %
de°ru˘‹
 
ex¥
 {
sqlôe3Ex¥Dñëe
(
pP¨£
->
db
, 
$$
.
pEx¥
);}

822 %
ty≥
 
ãrm
 {
Ex¥S∑n
}

823 %
de°ru˘‹
 
ãrm
 {
sqlôe3Ex¥Dñëe
(
pP¨£
->
db
, 
$$
.
pEx¥
);}

825 %
ö˛ude
 {

830 
•™Së
(
Ex¥S∑n
 *
pOut
, 
Tokí
 *
pSèπ
, Tokí *
pEnd
){

831 
pOut
->
zSèπ
 = 
pSèπ
->
z
;

832 
pOut
->
zEnd
 = &
pEnd
->
z
[pEnd->
n
];

839 
•™Ex¥
(
Ex¥S∑n
 *
pOut
, 
P¨£
 *
pP¨£
, 
›
, 
Tokí
 
t
){

840 
Ex¥
 *
p
 = 
sqlôe3DbMÆlocRawNN
(
pP¨£
->
db
, (Ex¥)+
t
.
n
+1);

841 if–
p
 ){

842 
mem£t
(
p
, 0, (
Ex¥
));

843 
p
->
›
 = (
u8
)op;

844 
p
->
Êags
 = 
EP_Lóf
;

845 
p
->
iAgg
 = -1;

846 
p
->
u
.
zTokí
 = (*)&p[1];

847 
mem˝y
(
p
->
u
.
zTokí
, 
t
.
z
,Å.
n
);

848 
p
->
u
.
zTokí
[
t
.
n
] = 0;

849 if–
sqlôe3IsquŸe
(
p
->
u
.
zTokí
[0]) ){

850 if–
p
->
u
.
zTokí
[0]=='"' )Ö->
Êags
 |
EP_DblQuŸed
;

851 
sqlôe3DequŸe
(
p
->
u
.
zTokí
);

853 #i‡
SQLITE_MAX_EXPR_DEPTH
>0

854 
p
->
nHeight
 = 1;

857 
pOut
->
pEx¥
 = 
p
;

858 
pOut
->
zSèπ
 = 
t
.
z
;

859 
pOut
->
zEnd
 = &
t
.
z
[t.
n
];

863 
	$ex¥
(
A
Ë::
	`ãrm
(A).

864 
	$ex¥
(
A
Ë::
	$LP
(
B
Ë
	$ex¥
(
X
Ë
	`RP
(
E
).

865 {
	`•™Së
(&
A
,&
B
,&
E
); A.
pEx¥
 = 
X
.pEx¥;
	}
}

866 
	$ãrm
(
A
Ë::
	`NULL
(
X
). {
	`•™Ex¥
(&A,
pP¨£
,@X,X); 
	}
}

867 
	$ex¥
(
A
Ë::
	`id
(
X
). {
	`•™Ex¥
(&A,
pP¨£
,
TK_ID
,X); 
	}
}

868 
	$ex¥
(
A
Ë::
	`JOIN_KW
(
X
). {
	`•™Ex¥
(&A,
pP¨£
,
TK_ID
,X); 
	}
}

869 
	$ex¥
(
A
Ë::
	$nm
(
X
Ë
DOT
 
	`nm
(
Y
). {

870 
Ex¥
 *
ãmp1
 = 
	`sqlôe3Ex¥AŒoc
(
pP¨£
->
db
, 
TK_ID
, &
X
, 1);

871 
Ex¥
 *
ãmp2
 = 
	`sqlôe3Ex¥AŒoc
(
pP¨£
->
db
, 
TK_ID
, &
Y
, 1);

872 
	`•™Së
(&
A
,&
X
,&
Y
);

873 
A
.
pEx¥
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_DOT
, 
ãmp1
, 
ãmp2
);

874 
	}
}

875 
	$ex¥
(
A
Ë::
	$nm
(
X
Ë
DOT
 
	$nm
(
Y
Ë
DOT
 
	`nm
(
Z
). {

876 
Ex¥
 *
ãmp1
 = 
	`sqlôe3Ex¥AŒoc
(
pP¨£
->
db
, 
TK_ID
, &
X
, 1);

877 
Ex¥
 *
ãmp2
 = 
	`sqlôe3Ex¥AŒoc
(
pP¨£
->
db
, 
TK_ID
, &
Y
, 1);

878 
Ex¥
 *
ãmp3
 = 
	`sqlôe3Ex¥AŒoc
(
pP¨£
->
db
, 
TK_ID
, &
Z
, 1);

879 
Ex¥
 *
ãmp4
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_DOT
, 
ãmp2
, 
ãmp3
);

880 
	`•™Së
(&
A
,&
X
,&
Z
);

881 
A
.
pEx¥
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_DOT
, 
ãmp1
, 
ãmp4
);

882 
	}
}

883 
	$ãrm
(
A
Ë::
FLOAT
|
	`BLOB
(
X
). {
	`•™Ex¥
(&A,
pP¨£
,@X,X); 
	}
}

884 
	$ãrm
(
A
Ë::
	`STRING
(
X
). {
	`•™Ex¥
(&A,
pP¨£
,@X,X); 
	}
}

885 
	$ãrm
(
A
Ë::
	`INTEGER
(
X
). {

886 
A
.
pEx¥
 = 
	`sqlôe3Ex¥AŒoc
(
pP¨£
->
db
, 
TK_INTEGER
, &
X
, 1);

887 
A
.
zSèπ
 = 
X
.
z
;

888 
A
.
zEnd
 = 
X
.
z
 + X.
n
;

889 if–
A
.
pEx¥
 ) A.pEx¥->
Êags
 |
EP_Lóf
;

890 
	}
}

891 
	$ex¥
(
A
Ë::
	`VARIABLE
(
X
). {

892 if–!(
X
.
z
[0]=='#' && 
	`sqlôe3Isdigô
(X.z[1])) ){

893 
u32
 
n
 = 
X
.n;

894 
	`•™Ex¥
(&
A
, 
pP¨£
, 
TK_VARIABLE
, 
X
);

895 
	`sqlôe3Ex¥AssignV¨Numbî
(
pP¨£
, 
A
.
pEx¥
, 
n
);

900 
Tokí
 
t
 = 
X
;

901 
	`as£π
–
t
.
n
>=2 );

902 
	`•™Së
(&
A
, &
t
, &t);

903 if–
pP¨£
->
√°ed
==0 ){

904 
	`sqlôe3Eº‹Msg
(
pP¨£
, "√¨ \"%T\": sy¡axÉº‹", &
t
);

905 
A
.
pEx¥
 = 0;

907 
A
.
pEx¥
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_REGISTER
, 0, 0);

908 if–
A
.
pEx¥
 ) 
	`sqlôe3GëI¡32
(&
t
.
z
[1], &A.pEx¥->
iTabÀ
);

911 
	}
}

912 
	$ex¥
(
A
Ë::
	$ex¥
(
A
Ë
COLLATE
 
	`ids
(
C
). {

913 
A
.
pEx¥
 = 
	`sqlôe3Ex¥AddCﬁœãTokí
(
pP¨£
, A.pEx¥, &
C
, 1);

914 
A
.
zEnd
 = &
C
.
z
[C.
n
];

915 
	}
}

916 %
i‚def
 
SQLITE_OMIT_CAST


917 
	$ex¥
(
A
Ë::
	$CAST
(
X
Ë
LP
 
	$ex¥
(
E
Ë
AS
 
	$ty≥tokí
(
T
Ë
	`RP
(
Y
). {

918 
	`•™Së
(&
A
,&
X
,&
Y
);

919 
A
.
pEx¥
 = 
	`sqlôe3Ex¥AŒoc
(
pP¨£
->
db
, 
TK_CAST
, &
T
, 1);

920 
	`sqlôe3Ex¥AâachSubåìs
(
pP¨£
->
db
, 
A
.
pEx¥
, 
E
.pExpr, 0);

921 
	}
}

922 %
ídif
 
SQLITE_OMIT_CAST


923 
	$ex¥
(
A
Ë::
	$id
(
X
Ë
LP
 
	$di°ö˘
(
D
Ë
	$ex¥li°
(
Y
Ë
	`RP
(
E
). {

924 if–
Y
 && Y->
nEx¥
>
pP¨£
->
db
->
aLimô
[
SQLITE_LIMIT_FUNCTION_ARG
] ){

925 
	`sqlôe3Eº‹Msg
(
pP¨£
, "toÿm™yárgumít†⁄ fun˘i⁄ %T", &
X
);

927 
A
.
pEx¥
 = 
	`sqlôe3Ex¥Fun˘i⁄
(
pP¨£
, 
Y
, &
X
);

928 
	`•™Së
(&
A
,&
X
,&
E
);

929 if–
D
==
SF_Di°ö˘
 && 
A
.
pEx¥
 ){

930 
A
.
pEx¥
->
Êags
 |
EP_Di°ö˘
;

932 
	}
}

933 
	$ex¥
(
A
Ë::
	$id
(
X
Ë
LP
 
STAR
 
	`RP
(
E
). {

934 
A
.
pEx¥
 = 
	`sqlôe3Ex¥Fun˘i⁄
(
pP¨£
, 0, &
X
);

935 
	`•™Së
(&
A
,&
X
,&
E
);

936 
	}
}

937 
	$ãrm
(
A
Ë::
	`CTIME_KW
(
OP
). {

938 
A
.
pEx¥
 = 
	`sqlôe3Ex¥Fun˘i⁄
(
pP¨£
, 0, &
OP
);

939 
	`•™Së
(&
A
, &
OP
, &OP);

940 
	}
}

942 %
ö˛ude
 {

946 
•™Bö¨yEx¥
(

947 
P¨£
 *
pP¨£
,

948 
›
,

949 
Ex¥S∑n
 *
pLe·
,

950 
Ex¥S∑n
 *
pRight


952 
pLe·
->
pEx¥
 = 
sqlôe3PEx¥
(
pP¨£
, 
›
,ÖLe·->pEx¥, 
pRight
->pExpr);

953 
pLe·
->
zEnd
 = 
pRight
->zEnd;

959 
ex¥NŸ
(
P¨£
 *
pP¨£
, 
doNŸ
, 
Ex¥S∑n
 *
pS∑n
){

960 if–
doNŸ
 ){

961 
pS∑n
->
pEx¥
 = 
sqlôe3PEx¥
(
pP¨£
, 
TK_NOT
,ÖSpan->pExpr, 0);

966 
	$ex¥
(
A
Ë::
	$LP
(
L
Ë
	$√x¥li°
(
X
Ë
COMMA
 
	$ex¥
(
Y
Ë
	`RP
(
R
). {

967 
Ex¥Li°
 *
pLi°
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
, 
X
, 
Y
.
pEx¥
);

968 
A
.
pEx¥
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_VECTOR
, 0, 0);

969 if–
A
.
pEx¥
 ){

970 
A
.
pEx¥
->
x
.
pLi°
 =ÖList;

971 
	`•™Së
(&
A
, &
L
, &
R
);

973 
	`sqlôe3Ex¥Li°Dñëe
(
pP¨£
->
db
, 
pLi°
);

975 
	}
}

977 
	$ex¥
(
A
Ë::
	$ex¥
(
A
Ë
	$AND
(
OP
Ë
	`ex¥
(
Y
). {
	`•™Bö¨yEx¥
(
pP¨£
,@OP,&
A
,&Y);
	}
}

978 
	$ex¥
(
A
Ë::
	$ex¥
(
A
Ë
	$OR
(
OP
Ë
	`ex¥
(
Y
). {
	`•™Bö¨yEx¥
(
pP¨£
,@OP,&
A
,&Y);
	}
}

979 
	$ex¥
(
A
Ë::
	$ex¥
(
A
Ë
LT
|
GT
|
GE
|
	$LE
(
OP
Ë
	`ex¥
(
Y
).

980 {
	`•™Bö¨yEx¥
(
pP¨£
,@
OP
,&
A
,&
Y
);
	}
}

981 
	$ex¥
(
A
Ë::
	$ex¥
(
A
Ë
EQ
|
	$NE
(
OP
Ë
	`ex¥
(
Y
). {
	`•™Bö¨yEx¥
(
pP¨£
,@OP,&
A
,&Y);
	}
}

982 
	$ex¥
(
A
Ë::
	$ex¥
(
A
Ë
BITAND
|
BITOR
|
LSHIFT
|
	$RSHIFT
(
OP
Ë
	`ex¥
(
Y
).

983 {
	`•™Bö¨yEx¥
(
pP¨£
,@
OP
,&
A
,&
Y
);
	}
}

984 
	$ex¥
(
A
Ë::
	$ex¥
(
A
Ë
PLUS
|
	$MINUS
(
OP
Ë
	`ex¥
(
Y
).

985 {
	`•™Bö¨yEx¥
(
pP¨£
,@
OP
,&
A
,&
Y
);
	}
}

986 
	$ex¥
(
A
Ë::
	$ex¥
(
A
Ë
STAR
|
SLASH
|
	$REM
(
OP
Ë
	`ex¥
(
Y
).

987 {
	`•™Bö¨yEx¥
(
pP¨£
,@
OP
,&
A
,&
Y
);
	}
}

988 
	$ex¥
(
A
Ë::
	$ex¥
(
A
Ë
	$CONCAT
(
OP
Ë
	`ex¥
(
Y
). {
	`•™Bö¨yEx¥
(
pP¨£
,@OP,&
A
,&Y);
	}
}

989 %
ty≥
 
like›
 {
Tokí
}

990 
	$like›
(
A
Ë::
LIKE_KW
|
	`MATCH
(
X
). {A=X; 
	}
}

991 
	$like›
(
A
Ë::
NOT
 
LIKE_KW
|
	`MATCH
(
X
). {A=X; A.
n
|=0x80000000; 
	}
}

992 
	$ex¥
(
A
Ë::
	$ex¥
(
A
Ë
	$like›
(
OP
Ë
	`ex¥
(
Y
). [
LIKE_KW
] {

993 
Ex¥Li°
 *
pLi°
;

994 
bNŸ
 = 
OP
.
n
 & 0x80000000;

995 
OP
.
n
 &= 0x7fffffff;

996 
pLi°
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
,0, 
Y
.
pEx¥
);

997 
pLi°
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
,pLi°, 
A
.
pEx¥
);

998 
A
.
pEx¥
 = 
	`sqlôe3Ex¥Fun˘i⁄
(
pP¨£
, 
pLi°
, &
OP
);

999 
	`ex¥NŸ
(
pP¨£
, 
bNŸ
, &
A
);

1000 
A
.
zEnd
 = 
Y
.zEnd;

1001 if–
A
.
pEx¥
 ) A.pEx¥->
Êags
 |
EP_InfixFunc
;

1002 
	}
}

1003 
	$ex¥
(
A
Ë::
	$ex¥
(
A
Ë
	$like›
(
OP
Ë
	$ex¥
(
Y
Ë
ESCAPE
 
	`ex¥
(
E
). [
LIKE_KW
] {

1004 
Ex¥Li°
 *
pLi°
;

1005 
bNŸ
 = 
OP
.
n
 & 0x80000000;

1006 
OP
.
n
 &= 0x7fffffff;

1007 
pLi°
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
,0, 
Y
.
pEx¥
);

1008 
pLi°
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
,pLi°, 
A
.
pEx¥
);

1009 
pLi°
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
,pLi°, 
E
.
pEx¥
);

1010 
A
.
pEx¥
 = 
	`sqlôe3Ex¥Fun˘i⁄
(
pP¨£
, 
pLi°
, &
OP
);

1011 
	`ex¥NŸ
(
pP¨£
, 
bNŸ
, &
A
);

1012 
A
.
zEnd
 = 
E
.zEnd;

1013 if–
A
.
pEx¥
 ) A.pEx¥->
Êags
 |
EP_InfixFunc
;

1014 
	}
}

1016 %
ö˛ude
 {

1019 
•™U«ryPo°fix
(

1020 
P¨£
 *
pP¨£
,

1021 
›
,

1022 
Ex¥S∑n
 *
pO≥ønd
,

1023 
Tokí
 *
pPo°Op


1025 
pO≥ønd
->
pEx¥
 = 
sqlôe3PEx¥
(
pP¨£
, 
›
,ÖOperand->pExpr, 0);

1026 
pO≥ønd
->
zEnd
 = &
pPo°Op
->
z
[pPo°Op->
n
];

1030 
	$ex¥
(
A
Ë::
	$ex¥
(
A
Ë
ISNULL
|
	`NOTNULL
(
E
). {
	`•™U«ryPo°fix
(
pP¨£
,@E,&A,&E);
	}
}

1031 
	$ex¥
(
A
Ë::
	$ex¥
(
A
Ë
NOT
 
	`NULL
(
E
). {
	`•™U«ryPo°fix
(
pP¨£
,
TK_NOTNULL
,&A,&E);
	}
}

1033 %
ö˛ude
 {

1036 
bö¨yToU«ryIfNuŒ
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pY
, Ex¥ *
pA
, 
›
){

1037 
sqlôe3
 *
db
 = 
pP¨£
->db;

1038 if–
pA
 && 
pY
 &&ÖY->
›
==
TK_NULL
 ){

1039 
pA
->
›
 = (
u8
)op;

1040 
sqlôe3Ex¥Dñëe
(
db
, 
pA
->
pRight
);

1041 
pA
->
pRight
 = 0;

1052 
	$ex¥
(
A
Ë::
	$ex¥
(
A
Ë
IS
 
	`ex¥
(
Y
). {

1053 
	`•™Bö¨yEx¥
(
pP¨£
,
TK_IS
,&
A
,&
Y
);

1054 
	`bö¨yToU«ryIfNuŒ
(
pP¨£
, 
Y
.
pEx¥
, 
A
.pEx¥, 
TK_ISNULL
);

1055 
	}
}

1056 
	$ex¥
(
A
Ë::
	$ex¥
(
A
Ë
IS
 
NOT
 
	`ex¥
(
Y
). {

1057 
	`•™Bö¨yEx¥
(
pP¨£
,
TK_ISNOT
,&
A
,&
Y
);

1058 
	`bö¨yToU«ryIfNuŒ
(
pP¨£
, 
Y
.
pEx¥
, 
A
.pEx¥, 
TK_NOTNULL
);

1059 
	}
}

1061 %
ö˛ude
 {

1064 
•™U«ryPªfix
(

1065 
Ex¥S∑n
 *
pOut
,

1066 
P¨£
 *
pP¨£
,

1067 
›
,

1068 
Ex¥S∑n
 *
pO≥ønd
,

1069 
Tokí
 *
pPªOp


1071 
pOut
->
zSèπ
 = 
pPªOp
->
z
;

1072 
pOut
->
pEx¥
 = 
sqlôe3PEx¥
(
pP¨£
, 
›
, 
pO≥ønd
->pExpr, 0);

1073 
pOut
->
zEnd
 = 
pO≥ønd
->zEnd;

1079 
	$ex¥
(
A
Ë::
	$NOT
(
B
Ë
	`ex¥
(
X
).

1080 {
	`•™U«ryPªfix
(&
A
,
pP¨£
,@
B
,&
X
,&B); 
	}
}

1081 
	$ex¥
(
A
Ë::
	$BITNOT
(
B
Ë
	`ex¥
(
X
).

1082 {
	`•™U«ryPªfix
(&
A
,
pP¨£
,@
B
,&
X
,&B); 
	}
}

1083 
	$ex¥
(
A
Ë::
	$MINUS
(
B
Ë
	`ex¥
(
X
). [
BITNOT
]

1084 {
	`•™U«ryPªfix
(&
A
,
pP¨£
,
TK_UMINUS
,&
X
,&
B
); 
	}
}

1085 
	$ex¥
(
A
Ë::
	$PLUS
(
B
Ë
	`ex¥
(
X
). [
BITNOT
]

1086 {
	`•™U«ryPªfix
(&
A
,
pP¨£
,
TK_UPLUS
,&
X
,&
B
); 
	}
}

1088 %
ty≥
 
bëwìn_›
 {}

1089 
	$bëwìn_›
(
A
Ë::
BETWEEN
. {A = 0;
	}
}

1090 
	$bëwìn_›
(
A
Ë::
NOT
 
BETWEEN
. {A = 1;
	}
}

1091 
	$ex¥
(
A
Ë::
	$ex¥
(
A
Ë
	$bëwìn_›
(
N
Ë
	$ex¥
(
X
Ë
AND
 
	`ex¥
(
Y
). [
BETWEEN
] {

1092 
Ex¥Li°
 *
pLi°
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
,0, 
X
.
pEx¥
);

1093 
pLi°
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
,pLi°, 
Y
.
pEx¥
);

1094 
A
.
pEx¥
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_BETWEEN
, A.pExpr, 0);

1095 if–
A
.
pEx¥
 ){

1096 
A
.
pEx¥
->
x
.
pLi°
 =ÖList;

1098 
	`sqlôe3Ex¥Li°Dñëe
(
pP¨£
->
db
, 
pLi°
);

1100 
	`ex¥NŸ
(
pP¨£
, 
N
, &
A
);

1101 
A
.
zEnd
 = 
Y
.zEnd;

1102 
	}
}

1103 %
i‚def
 
SQLITE_OMIT_SUBQUERY


1104 %
ty≥
 
ö_›
 {}

1105 
	$ö_›
(
A
Ë::
IN
. {A = 0;
	}
}

1106 
	$ö_›
(
A
Ë::
NOT
 
IN
. {A = 1;
	}
}

1107 
	$ex¥
(
A
Ë::
	$ex¥
(
A
Ë
	$ö_›
(
N
Ë
LP
 
	$ex¥li°
(
Y
Ë
	`RP
(
E
). [
IN
] {

1108 if–
Y
==0 ){

1117 
	`sqlôe3Ex¥Dñëe
(
pP¨£
->
db
, 
A
.
pEx¥
);

1118 
A
.
pEx¥
 = 
	`sqlôe3Ex¥AŒoc
(
pP¨£
->
db
, 
TK_INTEGER
,&
sqlôe3I¡Tokís
[
N
],1);

1119 }if–
Y
->
nEx¥
==1 ){

1136 
Ex¥
 *
pRHS
 = 
Y
->
a
[0].
pEx¥
;

1137 
Y
->
a
[0].
pEx¥
 = 0;

1138 
	`sqlôe3Ex¥Li°Dñëe
(
pP¨£
->
db
, 
Y
);

1141 if–
	`ALWAYS
(
pRHS
) ){

1142 
pRHS
->
Êags
 &~
EP_Cﬁœã
;

1143 
pRHS
->
Êags
 |
EP_Gíîic
;

1145 
A
.
pEx¥
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
N
 ? 
TK_NE
 : 
TK_EQ
, A.pEx¥, 
pRHS
);

1147 
A
.
pEx¥
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_IN
, A.pExpr, 0);

1148 if–
A
.
pEx¥
 ){

1149 
A
.
pEx¥
->
x
.
pLi°
 = 
Y
;

1150 
	`sqlôe3Ex¥SëHeightAndFœgs
(
pP¨£
, 
A
.
pEx¥
);

1152 
	`sqlôe3Ex¥Li°Dñëe
(
pP¨£
->
db
, 
Y
);

1154 
	`ex¥NŸ
(
pP¨£
, 
N
, &
A
);

1156 
A
.
zEnd
 = &
E
.
z
[E.
n
];

1157 
	}
}

1158 
	$ex¥
(
A
Ë::
	$LP
(
B
Ë
	$£À˘
(
X
Ë
	`RP
(
E
). {

1159 
	`•™Së
(&
A
,&
B
,&
E
);

1160 
A
.
pEx¥
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_SELECT
, 0, 0);

1161 
	`sqlôe3PEx¥AddSñe˘
(
pP¨£
, 
A
.
pEx¥
, 
X
);

1162 
	}
}

1163 
	$ex¥
(
A
Ë::
	$ex¥
(
A
Ë
	$ö_›
(
N
Ë
LP
 
	$£À˘
(
Y
Ë
	`RP
(
E
). [
IN
] {

1164 
A
.
pEx¥
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_IN
, A.pExpr, 0);

1165 
	`sqlôe3PEx¥AddSñe˘
(
pP¨£
, 
A
.
pEx¥
, 
Y
);

1166 
	`ex¥NŸ
(
pP¨£
, 
N
, &
A
);

1167 
A
.
zEnd
 = &
E
.
z
[E.
n
];

1168 
	}
}

1169 
	$ex¥
(
A
Ë::
	$ex¥
(
A
Ë
	$ö_›
(
N
Ë
	$nm
(
Y
Ë
	$dbnm
(
Z
Ë
	`∑ªn_ex¥li°
(
E
). [
IN
] {

1170 
SrcLi°
 *
pSrc
 = 
	`sqlôe3SrcLi°Aµíd
(
pP¨£
->
db
, 0,&
Y
,&
Z
);

1171 
Sñe˘
 *
pSñe˘
 = 
	`sqlôe3Sñe˘New
(
pP¨£
, 0,
pSrc
,0,0,0,0,0,0,0);

1172 if–
E
 ) 
	`sqlôe3SrcLi°FuncArgs
(
pP¨£
, 
pSñe˘
 ? 
pSrc
 : 0, E);

1173 
A
.
pEx¥
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_IN
, A.pExpr, 0);

1174 
	`sqlôe3PEx¥AddSñe˘
(
pP¨£
, 
A
.
pEx¥
, 
pSñe˘
);

1175 
	`ex¥NŸ
(
pP¨£
, 
N
, &
A
);

1176 
A
.
zEnd
 = 
Z
.
z
 ? &Z.z[Z.
n
] : &
Y
.z[Y.n];

1177 
	}
}

1178 
	$ex¥
(
A
Ë::
	$EXISTS
(
B
Ë
LP
 
	$£À˘
(
Y
Ë
	`RP
(
E
). {

1179 
Ex¥
 *
p
;

1180 
	`•™Së
(&
A
,&
B
,&
E
);

1181 
p
 = 
A
.
pEx¥
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_EXISTS
, 0, 0);

1182 
	`sqlôe3PEx¥AddSñe˘
(
pP¨£
, 
p
, 
Y
);

1183 
	}
}

1184 %
ídif
 
SQLITE_OMIT_SUBQUERY


1187 
	$ex¥
(
A
Ë::
	$CASE
(
C
Ë
	$ˇ£_›î™d
(
X
Ë
	$ˇ£_ex¥li°
(
Y
Ë
	$ˇ£_ñ£
(
Z
Ë
	`END
(
E
). {

1188 
	`•™Së
(&
A
,&
C
,&
E
);

1189 
A
.
pEx¥
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_CASE
, 
X
, 0);

1190 if–
A
.
pEx¥
 ){

1191 
A
.
pEx¥
->
x
.
pLi°
 = 
Z
 ? 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
,
Y
,Z) : Y;

1192 
	`sqlôe3Ex¥SëHeightAndFœgs
(
pP¨£
, 
A
.
pEx¥
);

1194 
	`sqlôe3Ex¥Li°Dñëe
(
pP¨£
->
db
, 
Y
);

1195 
	`sqlôe3Ex¥Dñëe
(
pP¨£
->
db
, 
Z
);

1197 
	}
}

1198 %
ty≥
 
ˇ£_ex¥li°
 {
Ex¥Li°
*}

1199 %
de°ru˘‹
 
ˇ£_ex¥li°
 {
sqlôe3Ex¥Li°Dñëe
(
pP¨£
->
db
, 
$$
);}

1200 
	$ˇ£_ex¥li°
(
A
Ë::
	$ˇ£_ex¥li°
(
A
Ë
WHEN
 
	$ex¥
(
Y
Ë
THEN
 
	`ex¥
(
Z
). {

1201 
A
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
,A, 
Y
.
pEx¥
);

1202 
A
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
,A, 
Z
.
pEx¥
);

1203 
	}
}

1204 
	$ˇ£_ex¥li°
(
A
Ë::
WHEN
 
	$ex¥
(
Y
Ë
THEN
 
	`ex¥
(
Z
). {

1205 
A
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
,0, 
Y
.
pEx¥
);

1206 
A
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
,A, 
Z
.
pEx¥
);

1207 
	}
}

1208 %
ty≥
 
ˇ£_ñ£
 {
Ex¥
*}

1209 %
de°ru˘‹
 
ˇ£_ñ£
 {
sqlôe3Ex¥Dñëe
(
pP¨£
->
db
, 
$$
);}

1210 
	$ˇ£_ñ£
(
A
Ë::
ELSE
 
	`ex¥
(
X
). {A = X.
pEx¥
;
	}
}

1211 
	$ˇ£_ñ£
(
A
Ë::. {A = 0;
	}
}

1212 %
ty≥
 
ˇ£_›î™d
 {
Ex¥
*}

1213 %
de°ru˘‹
 
ˇ£_›î™d
 {
sqlôe3Ex¥Dñëe
(
pP¨£
->
db
, 
$$
);}

1214 
	$ˇ£_›î™d
(
A
Ë::
	`ex¥
(
X
). {A = X.
pEx¥
; 
	}
}

1215 
	$ˇ£_›î™d
(
A
Ë::. {A = 0;
	}
}

1217 %
ty≥
 
ex¥li°
 {
Ex¥Li°
*}

1218 %
de°ru˘‹
 
ex¥li°
 {
sqlôe3Ex¥Li°Dñëe
(
pP¨£
->
db
, 
$$
);}

1219 %
ty≥
 
√x¥li°
 {
Ex¥Li°
*}

1220 %
de°ru˘‹
 
√x¥li°
 {
sqlôe3Ex¥Li°Dñëe
(
pP¨£
->
db
, 
$$
);}

1222 
	$ex¥li°
(
A
Ë::
	`√x¥li°
(A).

1223 
	$ex¥li°
(
A
Ë::. {A = 0;
	}
}

1224 
	$√x¥li°
(
A
Ë::
	$√x¥li°
(
A
Ë
COMMA
 
	`ex¥
(
Y
).

1225 {
A
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
,A,
Y
.
pEx¥
);
	}
}

1226 
	$√x¥li°
(
A
Ë::
	`ex¥
(
Y
).

1227 {
A
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
,0,
Y
.
pEx¥
); 
	}
}

1229 %
i‚def
 
SQLITE_OMIT_SUBQUERY


1232 %
ty≥
 
∑ªn_ex¥li°
 {
Ex¥Li°
*}

1233 %
de°ru˘‹
 
∑ªn_ex¥li°
 {
sqlôe3Ex¥Li°Dñëe
(
pP¨£
->
db
, 
$$
);}

1234 
	$∑ªn_ex¥li°
(
A
Ë::. {A = 0;
	}
}

1235 
	$∑ªn_ex¥li°
(
A
Ë::
LP
 
	$ex¥li°
(
X
Ë
RP
. {
A
 = X;
	}
}

1236 %
ídif
 
SQLITE_OMIT_SUBQUERY


1241 
cmd
 ::
	$¸óãkw
(
S
Ë
	$uniqueÊag
(
U
Ë
INDEX
 
	$i‚Ÿexi°s
(
NE
Ë
	$nm
(
X
Ë
	$dbnm
(
D
)

1242 
ON
 
	$nm
(
Y
Ë
LP
 
	$s‹éi°
(
Z
Ë
RP
 
	`whîe_›t
(
W
). {

1243 
	`sqlôe3Cª©eIndex
(
pP¨£
, &
X
, &
D
,

1244 
	`sqlôe3SrcLi°Aµíd
(
pP¨£
->
db
,0,&
Y
,0), 
Z
, 
U
,

1245 &
S
, 
W
, 
SQLITE_SO_ASC
, 
NE
, 
SQLITE_IDXTYPE_APPDEF
);

1246 
	}
}

1248 %
ty≥
 
uniqueÊag
 {}

1249 
	$uniqueÊag
(
A
Ë::
UNIQUE
. {A = 
OE_Ab‹t
;
	}
}

1250 
	$uniqueÊag
(
A
Ë::. {A = 
OE_N⁄e
;
	}
}

1268 %
ty≥
 
eidli°
 {
Ex¥Li°
*}

1269 %
de°ru˘‹
 
eidli°
 {
sqlôe3Ex¥Li°Dñëe
(
pP¨£
->
db
, 
$$
);}

1270 %
ty≥
 
eidli°_›t
 {
Ex¥Li°
*}

1271 %
de°ru˘‹
 
eidli°_›t
 {
sqlôe3Ex¥Li°Dñëe
(
pP¨£
->
db
, 
$$
);}

1273 %
ö˛ude
 {

1279 
Ex¥Li°
 *
∑r£rAddEx¥IdLi°Tîm
(

1280 
P¨£
 *
pP¨£
,

1281 
Ex¥Li°
 *
pPri‹
,

1282 
Tokí
 *
pIdTokí
,

1283 
hasCﬁœã
,

1284 
s‹tOrdî


1286 
Ex¥Li°
 *
p
 = 
sqlôe3Ex¥Li°Aµíd
(
pP¨£
, 
pPri‹
, 0);

1287 if–(
hasCﬁœã
 || 
s‹tOrdî
!=
SQLITE_SO_UNDEFINED
)

1288 && 
pP¨£
->
db
->
öô
.
busy
==0

1290 
sqlôe3Eº‹Msg
(
pP¨£
, "syntaxÉrroráfter columnÇame \"%.*s\"",

1291 
pIdTokí
->
n
,ÖIdTokí->
z
);

1293 
sqlôe3Ex¥Li°SëName
(
pP¨£
, 
p
, 
pIdTokí
, 1);

1294  
p
;

1298 
	$eidli°_›t
(
A
Ë::. {A = 0;
	}
}

1299 
	$eidli°_›t
(
A
Ë::
LP
 
	$eidli°
(
X
Ë
RP
. {
A
 = X;
	}
}

1300 
	$eidli°
(
A
Ë::
	$eidli°
(
A
Ë
COMMA
 
	$nm
(
Y
Ë
	$cﬁœã
(
C
Ë
	`s‹t‹dî
(
Z
). {

1301 
A
 = 
	`∑r£rAddEx¥IdLi°Tîm
(
pP¨£
, A, &
Y
, 
C
, 
Z
);

1302 
	}
}

1303 
	$eidli°
(
A
Ë::
	$nm
(
Y
Ë
	$cﬁœã
(
C
Ë
	`s‹t‹dî
(
Z
). {

1304 
A
 = 
	`∑r£rAddEx¥IdLi°Tîm
(
pP¨£
, 0, &
Y
, 
C
, 
Z
);

1305 
	}
}

1307 %
ty≥
 
cﬁœã
 {}

1308 
	$cﬁœã
(
C
Ë::. {C = 0;
	}
}

1309 
	$cﬁœã
(
C
Ë::
COLLATE
 
ids
. {C = 1;
	}
}

1314 
cmd
 ::
DROP
 
INDEX
 
	$i„xi°s
(
E
Ë
	`fuŒ«me
(
X
). {
	`sqlôe3Dr›Index
(
pP¨£
, X, E);
	}
}

1318 %
i‚def
 
SQLITE_OMIT_VACUUM


1319 %
i‚def
 
SQLITE_OMIT_ATTACH


1320 
cmd
 ::
VACUUM
. {
sqlôe3Vacuum
(
pP¨£
,0);}

1321 
cmd
 ::
VACUUM
 
nm
(
X
). {
sqlôe3Vacuum
(
pP¨£
,&X);}

1322 %
ídif
 
SQLITE_OMIT_ATTACH


1323 %
ídif
 
SQLITE_OMIT_VACUUM


1327 %
i‚def
 
SQLITE_OMIT_PRAGMA


1328 
cmd
 ::
PRAGMA
 
	$nm
(
X
Ë
	`dbnm
(
Z
). {
	`sqlôe3Pøgma
(
pP¨£
,&X,&Z,0,0);
	}
}

1329 
cmd
 ::
PRAGMA
 
	$nm
(
X
Ë
	$dbnm
(
Z
Ë
EQ
 
	`nmnum
(
Y
). {
	`sqlôe3Pøgma
(
pP¨£
,&
X
,&Z,&Y,0);
	}
}

1330 
cmd
 ::
PRAGMA
 
	$nm
(
X
Ë
	$dbnm
(
Z
Ë
LP
 
	$nmnum
(
Y
Ë
RP
. {
	`sqlôe3Pøgma
(
pP¨£
,&
X
,&
Z
,&Y,0);
	}
}

1331 
cmd
 ::
PRAGMA
 
	$nm
(
X
Ë
	$dbnm
(
Z
Ë
EQ
 
	`möus_num
(
Y
).

1332 {
	`sqlôe3Pøgma
(
pP¨£
,&
X
,&
Z
,&
Y
,1);
	}
}

1333 
cmd
 ::
PRAGMA
 
	$nm
(
X
Ë
	$dbnm
(
Z
Ë
LP
 
	$möus_num
(
Y
Ë
RP
.

1334 {
	`sqlôe3Pøgma
(
pP¨£
,&
X
,&
Z
,&
Y
,1);
	}
}

1336 
	$nmnum
(
A
Ë::
	`∂us_num
(A).

1337 
	$nmnum
(
A
Ë::
	`nm
(A).

1338 
	$nmnum
(
A
Ë::
	`ON
(A).

1339 
	$nmnum
(
A
Ë::
	`DELETE
(A).

1340 
	$nmnum
(
A
Ë::
	`DEFAULT
(A).

1341 %
ídif
 
SQLITE_OMIT_PRAGMA


1342 %
tokí_˛ass
 
numbî
 
INTEGER
|
FLOAT
.

1343 
	$∂us_num
(
A
Ë::
PLUS
 
	`numbî
(
X
). {A = X;
	}
}

1344 
	$∂us_num
(
A
Ë::
	`numbî
(A).

1345 
	$möus_num
(
A
Ë::
MINUS
 
	`numbî
(
X
). {A = X;
	}
}

1348 %
i‚def
 
SQLITE_OMIT_TRIGGER


1350 
cmd
 ::
¸óãkw
 
	$åiggî_de˛
(
A
Ë
BEGIN
 
	$åiggî_cmd_li°
(
S
Ë
	`END
(
Z
). {

1351 
Tokí
 
Æl
;

1352 
Æl
.
z
 = 
A
.z;

1353 
Æl
.
n
 = ()(
Z
.
z
 - 
A
.z) + Z.n;

1354 
	`sqlôe3FöishTriggî
(
pP¨£
, 
S
, &
Æl
);

1355 
	}
}

1357 
	$åiggî_de˛
(
A
Ë::
	$ãmp
(
T
Ë
TRIGGER
 
	$i‚Ÿexi°s
(
NOERR
Ë
	$nm
(
B
Ë
	$dbnm
(
Z
)

1358 
	$åiggî_time
(
C
Ë
	$åiggî_evít
(
D
)

1359 
ON
 
	$fuŒ«me
(
E
Ë
f‹óch_˛au£
 
	`whí_˛au£
(
G
). {

1360 
	`sqlôe3BegöTriggî
(
pP¨£
, &
B
, &
Z
, 
C
, 
D
.
a
, D.
b
, 
E
, 
G
, 
T
, 
NOERR
);

1361 
A
 = (
Z
.
n
==0?
B
:Z);

1362 
	}
}

1364 %
ty≥
 
åiggî_time
 {}

1365 
	$åiggî_time
(
A
Ë::
BEFORE
. { A = 
TK_BEFORE
; 
	}
}

1366 
	$åiggî_time
(
A
Ë::
AFTER
. { A = 
TK_AFTER
; 
	}
}

1367 
	$åiggî_time
(
A
Ë::
INSTEAD
 
OF
. { A = 
TK_INSTEAD
;
	}
}

1368 
	$åiggî_time
(
A
Ë::. { A = 
TK_BEFORE
; 
	}
}

1370 %
ty≥
 
åiggî_evít
 {
TrigEvít
}

1371 %
de°ru˘‹
 
åiggî_evít
 {
sqlôe3IdLi°Dñëe
(
pP¨£
->
db
, 
$$
.
b
);}

1372 
	$åiggî_evít
(
A
Ë::
DELETE
|
	`INSERT
(
X
). {A.
a
 = @X; A.
b
 = 0;
	}
}

1373 
	$åiggî_evít
(
A
Ë::
	`UPDATE
(
X
). {A.
a
 = @X; A.
b
 = 0;
	}
}

1374 
	$åiggî_evít
(
A
Ë::
UPDATE
 
OF
 
	`idli°
(
X
).{A.
a
 = 
TK_UPDATE
; A.
b
 = X;
	}
}

1376 
f‹óch_˛au£
 ::= .

1377 
f‹óch_˛au£
 ::
FOR
 
EACH
 
ROW
.

1379 %
ty≥
 
whí_˛au£
 {
Ex¥
*}

1380 %
de°ru˘‹
 
whí_˛au£
 {
sqlôe3Ex¥Dñëe
(
pP¨£
->
db
, 
$$
);}

1381 
	$whí_˛au£
(
A
Ë::. { A = 0; 
	}
}

1382 
	$whí_˛au£
(
A
Ë::
WHEN
 
	`ex¥
(
X
). { A = X.
pEx¥
; 
	}
}

1384 %
ty≥
 
åiggî_cmd_li°
 {
TriggîSãp
*}

1385 %
de°ru˘‹
 
åiggî_cmd_li°
 {
sqlôe3DñëeTriggîSãp
(
pP¨£
->
db
, 
$$
);}

1386 
	$åiggî_cmd_li°
(
A
Ë::
	$åiggî_cmd_li°
(
A
Ë
	$åiggî_cmd
(
X
Ë
SEMI
. {

1387 
	`as£π
–
A
!=0 );

1388 
A
->
pLa°
->
pNext
 = 
X
;

1389 
A
->
pLa°
 = 
X
;

1390 
	}
}

1391 
	$åiggî_cmd_li°
(
A
Ë::
	$åiggî_cmd
(
A
Ë
SEMI
. {

1392 
	`as£π
–
A
!=0 );

1393 
A
->
pLa°
 = A;

1394 
	}
}

1400 %
ty≥
 
ånm
 {
Tokí
}

1401 
	$ånm
(
A
Ë::
	`nm
(A).

1402 
	$ånm
(
A
Ë::
nm
 
DOT
 
	`nm
(
X
). {

1403 
A
 = 
X
;

1404 
	`sqlôe3Eº‹Msg
(
pP¨£
,

1407 
	}
}

1413 
åidxby
 ::= .

1414 
åidxby
 ::
INDEXED
 
BY
 
nm
. {

1415 
sqlôe3Eº‹Msg
(
pP¨£
,

1419 
åidxby
 ::
NOT
 
INDEXED
. {

1420 
sqlôe3Eº‹Msg
(
pP¨£
,

1427 %
ty≥
 
åiggî_cmd
 {
TriggîSãp
*}

1428 %
de°ru˘‹
 
åiggî_cmd
 {
sqlôe3DñëeTriggîSãp
(
pP¨£
->
db
, 
$$
);}

1430 
	$åiggî_cmd
(
A
) ::=

1431 
UPDATE
 
	$‹c⁄f
(
R
Ë
	$ånm
(
X
Ë
åidxby
 
SET
 
	$£éi°
(
Y
Ë
	`whîe_›t
(
Z
).

1432 {
A
 = 
	`sqlôe3TriggîUpd©eSãp
(
pP¨£
->
db
, &
X
, 
Y
, 
Z
, 
R
);
	}
}

1435 
	$åiggî_cmd
(
A
Ë::
	$ö£π_cmd
(
R
Ë
INTO
 
	$ånm
(
X
Ë
	$idli°_›t
(
F
Ë
	`£À˘
(
S
).

1436 {
A
 = 
	`sqlôe3TriggîIn£πSãp
(
pP¨£
->
db
, &
X
, 
F
, 
S
, 
R
); 
	}
}

1439 
	$åiggî_cmd
(
A
Ë::
DELETE
 
FROM
 
	$ånm
(
X
Ë
åidxby
 
	`whîe_›t
(
Y
).

1440 {
A
 = 
	`sqlôe3TriggîDñëeSãp
(
pP¨£
->
db
, &
X
, 
Y
);
	}
}

1443 
	$åiggî_cmd
(
A
Ë::
	`£À˘
(
X
).

1444 {
A
 = 
	`sqlôe3TriggîSñe˘Sãp
(
pP¨£
->
db
, 
X
); 
	}
}

1447 
	$ex¥
(
A
Ë::
	$RAISE
(
X
Ë
LP
 
IGNORE
 
	`RP
(
Y
). {

1448 
	`•™Së
(&
A
,&
X
,&
Y
);

1449 
A
.
pEx¥
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_RAISE
, 0, 0);

1450 if–
A
.
pEx¥
 ){

1451 
A
.
pEx¥
->
afföôy
 = 
OE_Ign‹e
;

1453 
	}
}

1454 
	$ex¥
(
A
Ë::
	$RAISE
(
X
Ë
LP
 
	$øi£ty≥
(
T
Ë
COMMA
 
	$nm
(
Z
Ë
	`RP
(
Y
). {

1455 
	`•™Së
(&
A
,&
X
,&
Y
);

1456 
A
.
pEx¥
 = 
	`sqlôe3Ex¥AŒoc
(
pP¨£
->
db
, 
TK_RAISE
, &
Z
, 1);

1457 if–
A
.
pEx¥
 ) {

1458 
A
.
pEx¥
->
afföôy
 = ()
T
;

1460 
	}
}

1461 %
ídif
 !
SQLITE_OMIT_TRIGGER


1463 %
ty≥
 
øi£ty≥
 {}

1464 
	$øi£ty≥
(
A
Ë::
ROLLBACK
. {A = 
OE_Rﬁlback
;
	}
}

1465 
	$øi£ty≥
(
A
Ë::
ABORT
. {A = 
OE_Ab‹t
;
	}
}

1466 
	$øi£ty≥
(
A
Ë::
FAIL
. {A = 
OE_Faû
;
	}
}

1470 %
i‚def
 
SQLITE_OMIT_TRIGGER


1471 
cmd
 ::
DROP
 
TRIGGER
 
	$i„xi°s
(
NOERR
Ë
	`fuŒ«me
(
X
). {

1472 
	`sqlôe3Dr›Triggî
(
pP¨£
,
X
,
NOERR
);

1473 
	}
}

1474 %
ídif
 !
SQLITE_OMIT_TRIGGER


1477 %
i‚def
 
SQLITE_OMIT_ATTACH


1478 
cmd
 ::
ATTACH
 
d©aba£_kw_›t
 
	$ex¥
(
F
Ë
AS
 
	$ex¥
(
D
Ë
	`key_›t
(
K
). {

1479 
	`sqlôe3Aâach
(
pP¨£
, 
F
.
pEx¥
, 
D
.pEx¥, 
K
);

1480 
	}
}

1481 
cmd
 ::
DETACH
 
d©aba£_kw_›t
 
ex¥
(
D
). {

1482 
sqlôe3Dëach
(
pP¨£
, 
D
.
pEx¥
);

1485 %
ty≥
 
key_›t
 {
Ex¥
*}

1486 %
de°ru˘‹
 
key_›t
 {
sqlôe3Ex¥Dñëe
(
pP¨£
->
db
, 
$$
);}

1487 
	$key_›t
(
A
Ë::. { A = 0; 
	}
}

1488 
	$key_›t
(
A
Ë::
KEY
 
	`ex¥
(
X
). { A = X.
pEx¥
; 
	}
}

1490 
d©aba£_kw_›t
 ::
DATABASE
.

1491 
d©aba£_kw_›t
 ::= .

1492 %
ídif
 
SQLITE_OMIT_ATTACH


1495 %
i‚def
 
SQLITE_OMIT_REINDEX


1496 
cmd
 ::
REINDEX
. {
sqlôe3Reödex
(
pP¨£
, 0, 0);}

1497 
cmd
 ::
REINDEX
 
	$nm
(
X
Ë
	`dbnm
(
Y
). {
	`sqlôe3Reödex
(
pP¨£
, &X, &Y);
	}
}

1498 %
ídif
 
SQLITE_OMIT_REINDEX


1501 %
i‚def
 
SQLITE_OMIT_ANALYZE


1502 
cmd
 ::
ANALYZE
. {
sqlôe3A«lyze
(
pP¨£
, 0, 0);}

1503 
cmd
 ::
ANALYZE
 
	$nm
(
X
Ë
	`dbnm
(
Y
). {
	`sqlôe3A«lyze
(
pP¨£
, &X, &Y);
	}
}

1504 %
ídif


1507 %
i‚def
 
SQLITE_OMIT_ALTERTABLE


1508 
cmd
 ::
ALTER
 
TABLE
 
	$fuŒ«me
(
X
Ë
RENAME
 
TO
 
	`nm
(
Z
). {

1509 
	`sqlôe3A…îRíameTabÀ
(
pP¨£
,
X
,&
Z
);

1510 
	}
}

1511 
cmd
 ::
ALTER
 
TABLE
 
add_cﬁumn_fuŒ«me


1512 
ADD
 
kwcﬁumn_›t
 
	$cﬁum¬ame
(
Y
Ë
ˇrgli°
. {

1513 
Y
.
n
 = ()(
pP¨£
->
sLa°Tokí
.
z
-Y.z) +ÖParse->sLastToken.n;

1514 
	`sqlôe3A…îFöishAddCﬁumn
(
pP¨£
, &
Y
);

1515 
	}
}

1516 
add_cﬁumn_fuŒ«me
 ::
fuŒ«me
(
X
). {

1517 
dißbÀLookaside
(
pP¨£
);

1518 
sqlôe3A…îBegöAddCﬁumn
(
pP¨£
, 
X
);

1520 
kwcﬁumn_›t
 ::= .

1521 
kwcﬁumn_›t
 ::
COLUMNKW
.

1522 %
ídif
 
SQLITE_OMIT_ALTERTABLE


1525 %
i‚def
 
SQLITE_OMIT_VIRTUALTABLE


1526 
cmd
 ::
¸óã_vèb
. {
sqlôe3VèbFöishP¨£
(
pP¨£
,0);}

1527 
cmd
 ::
¸óã_vèb
 
LP
 
vèb¨gli°
 
RP
(
X
). {
sqlôe3VèbFöishP¨£
(
pP¨£
,&X);}

1528 
¸óã_vèb
 ::
¸óãkw
 
VIRTUAL
 
TABLE
 
	$i‚Ÿexi°s
(
E
)

1529 
	$nm
(
X
Ë
	$dbnm
(
Y
Ë
USING
 
	`nm
(
Z
). {

1530 
	`sqlôe3VèbBegöP¨£
(
pP¨£
, &
X
, &
Y
, &
Z
, 
E
);

1531 
	}
}

1532 
vèb¨gli°
 ::
vèb¨g
.

1533 
vèb¨gli°
 ::vèb¨gli° 
COMMA
 
vèb¨g
.

1534 
vèb¨g
 ::. {
sqlôe3VèbArgInô
(
pP¨£
);}

1535 
vèb¨g
 ::vèb¨g 
vèb¨gtokí
.

1536 
vèb¨gtokí
 ::
ANY
(
X
). {
sqlôe3VèbArgExãnd
(
pP¨£
,&X);}

1537 
vèb¨gtokí
 ::
Õ
 
™yli°
 
RP
(
X
). {
sqlôe3VèbArgExãnd
(
pP¨£
,&X);}

1538 
Õ
 ::
LP
(
X
). {
sqlôe3VèbArgExãnd
(
pP¨£
,&X);}

1539 
™yli°
 ::= .

1540 
™yli°
 ::™yli° 
LP
ányli° 
RP
.

1541 
™yli°
 ::™yli° 
ANY
.

1542 %
ídif
 
SQLITE_OMIT_VIRTUALTABLE


1546 %
ty≥
 
wôh
 {
Wôh
*}

1547 %
ty≥
 
wqli°
 {
Wôh
*}

1548 %
de°ru˘‹
 
wôh
 {
sqlôe3WôhDñëe
(
pP¨£
->
db
, 
$$
);}

1549 %
de°ru˘‹
 
wqli°
 {
sqlôe3WôhDñëe
(
pP¨£
->
db
, 
$$
);}

1551 
	$wôh
(
A
Ë::. {A = 0;
	}
}

1552 %
i‚def
 
SQLITE_OMIT_CTE


1553 
	$wôh
(
A
Ë::
WITH
 
	`wqli°
(
W
). { A = W; 
	}
}

1554 
	$wôh
(
A
Ë::
WITH
 
RECURSIVE
 
	`wqli°
(
W
). { A = W; 
	}
}

1556 
	$wqli°
(
A
Ë::
	$nm
(
X
Ë
	$eidli°_›t
(
Y
Ë
AS
 
LP
 
	$£À˘
(
Z
Ë
RP
. {

1557 
A
 = 
	`sqlôe3WôhAdd
(
pP¨£
, 0, &
X
, 
Y
, 
Z
);

1558 
	}
}

1559 
	$wqli°
(
A
Ë::
	$wqli°
(
A
Ë
COMMA
 
	$nm
(
X
Ë
	$eidli°_›t
(
Y
Ë
AS
 
LP
 
	$£À˘
(
Z
Ë
RP
. {

1560 
A
 = 
	`sqlôe3WôhAdd
(
pP¨£
, A, &
X
, 
Y
, 
Z
);

1561 
	}
}

1562 %
ídif
 
SQLITE_OMIT_CTE


	@pcache.c

14 
	~"sqlôeI¡.h
"

41 
	sPCache
 {

42 
PgHdr
 *
	mpDúty
, *
	mpDútyTaû
;

43 
PgHdr
 *
	mpSyn˚d
;

44 
	mnRefSum
;

45 
	mszCache
;

46 
	mszSpûl
;

47 
	mszPage
;

48 
	mszExåa
;

49 
u8
 
	mbPurgóbÀ
;

50 
u8
 
	meCª©e
;

51 (*
	mxSåess
)(*,
	mPgHdr
*);

52 *
	mpSåess
;

53 
sqlôe3_pˇche
 *
	mpCache
;

65 #i‡
deföed
(
SQLITE_DEBUG
) && 0

66 
	gsqlôe3PˇcheTø˚
 = 2;

67 
	gsqlôe3PˇcheMxDump
 = 9999;

68 
	#pˇcheTø˚
(
X
Ëif(
sqlôe3PˇcheTø˚
){
sqlôe3DebugPrötf
 X;}

	)

69 
	$pˇcheDump
(
PCache
 *
pCache
){

70 
N
;

71 
i
, 
j
;

72 
sqlôe3_pˇche_∑ge
 *
pLowî
;

73 
PgHdr
 *
pPg
;

74 *
a
;

76 if–
sqlôe3PˇcheTø˚
<2 ) ;

77 if–
pCache
->pCache==0 ) ;

78 
N
 = 
	`sqlôe3PˇchePagecou¡
(
pCache
);

79 if–
N
>
sqlôe3PˇcheMxDump
 ) N = sqlite3PcacheMxDump;

80 
i
=1; i<=
N
; i++){

81 
pLowî
 = 
sqlôe3GlobÆC⁄fig
.
pˇche2
.
	`xFëch
(
pCache
->pCache, 
i
, 0);

82 if–
pLowî
==0 ) ;

83 
pPg
 = (
PgHdr
*)
pLowî
->
pExåa
;

84 
	`¥ötf
("%3d:ÇRe‡%2d flg†%02x d©®", 
i
, 
pPg
->
nRef
,ÖPg->
Êags
);

85 
a
 = (*)
pLowî
->
pBuf
;

86 
j
=0; j<12; j++Ë
	`¥ötf
("%02x", 
a
[j]);

87 
	`¥ötf
("\n");

88 if–
pPg
->
pPage
==0 ){

89 
sqlôe3GlobÆC⁄fig
.
pˇche2
.
	`xU≈ö
(
pCache
->pCache, 
pLowî
, 0);

92 
	}
}

94 
	#pˇcheTø˚
(
X
)

	)

95 
	#pˇcheDump
(
X
)

	)

107 #i‡
SQLITE_DEBUG


108 
	$sqlôe3PˇchePageS™ôy
(
PgHdr
 *
pPg
){

109 
PCache
 *
pCache
;

110 
	`as£π
–
pPg
!=0 );

111 
	`as£π
–
pPg
->
pgno
>0 ||ÖPg->
pPagî
==0 );

112 
pCache
 = 
pPg
->pCache;

113 
	`as£π
–
pCache
!=0 );

114 if–
pPg
->
Êags
 & 
PGHDR_CLEAN
 ){

115 
	`as£π
–(
pPg
->
Êags
 & 
PGHDR_DIRTY
)==0 );

116 
	`as£π
–
pCache
->
pDúty
!=
pPg
 );

117 
	`as£π
–
pCache
->
pDútyTaû
!=
pPg
 );

120 if–
pPg
->
Êags
 & 
PGHDR_WRITEABLE
 ){

121 
	`as£π
–
pPg
->
Êags
 & 
PGHDR_DIRTY
 );

141 
	}
}

148 
	#PCACHE_DIRTYLIST_REMOVE
 1

	)

149 
	#PCACHE_DIRTYLIST_ADD
 2

	)

150 
	#PCACHE_DIRTYLIST_FRONT
 3

	)

158 
	$pˇcheM™ageDútyLi°
(
PgHdr
 *
pPage
, 
u8
 
addRemove
){

159 
PCache
 *
p
 = 
pPage
->
pCache
;

161 
	`pˇcheTø˚
(("%p.DIRTYLIST.%†%d\n", 
p
,

162 
addRemove
==1 ? "REMOVE" :áddRemove==2 ? "ADD" : "FRONT",

163 
pPage
->
pgno
));

164 if–
addRemove
 & 
PCACHE_DIRTYLIST_REMOVE
 ){

165 
	`as£π
–
pPage
->
pDútyNext
 ||ÖPage==
p
->
pDútyTaû
 );

166 
	`as£π
–
pPage
->
pDútyPªv
 ||ÖPage==
p
->
pDúty
 );

169 if–
p
->
pSyn˚d
==
pPage
 ){

170 
p
->
pSyn˚d
 = 
pPage
->
pDútyPªv
;

173 if–
pPage
->
pDútyNext
 ){

174 
pPage
->
pDútyNext
->
pDútyPªv
 =ÖPage->pDirtyPrev;

176 
	`as£π
–
pPage
==
p
->
pDútyTaû
 );

177 
p
->
pDútyTaû
 = 
pPage
->
pDútyPªv
;

179 if–
pPage
->
pDútyPªv
 ){

180 
pPage
->
pDútyPªv
->
pDútyNext
 =ÖPage->pDirtyNext;

186 
	`as£π
–
pPage
==
p
->
pDúty
 );

187 
p
->
pDúty
 = 
pPage
->
pDútyNext
;

188 
	`as£π
–
p
->
bPurgóbÀ
 ||Ö->
eCª©e
==2 );

189 if–
p
->
pDúty
==0 ){

190 
	`as£π
–
p
->
bPurgóbÀ
==0 ||Ö->
eCª©e
==1 );

191 
p
->
eCª©e
 = 2;

194 
pPage
->
pDútyNext
 = 0;

195 
pPage
->
pDútyPªv
 = 0;

197 if–
addRemove
 & 
PCACHE_DIRTYLIST_ADD
 ){

198 
	`as£π
–
pPage
->
pDútyNext
==0 &&ÖPage->
pDútyPªv
==0 && 
p
->
pDúty
!=pPage );

200 
pPage
->
pDútyNext
 = 
p
->
pDúty
;

201 if–
pPage
->
pDútyNext
 ){

202 
	`as£π
–
pPage
->
pDútyNext
->
pDútyPªv
==0 );

203 
pPage
->
pDútyNext
->
pDútyPªv
 =ÖPage;

205 
p
->
pDútyTaû
 = 
pPage
;

206 if–
p
->
bPurgóbÀ
 ){

207 
	`as£π
–
p
->
eCª©e
==2 );

208 
p
->
eCª©e
 = 1;

211 
p
->
pDúty
 = 
pPage
;

218 if–!
p
->
pSyn˚d


219 && 0==(
pPage
->
Êags
&
PGHDR_NEED_SYNC
)

221 
p
->
pSyn˚d
 = 
pPage
;

224 
	`pˇcheDump
(
p
);

225 
	}
}

231 
	$pˇcheU≈ö
(
PgHdr
 *
p
){

232 if–
p
->
pCache
->
bPurgóbÀ
 ){

233 
	`pˇcheTø˚
(("%p.UNPIN %d\n", 
p
->
pCache
,Ö->
pgno
));

234 
sqlôe3GlobÆC⁄fig
.
pˇche2
.
	`xU≈ö
(
p
->
pCache
->pCache,Ö->
pPage
, 0);

235 
	`pˇcheDump
(
p
->
pCache
);

237 
	}
}

243 
	$numbîOfCachePages
(
PCache
 *
p
){

244 if–
p
->
szCache
>=0 ){

247  
p
->
szCache
;

252  ()((-1024*(
i64
)
p
->
szCache
)/’->
szPage
+p->
szExåa
));

254 
	}
}

261 
	$sqlôe3PˇcheInôülize
(){

262 if–
sqlôe3GlobÆC⁄fig
.
pˇche2
.
xInô
==0 ){

266 
	`sqlôe3PCacheSëDeÁu…
();

268  
sqlôe3GlobÆC⁄fig
.
pˇche2
.
	`xInô
(sqlôe3GlobÆC⁄fig.pˇche2.
pArg
);

269 
	}
}

270 
	$sqlôe3PˇcheShutdown
(){

271 if–
sqlôe3GlobÆC⁄fig
.
pˇche2
.
xShutdown
 ){

273 
sqlôe3GlobÆC⁄fig
.
pˇche2
.
	`xShutdown
(sqlôe3GlobÆC⁄fig.pˇche2.
pArg
);

275 
	}
}

280 
	$sqlôe3PˇcheSize
(){  (
PCache
); 
	}
}

294 
	$sqlôe3PˇcheO≥n
(

295 
szPage
,

296 
szExåa
,

297 
bPurgóbÀ
,

298 (*
xSåess
)(*,
PgHdr
*),

299 *
pSåess
,

300 
PCache
 *
p


302 
	`mem£t
(
p
, 0, (
PCache
));

303 
p
->
szPage
 = 1;

304 
p
->
szExåa
 = szExtra;

305 
	`as£π
–
szExåa
>=8 );

306 
p
->
bPurgóbÀ
 = bPurgeable;

307 
p
->
eCª©e
 = 2;

308 
p
->
xSåess
 = xStress;

309 
p
->
pSåess
 =ÖStress;

310 
p
->
szCache
 = 100;

311 
p
->
szSpûl
 = 1;

312 
	`pˇcheTø˚
(("%p.OPEN szPagê%d bPurgóbÀ %d\n",
p
,
szPage
,
bPurgóbÀ
));

313  
	`sqlôe3PˇcheSëPageSize
(
p
, 
szPage
);

314 
	}
}

320 
	$sqlôe3PˇcheSëPageSize
(
PCache
 *
pCache
, 
szPage
){

321 
	`as£π
–
pCache
->
nRefSum
==0 &&ÖCache->
pDúty
==0 );

322 if–
pCache
->
szPage
 ){

323 
sqlôe3_pˇche
 *
pNew
;

324 
pNew
 = 
sqlôe3GlobÆC⁄fig
.
pˇche2
.
	`xCª©e
(

325 
szPage
, 
pCache
->
szExåa
 + 
	`ROUND8
((
PgHdr
)),

326 
pCache
->
bPurgóbÀ


328 if–
pNew
==0 )  
SQLITE_NOMEM_BKPT
;

329 
sqlôe3GlobÆC⁄fig
.
pˇche2
.
	`xCachesize
(
pNew
, 
	`numbîOfCachePages
(
pCache
));

330 if–
pCache
->pCache ){

331 
sqlôe3GlobÆC⁄fig
.
pˇche2
.
	`xDe°roy
(
pCache
->pCache);

333 
pCache
->pCachê
pNew
;

334 
pCache
->
szPage
 = szPage;

335 
	`pˇcheTø˚
(("%p.PAGESIZE %d\n",
pCache
,
szPage
));

337  
SQLITE_OK
;

338 
	}
}

364 
sqlôe3_pˇche_∑ge
 *
	$sqlôe3PˇcheFëch
(

365 
PCache
 *
pCache
,

366 
Pgno
 
pgno
,

367 
¸óãFœg


369 
eCª©e
;

370 
sqlôe3_pˇche_∑ge
 *
pRes
;

372 
	`as£π
–
pCache
!=0 );

373 
	`as£π
–
pCache
->pCache!=0 );

374 
	`as£π
–
¸óãFœg
==3 || createFlag==0 );

375 
	`as£π
–
pCache
->
eCª©e
==(’Cache->
bPurgóbÀ
 &&ÖCache->
pDúty
) ? 1 : 2) );

384 
eCª©e
 = 
¸óãFœg
 & 
pCache
->eCreate;

385 
	`as£π
–
eCª©e
==0 ||ÉCreate==1 ||ÉCreate==2 );

386 
	`as£π
–
¸óãFœg
==0 || 
pCache
->
eCª©e
==eCreate );

387 
	`as£π
–
¸óãFœg
==0 || 
eCª©e
==1+(!
pCache
->
bPurgóbÀ
||!pCache->
pDúty
) );

388 
pRes
 = 
sqlôe3GlobÆC⁄fig
.
pˇche2
.
	`xFëch
(
pCache
->pCache, 
pgno
, 
eCª©e
);

389 
	`pˇcheTø˚
(("%p.FETCH %d%†‘esu…: %p)\n",
pCache
,
pgno
,

390 
¸óãFœg
?" cª©e":"",
pRes
));

391  
pRes
;

392 
	}
}

405 
	$sqlôe3PˇcheFëchSåess
(

406 
PCache
 *
pCache
,

407 
Pgno
 
pgno
,

408 
sqlôe3_pˇche_∑ge
 **
µPage


410 
PgHdr
 *
pPg
;

411 if–
pCache
->
eCª©e
==2 )  0;

413 if–
	`sqlôe3PˇchePagecou¡
(
pCache
)>pCache->
szSpûl
 ){

423 
pPg
=
pCache
->
pSyn˚d
;

424 
pPg
 && (pPg->
nRef
 || (pPg->
Êags
&
PGHDR_NEED_SYNC
));

425 
pPg
ıPg->
pDútyPªv


427 
pCache
->
pSyn˚d
 = 
pPg
;

428 if–!
pPg
 ){

429 
pPg
=
pCache
->
pDútyTaû
;ÖPg &&ÖPg->
nRef
;ÖPgıPg->
pDútyPªv
);

431 if–
pPg
 ){

432 
rc
;

433 #ifde‡
SQLITE_LOG_CACHE_SPILL


434 
	`sqlôe3_log
(
SQLITE_FULL
,

436 
pPg
->
pgno
,Ögno,

437 
sqlôe3GlobÆC⁄fig
.
pˇche
.
	`xPagecou¡
(
pCache
->pCache),

438 
	`numbîOfCachePages
(
pCache
));

440 
	`pˇcheTø˚
(("%p.SPILL %d\n",
pCache
,
pPg
->
pgno
));

441 
rc
 = 
pCache
->
	`xSåess
’Cache->
pSåess
, 
pPg
);

442 
	`pˇcheDump
(
pCache
);

443 if–
rc
!=
SQLITE_OK
 &&Ñc!=
SQLITE_BUSY
 ){

444  
rc
;

448 *
µPage
 = 
sqlôe3GlobÆC⁄fig
.
pˇche2
.
	`xFëch
(
pCache
->pCache, 
pgno
, 2);

449  *
µPage
==0 ? 
SQLITE_NOMEM_BKPT
 : 
SQLITE_OK
;

450 
	}
}

461 
SQLITE_NOINLINE
 
PgHdr
 *
	$pˇcheFëchFöishWôhInô
(

462 
PCache
 *
pCache
,

463 
Pgno
 
pgno
,

464 
sqlôe3_pˇche_∑ge
 *
pPage


466 
PgHdr
 *
pPgHdr
;

467 
	`as£π
–
pPage
!=0 );

468 
pPgHdr
 = (
PgHdr
*)
pPage
->
pExåa
;

469 
	`as£π
–
pPgHdr
->
pPage
==0 );

470 
	`mem£t
(&
pPgHdr
->
pDúty
, 0, (
PgHdr
Ë- 
	`off£tof
(PgHdr,pDirty));

471 
pPgHdr
->
pPage
 =ÖPage;

472 
pPgHdr
->
pD©a
 = 
pPage
->
pBuf
;

473 
pPgHdr
->
pExåa
 = (*)&pPgHdr[1];

474 
	`mem£t
(
pPgHdr
->
pExåa
, 0, 8);

475 
pPgHdr
->
pCache
 =ÖCache;

476 
pPgHdr
->
pgno
 =Ögno;

477 
pPgHdr
->
Êags
 = 
PGHDR_CLEAN
;

478  
	`sqlôe3PˇcheFëchFöish
(
pCache
,
pgno
,
pPage
);

479 
	}
}

487 
PgHdr
 *
	$sqlôe3PˇcheFëchFöish
(

488 
PCache
 *
pCache
,

489 
Pgno
 
pgno
,

490 
sqlôe3_pˇche_∑ge
 *
pPage


492 
PgHdr
 *
pPgHdr
;

494 
	`as£π
–
pPage
!=0 );

495 
pPgHdr
 = (
PgHdr
 *)
pPage
->
pExåa
;

497 if–!
pPgHdr
->
pPage
 ){

498  
	`pˇcheFëchFöishWôhInô
(
pCache
, 
pgno
, 
pPage
);

500 
pCache
->
nRefSum
++;

501 
pPgHdr
->
nRef
++;

502 
	`as£π
–
	`sqlôe3PˇchePageS™ôy
(
pPgHdr
) );

503  
pPgHdr
;

504 
	}
}

510 
SQLITE_NOINLINE
 
	$sqlôe3PˇcheRñó£
(
PgHdr
 *
p
){

511 
	`as£π
–
p
->
nRef
>0 );

512 
p
->
pCache
->
nRefSum
--;

513 if–(--
p
->
nRef
)==0 ){

514 if–
p
->
Êags
&
PGHDR_CLEAN
 ){

515 
	`pˇcheU≈ö
(
p
);

516 }if–
p
->
pDútyPªv
!=0 ){

521 
	`pˇcheM™ageDútyLi°
(
p
, 
PCACHE_DIRTYLIST_FRONT
);

524 
	}
}

529 
	$sqlôe3PˇcheRef
(
PgHdr
 *
p
){

530 
	`as£π
(
p
->
nRef
>0);

531 
	`as£π
–
	`sqlôe3PˇchePageS™ôy
(
p
) );

532 
p
->
nRef
++;

533 
p
->
pCache
->
nRefSum
++;

534 
	}
}

541 
	$sqlôe3PˇcheDr›
(
PgHdr
 *
p
){

542 
	`as£π
–
p
->
nRef
==1 );

543 
	`as£π
–
	`sqlôe3PˇchePageS™ôy
(
p
) );

544 if–
p
->
Êags
&
PGHDR_DIRTY
 ){

545 
	`pˇcheM™ageDútyLi°
(
p
, 
PCACHE_DIRTYLIST_REMOVE
);

547 
p
->
pCache
->
nRefSum
--;

548 
sqlôe3GlobÆC⁄fig
.
pˇche2
.
	`xU≈ö
(
p
->
pCache
->pCache,Ö->
pPage
, 1);

549 
	}
}

555 
	$sqlôe3PˇcheMakeDúty
(
PgHdr
 *
p
){

556 
	`as£π
–
p
->
nRef
>0 );

557 
	`as£π
–
	`sqlôe3PˇchePageS™ôy
(
p
) );

558 if–
p
->
Êags
 & (
PGHDR_CLEAN
|
PGHDR_DONT_WRITE
) ){

559 
p
->
Êags
 &~
PGHDR_DONT_WRITE
;

560 if–
p
->
Êags
 & 
PGHDR_CLEAN
 ){

561 
p
->
Êags
 ^(
PGHDR_DIRTY
|
PGHDR_CLEAN
);

562 
	`pˇcheTø˚
(("%p.DIRTY %d\n",
p
->
pCache
,p->
pgno
));

563 
	`as£π
–(
p
->
Êags
 & (
PGHDR_DIRTY
|
PGHDR_CLEAN
))==PGHDR_DIRTY );

564 
	`pˇcheM™ageDútyLi°
(
p
, 
PCACHE_DIRTYLIST_ADD
);

566 
	`as£π
–
	`sqlôe3PˇchePageS™ôy
(
p
) );

568 
	}
}

574 
	$sqlôe3PˇcheMakeCÀ™
(
PgHdr
 *
p
){

575 
	`as£π
–
	`sqlôe3PˇchePageS™ôy
(
p
) );

576 if–
	`ALWAYS
((
p
->
Êags
 & 
PGHDR_DIRTY
)!=0) ){

577 
	`as£π
–(
p
->
Êags
 & 
PGHDR_CLEAN
)==0 );

578 
	`pˇcheM™ageDútyLi°
(
p
, 
PCACHE_DIRTYLIST_REMOVE
);

579 
p
->
Êags
 &~(
PGHDR_DIRTY
|
PGHDR_NEED_SYNC
|
PGHDR_WRITEABLE
);

580 
p
->
Êags
 |
PGHDR_CLEAN
;

581 
	`pˇcheTø˚
(("%p.CLEAN %d\n",
p
->
pCache
,p->
pgno
));

582 
	`as£π
–
	`sqlôe3PˇchePageS™ôy
(
p
) );

583 if–
p
->
nRef
==0 ){

584 
	`pˇcheU≈ö
(
p
);

587 
	}
}

592 
	$sqlôe3PˇcheCÀ™AŒ
(
PCache
 *
pCache
){

593 
PgHdr
 *
p
;

594 
	`pˇcheTø˚
(("%p.CLEAN-ALL\n",
pCache
));

595  (
p
 = 
pCache
->
pDúty
)!=0 ){

596 
	`sqlôe3PˇcheMakeCÀ™
(
p
);

598 
	}
}

603 
	$sqlôe3PˇcheCÀ¨WrôabÀ
(
PCache
 *
pCache
){

604 
PgHdr
 *
p
;

605 
	`pˇcheTø˚
(("%p.CLEAR-WRITEABLE\n",
pCache
));

606 
p
=
pCache
->
pDúty
;Ö;Öı->
pDútyNext
){

607 
p
->
Êags
 &~(
PGHDR_NEED_SYNC
|
PGHDR_WRITEABLE
);

609 
pCache
->
pSyn˚d
 =ÖCache->
pDútyTaû
;

610 
	}
}

615 
	$sqlôe3PˇcheCÀ¨SyncFœgs
(
PCache
 *
pCache
){

616 
PgHdr
 *
p
;

617 
p
=
pCache
->
pDúty
;Ö;Öı->
pDútyNext
){

618 
p
->
Êags
 &~
PGHDR_NEED_SYNC
;

620 
pCache
->
pSyn˚d
 =ÖCache->
pDútyTaû
;

621 
	}
}

626 
	$sqlôe3PˇcheMove
(
PgHdr
 *
p
, 
Pgno
 
√wPgno
){

627 
PCache
 *
pCache
 = 
p
->pCache;

628 
	`as£π
–
p
->
nRef
>0 );

629 
	`as£π
–
√wPgno
>0 );

630 
	`as£π
–
	`sqlôe3PˇchePageS™ôy
(
p
) );

631 
	`pˇcheTø˚
(("%p.MOVE %d -> %d\n",
pCache
,
p
->
pgno
,
√wPgno
));

632 
sqlôe3GlobÆC⁄fig
.
pˇche2
.
	`xRekey
(
pCache
->pCache, 
p
->
pPage
,Ö->
pgno
,
√wPgno
);

633 
p
->
pgno
 = 
√wPgno
;

634 if–(
p
->
Êags
&
PGHDR_DIRTY
Ë&& (p->Êags&
PGHDR_NEED_SYNC
) ){

635 
	`pˇcheM™ageDútyLi°
(
p
, 
PCACHE_DIRTYLIST_FRONT
);

637 
	}
}

648 
	$sqlôe3PˇcheTrunˇã
(
PCache
 *
pCache
, 
Pgno
 
pgno
){

649 if–
pCache
->pCache ){

650 
PgHdr
 *
p
;

651 
PgHdr
 *
pNext
;

652 
	`pˇcheTø˚
(("%p.TRUNCATE %d\n",
pCache
,
pgno
));

653 
p
=
pCache
->
pDúty
;Ö;Ö=
pNext
){

654 
pNext
 = 
p
->
pDútyNext
;

659 
	`as£π
–
p
->
pgno
>0 );

660 if–
p
->
pgno
>pgno ){

661 
	`as£π
–
p
->
Êags
&
PGHDR_DIRTY
 );

662 
	`sqlôe3PˇcheMakeCÀ™
(
p
);

665 if–
pgno
==0 && 
pCache
->
nRefSum
 ){

666 
sqlôe3_pˇche_∑ge
 *
pPage1
;

667 
pPage1
 = 
sqlôe3GlobÆC⁄fig
.
pˇche2
.
	`xFëch
(
pCache
->pCache,1,0);

668 if–
	`ALWAYS
(
pPage1
) ){

670 
	`mem£t
(
pPage1
->
pBuf
, 0, 
pCache
->
szPage
);

671 
pgno
 = 1;

674 
sqlôe3GlobÆC⁄fig
.
pˇche2
.
	`xTrunˇã
(
pCache
->pCache, 
pgno
+1);

676 
	}
}

681 
	$sqlôe3PˇcheClo£
(
PCache
 *
pCache
){

682 
	`as£π
–
pCache
->pCache!=0 );

683 
	`pˇcheTø˚
(("%p.CLOSE\n",
pCache
));

684 
sqlôe3GlobÆC⁄fig
.
pˇche2
.
	`xDe°roy
(
pCache
->pCache);

685 
	}
}

690 
	$sqlôe3PˇcheCÀ¨
(
PCache
 *
pCache
){

691 
	`sqlôe3PˇcheTrunˇã
(
pCache
, 0);

692 
	}
}

698 
PgHdr
 *
	$pˇcheMîgeDútyLi°
(
PgHdr
 *
pA
, PgHd∏*
pB
){

699 
PgHdr
 
ªsu…
, *
pTaû
;

700 
pTaû
 = &
ªsu…
;

701 
	`as£π
–
pA
!=0 && 
pB
!=0 );

703 if–
pA
->
pgno
<
pB
->pgno ){

704 
pTaû
->
pDúty
 = 
pA
;

705 
pTaû
 = 
pA
;

706 
pA
 =ÖA->
pDúty
;

707 if–
pA
==0 ){

708 
pTaû
->
pDúty
 = 
pB
;

712 
pTaû
->
pDúty
 = 
pB
;

713 
pTaû
 = 
pB
;

714 
pB
 =ÖB->
pDúty
;

715 if–
pB
==0 ){

716 
pTaû
->
pDúty
 = 
pA
;

721  
ªsu…
.
pDúty
;

722 
	}
}

734 
	#N_SORT_BUCKET
 32

	)

735 
PgHdr
 *
	$pˇcheS‹tDútyLi°
(
PgHdr
 *
pIn
){

736 
PgHdr
 *
a
[
N_SORT_BUCKET
], *
p
;

737 
i
;

738 
	`mem£t
(
a
, 0, (a));

739  
pIn
 ){

740 
p
 = 
pIn
;

741 
pIn
 = 
p
->
pDúty
;

742 
p
->
pDúty
 = 0;

743 
i
=0; 
	`ALWAYS
(i<
N_SORT_BUCKET
-1); i++){

744 if–
a
[
i
]==0 ){

745 
a
[
i
] = 
p
;

748 
p
 = 
	`pˇcheMîgeDútyLi°
(
a
[
i
],Ö);

749 
a
[
i
] = 0;

752 if–
	`NEVER
(
i
==
N_SORT_BUCKET
-1) ){

756 
a
[
i
] = 
	`pˇcheMîgeDútyLi°
◊[i], 
p
);

759 
p
 = 
a
[0];

760 
i
=1; i<
N_SORT_BUCKET
; i++){

761 if–
a
[
i
]==0 ) ;

762 
p
 =Ö ? 
	`pˇcheMîgeDútyLi°
’, 
a
[
i
]) :á[i];

764  
p
;

765 
	}
}

770 
PgHdr
 *
	$sqlôe3PˇcheDútyLi°
(
PCache
 *
pCache
){

771 
PgHdr
 *
p
;

772 
p
=
pCache
->
pDúty
;Ö;Öı->
pDútyNext
){

773 
p
->
pDúty
 =Ö->
pDútyNext
;

775  
	`pˇcheS‹tDútyLi°
(
pCache
->
pDúty
);

776 
	}
}

784 
	$sqlôe3PˇcheRefCou¡
(
PCache
 *
pCache
){

785  
pCache
->
nRefSum
;

786 
	}
}

791 
	$sqlôe3PˇchePageRefcou¡
(
PgHdr
 *
p
){

792  
p
->
nRef
;

793 
	}
}

798 
	$sqlôe3PˇchePagecou¡
(
PCache
 *
pCache
){

799 
	`as£π
–
pCache
->pCache!=0 );

800  
sqlôe3GlobÆC⁄fig
.
pˇche2
.
	`xPagecou¡
(
pCache
->pCache);

801 
	}
}

803 #ifde‡
SQLITE_TEST


807 
	$sqlôe3PˇcheGëCachesize
(
PCache
 *
pCache
){

808  
	`numbîOfCachePages
(
pCache
);

809 
	}
}

815 
	$sqlôe3PˇcheSëCachesize
(
PCache
 *
pCache
, 
mxPage
){

816 
	`as£π
–
pCache
->pCache!=0 );

817 
pCache
->
szCache
 = 
mxPage
;

818 
sqlôe3GlobÆC⁄fig
.
pˇche2
.
	`xCachesize
(
pCache
->pCache,

819 
	`numbîOfCachePages
(
pCache
));

820 
	}
}

827 
	$sqlôe3PˇcheSëSpûlsize
(
PCache
 *
p
, 
mxPage
){

828 
ªs
;

829 
	`as£π
–
p
->
pCache
!=0 );

830 if–
mxPage
 ){

831 if–
mxPage
<0 ){

832 
mxPage
 = ()((-1024*(
i64
)mxPage)/(
p
->
szPage
+p->
szExåa
));

834 
p
->
szSpûl
 = 
mxPage
;

836 
ªs
 = 
	`numbîOfCachePages
(
p
);

837 if–
ªs
<
p
->
szSpûl
 )Ñes =Ö->szSpill;

838  
ªs
;

839 
	}
}

844 
	$sqlôe3PˇcheShrök
(
PCache
 *
pCache
){

845 
	`as£π
–
pCache
->pCache!=0 );

846 
sqlôe3GlobÆC⁄fig
.
pˇche2
.
	`xShrök
(
pCache
->pCache);

847 
	}
}

853 
	$sqlôe3HódîSizePˇche
(){  
	`ROUND8
((
PgHdr
)); 
	}
}

859 
	$sqlôe3PCachePî˚¡Dúty
(
PCache
 *
pCache
){

860 
PgHdr
 *
pDúty
;

861 
nDúty
 = 0;

862 
nCache
 = 
	`numbîOfCachePages
(
pCache
);

863 
pDúty
=
pCache
->pDúty;ÖDúty;ÖDútyıDúty->
pDútyNext
Ë
nDúty
++;

864  
nCache
 ? ()(((
i64
)
nDúty
 * 100) /ÇCache) : 0;

865 
	}
}

867 #i‡
deföed
(
SQLITE_CHECK_PAGES
Ë|| deföed(
SQLITE_DEBUG
)

873 
	$sqlôe3PˇcheIãøãDúty
(
PCache
 *
pCache
, (*
xIãr
)(
PgHdr
 *)){

874 
PgHdr
 *
pDúty
;

875 
pDúty
=
pCache
->pDúty;ÖDúty;ÖDútyıDúty->
pDútyNext
){

876 
	`xIãr
(
pDúty
);

878 
	}
}

	@pcache.h

16 #i‚de‡
_PCACHE_H_


18 
PgHdr
 
	tPgHdr
;

19 
PCache
 
	tPCache
;

25 
	sPgHdr
 {

26 
sqlôe3_pˇche_∑ge
 *
	mpPage
;

27 *
	mpD©a
;

28 *
	mpExåa
;

29 
PgHdr
 *
	mpDúty
;

30 
Pagî
 *
	mpPagî
;

31 
Pgno
 
	mpgno
;

32 #ifde‡
SQLITE_CHECK_PAGES


33 
u32
 
	m∑geHash
;

35 
u16
 
	mÊags
;

41 
i16
 
	mnRef
;

42 
PCache
 *
	mpCache
;

44 
PgHdr
 *
	mpDútyNext
;

45 
PgHdr
 *
	mpDútyPªv
;

49 
	#PGHDR_CLEAN
 0x001

	)

50 
	#PGHDR_DIRTY
 0x002

	)

51 
	#PGHDR_WRITEABLE
 0x004

	)

52 
	#PGHDR_NEED_SYNC
 0x008

	)

54 
	#PGHDR_DONT_WRITE
 0x010

	)

55 
	#PGHDR_MMAP
 0x020

	)

57 
	#PGHDR_WAL_APPEND
 0x040

	)

60 
sqlôe3PˇcheInôülize
();

61 
sqlôe3PˇcheShutdown
();

66 
sqlôe3PCacheBuf„rSëup
(*, 
sz
, 
n
);

72 
sqlôe3PˇcheO≥n
(

73 
szPage
,

74 
szExåa
,

75 
bPurgóbÀ
,

76 (*
xSåess
)(*, 
PgHdr
*),

77 *
pSåess
,

78 
PCache
 *
pToInô


82 
	`sqlôe3PˇcheSëPageSize
(
PCache
 *, );

87 
	`sqlôe3PˇcheSize
();

92 
sqlôe3_pˇche_∑ge
 *
	`sqlôe3PˇcheFëch
(
PCache
*, 
Pgno
, 
¸óãFœg
);

93 
	`sqlôe3PˇcheFëchSåess
(
PCache
*, 
Pgno
, 
sqlôe3_pˇche_∑ge
**);

94 
PgHdr
 *
	`sqlôe3PˇcheFëchFöish
(
PCache
*, 
Pgno
, 
sqlôe3_pˇche_∑ge
 *
pPage
);

95 
	`sqlôe3PˇcheRñó£
(
PgHdr
*);

97 
	`sqlôe3PˇcheDr›
(
PgHdr
*);

98 
	`sqlôe3PˇcheMakeDúty
(
PgHdr
*);

99 
	`sqlôe3PˇcheMakeCÀ™
(
PgHdr
*);

100 
	`sqlôe3PˇcheCÀ™AŒ
(
PCache
*);

101 
	`sqlôe3PˇcheCÀ¨WrôabÀ
(
PCache
*);

104 
	`sqlôe3PˇcheMove
(
PgHdr
*, 
Pgno
);

107 
	`sqlôe3PˇcheTrunˇã
(
PCache
*, 
Pgno
 
x
);

110 
PgHdr
 *
	`sqlôe3PˇcheDútyLi°
(
PCache
*);

113 
	`sqlôe3PˇcheClo£
(
PCache
*);

116 
	`sqlôe3PˇcheCÀ¨SyncFœgs
(
PCache
 *);

119 
	`sqlôe3PˇcheCÀ¨
(
PCache
*);

122 
	`sqlôe3PˇcheRefCou¡
(
PCache
*);

125 
	`sqlôe3PˇcheRef
(
PgHdr
*);

127 
	`sqlôe3PˇchePageRefcou¡
(
PgHdr
*);

130 
	`sqlôe3PˇchePagecou¡
(
PCache
*);

132 #i‡
	`deföed
(
SQLITE_CHECK_PAGES
Ë|| deföed(
SQLITE_DEBUG
)

137 
	`sqlôe3PˇcheIãøãDúty
(
PCache
 *
pCache
, (*
xIãr
)(
PgHdr
 *));

140 #i‡
	`deföed
(
SQLITE_DEBUG
)

142 
	`sqlôe3PˇchePageS™ôy
(
PgHdr
*);

151 
	`sqlôe3PˇcheSëCachesize
(
PCache
 *, );

152 #ifde‡
SQLITE_TEST


153 
	`sqlôe3PˇcheGëCachesize
(
PCache
 *);

161 
	`sqlôe3PˇcheSëSpûlsize
(
PCache
 *, );

164 
	`sqlôe3PˇcheShrök
(
PCache
*);

166 #ifde‡
SQLITE_ENABLE_MEMORY_MANAGEMENT


168 
	`sqlôe3PˇcheRñó£Mem‹y
();

171 #ifde‡
SQLITE_TEST


172 
	`sqlôe3PˇcheSèts
(*,*,*,*);

175 
	`sqlôe3PCacheSëDeÁu…
();

178 
	`sqlôe3HódîSizePˇche
();

179 
	`sqlôe3HódîSizePˇche1
();

182 
	`sqlôe3PCachePî˚¡Dúty
(
PCache
*);

	@pcache1.c

83 
	~"sqlôeI¡.h
"

85 
PCache1
 
	tPCache1
;

86 
PgHdr1
 
	tPgHdr1
;

87 
PgFªe¶Ÿ
 
	tPgFªe¶Ÿ
;

88 
PGroup
 
	tPGroup
;

96 
	sPgHdr1
 {

97 
sqlôe3_pˇche_∑ge
 
	m∑ge
;

98 
	miKey
;

99 
u8
 
	misPö√d
;

100 
u8
 
	misBulkLoˇl
;

101 
u8
 
	misAnch‹
;

102 
PgHdr1
 *
	mpNext
;

103 
PCache1
 *
	mpCache
;

104 
PgHdr1
 *
	mpLruNext
;

105 
PgHdr1
 *
	mpLruPªv
;

130 
	sPGroup
 {

131 
sqlôe3_muãx
 *
	mmuãx
;

132 
	mnMaxPage
;

133 
	mnMöPage
;

134 
	mmxPö√d
;

135 
	mnCuºítPage
;

136 
PgHdr1
 
	mÃu
;

147 
	sPCache1
 {

153 
PGroup
 *
	mpGroup
;

154 
	mszPage
;

155 
	mszExåa
;

156 
	mszAŒoc
;

157 
	mbPurgóbÀ
;

158 
	mnMö
;

159 
	mnMax
;

160 
	mn90p˘
;

161 
	miMaxKey
;

166 
	mnRecy˛abÀ
;

167 
	mnPage
;

168 
	mnHash
;

169 
PgHdr1
 **
	m≠Hash
;

170 
PgHdr1
 *
	mpFªe
;

171 *
	mpBulk
;

178 
	sPgFªe¶Ÿ
 {

179 
PgFªe¶Ÿ
 *
	mpNext
;

185 
SQLITE_WSD
 
	sPCacheGlobÆ
 {

186 
PGroup
 
	mgΩ
;

193 
	misInô
;

194 
	m£∑øãCache
;

195 
	mnInôPage
;

196 
	mszSlŸ
;

197 
	mnSlŸ
;

198 
	mnRe£rve
;

199 *
	mpSèπ
, *
	mpEnd
;

201 
sqlôe3_muãx
 *
	mmuãx
;

202 
PgFªe¶Ÿ
 *
	mpFªe
;

203 
	mnFªeSlŸ
;

208 
	mbUndîPªssuª
;

209 } 
	gpˇche1_g
;

216 
	#pˇche1
 (
	`GLOBAL
(
PCacheGlobÆ
, 
pˇche1_g
))

	)

221 #i‡!
deföed
(
SQLITE_ENABLE_MEMORY_MANAGEMENT
Ë|| 
SQLITE_THREADSAFE
==0

222 
	#pˇche1E¡îMuãx
(
X
Ë
	`as£π
((X)->
muãx
==0)

	)

223 
	#pˇche1LóveMuãx
(
X
Ë
	`as£π
((X)->
muãx
==0)

	)

224 
	#PCACHE1_MIGHT_USE_GROUP_MUTEX
 0

	)

226 
	#pˇche1E¡îMuãx
(
X
Ë
	`sqlôe3_muãx_íãr
((X)->
muãx
)

	)

227 
	#pˇche1LóveMuãx
(
X
Ë
	`sqlôe3_muãx_Àave
((X)->
muãx
)

	)

228 
	#PCACHE1_MIGHT_USE_GROUP_MUTEX
 1

	)

244 
	$sqlôe3PCacheBuf„rSëup
(*
pBuf
, 
sz
, 
n
){

245 if–
pˇche1
.
isInô
 ){

246 
PgFªe¶Ÿ
 *
p
;

247 if–
pBuf
==0 ) 
sz
 = 
n
 = 0;

248 
sz
 = 
	`ROUNDDOWN8
(sz);

249 
pˇche1
.
szSlŸ
 = 
sz
;

250 
pˇche1
.
nSlŸ
 =Öˇche1.
nFªeSlŸ
 = 
n
;

251 
pˇche1
.
nRe£rve
 = 
n
>90 ? 10 : (n/10 + 1);

252 
pˇche1
.
pSèπ
 = 
pBuf
;

253 
pˇche1
.
pFªe
 = 0;

254 
pˇche1
.
bUndîPªssuª
 = 0;

255  
n
-- ){

256 
p
 = (
PgFªe¶Ÿ
*)
pBuf
;

257 
p
->
pNext
 = 
pˇche1
.
pFªe
;

258 
pˇche1
.
pFªe
 = 
p
;

259 
pBuf
 = (*)&((*ÌBuf)[
sz
];

261 
pˇche1
.
pEnd
 = 
pBuf
;

263 
	}
}

269 
	$pˇche1InôBulk
(
PCache1
 *
pCache
){

270 
i64
 
szBulk
;

271 *
zBulk
;

272 if–
pˇche1
.
nInôPage
==0 )  0;

274 if–
pCache
->
nMax
<3 )  0;

275 
	`sqlôe3BegöBíignMÆloc
();

276 if–
pˇche1
.
nInôPage
>0 ){

277 
szBulk
 = 
pCache
->
szAŒoc
 * (
i64
)
pˇche1
.
nInôPage
;

279 
szBulk
 = -1024 * (
i64
)
pˇche1
.
nInôPage
;

281 if–
szBulk
 > 
pCache
->
szAŒoc
*(
i64
ÌCache->
nMax
 ){

282 
szBulk
 = 
pCache
->
szAŒoc
*(
i64
ÌCache->
nMax
;

284 
zBulk
 = 
pCache
->
pBulk
 = 
	`sqlôe3MÆloc
–
szBulk
 );

285 
	`sqlôe3EndBíignMÆloc
();

286 if–
zBulk
 ){

287 
nBulk
 = 
	`sqlôe3MÆlocSize
(
zBulk
)/
pCache
->
szAŒoc
;

288 
i
;

289 
i
=0; i<
nBulk
; i++){

290 
PgHdr1
 *
pX
 = (PgHdr1*)&
zBulk
[
pCache
->
szPage
];

291 
pX
->
∑ge
.
pBuf
 = 
zBulk
;

292 
pX
->
∑ge
.
pExåa
 = &pX[1];

293 
pX
->
isBulkLoˇl
 = 1;

294 
pX
->
isAnch‹
 = 0;

295 
pX
->
pNext
 = 
pCache
->
pFªe
;

296 
pCache
->
pFªe
 = 
pX
;

297 
zBulk
 +
pCache
->
szAŒoc
;

300  
pCache
->
pFªe
!=0;

301 
	}
}

312 *
	$pˇche1AŒoc
(
nByã
){

313 *
p
 = 0;

314 
	`as£π
–
	`sqlôe3_muãx_nŸhñd
(
pˇche1
.
gΩ
.
muãx
) );

315 if–
nByã
<=
pˇche1
.
szSlŸ
 ){

316 
	`sqlôe3_muãx_íãr
(
pˇche1
.
muãx
);

317 
p
 = (
PgHdr1
 *)
pˇche1
.
pFªe
;

318 if–
p
 ){

319 
pˇche1
.
pFªe
 =Öˇche1.pFªe->
pNext
;

320 
pˇche1
.
nFªeSlŸ
--;

321 
pˇche1
.
bUndîPªssuª
 =Öˇche1.
nFªeSlŸ
<pˇche1.
nRe£rve
;

322 
	`as£π
–
pˇche1
.
nFªeSlŸ
>=0 );

323 
	`sqlôe3SètusHighw©î
(
SQLITE_STATUS_PAGECACHE_SIZE
, 
nByã
);

324 
	`sqlôe3SètusUp
(
SQLITE_STATUS_PAGECACHE_USED
, 1);

326 
	`sqlôe3_muãx_Àave
(
pˇche1
.
muãx
);

328 if–
p
==0 ){

332 
p
 = 
	`sqlôe3MÆloc
(
nByã
);

333 #i‚de‡
SQLITE_DISABLE_PAGECACHE_OVERFLOW_STATS


334 if–
p
 ){

335 
sz
 = 
	`sqlôe3MÆlocSize
(
p
);

336 
	`sqlôe3_muãx_íãr
(
pˇche1
.
muãx
);

337 
	`sqlôe3SètusHighw©î
(
SQLITE_STATUS_PAGECACHE_SIZE
, 
nByã
);

338 
	`sqlôe3SètusUp
(
SQLITE_STATUS_PAGECACHE_OVERFLOW
, 
sz
);

339 
	`sqlôe3_muãx_Àave
(
pˇche1
.
muãx
);

342 
	`sqlôe3MemdebugSëTy≥
(
p
, 
MEMTYPE_PCACHE
);

344  
p
;

345 
	}
}

350 
	$pˇche1Fªe
(*
p
){

351 if–
p
==0 ) ;

352 if–
	`SQLITE_WITHIN
(
p
, 
pˇche1
.
pSèπ
,Öˇche1.
pEnd
) ){

353 
PgFªe¶Ÿ
 *
pSlŸ
;

354 
	`sqlôe3_muãx_íãr
(
pˇche1
.
muãx
);

355 
	`sqlôe3SètusDown
(
SQLITE_STATUS_PAGECACHE_USED
, 1);

356 
pSlŸ
 = (
PgFªe¶Ÿ
*)
p
;

357 
pSlŸ
->
pNext
 = 
pˇche1
.
pFªe
;

358 
pˇche1
.
pFªe
 = 
pSlŸ
;

359 
pˇche1
.
nFªeSlŸ
++;

360 
pˇche1
.
bUndîPªssuª
 =Öˇche1.
nFªeSlŸ
<pˇche1.
nRe£rve
;

361 
	`as£π
–
pˇche1
.
nFªeSlŸ
<ıˇche1.
nSlŸ
 );

362 
	`sqlôe3_muãx_Àave
(
pˇche1
.
muãx
);

364 
	`as£π
–
	`sqlôe3MemdebugHasTy≥
(
p
, 
MEMTYPE_PCACHE
) );

365 
	`sqlôe3MemdebugSëTy≥
(
p
, 
MEMTYPE_HEAP
);

366 #i‚de‡
SQLITE_DISABLE_PAGECACHE_OVERFLOW_STATS


368 
nFªed
 = 0;

369 
nFªed
 = 
	`sqlôe3MÆlocSize
(
p
);

370 
	`sqlôe3_muãx_íãr
(
pˇche1
.
muãx
);

371 
	`sqlôe3SètusDown
(
SQLITE_STATUS_PAGECACHE_OVERFLOW
, 
nFªed
);

372 
	`sqlôe3_muãx_Àave
(
pˇche1
.
muãx
);

375 
	`sqlôe3_‰ì
(
p
);

377 
	}
}

379 #ifde‡
SQLITE_ENABLE_MEMORY_MANAGEMENT


383 
	$pˇche1MemSize
(*
p
){

384 if–
p
>=
pˇche1
.
pSèπ
 &&Ö<pˇche1.
pEnd
 ){

385  
pˇche1
.
szSlŸ
;

387 
iSize
;

388 
	`as£π
–
	`sqlôe3MemdebugHasTy≥
(
p
, 
MEMTYPE_PCACHE
) );

389 
	`sqlôe3MemdebugSëTy≥
(
p
, 
MEMTYPE_HEAP
);

390 
iSize
 = 
	`sqlôe3MÆlocSize
(
p
);

391 
	`sqlôe3MemdebugSëTy≥
(
p
, 
MEMTYPE_PCACHE
);

392  
iSize
;

394 
	}
}

400 
PgHdr1
 *
	$pˇche1AŒocPage
(
PCache1
 *
pCache
, 
bíignMÆloc
){

401 
PgHdr1
 *
p
 = 0;

402 *
pPg
;

404 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCache
->
pGroup
->
muãx
) );

405 if–
pCache
->
pFªe
 || (pCache->
nPage
==0 && 
	`pˇche1InôBulk
(pCache)) ){

406 
p
 = 
pCache
->
pFªe
;

407 
pCache
->
pFªe
 = 
p
->
pNext
;

408 
p
->
pNext
 = 0;

410 #ifde‡
SQLITE_ENABLE_MEMORY_MANAGEMENT


414 
	`as£π
–
pˇche1
.
£∑øãCache
==0 );

415 
	`as£π
–
pCache
->
pGroup
==&
pˇche1
.
gΩ
 );

416 
	`pˇche1LóveMuãx
(
pCache
->
pGroup
);

418 if–
bíignMÆloc
 ){ 
	`sqlôe3BegöBíignMÆloc
(); }

419 #ifde‡
SQLITE_PCACHE_SEPARATE_HEADER


420 
pPg
 = 
	`pˇche1AŒoc
(
pCache
->
szPage
);

421 
p
 = 
	`sqlôe3MÆloc
((
PgHdr1
Ë+ 
pCache
->
szExåa
);

422 if–!
pPg
 || !
p
 ){

423 
	`pˇche1Fªe
(
pPg
);

424 
	`sqlôe3_‰ì
(
p
);

425 
pPg
 = 0;

428 
pPg
 = 
	`pˇche1AŒoc
(
pCache
->
szAŒoc
);

429 
p
 = (
PgHdr1
 *)&((
u8
 *)
pPg
)[
pCache
->
szPage
];

431 if–
bíignMÆloc
 ){ 
	`sqlôe3EndBíignMÆloc
(); }

432 #ifde‡
SQLITE_ENABLE_MEMORY_MANAGEMENT


433 
	`pˇche1E¡îMuãx
(
pCache
->
pGroup
);

435 if–
pPg
==0 )  0;

436 
p
->
∑ge
.
pBuf
 = 
pPg
;

437 
p
->
∑ge
.
pExåa
 = &p[1];

438 
p
->
isBulkLoˇl
 = 0;

439 
p
->
isAnch‹
 = 0;

441 if–
pCache
->
bPurgóbÀ
 ){

442 
pCache
->
pGroup
->
nCuºítPage
++;

444  
p
;

445 
	}
}

450 
	$pˇche1FªePage
(
PgHdr1
 *
p
){

451 
PCache1
 *
pCache
;

452 
	`as£π
–
p
!=0 );

453 
pCache
 = 
p
->pCache;

454 
	`as£π
–
	`sqlôe3_muãx_hñd
(
p
->
pCache
->
pGroup
->
muãx
) );

455 if–
p
->
isBulkLoˇl
 ){

456 
p
->
pNext
 = 
pCache
->
pFªe
;

457 
pCache
->
pFªe
 = 
p
;

459 
	`pˇche1Fªe
(
p
->
∑ge
.
pBuf
);

460 #ifde‡
SQLITE_PCACHE_SEPARATE_HEADER


461 
	`sqlôe3_‰ì
(
p
);

464 if–
pCache
->
bPurgóbÀ
 ){

465 
pCache
->
pGroup
->
nCuºítPage
--;

467 
	}
}

474 *
	$sqlôe3PageMÆloc
(
sz
){

475  
	`pˇche1AŒoc
(
sz
);

476 
	}
}

481 
	$sqlôe3PageFªe
(*
p
){

482 
	`pˇche1Fªe
(
p
);

483 
	}
}

502 
	$pˇche1UndîMem‹yPªssuª
(
PCache1
 *
pCache
){

503 if–
pˇche1
.
nSlŸ
 && (
pCache
->
szPage
+pCache->
szExåa
)<ıˇche1.
szSlŸ
 ){

504  
pˇche1
.
bUndîPªssuª
;

506  
	`sqlôe3HópNóæyFuŒ
();

508 
	}
}

519 
	$pˇche1ResizeHash
(
PCache1
 *
p
){

520 
PgHdr1
 **
≠New
;

521 
nNew
;

522 
i
;

524 
	`as£π
–
	`sqlôe3_muãx_hñd
(
p
->
pGroup
->
muãx
) );

526 
nNew
 = 
p
->
nHash
*2;

527 if–
nNew
<256 ){

528 
nNew
 = 256;

531 
	`pˇche1LóveMuãx
(
p
->
pGroup
);

532 if–
p
->
nHash
 ){ 
	`sqlôe3BegöBíignMÆloc
(); }

533 
≠New
 = (
PgHdr1
 **)
	`sqlôe3MÆlocZîo
((PgHdr1 *)*
nNew
);

534 if–
p
->
nHash
 ){ 
	`sqlôe3EndBíignMÆloc
(); }

535 
	`pˇche1E¡îMuãx
(
p
->
pGroup
);

536 if–
≠New
 ){

537 
i
=0; i<
p
->
nHash
; i++){

538 
PgHdr1
 *
pPage
;

539 
PgHdr1
 *
pNext
 = 
p
->
≠Hash
[
i
];

540  (
pPage
 = 
pNext
)!=0 ){

541 
h
 = 
pPage
->
iKey
 % 
nNew
;

542 
pNext
 = 
pPage
->pNext;

543 
pPage
->
pNext
 = 
≠New
[
h
];

544 
≠New
[
h
] = 
pPage
;

547 
	`sqlôe3_‰ì
(
p
->
≠Hash
);

548 
p
->
≠Hash
 = 
≠New
;

549 
p
->
nHash
 = 
nNew
;

551 
	}
}

560 
PgHdr1
 *
	$pˇche1PöPage
(
PgHdr1
 *
pPage
){

561 
PCache1
 *
pCache
;

563 
	`as£π
–
pPage
!=0 );

564 
	`as£π
–
pPage
->
isPö√d
==0 );

565 
pCache
 = 
pPage
->pCache;

566 
	`as£π
–
pPage
->
pLruNext
 );

567 
	`as£π
–
pPage
->
pLruPªv
 );

568 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCache
->
pGroup
->
muãx
) );

569 
pPage
->
pLruPªv
->
pLruNext
 =ÖPage->pLruNext;

570 
pPage
->
pLruNext
->
pLruPªv
 =ÖPage->pLruPrev;

571 
pPage
->
pLruNext
 = 0;

572 
pPage
->
pLruPªv
 = 0;

573 
pPage
->
isPö√d
 = 1;

574 
	`as£π
–
pPage
->
isAnch‹
==0 );

575 
	`as£π
–
pCache
->
pGroup
->
Ãu
.
isAnch‹
==1 );

576 
pCache
->
nRecy˛abÀ
--;

577  
pPage
;

578 
	}
}

588 
	$pˇche1RemoveFromHash
(
PgHdr1
 *
pPage
, 
‰ìFœg
){

589 
h
;

590 
PCache1
 *
pCache
 = 
pPage
->pCache;

591 
PgHdr1
 **
µ
;

593 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCache
->
pGroup
->
muãx
) );

594 
h
 = 
pPage
->
iKey
 % 
pCache
->
nHash
;

595 
µ
=&
pCache
->
≠Hash
[
h
]; (*µ)!=
pPage
;Öp=&(*µ)->
pNext
);

596 *
µ
 = (*µ)->
pNext
;

598 
pCache
->
nPage
--;

599 if–
‰ìFœg
 ) 
	`pˇche1FªePage
(
pPage
);

600 
	}
}

606 
	$pˇche1Enf‹˚MaxPage
(
PCache1
 *
pCache
){

607 
PGroup
 *
pGroup
 = 
pCache
->pGroup;

608 
PgHdr1
 *
p
;

609 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pGroup
->
muãx
) );

610  
pGroup
->
nCuºítPage
>pGroup->
nMaxPage


611 && (
p
=
pGroup
->
Ãu
.
pLruPªv
)->
isAnch‹
==0

613 
	`as£π
–
p
->
pCache
->
pGroup
==pGroup );

614 
	`as£π
–
p
->
isPö√d
==0 );

615 
	`pˇche1PöPage
(
p
);

616 
	`pˇche1RemoveFromHash
(
p
, 1);

618 if–
pCache
->
nPage
==0 &&ÖCache->
pBulk
 ){

619 
	`sqlôe3_‰ì
(
pCache
->
pBulk
);

620 
pCache
->
pBulk
 =ÖCache->
pFªe
 = 0;

622 
	}
}

631 
	$pˇche1TrunˇãUnß„
(

632 
PCache1
 *
pCache
,

633 
iLimô


635 
	`TESTONLY
–
nPage
 = 0; )

636 
h
, 
iSt›
;

637 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCache
->
pGroup
->
muãx
) );

638 
	`as£π
–
pCache
->
iMaxKey
 >
iLimô
 );

639 
	`as£π
–
pCache
->
nHash
 > 0 );

640 if–
pCache
->
iMaxKey
 - 
iLimô
 <ÖCache->
nHash
 ){

645 
h
 = 
iLimô
 % 
pCache
->
nHash
;

646 
iSt›
 = 
pCache
->
iMaxKey
 %ÖCache->
nHash
;

647 
	`TESTONLY
–
nPage
 = -10; )

651 
h
 = 
pCache
->
nHash
/2;

652 
iSt›
 = 
h
 - 1;

655 
PgHdr1
 **
µ
;

656 
PgHdr1
 *
pPage
;

657 
	`as£π
–
h
<
pCache
->
nHash
 );

658 
µ
 = &
pCache
->
≠Hash
[
h
];

659  (
pPage
 = *
µ
)!=0 ){

660 if–
pPage
->
iKey
>=
iLimô
 ){

661 
pCache
->
nPage
--;

662 *
µ
 = 
pPage
->
pNext
;

663 if–!
pPage
->
isPö√d
 ) 
	`pˇche1PöPage
(pPage);

664 
	`pˇche1FªePage
(
pPage
);

666 
µ
 = &
pPage
->
pNext
;

667 
	`TESTONLY
–if–
nPage
>=0 )ÇPage++; )

670 if–
h
==
iSt›
 ) ;

671 
h
 = (h+1Ë% 
pCache
->
nHash
;

673 
	`as£π
–
nPage
<0 || 
pCache
->nPage==()nPage );

674 
	}
}

682 
	$pˇche1Inô
(*
NŸU£d
){

683 
	`UNUSED_PARAMETER
(
NŸU£d
);

684 
	`as£π
–
pˇche1
.
isInô
==0 );

685 
	`mem£t
(&
pˇche1
, 0, (pcache1));

702 #i‡
	`deföed
(
SQLITE_ENABLE_MEMORY_MANAGEMENT
)

703 
pˇche1
.
£∑øãCache
 = 0;

704 #ñi‡
SQLITE_THREADSAFE


705 
pˇche1
.
£∑øãCache
 = 
sqlôe3GlobÆC⁄fig
.
pPage
==0

706 || 
sqlôe3GlobÆC⁄fig
.
bC‹eMuãx
>0;

708 
pˇche1
.
£∑øãCache
 = 
sqlôe3GlobÆC⁄fig
.
pPage
==0;

711 #i‡
SQLITE_THREADSAFE


712 if–
sqlôe3GlobÆC⁄fig
.
bC‹eMuãx
 ){

713 
pˇche1
.
gΩ
.
muãx
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_LRU
);

714 
pˇche1
.
muãx
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_PMEM
);

717 if–
pˇche1
.
£∑øãCache


718 && 
sqlôe3GlobÆC⁄fig
.
nPage
!=0

719 && 
sqlôe3GlobÆC⁄fig
.
pPage
==0

721 
pˇche1
.
nInôPage
 = 
sqlôe3GlobÆC⁄fig
.
nPage
;

723 
pˇche1
.
nInôPage
 = 0;

725 
pˇche1
.
gΩ
.
mxPö√d
 = 10;

726 
pˇche1
.
isInô
 = 1;

727  
SQLITE_OK
;

728 
	}
}

735 
	$pˇche1Shutdown
(*
NŸU£d
){

736 
	`UNUSED_PARAMETER
(
NŸU£d
);

737 
	`as£π
–
pˇche1
.
isInô
!=0 );

738 
	`mem£t
(&
pˇche1
, 0, (pcache1));

739 
	}
}

742 
pˇche1De°roy
(
sqlôe3_pˇche
 *
p
);

749 
sqlôe3_pˇche
 *
	$pˇche1Cª©e
(
szPage
, 
szExåa
, 
bPurgóbÀ
){

750 
PCache1
 *
pCache
;

751 
PGroup
 *
pGroup
;

752 
sz
;

754 
	`as£π
–(
szPage
 & (szPage-1))==0 && szPage>=512 && szPage<=65536 );

755 
	`as£π
–
szExåa
 < 300 );

757 
sz
 = (
PCache1
Ë+ (
PGroup
)*
pˇche1
.
£∑øãCache
;

758 
pCache
 = (
PCache1
 *)
	`sqlôe3MÆlocZîo
(
sz
);

759 if–
pCache
 ){

760 if–
pˇche1
.
£∑øãCache
 ){

761 
pGroup
 = (
PGroup
*)&
pCache
[1];

762 
pGroup
->
mxPö√d
 = 10;

764 
pGroup
 = &
pˇche1
.
gΩ
;

766 if–
pGroup
->
Ãu
.
isAnch‹
==0 ){

767 
pGroup
->
Ãu
.
isAnch‹
 = 1;

768 
pGroup
->
Ãu
.
pLruPªv
 =ÖGroup->Ãu.
pLruNext
 = &pGroup->lru;

770 
pCache
->
pGroup
 =ÖGroup;

771 
pCache
->
szPage
 = szPage;

772 
pCache
->
szExåa
 = szExtra;

773 
pCache
->
szAŒoc
 = 
szPage
 + 
szExåa
 + 
	`ROUND8
((
PgHdr1
));

774 
pCache
->
bPurgóbÀ
 = (bPurgeable ? 1 : 0);

775 
	`pˇche1E¡îMuãx
(
pGroup
);

776 
	`pˇche1ResizeHash
(
pCache
);

777 if–
bPurgóbÀ
 ){

778 
pCache
->
nMö
 = 10;

779 
pGroup
->
nMöPage
 +
pCache
->
nMö
;

780 
pGroup
->
mxPö√d
 =ÖGroup->
nMaxPage
 + 10 -ÖGroup->
nMöPage
;

782 
	`pˇche1LóveMuãx
(
pGroup
);

783 if–
pCache
->
nHash
==0 ){

784 
	`pˇche1De°roy
((
sqlôe3_pˇche
*)
pCache
);

785 
pCache
 = 0;

788  (
sqlôe3_pˇche
 *)
pCache
;

789 
	}
}

796 
	$pˇche1Cachesize
(
sqlôe3_pˇche
 *
p
, 
nMax
){

797 
PCache1
 *
pCache
 = (PCache1 *)
p
;

798 if–
pCache
->
bPurgóbÀ
 ){

799 
PGroup
 *
pGroup
 = 
pCache
->pGroup;

800 
	`pˇche1E¡îMuãx
(
pGroup
);

801 
pGroup
->
nMaxPage
 +(
nMax
 - 
pCache
->nMax);

802 
pGroup
->
mxPö√d
 =ÖGroup->
nMaxPage
 + 10 -ÖGroup->
nMöPage
;

803 
pCache
->
nMax
 =ÇMax;

804 
pCache
->
n90p˘
 =ÖCache->
nMax
*9/10;

805 
	`pˇche1Enf‹˚MaxPage
(
pCache
);

806 
	`pˇche1LóveMuãx
(
pGroup
);

808 
	}
}

815 
	$pˇche1Shrök
(
sqlôe3_pˇche
 *
p
){

816 
PCache1
 *
pCache
 = (PCache1*)
p
;

817 if–
pCache
->
bPurgóbÀ
 ){

818 
PGroup
 *
pGroup
 = 
pCache
->pGroup;

819 
ßvedMaxPage
;

820 
	`pˇche1E¡îMuãx
(
pGroup
);

821 
ßvedMaxPage
 = 
pGroup
->
nMaxPage
;

822 
pGroup
->
nMaxPage
 = 0;

823 
	`pˇche1Enf‹˚MaxPage
(
pCache
);

824 
pGroup
->
nMaxPage
 = 
ßvedMaxPage
;

825 
	`pˇche1LóveMuãx
(
pGroup
);

827 
	}
}

832 
	$pˇche1Pagecou¡
(
sqlôe3_pˇche
 *
p
){

833 
n
;

834 
PCache1
 *
pCache
 = (PCache1*)
p
;

835 
	`pˇche1E¡îMuãx
(
pCache
->
pGroup
);

836 
n
 = 
pCache
->
nPage
;

837 
	`pˇche1LóveMuãx
(
pCache
->
pGroup
);

838  
n
;

839 
	}
}

850 
SQLITE_NOINLINE
 
PgHdr1
 *
	$pˇche1FëchSège2
(

851 
PCache1
 *
pCache
,

852 
iKey
,

853 
¸óãFœg


855 
nPö√d
;

856 
PGroup
 *
pGroup
 = 
pCache
->pGroup;

857 
PgHdr1
 *
pPage
 = 0;

860 
	`as£π
–
pCache
->
nPage
 >pCache->
nRecy˛abÀ
 );

861 
nPö√d
 = 
pCache
->
nPage
 -ÖCache->
nRecy˛abÀ
;

862 
	`as£π
–
pGroup
->
mxPö√d
 =pGroup->
nMaxPage
 + 10 -ÖGroup->
nMöPage
 );

863 
	`as£π
–
pCache
->
n90p˘
 =pCache->
nMax
*9/10 );

864 if–
¸óãFœg
==1 && (

865 
nPö√d
>=
pGroup
->
mxPö√d


866 || 
nPö√d
>=
pCache
->
n90p˘


867 || (
	`pˇche1UndîMem‹yPªssuª
(
pCache
Ë&&ÖCache->
nRecy˛abÀ
<
nPö√d
)

872 if–
pCache
->
nPage
>ıCache->
nHash
 ) 
	`pˇche1ResizeHash
(pCache);

873 
	`as£π
–
pCache
->
nHash
>0 &&ÖCache->
≠Hash
 );

876 if–
pCache
->
bPurgóbÀ


877 && !
pGroup
->
Ãu
.
pLruPªv
->
isAnch‹


878 && ((
pCache
->
nPage
+1>ıCache->
nMax
Ë|| 
	`pˇche1UndîMem‹yPªssuª
(pCache))

880 
PCache1
 *
pOthî
;

881 
pPage
 = 
pGroup
->
Ãu
.
pLruPªv
;

882 
	`as£π
–
pPage
->
isPö√d
==0 );

883 
	`pˇche1RemoveFromHash
(
pPage
, 0);

884 
	`pˇche1PöPage
(
pPage
);

885 
pOthî
 = 
pPage
->
pCache
;

886 if–
pOthî
->
szAŒoc
 !
pCache
->szAlloc ){

887 
	`pˇche1FªePage
(
pPage
);

888 
pPage
 = 0;

890 
pGroup
->
nCuºítPage
 -(
pOthî
->
bPurgóbÀ
 - 
pCache
->bPurgeable);

897 if–!
pPage
 ){

898 
pPage
 = 
	`pˇche1AŒocPage
(
pCache
, 
¸óãFœg
==1);

901 if–
pPage
 ){

902 
h
 = 
iKey
 % 
pCache
->
nHash
;

903 
pCache
->
nPage
++;

904 
pPage
->
iKey
 = iKey;

905 
pPage
->
pNext
 = 
pCache
->
≠Hash
[
h
];

906 
pPage
->
pCache
 =ÖCache;

907 
pPage
->
pLruPªv
 = 0;

908 
pPage
->
pLruNext
 = 0;

909 
pPage
->
isPö√d
 = 1;

910 *(**)
pPage
->
∑ge
.
pExåa
 = 0;

911 
pCache
->
≠Hash
[
h
] = 
pPage
;

912 if–
iKey
>
pCache
->
iMaxKey
 ){

913 
pCache
->
iMaxKey
 = 
iKey
;

916  
pPage
;

917 
	}
}

978 
PgHdr1
 *
	$pˇche1FëchNoMuãx
(

979 
sqlôe3_pˇche
 *
p
,

980 
iKey
,

981 
¸óãFœg


983 
PCache1
 *
pCache
 = (PCache1 *)
p
;

984 
PgHdr1
 *
pPage
 = 0;

987 
pPage
 = 
pCache
->
≠Hash
[
iKey
 %ÖCache->
nHash
];

988  
pPage
 &&ÖPage->
iKey
!=iKey ){ÖPagêpPage->
pNext
; }

994 if–
pPage
 ){

995 if–!
pPage
->
isPö√d
 ){

996  
	`pˇche1PöPage
(
pPage
);

998  
pPage
;

1000 }if–
¸óãFœg
 ){

1002  
	`pˇche1FëchSège2
(
pCache
, 
iKey
, 
¸óãFœg
);

1006 
	}
}

1007 #i‡
PCACHE1_MIGHT_USE_GROUP_MUTEX


1008 
PgHdr1
 *
	$pˇche1FëchWôhMuãx
(

1009 
sqlôe3_pˇche
 *
p
,

1010 
iKey
,

1011 
¸óãFœg


1013 
PCache1
 *
pCache
 = (PCache1 *)
p
;

1014 
PgHdr1
 *
pPage
;

1016 
	`pˇche1E¡îMuãx
(
pCache
->
pGroup
);

1017 
pPage
 = 
	`pˇche1FëchNoMuãx
(
p
, 
iKey
, 
¸óãFœg
);

1018 
	`as£π
–
pPage
==0 || 
pCache
->
iMaxKey
>=
iKey
 );

1019 
	`pˇche1LóveMuãx
(
pCache
->
pGroup
);

1020  
pPage
;

1021 
	}
}

1023 
sqlôe3_pˇche_∑ge
 *
	$pˇche1Fëch
(

1024 
sqlôe3_pˇche
 *
p
,

1025 
iKey
,

1026 
¸óãFœg


1028 #i‡
PCACHE1_MIGHT_USE_GROUP_MUTEX
 || 
	`deföed
(
SQLITE_DEBUG
)

1029 
PCache1
 *
pCache
 = (PCache1 *)
p
;

1032 
	`as£π
–
	`off£tof
(
PgHdr1
,
∑ge
)==0 );

1033 
	`as£π
–
pCache
->
bPurgóbÀ
 || 
¸óãFœg
!=1 );

1034 
	`as£π
–
pCache
->
bPurgóbÀ
 ||ÖCache->
nMö
==0 );

1035 
	`as£π
–
pCache
->
bPurgóbÀ
==0 ||ÖCache->
nMö
==10 );

1036 
	`as£π
–
pCache
->
nMö
==0 ||ÖCache->
bPurgóbÀ
 );

1037 
	`as£π
–
pCache
->
nHash
>0 );

1038 #i‡
PCACHE1_MIGHT_USE_GROUP_MUTEX


1039 if–
pCache
->
pGroup
->
muãx
 ){

1040  (
sqlôe3_pˇche_∑ge
*)
	`pˇche1FëchWôhMuãx
(
p
, 
iKey
, 
¸óãFœg
);

1044  (
sqlôe3_pˇche_∑ge
*)
	`pˇche1FëchNoMuãx
(
p
, 
iKey
, 
¸óãFœg
);

1046 
	}
}

1054 
	$pˇche1U≈ö
(

1055 
sqlôe3_pˇche
 *
p
,

1056 
sqlôe3_pˇche_∑ge
 *
pPg
,

1057 
ªu£U∆ikñy


1059 
PCache1
 *
pCache
 = (PCache1 *)
p
;

1060 
PgHdr1
 *
pPage
 = (PgHdr1 *)
pPg
;

1061 
PGroup
 *
pGroup
 = 
pCache
->pGroup;

1063 
	`as£π
–
pPage
->
pCache
==pCache );

1064 
	`pˇche1E¡îMuãx
(
pGroup
);

1069 
	`as£π
–
pPage
->
pLruPªv
==0 &&ÖPage->
pLruNext
==0 );

1070 
	`as£π
–
pPage
->
isPö√d
==1 );

1072 if–
ªu£U∆ikñy
 || 
pGroup
->
nCuºítPage
>pGroup->
nMaxPage
 ){

1073 
	`pˇche1RemoveFromHash
(
pPage
, 1);

1076 
PgHdr1
 **
µFú°
 = &
pGroup
->
Ãu
.
pLruNext
;

1077 
pPage
->
pLruPªv
 = &
pGroup
->
Ãu
;

1078 (
pPage
->
pLruNext
 = *
µFú°
)->
pLruPªv
 =ÖPage;

1079 *
µFú°
 = 
pPage
;

1080 
pCache
->
nRecy˛abÀ
++;

1081 
pPage
->
isPö√d
 = 0;

1084 
	`pˇche1LóveMuãx
(
pCache
->
pGroup
);

1085 
	}
}

1090 
	$pˇche1Rekey
(

1091 
sqlôe3_pˇche
 *
p
,

1092 
sqlôe3_pˇche_∑ge
 *
pPg
,

1093 
iOld
,

1094 
iNew


1096 
PCache1
 *
pCache
 = (PCache1 *)
p
;

1097 
PgHdr1
 *
pPage
 = (PgHdr1 *)
pPg
;

1098 
PgHdr1
 **
µ
;

1099 
h
;

1100 
	`as£π
–
pPage
->
iKey
==
iOld
 );

1101 
	`as£π
–
pPage
->
pCache
==pCache );

1103 
	`pˇche1E¡îMuãx
(
pCache
->
pGroup
);

1105 
h
 = 
iOld
%
pCache
->
nHash
;

1106 
µ
 = &
pCache
->
≠Hash
[
h
];

1107  (*
µ
)!=
pPage
 ){

1108 
µ
 = &(*µ)->
pNext
;

1110 *
µ
 = 
pPage
->
pNext
;

1112 
h
 = 
iNew
%
pCache
->
nHash
;

1113 
pPage
->
iKey
 = 
iNew
;

1114 
pPage
->
pNext
 = 
pCache
->
≠Hash
[
h
];

1115 
pCache
->
≠Hash
[
h
] = 
pPage
;

1116 if–
iNew
>
pCache
->
iMaxKey
 ){

1117 
pCache
->
iMaxKey
 = 
iNew
;

1120 
	`pˇche1LóveMuãx
(
pCache
->
pGroup
);

1121 
	}
}

1130 
	$pˇche1Trunˇã
(
sqlôe3_pˇche
 *
p
, 
iLimô
){

1131 
PCache1
 *
pCache
 = (PCache1 *)
p
;

1132 
	`pˇche1E¡îMuãx
(
pCache
->
pGroup
);

1133 if–
iLimô
<=
pCache
->
iMaxKey
 ){

1134 
	`pˇche1TrunˇãUnß„
(
pCache
, 
iLimô
);

1135 
pCache
->
iMaxKey
 = 
iLimô
-1;

1137 
	`pˇche1LóveMuãx
(
pCache
->
pGroup
);

1138 
	}
}

1145 
	$pˇche1De°roy
(
sqlôe3_pˇche
 *
p
){

1146 
PCache1
 *
pCache
 = (PCache1 *)
p
;

1147 
PGroup
 *
pGroup
 = 
pCache
->pGroup;

1148 
	`as£π
–
pCache
->
bPurgóbÀ
 || (pCache->
nMax
==0 &&ÖCache->
nMö
==0) );

1149 
	`pˇche1E¡îMuãx
(
pGroup
);

1150 if–
pCache
->
nPage
 ) 
	`pˇche1TrunˇãUnß„
(pCache, 0);

1151 
	`as£π
–
pGroup
->
nMaxPage
 >
pCache
->
nMax
 );

1152 
pGroup
->
nMaxPage
 -
pCache
->
nMax
;

1153 
	`as£π
–
pGroup
->
nMöPage
 >
pCache
->
nMö
 );

1154 
pGroup
->
nMöPage
 -
pCache
->
nMö
;

1155 
pGroup
->
mxPö√d
 =ÖGroup->
nMaxPage
 + 10 -ÖGroup->
nMöPage
;

1156 
	`pˇche1Enf‹˚MaxPage
(
pCache
);

1157 
	`pˇche1LóveMuãx
(
pGroup
);

1158 
	`sqlôe3_‰ì
(
pCache
->
pBulk
);

1159 
	`sqlôe3_‰ì
(
pCache
->
≠Hash
);

1160 
	`sqlôe3_‰ì
(
pCache
);

1161 
	}
}

1168 
	$sqlôe3PCacheSëDeÁu…
(){

1169 c⁄° 
sqlôe3_pˇche_mëhods2
 
deÁu…Mëhods
 = {

1172 
pˇche1Inô
,

1173 
pˇche1Shutdown
,

1174 
pˇche1Cª©e
,

1175 
pˇche1Cachesize
,

1176 
pˇche1Pagecou¡
,

1177 
pˇche1Fëch
,

1178 
pˇche1U≈ö
,

1179 
pˇche1Rekey
,

1180 
pˇche1Trunˇã
,

1181 
pˇche1De°roy
,

1182 
pˇche1Shrök


1184 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_PCACHE2
, &
deÁu…Mëhods
);

1185 
	}
}

1190 
	$sqlôe3HódîSizePˇche1
(){  
	`ROUND8
((
PgHdr1
)); 
	}
}

1196 
sqlôe3_muãx
 *
	$sqlôe3Pˇche1Muãx
(){

1197  
pˇche1
.
muãx
;

1198 
	}
}

1200 #ifde‡
SQLITE_ENABLE_MEMORY_MANAGEMENT


1210 
	$sqlôe3PˇcheRñó£Mem‹y
(
nReq
){

1211 
nFªe
 = 0;

1212 
	`as£π
–
	`sqlôe3_muãx_nŸhñd
(
pˇche1
.
gΩ
.
muãx
) );

1213 
	`as£π
–
	`sqlôe3_muãx_nŸhñd
(
pˇche1
.
muãx
) );

1214 if–
sqlôe3GlobÆC⁄fig
.
nPage
==0 ){

1215 
PgHdr1
 *
p
;

1216 
	`pˇche1E¡îMuãx
(&
pˇche1
.
gΩ
);

1217  (
nReq
<0 || 
nFªe
<nReq)

1218 && (
p
=
pˇche1
.
gΩ
.
Ãu
.
pLruPªv
)!=0

1219 && 
p
->
isAnch‹
==0

1221 
nFªe
 +
	`pˇche1MemSize
(
p
->
∑ge
.
pBuf
);

1222 #ifde‡
SQLITE_PCACHE_SEPARATE_HEADER


1223 
nFªe
 +
	`sqlôe3MemSize
(
p
);

1225 
	`as£π
–
p
->
isPö√d
==0 );

1226 
	`pˇche1PöPage
(
p
);

1227 
	`pˇche1RemoveFromHash
(
p
, 1);

1229 
	`pˇche1LóveMuãx
(&
pˇche1
.
gΩ
);

1231  
nFªe
;

1232 
	}
}

1235 #ifde‡
SQLITE_TEST


1240 
	$sqlôe3PˇcheSèts
(

1241 *
≤Cuºít
,

1242 *
≤Max
,

1243 *
≤Mö
,

1244 *
≤Recy˛abÀ


1246 
PgHdr1
 *
p
;

1247 
nRecy˛abÀ
 = 0;

1248 
p
=
pˇche1
.
gΩ
.
Ãu
.
pLruNext
;Ö && !p->
isAnch‹
;Ö=p->pLruNext){

1249 
	`as£π
–
p
->
isPö√d
==0 );

1250 
nRecy˛abÀ
++;

1252 *
≤Cuºít
 = 
pˇche1
.
gΩ
.
nCuºítPage
;

1253 *
≤Max
 = ()
pˇche1
.
gΩ
.
nMaxPage
;

1254 *
≤Mö
 = ()
pˇche1
.
gΩ
.
nMöPage
;

1255 *
≤Recy˛abÀ
 = 
nRecy˛abÀ
;

1256 
	}
}

	@pragma.c

14 
	~"sqlôeI¡.h
"

15 
	~"log.h
"

17 #i‡!
deföed
(
SQLITE_ENABLE_LOCKING_STYLE
)

18 #i‡
deföed
(
__APPLE__
)

19 
	#SQLITE_ENABLE_LOCKING_STYLE
 1

	)

21 
	#SQLITE_ENABLE_LOCKING_STYLE
 0

	)

32 
	~"¥agma.h
"

45 
u8
 
	$gëSa„tyLevñ
(c⁄° *
z
, 
omôFuŒ
, 
u8
 
dÊt
){

47 c⁄° 
zText
[] = "onoffalseyestruextrafull";

48 c⁄° 
u8
 
iOff£t
[] = {0, 1, 2, 4, 9, 12, 15, 20};

49 c⁄° 
u8
 
iLígth
[] = {2, 2, 3, 5, 3, 4, 5, 4};

50 c⁄° 
u8
 
iVÆue
[] = {1, 0, 0, 0, 1, 1, 3, 2};

52 
i
, 
n
;

53 if–
	`sqlôe3Isdigô
(*
z
) ){

54  (
u8
)
	`sqlôe3Atoi
(
z
);

56 
n
 = 
	`sqlôe3SåÀn30
(
z
);

57 
i
=0; i<
	`AºaySize
(
iLígth
); i++){

58 if–
iLígth
[
i
]==
n
 && 
	`sqlôe3SåNICmp
(&
zText
[
iOff£t
[i]],
z
,n)==0

59 && (!
omôFuŒ
 || 
iVÆue
[
i
]<=1)

61  
iVÆue
[
i
];

64  
dÊt
;

65 
	}
}

70 
u8
 
	$sqlôe3GëBoﬁón
(c⁄° *
z
, 
u8
 
dÊt
){

71  
	`gëSa„tyLevñ
(
z
,1,
dÊt
)!=0;

72 
	}
}

78 #i‡!
deföed
(
SQLITE_OMIT_PRAGMA
)

83 
	$gëLockögMode
(c⁄° *
z
){

84 if–
z
 ){

85 if–0==
	`sqlôe3SåICmp
(
z
, "ex˛usive"ËË 
PAGER_LOCKINGMODE_EXCLUSIVE
;

86 if–0==
	`sqlôe3SåICmp
(
z
, "n‹mÆ"ËË 
PAGER_LOCKINGMODE_NORMAL
;

88  
PAGER_LOCKINGMODE_QUERY
;

89 
	}
}

91 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


98 
	$gëAutoVacuum
(c⁄° *
z
){

99 
i
;

100 if–0==
	`sqlôe3SåICmp
(
z
, "n⁄e"ËË 
BTREE_AUTOVACUUM_NONE
;

101 if–0==
	`sqlôe3SåICmp
(
z
, "fuŒ"ËË 
BTREE_AUTOVACUUM_FULL
;

102 if–0==
	`sqlôe3SåICmp
(
z
, "ö¸emíèl"ËË 
BTREE_AUTOVACUUM_INCR
;

103 
i
 = 
	`sqlôe3Atoi
(
z
);

104  (
u8
)((
i
>=0&&i<=2)?i:0);

105 
	}
}

108 #i‚de‡
SQLITE_OMIT_PAGER_PRAGMAS


114 
	$gëTempSt‹e
(c⁄° *
z
){

115 if–
z
[0]>='0' && z[0]<='2' ){

116  
z
[0] - '0';

117 }if–
	`sqlôe3SåICmp
(
z
, "file")==0 ){

119 }if–
	`sqlôe3SåICmp
(
z
, "memory")==0 ){

124 
	}
}

127 #i‚de‡
SQLITE_OMIT_PAGER_PRAGMAS


132 
	$övÆid©eTempSt‹age
(
P¨£
 *
pP¨£
){

133 
sqlôe3
 *
db
 = 
pP¨£
->db;

134 if–
db
->
aDb
[1].
pBt
!=0 ){

135 if–!
db
->
autoCommô
 || 
	`sqlôe3BåìIsInRódTøns
(db->
aDb
[1].
pBt
) ){

136 
	`sqlôe3Eº‹Msg
(
pP¨£
, "temporary storage cannot be changed "

138  
SQLITE_ERROR
;

140 
	`sqlôe3BåìClo£
(
db
->
aDb
[1].
pBt
);

141 
db
->
aDb
[1].
pBt
 = 0;

142 
	`sqlôe3Re£tAŒSchemasOfC⁄√˘i⁄
(
db
);

144  
SQLITE_OK
;

145 
	}
}

148 #i‚de‡
SQLITE_OMIT_PAGER_PRAGMAS


154 
	$ch™geTempSt‹age
(
P¨£
 *
pP¨£
, c⁄° *
zSt‹ageTy≥
){

155 
ts
 = 
	`gëTempSt‹e
(
zSt‹ageTy≥
);

156 
sqlôe3
 *
db
 = 
pP¨£
->db;

157 if–
db
->
ãmp_°‹e
==
ts
 )  
SQLITE_OK
;

158 if–
	`övÆid©eTempSt‹age
–
pP¨£
 ) !
SQLITE_OK
 ){

159  
SQLITE_ERROR
;

161 
db
->
ãmp_°‹e
 = (
u8
)
ts
;

162  
SQLITE_OK
;

163 
	}
}

169 
	$£tPøgmaResu…CﬁumnNames
(

170 
Vdbe
 *
v
,

171 c⁄° 
PøgmaName
 *
pPøgma


173 
u8
 
n
 = 
pPøgma
->
nPøgCName
;

174 
	`sqlôe3VdbeSëNumCﬁs
(
v
, 
n
==0 ? 1 :Ç);

175 if–
n
==0 ){

176 
	`sqlôe3VdbeSëCﬁName
(
v
, 0, 
COLNAME_NAME
, 
pPøgma
->
zName
, 
SQLITE_STATIC
);

178 
i
, 
j
;

179 
i
=0, 
j
=
pPøgma
->
iPøgCName
; i<
n
; i++, j++){

180 
	`sqlôe3VdbeSëCﬁName
(
v
, 
i
, 
COLNAME_NAME
, 
¥agCName
[
j
], 
SQLITE_STATIC
);

183 
	}
}

188 
	$ªtu∫SögÀI¡
(
Vdbe
 *
v
, 
i64
 
vÆue
){

189 
	`sqlôe3VdbeAddOp4Dup8
(
v
, 
OP_I¡64
, 0, 1, 0, (c⁄° 
u8
*)&
vÆue
, 
P4_INT64
);

190 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 1, 1);

191 
	}
}

196 
	$ªtu∫SögÀText
(

197 
Vdbe
 *
v
,

198 c⁄° *
zVÆue


200 if–
zVÆue
 ){

201 
	`sqlôe3VdbeLﬂdSåög
(
v
, 1, (c⁄° *)
zVÆue
);

202 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 1, 1);

204 
	}
}

211 #i‚de‡
SQLITE_OMIT_PAGER_PRAGMAS


212 
	$£tAŒPagîFœgs
(
sqlôe3
 *
db
){

213 if–
db
->
autoCommô
 ){

214 
Db
 *
pDb
 = 
db
->
aDb
;

215 
n
 = 
db
->
nDb
;

216 
	`as£π
–
SQLITE_FuŒFSync
==
PAGER_FULLFSYNC
 );

217 
	`as£π
–
SQLITE_Ck±FuŒFSync
==
PAGER_CKPT_FULLFSYNC
 );

218 
	`as£π
–
SQLITE_CacheSpûl
==
PAGER_CACHESPILL
 );

219 
	`as£π
–(
PAGER_FULLFSYNC
 | 
PAGER_CKPT_FULLFSYNC
 | 
PAGER_CACHESPILL
)

220 =
PAGER_FLAGS_MASK
 );

221 
	`as£π
–(
pDb
->
ß„ty_Àvñ
 & 
PAGER_SYNCHRONOUS_MASK
)==pDb->safety_level );

222  (
n
--) > 0 ){

223 if–
pDb
->
pBt
 ){

224 
	`sqlôe3BåìSëPagîFœgs
(
pDb
->
pBt
,

225 
pDb
->
ß„ty_Àvñ
 | (
db
->
Êags
 & 
PAGER_FLAGS_MASK
) );

227 
pDb
++;

230 
	}
}

232 
	#£tAŒPagîFœgs
(
X
Ë

	)

239 #i‚de‡
SQLITE_OMIT_FOREIGN_KEY


240 c⁄° *
	$a˘i⁄Name
(
u8
 
a˘i⁄
){

241 c⁄° *
zName
;

242  
a˘i⁄
 ){

243 
OE_SëNuŒ
: 
zName
 = "SET NULL"; ;

244 
OE_SëDÊt
: 
zName
 = "SET DEFAULT"; ;

245 
OE_Casˇde
: 
zName
 = "CASCADE"; ;

246 
OE_Re°ri˘
: 
zName
 = "RESTRICT"; ;

247 : 
zName
 = "NO ACTION";

248 
	`as£π
–
a˘i⁄
==
OE_N⁄e
 ); ;

250  
zName
;

251 
	}
}

260 c⁄° *
	$sqlôe3Jou∫ÆModíame
(
eMode
){

261 * c⁄° 
azModeName
[] = {

263 #i‚de‡
SQLITE_OMIT_WAL


267 
	`as£π
–
PAGER_JOURNALMODE_DELETE
==0 );

268 
	`as£π
–
PAGER_JOURNALMODE_PERSIST
==1 );

269 
	`as£π
–
PAGER_JOURNALMODE_OFF
==2 );

270 
	`as£π
–
PAGER_JOURNALMODE_TRUNCATE
==3 );

271 
	`as£π
–
PAGER_JOURNALMODE_MEMORY
==4 );

272 
	`as£π
–
PAGER_JOURNALMODE_WAL
==5 );

273 
	`as£π
–
eMode
>=0 &&ÉMode<=
	`AºaySize
(
azModeName
) );

275 if–
eMode
==
	`AºaySize
(
azModeName
) )  0;

276  
azModeName
[
eMode
];

277 
	}
}

282 c⁄° 
PøgmaName
 *
	$¥agmaLoˇã
(c⁄° *
zName
){

283 
u¥
, 
lwr
, 
mid
, 
rc
;

284 
lwr
 = 0;

285 
u¥
 = 
	`AºaySize
(
aPøgmaName
)-1;

286  
lwr
<=
u¥
 ){

287 
mid
 = (
lwr
+
u¥
)/2;

288 
rc
 = 
	`sqlôe3_°ricmp
(
zName
, 
aPøgmaName
[
mid
].zName);

289 if–
rc
==0 ) ;

290 if–
rc
<0 ){

291 
u¥
 = 
mid
 - 1;

293 
lwr
 = 
mid
 + 1;

296  
lwr
>
u¥
 ? 0 : &
aPøgmaName
[
mid
];

297 
	}
}

314 
	$sqlôe3Pøgma
(

315 
P¨£
 *
pP¨£
,

316 
Tokí
 *
pId1
,

317 
Tokí
 *
pId2
,

318 
Tokí
 *
pVÆue
,

319 
möusFœg


321 *
zLe·
 = 0;

322 *
zRight
 = 0;

323 c⁄° *
zDb
 = 0;

324 
Tokí
 *
pId
;

325 *
aF˙é
[4];

326 
iDb
;

327 
rc
;

328 
sqlôe3
 *
db
 = 
pP¨£
->db;

329 
Db
 *
pDb
;

330 
Vdbe
 *
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

331 c⁄° 
PøgmaName
 *
pPøgma
;

333 if–
v
==0 ) ;

334 
	`sqlôe3VdbeRunO∆yOn˚
(
v
);

335 
pP¨£
->
nMem
 = 2;

339 
iDb
 = 
	`sqlôe3TwoP¨tName
(
pP¨£
, 
pId1
, 
pId2
, &
pId
);

340 if–
iDb
<0 ) ;

341 
pDb
 = &
db
->
aDb
[
iDb
];

346 if–
iDb
==1 && 
	`sqlôe3O≥nTempD©aba£
(
pP¨£
) ){

350 
zLe·
 = 
	`sqlôe3NameFromTokí
(
db
, 
pId
);

351 if–!
zLe·
 ) ;

352 if–
möusFœg
 ){

353 
zRight
 = 
	`sqlôe3MPrötf
(
db
, "-%T", 
pVÆue
);

355 
zRight
 = 
	`sqlôe3NameFromTokí
(
db
, 
pVÆue
);

358 
	`as£π
–
pId2
 );

359 
zDb
 = 
pId2
->
n
>0 ? 
pDb
->
zDbSName
 : 0;

360 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_PRAGMA
, 
zLe·
, 
zRight
, 
zDb
) ){

361 
¥agma_out
;

379 
aF˙é
[0] = 0;

380 
aF˙é
[1] = 
zLe·
;

381 
aF˙é
[2] = 
zRight
;

382 
aF˙é
[3] = 0;

383 
db
->
busyH™dÀr
.
nBusy
 = 0;

384 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, 
zDb
, 
SQLITE_FCNTL_PRAGMA
, (*)
aF˙é
);

385 if–
rc
==
SQLITE_OK
 ){

386 
	`sqlôe3VdbeSëNumCﬁs
(
v
, 1);

387 
	`sqlôe3VdbeSëCﬁName
(
v
, 0, 
COLNAME_NAME
, 
aF˙é
[0], 
SQLITE_TRANSIENT
);

388 
	`ªtu∫SögÀText
(
v
, 
aF˙é
[0]);

389 
	`sqlôe3_‰ì
(
aF˙é
[0]);

390 
¥agma_out
;

392 if–
rc
!=
SQLITE_NOTFOUND
 ){

393 if–
aF˙é
[0] ){

394 
	`sqlôe3Eº‹Msg
(
pP¨£
, "%s", 
aF˙é
[0]);

395 
	`sqlôe3_‰ì
(
aF˙é
[0]);

397 
pP¨£
->
nEº
++;

398 
pP¨£
->
rc
 =Ñc;

399 
¥agma_out
;

403 
pPøgma
 = 
	`¥agmaLoˇã
(
zLe·
);

404 if–
pPøgma
==0 ) 
¥agma_out
;

407 if–(
pPøgma
->
mPøgFlg
 & 
PøgFlg_NìdSchema
)!=0 ){

408 if–
	`sqlôe3RódSchema
(
pP¨£
ËË
¥agma_out
;

412 if–(
pPøgma
->
mPøgFlg
 & 
PøgFlg_NoCﬁumns
)==0 ){

413 
	`£tPøgmaResu…CﬁumnNames
(
v
, 
pPøgma
);

417  
pPøgma
->
ePøgTyp
 ){

419 #i‡!
	`deföed
(
SQLITE_OMIT_PAGER_PRAGMAS
Ë&& !deföed(
SQLITE_OMIT_DEPRECATED
)

436 
PøgTyp_DEFAULT_CACHE_SIZE
: {

437 c⁄° 
iLn
 = 
	`VDBE_OFFSET_LINENO
(2);

438 c⁄° 
VdbeOpLi°
 
gëCacheSize
[] = {

439 { 
OP_Tønß˘i⁄
, 0, 0, 0},

440 { 
OP_RódCookõ
, 0, 1, 
BTREE_DEFAULT_CACHE_SIZE
},

441 { 
OP_IfPos
, 1, 8, 0},

442 { 
OP_I¡egî
, 0, 2, 0},

443 { 
OP_Subåa˘
, 1, 2, 1},

444 { 
OP_IfPos
, 1, 8, 0},

445 { 
OP_I¡egî
, 0, 1, 0},

446 { 
OP_No›
, 0, 0, 0},

447 { 
OP_Resu…Row
, 1, 1, 0},

449 
VdbeOp
 *
aOp
;

450 
	`sqlôe3VdbeU£sBåì
(
v
, 
iDb
);

451 if–!
zRight
 ){

452 
pP¨£
->
nMem
 += 2;

453 
	`sqlôe3VdbeVîifyNoMÆlocRequúed
(
v
, 
	`AºaySize
(
gëCacheSize
));

454 
aOp
 = 
	`sqlôe3VdbeAddOpLi°
(
v
, 
	`AºaySize
(
gëCacheSize
), gëCacheSize, 
iLn
);

455 if–
	`ONLY_IF_REALLOC_STRESS
(
aOp
==0) ) ;

456 
aOp
[0].
p1
 = 
iDb
;

457 
aOp
[1].
p1
 = 
iDb
;

458 
aOp
[6].
p1
 = 
SQLITE_DEFAULT_CACHE_SIZE
;

460 
size
 = 
	`sqlôe3AbsI¡32
(
	`sqlôe3Atoi
(
zRight
));

461 
	`sqlôe3BegöWrôeO≥øti⁄
(
pP¨£
, 0, 
iDb
);

462 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_SëCookõ
, 
iDb
, 
BTREE_DEFAULT_CACHE_SIZE
, 
size
);

463 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

464 
pDb
->
pSchema
->
ˇche_size
 = 
size
;

465 
	`sqlôe3BåìSëCacheSize
(
pDb
->
pBt
,ÖDb->
pSchema
->
ˇche_size
);

466 
pDb
->
pBt
->pBt->
pPagî
->
pLoggî
->
p_check
 = 
LOG_LIMIT
;

474 #i‡!
	`deföed
(
SQLITE_OMIT_PAGER_PRAGMAS
)

484 
PøgTyp_PAGE_SIZE
: {

485 
Båì
 *
pBt
 = 
pDb
->pBt;

486 
	`as£π
–
pBt
!=0 );

487 if–!
zRight
 ){

488 
size
 = 
	`ALWAYS
(
pBt
Ë? 
	`sqlôe3BåìGëPageSize
(pBt) : 0;

489 
	`ªtu∫SögÀI¡
(
v
, 
size
);

494 
db
->
√xtPagesize
 = 
	`sqlôe3Atoi
(
zRight
);

495 if–
SQLITE_NOMEM
==
	`sqlôe3BåìSëPageSize
(
pBt
, 
db
->
√xtPagesize
,-1,0) ){

496 
	`sqlôe3OomFau…
(
db
);

498 
pDb
->
pBt
->pBt->
pPagî
->
pLoggî
->
p_check
 = 
LOG_LIMIT
;

512 
PøgTyp_SECURE_DELETE
: {

513 
Båì
 *
pBt
 = 
pDb
->pBt;

514 
b
 = -1;

515 
	`as£π
–
pBt
!=0 );

516 if–
zRight
 ){

517 
b
 = 
	`sqlôe3GëBoﬁón
(
zRight
, 0);

519 if–
pId2
->
n
==0 && 
b
>=0 ){

520 
ii
;

521 
ii
=0; ii<
db
->
nDb
; ii++){

522 
	`sqlôe3BåìSecuªDñëe
(
db
->
aDb
[
ii
].
pBt
, 
b
);

525 
pDb
->
pBt
->pBt->
pPagî
->
pLoggî
->
p_check
 = 
LOG_LIMIT
;

527 
b
 = 
	`sqlôe3BåìSecuªDñëe
(
pBt
, b);

528 
	`ªtu∫SögÀI¡
(
v
, 
b
);

549 
PøgTyp_PAGE_COUNT
: {

550 
iReg
;

551 
	`sqlôe3CodeVîifySchema
(
pP¨£
, 
iDb
);

552 
iReg
 = ++
pP¨£
->
nMem
;

553 if–
	`sqlôe3Tﬁowî
(
zLe·
[0])=='p' ){

554 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Pagecou¡
, 
iDb
, 
iReg
);

556 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MaxPg˙t
, 
iDb
, 
iReg
,

557 
	`sqlôe3AbsI¡32
(
	`sqlôe3Atoi
(
zRight
)));

559 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 
iReg
, 1);

567 
PøgTyp_LOCKING_MODE
: {

568 c⁄° *
zRë
 = "normal";

569 
eMode
 = 
	`gëLockögMode
(
zRight
);

571 if–
pId2
->
n
==0 && 
eMode
==
PAGER_LOCKINGMODE_QUERY
 ){

576 
eMode
 = 
db
->
dÊtLockMode
;

578 
Pagî
 *
pPagî
;

579 if–
pId2
->
n
==0 ){

588 
ii
;

589 
	`as£π
(
pDb
==&
db
->
aDb
[0]);

590 
ii
=2; ii<
db
->
nDb
; ii++){

591 
pPagî
 = 
	`sqlôe3BåìPagî
(
db
->
aDb
[
ii
].
pBt
);

592 
	`sqlôe3PagîLockögMode
(
pPagî
, 
eMode
);

594 
db
->
dÊtLockMode
 = (
u8
)
eMode
;

596 
pPagî
 = 
	`sqlôe3BåìPagî
(
pDb
->
pBt
);

597 
eMode
 = 
	`sqlôe3PagîLockögMode
(
pPagî
,ÉMode);

599 
pDb
->
pBt
->pBt->
pPagî
->
pLoggî
->
p_check
 = 
LOG_LIMIT
;

602 
	`as£π
–
eMode
==
PAGER_LOCKINGMODE_NORMAL


603 || 
eMode
==
PAGER_LOCKINGMODE_EXCLUSIVE
 );

604 if–
eMode
==
PAGER_LOCKINGMODE_EXCLUSIVE
 ){

605 
zRë
 = "exclusive";

607 
	`ªtu∫SögÀText
(
v
, 
zRë
);

616 
PøgTyp_JOURNAL_MODE
: {

617 
eMode
;

618 
ii
;

620 if–
zRight
==0 ){

623 
eMode
 = 
PAGER_JOURNALMODE_QUERY
;

625 c⁄° *
zMode
;

626 
n
 = 
	`sqlôe3SåÀn30
(
zRight
);

627 
eMode
=0; (
zMode
 = 
	`sqlôe3Jou∫ÆModíame
(eMode))!=0;ÉMode++){

628 if–
	`sqlôe3SåNICmp
(
zRight
, 
zMode
, 
n
)==0 ) ;

630 if–!
zMode
 ){

633 
eMode
 = 
PAGER_JOURNALMODE_QUERY
;

636 if–
eMode
==
PAGER_JOURNALMODE_QUERY
 && 
pId2
->
n
==0 ){

638 
iDb
 = 0;

639 
pId2
->
n
 = 1;

641 
ii
=
db
->
nDb
-1; ii>=0; ii--){

642 if–
db
->
aDb
[
ii
].
pBt
 && (ii==
iDb
 || 
pId2
->
n
==0) ){

643 
	`sqlôe3VdbeU£sBåì
(
v
, 
ii
);

644 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Jou∫ÆMode
, 
ii
, 1, 
eMode
);

647 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 1, 1);

648 
pDb
->
pBt
->pBt->
pPagî
->
pLoggî
->
p_check
 = 
LOG_LIMIT
;

658 
PøgTyp_JOURNAL_SIZE_LIMIT
: {

659 
Pagî
 *
pPagî
 = 
	`sqlôe3BåìPagî
(
pDb
->
pBt
);

660 
i64
 
iLimô
 = -2;

661 if–
zRight
 ){

662 
	`sqlôe3DecOrHexToI64
(
zRight
, &
iLimô
);

663 if–
iLimô
<-1 ) iLimit = -1;

665 
iLimô
 = 
	`sqlôe3PagîJou∫ÆSizeLimô
(
pPagî
, iLimit);

666 
	`ªtu∫SögÀI¡
(
v
, 
iLimô
);

679 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


680 
PøgTyp_AUTO_VACUUM
: {

681 
Båì
 *
pBt
 = 
pDb
->pBt;

682 
	`as£π
–
pBt
!=0 );

683 if–!
zRight
 ){

684 
	`ªtu∫SögÀI¡
(
v
, 
	`sqlôe3BåìGëAutoVacuum
(
pBt
));

686 
eAuto
 = 
	`gëAutoVacuum
(
zRight
);

687 
	`as£π
–
eAuto
>=0 &&ÉAuto<=2 );

688 
db
->
√xtAutovac
 = (
u8
)
eAuto
;

694 
rc
 = 
	`sqlôe3BåìSëAutoVacuum
(
pBt
, 
eAuto
);

695 if–
rc
==
SQLITE_OK
 && (
eAuto
==1 ||ÉAuto==2) ){

701 c⁄° 
iLn
 = 
	`VDBE_OFFSET_LINENO
(2);

702 c⁄° 
VdbeOpLi°
 
£tMëa6
[] = {

703 { 
OP_Tønß˘i⁄
, 0, 1, 0},

704 { 
OP_RódCookõ
, 0, 1, 
BTREE_LARGEST_ROOT_PAGE
},

705 { 
OP_If
, 1, 0, 0},

706 { 
OP_HÆt
, 
SQLITE_OK
, 
OE_Ab‹t
, 0},

707 { 
OP_SëCookõ
, 0, 
BTREE_INCR_VACUUM
, 0},

709 
VdbeOp
 *
aOp
;

710 
iAddr
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

711 
	`sqlôe3VdbeVîifyNoMÆlocRequúed
(
v
, 
	`AºaySize
(
£tMëa6
));

712 
aOp
 = 
	`sqlôe3VdbeAddOpLi°
(
v
, 
	`AºaySize
(
£tMëa6
), sëMëa6, 
iLn
);

713 if–
	`ONLY_IF_REALLOC_STRESS
(
aOp
==0) ) ;

714 
aOp
[0].
p1
 = 
iDb
;

715 
aOp
[1].
p1
 = 
iDb
;

716 
aOp
[2].
p2
 = 
iAddr
+4;

717 
aOp
[4].
p1
 = 
iDb
;

718 
aOp
[4].
p3
 = 
eAuto
 - 1;

719 
	`sqlôe3VdbeU£sBåì
(
v
, 
iDb
);

731 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


732 
PøgTyp_INCREMENTAL_VACUUM
: {

733 
iLimô
, 
addr
;

734 if–
zRight
==0 || !
	`sqlôe3GëI¡32
(zRight, &
iLimô
) || iLimit<=0 ){

735 
iLimô
 = 0x7fffffff;

737 
	`sqlôe3BegöWrôeO≥øti⁄
(
pP¨£
, 0, 
iDb
);

738 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 
iLimô
, 1);

739 
addr
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_In¸Vacuum
, 
iDb
); 
	`VdbeCovîage
(v);

740 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Resu…Row
, 1);

741 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_AddImm
, 1, -1);

742 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IfPos
, 1, 
addr
); 
	`VdbeCovîage
(v);

743 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr
);

748 #i‚de‡
SQLITE_OMIT_PAGER_PRAGMAS


760 
PøgTyp_CACHE_SIZE
: {

761 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

762 if–!
zRight
 ){

763 
	`ªtu∫SögÀI¡
(
v
, 
pDb
->
pSchema
->
ˇche_size
);

765 
size
 = 
	`sqlôe3Atoi
(
zRight
);

766 
pDb
->
pSchema
->
ˇche_size
 = 
size
;

767 
	`sqlôe3BåìSëCacheSize
(
pDb
->
pBt
,ÖDb->
pSchema
->
ˇche_size
);

769 
pDb
->
pBt
->pBt->
pPagî
->
pLoggî
->
p_check
 = 
LOG_LIMIT
;

796 
PøgTyp_CACHE_SPILL
: {

797 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

798 if–!
zRight
 ){

799 
	`ªtu∫SögÀI¡
(
v
,

800 (
db
->
Êags
 & 
SQLITE_CacheSpûl
)==0 ? 0 :

801 
	`sqlôe3BåìSëSpûlSize
(
pDb
->
pBt
,0));

803 
size
 = 1;

804 if–
	`sqlôe3GëI¡32
(
zRight
, &
size
) ){

805 
	`sqlôe3BåìSëSpûlSize
(
pDb
->
pBt
, 
size
);

807 if–
	`sqlôe3GëBoﬁón
(
zRight
, 
size
!=0) ){

808 
db
->
Êags
 |
SQLITE_CacheSpûl
;

810 
db
->
Êags
 &~
SQLITE_CacheSpûl
;

812 
	`£tAŒPagîFœgs
(
db
);

831 
PøgTyp_MMAP_SIZE
: {

832 
sqlôe3_öt64
 
sz
;

833 #i‡
SQLITE_MAX_MMAP_SIZE
>0

834 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

835 if–
zRight
 ){

836 
ii
;

837 
	`sqlôe3DecOrHexToI64
(
zRight
, &
sz
);

838 if–
sz
<0 ) sz = 
sqlôe3GlobÆC⁄fig
.
szMm≠
;

839 if–
pId2
->
n
==0 ) 
db
->
szMm≠
 = 
sz
;

840 
ii
=
db
->
nDb
-1; ii>=0; ii--){

841 if–
db
->
aDb
[
ii
].
pBt
 && (ii==
iDb
 || 
pId2
->
n
==0) ){

842 
	`sqlôe3BåìSëMm≠Limô
(
db
->
aDb
[
ii
].
pBt
, 
sz
);

846 
sz
 = -1;

847 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, 
zDb
, 
SQLITE_FCNTL_MMAP_SIZE
, &
sz
);

849 
sz
 = 0;

850 
rc
 = 
SQLITE_OK
;

852 if–
rc
==
SQLITE_OK
 ){

853 
	`ªtu∫SögÀI¡
(
v
, 
sz
);

854 }if–
rc
!=
SQLITE_NOTFOUND
 ){

855 
pP¨£
->
nEº
++;

856 
pP¨£
->
rc
 =Ñc;

872 
PøgTyp_TEMP_STORE
: {

873 if–!
zRight
 ){

874 
	`ªtu∫SögÀI¡
(
v
, 
db
->
ãmp_°‹e
);

876 
	`ch™geTempSt‹age
(
pP¨£
, 
zRight
);

891 
PøgTyp_TEMP_STORE_DIRECTORY
: {

892 if–!
zRight
 ){

893 
	`ªtu∫SögÀText
(
v
, 
sqlôe3_ãmp_dúe˘‹y
);

895 #i‚de‡
SQLITE_OMIT_WSD


896 if–
zRight
[0] ){

897 
ªs
;

898 
rc
 = 
	`sqlôe3OsAc˚ss
(
db
->
pVfs
, 
zRight
, 
SQLITE_ACCESS_READWRITE
, &
ªs
);

899 if–
rc
!=
SQLITE_OK
 || 
ªs
==0 ){

900 
	`sqlôe3Eº‹Msg
(
pP¨£
, "notá writable directory");

901 
¥agma_out
;

904 if–
SQLITE_TEMP_STORE
==0

905 || (
SQLITE_TEMP_STORE
==1 && 
db
->
ãmp_°‹e
<=1)

906 || (
SQLITE_TEMP_STORE
==2 && 
db
->
ãmp_°‹e
==1)

908 
	`övÆid©eTempSt‹age
(
pP¨£
);

910 
	`sqlôe3_‰ì
(
sqlôe3_ãmp_dúe˘‹y
);

911 if–
zRight
[0] ){

912 
sqlôe3_ãmp_dúe˘‹y
 = 
	`sqlôe3_m¥ötf
("%s", 
zRight
);

914 
sqlôe3_ãmp_dúe˘‹y
 = 0;

921 #i‡
SQLITE_OS_WIN


935 
PøgTyp_DATA_STORE_DIRECTORY
: {

936 if–!
zRight
 ){

937 
	`ªtu∫SögÀText
(
v
, 
sqlôe3_d©a_dúe˘‹y
);

939 #i‚de‡
SQLITE_OMIT_WSD


940 if–
zRight
[0] ){

941 
ªs
;

942 
rc
 = 
	`sqlôe3OsAc˚ss
(
db
->
pVfs
, 
zRight
, 
SQLITE_ACCESS_READWRITE
, &
ªs
);

943 if–
rc
!=
SQLITE_OK
 || 
ªs
==0 ){

944 
	`sqlôe3Eº‹Msg
(
pP¨£
, "notá writable directory");

945 
¥agma_out
;

948 
	`sqlôe3_‰ì
(
sqlôe3_d©a_dúe˘‹y
);

949 if–
zRight
[0] ){

950 
sqlôe3_d©a_dúe˘‹y
 = 
	`sqlôe3_m¥ötf
("%s", 
zRight
);

952 
sqlôe3_d©a_dúe˘‹y
 = 0;

960 #i‡
SQLITE_ENABLE_LOCKING_STYLE


969 
PøgTyp_LOCK_PROXY_FILE
: {

970 if–!
zRight
 ){

971 
Pagî
 *
pPagî
 = 
	`sqlôe3BåìPagî
(
pDb
->
pBt
);

972 *
¥oxy_fûe_∑th
 = 
NULL
;

973 
sqlôe3_fûe
 *
pFûe
 = 
	`sqlôe3PagîFûe
(
pPagî
);

974 
	`sqlôe3OsFûeC⁄åﬁHöt
(
pFûe
, 
SQLITE_GET_LOCKPROXYFILE
,

975 &
¥oxy_fûe_∑th
);

976 
	`ªtu∫SögÀText
(
v
, 
¥oxy_fûe_∑th
);

978 
Pagî
 *
pPagî
 = 
	`sqlôe3BåìPagî
(
pDb
->
pBt
);

979 
sqlôe3_fûe
 *
pFûe
 = 
	`sqlôe3PagîFûe
(
pPagî
);

980 
ªs
;

981 if–
zRight
[0] ){

982 
ªs
=
	`sqlôe3OsFûeC⁄åﬁ
(
pFûe
, 
SQLITE_SET_LOCKPROXYFILE
,

983 
zRight
);

985 
ªs
=
	`sqlôe3OsFûeC⁄åﬁ
(
pFûe
, 
SQLITE_SET_LOCKPROXYFILE
,

986 
NULL
);

988 if–
ªs
!=
SQLITE_OK
 ){

989 
	`sqlôe3Eº‹Msg
(
pP¨£
, "failedÅo setÜockÖroxy file");

990 
¥agma_out
;

1006 
PøgTyp_SYNCHRONOUS
: {

1007 if–!
zRight
 ){

1008 
	`ªtu∫SögÀI¡
(
v
, 
pDb
->
ß„ty_Àvñ
-1);

1010 if–!
db
->
autoCommô
 ){

1011 
	`sqlôe3Eº‹Msg
(
pP¨£
,

1014 
iLevñ
 = (
	`gëSa„tyLevñ
(
zRight
,0,1)+1Ë& 
PAGER_SYNCHRONOUS_MASK
;

1015 if–
iLevñ
==0 ) iLevel = 1;

1016 
pDb
->
ß„ty_Àvñ
 = 
iLevñ
;

1017 
pDb
->
bSyncSë
 = 1;

1018 
	`£tAŒPagîFœgs
(
db
);

1025 #i‚de‡
SQLITE_OMIT_FLAG_PRAGMAS


1026 
PøgTyp_FLAG
: {

1027 if–
zRight
==0 ){

1028 
	`£tPøgmaResu…CﬁumnNames
(
v
, 
pPøgma
);

1029 
	`ªtu∫SögÀI¡
(
v
, (
db
->
Êags
 & 
pPøgma
->
iArg
)!=0 );

1031 
mask
 = 
pPøgma
->
iArg
;

1032 if–
db
->
autoCommô
==0 ){

1035 
mask
 &~(
SQLITE_F‹eignKeys
);

1037 #i‡
SQLITE_USER_AUTHENTICATION


1038 if–
db
->
auth
.
authLevñ
==
UAUTH_U£r
 ){

1040 
mask
 &~(
SQLITE_WrôeSchema
);

1044 if–
	`sqlôe3GëBoﬁón
(
zRight
, 0) ){

1045 
db
->
Êags
 |
mask
;

1047 
db
->
Êags
 &~
mask
;

1048 if–
mask
==
SQLITE_De„rFKs
 ) 
db
->
nDe„ºedImmC⁄s
 = 0;

1055 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_Expúe
);

1056 
	`£tAŒPagîFœgs
(
db
);

1062 #i‚de‡
SQLITE_OMIT_SCHEMA_PRAGMAS


1075 
PøgTyp_TABLE_INFO
: if–
zRight
 ){

1076 
TabÀ
 *
pTab
;

1077 
pTab
 = 
	`sqlôe3LoˇãTabÀ
(
pP¨£
, 
LOCATE_NOERR
, 
zRight
, 
zDb
);

1078 if–
pTab
 ){

1079 
i
, 
k
;

1080 
nHiddí
 = 0;

1081 
Cﬁumn
 *
pCﬁ
;

1082 
Index
 *
pPk
 = 
	`sqlôe3Prim¨yKeyIndex
(
pTab
);

1083 
pP¨£
->
nMem
 = 6;

1084 
	`sqlôe3CodeVîifySchema
(
pP¨£
, 
iDb
);

1085 
	`sqlôe3VõwGëCﬁumnNames
(
pP¨£
, 
pTab
);

1086 
i
=0, 
pCﬁ
=
pTab
->
aCﬁ
; i<pTab->
nCﬁ
; i++,ÖCol++){

1087 if–
	`IsHiddíCﬁumn
(
pCﬁ
) ){

1088 
nHiddí
++;

1091 if–(
pCﬁ
->
cﬁFœgs
 & 
COLFLAG_PRIMKEY
)==0 ){

1092 
k
 = 0;

1093 }if–
pPk
==0 ){

1094 
k
 = 1;

1096 
k
=1; k<=
pTab
->
nCﬁ
 && 
pPk
->
aiCﬁumn
[k-1]!=
i
; k++){}

1098 
	`as£π
–
pCﬁ
->
pDÊt
==0 ||ÖCﬁ->pDÊt->
›
==
TK_SPAN
 );

1099 
	`sqlôe3VdbeMu…iLﬂd
(
v
, 1, "issisi",

1100 
i
-
nHiddí
,

1101 
pCﬁ
->
zName
,

1102 
	`sqlôe3CﬁumnTy≥
(
pCﬁ
,""),

1103 
pCﬁ
->
nŸNuŒ
 ? 1 : 0,

1104 
pCﬁ
->
pDÊt
 ?ÖCﬁ->pDÊt->
u
.
zTokí
 : 0,

1105 
k
);

1106 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 1, 6);

1112 
PøgTyp_STATS
: {

1113 
Index
 *
pIdx
;

1114 
HashEÀm
 *
i
;

1115 
pP¨£
->
nMem
 = 4;

1116 
	`sqlôe3CodeVîifySchema
(
pP¨£
, 
iDb
);

1117 
i
=
	`sqlôeHashFú°
(&
pDb
->
pSchema
->
tblHash
); i; i=
	`sqlôeHashNext
(i)){

1118 
TabÀ
 *
pTab
 = 
	`sqlôeHashD©a
(
i
);

1119 
	`sqlôe3VdbeMu…iLﬂd
(
v
, 1, "ssii",

1120 
pTab
->
zName
,

1122 
pTab
->
szTabRow
,

1123 
pTab
->
nRowLogE°
);

1124 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 1, 4);

1125 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
){

1126 
	`sqlôe3VdbeMu…iLﬂd
(
v
, 2, "sii",

1127 
pIdx
->
zName
,

1128 
pIdx
->
szIdxRow
,

1129 
pIdx
->
aiRowLogE°
[0]);

1130 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 1, 4);

1136 
PøgTyp_INDEX_INFO
: if–
zRight
 ){

1137 
Index
 *
pIdx
;

1138 
TabÀ
 *
pTab
;

1139 
pIdx
 = 
	`sqlôe3FödIndex
(
db
, 
zRight
, 
zDb
);

1140 if–
pIdx
 ){

1141 
i
;

1142 
mx
;

1143 if–
pPøgma
->
iArg
 ){

1145 
mx
 = 
pIdx
->
nCﬁumn
;

1146 
pP¨£
->
nMem
 = 6;

1149 
mx
 = 
pIdx
->
nKeyCﬁ
;

1150 
pP¨£
->
nMem
 = 3;

1152 
pTab
 = 
pIdx
->
pTabÀ
;

1153 
	`sqlôe3CodeVîifySchema
(
pP¨£
, 
iDb
);

1154 
	`as£π
–
pP¨£
->
nMem
<=
pPøgma
->
nPøgCName
 );

1155 
i
=0; i<
mx
; i++){

1156 
i16
 
˙um
 = 
pIdx
->
aiCﬁumn
[
i
];

1157 
	`sqlôe3VdbeMu…iLﬂd
(
v
, 1, "iis", 
i
, 
˙um
,

1158 
˙um
<0 ? 0 : 
pTab
->
aCﬁ
[˙um].
zName
);

1159 if–
pPøgma
->
iArg
 ){

1160 
	`sqlôe3VdbeMu…iLﬂd
(
v
, 4, "isi",

1161 
pIdx
->
aS‹tOrdî
[
i
],

1162 
pIdx
->
azCﬁl
[
i
],

1163 
i
<
pIdx
->
nKeyCﬁ
);

1165 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 1, 
pP¨£
->
nMem
);

1171 
PøgTyp_INDEX_LIST
: if–
zRight
 ){

1172 
Index
 *
pIdx
;

1173 
TabÀ
 *
pTab
;

1174 
i
;

1175 
pTab
 = 
	`sqlôe3FödTabÀ
(
db
, 
zRight
, 
zDb
);

1176 if–
pTab
 ){

1177 
pP¨£
->
nMem
 = 5;

1178 
	`sqlôe3CodeVîifySchema
(
pP¨£
, 
iDb
);

1179 
pIdx
=
pTab
->
pIndex
, 
i
=0;ÖIdx;ÖIdxıIdx->
pNext
, i++){

1180 c⁄° *
azOrigö
[] = { "c", "u", "pk" };

1181 
	`sqlôe3VdbeMu…iLﬂd
(
v
, 1, "isisi",

1182 
i
,

1183 
pIdx
->
zName
,

1184 
	`IsUniqueIndex
(
pIdx
),

1185 
azOrigö
[
pIdx
->
idxTy≥
],

1186 
pIdx
->
pP¨tIdxWhîe
!=0);

1187 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 1, 5);

1193 
PøgTyp_DATABASE_LIST
: {

1194 
i
;

1195 
pP¨£
->
nMem
 = 3;

1196 
i
=0; i<
db
->
nDb
; i++){

1197 if–
db
->
aDb
[
i
].
pBt
==0 ) ;

1198 
	`as£π
–
db
->
aDb
[
i
].
zDbSName
!=0 );

1199 
	`sqlôe3VdbeMu…iLﬂd
(
v
, 1, "iss",

1200 
i
,

1201 
db
->
aDb
[
i
].
zDbSName
,

1202 
	`sqlôe3BåìGëFûíame
(
db
->
aDb
[
i
].
pBt
));

1203 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 1, 3);

1208 
PøgTyp_COLLATION_LIST
: {

1209 
i
 = 0;

1210 
HashEÀm
 *
p
;

1211 
pP¨£
->
nMem
 = 2;

1212 
p
=
	`sqlôeHashFú°
(&
db
->
aCﬁlSeq
);Ö;Ö=
	`sqlôeHashNext
(p)){

1213 
CﬁlSeq
 *
pCﬁl
 = (CﬁlSeq *)
	`sqlôeHashD©a
(
p
);

1214 
	`sqlôe3VdbeMu…iLﬂd
(
v
, 1, "is", 
i
++, 
pCﬁl
->
zName
);

1215 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 1, 2);

1221 #i‚de‡
SQLITE_OMIT_FOREIGN_KEY


1222 
PøgTyp_FOREIGN_KEY_LIST
: if–
zRight
 ){

1223 
FKey
 *
pFK
;

1224 
TabÀ
 *
pTab
;

1225 
pTab
 = 
	`sqlôe3FödTabÀ
(
db
, 
zRight
, 
zDb
);

1226 if–
pTab
 ){

1227 
pFK
 = 
pTab
->
pFKey
;

1228 if–
pFK
 ){

1229 
i
 = 0;

1230 
pP¨£
->
nMem
 = 8;

1231 
	`sqlôe3CodeVîifySchema
(
pP¨£
, 
iDb
);

1232 
pFK
){

1233 
j
;

1234 
j
=0; j<
pFK
->
nCﬁ
; j++){

1235 
	`sqlôe3VdbeMu…iLﬂd
(
v
, 1, "iissssss",

1236 
i
,

1237 
j
,

1238 
pFK
->
zTo
,

1239 
pTab
->
aCﬁ
[
pFK
->aCﬁ[
j
].
iFrom
].
zName
,

1240 
pFK
->
aCﬁ
[
j
].
zCﬁ
,

1241 
	`a˘i⁄Name
(
pFK
->
aA˘i⁄
[1]),

1242 
	`a˘i⁄Name
(
pFK
->
aA˘i⁄
[0]),

1244 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 1, 8);

1246 ++
i
;

1247 
pFK
 =ÖFK->
pNextFrom
;

1255 #i‚de‡
SQLITE_OMIT_FOREIGN_KEY


1256 #i‚de‡
SQLITE_OMIT_TRIGGER


1257 
PøgTyp_FOREIGN_KEY_CHECK
: {

1258 
FKey
 *
pFK
;

1259 
TabÀ
 *
pTab
;

1260 
TabÀ
 *
pP¨ít
;

1261 
Index
 *
pIdx
;

1262 
i
;

1263 
j
;

1264 
HashEÀm
 *
k
;

1265 
x
;

1266 
ªgResu…
;

1267 
ªgKey
;

1268 
ªgRow
;

1269 
addrT›
;

1270 
addrOk
;

1271 *
aiCﬁs
;

1273 
ªgResu…
 = 
pP¨£
->
nMem
+1;

1274 
pP¨£
->
nMem
 += 4;

1275 
ªgKey
 = ++
pP¨£
->
nMem
;

1276 
ªgRow
 = ++
pP¨£
->
nMem
;

1277 
	`sqlôe3CodeVîifySchema
(
pP¨£
, 
iDb
);

1278 
k
 = 
	`sqlôeHashFú°
(&
db
->
aDb
[
iDb
].
pSchema
->
tblHash
);

1279  
k
 ){

1280 if–
zRight
 ){

1281 
pTab
 = 
	`sqlôe3LoˇãTabÀ
(
pP¨£
, 0, 
zRight
, 
zDb
);

1282 
k
 = 0;

1284 
pTab
 = (
TabÀ
*)
	`sqlôeHashD©a
(
k
);

1285 
k
 = 
	`sqlôeHashNext
(k);

1287 if–
pTab
==0 ||ÖTab->
pFKey
==0 ) ;

1288 
	`sqlôe3TabÀLock
(
pP¨£
, 
iDb
, 
pTab
->
äum
, 0,ÖTab->
zName
);

1289 if–
pTab
->
nCﬁ
+
ªgRow
>
pP¨£
->
nMem
 )ÖParse->nMem =ÖTab->nCol +ÑegRow;

1290 
	`sqlôe3O≥nTabÀ
(
pP¨£
, 0, 
iDb
, 
pTab
, 
OP_O≥nRód
);

1291 
	`sqlôe3VdbeLﬂdSåög
(
v
, 
ªgResu…
, 
pTab
->
zName
);

1292 
i
=1, 
pFK
=
pTab
->
pFKey
;ÖFK; i++,ÖFKıFK->
pNextFrom
){

1293 
pP¨ít
 = 
	`sqlôe3FödTabÀ
(
db
, 
pFK
->
zTo
, 
zDb
);

1294 if–
pP¨ít
==0 ) ;

1295 
pIdx
 = 0;

1296 
	`sqlôe3TabÀLock
(
pP¨£
, 
iDb
, 
pP¨ít
->
äum
, 0,ÖP¨ít->
zName
);

1297 
x
 = 
	`sqlôe3FkLoˇãIndex
(
pP¨£
, 
pP¨ít
, 
pFK
, &
pIdx
, 0);

1298 if–
x
==0 ){

1299 if–
pIdx
==0 ){

1300 
	`sqlôe3O≥nTabÀ
(
pP¨£
, 
i
, 
iDb
, 
pP¨ít
, 
OP_O≥nRód
);

1302 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_O≥nRód
, 
i
, 
pIdx
->
äum
, 
iDb
);

1303 
	`sqlôe3VdbeSëP4KeyInfo
(
pP¨£
, 
pIdx
);

1306 
k
 = 0;

1310 
	`as£π
–
pP¨£
->
nEº
>0 || 
pFK
==0 );

1311 if–
pFK
 ) ;

1312 if–
pP¨£
->
nTab
<
i
 )ÖParse->nTab = i;

1313 
addrT›
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Rewöd
, 0); 
	`VdbeCovîage
(v);

1314 
i
=1, 
pFK
=
pTab
->
pFKey
;ÖFK; i++,ÖFKıFK->
pNextFrom
){

1315 
pP¨ít
 = 
	`sqlôe3FödTabÀ
(
db
, 
pFK
->
zTo
, 
zDb
);

1316 
pIdx
 = 0;

1317 
aiCﬁs
 = 0;

1318 if–
pP¨ít
 ){

1319 
x
 = 
	`sqlôe3FkLoˇãIndex
(
pP¨£
, 
pP¨ít
, 
pFK
, &
pIdx
, &
aiCﬁs
);

1320 
	`as£π
–
x
==0 );

1322 
addrOk
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

1323 if–
pP¨ít
 && 
pIdx
==0 ){

1324 
iKey
 = 
pFK
->
aCﬁ
[0].
iFrom
;

1325 
	`as£π
–
iKey
>=0 && iKey<
pTab
->
nCﬁ
 );

1326 if–
iKey
!=
pTab
->
iPKey
 ){

1327 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 0, 
iKey
, 
ªgRow
);

1328 
	`sqlôe3CﬁumnDeÁu…
(
v
, 
pTab
, 
iKey
, 
ªgRow
);

1329 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IsNuŒ
, 
ªgRow
, 
addrOk
); 
	`VdbeCovîage
(v);

1331 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rowid
, 0, 
ªgRow
);

1333 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_SìkRowid
, 
i
, 0, 
ªgRow
); 
	`VdbeCovîage
(v);

1334 
	`sqlôe3VdbeGŸo
(
v
, 
addrOk
);

1335 
	`sqlôe3VdbeJumpHîe
(
v
, 
	`sqlôe3VdbeCuºítAddr
(v)-2);

1337 
j
=0; j<
pFK
->
nCﬁ
; j++){

1338 
	`sqlôe3Ex¥CodeGëCﬁumnOfTabÀ
(
v
, 
pTab
, 0,

1339 
aiCﬁs
 ?áiCﬁs[
j
] : 
pFK
->
aCﬁ
[j].
iFrom
, 
ªgRow
+j);

1340 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IsNuŒ
, 
ªgRow
+
j
, 
addrOk
); 
	`VdbeCovîage
(v);

1342 if–
pP¨ít
 ){

1343 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_MakeRec‹d
, 
ªgRow
, 
pFK
->
nCﬁ
, 
ªgKey
,

1344 
	`sqlôe3IndexAfföôySå
(
db
,
pIdx
), 
pFK
->
nCﬁ
);

1345 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_Found
, 
i
, 
addrOk
, 
ªgKey
, 0);

1346 
	`VdbeCovîage
(
v
);

1349 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rowid
, 0, 
ªgResu…
+1);

1350 
	`sqlôe3VdbeMu…iLﬂd
(
v
, 
ªgResu…
+2, "si", 
pFK
->
zTo
, 
i
-1);

1351 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 
ªgResu…
, 4);

1352 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
addrOk
);

1353 
	`sqlôe3DbFªe
(
db
, 
aiCﬁs
);

1355 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Next
, 0, 
addrT›
+1); 
	`VdbeCovîage
(v);

1356 
	`sqlôe3VdbeJumpHîe
(
v
, 
addrT›
);

1363 #i‚de‡
NDEBUG


1364 
PøgTyp_PARSER_TRACE
: {

1365 if–
zRight
 ){

1366 if–
	`sqlôe3GëBoﬁón
(
zRight
, 0) ){

1367 
	`sqlôe3P¨£rTø˚
(
°dout
, "parser: ");

1369 
	`sqlôe3P¨£rTø˚
(0, 0);

1379 
PøgTyp_CASE_SENSITIVE_LIKE
: {

1380 if–
zRight
 ){

1381 
	`sqlôe3Regi°îLikeFun˘i⁄s
(
db
, 
	`sqlôe3GëBoﬁón
(
zRight
, 0));

1386 #i‚de‡
SQLITE_INTEGRITY_CHECK_ERROR_MAX


1387 
	#SQLITE_INTEGRITY_CHECK_ERROR_MAX
 100

	)

1390 #i‚de‡
SQLITE_OMIT_INTEGRITY_CHECK


1395 
PøgTyp_INTEGRITY_CHECK
: {

1396 
i
, 
j
, 
addr
, 
mxEº
;

1398 
isQuick
 = (
	`sqlôe3Tﬁowî
(
zLe·
[0])=='q');

1409 
	`as£π
–
iDb
>=0 );

1410 
	`as£π
–
iDb
==0 || 
pId2
->
z
 );

1411 if–
pId2
->
z
==0 ) 
iDb
 = -1;

1414 
pP¨£
->
nMem
 = 6;

1417 
mxEº
 = 
SQLITE_INTEGRITY_CHECK_ERROR_MAX
;

1418 if–
zRight
 ){

1419 
	`sqlôe3GëI¡32
(
zRight
, &
mxEº
);

1420 if–
mxEº
<=0 ){

1421 
mxEº
 = 
SQLITE_INTEGRITY_CHECK_ERROR_MAX
;

1424 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 
mxEº
, 1);

1427 
i
=0; i<
db
->
nDb
; i++){

1428 
HashEÀm
 *
x
;

1429 
Hash
 *
pTbls
;

1430 *
aRoŸ
;

1431 
˙t
 = 0;

1432 
mxIdx
 = 0;

1433 
nIdx
;

1435 if–
OMIT_TEMPDB
 && 
i
==1 ) ;

1436 if–
iDb
>=0 && 
i
!=iDb ) ;

1438 
	`sqlôe3CodeVîifySchema
(
pP¨£
, 
i
);

1439 
addr
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_IfPos
, 1);

1440 
	`VdbeCovîage
(
v
);

1441 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_HÆt
, 0, 0);

1442 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr
);

1449 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
i
, 0) );

1450 
pTbls
 = &
db
->
aDb
[
i
].
pSchema
->
tblHash
;

1451 
˙t
=0, 
x
=
	`sqlôeHashFú°
(
pTbls
); x; x=
	`sqlôeHashNext
(x)){

1452 
TabÀ
 *
pTab
 = 
	`sqlôeHashD©a
(
x
);

1453 
Index
 *
pIdx
;

1454 if–
	`HasRowid
(
pTab
ËË
˙t
++;

1455 
nIdx
=0, 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
,ÇIdx++){ 
˙t
++; }

1456 if–
nIdx
>
mxIdx
 ) mxIdx =ÇIdx;

1458 
aRoŸ
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, ()*(
˙t
+1));

1459 if–
aRoŸ
==0 ) ;

1460 
˙t
=0, 
x
=
	`sqlôeHashFú°
(
pTbls
); x; x=
	`sqlôeHashNext
(x)){

1461 
TabÀ
 *
pTab
 = 
	`sqlôeHashD©a
(
x
);

1462 
Index
 *
pIdx
;

1463 if–
	`HasRowid
(
pTab
ËË
aRoŸ
[
˙t
++] =ÖTab->
äum
;

1464 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
){

1465 
aRoŸ
[
˙t
++] = 
pIdx
->
äum
;

1468 
aRoŸ
[
˙t
] = 0;

1471 
pP¨£
->
nMem
 = 
	`MAX
–pP¨£->nMem, 8+
mxIdx
 );

1474 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_I¡egrôyCk
, 2, 
˙t
, 1, (*)
aRoŸ
,
P4_INTARRAY
);

1475 
	`sqlôe3VdbeCh™geP5
(
v
, (
u8
)
i
);

1476 
addr
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_IsNuŒ
, 2); 
	`VdbeCovîage
(v);

1477 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Såög8
, 0, 3, 0,

1478 
	`sqlôe3MPrötf
(
db
, "*** i¿d©aba£ %†***\n", db->
aDb
[
i
].
zDbSName
),

1479 
P4_DYNAMIC
);

1480 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Move
, 2, 4, 1);

1481 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_C⁄ˇt
, 4, 3, 2);

1482 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 2, 1);

1483 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr
);

1487 
x
=
	`sqlôeHashFú°
(
pTbls
); x && !
isQuick
; x=
	`sqlôeHashNext
(x)){

1488 
TabÀ
 *
pTab
 = 
	`sqlôeHashD©a
(
x
);

1489 
Index
 *
pIdx
, *
pPk
;

1490 
Index
 *
pPri‹
 = 0;

1491 
lo›T›
;

1492 
iD©aCur
, 
iIdxCur
;

1493 
r1
 = -1;

1495 if–
pTab
->
pIndex
==0 ) ;

1496 
pPk
 = 
	`HasRowid
(
pTab
Ë? 0 : 
	`sqlôe3Prim¨yKeyIndex
(pTab);

1497 
addr
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_IfPos
, 1);

1498 
	`VdbeCovîage
(
v
);

1499 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_HÆt
, 0, 0);

1500 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr
);

1501 
	`sqlôe3Ex¥CacheCÀ¨
(
pP¨£
);

1502 
	`sqlôe3O≥nTabÀAndIndi˚s
(
pP¨£
, 
pTab
, 
OP_O≥nRód
, 0,

1503 1, 0, &
iD©aCur
, &
iIdxCur
);

1504 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 0, 7);

1505 
j
=0, 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
, j++){

1506 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 0, 8+
j
);

1508 
	`as£π
–
pP¨£
->
nMem
>=8+
j
 );

1509 
	`as£π
–
	`sqlôe3NoTempsInR™ge
(
pP¨£
,1,7+
j
) );

1510 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rewöd
, 
iD©aCur
, 0); 
	`VdbeCovîage
(v);

1511 
lo›T›
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_AddImm
, 7, 1);

1513 
j
=0; j<
pTab
->
nCﬁ
; j++){

1514 *
zEº
;

1515 
jmp2
, 
jmp3
;

1516 if–
j
==
pTab
->
iPKey
 ) ;

1517 if–
pTab
->
aCﬁ
[
j
].
nŸNuŒ
==0 ) ;

1518 
	`sqlôe3Ex¥CodeGëCﬁumnOfTabÀ
(
v
, 
pTab
, 
iD©aCur
, 
j
, 3);

1519 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_TYPEOFARG
);

1520 
jmp2
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_NŸNuŒ
, 3); 
	`VdbeCovîage
(v);

1521 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_AddImm
, 1, -1);

1522 
zEº
 = 
	`sqlôe3MPrötf
(
db
, "NULL vÆuêö %s.%s", 
pTab
->
zName
,

1523 
pTab
->
aCﬁ
[
j
].
zName
);

1524 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Såög8
, 0, 3, 0, 
zEº
, 
P4_DYNAMIC
);

1525 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 3, 1);

1526 
jmp3
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_IfPos
, 1); 
	`VdbeCovîage
(v);

1527 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_HÆt
);

1528 
	`sqlôe3VdbeJumpHîe
(
v
, 
jmp2
);

1529 
	`sqlôe3VdbeJumpHîe
(
v
, 
jmp3
);

1532 
j
=0, 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
, j++){

1533 
jmp2
, 
jmp3
, 
jmp4
, 
jmp5
;

1534 
ckUniq
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

1535 if–
pPk
==
pIdx
 ) ;

1536 
r1
 = 
	`sqlôe3Gíî©eIndexKey
(
pP¨£
, 
pIdx
, 
iD©aCur
, 0, 0, &
jmp3
,

1537 
pPri‹
, 
r1
);

1538 
pPri‹
 = 
pIdx
;

1539 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_AddImm
, 8+
j
, 1);

1541 
jmp2
 = 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_Found
, 
iIdxCur
+
j
, 
ckUniq
, 
r1
,

1542 
pIdx
->
nCﬁumn
); 
	`VdbeCovîage
(
v
);

1543 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_AddImm
, 1, -1);

1544 
	`sqlôe3VdbeLﬂdSåög
(
v
, 3, "row ");

1545 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_C⁄ˇt
, 7, 3, 3);

1546 
	`sqlôe3VdbeLﬂdSåög
(
v
, 4, " missing from index ");

1547 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_C⁄ˇt
, 4, 3, 3);

1548 
jmp5
 = 
	`sqlôe3VdbeLﬂdSåög
(
v
, 4, 
pIdx
->
zName
);

1549 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_C⁄ˇt
, 4, 3, 3);

1550 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 3, 1);

1551 
jmp4
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_IfPos
, 1); 
	`VdbeCovîage
(v);

1552 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_HÆt
);

1553 
	`sqlôe3VdbeJumpHîe
(
v
, 
jmp2
);

1557 if–
	`IsUniqueIndex
(
pIdx
) ){

1558 
uniqOk
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

1559 
jmp6
;

1560 
kk
;

1561 
kk
=0; kk<
pIdx
->
nKeyCﬁ
; kk++){

1562 
iCﬁ
 = 
pIdx
->
aiCﬁumn
[
kk
];

1563 
	`as£π
–
iCﬁ
!=
XN_ROWID
 && iCﬁ<
pTab
->
nCﬁ
 );

1564 if–
iCﬁ
>=0 && 
pTab
->
aCﬁ
[iCﬁ].
nŸNuŒ
 ) ;

1565 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IsNuŒ
, 
r1
+
kk
, 
uniqOk
);

1566 
	`VdbeCovîage
(
v
);

1568 
jmp6
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Next
, 
iIdxCur
+
j
); 
	`VdbeCovîage
(v);

1569 
	`sqlôe3VdbeGŸo
(
v
, 
uniqOk
);

1570 
	`sqlôe3VdbeJumpHîe
(
v
, 
jmp6
);

1571 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_IdxGT
, 
iIdxCur
+
j
, 
uniqOk
, 
r1
,

1572 
pIdx
->
nKeyCﬁ
); 
	`VdbeCovîage
(
v
);

1573 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_AddImm
, 1, -1);

1574 
	`sqlôe3VdbeLﬂdSåög
(
v
, 3, "non-uniqueÉntry in index ");

1575 
	`sqlôe3VdbeGŸo
(
v
, 
jmp5
);

1576 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
uniqOk
);

1578 
	`sqlôe3VdbeJumpHîe
(
v
, 
jmp4
);

1579 
	`sqlôe3ResﬁveP¨tIdxLabñ
(
pP¨£
, 
jmp3
);

1581 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Next
, 
iD©aCur
, 
lo›T›
); 
	`VdbeCovîage
(v);

1582 
	`sqlôe3VdbeJumpHîe
(
v
, 
lo›T›
-1);

1583 #i‚de‡
SQLITE_OMIT_BTREECOUNT


1584 
	`sqlôe3VdbeLﬂdSåög
(
v
, 2, "wrong # ofÉntries in index ");

1585 
j
=0, 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
, j++){

1586 if–
pPk
==
pIdx
 ) ;

1587 
addr
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

1588 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IfPos
, 1, 
addr
+2); 
	`VdbeCovîage
(v);

1589 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_HÆt
, 0, 0);

1590 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Cou¡
, 
iIdxCur
+
j
, 3);

1591 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Eq
, 8+
j
, 
addr
+8, 3); 
	`VdbeCovîage
(v);

1592 
	`sqlôe3VdbeCh™geP5
(
v
, 
SQLITE_NOTNULL
);

1593 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_AddImm
, 1, -1);

1594 
	`sqlôe3VdbeLﬂdSåög
(
v
, 3, 
pIdx
->
zName
);

1595 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_C⁄ˇt
, 3, 2, 7);

1596 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 7, 1);

1602 c⁄° 
iLn
 = 
	`VDBE_OFFSET_LINENO
(2);

1603 c⁄° 
VdbeOpLi°
 
ídCode
[] = {

1604 { 
OP_AddImm
, 1, 0, 0},

1605 { 
OP_If
, 1, 4, 0},

1606 { 
OP_Såög8
, 0, 3, 0},

1607 { 
OP_Resu…Row
, 3, 1, 0},

1609 
VdbeOp
 *
aOp
;

1611 
aOp
 = 
	`sqlôe3VdbeAddOpLi°
(
v
, 
	`AºaySize
(
ídCode
),ÉndCode, 
iLn
);

1612 if–
aOp
 ){

1613 
aOp
[0].
p2
 = -
mxEº
;

1614 
aOp
[2].
p4ty≥
 = 
P4_STATIC
;

1615 
aOp
[2].
p4
.
z
 = "ok";

1622 #i‚de‡
SQLITE_OMIT_UTF16


1645 
PøgTyp_ENCODING
: {

1646 c⁄° 
	sEncName
 {

1647 *
zName
;

1648 
u8
 
íc
;

1649 } 
í˙ames
[] = {

1650 { "UTF8", 
SQLITE_UTF8
 },

1651 { "UTF-8", 
SQLITE_UTF8
 },

1652 { "UTF-16À", 
SQLITE_UTF16LE
 },

1653 { "UTF-16be", 
SQLITE_UTF16BE
 },

1654 { "UTF16À", 
SQLITE_UTF16LE
 },

1655 { "UTF16be", 
SQLITE_UTF16BE
 },

1660 c⁄° 
EncName
 *
pEnc
;

1661 if–!
zRight
 ){

1662 if–
	`sqlôe3RódSchema
(
pP¨£
ËË
¥agma_out
;

1663 
	`as£π
–
í˙ames
[
SQLITE_UTF8
].
íc
==SQLITE_UTF8 );

1664 
	`as£π
–
í˙ames
[
SQLITE_UTF16LE
].
íc
==SQLITE_UTF16LE );

1665 
	`as£π
–
í˙ames
[
SQLITE_UTF16BE
].
íc
==SQLITE_UTF16BE );

1666 
	`ªtu∫SögÀText
(
v
, 
í˙ames
[
	`ENC
(
pP¨£
->
db
)].
zName
);

1674 !(
	`DbHasPr›îty
(
db
, 0, 
DB_SchemaLﬂded
)) ||

1675 
	`DbHasPr›îty
(
db
, 0, 
DB_Em±y
)

1677 
pEnc
=&
í˙ames
[0];ÖEnc->
zName
;ÖEnc++){

1678 if–0==
	`sqlôe3SåICmp
(
zRight
, 
pEnc
->
zName
) ){

1679 
	`SCHEMA_ENC
(
db
Ë
	`ENC
(db) =

1680 
pEnc
->
íc
 ?ÖEnc->í¯: 
SQLITE_UTF16NATIVE
;

1684 if–!
pEnc
->
zName
 ){

1685 
	`sqlôe3Eº‹Msg
(
pP¨£
, "unsuµ‹ãdÉncodög: %s", 
zRight
);

1693 #i‚de‡
SQLITE_OMIT_SCHEMA_VERSION_PRAGMAS


1726 
PøgTyp_HEADER_VALUE
: {

1727 
iCookõ
 = 
pPøgma
->
iArg
;

1728 
	`sqlôe3VdbeU£sBåì
(
v
, 
iDb
);

1729 if–
zRight
 && (
pPøgma
->
mPøgFlg
 & 
PøgFlg_RódO∆y
)==0 ){

1731 c⁄° 
VdbeOpLi°
 
£tCookõ
[] = {

1732 { 
OP_Tønß˘i⁄
, 0, 1, 0},

1733 { 
OP_SëCookõ
, 0, 0, 0},

1735 
VdbeOp
 *
aOp
;

1736 
	`sqlôe3VdbeVîifyNoMÆlocRequúed
(
v
, 
	`AºaySize
(
£tCookõ
));

1737 
aOp
 = 
	`sqlôe3VdbeAddOpLi°
(
v
, 
	`AºaySize
(
£tCookõ
), setCookie, 0);

1738 if–
	`ONLY_IF_REALLOC_STRESS
(
aOp
==0) ) ;

1739 
aOp
[0].
p1
 = 
iDb
;

1740 
aOp
[1].
p1
 = 
iDb
;

1741 
aOp
[1].
p2
 = 
iCookõ
;

1742 
aOp
[1].
p3
 = 
	`sqlôe3Atoi
(
zRight
);

1745 c⁄° 
VdbeOpLi°
 
ªadCookõ
[] = {

1746 { 
OP_Tønß˘i⁄
, 0, 0, 0},

1747 { 
OP_RódCookõ
, 0, 1, 0},

1748 { 
OP_Resu…Row
, 1, 1, 0}

1750 
VdbeOp
 *
aOp
;

1751 
	`sqlôe3VdbeVîifyNoMÆlocRequúed
(
v
, 
	`AºaySize
(
ªadCookõ
));

1752 
aOp
 = 
	`sqlôe3VdbeAddOpLi°
(
v
, 
	`AºaySize
(
ªadCookõ
),readCookie,0);

1753 if–
	`ONLY_IF_REALLOC_STRESS
(
aOp
==0) ) ;

1754 
aOp
[0].
p1
 = 
iDb
;

1755 
aOp
[1].
p1
 = 
iDb
;

1756 
aOp
[1].
p3
 = 
iCookõ
;

1757 
	`sqlôe3VdbeReußbÀ
(
v
);

1763 #i‚de‡
SQLITE_OMIT_COMPILEOPTION_DIAGS


1770 
PøgTyp_COMPILE_OPTIONS
: {

1771 
i
 = 0;

1772 c⁄° *
zO±
;

1773 
pP¨£
->
nMem
 = 1;

1774  (
zO±
 = 
	`sqlôe3_compûe›ti⁄_gë
(
i
++))!=0 ){

1775 
	`sqlôe3VdbeLﬂdSåög
(
v
, 1, 
zO±
);

1776 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 1, 1);

1778 
	`sqlôe3VdbeReußbÀ
(
v
);

1783 #i‚de‡
SQLITE_OMIT_WAL


1789 
PøgTyp_WAL_CHECKPOINT
: {

1790 
iBt
 = (
pId2
->
z
?
iDb
:
SQLITE_MAX_ATTACHED
);

1791 
eMode
 = 
SQLITE_CHECKPOINT_PASSIVE
;

1792 if–
zRight
 ){

1793 if–
	`sqlôe3SåICmp
(
zRight
, "full")==0 ){

1794 
eMode
 = 
SQLITE_CHECKPOINT_FULL
;

1795 }if–
	`sqlôe3SåICmp
(
zRight
, "restart")==0 ){

1796 
eMode
 = 
SQLITE_CHECKPOINT_RESTART
;

1797 }if–
	`sqlôe3SåICmp
(
zRight
, "truncate")==0 ){

1798 
eMode
 = 
SQLITE_CHECKPOINT_TRUNCATE
;

1801 
pP¨£
->
nMem
 = 3;

1802 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Checkpoöt
, 
iBt
, 
eMode
, 1);

1803 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 1, 3);

1815 
PøgTyp_WAL_AUTOCHECKPOINT
: {

1816 if–
zRight
 ){

1817 
	`sqlôe3_wÆ_autocheckpoöt
(
db
, 
	`sqlôe3Atoi
(
zRight
));

1819 
	`ªtu∫SögÀI¡
(
v
,

1820 
db
->
xWÆCÆlback
==
sqlôe3WÆDeÁu…Hook
 ?

1821 
	`SQLITE_PTR_TO_INT
(
db
->
pWÆArg
) : 0);

1833 
PøgTyp_SHRINK_MEMORY
: {

1834 
	`sqlôe3_db_ªÀa£_mem‹y
(
db
);

1848 
	`as£π
–
pPøgma
->
ePøgTyp
==
PøgTyp_BUSY_TIMEOUT
 );

1849 if–
zRight
 ){

1850 
	`sqlôe3_busy_timeout
(
db
, 
	`sqlôe3Atoi
(
zRight
));

1852 
	`ªtu∫SögÀI¡
(
v
, 
db
->
busyTimeout
);

1867 
PøgTyp_SOFT_HEAP_LIMIT
: {

1868 
sqlôe3_öt64
 
N
;

1869 if–
zRight
 && 
	`sqlôe3DecOrHexToI64
(zRight, &
N
)==
SQLITE_OK
 ){

1870 
	`sqlôe3_so·_hóp_limô64
(
N
);

1872 
	`ªtu∫SögÀI¡
(
v
, 
	`sqlôe3_so·_hóp_limô64
(-1));

1883 
PøgTyp_THREADS
: {

1884 
sqlôe3_öt64
 
N
;

1885 if–
zRight


1886 && 
	`sqlôe3DecOrHexToI64
(
zRight
, &
N
)==
SQLITE_OK


1887 && 
N
>=0

1889 
	`sqlôe3_limô
(
db
, 
SQLITE_LIMIT_WORKER_THREADS
, ()(
N
&0x7fffffff));

1891 
	`ªtu∫SögÀI¡
(
v
, 
	`sqlôe3_limô
(
db
, 
SQLITE_LIMIT_WORKER_THREADS
, -1));

1895 #i‡
	`deföed
(
SQLITE_DEBUG
Ë|| deföed(
SQLITE_TEST
)

1899 
PøgTyp_LOCK_STATUS
: {

1900 c⁄° *c⁄° 
azLockName
[] = {

1903 
i
;

1904 
pP¨£
->
nMem
 = 2;

1905 
i
=0; i<
db
->
nDb
; i++){

1906 
Båì
 *
pBt
;

1907 c⁄° *
zSèã
 = "unknown";

1908 
j
;

1909 if–
db
->
aDb
[
i
].
zDbSName
==0 ) ;

1910 
pBt
 = 
db
->
aDb
[
i
].pBt;

1911 if–
pBt
==0 || 
	`sqlôe3BåìPagî
(pBt)==0 ){

1912 
zSèã
 = "closed";

1913 }if–
	`sqlôe3_fûe_c⁄åﬁ
(
db
, 
i
 ? db->
aDb
[i].
zDbSName
 : 0,

1914 
SQLITE_FCNTL_LOCKSTATE
, &
j
)==
SQLITE_OK
 ){

1915 
zSèã
 = 
azLockName
[
j
];

1917 
	`sqlôe3VdbeMu…iLﬂd
(
v
, 1, "ss", 
db
->
aDb
[
i
].
zDbSName
, 
zSèã
);

1918 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 1, 2);

1924 #ifde‡
SQLITE_HAS_CODEC


1925 
PøgTyp_KEY
: {

1926 if–
zRight
 ) 
	`sqlôe3_key_v2
(
db
, 
zDb
, zRight, 
	`sqlôe3SåÀn30
(zRight));

1929 
PøgTyp_REKEY
: {

1930 if–
zRight
 ) 
	`sqlôe3_ªkey_v2
(
db
, 
zDb
, zRight, 
	`sqlôe3SåÀn30
(zRight));

1933 
PøgTyp_HEXKEY
: {

1934 if–
zRight
 ){

1935 
u8
 
iByã
;

1936 
i
;

1937 
zKey
[40];

1938 
i
=0, 
iByã
=0; i<(
zKey
)*2 && 
	`sqlôe3Isxdigô
(
zRight
[i]); i++){

1939 
iByã
 = (iByã<<4Ë+ 
	`sqlôe3HexToI¡
(
zRight
[
i
]);

1940 if–(
i
&1)!=0 ) 
zKey
[i/2] = 
iByã
;

1942 if–(
zLe·
[3] & 0xf)==0xb ){

1943 
	`sqlôe3_key_v2
(
db
, 
zDb
, 
zKey
, 
i
/2);

1945 
	`sqlôe3_ªkey_v2
(
db
, 
zDb
, 
zKey
, 
i
/2);

1951 #i‡
	`deföed
(
SQLITE_HAS_CODEC
Ë|| deföed(
SQLITE_ENABLE_CEROD
)

1952 
PøgTyp_ACTIVATE_EXTENSIONS
: if–
zRight
 ){

1953 #ifde‡
SQLITE_HAS_CODEC


1954 if–
	`sqlôe3SåNICmp
(
zRight
, "see-", 4)==0 ){

1955 
	`sqlôe3_a˘iv©e_£e
(&
zRight
[4]);

1958 #ifde‡
SQLITE_ENABLE_CEROD


1959 if–
	`sqlôe3SåNICmp
(
zRight
, "cerod-", 6)==0 ){

1960 
	`sqlôe3_a˘iv©e_˚rod
(&
zRight
[6]);

1971 
¥agma_out
:

1972 
	`sqlôe3DbFªe
(
db
, 
zLe·
);

1973 
	`sqlôe3DbFªe
(
db
, 
zRight
);

1974 
	}
}

1975 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


1980 
PøgmaVèb
 
	tPøgmaVèb
;

1981 
PøgmaVèbCurs‹
 
	tPøgmaVèbCurs‹
;

1982 
	sPøgmaVèb
 {

1983 
sqlôe3_vèb
 
	mba£
;

1984 
sqlôe3
 *
	mdb
;

1985 c⁄° 
PøgmaName
 *
	mpName
;

1986 
u8
 
	mnHiddí
;

1987 
u8
 
	miHiddí
;

1989 
	sPøgmaVèbCurs‹
 {

1990 
sqlôe3_vèb_curs‹
 
	mba£
;

1991 
sqlôe3_°mt
 *
	mpPøgma
;

1992 
sqlôe_öt64
 
	miRowid
;

1993 *
	mazArg
[2];

1999 
	$¥agmaVèbC⁄√˘
(

2000 
sqlôe3
 *
db
,

2001 *
pAux
,

2002 
¨gc
, c⁄° *c⁄°*
¨gv
,

2003 
sqlôe3_vèb
 **
µVèb
,

2004 **
pzEº


2006 c⁄° 
PøgmaName
 *
pPøgma
 = (c⁄° PøgmaName*)
pAux
;

2007 
PøgmaVèb
 *
pTab
 = 0;

2008 
rc
;

2009 
i
, 
j
;

2010 
cSï
 = '(';

2011 
SåAccum
 
acc
;

2012 
zBuf
[200];

2014 
	`UNUSED_PARAMETER
(
¨gc
);

2015 
	`UNUSED_PARAMETER
(
¨gv
);

2016 
	`sqlôe3SåAccumInô
(&
acc
, 0, 
zBuf
, (zBuf), 0);

2017 
	`sqlôe3SåAccumAµídAŒ
(&
acc
, "CREATE TABLE x");

2018 
i
=0, 
j
=
pPøgma
->
iPøgCName
; i<pPøgma->
nPøgCName
; i++, j++){

2019 
	`sqlôe3XPrötf
(&
acc
, "%c\"%s\"", 
cSï
, 
¥agCName
[
j
]);

2020 
cSï
 = ',';

2022 if–
i
==0 ){

2023 
	`sqlôe3XPrötf
(&
acc
, "(\"%s\"", 
pPøgma
->
zName
);

2024 
cSï
 = ',';

2025 
i
++;

2027 
j
 = 0;

2028 if–
pPøgma
->
mPøgFlg
 & 
PøgFlg_Resu…1
 ){

2029 
	`sqlôe3SåAccumAµídAŒ
(&
acc
, ",arg HIDDEN");

2030 
j
++;

2032 if–
pPøgma
->
mPøgFlg
 & (
PøgFlg_SchemaO±
|
PøgFlg_SchemaReq
) ){

2033 
	`sqlôe3SåAccumAµídAŒ
(&
acc
, ",schema HIDDEN");

2034 
j
++;

2036 
	`sqlôe3SåAccumAµíd
(&
acc
, ")", 1);

2037 
	`sqlôe3SåAccumFöish
(&
acc
);

2038 
	`as£π
–
	`°æí
(
zBuf
) < (zBuf)-1 );

2039 
rc
 = 
	`sqlôe3_de˛¨e_vèb
(
db
, 
zBuf
);

2040 if–
rc
==
SQLITE_OK
 ){

2041 
pTab
 = (
PøgmaVèb
*)
	`sqlôe3_mÆloc
((PragmaVtab));

2042 if–
pTab
==0 ){

2043 
rc
 = 
SQLITE_NOMEM
;

2045 
	`mem£t
(
pTab
, 0, (
PøgmaVèb
));

2046 
pTab
->
pName
 = 
pPøgma
;

2047 
pTab
->
db
 = db;

2048 
pTab
->
iHiddí
 = 
i
;

2049 
pTab
->
nHiddí
 = 
j
;

2052 *
pzEº
 = 
	`sqlôe3_m¥ötf
("%s", 
	`sqlôe3_îrmsg
(
db
));

2055 *
µVèb
 = (
sqlôe3_vèb
*)
pTab
;

2056  
rc
;

2057 
	}
}

2062 
	$¥agmaVèbDisc⁄√˘
(
sqlôe3_vèb
 *
pVèb
){

2063 
PøgmaVèb
 *
pTab
 = (PøgmaVèb*)
pVèb
;

2064 
	`sqlôe3_‰ì
(
pTab
);

2065  
SQLITE_OK
;

2066 
	}
}

2075 
	$¥agmaVèbBe°Index
(
sqlôe3_vèb
 *
èb
, 
sqlôe3_ödex_öfo
 *
pIdxInfo
){

2076 
PøgmaVèb
 *
pTab
 = (PøgmaVèb*)
èb
;

2077 c⁄° 
sqlôe3_ödex_c⁄°øöt
 *
pC⁄°øöt
;

2078 
i
, 
j
;

2079 
£í
[2];

2081 
pIdxInfo
->
e°im©edCo°
 = ()1;

2082 if–
pTab
->
nHiddí
==0 ){  
SQLITE_OK
; }

2083 
pC⁄°øöt
 = 
pIdxInfo
->
aC⁄°øöt
;

2084 
£í
[0] = 0;

2085 
£í
[1] = 0;

2086 
i
=0; i<
pIdxInfo
->
nC⁄°øöt
; i++, 
pC⁄°øöt
++){

2087 if–
pC⁄°øöt
->
ußbÀ
==0 ) ;

2088 if–
pC⁄°øöt
->
›
!=
SQLITE_INDEX_CONSTRAINT_EQ
 ) ;

2089 if–
pC⁄°øöt
->
iCﬁumn
 < 
pTab
->
iHiddí
 ) ;

2090 
j
 = 
pC⁄°øöt
->
iCﬁumn
 - 
pTab
->
iHiddí
;

2091 
	`as£π
–
j
 < 2 );

2092 
£í
[
j
] = 
i
+1;

2094 if–
£í
[0]==0 ){

2095 
pIdxInfo
->
e°im©edCo°
 = ()2147483647;

2096 
pIdxInfo
->
e°im©edRows
 = 2147483647;

2097  
SQLITE_OK
;

2099 
j
 = 
£í
[0]-1;

2100 
pIdxInfo
->
aC⁄°øötUßge
[
j
].
¨gvIndex
 = 1;

2101 
pIdxInfo
->
aC⁄°øötUßge
[
j
].
omô
 = 1;

2102 if–
£í
[1]==0 )  
SQLITE_OK
;

2103 
pIdxInfo
->
e°im©edCo°
 = ()20;

2104 
pIdxInfo
->
e°im©edRows
 = 20;

2105 
j
 = 
£í
[1]-1;

2106 
pIdxInfo
->
aC⁄°øötUßge
[
j
].
¨gvIndex
 = 2;

2107 
pIdxInfo
->
aC⁄°øötUßge
[
j
].
omô
 = 1;

2108  
SQLITE_OK
;

2109 
	}
}

2112 
	$¥agmaVèbO≥n
(
sqlôe3_vèb
 *
pVèb
, 
sqlôe3_vèb_curs‹
 **
µCurs‹
){

2113 
PøgmaVèbCurs‹
 *
pC§
;

2114 
pC§
 = (
PøgmaVèbCurs‹
*)
	`sqlôe3_mÆloc
((*pCsr));

2115 if–
pC§
==0 )  
SQLITE_NOMEM
;

2116 
	`mem£t
(
pC§
, 0, (
PøgmaVèbCurs‹
));

2117 
pC§
->
ba£
.
pVèb
 =ÖVtab;

2118 *
µCurs‹
 = &
pC§
->
ba£
;

2119  
SQLITE_OK
;

2120 
	}
}

2123 
	$¥agmaVèbCurs‹CÀ¨
(
PøgmaVèbCurs‹
 *
pC§
){

2124 
i
;

2125 
	`sqlôe3_föÆize
(
pC§
->
pPøgma
);

2126 
pC§
->
pPøgma
 = 0;

2127 
i
=0; i<
	`AºaySize
(
pC§
->
azArg
); i++){

2128 
	`sqlôe3_‰ì
(
pC§
->
azArg
[
i
]);

2129 
pC§
->
azArg
[
i
] = 0;

2131 
	}
}

2134 
	$¥agmaVèbClo£
(
sqlôe3_vèb_curs‹
 *
cur
){

2135 
PøgmaVèbCurs‹
 *
pC§
 = (PøgmaVèbCurs‹*)
cur
;

2136 
	`¥agmaVèbCurs‹CÀ¨
(
pC§
);

2137 
	`sqlôe3_‰ì
(
pC§
);

2138  
SQLITE_OK
;

2139 
	}
}

2142 
	$¥agmaVèbNext
(
sqlôe3_vèb_curs‹
 *
pVèbCurs‹
){

2143 
PøgmaVèbCurs‹
 *
pC§
 = (PøgmaVèbCurs‹*)
pVèbCurs‹
;

2144 
rc
 = 
SQLITE_OK
;

2147 
pC§
->
iRowid
++;

2148 
	`as£π
–
pC§
->
pPøgma
 );

2149 if–
SQLITE_ROW
!=
	`sqlôe3_°ï
(
pC§
->
pPøgma
) ){

2150 
rc
 = 
	`sqlôe3_föÆize
(
pC§
->
pPøgma
);

2151 
pC§
->
pPøgma
 = 0;

2152 
	`¥agmaVèbCurs‹CÀ¨
(
pC§
);

2154  
rc
;

2155 
	}
}

2160 
	$¥agmaVèbFûãr
(

2161 
sqlôe3_vèb_curs‹
 *
pVèbCurs‹
,

2162 
idxNum
, c⁄° *
idxSå
,

2163 
¨gc
, 
sqlôe3_vÆue
 **
¨gv


2165 
PøgmaVèbCurs‹
 *
pC§
 = (PøgmaVèbCurs‹*)
pVèbCurs‹
;

2166 
PøgmaVèb
 *
pTab
 = (PøgmaVèb*)(
pVèbCurs‹
->
pVèb
);

2167 
rc
;

2168 
i
, 
j
;

2169 
SåAccum
 
acc
;

2170 *
zSql
;

2172 
	`UNUSED_PARAMETER
(
idxNum
);

2173 
	`UNUSED_PARAMETER
(
idxSå
);

2174 
	`¥agmaVèbCurs‹CÀ¨
(
pC§
);

2175 
j
 = (
pTab
->
pName
->
mPøgFlg
 & 
PøgFlg_Resu…1
)!=0 ? 0 : 1;

2176 
i
=0; i<
¨gc
; i++, 
j
++){

2177 
	`as£π
–
j
<
	`AºaySize
(
pC§
->
azArg
) );

2178 
pC§
->
azArg
[
j
] = 
	`sqlôe3_m¥ötf
("%s", 
	`sqlôe3_vÆue_ãxt
(
¨gv
[
i
]));

2179 if–
pC§
->
azArg
[
j
]==0 ){

2180  
SQLITE_NOMEM
;

2183 
	`sqlôe3SåAccumInô
(&
acc
, 0, 0, 0, 
pTab
->
db
->
aLimô
[
SQLITE_LIMIT_SQL_LENGTH
]);

2184 
	`sqlôe3SåAccumAµídAŒ
(&
acc
, "PRAGMA ");

2185 if–
pC§
->
azArg
[1] ){

2186 
	`sqlôe3XPrötf
(&
acc
, "%Q.", 
pC§
->
azArg
[1]);

2188 
	`sqlôe3SåAccumAµídAŒ
(&
acc
, 
pTab
->
pName
->
zName
);

2189 if–
pC§
->
azArg
[0] ){

2190 
	`sqlôe3XPrötf
(&
acc
, "=%Q", 
pC§
->
azArg
[0]);

2192 
zSql
 = 
	`sqlôe3SåAccumFöish
(&
acc
);

2193 if–
zSql
==0 )  
SQLITE_NOMEM
;

2194 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
pTab
->
db
, 
zSql
, -1, &
pC§
->
pPøgma
, 0);

2195 
	`sqlôe3_‰ì
(
zSql
);

2196 if–
rc
!=
SQLITE_OK
 ){

2197 
pTab
->
ba£
.
zEºMsg
 = 
	`sqlôe3_m¥ötf
("%s", 
	`sqlôe3_îrmsg
’Tab->
db
));

2198  
rc
;

2200  
	`¥agmaVèbNext
(
pVèbCurs‹
);

2201 
	}
}

2206 
	$¥agmaVèbEof
(
sqlôe3_vèb_curs‹
 *
pVèbCurs‹
){

2207 
PøgmaVèbCurs‹
 *
pC§
 = (PøgmaVèbCurs‹*)
pVèbCurs‹
;

2208  (
pC§
->
pPøgma
==0);

2209 
	}
}

2214 
	$¥agmaVèbCﬁumn
(

2215 
sqlôe3_vèb_curs‹
 *
pVèbCurs‹
,

2216 
sqlôe3_c⁄ãxt
 *
˘x
,

2217 
i


2219 
PøgmaVèbCurs‹
 *
pC§
 = (PøgmaVèbCurs‹*)
pVèbCurs‹
;

2220 
PøgmaVèb
 *
pTab
 = (PøgmaVèb*)(
pVèbCurs‹
->
pVèb
);

2221 if–
i
<
pTab
->
iHiddí
 ){

2222 
	`sqlôe3_ªsu…_vÆue
(
˘x
, 
	`sqlôe3_cﬁumn_vÆue
(
pC§
->
pPøgma
, 
i
));

2224 
	`sqlôe3_ªsu…_ãxt
(
˘x
, 
pC§
->
azArg
[
i
-
pTab
->
iHiddí
],-1,
SQLITE_TRANSIENT
);

2226  
SQLITE_OK
;

2227 
	}
}

2232 
	$¥agmaVèbRowid
(
sqlôe3_vèb_curs‹
 *
pVèbCurs‹
, 
sqlôe_öt64
 *
p
){

2233 
PøgmaVèbCurs‹
 *
pC§
 = (PøgmaVèbCurs‹*)
pVèbCurs‹
;

2234 *
p
 = 
pC§
->
iRowid
;

2235  
SQLITE_OK
;

2236 
	}
}

2239 c⁄° 
sqlôe3_moduÀ
 
	g¥agmaVèbModuÀ
 = {

2242 
¥agmaVèbC⁄√˘
,

2243 
¥agmaVèbBe°Index
,

2244 
¥agmaVèbDisc⁄√˘
,

2246 
¥agmaVèbO≥n
,

2247 
¥agmaVèbClo£
,

2248 
¥agmaVèbFûãr
,

2249 
¥agmaVèbNext
,

2250 
¥agmaVèbEof
,

2251 
¥agmaVèbCﬁumn
,

2252 
¥agmaVèbRowid
,

2270 
ModuÀ
 *
	$sqlôe3PøgmaVèbRegi°î
(
sqlôe3
 *
db
, c⁄° *
zName
){

2271 c⁄° 
PøgmaName
 *
pName
;

2272 
	`as£π
–
	`sqlôe3_°∫icmp
(
zName
, "pragma_", 7)==0 );

2273 
pName
 = 
	`¥agmaLoˇã
(
zName
+7);

2274 if–
pName
==0 )  0;

2275 if–(
pName
->
mPøgFlg
 & (
PøgFlg_Resu…0
|
PøgFlg_Resu…1
))==0 )  0;

2276 
	`as£π
–
	`sqlôe3HashFöd
(&
db
->
aModuÀ
, 
zName
)==0 );

2277  
	`sqlôe3VèbCª©eModuÀ
(
db
, 
zName
, &
¥agmaVèbModuÀ
, (*)
pName
, 0);

2278 
	}
}

	@pragma.h

8 
	#PøgTyp_HEADER_VALUE
 0

	)

9 
	#PøgTyp_AUTO_VACUUM
 1

	)

10 
	#PøgTyp_FLAG
 2

	)

11 
	#PøgTyp_BUSY_TIMEOUT
 3

	)

12 
	#PøgTyp_CACHE_SIZE
 4

	)

13 
	#PøgTyp_CACHE_SPILL
 5

	)

14 
	#PøgTyp_CASE_SENSITIVE_LIKE
 6

	)

15 
	#PøgTyp_COLLATION_LIST
 7

	)

16 
	#PøgTyp_COMPILE_OPTIONS
 8

	)

17 
	#PøgTyp_DATA_STORE_DIRECTORY
 9

	)

18 
	#PøgTyp_DATABASE_LIST
 10

	)

19 
	#PøgTyp_DEFAULT_CACHE_SIZE
 11

	)

20 
	#PøgTyp_ENCODING
 12

	)

21 
	#PøgTyp_FOREIGN_KEY_CHECK
 13

	)

22 
	#PøgTyp_FOREIGN_KEY_LIST
 14

	)

23 
	#PøgTyp_INCREMENTAL_VACUUM
 15

	)

24 
	#PøgTyp_INDEX_INFO
 16

	)

25 
	#PøgTyp_INDEX_LIST
 17

	)

26 
	#PøgTyp_INTEGRITY_CHECK
 18

	)

27 
	#PøgTyp_JOURNAL_MODE
 19

	)

28 
	#PøgTyp_JOURNAL_SIZE_LIMIT
 20

	)

29 
	#PøgTyp_LOCK_PROXY_FILE
 21

	)

30 
	#PøgTyp_LOCKING_MODE
 22

	)

31 
	#PøgTyp_PAGE_COUNT
 23

	)

32 
	#PøgTyp_MMAP_SIZE
 24

	)

33 
	#PøgTyp_PAGE_SIZE
 25

	)

34 
	#PøgTyp_SECURE_DELETE
 26

	)

35 
	#PøgTyp_SHRINK_MEMORY
 27

	)

36 
	#PøgTyp_SOFT_HEAP_LIMIT
 28

	)

37 
	#PøgTyp_STATS
 29

	)

38 
	#PøgTyp_SYNCHRONOUS
 30

	)

39 
	#PøgTyp_TABLE_INFO
 31

	)

40 
	#PøgTyp_TEMP_STORE
 32

	)

41 
	#PøgTyp_TEMP_STORE_DIRECTORY
 33

	)

42 
	#PøgTyp_THREADS
 34

	)

43 
	#PøgTyp_WAL_AUTOCHECKPOINT
 35

	)

44 
	#PøgTyp_WAL_CHECKPOINT
 36

	)

45 
	#PøgTyp_ACTIVATE_EXTENSIONS
 37

	)

46 
	#PøgTyp_HEXKEY
 38

	)

47 
	#PøgTyp_KEY
 39

	)

48 
	#PøgTyp_REKEY
 40

	)

49 
	#PøgTyp_LOCK_STATUS
 41

	)

50 
	#PøgTyp_PARSER_TRACE
 42

	)

53 
	#PøgFlg_NìdSchema
 0x01

	)

54 
	#PøgFlg_NoCﬁumns
 0x02

	)

55 
	#PøgFlg_RódO∆y
 0x04

	)

56 
	#PøgFlg_Resu…0
 0x08

	)

57 
	#PøgFlg_Resu…1
 0x10

	)

58 
	#PøgFlg_SchemaO±
 0x20

	)

59 
	#PøgFlg_SchemaReq
 0x40

	)

65 c⁄° *c⁄° 
	g¥agCName
[] = {

117 
	sPøgmaName
 {

118 c⁄° *c⁄° 
	mzName
;

119 
u8
 
	mePøgTyp
;

120 
u8
 
	mmPøgFlg
;

121 
u8
 
	miPøgCName
;

122 
u8
 
	mnPøgCName
;

123 
u32
 
	miArg
;

124 } 
	tPøgmaName
;

125 c⁄° 
PøgmaName
 
	gaPøgmaName
[] = {

126 #i‡
deföed
(
SQLITE_HAS_CODEC
Ë|| deföed(
SQLITE_ENABLE_CEROD
)

128  
PøgTyp_ACTIVATE_EXTENSIONS
,

133 #i‡!
deföed
(
SQLITE_OMIT_SCHEMA_VERSION_PRAGMAS
)

135  
PøgTyp_HEADER_VALUE
,

136  
PøgFlg_Resu…0
,

138  
BTREE_APPLICATION_ID
 },

140 #i‡!
deföed
(
SQLITE_OMIT_AUTOVACUUM
)

142  
PøgTyp_AUTO_VACUUM
,

143  
PøgFlg_NìdSchema
|
PøgFlg_Resu…0
|
PøgFlg_SchemaReq
,

147 #i‡!
deföed
(
SQLITE_OMIT_FLAG_PRAGMAS
)

148 #i‡!
deföed
(
SQLITE_OMIT_AUTOMATIC_INDEX
)

150  
PøgTyp_FLAG
,

151  
PøgFlg_Resu…0
|
PøgFlg_NoCﬁumns
,

153  
SQLITE_AutoIndex
 },

157  
PøgTyp_BUSY_TIMEOUT
,

158  
PøgFlg_Resu…0
,

161 #i‡!
deföed
(
SQLITE_OMIT_PAGER_PRAGMAS
)

163  
PøgTyp_CACHE_SIZE
,

164  
PøgFlg_NìdSchema
|
PøgFlg_Resu…0
|
PøgFlg_SchemaReq
,

168 #i‡!
deföed
(
SQLITE_OMIT_FLAG_PRAGMAS
)

170  
PøgTyp_CACHE_SPILL
,

171  
PøgFlg_Resu…0
|
PøgFlg_SchemaReq
,

176  
PøgTyp_CASE_SENSITIVE_LIKE
,

181  
PøgTyp_FLAG
,

182  
PøgFlg_Resu…0
|
PøgFlg_NoCﬁumns
,

184  
SQLITE_CñlSizeCk
 },

185 #i‡!
deföed
(
SQLITE_OMIT_FLAG_PRAGMAS
)

187  
PøgTyp_FLAG
,

188  
PøgFlg_Resu…0
|
PøgFlg_NoCﬁumns
,

190  
SQLITE_Ck±FuŒFSync
 },

192 #i‡!
deföed
(
SQLITE_OMIT_SCHEMA_PRAGMAS
)

194  
PøgTyp_COLLATION_LIST
,

195  
PøgFlg_Resu…0
,

199 #i‡!
deföed
(
SQLITE_OMIT_COMPILEOPTION_DIAGS
)

201  
PøgTyp_COMPILE_OPTIONS
,

202  
PøgFlg_Resu…0
,

206 #i‡!
deföed
(
SQLITE_OMIT_FLAG_PRAGMAS
)

208  
PøgTyp_FLAG
,

209  
PøgFlg_Resu…0
|
PøgFlg_NoCﬁumns
,

211  
SQLITE_Cou¡Rows
 },

213 #i‡!
deföed
(
SQLITE_OMIT_PAGER_PRAGMAS
Ë&& 
SQLITE_OS_WIN


215  
PøgTyp_DATA_STORE_DIRECTORY
,

220 #i‡!
deföed
(
SQLITE_OMIT_SCHEMA_VERSION_PRAGMAS
)

222  
PøgTyp_HEADER_VALUE
,

223  
PøgFlg_Resu…0
|
PøgFlg_RódO∆y
,

225  
BTREE_DATA_VERSION
 },

227 #i‡!
deföed
(
SQLITE_OMIT_SCHEMA_PRAGMAS
)

229  
PøgTyp_DATABASE_LIST
,

230  
PøgFlg_NìdSchema
|
PøgFlg_Resu…0
,

234 #i‡!
deföed
(
SQLITE_OMIT_PAGER_PRAGMAS
Ë&& !deföed(
SQLITE_OMIT_DEPRECATED
)

236  
PøgTyp_DEFAULT_CACHE_SIZE
,

237  
PøgFlg_NìdSchema
|
PøgFlg_Resu…0
|
PøgFlg_SchemaReq
,

241 #i‡!
deföed
(
SQLITE_OMIT_FLAG_PRAGMAS
)

242 #i‡!
deföed
(
SQLITE_OMIT_FOREIGN_KEY
Ë&& !deföed(
SQLITE_OMIT_TRIGGER
)

244  
PøgTyp_FLAG
,

245  
PøgFlg_Resu…0
|
PøgFlg_NoCﬁumns
,

247  
SQLITE_De„rFKs
 },

250 #i‡!
deföed
(
SQLITE_OMIT_FLAG_PRAGMAS
)

252  
PøgTyp_FLAG
,

253  
PøgFlg_Resu…0
|
PøgFlg_NoCﬁumns
,

255  
SQLITE_NuŒCÆlback
 },

257 #i‡!
deföed
(
SQLITE_OMIT_UTF16
)

259  
PøgTyp_ENCODING
,

260  
PøgFlg_Resu…0
,

264 #i‡!
deföed
(
SQLITE_OMIT_FOREIGN_KEY
Ë&& !deföed(
SQLITE_OMIT_TRIGGER
)

266  
PøgTyp_FOREIGN_KEY_CHECK
,

267  
PøgFlg_NìdSchema
,

271 #i‡!
deföed
(
SQLITE_OMIT_FOREIGN_KEY
)

273  
PøgTyp_FOREIGN_KEY_LIST
,

274  
PøgFlg_NìdSchema
|
PøgFlg_Resu…1
|
PøgFlg_SchemaO±
,

278 #i‡!
deföed
(
SQLITE_OMIT_FLAG_PRAGMAS
)

279 #i‡!
deföed
(
SQLITE_OMIT_FOREIGN_KEY
Ë&& !deföed(
SQLITE_OMIT_TRIGGER
)

281  
PøgTyp_FLAG
,

282  
PøgFlg_Resu…0
|
PøgFlg_NoCﬁumns
,

284  
SQLITE_F‹eignKeys
 },

287 #i‡!
deföed
(
SQLITE_OMIT_SCHEMA_VERSION_PRAGMAS
)

289  
PøgTyp_HEADER_VALUE
,

290  
PøgFlg_Resu…0
|
PøgFlg_RódO∆y
,

292  
BTREE_FREE_PAGE_COUNT
 },

294 #i‡!
deföed
(
SQLITE_OMIT_FLAG_PRAGMAS
)

296  
PøgTyp_FLAG
,

297  
PøgFlg_Resu…0
|
PøgFlg_NoCﬁumns
,

299  
SQLITE_FuŒCﬁNames
 },

301  
PøgTyp_FLAG
,

302  
PøgFlg_Resu…0
|
PøgFlg_NoCﬁumns
,

304  
SQLITE_FuŒFSync
 },

306 #i‡
deföed
(
SQLITE_HAS_CODEC
)

308  
PøgTyp_HEXKEY
,

313  
PøgTyp_HEXKEY
,

318 #i‡!
deföed
(
SQLITE_OMIT_FLAG_PRAGMAS
)

319 #i‡!
deföed
(
SQLITE_OMIT_CHECK
)

321  
PøgTyp_FLAG
,

322  
PøgFlg_Resu…0
|
PøgFlg_NoCﬁumns
,

324  
SQLITE_Ign‹eChecks
 },

327 #i‡!
deföed
(
SQLITE_OMIT_AUTOVACUUM
)

329  
PøgTyp_INCREMENTAL_VACUUM
,

330  
PøgFlg_NìdSchema
|
PøgFlg_NoCﬁumns
,

334 #i‡!
deföed
(
SQLITE_OMIT_SCHEMA_PRAGMAS
)

336  
PøgTyp_INDEX_INFO
,

337  
PøgFlg_NìdSchema
|
PøgFlg_Resu…1
|
PøgFlg_SchemaO±
,

341  
PøgTyp_INDEX_LIST
,

342  
PøgFlg_NìdSchema
|
PøgFlg_Resu…1
|
PøgFlg_SchemaO±
,

346  
PøgTyp_INDEX_INFO
,

347  
PøgFlg_NìdSchema
|
PøgFlg_Resu…1
|
PøgFlg_SchemaO±
,

351 #i‡!
deföed
(
SQLITE_OMIT_INTEGRITY_CHECK
)

353  
PøgTyp_INTEGRITY_CHECK
,

354  
PøgFlg_NìdSchema
,

358 #i‡!
deföed
(
SQLITE_OMIT_PAGER_PRAGMAS
)

360  
PøgTyp_JOURNAL_MODE
,

361  
PøgFlg_NìdSchema
|
PøgFlg_Resu…0
|
PøgFlg_SchemaReq
,

365  
PøgTyp_JOURNAL_SIZE_LIMIT
,

366  
PøgFlg_Resu…0
|
PøgFlg_SchemaReq
,

370 #i‡
deföed
(
SQLITE_HAS_CODEC
)

372  
PøgTyp_KEY
,

377 #i‡!
deföed
(
SQLITE_OMIT_FLAG_PRAGMAS
)

379  
PøgTyp_FLAG
,

380  
PøgFlg_Resu…0
|
PøgFlg_NoCﬁumns
,

382  
SQLITE_LegacyFûeFmt
 },

384 #i‡!
deföed
(
SQLITE_OMIT_PAGER_PRAGMAS
Ë&& 
SQLITE_ENABLE_LOCKING_STYLE


386  
PøgTyp_LOCK_PROXY_FILE
,

391 #i‡
deföed
(
SQLITE_DEBUG
Ë|| deföed(
SQLITE_TEST
)

393  
PøgTyp_LOCK_STATUS
,

394  
PøgFlg_Resu…0
,

398 #i‡!
deföed
(
SQLITE_OMIT_PAGER_PRAGMAS
)

400  
PøgTyp_LOCKING_MODE
,

401  
PøgFlg_Resu…0
|
PøgFlg_SchemaReq
,

405  
PøgTyp_PAGE_COUNT
,

406  
PøgFlg_NìdSchema
|
PøgFlg_Resu…0
|
PøgFlg_SchemaReq
,

410  
PøgTyp_MMAP_SIZE
,

415  
PøgTyp_PAGE_COUNT
,

416  
PøgFlg_NìdSchema
|
PøgFlg_Resu…0
|
PøgFlg_SchemaReq
,

420  
PøgTyp_PAGE_SIZE
,

421  
PøgFlg_Resu…0
|
PøgFlg_SchemaReq
,

425 #i‡
deföed
(
SQLITE_DEBUG
Ë&& !deföed(
SQLITE_OMIT_PARSER_TRACE
)

427  
PøgTyp_PARSER_TRACE
,

432 #i‡!
deföed
(
SQLITE_OMIT_FLAG_PRAGMAS
)

434  
PøgTyp_FLAG
,

435  
PøgFlg_Resu…0
|
PøgFlg_NoCﬁumns
,

437  
SQLITE_QuîyO∆y
 },

439 #i‡!
deföed
(
SQLITE_OMIT_INTEGRITY_CHECK
)

441  
PøgTyp_INTEGRITY_CHECK
,

442  
PøgFlg_NìdSchema
,

446 #i‡!
deföed
(
SQLITE_OMIT_FLAG_PRAGMAS
)

448  
PøgTyp_FLAG
,

449  
PøgFlg_Resu…0
|
PøgFlg_NoCﬁumns
,

451  
SQLITE_RódUncommôãd
 },

453  
PøgTyp_FLAG
,

454  
PøgFlg_Resu…0
|
PøgFlg_NoCﬁumns
,

456  
SQLITE_RecTriggîs
 },

458 #i‡
deföed
(
SQLITE_HAS_CODEC
)

460  
PøgTyp_REKEY
,

465 #i‡!
deföed
(
SQLITE_OMIT_FLAG_PRAGMAS
)

467  
PøgTyp_FLAG
,

468  
PøgFlg_Resu…0
|
PøgFlg_NoCﬁumns
,

470  
SQLITE_Revî£Ordî
 },

472 #i‡!
deföed
(
SQLITE_OMIT_SCHEMA_VERSION_PRAGMAS
)

474  
PøgTyp_HEADER_VALUE
,

475  
PøgFlg_Resu…0
,

477  
BTREE_SCHEMA_VERSION
 },

479 #i‡!
deföed
(
SQLITE_OMIT_PAGER_PRAGMAS
)

481  
PøgTyp_SECURE_DELETE
,

482  
PøgFlg_Resu…0
,

486 #i‡!
deföed
(
SQLITE_OMIT_FLAG_PRAGMAS
)

488  
PøgTyp_FLAG
,

489  
PøgFlg_Resu…0
|
PøgFlg_NoCﬁumns
,

491  
SQLITE_Sh‹tCﬁNames
 },

494  
PøgTyp_SHRINK_MEMORY
,

499  
PøgTyp_SOFT_HEAP_LIMIT
,

500  
PøgFlg_Resu…0
,

503 #i‡!
deföed
(
SQLITE_OMIT_FLAG_PRAGMAS
)

504 #i‡
deföed
(
SQLITE_DEBUG
)

506  
PøgTyp_FLAG
,

507  
PøgFlg_Resu…0
|
PøgFlg_NoCﬁumns
,

509  
SQLITE_SqlTø˚
 },

512 #i‡!
deföed
(
SQLITE_OMIT_SCHEMA_PRAGMAS
)

514  
PøgTyp_STATS
,

515  
PøgFlg_NìdSchema
|
PøgFlg_Resu…0
|
PøgFlg_SchemaReq
,

519 #i‡!
deföed
(
SQLITE_OMIT_PAGER_PRAGMAS
)

521  
PøgTyp_SYNCHRONOUS
,

522  
PøgFlg_NìdSchema
|
PøgFlg_Resu…0
|
PøgFlg_SchemaReq
,

526 #i‡!
deföed
(
SQLITE_OMIT_SCHEMA_PRAGMAS
)

528  
PøgTyp_TABLE_INFO
,

529  
PøgFlg_NìdSchema
|
PøgFlg_Resu…1
|
PøgFlg_SchemaO±
,

533 #i‡!
deföed
(
SQLITE_OMIT_PAGER_PRAGMAS
)

535  
PøgTyp_TEMP_STORE
,

536  
PøgFlg_Resu…0
,

540  
PøgTyp_TEMP_STORE_DIRECTORY
,

546  
PøgTyp_THREADS
,

547  
PøgFlg_Resu…0
,

550 #i‡!
deföed
(
SQLITE_OMIT_SCHEMA_VERSION_PRAGMAS
)

552  
PøgTyp_HEADER_VALUE
,

553  
PøgFlg_Resu…0
,

555  
BTREE_USER_VERSION
 },

557 #i‡!
deföed
(
SQLITE_OMIT_FLAG_PRAGMAS
)

558 #i‡
deföed
(
SQLITE_DEBUG
)

560  
PøgTyp_FLAG
,

561  
PøgFlg_Resu…0
|
PøgFlg_NoCﬁumns
,

563  
SQLITE_VdbeAdd›Tø˚
 },

565  
PøgTyp_FLAG
,

566  
PøgFlg_Resu…0
|
PøgFlg_NoCﬁumns
,

568  
SQLITE_SqlTø˚
|
SQLITE_VdbeLi°ög
|
SQLITE_VdbeTø˚
 },

570  
PøgTyp_FLAG
,

571  
PøgFlg_Resu…0
|
PøgFlg_NoCﬁumns
,

573  
SQLITE_VdbeEQP
 },

575  
PøgTyp_FLAG
,

576  
PøgFlg_Resu…0
|
PøgFlg_NoCﬁumns
,

578  
SQLITE_VdbeLi°ög
 },

580  
PøgTyp_FLAG
,

581  
PøgFlg_Resu…0
|
PøgFlg_NoCﬁumns
,

583  
SQLITE_VdbeTø˚
 },

586 #i‡!
deföed
(
SQLITE_OMIT_WAL
)

588  
PøgTyp_WAL_AUTOCHECKPOINT
,

593  
PøgTyp_WAL_CHECKPOINT
,

594  
PøgFlg_NìdSchema
,

598 #i‡!
deföed
(
SQLITE_OMIT_FLAG_PRAGMAS
)

600  
PøgTyp_FLAG
,

601  
PøgFlg_Resu…0
|
PøgFlg_NoCﬁumns
,

603  
SQLITE_WrôeSchema
|
SQLITE_RecovîyMode
 },

	@prepare.c

16 
	~"sqlôeI¡.h
"

22 
	$c‹ru±Schema
(

23 
InôD©a
 *
pD©a
,

24 c⁄° *
zObj
,

25 c⁄° *
zExåa


27 
sqlôe3
 *
db
 = 
pD©a
->db;

28 if–!
db
->
mÆlocFaûed
 && (db->
Êags
 & 
SQLITE_RecovîyMode
)==0 ){

29 *
z
;

30 if–
zObj
==0 ) zObj = "?";

31 
z
 = 
	`sqlôe3MPrötf
(
db
, "mÆf‹med d©aba£ schem®(%s)", 
zObj
);

32 if–
zExåa
 ) 
z
 = 
	`sqlôe3MPrötf
(
db
, "%z - %s", z, zExtra);

33 
	`sqlôe3DbFªe
(
db
, *
pD©a
->
pzEºMsg
);

34 *
pD©a
->
pzEºMsg
 = 
z
;

36 
pD©a
->
rc
 = 
db
->
mÆlocFaûed
 ? 
SQLITE_NOMEM_BKPT
 : 
SQLITE_CORRUPT_BKPT
;

37 
	}
}

51 
	$sqlôe3InôCÆlback
(*
pInô
, 
¨gc
, **
¨gv
, **
NŸU£d
){

52 
InôD©a
 *
pD©a
 = (InôD©a*)
pInô
;

53 
sqlôe3
 *
db
 = 
pD©a
->db;

54 
iDb
 = 
pD©a
->iDb;

56 
	`as£π
–
¨gc
==3 );

57 
	`UNUSED_PARAMETER2
(
NŸU£d
, 
¨gc
);

58 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

59 
	`DbCÀ¨Pr›îty
(
db
, 
iDb
, 
DB_Em±y
);

60 if–
db
->
mÆlocFaûed
 ){

61 
	`c‹ru±Schema
(
pD©a
, 
¨gv
[0], 0);

65 
	`as£π
–
iDb
>=0 && iDb<
db
->
nDb
 );

66 if–
¨gv
==0 )  0;

67 if–
¨gv
[1]==0 ){

68 
	`c‹ru±Schema
(
pD©a
, 
¨gv
[0], 0);

69 }if–
	`sqlôe3_°∫icmp
(
¨gv
[2],"create ",7)==0 ){

75 
rc
;

76 
u8
 
ßved_iDb
 = 
db
->
öô
.
iDb
;

77 
sqlôe3_°mt
 *
pStmt
;

78 
	`TESTONLY
(
r˝
);

80 
	`as£π
–
db
->
öô
.
busy
 );

81 
db
->
öô
.
iDb
 = iDb;

82 
db
->
öô
.
√wTnum
 = 
	`sqlôe3Atoi
(
¨gv
[1]);

83 
db
->
öô
.
‹ph™Triggî
 = 0;

84 
	`TESTONLY
(
r˝
 = ) 
	`sqlôe3_¥ï¨e
(
db
, 
¨gv
[2], -1, &
pStmt
, 0);

85 
rc
 = 
db
->
îrCode
;

86 
	`as£π
–(
rc
&0xFF)==(
r˝
&0xFF) );

87 
db
->
öô
.
iDb
 = 
ßved_iDb
;

88 
	`as£π
–
ßved_iDb
==0 || (
db
->
Êags
 & 
SQLITE_Vacuum
)!=0 );

89 if–
SQLITE_OK
!=
rc
 ){

90 if–
db
->
öô
.
‹ph™Triggî
 ){

91 
	`as£π
–
iDb
==1 );

93 
pD©a
->
rc
 =Ñc;

94 if–
rc
==
SQLITE_NOMEM
 ){

95 
	`sqlôe3OomFau…
(
db
);

96 }if–
rc
!=
SQLITE_INTERRUPT
 && (rc&0xFF)!=
SQLITE_LOCKED
 ){

97 
	`c‹ru±Schema
(
pD©a
, 
¨gv
[0], 
	`sqlôe3_îrmsg
(
db
));

101 
	`sqlôe3_föÆize
(
pStmt
);

102 }if–
¨gv
[0]==0 || (argv[2]!=0 &&árgv[2][0]!=0) ){

103 
	`c‹ru±Schema
(
pD©a
, 
¨gv
[0], 0);

111 
Index
 *
pIndex
;

112 
pIndex
 = 
	`sqlôe3FödIndex
(
db
, 
¨gv
[0], db->
aDb
[
iDb
].
zDbSName
);

113 if–
pIndex
==0 ){

120 }if–
	`sqlôe3GëI¡32
(
¨gv
[1], &
pIndex
->
äum
)==0 ){

121 
	`c‹ru±Schema
(
pD©a
, 
¨gv
[0], "invalidÑootpage");

125 
	}
}

135 
	$sqlôe3InôO√
(
sqlôe3
 *
db
, 
iDb
, **
pzEºMsg
){

136 
rc
;

137 
i
;

138 #i‚de‡
SQLITE_OMIT_DEPRECATED


139 
size
;

141 
Db
 *
pDb
;

142 c⁄° *
azArg
[4];

143 
mëa
[5];

144 
InôD©a
 
öôD©a
;

145 c⁄° *
zMa°îName
;

146 
›íedTønß˘i⁄
 = 0;

148 
	`as£π
–
iDb
>=0 && iDb<
db
->
nDb
 );

149 
	`as£π
–
db
->
aDb
[
iDb
].
pSchema
 );

150 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

151 
	`as£π
–
iDb
==1 || 
	`sqlôe3BåìHﬁdsMuãx
(
db
->
aDb
[iDb].
pBt
) );

158 
azArg
[0] = 
zMa°îName
 = 
	`SCHEMA_TABLE
(
iDb
);

159 
azArg
[1] = "1";

160 
azArg
[2] = "CREATE TABLE x(typeÅext,nameÅext,tbl_nameÅext,"

162 
azArg
[3] = 0;

163 
öôD©a
.
db
 = db;

164 
öôD©a
.
iDb
 = iDb;

165 
öôD©a
.
rc
 = 
SQLITE_OK
;

166 
öôD©a
.
pzEºMsg
 =ÖzErrMsg;

167 
	`sqlôe3InôCÆlback
(&
öôD©a
, 3, (**)
azArg
, 0);

168 if–
öôD©a
.
rc
 ){

169 
rc
 = 
öôD©a
.rc;

170 
îr‹_out
;

175 
pDb
 = &
db
->
aDb
[
iDb
];

176 if–
pDb
->
pBt
==0 ){

177 if–!
OMIT_TEMPDB
 && 
	`ALWAYS
(
iDb
==1) ){

178 
	`DbSëPr›îty
(
db
, 1, 
DB_SchemaLﬂded
);

180  
SQLITE_OK
;

186 
	`sqlôe3BåìE¡î
(
pDb
->
pBt
);

187 if–!
	`sqlôe3BåìIsInRódTøns
(
pDb
->
pBt
) ){

188 
rc
 = 
	`sqlôe3BåìBegöTøns
(
pDb
->
pBt
, 0);

189 if–
rc
!=
SQLITE_OK
 ){

190 
	`sqlôe3SëSåög
(
pzEºMsg
, 
db
, 
	`sqlôe3EºSå
(
rc
));

191 
öô⁄e_îr‹_out
;

193 
›íedTønß˘i⁄
 = 1;

213 
i
=0; i<
	`AºaySize
(
mëa
); i++){

214 
	`sqlôe3BåìGëMëa
(
pDb
->
pBt
, 
i
+1, (
u32
 *)&
mëa
[i]);

216 
pDb
->
pSchema
->
schema_cookõ
 = 
mëa
[
BTREE_SCHEMA_VERSION
-1];

223 if–
mëa
[
BTREE_TEXT_ENCODING
-1] ){

224 if–
iDb
==0 ){

225 #i‚de‡
SQLITE_OMIT_UTF16


226 
u8
 
ícodög
;

228 
ícodög
 = (
u8
)
mëa
[
BTREE_TEXT_ENCODING
-1] & 3;

229 if–
ícodög
==0 )Éncodög = 
SQLITE_UTF8
;

230 
	`ENC
(
db
Ë
ícodög
;

232 
	`ENC
(
db
Ë
SQLITE_UTF8
;

236 if–
mëa
[
BTREE_TEXT_ENCODING
-1]!=
	`ENC
(
db
) ){

237 
	`sqlôe3SëSåög
(
pzEºMsg
, 
db
, "attached databases must useÅhe same"

239 
rc
 = 
SQLITE_ERROR
;

240 
öô⁄e_îr‹_out
;

244 
	`DbSëPr›îty
(
db
, 
iDb
, 
DB_Em±y
);

246 
pDb
->
pSchema
->
íc
 = 
	`ENC
(
db
);

248 if–
pDb
->
pSchema
->
ˇche_size
==0 ){

249 #i‚de‡
SQLITE_OMIT_DEPRECATED


250 
size
 = 
	`sqlôe3AbsI¡32
(
mëa
[
BTREE_DEFAULT_CACHE_SIZE
-1]);

251 if–
size
==0 ){ sizê
SQLITE_DEFAULT_CACHE_SIZE
; }

252 
pDb
->
pSchema
->
ˇche_size
 = 
size
;

254 
pDb
->
pSchema
->
ˇche_size
 = 
SQLITE_DEFAULT_CACHE_SIZE
;

256 
	`sqlôe3BåìSëCacheSize
(
pDb
->
pBt
,ÖDb->
pSchema
->
ˇche_size
);

265 
pDb
->
pSchema
->
fûe_f‹m©
 = (
u8
)
mëa
[
BTREE_FILE_FORMAT
-1];

266 if–
pDb
->
pSchema
->
fûe_f‹m©
==0 ){

267 
pDb
->
pSchema
->
fûe_f‹m©
 = 1;

269 if–
pDb
->
pSchema
->
fûe_f‹m©
>
SQLITE_MAX_FILE_FORMAT
 ){

270 
	`sqlôe3SëSåög
(
pzEºMsg
, 
db
, "unsupported file format");

271 
rc
 = 
SQLITE_ERROR
;

272 
öô⁄e_îr‹_out
;

280 if–
iDb
==0 && 
mëa
[
BTREE_FILE_FORMAT
-1]>=4 ){

281 
db
->
Êags
 &~
SQLITE_LegacyFûeFmt
;

286 
	`as£π
–
db
->
öô
.
busy
 );

288 *
zSql
;

289 
zSql
 = 
	`sqlôe3MPrötf
(
db
,

291 
db
->
aDb
[
iDb
].
zDbSName
, 
zMa°îName
);

292 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


294 
sqlôe3_xauth
 
xAuth
;

295 
xAuth
 = 
db
->xAuth;

296 
db
->
xAuth
 = 0;

298 
rc
 = 
	`sqlôe3_exec
(
db
, 
zSql
, 
sqlôe3InôCÆlback
, &
öôD©a
, 0);

299 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


300 
db
->
xAuth
 = xAuth;

303 if–
rc
==
SQLITE_OK
 )Ñ¯
öôD©a
.rc;

304 
	`sqlôe3DbFªe
(
db
, 
zSql
);

305 #i‚de‡
SQLITE_OMIT_ANALYZE


306 if–
rc
==
SQLITE_OK
 ){

307 
	`sqlôe3A«lysisLﬂd
(
db
, 
iDb
);

311 if–
db
->
mÆlocFaûed
 ){

312 
rc
 = 
SQLITE_NOMEM_BKPT
;

313 
	`sqlôe3Re£tAŒSchemasOfC⁄√˘i⁄
(
db
);

315 if–
rc
==
SQLITE_OK
 || (
db
->
Êags
&
SQLITE_RecovîyMode
)){

324 
	`DbSëPr›îty
(
db
, 
iDb
, 
DB_SchemaLﬂded
);

325 
rc
 = 
SQLITE_OK
;

332 
öô⁄e_îr‹_out
:

333 if–
›íedTønß˘i⁄
 ){

334 
	`sqlôe3BåìCommô
(
pDb
->
pBt
);

336 
	`sqlôe3BåìLóve
(
pDb
->
pBt
);

338 
îr‹_out
:

339 if–
rc
==
SQLITE_NOMEM
 ||Ñc==
SQLITE_IOERR_NOMEM
 ){

340 
	`sqlôe3OomFau…
(
db
);

342  
rc
;

343 
	}
}

355 
	$sqlôe3Inô
(
sqlôe3
 *
db
, **
pzEºMsg
){

356 
i
, 
rc
;

357 
commô_öã∫Æ
 = !(
db
->
Êags
&
SQLITE_I¡înCh™ges
);

359 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

360 
	`as£π
–
	`sqlôe3BåìHﬁdsMuãx
(
db
->
aDb
[0].
pBt
) );

361 
	`as£π
–
db
->
öô
.
busy
==0 );

362 
rc
 = 
SQLITE_OK
;

363 
db
->
öô
.
busy
 = 1;

364 
	`ENC
(
db
Ë
	`SCHEMA_ENC
(db);

365 
i
=0; 
rc
==
SQLITE_OK
 && i<
db
->
nDb
; i++){

366 if–
	`DbHasPr›îty
(
db
, 
i
, 
DB_SchemaLﬂded
) || i==1 ) ;

367 
rc
 = 
	`sqlôe3InôO√
(
db
, 
i
, 
pzEºMsg
);

368 if–
rc
 ){

369 
	`sqlôe3Re£tO√Schema
(
db
, 
i
);

377 #i‚de‡
SQLITE_OMIT_TEMPDB


378 
	`as£π
–
db
->
nDb
>1 );

379 if–
rc
==
SQLITE_OK
 && !
	`DbHasPr›îty
(
db
, 1, 
DB_SchemaLﬂded
) ){

380 
rc
 = 
	`sqlôe3InôO√
(
db
, 1, 
pzEºMsg
);

381 if–
rc
 ){

382 
	`sqlôe3Re£tO√Schema
(
db
, 1);

387 
db
->
öô
.
busy
 = 0;

388 if–
rc
==
SQLITE_OK
 && 
commô_öã∫Æ
 ){

389 
	`sqlôe3CommôI¡î«lCh™ges
(
db
);

392  
rc
;

393 
	}
}

399 
	$sqlôe3RódSchema
(
P¨£
 *
pP¨£
){

400 
rc
 = 
SQLITE_OK
;

401 
sqlôe3
 *
db
 = 
pP¨£
->db;

402 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

403 if–!
db
->
öô
.
busy
 ){

404 
rc
 = 
	`sqlôe3Inô
(
db
, &
pP¨£
->
zEºMsg
);

406 if–
rc
!=
SQLITE_OK
 ){

407 
pP¨£
->
rc
 =Ñc;

408 
pP¨£
->
nEº
++;

410  
rc
;

411 
	}
}

419 
	$schemaIsVÆid
(
P¨£
 *
pP¨£
){

420 
sqlôe3
 *
db
 = 
pP¨£
->db;

421 
iDb
;

422 
rc
;

423 
cookõ
;

425 
	`as£π
–
pP¨£
->
checkSchema
 );

426 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

427 
iDb
=0; iDb<
db
->
nDb
; iDb++){

428 
›íedTønß˘i⁄
 = 0;

429 
Båì
 *
pBt
 = 
db
->
aDb
[
iDb
].pBt;

430 if–
pBt
==0 ) ;

435 if–!
	`sqlôe3BåìIsInRódTøns
(
pBt
) ){

436 
rc
 = 
	`sqlôe3BåìBegöTøns
(
pBt
, 0);

437 if–
rc
==
SQLITE_NOMEM
 ||Ñc==
SQLITE_IOERR_NOMEM
 ){

438 
	`sqlôe3OomFau…
(
db
);

440 if–
rc
!=
SQLITE_OK
 ) ;

441 
›íedTønß˘i⁄
 = 1;

447 
	`sqlôe3BåìGëMëa
(
pBt
, 
BTREE_SCHEMA_VERSION
, (
u32
 *)&
cookõ
);

448 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

449 if–
cookõ
!=
db
->
aDb
[
iDb
].
pSchema
->
schema_cookõ
 ){

450 
	`sqlôe3Re£tO√Schema
(
db
, 
iDb
);

451 
pP¨£
->
rc
 = 
SQLITE_SCHEMA
;

455 if–
›íedTønß˘i⁄
 ){

456 
	`sqlôe3BåìCommô
(
pBt
);

459 
	}
}

468 
	$sqlôe3SchemaToIndex
(
sqlôe3
 *
db
, 
Schema
 *
pSchema
){

469 
i
 = -1000000;

481 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

482 if–
pSchema
 ){

483 
i
=0; 
	`ALWAYS
(i<
db
->
nDb
); i++){

484 if–
db
->
aDb
[
i
].
pSchema
==pSchema ){

488 
	`as£π
–
i
>=0 && i<
db
->
nDb
 );

490  
i
;

491 
	}
}

496 
	$sqlôe3P¨£rRe£t
(
P¨£
 *
pP¨£
){

497 if–
pP¨£
 ){

498 
sqlôe3
 *
db
 = 
pP¨£
->db;

499 
	`sqlôe3DbFªe
(
db
, 
pP¨£
->
aLabñ
);

500 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pP¨£
->
pC⁄°Ex¥
);

501 if–
db
 ){

502 
	`as£π
–
db
->
lookaside
.
bDißbÀ
 >
pP¨£
->
dißbÀLookaside
 );

503 
db
->
lookaside
.
bDißbÀ
 -
pP¨£
->
dißbÀLookaside
;

505 
pP¨£
->
dißbÀLookaside
 = 0;

507 
	}
}

512 
	$sqlôe3Pª∑ª
(

513 
sqlôe3
 *
db
,

514 c⁄° *
zSql
,

515 
nByãs
,

516 
ßveSqlFœg
,

517 
Vdbe
 *
pRïª∑ª
,

518 
sqlôe3_°mt
 **
µStmt
,

519 c⁄° **
pzTaû


521 *
zEºMsg
 = 0;

522 
rc
 = 
SQLITE_OK
;

523 
i
;

524 
P¨£
 
sP¨£
;

526 
	`mem£t
(&
sP¨£
, 0, 
PARSE_HDR_SZ
);

527 
	`mem£t
(
	`PARSE_TAIL
(&
sP¨£
), 0, 
PARSE_TAIL_SZ
);

528 
sP¨£
.
pRïª∑ª
 =ÖReprepare;

529 
	`as£π
–
µStmt
 && *ppStmt==0 );

531 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

556 
i
=0; i<
db
->
nDb
; i++) {

557 
Båì
 *
pBt
 = 
db
->
aDb
[
i
].pBt;

558 if–
pBt
 ){

559 
	`as£π
–
	`sqlôe3BåìHﬁdsMuãx
(
pBt
) );

560 
rc
 = 
	`sqlôe3BåìSchemaLocked
(
pBt
);

561 if–
rc
 ){

562 c⁄° *
zDb
 = 
db
->
aDb
[
i
].
zDbSName
;

563 
	`sqlôe3Eº‹WôhMsg
(
db
, 
rc
, "d©aba£ schem®i†locked: %s", 
zDb
);

564 
	`ã°ˇ£
–
db
->
Êags
 & 
SQLITE_RódUncommôãd
 );

565 
íd_¥ï¨e
;

570 
	`sqlôe3VèbU∆ockLi°
(
db
);

572 
sP¨£
.
db
 = db;

573 if–
nByãs
>=0 && (nByãs==0 || 
zSql
[nBytes-1]!=0) ){

574 *
zSqlC›y
;

575 
mxLí
 = 
db
->
aLimô
[
SQLITE_LIMIT_SQL_LENGTH
];

576 
	`ã°ˇ£
–
nByãs
==
mxLí
 );

577 
	`ã°ˇ£
–
nByãs
==
mxLí
+1 );

578 if–
nByãs
>
mxLí
 ){

579 
	`sqlôe3Eº‹WôhMsg
(
db
, 
SQLITE_TOOBIG
, "statementÅooÜong");

580 
rc
 = 
	`sqlôe3ApiExô
(
db
, 
SQLITE_TOOBIG
);

581 
íd_¥ï¨e
;

583 
zSqlC›y
 = 
	`sqlôe3DbSåNDup
(
db
, 
zSql
, 
nByãs
);

584 if–
zSqlC›y
 ){

585 
	`sqlôe3RunP¨£r
(&
sP¨£
, 
zSqlC›y
, &
zEºMsg
);

586 
sP¨£
.
zTaû
 = &
zSql
[sP¨£.zTaû-
zSqlC›y
];

587 
	`sqlôe3DbFªe
(
db
, 
zSqlC›y
);

589 
sP¨£
.
zTaû
 = &
zSql
[
nByãs
];

592 
	`sqlôe3RunP¨£r
(&
sP¨£
, 
zSql
, &
zEºMsg
);

594 
	`as£π
–0==
sP¨£
.
nQuîyLo›
 );

596 if–
sP¨£
.
rc
==
SQLITE_DONE
 ) sP¨£.r¯
SQLITE_OK
;

597 if–
sP¨£
.
checkSchema
 ){

598 
	`schemaIsVÆid
(&
sP¨£
);

600 if–
db
->
mÆlocFaûed
 ){

601 
sP¨£
.
rc
 = 
SQLITE_NOMEM_BKPT
;

603 if–
pzTaû
 ){

604 *
pzTaû
 = 
sP¨£
.
zTaû
;

606 
rc
 = 
sP¨£
.rc;

608 #i‚de‡
SQLITE_OMIT_EXPLAIN


609 if–
rc
==
SQLITE_OK
 && 
sP¨£
.
pVdbe
 && sP¨£.
ex∂aö
 ){

610 c⁄° * c⁄° 
azCﬁName
[] = {

614 
iFú°
, 
mx
;

615 if–
sP¨£
.
ex∂aö
==2 ){

616 
	`sqlôe3VdbeSëNumCﬁs
(
sP¨£
.
pVdbe
, 4);

617 
iFú°
 = 8;

618 
mx
 = 12;

620 
	`sqlôe3VdbeSëNumCﬁs
(
sP¨£
.
pVdbe
, 8);

621 
iFú°
 = 0;

622 
mx
 = 8;

624 
i
=
iFú°
; i<
mx
; i++){

625 
	`sqlôe3VdbeSëCﬁName
(
sP¨£
.
pVdbe
, 
i
-
iFú°
, 
COLNAME_NAME
,

626 
azCﬁName
[
i
], 
SQLITE_STATIC
);

631 if–
db
->
öô
.
busy
==0 ){

632 
Vdbe
 *
pVdbe
 = 
sP¨£
.pVdbe;

633 
	`sqlôe3VdbeSëSql
(
pVdbe
, 
zSql
, ()(
sP¨£
.
zTaû
-zSql), 
ßveSqlFœg
);

635 if–
sP¨£
.
pVdbe
 && (
rc
!=
SQLITE_OK
 || 
db
->
mÆlocFaûed
) ){

636 
	`sqlôe3VdbeFöÆize
(
sP¨£
.
pVdbe
);

637 
	`as£π
(!(*
µStmt
));

639 *
µStmt
 = (
sqlôe3_°mt
*)
sP¨£
.
pVdbe
;

642 if–
zEºMsg
 ){

643 
	`sqlôe3Eº‹WôhMsg
(
db
, 
rc
, "%s", 
zEºMsg
);

644 
	`sqlôe3DbFªe
(
db
, 
zEºMsg
);

646 
	`sqlôe3Eº‹
(
db
, 
rc
);

650  
sP¨£
.
pTriggîPrg
 ){

651 
TriggîPrg
 *
pT
 = 
sP¨£
.
pTriggîPrg
;

652 
sP¨£
.
pTriggîPrg
 = 
pT
->
pNext
;

653 
	`sqlôe3DbFªe
(
db
, 
pT
);

656 
íd_¥ï¨e
:

658 
	`sqlôe3P¨£rRe£t
(&
sP¨£
);

659 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

660 
	`as£π
–(
rc
&
db
->
îrMask
)==rc );

661  
rc
;

662 
	}
}

663 
	$sqlôe3LockAndPª∑ª
(

664 
sqlôe3
 *
db
,

665 c⁄° *
zSql
,

666 
nByãs
,

667 
ßveSqlFœg
,

668 
Vdbe
 *
pOld
,

669 
sqlôe3_°mt
 **
µStmt
,

670 c⁄° **
pzTaû


672 
rc
;

674 #ifde‡
SQLITE_ENABLE_API_ARMOR


675 if–
µStmt
==0 )  
SQLITE_MISUSE_BKPT
;

677 *
µStmt
 = 0;

678 if–!
	`sqlôe3Sa„tyCheckOk
(
db
)||
zSql
==0 ){

679  
SQLITE_MISUSE_BKPT
;

681 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

682 
	`sqlôe3BåìE¡îAŒ
(
db
);

683 
rc
 = 
	`sqlôe3Pª∑ª
(
db
, 
zSql
, 
nByãs
, 
ßveSqlFœg
, 
pOld
, 
µStmt
, 
pzTaû
);

684 if–
rc
==
SQLITE_SCHEMA
 ){

685 
	`sqlôe3_föÆize
(*
µStmt
);

686 
rc
 = 
	`sqlôe3Pª∑ª
(
db
, 
zSql
, 
nByãs
, 
ßveSqlFœg
, 
pOld
, 
µStmt
, 
pzTaû
);

688 
	`sqlôe3BåìLóveAŒ
(
db
);

689 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

690 
	`as£π
–
rc
==
SQLITE_OK
 || *
µStmt
==0 );

691  
rc
;

692 
	}
}

702 
	$sqlôe3Rïª∑ª
(
Vdbe
 *
p
){

703 
rc
;

704 
sqlôe3_°mt
 *
pNew
;

705 c⁄° *
zSql
;

706 
sqlôe3
 *
db
;

708 
	`as£π
–
	`sqlôe3_muãx_hñd
(
	`sqlôe3VdbeDb
(
p
)->
muãx
) );

709 
zSql
 = 
	`sqlôe3_sql
((
sqlôe3_°mt
 *)
p
);

710 
	`as£π
–
zSql
!=0 );

711 
db
 = 
	`sqlôe3VdbeDb
(
p
);

712 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

713 
rc
 = 
	`sqlôe3LockAndPª∑ª
(
db
, 
zSql
, -1, 0, 
p
, &
pNew
, 0);

714 if–
rc
 ){

715 if–
rc
==
SQLITE_NOMEM
 ){

716 
	`sqlôe3OomFau…
(
db
);

718 
	`as£π
–
pNew
==0 );

719  
rc
;

721 
	`as£π
–
pNew
!=0 );

723 
	`sqlôe3VdbeSw≠
((
Vdbe
*)
pNew
, 
p
);

724 
	`sqlôe3Tøns„rBödögs
(
pNew
, (
sqlôe3_°mt
*)
p
);

725 
	`sqlôe3VdbeRe£tSãpResu…
((
Vdbe
*)
pNew
);

726 
	`sqlôe3VdbeFöÆize
((
Vdbe
*)
pNew
);

727  
SQLITE_OK
;

728 
	}
}

739 
	$sqlôe3_¥ï¨e
(

740 
sqlôe3
 *
db
,

741 c⁄° *
zSql
,

742 
nByãs
,

743 
sqlôe3_°mt
 **
µStmt
,

744 c⁄° **
pzTaû


746 
rc
;

747 
rc
 = 
	`sqlôe3LockAndPª∑ª
(
db
,
zSql
,
nByãs
,0,0,
µStmt
,
pzTaû
);

748 
	`as£π
–
rc
==
SQLITE_OK
 || 
µStmt
==0 || *ppStmt==0 );

749  
rc
;

750 
	}
}

751 
	$sqlôe3_¥ï¨e_v2
(

752 
sqlôe3
 *
db
,

753 c⁄° *
zSql
,

754 
nByãs
,

755 
sqlôe3_°mt
 **
µStmt
,

756 c⁄° **
pzTaû


758 
rc
;

759 
rc
 = 
	`sqlôe3LockAndPª∑ª
(
db
,
zSql
,
nByãs
,1,0,
µStmt
,
pzTaû
);

760 
	`as£π
–
rc
==
SQLITE_OK
 || 
µStmt
==0 || *ppStmt==0 );

761  
rc
;

762 
	}
}

765 #i‚de‡
SQLITE_OMIT_UTF16


769 
	$sqlôe3Pª∑ª16
(

770 
sqlôe3
 *
db
,

771 c⁄° *
zSql
,

772 
nByãs
,

773 
ßveSqlFœg
,

774 
sqlôe3_°mt
 **
µStmt
,

775 c⁄° **
pzTaû


781 *
zSql8
;

782 c⁄° *
zTaû8
 = 0;

783 
rc
 = 
SQLITE_OK
;

785 #ifde‡
SQLITE_ENABLE_API_ARMOR


786 if–
µStmt
==0 )  
SQLITE_MISUSE_BKPT
;

788 *
µStmt
 = 0;

789 if–!
	`sqlôe3Sa„tyCheckOk
(
db
)||
zSql
==0 ){

790  
SQLITE_MISUSE_BKPT
;

792 if–
nByãs
>=0 ){

793 
sz
;

794 c⁄° *
z
 = (c⁄° *)
zSql
;

795 
sz
=0; sz<
nByãs
 && (
z
[sz]!=0 || z[sz+1]!=0); sz += 2){}

796 
nByãs
 = 
sz
;

798 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

799 
zSql8
 = 
	`sqlôe3Utf16to8
(
db
, 
zSql
, 
nByãs
, 
SQLITE_UTF16NATIVE
);

800 if–
zSql8
 ){

801 
rc
 = 
	`sqlôe3LockAndPª∑ª
(
db
, 
zSql8
, -1, 
ßveSqlFœg
, 0, 
µStmt
, &
zTaû8
);

804 if–
zTaû8
 && 
pzTaû
 ){

810 
ch¨s_∑r£d
 = 
	`sqlôe3Utf8Ch¨Lí
(
zSql8
, ()(
zTaû8
-zSql8));

811 *
pzTaû
 = (
u8
 *)
zSql
 + 
	`sqlôe3Utf16ByãLí
(zSql, 
ch¨s_∑r£d
);

813 
	`sqlôe3DbFªe
(
db
, 
zSql8
);

814 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

815 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

816  
rc
;

817 
	}
}

827 
	$sqlôe3_¥ï¨e16
(

828 
sqlôe3
 *
db
,

829 c⁄° *
zSql
,

830 
nByãs
,

831 
sqlôe3_°mt
 **
µStmt
,

832 c⁄° **
pzTaû


834 
rc
;

835 
rc
 = 
	`sqlôe3Pª∑ª16
(
db
,
zSql
,
nByãs
,0,
µStmt
,
pzTaû
);

836 
	`as£π
–
rc
==
SQLITE_OK
 || 
µStmt
==0 || *ppStmt==0 );

837  
rc
;

838 
	}
}

839 
	$sqlôe3_¥ï¨e16_v2
(

840 
sqlôe3
 *
db
,

841 c⁄° *
zSql
,

842 
nByãs
,

843 
sqlôe3_°mt
 **
µStmt
,

844 c⁄° **
pzTaû


846 
rc
;

847 
rc
 = 
	`sqlôe3Pª∑ª16
(
db
,
zSql
,
nByãs
,1,
µStmt
,
pzTaû
);

848 
	`as£π
–
rc
==
SQLITE_OK
 || 
µStmt
==0 || *ppStmt==0 );

849  
rc
;

850 
	}
}

	@printf.c

12 
	~"sqlôeI¡.h
"

18 
	#ëRADIX
 0

	)

19 
	#ëFLOAT
 1

	)

20 
	#ëEXP
 2

	)

21 
	#ëGENERIC
 3

	)

22 
	#ëSIZE
 4

	)

23 
	#ëSTRING
 5

	)

24 
	#ëDYNSTRING
 6

	)

25 
	#ëPERCENT
 7

	)

26 
	#ëCHARX
 8

	)

28 
	#ëSQLESCAPE
 9

	)

29 
	#ëSQLESCAPE2
 10

	)

31 
	#ëTOKEN
 11

	)

32 
	#ëSRCLIST
 12

	)

33 
	#ëPOINTER
 13

	)

34 
	#ëSQLESCAPE3
 14

	)

35 
	#ëORDINAL
 15

	)

37 
	#ëINVALID
 16

	)

43 
	tëByã
;

49 
	së_öfo
 {

50 
	mfmây≥
;

51 
ëByã
 
	mba£
;

52 
ëByã
 
	mÊags
;

53 
ëByã
 
	mty≥
;

54 
ëByã
 
	mch¨£t
;

55 
ëByã
 
	m¥efix
;

56 } 
	të_öfo
;

61 
	#FLAG_SIGNED
 1

	)

62 
	#FLAG_INTERN
 2

	)

63 
	#FLAG_STRING
 4

	)

70 c⁄° 
	gaDigôs
[] = "0123456789ABCDEF0123456789abcdef";

71 c⁄° 
	gaPªfix
[] = "-x0\000X0";

72 c⁄° 
ë_öfo
 
	gfmtöfo
[] = {

73 { 'd', 10, 1, 
ëRADIX
, 0, 0 },

74 { 's', 0, 4, 
ëSTRING
, 0, 0 },

75 { 'g', 0, 1, 
ëGENERIC
, 30, 0 },

76 { 'z', 0, 4, 
ëDYNSTRING
, 0, 0 },

77 { 'q', 0, 4, 
ëSQLESCAPE
, 0, 0 },

78 { 'Q', 0, 4, 
ëSQLESCAPE2
, 0, 0 },

79 { 'w', 0, 4, 
ëSQLESCAPE3
, 0, 0 },

80 { 'c', 0, 0, 
ëCHARX
, 0, 0 },

81 { 'o', 8, 0, 
ëRADIX
, 0, 2 },

82 { 'u', 10, 0, 
ëRADIX
, 0, 0 },

83 { 'x', 16, 0, 
ëRADIX
, 16, 1 },

84 { 'X', 16, 0, 
ëRADIX
, 0, 4 },

85 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


86 { 'f', 0, 1, 
ëFLOAT
, 0, 0 },

87 { 'e', 0, 1, 
ëEXP
, 30, 0 },

88 { 'E', 0, 1, 
ëEXP
, 14, 0 },

89 { 'G', 0, 1, 
ëGENERIC
, 14, 0 },

91 { 'i', 10, 1, 
ëRADIX
, 0, 0 },

92 { 'n', 0, 0, 
ëSIZE
, 0, 0 },

93 { '%', 0, 0, 
ëPERCENT
, 0, 0 },

94 { 'p', 16, 0, 
ëPOINTER
, 0, 1 },

98 { 'T', 0, 2, 
ëTOKEN
, 0, 0 },

99 { 'S', 0, 2, 
ëSRCLIST
, 0, 0 },

100 { 'r', 10, 3, 
ëORDINAL
, 0, 0 },

107 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


121 
	$ë_gëdigô
(
LONGDOUBLE_TYPE
 *
vÆ
, *
˙t
){

122 
digô
;

123 
LONGDOUBLE_TYPE
 
d
;

124 if–(*
˙t
)<=0 )  '0';

125 (*
˙t
)--;

126 
digô
 = ()*
vÆ
;

127 
d
 = 
digô
;

128 
digô
 += '0';

129 *
vÆ
 = (*vÆ - 
d
)*10.0;

130  ()
digô
;

131 
	}
}

137 
	$£tSåAccumEº‹
(
SåAccum
 *
p
, 
u8
 
eEº‹
){

138 
	`as£π
–
eEº‹
==
STRACCUM_NOMEM
 ||ÉEº‹==
STRACCUM_TOOBIG
 );

139 
p
->
accEº‹
 = 
eEº‹
;

140 
p
->
nAŒoc
 = 0;

141 
	}
}

146 
sqlôe3_öt64
 
	$gëI¡Arg
(
PrötfArgumíts
 *
p
){

147 if–
p
->
nArg
<ı->
nU£d
 )  0;

148  
	`sqlôe3_vÆue_öt64
(
p
->
≠Arg
[p->
nU£d
++]);

149 
	}
}

150 
	$gëDoubÀArg
(
PrötfArgumíts
 *
p
){

151 if–
p
->
nArg
<ı->
nU£d
 )  0.0;

152  
	`sqlôe3_vÆue_doubÀ
(
p
->
≠Arg
[p->
nU£d
++]);

153 
	}
}

154 *
	$gëTextArg
(
PrötfArgumíts
 *
p
){

155 if–
p
->
nArg
<ı->
nU£d
 )  0;

156  (*)
	`sqlôe3_vÆue_ãxt
(
p
->
≠Arg
[p->
nU£d
++]);

157 
	}
}

164 #i‚de‡
SQLITE_PRINT_BUF_SIZE


165 
	#SQLITE_PRINT_BUF_SIZE
 70

	)

167 
	#ëBUFSIZE
 
SQLITE_PRINT_BUF_SIZE


	)

172 
	$sqlôe3VXPrötf
(

173 
SåAccum
 *
pAccum
,

174 c⁄° *
fmt
,

175 
va_li°
 
≠


177 
c
;

178 *
buÂt
;

179 
¥ecisi⁄
;

180 
Àngth
;

181 
idx
;

182 
width
;

183 
ëByã
 
Êag_À·ju°ify
;

184 
ëByã
 
Êag_∂ussign
;

185 
ëByã
 
Êag_bœnksign
;

186 
ëByã
 
Êag_Æã∫©ef‹m
;

187 
ëByã
 
Êag_Ætf‹m2
;

188 
ëByã
 
Êag_zî›ad
;

189 
ëByã
 
Êag_l⁄g
;

190 
ëByã
 
Êag_l⁄gl⁄g
;

191 
ëByã
 
d⁄e
;

192 
ëByã
 
xty≥
 = 
ëINVALID
;

193 
u8
 
bArgLi°
;

194 
u8
 
u£I¡în
;

195 
¥efix
;

196 
sqlôe_uöt64
 
l⁄gvÆue
;

197 
LONGDOUBLE_TYPE
 
ªÆvÆue
;

198 c⁄° 
ë_öfo
 *
öf›
;

199 *
zOut
;

200 
nOut
;

201 *
zExåa
 = 0;

202 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


203 
exp
, 
e2
;

204 
nsd
;

205 
roundî
;

206 
ëByã
 
Êag_dp
;

207 
ëByã
 
Êag_πz
;

209 
PrötfArgumíts
 *
pArgLi°
 = 0;

210 
buf
[
ëBUFSIZE
];

212 
buÂt
 = 0;

213 if–
pAccum
->
¥ötfFœgs
 ){

214 if–(
bArgLi°
 = (
pAccum
->
¥ötfFœgs
 & 
SQLITE_PRINTF_SQLFUNC
))!=0 ){

215 
pArgLi°
 = 
	`va_¨g
(
≠
, 
PrötfArgumíts
*);

217 
u£I¡în
 = 
pAccum
->
¥ötfFœgs
 & 
SQLITE_PRINTF_INTERNAL
;

219 
bArgLi°
 = 
u£I¡în
 = 0;

221 ; (
c
=(*
fmt
))!=0; ++fmt){

222 if–
c
!='%' ){

223 
buÂt
 = (*)
fmt
;

224 #i‡
HAVE_STRCHRNUL


225 
fmt
 = 
	`°rch∫ul
(fmt, '%');

227 do{ 
fmt
++; } *fmt && *fmt != '%' );

229 
	`sqlôe3SåAccumAµíd
(
pAccum
, 
buÂt
, ()(
fmt
 - bufpt));

230 if–*
fmt
==0 ) ;

232 if–(
c
=(*++
fmt
))==0 ){

233 
	`sqlôe3SåAccumAµíd
(
pAccum
, "%", 1);

237 
Êag_À·ju°ify
 = 
Êag_∂ussign
 = 
Êag_bœnksign
 =

238 
Êag_Æã∫©ef‹m
 = 
Êag_Ætf‹m2
 = 
Êag_zî›ad
 = 0;

239 
d⁄e
 = 0;

241  
c
 ){

242 '-': 
Êag_À·ju°ify
 = 1; ;

243 '+': 
Êag_∂ussign
 = 1; ;

244 ' ': 
Êag_bœnksign
 = 1; ;

245 '#': 
Êag_Æã∫©ef‹m
 = 1; ;

246 '!': 
Êag_Ætf‹m2
 = 1; ;

247 '0': 
Êag_zî›ad
 = 1; ;

248 : 
d⁄e
 = 1; ;

250 } !
d⁄e
 && (
c
=(*++
fmt
))!=0 );

252 if–
c
=='*' ){

253 if–
bArgLi°
 ){

254 
width
 = ()
	`gëI¡Arg
(
pArgLi°
);

256 
width
 = 
	`va_¨g
(
≠
,);

258 if–
width
<0 ){

259 
Êag_À·ju°ify
 = 1;

260 
width
 = width >= -2147483647 ? -width : 0;

262 
c
 = *++
fmt
;

264 
wx
 = 0;

265  
c
>='0' && c<='9' ){

266 
wx
 = wx*10 + 
c
 - '0';

267 
c
 = *++
fmt
;

269 
	`ã°ˇ£
–
wx
>0x7fffffff );

270 
width
 = 
wx
 & 0x7fffffff;

272 
	`as£π
–
width
>=0 );

273 #ifde‡
SQLITE_PRINTF_PRECISION_LIMIT


274 if–
width
>
SQLITE_PRINTF_PRECISION_LIMIT
 ){

275 
width
 = 
SQLITE_PRINTF_PRECISION_LIMIT
;

280 if–
c
=='.' ){

281 
c
 = *++
fmt
;

282 if–
c
=='*' ){

283 if–
bArgLi°
 ){

284 
¥ecisi⁄
 = ()
	`gëI¡Arg
(
pArgLi°
);

286 
¥ecisi⁄
 = 
	`va_¨g
(
≠
,);

288 
c
 = *++
fmt
;

289 if–
¥ecisi⁄
<0 ){

290 
¥ecisi⁄
 =Örecision >= -2147483647 ? -precision : -1;

293 
px
 = 0;

294  
c
>='0' && c<='9' ){

295 
px
 =Öx*10 + 
c
 - '0';

296 
c
 = *++
fmt
;

298 
	`ã°ˇ£
–
px
>0x7fffffff );

299 
¥ecisi⁄
 = 
px
 & 0x7fffffff;

302 
¥ecisi⁄
 = -1;

304 
	`as£π
–
¥ecisi⁄
>=(-1) );

305 #ifde‡
SQLITE_PRINTF_PRECISION_LIMIT


306 if–
¥ecisi⁄
>
SQLITE_PRINTF_PRECISION_LIMIT
 ){

307 
¥ecisi⁄
 = 
SQLITE_PRINTF_PRECISION_LIMIT
;

313 if–
c
=='l' ){

314 
Êag_l⁄g
 = 1;

315 
c
 = *++
fmt
;

316 if–
c
=='l' ){

317 
Êag_l⁄gl⁄g
 = 1;

318 
c
 = *++
fmt
;

320 
Êag_l⁄gl⁄g
 = 0;

323 
Êag_l⁄g
 = 
Êag_l⁄gl⁄g
 = 0;

326 
öf›
 = &
fmtöfo
[0];

327 
xty≥
 = 
ëINVALID
;

328 
idx
=0; idx<
	`AºaySize
(
fmtöfo
); idx++){

329 if–
c
==
fmtöfo
[
idx
].
fmây≥
 ){

330 
öf›
 = &
fmtöfo
[
idx
];

331 if–
u£I¡în
 || (
öf›
->
Êags
 & 
FLAG_INTERN
)==0 ){

332 
xty≥
 = 
öf›
->
ty≥
;

361  
xty≥
 ){

362 
ëPOINTER
:

363 
Êag_l⁄gl⁄g
 = (*)==(
i64
);

364 
Êag_l⁄g
 = (*)==();

366 
ëORDINAL
:

367 
ëRADIX
:

368 if–
öf›
->
Êags
 & 
FLAG_SIGNED
 ){

369 
i64
 
v
;

370 if–
bArgLi°
 ){

371 
v
 = 
	`gëI¡Arg
(
pArgLi°
);

372 }if–
Êag_l⁄gl⁄g
 ){

373 
v
 = 
	`va_¨g
(
≠
,
i64
);

374 }if–
Êag_l⁄g
 ){

375 
v
 = 
	`va_¨g
(
≠
,);

377 
v
 = 
	`va_¨g
(
≠
,);

379 if–
v
<0 ){

380 if–
v
==
SMALLEST_INT64
 ){

381 
l⁄gvÆue
 = ((
u64
)1)<<63;

383 
l⁄gvÆue
 = -
v
;

385 
¥efix
 = '-';

387 
l⁄gvÆue
 = 
v
;

388 if–
Êag_∂ussign
 ) 
¥efix
 = '+';

389 if–
Êag_bœnksign
 ) 
¥efix
 = ' ';

390 
¥efix
 = 0;

393 if–
bArgLi°
 ){

394 
l⁄gvÆue
 = (
u64
)
	`gëI¡Arg
(
pArgLi°
);

395 }if–
Êag_l⁄gl⁄g
 ){

396 
l⁄gvÆue
 = 
	`va_¨g
(
≠
,
u64
);

397 }if–
Êag_l⁄g
 ){

398 
l⁄gvÆue
 = 
	`va_¨g
(
≠
,);

400 
l⁄gvÆue
 = 
	`va_¨g
(
≠
,);

402 
¥efix
 = 0;

404 if–
l⁄gvÆue
==0 ) 
Êag_Æã∫©ef‹m
 = 0;

405 if–
Êag_zî›ad
 && 
¥ecisi⁄
<
width
-(
¥efix
!=0) ){

406 
¥ecisi⁄
 = 
width
-(
¥efix
!=0);

408 if–
¥ecisi⁄
<
ëBUFSIZE
-10 ){

409 
nOut
 = 
ëBUFSIZE
;

410 
zOut
 = 
buf
;

412 
nOut
 = 
¥ecisi⁄
 + 10;

413 
zOut
 = 
zExåa
 = 
	`sqlôe3MÆloc
–
nOut
 );

414 if–
zOut
==0 ){

415 
	`£tSåAccumEº‹
(
pAccum
, 
STRACCUM_NOMEM
);

419 
buÂt
 = &
zOut
[
nOut
-1];

420 if–
xty≥
==
ëORDINAL
 ){

421 c⁄° 
zOrd
[] = "thstndrd";

422 
x
 = ()(
l⁄gvÆue
 % 10);

423 if–
x
>=4 || (
l⁄gvÆue
/10)%10==1 ){

424 
x
 = 0;

426 *(--
buÂt
Ë
zOrd
[
x
*2+1];

427 *(--
buÂt
Ë
zOrd
[
x
*2];

430 c⁄° *
c£t
 = &
aDigôs
[
öf›
->
ch¨£t
];

431 
u8
 
ba£
 = 
öf›
->base;

433 *(--
buÂt
Ë
c£t
[
l⁄gvÆue
%
ba£
];

434 
l⁄gvÆue
 =Ü⁄gvÆue/
ba£
;

435 } 
l⁄gvÆue
>0 );

437 
Àngth
 = ()(&
zOut
[
nOut
-1]-
buÂt
);

438 
idx
=
¥ecisi⁄
-
Àngth
; idx>0; idx--){

439 *(--
buÂt
) = '0';

441 if–
¥efix
 ) *(--
buÂt
) =Örefix;

442 if–
Êag_Æã∫©ef‹m
 && 
öf›
->
¥efix
 ){

443 c⁄° *
¥e
;

444 
x
;

445 
¥e
 = &
aPªfix
[
öf›
->
¥efix
];

446 ; (
x
=(*
¥e
))!=0;Öª++Ë*(--
buÂt
) = x;

448 
Àngth
 = ()(&
zOut
[
nOut
-1]-
buÂt
);

450 
ëFLOAT
:

451 
ëEXP
:

452 
ëGENERIC
:

453 if–
bArgLi°
 ){

454 
ªÆvÆue
 = 
	`gëDoubÀArg
(
pArgLi°
);

456 
ªÆvÆue
 = 
	`va_¨g
(
≠
,);

458 #ifde‡
SQLITE_OMIT_FLOATING_POINT


459 
Àngth
 = 0;

461 if–
¥ecisi⁄
<0 )Örecision = 6;

462 if–
ªÆvÆue
<0.0 ){

463 
ªÆvÆue
 = -realvalue;

464 
¥efix
 = '-';

466 if–
Êag_∂ussign
 ) 
¥efix
 = '+';

467 if–
Êag_bœnksign
 ) 
¥efix
 = ' ';

468 
¥efix
 = 0;

470 if–
xty≥
==
ëGENERIC
 && 
¥ecisi⁄
>0 )Örecision--;

471 
	`ã°ˇ£
–
¥ecisi⁄
>0xfff );

472 
idx
=
¥ecisi⁄
&0xfff, 
roundî
=0.5; idx>0; idx--,Ñounder*=0.1){}

473 if–
xty≥
==
ëFLOAT
 ) 
ªÆvÆue
 +
roundî
;

475 
exp
 = 0;

476 if–
	`sqlôe3IsNaN
(()
ªÆvÆue
) ){

477 
buÂt
 = "NaN";

478 
Àngth
 = 3;

481 if–
ªÆvÆue
>0.0 ){

482 
LONGDOUBLE_TYPE
 
sˇÀ
 = 1.0;

483  
ªÆvÆue
>=1e100*
sˇÀ
 && 
exp
<=350 ){ scale *= 1e100;exp+=100;}

484  
ªÆvÆue
>=1e10*
sˇÀ
 && 
exp
<=350 ){ scale *= 1e10;Éxp+=10; }

485  
ªÆvÆue
>=10.0*
sˇÀ
 && 
exp
<=350 ){ scale *= 10.0;Éxp++; }

486 
ªÆvÆue
 /
sˇÀ
;

487  
ªÆvÆue
<1e-8 ){ÑólvÆuê*1e8; 
exp
-=8; }

488  
ªÆvÆue
<1.0 ){ÑólvÆuê*10.0; 
exp
--; }

489 if–
exp
>350 ){

490 
buÂt
 = 
buf
;

491 
buf
[0] = 
¥efix
;

492 
	`mem˝y
(
buf
+(
¥efix
!=0),"Inf",4);

493 
Àngth
 = 3+(
¥efix
!=0);

497 
buÂt
 = 
buf
;

502 if–
xty≥
!=
ëFLOAT
 ){

503 
ªÆvÆue
 +
roundî
;

504 if–
ªÆvÆue
>=10.0 ){ÑólvÆuê*0.1; 
exp
++; }

506 if–
xty≥
==
ëGENERIC
 ){

507 
Êag_πz
 = !
Êag_Æã∫©ef‹m
;

508 if–
exp
<-4 ||Éxp>
¥ecisi⁄
 ){

509 
xty≥
 = 
ëEXP
;

511 
¥ecisi⁄
 =Öªcisi⁄ - 
exp
;

512 
xty≥
 = 
ëFLOAT
;

515 
Êag_πz
 = 
Êag_Ætf‹m2
;

517 if–
xty≥
==
ëEXP
 ){

518 
e2
 = 0;

520 
e2
 = 
exp
;

522 if–
	`MAX
(
e2
,0)+(
i64
)
¥ecisi⁄
+(i64)
width
 > 
ëBUFSIZE
 - 15 ){

523 
buÂt
 = 
zExåa


524 
	`sqlôe3MÆloc
–
	`MAX
(
e2
,0)+(
i64
)
¥ecisi⁄
+(i64)
width
+15 );

525 if–
buÂt
==0 ){

526 
	`£tSåAccumEº‹
(
pAccum
, 
STRACCUM_NOMEM
);

530 
zOut
 = 
buÂt
;

531 
nsd
 = 16 + 
Êag_Ætf‹m2
*10;

532 
Êag_dp
 = (
¥ecisi⁄
>0 ?1:0Ë| 
Êag_Æã∫©ef‹m
 | 
Êag_Ætf‹m2
;

534 if–
¥efix
 ){

535 *(
buÂt
++Ë
¥efix
;

538 if–
e2
<0 ){

539 *(
buÂt
++) = '0';

541 ; 
e2
>=0;É2--){

542 *(
buÂt
++Ë
	`ë_gëdigô
(&
ªÆvÆue
,&
nsd
);

546 if–
Êag_dp
 ){

547 *(
buÂt
++) = '.';

551 
e2
++;É2<0; 
¥ecisi⁄
--,É2++){

552 
	`as£π
–
¥ecisi⁄
>0 );

553 *(
buÂt
++) = '0';

556  (
¥ecisi⁄
--)>0 ){

557 *(
buÂt
++Ë
	`ë_gëdigô
(&
ªÆvÆue
,&
nsd
);

560 if–
Êag_πz
 && 
Êag_dp
 ){

561  
buÂt
[-1]=='0' ) *(--bufpt) = 0;

562 
	`as£π
–
buÂt
>
zOut
 );

563 if–
buÂt
[-1]=='.' ){

564 if–
Êag_Ætf‹m2
 ){

565 *(
buÂt
++) = '0';

567 *(--
buÂt
) = 0;

572 if–
xty≥
==
ëEXP
 ){

573 *(
buÂt
++Ë
aDigôs
[
öf›
->
ch¨£t
];

574 if–
exp
<0 ){

575 *(
buÂt
++Ë'-'; 
exp
 = -exp;

577 *(
buÂt
++) = '+';

579 if–
exp
>=100 ){

580 *(
buÂt
++Ë()((
exp
/100)+'0');

581 
exp
 %= 100;

583 *(
buÂt
++Ë()(
exp
/10+'0');

584 *(
buÂt
++Ë()(
exp
%10+'0');

586 *
buÂt
 = 0;

591 
Àngth
 = ()(
buÂt
-
zOut
);

592 
buÂt
 = 
zOut
;

596 if–
Êag_zî›ad
 && !
Êag_À·ju°ify
 && 
Àngth
 < 
width
){

597 
i
;

598 
nPad
 = 
width
 - 
Àngth
;

599 
i
=
width
; i>=
nPad
; i--){

600 
buÂt
[
i
] = buÂt[i-
nPad
];

602 
i
 = 
¥efix
!=0;

603  
nPad
-- ) 
buÂt
[
i
++] = '0';

604 
Àngth
 = 
width
;

608 
ëSIZE
:

609 if–!
bArgLi°
 ){

610 *(
	`va_¨g
(
≠
,*)Ë
pAccum
->
nCh¨
;

612 
Àngth
 = 
width
 = 0;

614 
ëPERCENT
:

615 
buf
[0] = '%';

616 
buÂt
 = 
buf
;

617 
Àngth
 = 1;

619 
ëCHARX
:

620 if–
bArgLi°
 ){

621 
buÂt
 = 
	`gëTextArg
(
pArgLi°
);

622 
c
 = 
buÂt
 ? bufpt[0] : 0;

624 
c
 = 
	`va_¨g
(
≠
,);

626 if–
¥ecisi⁄
>1 ){

627 
width
 -
¥ecisi⁄
-1;

628 if–
width
>1 && !
Êag_À·ju°ify
 ){

629 
	`sqlôe3AµídCh¨
(
pAccum
, 
width
-1, ' ');

630 
width
 = 0;

632 
	`sqlôe3AµídCh¨
(
pAccum
, 
¥ecisi⁄
-1, 
c
);

634 
Àngth
 = 1;

635 
buf
[0] = 
c
;

636 
buÂt
 = 
buf
;

638 
ëSTRING
:

639 
ëDYNSTRING
:

640 if–
bArgLi°
 ){

641 
buÂt
 = 
	`gëTextArg
(
pArgLi°
);

642 
xty≥
 = 
ëSTRING
;

644 
buÂt
 = 
	`va_¨g
(
≠
,*);

646 if–
buÂt
==0 ){

647 
buÂt
 = "";

648 }if–
xty≥
==
ëDYNSTRING
 ){

649 
zExåa
 = 
buÂt
;

651 if–
¥ecisi⁄
>=0 ){

652 
Àngth
=0;Üígth<
¥ecisi⁄
 && 
buÂt
[length];Üength++){}

654 
Àngth
 = 
	`sqlôe3SåÀn30
(
buÂt
);

657 
ëSQLESCAPE
:

658 
ëSQLESCAPE2
:

659 
ëSQLESCAPE3
: {

660 
i
, 
j
, 
k
, 
n
, 
i¢uŒ
;

661 
√edQuŸe
;

662 
ch
;

663 
q
 = ((
xty≥
==
ëSQLESCAPE3
)?'"':'\'');

664 *
esˇrg
;

666 if–
bArgLi°
 ){

667 
esˇrg
 = 
	`gëTextArg
(
pArgLi°
);

669 
esˇrg
 = 
	`va_¨g
(
≠
,*);

671 
i¢uŒ
 = 
esˇrg
==0;

672 if–
i¢uŒ
 ) 
esˇrg
 = (
xty≥
==
ëSQLESCAPE2
 ? "NULL" : "(NULL)");

673 
k
 = 
¥ecisi⁄
;

674 
i
=
n
=0; 
k
!=0 && (
ch
=
esˇrg
[i])!=0; i++, k--){

675 if–
ch
==
q
 ) 
n
++;

677 
√edQuŸe
 = !
i¢uŒ
 && 
xty≥
==
ëSQLESCAPE2
;

678 
n
 +
i
 + 3;

679 if–
n
>
ëBUFSIZE
 ){

680 
buÂt
 = 
zExåa
 = 
	`sqlôe3MÆloc
–
n
 );

681 if–
buÂt
==0 ){

682 
	`£tSåAccumEº‹
(
pAccum
, 
STRACCUM_NOMEM
);

686 
buÂt
 = 
buf
;

688 
j
 = 0;

689 if–
√edQuŸe
 ) 
buÂt
[
j
++] = 
q
;

690 
k
 = 
i
;

691 
i
=0; i<
k
; i++){

692 
buÂt
[
j
++] = 
ch
 = 
esˇrg
[
i
];

693 if–
ch
==
q
 ) 
buÂt
[
j
++] = ch;

695 if–
√edQuŸe
 ) 
buÂt
[
j
++] = 
q
;

696 
buÂt
[
j
] = 0;

697 
Àngth
 = 
j
;

703 
ëTOKEN
: {

704 
Tokí
 *
pTokí
 = 
	`va_¨g
(
≠
, Token*);

705 
	`as£π
–
bArgLi°
==0 );

706 if–
pTokí
 &&ÖTokí->
n
 ){

707 
	`sqlôe3SåAccumAµíd
(
pAccum
, (c⁄° *)
pTokí
->
z
,ÖTokí->
n
);

709 
Àngth
 = 
width
 = 0;

712 
ëSRCLIST
: {

713 
SrcLi°
 *
pSrc
 = 
	`va_¨g
(
≠
, SrcList*);

714 
k
 = 
	`va_¨g
(
≠
, );

715 
SrcLi°_ôem
 *
pIãm
 = &
pSrc
->
a
[
k
];

716 
	`as£π
–
bArgLi°
==0 );

717 
	`as£π
–
k
>=0 && k<
pSrc
->
nSrc
 );

718 if–
pIãm
->
zD©aba£
 ){

719 
	`sqlôe3SåAccumAµídAŒ
(
pAccum
, 
pIãm
->
zD©aba£
);

720 
	`sqlôe3SåAccumAµíd
(
pAccum
, ".", 1);

722 
	`sqlôe3SåAccumAµídAŒ
(
pAccum
, 
pIãm
->
zName
);

723 
Àngth
 = 
width
 = 0;

727 
	`as£π
–
xty≥
==
ëINVALID
 );

736 
width
 -
Àngth
;

737 if–
width
>0 && !
Êag_À·ju°ify
 ) 
	`sqlôe3AµídCh¨
(
pAccum
, width, ' ');

738 
	`sqlôe3SåAccumAµíd
(
pAccum
, 
buÂt
, 
Àngth
);

739 if–
width
>0 && 
Êag_À·ju°ify
 ) 
	`sqlôe3AµídCh¨
(
pAccum
, width, ' ');

741 if–
zExåa
 ){

742 
	`sqlôe3DbFªe
(
pAccum
->
db
, 
zExåa
);

743 
zExåa
 = 0;

746 
	}
}

755 
	$sqlôe3SåAccumE∆¨ge
(
SåAccum
 *
p
, 
N
){

756 *
zNew
;

757 
	`as£π
–
p
->
nCh¨
+(
i64
)
N
 >p->
nAŒoc
 );

758 if–
p
->
accEº‹
 ){

759 
	`ã°ˇ£
(
p
->
accEº‹
==
STRACCUM_TOOBIG
);

760 
	`ã°ˇ£
(
p
->
accEº‹
==
STRACCUM_NOMEM
);

763 if–
p
->
mxAŒoc
==0 ){

764 
N
 = 
p
->
nAŒoc
 -Ö->
nCh¨
 - 1;

765 
	`£tSåAccumEº‹
(
p
, 
STRACCUM_TOOBIG
);

766  
N
;

768 *
zOld
 = 
	`isMÆlo˚d
(
p
Ë?Ö->
zText
 : 0;

769 
i64
 
szNew
 = 
p
->
nCh¨
;

770 
	`as£π
–(
p
->
zText
==0 ||Ö->zText=ı->
zBa£
)==!
	`isMÆlo˚d
(p) );

771 
szNew
 +
N
 + 1;

772 if–
szNew
+
p
->
nCh¨
<ı->
mxAŒoc
 ){

775 
szNew
 +
p
->
nCh¨
;

777 if–
szNew
 > 
p
->
mxAŒoc
 ){

778 
	`sqlôe3SåAccumRe£t
(
p
);

779 
	`£tSåAccumEº‹
(
p
, 
STRACCUM_TOOBIG
);

782 
p
->
nAŒoc
 = ()
szNew
;

784 if–
p
->
db
 ){

785 
zNew
 = 
	`sqlôe3DbRóŒoc
(
p
->
db
, 
zOld
,Ö->
nAŒoc
);

787 
zNew
 = 
	`sqlôe3_ªÆloc64
(
zOld
, 
p
->
nAŒoc
);

789 if–
zNew
 ){

790 
	`as£π
–
p
->
zText
!=0 ||Ö->
nCh¨
==0 );

791 if–!
	`isMÆlo˚d
(
p
Ë&&Ö->
nCh¨
>0 ) 
	`mem˝y
(
zNew
,Ö->
zText
,Ö->nChar);

792 
p
->
zText
 = 
zNew
;

793 
p
->
nAŒoc
 = 
	`sqlôe3DbMÆlocSize
’->
db
, 
zNew
);

794 
p
->
¥ötfFœgs
 |
SQLITE_PRINTF_MALLOCED
;

796 
	`sqlôe3SåAccumRe£t
(
p
);

797 
	`£tSåAccumEº‹
(
p
, 
STRACCUM_NOMEM
);

801  
N
;

802 
	}
}

807 
	$sqlôe3AµídCh¨
(
SåAccum
 *
p
, 
N
, 
c
){

808 
	`ã°ˇ£
–
p
->
nCh¨
 + (
i64
)
N
 > 0x7fffffff );

809 if–
p
->
nCh¨
+(
i64
)
N
 >p->
nAŒoc
 && (N = 
	`sqlôe3SåAccumE∆¨ge
(p, N))<=0 ){

812 
	`as£π
–(
p
->
zText
=ı->
zBa£
)==!
	`isMÆlo˚d
(p) );

813  (
N
--)>0 ) 
p
->
zText
[p->
nCh¨
++] = 
c
;

814 
	}
}

824 
SQLITE_NOINLINE
 
	$íœrgeAndAµíd
(
SåAccum
 *
p
, c⁄° *
z
, 
N
){

825 
N
 = 
	`sqlôe3SåAccumE∆¨ge
(
p
, N);

826 if–
N
>0 ){

827 
	`mem˝y
(&
p
->
zText
[p->
nCh¨
], 
z
, 
N
);

828 
p
->
nCh¨
 +
N
;

830 
	`as£π
–(
p
->
zText
==0 ||Ö->zText=ı->
zBa£
)==!
	`isMÆlo˚d
(p) );

831 
	}
}

837 
	$sqlôe3SåAccumAµíd
(
SåAccum
 *
p
, c⁄° *
z
, 
N
){

838 
	`as£π
–
z
!=0 || 
N
==0 );

839 
	`as£π
–
p
->
zText
!=0 ||Ö->
nCh¨
==0 ||Ö->
accEº‹
 );

840 
	`as£π
–
N
>=0 );

841 
	`as£π
–
p
->
accEº‹
==0 ||Ö->
nAŒoc
==0 );

842 if–
p
->
nCh¨
+
N
 >p->
nAŒoc
 ){

843 
	`íœrgeAndAµíd
(
p
,
z
,
N
);

844 }if–
N
 ){

845 
	`as£π
–
p
->
zText
 );

846 
p
->
nCh¨
 +
N
;

847 
	`mem˝y
(&
p
->
zText
[p->
nCh¨
-
N
], 
z
, N);

849 
	}
}

854 
	$sqlôe3SåAccumAµídAŒ
(
SåAccum
 *
p
, c⁄° *
z
){

855 
	`sqlôe3SåAccumAµíd
(
p
, 
z
, 
	`sqlôe3SåÀn30
(z));

856 
	}
}

864 
SQLITE_NOINLINE
 *
	$°rAccumFöishRóŒoc
(
SåAccum
 *
p
){

865 
	`as£π
–
p
->
mxAŒoc
>0 && !
	`isMÆlo˚d
(p) );

866 
p
->
zText
 = 
	`sqlôe3DbMÆlocRaw
’->
db
,Ö->
nCh¨
+1 );

867 if–
p
->
zText
 ){

868 
	`mem˝y
(
p
->
zText
,Ö->
zBa£
,Ö->
nCh¨
+1);

869 
p
->
¥ötfFœgs
 |
SQLITE_PRINTF_MALLOCED
;

871 
	`£tSåAccumEº‹
(
p
, 
STRACCUM_NOMEM
);

873  
p
->
zText
;

874 
	}
}

875 *
	$sqlôe3SåAccumFöish
(
SåAccum
 *
p
){

876 if–
p
->
zText
 ){

877 
	`as£π
–(
p
->
zText
=ı->
zBa£
)==!
	`isMÆlo˚d
(p) );

878 
p
->
zText
[p->
nCh¨
] = 0;

879 if–
p
->
mxAŒoc
>0 && !
	`isMÆlo˚d
(p) ){

880  
	`°rAccumFöishRóŒoc
(
p
);

883  
p
->
zText
;

884 
	}
}

889 
	$sqlôe3SåAccumRe£t
(
SåAccum
 *
p
){

890 
	`as£π
–(
p
->
zText
==0 ||Ö->zText=ı->
zBa£
)==!
	`isMÆlo˚d
(p) );

891 if–
	`isMÆlo˚d
(
p
) ){

892 
	`sqlôe3DbFªe
(
p
->
db
,Ö->
zText
);

893 
p
->
¥ötfFœgs
 &~
SQLITE_PRINTF_MALLOCED
;

895 
p
->
zText
 = 0;

896 
	}
}

912 
	$sqlôe3SåAccumInô
(
SåAccum
 *
p
, 
sqlôe3
 *
db
, *
zBa£
, 
n
, 
mx
){

913 
p
->
zText
 =Ö->
zBa£
 = zBase;

914 
p
->
db
 = db;

915 
p
->
nCh¨
 = 0;

916 
p
->
nAŒoc
 = 
n
;

917 
p
->
mxAŒoc
 = 
mx
;

918 
p
->
accEº‹
 = 0;

919 
p
->
¥ötfFœgs
 = 0;

920 
	}
}

926 *
	$sqlôe3VMPrötf
(
sqlôe3
 *
db
, c⁄° *
zF‹m©
, 
va_li°
 
≠
){

927 *
z
;

928 
zBa£
[
SQLITE_PRINT_BUF_SIZE
];

929 
SåAccum
 
acc
;

930 
	`as£π
–
db
!=0 );

931 
	`sqlôe3SåAccumInô
(&
acc
, 
db
, 
zBa£
, (zBase),

932 
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
]);

933 
acc
.
¥ötfFœgs
 = 
SQLITE_PRINTF_INTERNAL
;

934 
	`sqlôe3VXPrötf
(&
acc
, 
zF‹m©
, 
≠
);

935 
z
 = 
	`sqlôe3SåAccumFöish
(&
acc
);

936 if–
acc
.
accEº‹
==
STRACCUM_NOMEM
 ){

937 
	`sqlôe3OomFau…
(
db
);

939  
z
;

940 
	}
}

946 *
	$sqlôe3MPrötf
(
sqlôe3
 *
db
, c⁄° *
zF‹m©
, ...){

947 
va_li°
 
≠
;

948 *
z
;

949 
	`va_°¨t
(
≠
, 
zF‹m©
);

950 
z
 = 
	`sqlôe3VMPrötf
(
db
, 
zF‹m©
, 
≠
);

951 
	`va_íd
(
≠
);

952  
z
;

953 
	}
}

959 *
	$sqlôe3_vm¥ötf
(c⁄° *
zF‹m©
, 
va_li°
 
≠
){

960 *
z
;

961 
zBa£
[
SQLITE_PRINT_BUF_SIZE
];

962 
SåAccum
 
acc
;

964 #ifde‡
SQLITE_ENABLE_API_ARMOR


965 if–
zF‹m©
==0 ){

966 ()
SQLITE_MISUSE_BKPT
;

970 #i‚de‡
SQLITE_OMIT_AUTOINIT


971 if–
	`sqlôe3_öôülize
() )  0;

973 
	`sqlôe3SåAccumInô
(&
acc
, 0, 
zBa£
, (zBa£), 
SQLITE_MAX_LENGTH
);

974 
	`sqlôe3VXPrötf
(&
acc
, 
zF‹m©
, 
≠
);

975 
z
 = 
	`sqlôe3SåAccumFöish
(&
acc
);

976  
z
;

977 
	}
}

983 *
	$sqlôe3_m¥ötf
(c⁄° *
zF‹m©
, ...){

984 
va_li°
 
≠
;

985 *
z
;

986 #i‚de‡
SQLITE_OMIT_AUTOINIT


987 if–
	`sqlôe3_öôülize
() )  0;

989 
	`va_°¨t
(
≠
, 
zF‹m©
);

990 
z
 = 
	`sqlôe3_vm¥ötf
(
zF‹m©
, 
≠
);

991 
	`va_íd
(
≠
);

992  
z
;

993 
	}
}

1008 *
	$sqlôe3_v¢¥ötf
(
n
, *
zBuf
, c⁄° *
zF‹m©
, 
va_li°
 
≠
){

1009 
SåAccum
 
acc
;

1010 if–
n
<=0 )  
zBuf
;

1011 #ifde‡
SQLITE_ENABLE_API_ARMOR


1012 if–
zBuf
==0 || 
zF‹m©
==0 ) {

1013 ()
SQLITE_MISUSE_BKPT
;

1014 if–
zBuf
 ) zBuf[0] = 0;

1015  
zBuf
;

1018 
	`sqlôe3SåAccumInô
(&
acc
, 0, 
zBuf
, 
n
, 0);

1019 
	`sqlôe3VXPrötf
(&
acc
, 
zF‹m©
, 
≠
);

1020 
zBuf
[
acc
.
nCh¨
] = 0;

1021  
zBuf
;

1022 
	}
}

1023 *
	$sqlôe3_¢¥ötf
(
n
, *
zBuf
, c⁄° *
zF‹m©
, ...){

1024 *
z
;

1025 
va_li°
 
≠
;

1026 
	`va_°¨t
(
≠
,
zF‹m©
);

1027 
z
 = 
	`sqlôe3_v¢¥ötf
(
n
, 
zBuf
, 
zF‹m©
, 
≠
);

1028 
	`va_íd
(
≠
);

1029  
z
;

1030 
	}
}

1046 
	$ªndîLogMsg
(
iEºCode
, c⁄° *
zF‹m©
, 
va_li°
 
≠
){

1047 
SåAccum
 
acc
;

1048 
zMsg
[
SQLITE_PRINT_BUF_SIZE
*3];

1050 
	`sqlôe3SåAccumInô
(&
acc
, 0, 
zMsg
, (zMsg), 0);

1051 
	`sqlôe3VXPrötf
(&
acc
, 
zF‹m©
, 
≠
);

1052 
sqlôe3GlobÆC⁄fig
.
	`xLog
(sqlôe3GlobÆC⁄fig.
pLogArg
, 
iEºCode
,

1053 
	`sqlôe3SåAccumFöish
(&
acc
));

1054 
	}
}

1059 
	$sqlôe3_log
(
iEºCode
, c⁄° *
zF‹m©
, ...){

1060 
va_li°
 
≠
;

1061 if–
sqlôe3GlobÆC⁄fig
.
xLog
 ){

1062 
	`va_°¨t
(
≠
, 
zF‹m©
);

1063 
	`ªndîLogMsg
(
iEºCode
, 
zF‹m©
, 
≠
);

1064 
	`va_íd
(
≠
);

1066 
	}
}

1068 #i‡
deföed
(
SQLITE_DEBUG
Ë|| deföed(
SQLITE_HAVE_OS_TRACE
)

1074 
	$sqlôe3DebugPrötf
(c⁄° *
zF‹m©
, ...){

1075 
va_li°
 
≠
;

1076 
SåAccum
 
acc
;

1077 
zBuf
[500];

1078 
	`sqlôe3SåAccumInô
(&
acc
, 0, 
zBuf
, (zBuf), 0);

1079 
	`va_°¨t
(
≠
,
zF‹m©
);

1080 
	`sqlôe3VXPrötf
(&
acc
, 
zF‹m©
, 
≠
);

1081 
	`va_íd
(
≠
);

1082 
	`sqlôe3SåAccumFöish
(&
acc
);

1083 
	`Ârötf
(
°dout
,"%s", 
zBuf
);

1084 
	`fÊush
(
°dout
);

1085 
	}
}

1093 
	$sqlôe3XPrötf
(
SåAccum
 *
p
, c⁄° *
zF‹m©
, ...){

1094 
va_li°
 
≠
;

1095 
	`va_°¨t
(
≠
,
zF‹m©
);

1096 
	`sqlôe3VXPrötf
(
p
, 
zF‹m©
, 
≠
);

1097 
	`va_íd
(
≠
);

1098 
	}
}

	@random.c

18 
	~"sqlôeI¡.h
"

24 
SQLITE_WSD
 
	ssqlôe3P∫gTy≥
 {

25 
	misInô
;

26 
	mi
, 
	mj
;

27 
	ms
[256];

28 } 
	gsqlôe3P∫g
;

33 
	$sqlôe3_øndom√ss
(
N
, *
pBuf
){

34 
t
;

35 *
zBuf
 = 
pBuf
;

43 #ifde‡
SQLITE_OMIT_WSD


44 
sqlôe3P∫gTy≥
 *
p
 = &
	`GLOBAL
(sqlôe3P∫gTy≥, 
sqlôe3P∫g
);

45 
	#wsdP∫g
 
p
[0]

	)

47 
	#wsdP∫g
 
sqlôe3P∫g


	)

50 #i‡
SQLITE_THREADSAFE


51 
sqlôe3_muãx
 *
muãx
;

54 #i‚de‡
SQLITE_OMIT_AUTOINIT


55 if–
	`sqlôe3_öôülize
() ) ;

58 #i‡
SQLITE_THREADSAFE


59 
muãx
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_PRNG
);

62 
	`sqlôe3_muãx_íãr
(
muãx
);

63 if–
N
<=0 || 
pBuf
==0 ){

64 
wsdP∫g
.
isInô
 = 0;

65 
	`sqlôe3_muãx_Àave
(
muãx
);

78 if–!
wsdP∫g
.
isInô
 ){

79 
i
;

80 
k
[256];

81 
wsdP∫g
.
j
 = 0;

82 
wsdP∫g
.
i
 = 0;

83 
	`sqlôe3OsR™dom√ss
(
	`sqlôe3_vfs_föd
(0), 256, 
k
);

84 
i
=0; i<256; i++){

85 
wsdP∫g
.
s
[
i
] = (
u8
)i;

87 
i
=0; i<256; i++){

88 
wsdP∫g
.
j
 +wsdP∫g.
s
[
i
] + 
k
[i];

89 
t
 = 
wsdP∫g
.
s
[wsdP∫g.
j
];

90 
wsdP∫g
.
s
[wsdP∫g.
j
] = wsdP∫g.s[
i
];

91 
wsdP∫g
.
s
[
i
] = 
t
;

93 
wsdP∫g
.
isInô
 = 1;

96 
	`as£π
–
N
>0 );

98 
wsdP∫g
.
i
++;

99 
t
 = 
wsdP∫g
.
s
[wsdP∫g.
i
];

100 
wsdP∫g
.
j
 +
t
;

101 
wsdP∫g
.
s
[wsdP∫g.
i
] = wsdP∫g.s[wsdP∫g.
j
];

102 
wsdP∫g
.
s
[wsdP∫g.
j
] = 
t
;

103 
t
 +
wsdP∫g
.
s
[wsdP∫g.
i
];

104 *(
zBuf
++Ë
wsdP∫g
.
s
[
t
];

105 } --
N
 );

106 
	`sqlôe3_muãx_Àave
(
muãx
);

107 
	}
}

109 #i‚de‡
SQLITE_UNTESTABLE


119 
SQLITE_WSD
 
sqlôe3P∫gTy≥
 
	gsqlôe3SavedP∫g
;

120 
	$sqlôe3P∫gSaveSèã
(){

121 
	`mem˝y
(

122 &
	`GLOBAL
(
sqlôe3P∫gTy≥
, 
sqlôe3SavedP∫g
),

123 &
	`GLOBAL
(
sqlôe3P∫gTy≥
, 
sqlôe3P∫g
),

124 (
sqlôe3P∫g
)

126 
	}
}

127 
	$sqlôe3P∫gRe°‹eSèã
(){

128 
	`mem˝y
(

129 &
	`GLOBAL
(
sqlôe3P∫gTy≥
, 
sqlôe3P∫g
),

130 &
	`GLOBAL
(
sqlôe3P∫gTy≥
, 
sqlôe3SavedP∫g
),

131 (
sqlôe3P∫g
)

133 
	}
}

	@resolve.c

17 
	~"sqlôeI¡.h
"

18 
	~<°dlib.h
>

19 
	~<°rög.h
>

30 
	$ö¸AggDïth
(
WÆkî
 *
pWÆkî
, 
Ex¥
 *
pEx¥
){

31 if–
pEx¥
->
›
==
TK_AGG_FUNCTION
 )ÖEx¥->
›2
 +
pWÆkî
->
u
.
n
;

32  
WRC_C⁄töue
;

33 
	}
}

34 
	$ö¸AggFun˘i⁄Dïth
(
Ex¥
 *
pEx¥
, 
N
){

35 if–
N
>0 ){

36 
WÆkî
 
w
;

37 
	`mem£t
(&
w
, 0, (w));

38 
w
.
xEx¥CÆlback
 = 
ö¸AggDïth
;

39 
w
.
u
.
n
 = 
N
;

40 
	`sqlôe3WÆkEx¥
(&
w
, 
pEx¥
);

42 
	}
}

63 
	$ªsﬁveAlüs
(

64 
P¨£
 *
pP¨£
,

65 
Ex¥Li°
 *
pELi°
,

66 
iCﬁ
,

67 
Ex¥
 *
pEx¥
,

68 c⁄° *
zTy≥
,

69 
nSubquîy


71 
Ex¥
 *
pOrig
;

72 
Ex¥
 *
pDup
;

73 
sqlôe3
 *
db
;

75 
	`as£π
–
iCﬁ
>=0 && iCﬁ<
pELi°
->
nEx¥
 );

76 
pOrig
 = 
pELi°
->
a
[
iCﬁ
].
pEx¥
;

77 
	`as£π
–
pOrig
!=0 );

78 
db
 = 
pP¨£
->db;

79 
pDup
 = 
	`sqlôe3Ex¥Dup
(
db
, 
pOrig
, 0);

80 if–
pDup
==0 ) ;

81 if–
zTy≥
[0]!='G' ) 
	`ö¸AggFun˘i⁄Dïth
(
pDup
, 
nSubquîy
);

82 if–
pEx¥
->
›
==
TK_COLLATE
 ){

83 
pDup
 = 
	`sqlôe3Ex¥AddCﬁœãSåög
(
pP¨£
,ÖDup, 
pEx¥
->
u
.
zTokí
);

85 
	`Ex¥SëPr›îty
(
pDup
, 
EP_Alüs
);

94 
	`Ex¥SëPr›îty
(
pEx¥
, 
EP_Sètic
);

95 
	`sqlôe3Ex¥Dñëe
(
db
, 
pEx¥
);

96 
	`mem˝y
(
pEx¥
, 
pDup
, (*pExpr));

97 if–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_I¡VÆue
Ë&&ÖEx¥->
u
.
zTokí
!=0 ){

98 
	`as£π
–(
pEx¥
->
Êags
 & (
EP_Redu˚d
|
EP_TokíO∆y
))==0 );

99 
pEx¥
->
u
.
zTokí
 = 
	`sqlôe3DbSåDup
(
db
,ÖExpr->u.zToken);

100 
pEx¥
->
Êags
 |
EP_MemTokí
;

102 
	`sqlôe3DbFªe
(
db
, 
pDup
);

103 
	}
}

112 
	$«meInUsögCœu£
(
IdLi°
 *
pUsög
, c⁄° *
zCﬁ
){

113 if–
pUsög
 ){

114 
k
;

115 
k
=0; k<
pUsög
->
nId
; k++){

116 if–
	`sqlôe3SåICmp
(
pUsög
->
a
[
k
].
zName
, 
zCﬁ
)==0 )  1;

120 
	}
}

129 
	$sqlôe3M©chS∑nName
(

130 c⁄° *
zS∑n
,

131 c⁄° *
zCﬁ
,

132 c⁄° *
zTab
,

133 c⁄° *
zDb


135 
n
;

136 
n
=0; 
	`ALWAYS
(
zS∑n
[n]) && zSpan[n]!='.';Ç++){}

137 if–
zDb
 && (
	`sqlôe3SåNICmp
(
zS∑n
, zDb, 
n
)!=0 || zDb[n]!=0) ){

140 
zS∑n
 +
n
+1;

141 
n
=0; 
	`ALWAYS
(
zS∑n
[n]) && zSpan[n]!='.';Ç++){}

142 if–
zTab
 && (
	`sqlôe3SåNICmp
(
zS∑n
, zTab, 
n
)!=0 || zTab[n]!=0) ){

145 
zS∑n
 +
n
+1;

146 if–
zCﬁ
 && 
	`sqlôe3SåICmp
(
zS∑n
, zCol)!=0 ){

150 
	}
}

179 
	$lookupName
(

180 
P¨£
 *
pP¨£
,

181 c⁄° *
zDb
,

182 c⁄° *
zTab
,

183 c⁄° *
zCﬁ
,

184 
NameC⁄ãxt
 *
pNC
,

185 
Ex¥
 *
pEx¥


187 
i
, 
j
;

188 
˙t
 = 0;

189 
˙tTab
 = 0;

190 
nSubquîy
 = 0;

191 
sqlôe3
 *
db
 = 
pP¨£
->db;

192 
SrcLi°_ôem
 *
pIãm
;

193 
SrcLi°_ôem
 *
pM©ch
 = 0;

194 
NameC⁄ãxt
 *
pT›NC
 = 
pNC
;

195 
Schema
 *
pSchema
 = 0;

196 
isTriggî
 = 0;

197 
TabÀ
 *
pTab
 = 0;

198 
Cﬁumn
 *
pCﬁ
;

200 
	`as£π
–
pNC
 );

201 
	`as£π
–
zCﬁ
 );

202 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_TokíO∆y
|
EP_Redu˚d
) );

205 
pEx¥
->
iTabÀ
 = -1;

206 
pEx¥
->
pTab
 = 0;

207 
	`Ex¥SëVVAPr›îty
(
pEx¥
, 
EP_NoRedu˚
);

213 if–
zDb
 ){

214 
	`ã°ˇ£
–
pNC
->
ncFœgs
 & 
NC_P¨tIdx
 );

215 
	`ã°ˇ£
–
pNC
->
ncFœgs
 & 
NC_IsCheck
 );

216 if–(
pNC
->
ncFœgs
 & (
NC_P¨tIdx
|
NC_IsCheck
))!=0 ){

221 
zDb
 = 0;

223 
i
=0; i<
db
->
nDb
; i++){

224 
	`as£π
–
db
->
aDb
[
i
].
zDbSName
 );

225 if–
	`sqlôe3SåICmp
(
db
->
aDb
[
i
].
zDbSName
,
zDb
)==0 ){

226 
pSchema
 = 
db
->
aDb
[
i
].pSchema;

234  
pNC
 && 
˙t
==0 ){

235 
Ex¥Li°
 *
pELi°
;

236 
SrcLi°
 *
pSrcLi°
 = 
pNC
->pSrcList;

238 if–
pSrcLi°
 ){

239 
i
=0, 
pIãm
=
pSrcLi°
->
a
; i<pSrcLi°->
nSrc
; i++,ÖItem++){

240 
pTab
 = 
pIãm
->pTab;

241 
	`as£π
–
pTab
!=0 &&ÖTab->
zName
!=0 );

242 
	`as£π
–
pTab
->
nCﬁ
>0 );

243 if–
pIãm
->
pSñe˘
 && (pIãm->pSñe˘->
£lFœgs
 & 
SF_Ne°edFrom
)!=0 ){

244 
hô
 = 0;

245 
pELi°
 = 
pIãm
->
pSñe˘
->pEList;

246 
j
=0; j<
pELi°
->
nEx¥
; j++){

247 if–
	`sqlôe3M©chS∑nName
(
pELi°
->
a
[
j
].
zS∑n
, 
zCﬁ
, 
zTab
, 
zDb
) ){

248 
˙t
++;

249 
˙tTab
 = 2;

250 
pM©ch
 = 
pIãm
;

251 
pEx¥
->
iCﬁumn
 = 
j
;

252 
hô
 = 1;

255 if–
hô
 || 
zTab
==0 ) ;

257 if–
zDb
 && 
pTab
->
pSchema
!=pSchema ){

260 if–
zTab
 ){

261 c⁄° *
zTabName
 = 
pIãm
->
zAlüs
 ?ÖIãm->zAlü†: 
pTab
->
zName
;

262 
	`as£π
–
zTabName
!=0 );

263 if–
	`sqlôe3SåICmp
(
zTabName
, 
zTab
)!=0 ){

267 if–0==(
˙tTab
++) ){

268 
pM©ch
 = 
pIãm
;

270 
j
=0, 
pCﬁ
=
pTab
->
aCﬁ
; j<pTab->
nCﬁ
; j++,ÖCol++){

271 if–
	`sqlôe3SåICmp
(
pCﬁ
->
zName
, 
zCﬁ
)==0 ){

276 if–
˙t
==1 ){

277 if–
pIãm
->
fg
.
joöty≥
 & 
JT_NATURAL
 ) ;

278 if–
	`«meInUsögCœu£
(
pIãm
->
pUsög
, 
zCﬁ
) ) ;

280 
˙t
++;

281 
pM©ch
 = 
pIãm
;

283 
pEx¥
->
iCﬁumn
 = 
j
==
pTab
->
iPKey
 ? -1 : (
i16
)j;

288 if–
pM©ch
 ){

289 
pEx¥
->
iTabÀ
 = 
pM©ch
->
iCurs‹
;

290 
pEx¥
->
pTab
 = 
pM©ch
->pTab;

292 
	`as£π
–(
pM©ch
->
fg
.
joöty≥
 & 
JT_RIGHT
)==0 );

293 if–(
pM©ch
->
fg
.
joöty≥
 & 
JT_LEFT
)!=0 ){

294 
	`Ex¥SëPr›îty
(
pEx¥
, 
EP_C™BeNuŒ
);

296 
pSchema
 = 
pEx¥
->
pTab
->pSchema;

300 #i‚de‡
SQLITE_OMIT_TRIGGER


304 if–
zDb
==0 && 
zTab
!=0 && 
˙tTab
==0 && 
pP¨£
->
pTriggîTab
!=0 ){

305 
›
 = 
pP¨£
->
eTriggîOp
;

306 
	`as£π
–
›
==
TK_DELETE
 || op==
TK_UPDATE
 || op==
TK_INSERT
 );

307 if–
›
!=
TK_DELETE
 && 
	`sqlôe3SåICmp
("√w",
zTab
) == 0 ){

308 
pEx¥
->
iTabÀ
 = 1;

309 
pTab
 = 
pP¨£
->
pTriggîTab
;

310 }if–
›
!=
TK_INSERT
 && 
	`sqlôe3SåICmp
("ﬁd",
zTab
)==0 ){

311 
pEx¥
->
iTabÀ
 = 0;

312 
pTab
 = 
pP¨£
->
pTriggîTab
;

314 
pTab
 = 0;

317 if–
pTab
 ){

318 
iCﬁ
;

319 
pSchema
 = 
pTab
->pSchema;

320 
˙tTab
++;

321 
iCﬁ
=0, 
pCﬁ
=
pTab
->
aCﬁ
; iCﬁ<pTab->
nCﬁ
; iCol++,ÖCol++){

322 if–
	`sqlôe3SåICmp
(
pCﬁ
->
zName
, 
zCﬁ
)==0 ){

323 if–
iCﬁ
==
pTab
->
iPKey
 ){

324 
iCﬁ
 = -1;

329 if–
iCﬁ
>=
pTab
->
nCﬁ
 && 
	`sqlôe3IsRowid
(
zCﬁ
Ë&& 
	`VisibÀRowid
(pTab) ){

331 
iCﬁ
 = -1;

333 if–
iCﬁ
<
pTab
->
nCﬁ
 ){

334 
˙t
++;

335 if–
iCﬁ
<0 ){

336 
pEx¥
->
afföôy
 = 
SQLITE_AFF_INTEGER
;

337 }if–
pEx¥
->
iTabÀ
==0 ){

338 
	`ã°ˇ£
–
iCﬁ
==31 );

339 
	`ã°ˇ£
–
iCﬁ
==32 );

340 
pP¨£
->
ﬁdmask
 |(
iCﬁ
>=32 ? 0xfffffff‡: (((
u32
)1)<<iCol));

342 
	`ã°ˇ£
–
iCﬁ
==31 );

343 
	`ã°ˇ£
–
iCﬁ
==32 );

344 
pP¨£
->
√wmask
 |(
iCﬁ
>=32 ? 0xfffffff‡: (((
u32
)1)<<iCol));

346 
pEx¥
->
iCﬁumn
 = (
i16
)
iCﬁ
;

347 
pEx¥
->
pTab
 =ÖTab;

348 
isTriggî
 = 1;

357 if–
˙t
==0

358 && 
˙tTab
==1

359 && 
pM©ch


360 && (
pNC
->
ncFœgs
 & 
NC_IdxEx¥
)==0

361 && 
	`sqlôe3IsRowid
(
zCﬁ
)

362 && 
	`VisibÀRowid
(
pM©ch
->
pTab
)

364 
˙t
 = 1;

365 
pEx¥
->
iCﬁumn
 = -1;

366 
pEx¥
->
afföôy
 = 
SQLITE_AFF_INTEGER
;

387 if–(
pELi°
 = 
pNC
->pEList)!=0

388 && 
zTab
==0

389 && 
˙t
==0

391 
j
=0; j<
pELi°
->
nEx¥
; j++){

392 *
zAs
 = 
pELi°
->
a
[
j
].
zName
;

393 if–
zAs
!=0 && 
	`sqlôe3SåICmp
(zAs, 
zCﬁ
)==0 ){

394 
Ex¥
 *
pOrig
;

395 
	`as£π
–
pEx¥
->
pLe·
==0 &&ÖEx¥->
pRight
==0 );

396 
	`as£π
–
pEx¥
->
x
.
pLi°
==0 );

397 
	`as£π
–
pEx¥
->
x
.
pSñe˘
==0 );

398 
pOrig
 = 
pELi°
->
a
[
j
].
pEx¥
;

399 if–(
pNC
->
ncFœgs
&
NC_AŒowAgg
)==0 && 
	`Ex¥HasPr›îty
(
pOrig
, 
EP_Agg
) ){

400 
	`sqlôe3Eº‹Msg
(
pP¨£
, "misu£ o‡Æü£dággªg©ê%s", 
zAs
);

401  
WRC_Ab‹t
;

403 if–
	`sqlôe3Ex¥Ve˘‹Size
(
pOrig
)!=1 ){

404 
	`sqlôe3Eº‹Msg
(
pP¨£
, "row value misused");

405  
WRC_Ab‹t
;

407 
	`ªsﬁveAlüs
(
pP¨£
, 
pELi°
, 
j
, 
pEx¥
, "", 
nSubquîy
);

408 
˙t
 = 1;

409 
pM©ch
 = 0;

410 
	`as£π
–
zTab
==0 && 
zDb
==0 );

411 
looku≤ame_íd
;

419 if–
˙t
==0 ){

420 
pNC
 =ÖNC->
pNext
;

421 
nSubquîy
++;

435 if–
˙t
==0 && 
zTab
==0 && 
	`Ex¥HasPr›îty
(
pEx¥
,
EP_DblQuŸed
) ){

436 
pEx¥
->
›
 = 
TK_STRING
;

437 
pEx¥
->
pTab
 = 0;

438  
WRC_Pru√
;

445 if–
˙t
!=1 ){

446 c⁄° *
zEº
;

447 
zEº
 = 
˙t
==0 ? "no such column" : "ambiguous columnÇame";

448 if–
zDb
 ){

449 
	`sqlôe3Eº‹Msg
(
pP¨£
, "%s: %s.%s.%s", 
zEº
, 
zDb
, 
zTab
, 
zCﬁ
);

450 }if–
zTab
 ){

451 
	`sqlôe3Eº‹Msg
(
pP¨£
, "%s: %s.%s", 
zEº
, 
zTab
, 
zCﬁ
);

453 
	`sqlôe3Eº‹Msg
(
pP¨£
, "%s: %s", 
zEº
, 
zCﬁ
);

455 
pP¨£
->
checkSchema
 = 1;

456 
pT›NC
->
nEº
++;

465 if–
pEx¥
->
iCﬁumn
>=0 && 
pM©ch
!=0 ){

466 
n
 = 
pEx¥
->
iCﬁumn
;

467 
	`ã°ˇ£
–
n
==
BMS
-1 );

468 if–
n
>=
BMS
 ){

469 
n
 = 
BMS
-1;

471 
	`as£π
–
pM©ch
->
iCurs‹
==
pEx¥
->
iTabÀ
 );

472 
pM©ch
->
cﬁU£d
 |((
Bômask
)1)<<
n
;

477 
	`sqlôe3Ex¥Dñëe
(
db
, 
pEx¥
->
pLe·
);

478 
pEx¥
->
pLe·
 = 0;

479 
	`sqlôe3Ex¥Dñëe
(
db
, 
pEx¥
->
pRight
);

480 
pEx¥
->
pRight
 = 0;

481 
pEx¥
->
›
 = (
isTriggî
 ? 
TK_TRIGGER
 : 
TK_COLUMN
);

482 
looku≤ame_íd
:

483 if–
˙t
==1 ){

484 
	`as£π
–
pNC
!=0 );

485 if–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_Alüs
) ){

486 
	`sqlôe3AuthRód
(
pP¨£
, 
pEx¥
, 
pSchema
, 
pNC
->
pSrcLi°
);

491 
	`as£π
–
pT›NC
!=0 );

492 
pT›NC
->
nRef
++;

493 if–
pT›NC
==
pNC
 ) ;

494 
pT›NC
 =ÖT›NC->
pNext
;

496  
WRC_Pru√
;

498  
WRC_Ab‹t
;

500 
	}
}

506 
Ex¥
 *
	$sqlôe3Cª©eCﬁumnEx¥
(
sqlôe3
 *
db
, 
SrcLi°
 *
pSrc
, 
iSrc
, 
iCﬁ
){

507 
Ex¥
 *
p
 = 
	`sqlôe3Ex¥AŒoc
(
db
, 
TK_COLUMN
, 0, 0);

508 if–
p
 ){

509 
SrcLi°_ôem
 *
pIãm
 = &
pSrc
->
a
[
iSrc
];

510 
p
->
pTab
 = 
pIãm
->pTab;

511 
p
->
iTabÀ
 = 
pIãm
->
iCurs‹
;

512 if–
p
->
pTab
->
iPKey
==
iCﬁ
 ){

513 
p
->
iCﬁumn
 = -1;

515 
p
->
iCﬁumn
 = (
ynV¨
)
iCﬁ
;

516 
	`ã°ˇ£
–
iCﬁ
==
BMS
 );

517 
	`ã°ˇ£
–
iCﬁ
==
BMS
-1 );

518 
pIãm
->
cﬁU£d
 |((
Bômask
)1)<<(
iCﬁ
>=
BMS
 ? BMS-1 : iCol);

520 
	`Ex¥SëPr›îty
(
p
, 
EP_Resﬁved
);

522  
p
;

523 
	}
}

529 
	$nŸVÆid
(

530 
P¨£
 *
pP¨£
,

531 
NameC⁄ãxt
 *
pNC
,

532 c⁄° *
zMsg
,

533 
vÆidMask


535 
	`as£π
–(
vÆidMask
&~(
NC_IsCheck
|
NC_P¨tIdx
|
NC_IdxEx¥
))==0 );

536 if–(
pNC
->
ncFœgs
 & 
vÆidMask
)!=0 ){

537 c⁄° *
zIn
 = "partial index WHERE clauses";

538 if–
pNC
->
ncFœgs
 & 
NC_IdxEx¥
 ) 
zIn
 = "indexÉxpressions";

539 #i‚de‡
SQLITE_OMIT_CHECK


540 if–
pNC
->
ncFœgs
 & 
NC_IsCheck
 ) 
zIn
 = "CHECK constraints";

542 
	`sqlôe3Eº‹Msg
(
pP¨£
, "%†¥ohibôed i¿%s", 
zMsg
, 
zIn
);

544 
	}
}

551 
	$ex¥Probabûôy
(
Ex¥
 *
p
){

552 
r
 = -1.0;

553 if–
p
->
›
!=
TK_FLOAT
 )  -1;

554 
	`sqlôe3AtoF
(
p
->
u
.
zTokí
, &
r
, 
	`sqlôe3SåÀn30
’->u.zTokí), 
SQLITE_UTF8
);

555 
	`as£π
–
r
>=0.0 );

556 if–
r
>1.0 )  -1;

557  ()(
r
*134217728.0);

558 
	}
}

571 
	$ªsﬁveEx¥Sãp
(
WÆkî
 *
pWÆkî
, 
Ex¥
 *
pEx¥
){

572 
NameC⁄ãxt
 *
pNC
;

573 
P¨£
 *
pP¨£
;

575 
pNC
 = 
pWÆkî
->
u
.pNC;

576 
	`as£π
–
pNC
!=0 );

577 
pP¨£
 = 
pNC
->pParse;

578 
	`as£π
–
pP¨£
==
pWÆkî
->pParse );

580 if–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_Resﬁved
ËË 
WRC_Pru√
;

581 
	`Ex¥SëPr›îty
(
pEx¥
, 
EP_Resﬁved
);

582 #i‚de‡
NDEBUG


583 if–
pNC
->
pSrcLi°
 &&ÖNC->pSrcLi°->
nAŒoc
>0 ){

584 
SrcLi°
 *
pSrcLi°
 = 
pNC
->pSrcList;

585 
i
;

586 
i
=0; i<
pNC
->
pSrcLi°
->
nSrc
; i++){

587 
	`as£π
–
pSrcLi°
->
a
[
i
].
iCurs‹
>=0 &&ÖSrcLi°->a[i].iCurs‹<
pP¨£
->
nTab
);

591  
pEx¥
->
›
 ){

593 #i‡
	`deföed
(
SQLITE_ENABLE_UPDATE_DELETE_LIMIT
Ë&& !deföed(
SQLITE_OMIT_SUBQUERY
)

598 
TK_ROW
: {

599 
SrcLi°
 *
pSrcLi°
 = 
pNC
->pSrcList;

600 
SrcLi°_ôem
 *
pIãm
;

601 
	`as£π
–
pSrcLi°
 &&ÖSrcLi°->
nSrc
==1 );

602 
pIãm
 = 
pSrcLi°
->
a
;

603 
pEx¥
->
›
 = 
TK_COLUMN
;

604 
pEx¥
->
pTab
 = 
pIãm
->pTab;

605 
pEx¥
->
iTabÀ
 = 
pIãm
->
iCurs‹
;

606 
pEx¥
->
iCﬁumn
 = -1;

607 
pEx¥
->
afföôy
 = 
SQLITE_AFF_INTEGER
;

611 && !
	`deföed
(
SQLITE_OMIT_SUBQUERY
) */

615 
TK_ID
: {

616  
	`lookupName
(
pP¨£
, 0, 0, 
pEx¥
->
u
.
zTokí
, 
pNC
,ÖExpr);

622 
TK_DOT
: {

623 c⁄° *
zCﬁumn
;

624 c⁄° *
zTabÀ
;

625 c⁄° *
zDb
;

626 
Ex¥
 *
pRight
;

629 
	`nŸVÆid
(
pP¨£
, 
pNC
, "thê\".\" o≥øt‹", 
NC_IdxEx¥
);

630 
pRight
 = 
pEx¥
->pRight;

631 if–
pRight
->
›
==
TK_ID
 ){

632 
zDb
 = 0;

633 
zTabÀ
 = 
pEx¥
->
pLe·
->
u
.
zTokí
;

634 
zCﬁumn
 = 
pRight
->
u
.
zTokí
;

636 
	`as£π
–
pRight
->
›
==
TK_DOT
 );

637 
zDb
 = 
pEx¥
->
pLe·
->
u
.
zTokí
;

638 
zTabÀ
 = 
pRight
->
pLe·
->
u
.
zTokí
;

639 
zCﬁumn
 = 
pRight
->pRight->
u
.
zTokí
;

641  
	`lookupName
(
pP¨£
, 
zDb
, 
zTabÀ
, 
zCﬁumn
, 
pNC
, 
pEx¥
);

646 
TK_FUNCTION
: {

647 
Ex¥Li°
 *
pLi°
 = 
pEx¥
->
x
.pList;

648 
n
 = 
pLi°
 ?ÖLi°->
nEx¥
 : 0;

649 
no_such_func
 = 0;

650 
wr⁄g_num_¨gs
 = 0;

651 
is_agg
 = 0;

652 
nId
;

653 c⁄° *
zId
;

654 
FuncDef
 *
pDef
;

655 
u8
 
íc
 = 
	`ENC
(
pP¨£
->
db
);

657 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
) );

658 
zId
 = 
pEx¥
->
u
.
zTokí
;

659 
nId
 = 
	`sqlôe3SåÀn30
(
zId
);

660 
pDef
 = 
	`sqlôe3FödFun˘i⁄
(
pP¨£
->
db
, 
zId
, 
n
, 
íc
, 0);

661 if–
pDef
==0 ){

662 
pDef
 = 
	`sqlôe3FödFun˘i⁄
(
pP¨£
->
db
, 
zId
, -2, 
íc
, 0);

663 if–
pDef
==0 ){

664 
no_such_func
 = 1;

666 
wr⁄g_num_¨gs
 = 1;

669 
is_agg
 = 
pDef
->
xFöÆize
!=0;

670 if–
pDef
->
funcFœgs
 & 
SQLITE_FUNC_UNLIKELY
 ){

671 
	`Ex¥SëPr›îty
(
pEx¥
, 
EP_U∆ikñy
|
EP_Skù
);

672 if–
n
==2 ){

673 
pEx¥
->
iTabÀ
 = 
	`ex¥Probabûôy
(
pLi°
->
a
[1].pExpr);

674 if–
pEx¥
->
iTabÀ
<0 ){

675 
	`sqlôe3Eº‹Msg
(
pP¨£
,

678 
pNC
->
nEº
++;

690 
pEx¥
->
iTabÀ
 = 
pDef
->
zName
[0]=='u' ? 8388608 : 125829120;

693 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


695 
auth
 = 
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_FUNCTION
, 0,
pDef
->
zName
,0);

696 if–
auth
!=
SQLITE_OK
 ){

697 if–
auth
==
SQLITE_DENY
 ){

698 
	`sqlôe3Eº‹Msg
(
pP¨£
, "notáuthorizedÅo use function: %s",

699 
pDef
->
zName
);

700 
pNC
->
nEº
++;

702 
pEx¥
->
›
 = 
TK_NULL
;

703  
WRC_Pru√
;

707 if–
pDef
->
funcFœgs
 & (
SQLITE_FUNC_CONSTANT
|
SQLITE_FUNC_SLOCHNG
) ){

711 
	`Ex¥SëPr›îty
(
pEx¥
,
EP_C⁄°Func
);

713 if–(
pDef
->
funcFœgs
 & 
SQLITE_FUNC_CONSTANT
)==0 ){

717 
	`nŸVÆid
(
pP¨£
, 
pNC
, "non-deterministic functions",

718 
NC_IdxEx¥
|
NC_P¨tIdx
);

721 if–
is_agg
 && (
pNC
->
ncFœgs
 & 
NC_AŒowAgg
)==0 ){

722 
	`sqlôe3Eº‹Msg
(
pP¨£
, "misu£ o‡aggªg©êfun˘i⁄ %.*s()", 
nId
,
zId
);

723 
pNC
->
nEº
++;

724 
is_agg
 = 0;

725 }if–
no_such_func
 && 
pP¨£
->
db
->
öô
.
busy
==0

726 #ifde‡
SQLITE_ENABLE_UNKNOWN_SQL_FUNCTION


727 && 
pP¨£
->
ex∂aö
==0

730 
	`sqlôe3Eº‹Msg
(
pP¨£
, "nÿsuch fun˘i⁄: %.*s", 
nId
, 
zId
);

731 
pNC
->
nEº
++;

732 }if–
wr⁄g_num_¨gs
 ){

733 
	`sqlôe3Eº‹Msg
(
pP¨£
,"wrongÇumber ofárgumentsÅo function %.*s()",

734 
nId
, 
zId
);

735 
pNC
->
nEº
++;

737 if–
is_agg
 ) 
pNC
->
ncFœgs
 &~
NC_AŒowAgg
;

738 
	`sqlôe3WÆkEx¥Li°
(
pWÆkî
, 
pLi°
);

739 if–
is_agg
 ){

740 
NameC⁄ãxt
 *
pNC2
 = 
pNC
;

741 
pEx¥
->
›
 = 
TK_AGG_FUNCTION
;

742 
pEx¥
->
›2
 = 0;

743  
pNC2
 && !
	`sqlôe3Fun˘i⁄U£sThisSrc
(
pEx¥
,ÖNC2->
pSrcLi°
) ){

744 
pEx¥
->
›2
++;

745 
pNC2
 =ÖNC2->
pNext
;

747 
	`as£π
–
pDef
!=0 );

748 if–
pNC2
 ){

749 
	`as£π
–
SQLITE_FUNC_MINMAX
==
NC_MöMaxAgg
 );

750 
	`ã°ˇ£
–(
pDef
->
funcFœgs
 & 
SQLITE_FUNC_MINMAX
)!=0 );

751 
pNC2
->
ncFœgs
 |
NC_HasAgg
 | (
pDef
->
funcFœgs
 & 
SQLITE_FUNC_MINMAX
);

754 
pNC
->
ncFœgs
 |
NC_AŒowAgg
;

759  
WRC_Pru√
;

761 #i‚de‡
SQLITE_OMIT_SUBQUERY


762 
TK_SELECT
:

763 
TK_EXISTS
: 
	`ã°ˇ£
–
pEx¥
->
›
==TK_EXISTS );

765 
TK_IN
: {

766 
	`ã°ˇ£
–
pEx¥
->
›
==
TK_IN
 );

767 if–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
) ){

768 
nRef
 = 
pNC
->nRef;

769 
	`nŸVÆid
(
pP¨£
, 
pNC
, "subquîõs", 
NC_IsCheck
|
NC_P¨tIdx
|
NC_IdxEx¥
);

770 
	`sqlôe3WÆkSñe˘
(
pWÆkî
, 
pEx¥
->
x
.
pSñe˘
);

771 
	`as£π
–
pNC
->
nRef
>=nRef );

772 if–
nRef
!=
pNC
->nRef ){

773 
	`Ex¥SëPr›îty
(
pEx¥
, 
EP_V¨Sñe˘
);

774 
pNC
->
ncFœgs
 |
NC_V¨Sñe˘
;

779 
TK_VARIABLE
: {

780 
	`nŸVÆid
(
pP¨£
, 
pNC
, "∑ømëîs", 
NC_IsCheck
|
NC_P¨tIdx
|
NC_IdxEx¥
);

783 
TK_BETWEEN
:

784 
TK_EQ
:

785 
TK_NE
:

786 
TK_LT
:

787 
TK_LE
:

788 
TK_GT
:

789 
TK_GE
:

790 
TK_IS
:

791 
TK_ISNOT
: {

792 
nLe·
, 
nRight
;

793 if–
pP¨£
->
db
->
mÆlocFaûed
 ) ;

794 
	`as£π
–
pEx¥
->
pLe·
!=0 );

795 
nLe·
 = 
	`sqlôe3Ex¥Ve˘‹Size
(
pEx¥
->
pLe·
);

796 if–
pEx¥
->
›
==
TK_BETWEEN
 ){

797 
nRight
 = 
	`sqlôe3Ex¥Ve˘‹Size
(
pEx¥
->
x
.
pLi°
->
a
[0].pExpr);

798 if–
nRight
==
nLe·
 ){

799 
nRight
 = 
	`sqlôe3Ex¥Ve˘‹Size
(
pEx¥
->
x
.
pLi°
->
a
[1].pExpr);

802 
	`as£π
–
pEx¥
->
pRight
!=0 );

803 
nRight
 = 
	`sqlôe3Ex¥Ve˘‹Size
(
pEx¥
->
pRight
);

805 if–
nLe·
!=
nRight
 ){

806 
	`ã°ˇ£
–
pEx¥
->
›
==
TK_EQ
 );

807 
	`ã°ˇ£
–
pEx¥
->
›
==
TK_NE
 );

808 
	`ã°ˇ£
–
pEx¥
->
›
==
TK_LT
 );

809 
	`ã°ˇ£
–
pEx¥
->
›
==
TK_LE
 );

810 
	`ã°ˇ£
–
pEx¥
->
›
==
TK_GT
 );

811 
	`ã°ˇ£
–
pEx¥
->
›
==
TK_GE
 );

812 
	`ã°ˇ£
–
pEx¥
->
›
==
TK_IS
 );

813 
	`ã°ˇ£
–
pEx¥
->
›
==
TK_ISNOT
 );

814 
	`ã°ˇ£
–
pEx¥
->
›
==
TK_BETWEEN
 );

815 
	`sqlôe3Eº‹Msg
(
pP¨£
, "row value misused");

820  (
pP¨£
->
nEº
 ||ÖP¨£->
db
->
mÆlocFaûed
Ë? 
WRC_Ab‹t
 : 
WRC_C⁄töue
;

821 
	}
}

835 
	$ªsﬁveAsName
(

836 
P¨£
 *
pP¨£
,

837 
Ex¥Li°
 *
pELi°
,

838 
Ex¥
 *
pE


840 
i
;

842 
	`UNUSED_PARAMETER
(
pP¨£
);

844 if–
pE
->
›
==
TK_ID
 ){

845 *
zCﬁ
 = 
pE
->
u
.
zTokí
;

846 
i
=0; i<
pELi°
->
nEx¥
; i++){

847 *
zAs
 = 
pELi°
->
a
[
i
].
zName
;

848 if–
zAs
!=0 && 
	`sqlôe3SåICmp
(zAs, 
zCﬁ
)==0 ){

849  
i
+1;

854 
	}
}

874 
	$ªsﬁveOrdîByTîmToEx¥Li°
(

875 
P¨£
 *
pP¨£
,

876 
Sñe˘
 *
pSñe˘
,

877 
Ex¥
 *
pE


879 
i
;

880 
Ex¥Li°
 *
pELi°
;

881 
NameC⁄ãxt
 
nc
;

882 
sqlôe3
 *
db
;

883 
rc
;

884 
u8
 
ßvedSuµEº
;

886 
	`as£π
–
	`sqlôe3Ex¥IsI¡egî
(
pE
, &
i
)==0 );

887 
pELi°
 = 
pSñe˘
->pEList;

891 
	`mem£t
(&
nc
, 0, (nc));

892 
nc
.
pP¨£
 =ÖParse;

893 
nc
.
pSrcLi°
 = 
pSñe˘
->
pSrc
;

894 
nc
.
pELi°
 =ÖEList;

895 
nc
.
ncFœgs
 = 
NC_AŒowAgg
;

896 
nc
.
nEº
 = 0;

897 
db
 = 
pP¨£
->db;

898 
ßvedSuµEº
 = 
db
->
suµªssEº
;

899 
db
->
suµªssEº
 = 1;

900 
rc
 = 
	`sqlôe3ResﬁveEx¥Names
(&
nc
, 
pE
);

901 
db
->
suµªssEº
 = 
ßvedSuµEº
;

902 if–
rc
 )  0;

908 
i
=0; i<
pELi°
->
nEx¥
; i++){

909 if–
	`sqlôe3Ex¥Com∑ª
(
pELi°
->
a
[
i
].
pEx¥
, 
pE
, -1)<2 ){

910  
i
+1;

916 
	}
}

921 
	$ªsﬁveOutOfR™geEº‹
(

922 
P¨£
 *
pP¨£
,

923 c⁄° *
zTy≥
,

924 
i
,

925 
mx


927 
	`sqlôe3Eº‹Msg
(
pP¨£
,

929 "bëwì¿1ánd %d", 
i
, 
zTy≥
, 
mx
);

930 
	}
}

947 
	$ªsﬁveCompoundOrdîBy
(

948 
P¨£
 *
pP¨£
,

949 
Sñe˘
 *
pSñe˘


951 
i
;

952 
Ex¥Li°
 *
pOrdîBy
;

953 
Ex¥Li°
 *
pELi°
;

954 
sqlôe3
 *
db
;

955 
m‹eToDo
 = 1;

957 
pOrdîBy
 = 
pSñe˘
->pOrderBy;

958 if–
pOrdîBy
==0 )  0;

959 
db
 = 
pP¨£
->db;

960 #i‡
SQLITE_MAX_COLUMN


961 if–
pOrdîBy
->
nEx¥
>
db
->
aLimô
[
SQLITE_LIMIT_COLUMN
] ){

962 
	`sqlôe3Eº‹Msg
(
pP¨£
, "too manyÅerms in ORDER BY clause");

966 
i
=0; i<
pOrdîBy
->
nEx¥
; i++){

967 
pOrdîBy
->
a
[
i
].
d⁄e
 = 0;

969 
pSñe˘
->
pNext
 = 0;

970  
pSñe˘
->
pPri‹
 ){

971 
pSñe˘
->
pPri‹
->
pNext
 =ÖSelect;

972 
pSñe˘
 =ÖSñe˘->
pPri‹
;

974  
pSñe˘
 && 
m‹eToDo
 ){

975 
Ex¥Li°_ôem
 *
pIãm
;

976 
m‹eToDo
 = 0;

977 
pELi°
 = 
pSñe˘
->pEList;

978 
	`as£π
–
pELi°
!=0 );

979 
i
=0, 
pIãm
=
pOrdîBy
->
a
; i<pOrdîBy->
nEx¥
; i++,ÖItem++){

980 
iCﬁ
 = -1;

981 
Ex¥
 *
pE
, *
pDup
;

982 if–
pIãm
->
d⁄e
 ) ;

983 
pE
 = 
	`sqlôe3Ex¥SkùCﬁœã
(
pIãm
->
pEx¥
);

984 if–
	`sqlôe3Ex¥IsI¡egî
(
pE
, &
iCﬁ
) ){

985 if–
iCﬁ
<=0 || iCﬁ>
pELi°
->
nEx¥
 ){

986 
	`ªsﬁveOutOfR™geEº‹
(
pP¨£
, "ORDER", 
i
+1, 
pELi°
->
nEx¥
);

990 
iCﬁ
 = 
	`ªsﬁveAsName
(
pP¨£
, 
pELi°
, 
pE
);

991 if–
iCﬁ
==0 ){

992 
pDup
 = 
	`sqlôe3Ex¥Dup
(
db
, 
pE
, 0);

993 if–!
db
->
mÆlocFaûed
 ){

994 
	`as£π
(
pDup
);

995 
iCﬁ
 = 
	`ªsﬁveOrdîByTîmToEx¥Li°
(
pP¨£
, 
pSñe˘
, 
pDup
);

997 
	`sqlôe3Ex¥Dñëe
(
db
, 
pDup
);

1000 if–
iCﬁ
>0 ){

1003 
Ex¥
 *
pNew
 = 
	`sqlôe3Ex¥
(
db
, 
TK_INTEGER
, 0);

1004 if–
pNew
==0 )  1;

1005 
pNew
->
Êags
 |
EP_I¡VÆue
;

1006 
pNew
->
u
.
iVÆue
 = 
iCﬁ
;

1007 if–
pIãm
->
pEx¥
==
pE
 ){

1008 
pIãm
->
pEx¥
 = 
pNew
;

1010 
Ex¥
 *
pP¨ít
 = 
pIãm
->
pEx¥
;

1011 
	`as£π
–
pP¨ít
->
›
==
TK_COLLATE
 );

1012  
pP¨ít
->
pLe·
->
›
==
TK_COLLATE
 )ÖParent =ÖParent->pLeft;

1013 
	`as£π
–
pP¨ít
->
pLe·
==
pE
 );

1014 
pP¨ít
->
pLe·
 = 
pNew
;

1016 
	`sqlôe3Ex¥Dñëe
(
db
, 
pE
);

1017 
pIãm
->
u
.
x
.
iOrdîByCﬁ
 = (
u16
)
iCﬁ
;

1018 
pIãm
->
d⁄e
 = 1;

1020 
m‹eToDo
 = 1;

1023 
pSñe˘
 =ÖSñe˘->
pNext
;

1025 
i
=0; i<
pOrdîBy
->
nEx¥
; i++){

1026 if–
pOrdîBy
->
a
[
i
].
d⁄e
==0 ){

1027 
	`sqlôe3Eº‹Msg
(
pP¨£
, "%r ORDER BYÅerm doesÇot matchány "

1028 "cﬁum¿öÅhêªsu… së", 
i
+1);

1033 
	}
}

1045 
	$sqlôe3ResﬁveOrdîGroupBy
(

1046 
P¨£
 *
pP¨£
,

1047 
Sñe˘
 *
pSñe˘
,

1048 
Ex¥Li°
 *
pOrdîBy
,

1049 c⁄° *
zTy≥


1051 
i
;

1052 
sqlôe3
 *
db
 = 
pP¨£
->db;

1053 
Ex¥Li°
 *
pELi°
;

1054 
Ex¥Li°_ôem
 *
pIãm
;

1056 if–
pOrdîBy
==0 || 
pP¨£
->
db
->
mÆlocFaûed
 )  0;

1057 #i‡
SQLITE_MAX_COLUMN


1058 if–
pOrdîBy
->
nEx¥
>
db
->
aLimô
[
SQLITE_LIMIT_COLUMN
] ){

1059 
	`sqlôe3Eº‹Msg
(
pP¨£
, "toÿm™yÅîm†ö %†BY cœu£", 
zTy≥
);

1063 
pELi°
 = 
pSñe˘
->pEList;

1064 
	`as£π
–
pELi°
!=0 );

1065 
i
=0, 
pIãm
=
pOrdîBy
->
a
; i<pOrdîBy->
nEx¥
; i++,ÖItem++){

1066 if–
pIãm
->
u
.
x
.
iOrdîByCﬁ
 ){

1067 if–
pIãm
->
u
.
x
.
iOrdîByCﬁ
>
pELi°
->
nEx¥
 ){

1068 
	`ªsﬁveOutOfR™geEº‹
(
pP¨£
, 
zTy≥
, 
i
+1, 
pELi°
->
nEx¥
);

1071 
	`ªsﬁveAlüs
(
pP¨£
, 
pELi°
, 
pIãm
->
u
.
x
.
iOrdîByCﬁ
-1,ÖIãm->
pEx¥
,

1072 
zTy≥
,0);

1076 
	}
}

1096 
	$ªsﬁveOrdîGroupBy
(

1097 
NameC⁄ãxt
 *
pNC
,

1098 
Sñe˘
 *
pSñe˘
,

1099 
Ex¥Li°
 *
pOrdîBy
,

1100 c⁄° *
zTy≥


1102 
i
, 
j
;

1103 
iCﬁ
;

1104 
Ex¥Li°_ôem
 *
pIãm
;

1105 
P¨£
 *
pP¨£
;

1106 
nResu…
;

1108 if–
pOrdîBy
==0 )  0;

1109 
nResu…
 = 
pSñe˘
->
pELi°
->
nEx¥
;

1110 
pP¨£
 = 
pNC
->pParse;

1111 
i
=0, 
pIãm
=
pOrdîBy
->
a
; i<pOrdîBy->
nEx¥
; i++,ÖItem++){

1112 
Ex¥
 *
pE
 = 
pIãm
->
pEx¥
;

1113 
Ex¥
 *
pE2
 = 
	`sqlôe3Ex¥SkùCﬁœã
(
pE
);

1114 if–
zTy≥
[0]!='G' ){

1115 
iCﬁ
 = 
	`ªsﬁveAsName
(
pP¨£
, 
pSñe˘
->
pELi°
, 
pE2
);

1116 if–
iCﬁ
>0 ){

1121 
pIãm
->
u
.
x
.
iOrdîByCﬁ
 = (
u16
)
iCﬁ
;

1125 if–
	`sqlôe3Ex¥IsI¡egî
(
pE2
, &
iCﬁ
) ){

1129 if–
iCﬁ
<1 || iCol>0xffff ){

1130 
	`ªsﬁveOutOfR™geEº‹
(
pP¨£
, 
zTy≥
, 
i
+1, 
nResu…
);

1133 
pIãm
->
u
.
x
.
iOrdîByCﬁ
 = (
u16
)
iCﬁ
;

1138 
pIãm
->
u
.
x
.
iOrdîByCﬁ
 = 0;

1139 if–
	`sqlôe3ResﬁveEx¥Names
(
pNC
, 
pE
) ){

1142 
j
=0; j<
pSñe˘
->
pELi°
->
nEx¥
; j++){

1143 if–
	`sqlôe3Ex¥Com∑ª
(
pE
, 
pSñe˘
->
pELi°
->
a
[
j
].
pEx¥
, -1)==0 ){

1144 
pIãm
->
u
.
x
.
iOrdîByCﬁ
 = 
j
+1;

1148  
	`sqlôe3ResﬁveOrdîGroupBy
(
pP¨£
, 
pSñe˘
, 
pOrdîBy
, 
zTy≥
);

1149 
	}
}

1154 
	$ªsﬁveSñe˘Sãp
(
WÆkî
 *
pWÆkî
, 
Sñe˘
 *
p
){

1155 
NameC⁄ãxt
 *
pOuãrNC
;

1156 
NameC⁄ãxt
 
sNC
;

1157 
isCompound
;

1158 
nCompound
;

1159 
P¨£
 *
pP¨£
;

1160 
i
;

1161 
Ex¥Li°
 *
pGroupBy
;

1162 
Sñe˘
 *
pLe·mo°
;

1163 
sqlôe3
 *
db
;

1166 
	`as£π
–
p
!=0 );

1167 if–
p
->
£lFœgs
 & 
SF_Resﬁved
 ){

1168  
WRC_Pru√
;

1170 
pOuãrNC
 = 
pWÆkî
->
u
.
pNC
;

1171 
pP¨£
 = 
pWÆkî
->pParse;

1172 
db
 = 
pP¨£
->db;

1182 if–(
p
->
£lFœgs
 & 
SF_Ex∑nded
)==0 ){

1183 
	`sqlôe3Sñe˘Pªp
(
pP¨£
, 
p
, 
pOuãrNC
);

1184  (
pP¨£
->
nEº
 || 
db
->
mÆlocFaûed
Ë? 
WRC_Ab‹t
 : 
WRC_Pru√
;

1187 
isCompound
 = 
p
->
pPri‹
!=0;

1188 
nCompound
 = 0;

1189 
pLe·mo°
 = 
p
;

1190  
p
 ){

1191 
	`as£π
–(
p
->
£lFœgs
 & 
SF_Ex∑nded
)!=0 );

1192 
	`as£π
–(
p
->
£lFœgs
 & 
SF_Resﬁved
)==0 );

1193 
p
->
£lFœgs
 |
SF_Resﬁved
;

1198 
	`mem£t
(&
sNC
, 0, (sNC));

1199 
sNC
.
pP¨£
 =ÖParse;

1200 if–
	`sqlôe3ResﬁveEx¥Names
(&
sNC
, 
p
->
pLimô
) ||

1201 
	`sqlôe3ResﬁveEx¥Names
(&
sNC
, 
p
->
pOff£t
) ){

1202  
WRC_Ab‹t
;

1211 if–
p
->
£lFœgs
 & 
SF_C⁄vîãd
 ){

1212 
Sñe˘
 *
pSub
 = 
p
->
pSrc
->
a
[0].
pSñe˘
;

1213 
	`as£π
–
p
->
pSrc
->
nSrc
==1 &&Ö->
pOrdîBy
 );

1214 
	`as£π
–
pSub
->
pPri‹
 &&ÖSub->
pOrdîBy
==0 );

1215 
pSub
->
pOrdîBy
 = 
p
->pOrderBy;

1216 
p
->
pOrdîBy
 = 0;

1221 
i
=0; i<
p
->
pSrc
->
nSrc
; i++){

1222 
SrcLi°_ôem
 *
pIãm
 = &
p
->
pSrc
->
a
[
i
];

1223 if–
pIãm
->
pSñe˘
 ){

1224 
NameC⁄ãxt
 *
pNC
;

1225 
nRef
 = 0;

1226 c⁄° *
zSavedC⁄ãxt
 = 
pP¨£
->
zAuthC⁄ãxt
;

1233 
pNC
=
pOuãrNC
;ÖNC;ÖNCıNC->
pNext
Ë
nRef
 +=ÖNC->nRef;

1235 if–
pIãm
->
zName
 ) 
pP¨£
->
zAuthC⁄ãxt
 =ÖItem->zName;

1236 
	`sqlôe3ResﬁveSñe˘Names
(
pP¨£
, 
pIãm
->
pSñe˘
, 
pOuãrNC
);

1237 
pP¨£
->
zAuthC⁄ãxt
 = 
zSavedC⁄ãxt
;

1238 if–
pP¨£
->
nEº
 || 
db
->
mÆlocFaûed
 )  
WRC_Ab‹t
;

1240 
pNC
=
pOuãrNC
;ÖNC;ÖNCıNC->
pNext
Ë
nRef
 -=ÖNC->nRef;

1241 
	`as£π
–
pIãm
->
fg
.
isC‹ªœãd
==0 && 
nRef
<=0 );

1242 
pIãm
->
fg
.
isC‹ªœãd
 = (
nRef
!=0);

1249 
sNC
.
ncFœgs
 = 
NC_AŒowAgg
;

1250 
sNC
.
pSrcLi°
 = 
p
->
pSrc
;

1251 
sNC
.
pNext
 = 
pOuãrNC
;

1254 if–
	`sqlôe3ResﬁveEx¥Li°Names
(&
sNC
, 
p
->
pELi°
ËË 
WRC_Ab‹t
;

1259 
	`as£π
–(
p
->
£lFœgs
 & 
SF_Aggªg©e
)==0 );

1260 
pGroupBy
 = 
p
->pGroupBy;

1261 if–
pGroupBy
 || (
sNC
.
ncFœgs
 & 
NC_HasAgg
)!=0 ){

1262 
	`as£π
–
NC_MöMaxAgg
==
SF_MöMaxAgg
 );

1263 
p
->
£lFœgs
 |
SF_Aggªg©e
 | (
sNC
.
ncFœgs
&
NC_MöMaxAgg
);

1265 
sNC
.
ncFœgs
 &~
NC_AŒowAgg
;

1270 if–
p
->
pHavög
 && !
pGroupBy
 ){

1271 
	`sqlôe3Eº‹Msg
(
pP¨£
, "a GROUP BY clause isÑequired before HAVING");

1272  
WRC_Ab‹t
;

1283 
sNC
.
pELi°
 = 
p
->pEList;

1284 if–
	`sqlôe3ResﬁveEx¥Names
(&
sNC
, 
p
->
pHavög
ËË 
WRC_Ab‹t
;

1285 if–
	`sqlôe3ResﬁveEx¥Names
(&
sNC
, 
p
->
pWhîe
ËË 
WRC_Ab‹t
;

1288 
i
=0; i<
p
->
pSrc
->
nSrc
; i++){

1289 
SrcLi°_ôem
 *
pIãm
 = &
p
->
pSrc
->
a
[
i
];

1290 if–
pIãm
->
fg
.
isTabFunc


1291 && 
	`sqlôe3ResﬁveEx¥Li°Names
(&
sNC
, 
pIãm
->
u1
.
pFuncArg
)

1293  
WRC_Ab‹t
;

1300 
sNC
.
pNext
 = 0;

1301 
sNC
.
ncFœgs
 |
NC_AŒowAgg
;

1308 if–
p
->
£lFœgs
 & 
SF_C⁄vîãd
 ){

1309 
Sñe˘
 *
pSub
 = 
p
->
pSrc
->
a
[0].
pSñe˘
;

1310 
p
->
pOrdîBy
 = 
pSub
->pOrderBy;

1311 
pSub
->
pOrdîBy
 = 0;

1324 if–
isCompound
<=
nCompound


1325 && 
	`ªsﬁveOrdîGroupBy
(&
sNC
, 
p
,Ö->
pOrdîBy
, "ORDER")

1327  
WRC_Ab‹t
;

1329 if–
db
->
mÆlocFaûed
 ){

1330  
WRC_Ab‹t
;

1336 if–
pGroupBy
 ){

1337 
Ex¥Li°_ôem
 *
pIãm
;

1339 if–
	`ªsﬁveOrdîGroupBy
(&
sNC
, 
p
, 
pGroupBy
, "GROUP"Ë|| 
db
->
mÆlocFaûed
 ){

1340  
WRC_Ab‹t
;

1342 
i
=0, 
pIãm
=
pGroupBy
->
a
; i<pGroupBy->
nEx¥
; i++,ÖItem++){

1343 if–
	`Ex¥HasPr›îty
(
pIãm
->
pEx¥
, 
EP_Agg
) ){

1344 
	`sqlôe3Eº‹Msg
(
pP¨£
, "aggregate functionsáreÇotállowed in "

1346  
WRC_Ab‹t
;

1353 if–
p
->
pNext
 &&Ö->
pELi°
->
nEx¥
!=p->pNext->pEList->nExpr ){

1354 
	`sqlôe3Sñe˘Wr⁄gNumTîmsEº‹
(
pP¨£
, 
p
->
pNext
);

1355  
WRC_Ab‹t
;

1360 
p
 =Ö->
pPri‹
;

1361 
nCompound
++;

1367 if–
isCompound
 && 
	`ªsﬁveCompoundOrdîBy
(
pP¨£
, 
pLe·mo°
) ){

1368  
WRC_Ab‹t
;

1371  
WRC_Pru√
;

1372 
	}
}

1422 
	$sqlôe3ResﬁveEx¥Names
(

1423 
NameC⁄ãxt
 *
pNC
,

1424 
Ex¥
 *
pEx¥


1426 
u16
 
ßvedHasAgg
;

1427 
WÆkî
 
w
;

1429 if–
pEx¥
==0 )  0;

1430 #i‡
SQLITE_MAX_EXPR_DEPTH
>0

1432 
P¨£
 *
pP¨£
 = 
pNC
->pParse;

1433 if–
	`sqlôe3Ex¥CheckHeight
(
pP¨£
, 
pEx¥
->
nHeight
+
pNC
->pParse->nHeight) ){

1436 
pP¨£
->
nHeight
 +
pEx¥
->nHeight;

1439 
ßvedHasAgg
 = 
pNC
->
ncFœgs
 & (
NC_HasAgg
|
NC_MöMaxAgg
);

1440 
pNC
->
ncFœgs
 &~(
NC_HasAgg
|
NC_MöMaxAgg
);

1441 
w
.
pP¨£
 = 
pNC
->pParse;

1442 
w
.
xEx¥CÆlback
 = 
ªsﬁveEx¥Sãp
;

1443 
w
.
xSñe˘CÆlback
 = 
ªsﬁveSñe˘Sãp
;

1444 
w
.
xSñe˘CÆlback2
 = 0;

1445 
w
.
wÆkîDïth
 = 0;

1446 
w
.
eCode
 = 0;

1447 
w
.
u
.
pNC
 =ÖNC;

1448 
	`sqlôe3WÆkEx¥
(&
w
, 
pEx¥
);

1449 #i‡
SQLITE_MAX_EXPR_DEPTH
>0

1450 
pNC
->
pP¨£
->
nHeight
 -
pEx¥
->nHeight;

1452 if–
pNC
->
nEº
>0 || 
w
.
pP¨£
->nErr>0 ){

1453 
	`Ex¥SëPr›îty
(
pEx¥
, 
EP_Eº‹
);

1455 if–
pNC
->
ncFœgs
 & 
NC_HasAgg
 ){

1456 
	`Ex¥SëPr›îty
(
pEx¥
, 
EP_Agg
);

1458 
pNC
->
ncFœgs
 |
ßvedHasAgg
;

1459  
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_Eº‹
);

1460 
	}
}

1467 
	$sqlôe3ResﬁveEx¥Li°Names
(

1468 
NameC⁄ãxt
 *
pNC
,

1469 
Ex¥Li°
 *
pLi°


1471 
i
;

1472 if–
pLi°
 ){

1473 
i
=0; i<
pLi°
->
nEx¥
; i++){

1474 if–
	`sqlôe3ResﬁveEx¥Names
(
pNC
, 
pLi°
->
a
[
i
].
pEx¥
ËË 
WRC_Ab‹t
;

1477  
WRC_C⁄töue
;

1478 
	}
}

1492 
	$sqlôe3ResﬁveSñe˘Names
(

1493 
P¨£
 *
pP¨£
,

1494 
Sñe˘
 *
p
,

1495 
NameC⁄ãxt
 *
pOuãrNC


1497 
WÆkî
 
w
;

1499 
	`as£π
–
p
!=0 );

1500 
	`mem£t
(&
w
, 0, (w));

1501 
w
.
xEx¥CÆlback
 = 
ªsﬁveEx¥Sãp
;

1502 
w
.
xSñe˘CÆlback
 = 
ªsﬁveSñe˘Sãp
;

1503 
w
.
pP¨£
 =ÖParse;

1504 
w
.
u
.
pNC
 = 
pOuãrNC
;

1505 
	`sqlôe3WÆkSñe˘
(&
w
, 
p
);

1506 
	}
}

1519 
	$sqlôe3ResﬁveSñfRe„ªn˚
(

1520 
P¨£
 *
pP¨£
,

1521 
TabÀ
 *
pTab
,

1522 
ty≥
,

1523 
Ex¥
 *
pEx¥
,

1524 
Ex¥Li°
 *
pLi°


1526 
SrcLi°
 
sSrc
;

1527 
NameC⁄ãxt
 
sNC
;

1529 
	`as£π
–
ty≥
==
NC_IsCheck
 ||Åy≥==
NC_P¨tIdx
 ||Åy≥==
NC_IdxEx¥
 );

1530 
	`mem£t
(&
sNC
, 0, (sNC));

1531 
	`mem£t
(&
sSrc
, 0, (sSrc));

1532 
sSrc
.
nSrc
 = 1;

1533 
sSrc
.
a
[0].
zName
 = 
pTab
->zName;

1534 
sSrc
.
a
[0].
pTab
 =ÖTab;

1535 
sSrc
.
a
[0].
iCurs‹
 = -1;

1536 
sNC
.
pP¨£
 =ÖParse;

1537 
sNC
.
pSrcLi°
 = &
sSrc
;

1538 
sNC
.
ncFœgs
 = 
ty≥
;

1539 if–
	`sqlôe3ResﬁveEx¥Names
(&
sNC
, 
pEx¥
) ) ;

1540 if–
pLi°
 ) 
	`sqlôe3ResﬁveEx¥Li°Names
(&
sNC
,ÖList);

1541 
	}
}

	@rowset.c

64 
	~"sqlôeI¡.h
"

70 
	#ROWSET_ALLOCATION_SIZE
 1024

	)

75 
	#ROWSET_ENTRY_PER_CHUNK
 \

76 ((
ROWSET_ALLOCATION_SIZE
-8)/(
RowSëE¡ry
))

	)

86 
	sRowSëE¡ry
 {

87 
i64
 
	mv
;

88 
RowSëE¡ry
 *
	mpRight
;

89 
RowSëE¡ry
 *
	mpLe·
;

98 
	sRowSëChunk
 {

99 
RowSëChunk
 *
	mpNextChunk
;

100 
RowSëE¡ry
 
	maE¡ry
[
ROWSET_ENTRY_PER_CHUNK
];

108 
	sRowSë
 {

109 
RowSëChunk
 *
	mpChunk
;

110 
sqlôe3
 *
	mdb
;

111 
RowSëE¡ry
 *
	mpE¡ry
;

112 
RowSëE¡ry
 *
	mpLa°
;

113 
RowSëE¡ry
 *
	mpFªsh
;

114 
RowSëE¡ry
 *
	mpF‹e°
;

115 
u16
 
	mnFªsh
;

116 
u16
 
	mrsFœgs
;

117 
	miB©ch
;

123 
	#ROWSET_SORTED
 0x01

	)

124 
	#ROWSET_NEXT
 0x02

	)

138 
RowSë
 *
	$sqlôe3RowSëInô
(
sqlôe3
 *
db
, *
pS∑˚
, 
N
){

139 
RowSë
 *
p
;

140 
	`as£π
–
N
 >
	`ROUND8
((*
p
)) );

141 
p
 = 
pS∑˚
;

142 
p
->
pChunk
 = 0;

143 
p
->
db
 = db;

144 
p
->
pE¡ry
 = 0;

145 
p
->
pLa°
 = 0;

146 
p
->
pF‹e°
 = 0;

147 
p
->
pFªsh
 = (
RowSëE¡ry
*)(
	`ROUND8
((*p)) + (*)p);

148 
p
->
nFªsh
 = (
u16
)((
N
 - 
	`ROUND8
((*p)))/(
RowSëE¡ry
));

149 
p
->
rsFœgs
 = 
ROWSET_SORTED
;

150 
p
->
iB©ch
 = 0;

151  
p
;

152 
	}
}

159 
	$sqlôe3RowSëCÀ¨
(
RowSë
 *
p
){

160 
RowSëChunk
 *
pChunk
, *
pNextChunk
;

161 
pChunk
=
p
->pChunk;ÖChunk;ÖChunk = 
pNextChunk
){

162 
pNextChunk
 = 
pChunk
->pNextChunk;

163 
	`sqlôe3DbFªe
(
p
->
db
, 
pChunk
);

165 
p
->
pChunk
 = 0;

166 
p
->
nFªsh
 = 0;

167 
p
->
pE¡ry
 = 0;

168 
p
->
pLa°
 = 0;

169 
p
->
pF‹e°
 = 0;

170 
p
->
rsFœgs
 = 
ROWSET_SORTED
;

171 
	}
}

181 
RowSëE¡ry
 *
	$rowSëE¡ryAŒoc
(
RowSë
 *
p
){

182 
	`as£π
–
p
!=0 );

183 if–
p
->
nFªsh
==0 ){

186 
RowSëChunk
 *
pNew
;

187 
pNew
 = 
	`sqlôe3DbMÆlocRawNN
(
p
->
db
, (*pNew));

188 if–
pNew
==0 ){

191 
pNew
->
pNextChunk
 = 
p
->
pChunk
;

192 
p
->
pChunk
 = 
pNew
;

193 
p
->
pFªsh
 = 
pNew
->
aE¡ry
;

194 
p
->
nFªsh
 = 
ROWSET_ENTRY_PER_CHUNK
;

196 
p
->
nFªsh
--;

197  
p
->
pFªsh
++;

198 
	}
}

206 
	$sqlôe3RowSëIn£π
(
RowSë
 *
p
, 
i64
 
rowid
){

207 
RowSëE¡ry
 *
pE¡ry
;

208 
RowSëE¡ry
 *
pLa°
;

211 
	`as£π
–
p
!=0 && (p->
rsFœgs
 & 
ROWSET_NEXT
)==0 );

213 
pE¡ry
 = 
	`rowSëE¡ryAŒoc
(
p
);

214 if–
pE¡ry
==0 ) ;

215 
pE¡ry
->
v
 = 
rowid
;

216 
pE¡ry
->
pRight
 = 0;

217 
pLa°
 = 
p
->pLast;

218 if–
pLa°
 ){

219 if–
rowid
<=
pLa°
->
v
 ){

222 
p
->
rsFœgs
 &~
ROWSET_SORTED
;

224 
pLa°
->
pRight
 = 
pE¡ry
;

226 
p
->
pE¡ry
 =ÖEntry;

228 
p
->
pLa°
 = 
pE¡ry
;

229 
	}
}

237 
RowSëE¡ry
 *
	$rowSëE¡ryMîge
(

238 
RowSëE¡ry
 *
pA
,

239 
RowSëE¡ry
 *
pB


241 
RowSëE¡ry
 
hód
;

242 
RowSëE¡ry
 *
pTaû
;

244 
pTaû
 = &
hód
;

245 
	`as£π
–
pA
!=0 && 
pB
!=0 );

247 
	`as£π
–
pA
->
pRight
==0 ||ÖA->
v
<=pA->pRight->v );

248 
	`as£π
–
pB
->
pRight
==0 ||ÖB->
v
<=pB->pRight->v );

249 if–
pA
->
v
<=
pB
->v ){

250 if–
pA
->
v
<
pB
->v ) 
pTaû
 =ÖTaû->
pRight
 =ÖA;

251 
pA
 =ÖA->
pRight
;

252 if–
pA
==0 ){

253 
pTaû
->
pRight
 = 
pB
;

257 
pTaû
 =ÖTaû->
pRight
 = 
pB
;

258 
pB
 =ÖB->
pRight
;

259 if–
pB
==0 ){

260 
pTaû
->
pRight
 = 
pA
;

265  
hód
.
pRight
;

266 
	}
}

272 
RowSëE¡ry
 *
	$rowSëE¡ryS‹t
(
RowSëE¡ry
 *
pIn
){

273 
i
;

274 
RowSëE¡ry
 *
pNext
, *
aBuckë
[40];

276 
	`mem£t
(
aBuckë
, 0, (aBucket));

277  
pIn
 ){

278 
pNext
 = 
pIn
->
pRight
;

279 
pIn
->
pRight
 = 0;

280 
i
=0; 
aBuckë
[i]; i++){

281 
pIn
 = 
	`rowSëE¡ryMîge
(
aBuckë
[
i
],ÖIn);

282 
aBuckë
[
i
] = 0;

284 
aBuckë
[
i
] = 
pIn
;

285 
pIn
 = 
pNext
;

287 
pIn
 = 
aBuckë
[0];

288 
i
=1; i<(
aBuckë
)/(aBucket[0]); i++){

289 if–
aBuckë
[
i
]==0 ) ;

290 
pIn
 =ÖI¿? 
	`rowSëE¡ryMîge
’In, 
aBuckë
[
i
]) :áBucket[i];

292  
pIn
;

293 
	}
}

301 
	$rowSëTªeToLi°
(

302 
RowSëE¡ry
 *
pIn
,

303 
RowSëE¡ry
 **
µFú°
,

304 
RowSëE¡ry
 **
µLa°


306 
	`as£π
–
pIn
!=0 );

307 if–
pIn
->
pLe·
 ){

308 
RowSëE¡ry
 *
p
;

309 
	`rowSëTªeToLi°
(
pIn
->
pLe·
, 
µFú°
, &
p
);

310 
p
->
pRight
 = 
pIn
;

312 *
µFú°
 = 
pIn
;

314 if–
pIn
->
pRight
 ){

315 
	`rowSëTªeToLi°
(
pIn
->
pRight
, &pIn->pRight, 
µLa°
);

317 *
µLa°
 = 
pIn
;

319 
	`as£π
–(*
µLa°
)->
pRight
==0 );

320 
	}
}

336 
RowSëE¡ry
 *
	$rowSëNDìpTªe
(

337 
RowSëE¡ry
 **
µLi°
,

338 
iDïth


340 
RowSëE¡ry
 *
p
;

341 
RowSëE¡ry
 *
pLe·
;

342 if–*
µLi°
==0 ){

346 if–
iDïth
>1 ){

350 
pLe·
 = 
	`rowSëNDìpTªe
(
µLi°
, 
iDïth
-1);

351 
p
 = *
µLi°
;

352 if–
p
==0 ){

355  
pLe·
;

357 
p
->
pLe·
 =ÖLeft;

358 *
µLi°
 = 
p
->
pRight
;

359 
p
->
pRight
 = 
	`rowSëNDìpTªe
(
µLi°
, 
iDïth
-1);

361 
p
 = *
µLi°
;

362 *
µLi°
 = 
p
->
pRight
;

363 
p
->
pLe·
 =Ö->
pRight
 = 0;

365  
p
;

366 
	}
}

372 
RowSëE¡ry
 *
	$rowSëLi°ToTªe
(
RowSëE¡ry
 *
pLi°
){

373 
iDïth
;

374 
RowSëE¡ry
 *
p
;

375 
RowSëE¡ry
 *
pLe·
;

377 
	`as£π
–
pLi°
!=0 );

378 
p
 = 
pLi°
;

379 
pLi°
 = 
p
->
pRight
;

380 
p
->
pLe·
 =Ö->
pRight
 = 0;

381 
iDïth
=1; 
pLi°
; iDepth++){

382 
pLe·
 = 
p
;

383 
p
 = 
pLi°
;

384 
pLi°
 = 
p
->
pRight
;

385 
p
->
pLe·
 =ÖLeft;

386 
p
->
pRight
 = 
	`rowSëNDìpTªe
(&
pLi°
, 
iDïth
);

388  
p
;

389 
	}
}

404 
	$sqlôe3RowSëNext
(
RowSë
 *
p
, 
i64
 *
pRowid
){

405 
	`as£π
–
p
!=0 );

406 
	`as£π
–
p
->
pF‹e°
==0 );

409 if–(
p
->
rsFœgs
 & 
ROWSET_NEXT
)==0 ){

410 if–(
p
->
rsFœgs
 & 
ROWSET_SORTED
)==0 ){

411 
p
->
pE¡ry
 = 
	`rowSëE¡ryS‹t
(p->pEntry);

413 
p
->
rsFœgs
 |
ROWSET_SORTED
|
ROWSET_NEXT
;

417 if–
p
->
pE¡ry
 ){

418 *
pRowid
 = 
p
->
pE¡ry
->
v
;

419 
p
->
pE¡ry
 =Ö->pE¡ry->
pRight
;

420 if–
p
->
pE¡ry
==0 ){

422 
	`sqlôe3RowSëCÀ¨
(
p
);

428 
	}
}

438 
	$sqlôe3RowSëTe°
(
RowSë
 *
pRowSë
, 
iB©ch
, 
sqlôe3_öt64
 
iRowid
){

439 
RowSëE¡ry
 *
p
, *
pTªe
;

442 
	`as£π
–
pRowSë
!=0 && (pRowSë->
rsFœgs
 & 
ROWSET_NEXT
)==0 );

447 if–
iB©ch
!=
pRowSë
->iBatch ){

448 
p
 = 
pRowSë
->
pE¡ry
;

449 if–
p
 ){

450 
RowSëE¡ry
 **
µPªvTªe
 = &
pRowSë
->
pF‹e°
;

451 if–(
pRowSë
->
rsFœgs
 & 
ROWSET_SORTED
)==0 ){

453 
p
 = 
	`rowSëE¡ryS‹t
(p);

455 
pTªe
 = 
pRowSë
->
pF‹e°
;ÖTªe;ÖTªeıTªe->
pRight
){

456 
µPªvTªe
 = &
pTªe
->
pRight
;

457 if–
pTªe
->
pLe·
==0 ){

458 
pTªe
->
pLe·
 = 
	`rowSëLi°ToTªe
(
p
);

461 
RowSëE¡ry
 *
pAux
, *
pTaû
;

462 
	`rowSëTªeToLi°
(
pTªe
->
pLe·
, &
pAux
, &
pTaû
);

463 
pTªe
->
pLe·
 = 0;

464 
p
 = 
	`rowSëE¡ryMîge
(
pAux
,Ö);

467 if–
pTªe
==0 ){

468 *
µPªvTªe
 = 
pTªe
 = 
	`rowSëE¡ryAŒoc
(
pRowSë
);

469 if–
pTªe
 ){

470 
pTªe
->
v
 = 0;

471 
pTªe
->
pRight
 = 0;

472 
pTªe
->
pLe·
 = 
	`rowSëLi°ToTªe
(
p
);

475 
pRowSë
->
pE¡ry
 = 0;

476 
pRowSë
->
pLa°
 = 0;

477 
pRowSë
->
rsFœgs
 |
ROWSET_SORTED
;

479 
pRowSë
->
iB©ch
 = iBatch;

485 
pTªe
 = 
pRowSë
->
pF‹e°
;ÖTªe;ÖTªeıTªe->
pRight
){

486 
p
 = 
pTªe
->
pLe·
;

487  
p
 ){

488 if–
p
->
v
<
iRowid
 ){

489 
p
 =Ö->
pRight
;

490 }if–
p
->
v
>
iRowid
 ){

491 
p
 =Ö->
pLe·
;

498 
	}
}

	@select.c

15 
	~"sqlôeI¡.h
"

20 #i‡
SELECTTRACE_ENABLED


21  
	gsqlôe3Sñe˘Tø˚
 = 0;

22 
	#SELECTTRACE
(
K
,
P
,
S
,
X
) \

23 if(
sqlôe3Sñe˘Tø˚
&(
K
)) \

24 
	`sqlôe3DebugPrötf
("%*s%s.%p: ",(
P
)->
nSñe˘Indít
*2-2,"",\

25 (
S
)->
zSñName
,(S)),\

26 
sqlôe3DebugPrötf
 
X


	)

28 
	#SELECTTRACE
(
K
,
P
,
S
,
X
)

	)

37 
Di°ö˘Ctx
 
	tDi°ö˘Ctx
;

38 
	sDi°ö˘Ctx
 {

39 
u8
 
	misTn˘
;

40 
u8
 
	meTn˘Ty≥
;

41 
	mèbTn˘
;

42 
	maddrTn˘
;

49 
S‹tCtx
 
	tS‹tCtx
;

50 
	sS‹tCtx
 {

51 
Ex¥Li°
 *
	mpOrdîBy
;

52 
	mnOBS©
;

53 
	miECurs‹
;

54 
	mªgRëu∫
;

55 
	mœbñBkOut
;

56 
	maddrS‹tIndex
;

57 
	mœbñD⁄e
;

58 
u8
 
	ms‹tFœgs
;

59 
u8
 
	mbOrdîedI¬îLo›
;

61 
	#SORTFLAG_U£S‹ãr
 0x01

	)

67 
	$˛órSñe˘
(
sqlôe3
 *
db
, 
Sñe˘
 *
p
, 
bFªe
){

68  
p
 ){

69 
Sñe˘
 *
pPri‹
 = 
p
->pPrior;

70 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
p
->
pELi°
);

71 
	`sqlôe3SrcLi°Dñëe
(
db
, 
p
->
pSrc
);

72 
	`sqlôe3Ex¥Dñëe
(
db
, 
p
->
pWhîe
);

73 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
p
->
pGroupBy
);

74 
	`sqlôe3Ex¥Dñëe
(
db
, 
p
->
pHavög
);

75 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
p
->
pOrdîBy
);

76 
	`sqlôe3Ex¥Dñëe
(
db
, 
p
->
pLimô
);

77 
	`sqlôe3Ex¥Dñëe
(
db
, 
p
->
pOff£t
);

78 if–
p
->
pWôh
 ) 
	`sqlôe3WôhDñëe
(
db
,Ö->pWith);

79 if–
bFªe
 ) 
	`sqlôe3DbFªe
(
db
, 
p
);

80 
p
 = 
pPri‹
;

81 
bFªe
 = 1;

83 
	}
}

88 
	$sqlôe3Sñe˘De°Inô
(
Sñe˘De°
 *
pDe°
, 
eDe°
, 
iP¨m
){

89 
pDe°
->
eDe°
 = (
u8
)eDest;

90 
pDe°
->
iSDP¨m
 = 
iP¨m
;

91 
pDe°
->
zAffSd°
 = 0;

92 
pDe°
->
iSd°
 = 0;

93 
pDe°
->
nSd°
 = 0;

94 
	}
}

101 
Sñe˘
 *
	$sqlôe3Sñe˘New
(

102 
P¨£
 *
pP¨£
,

103 
Ex¥Li°
 *
pELi°
,

104 
SrcLi°
 *
pSrc
,

105 
Ex¥
 *
pWhîe
,

106 
Ex¥Li°
 *
pGroupBy
,

107 
Ex¥
 *
pHavög
,

108 
Ex¥Li°
 *
pOrdîBy
,

109 
u32
 
£lFœgs
,

110 
Ex¥
 *
pLimô
,

111 
Ex¥
 *
pOff£t


113 
Sñe˘
 *
pNew
;

114 
Sñe˘
 
°™dö
;

115 
sqlôe3
 *
db
 = 
pP¨£
->db;

116 
pNew
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, (*pNew) );

117 if–
pNew
==0 ){

118 
	`as£π
–
db
->
mÆlocFaûed
 );

119 
pNew
 = &
°™dö
;

121 if–
pELi°
==0 ){

122 
pELi°
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
, 0, 
	`sqlôe3Ex¥
(
db
,
TK_ASTERISK
,0));

124 
pNew
->
pELi°
 =ÖEList;

125 
pNew
->
›
 = 
TK_SELECT
;

126 
pNew
->
£lFœgs
 = selFlags;

127 
pNew
->
iLimô
 = 0;

128 
pNew
->
iOff£t
 = 0;

129 #i‡
SELECTTRACE_ENABLED


130 
pNew
->
zSñName
[0] = 0;

132 
pNew
->
addrO≥nEphm
[0] = -1;

133 
pNew
->
addrO≥nEphm
[1] = -1;

134 
pNew
->
nSñe˘Row
 = 0;

135 if–
pSrc
==0 )ÖSr¯
	`sqlôe3DbMÆlocZîo
(
db
, (*pSrc));

136 
pNew
->
pSrc
 =ÖSrc;

137 
pNew
->
pWhîe
 =ÖWhere;

138 
pNew
->
pGroupBy
 =ÖGroupBy;

139 
pNew
->
pHavög
 =ÖHaving;

140 
pNew
->
pOrdîBy
 =ÖOrderBy;

141 
pNew
->
pPri‹
 = 0;

142 
pNew
->
pNext
 = 0;

143 
pNew
->
pLimô
 =ÖLimit;

144 
pNew
->
pOff£t
 =ÖOffset;

145 
pNew
->
pWôh
 = 0;

146 
	`as£π
–
pOff£t
==0 || 
pLimô
!=0 || 
pP¨£
->
nEº
>0 || 
db
->
mÆlocFaûed
!=0 );

147 if–
db
->
mÆlocFaûed
 ) {

148 
	`˛órSñe˘
(
db
, 
pNew
,ÖNew!=&
°™dö
);

149 
pNew
 = 0;

151 
	`as£π
–
pNew
->
pSrc
!=0 || 
pP¨£
->
nEº
>0 );

153 
	`as£π
–
pNew
!=&
°™dö
 );

154  
pNew
;

155 
	}
}

157 #i‡
SELECTTRACE_ENABLED


161 
	$sqlôe3Sñe˘SëName
(
Sñe˘
 *
p
, c⁄° *
zName
){

162 if–
p
 && 
zName
 ){

163 
	`sqlôe3_¢¥ötf
((
p
->
zSñName
),Ö->zSñName, "%s", 
zName
);

165 
	}
}

172 
	$sqlôe3Sñe˘Dñëe
(
sqlôe3
 *
db
, 
Sñe˘
 *
p
){

173 if–
p
 ) 
	`˛órSñe˘
(
db
,Ö, 1);

174 
	}
}

179 
Sñe˘
 *
	$födRightmo°
(
Sñe˘
 *
p
){

180  
p
->
pNext
 )Ö =Ö->pNext;

181  
p
;

182 
	}
}

201 
	$sqlôe3JoöTy≥
(
P¨£
 *
pP¨£
, 
Tokí
 *
pA
, Tokí *
pB
, Tokí *
pC
){

202 
joöty≥
 = 0;

203 
Tokí
 *
≠AŒ
[3];

204 
Tokí
 *
p
;

206 c⁄° 
zKeyText
[] = "naturaleftouterightfullinnercross";

208 
u8
 
i
;

209 
u8
 
nCh¨
;

210 
u8
 
code
;

211 } 
aKeyw‹d
[] = {

212  { 0, 7, 
JT_NATURAL
 },

213  { 6, 4, 
JT_LEFT
|
JT_OUTER
 },

214  { 10, 5, 
JT_OUTER
 },

215  { 14, 5, 
JT_RIGHT
|
JT_OUTER
 },

216  { 19, 4, 
JT_LEFT
|
JT_RIGHT
|
JT_OUTER
 },

217  { 23, 5, 
JT_INNER
 },

218  { 28, 5, 
JT_INNER
|
JT_CROSS
 },

220 
i
, 
j
;

221 
≠AŒ
[0] = 
pA
;

222 
≠AŒ
[1] = 
pB
;

223 
≠AŒ
[2] = 
pC
;

224 
i
=0; i<3 && 
≠AŒ
[i]; i++){

225 
p
 = 
≠AŒ
[
i
];

226 
j
=0; j<
	`AºaySize
(
aKeyw‹d
); j++){

227 if–
p
->
n
==
aKeyw‹d
[
j
].
nCh¨


228 && 
	`sqlôe3SåNICmp
((*)
p
->
z
, &
zKeyText
[
aKeyw‹d
[
j
].
i
],Ö->
n
)==0 ){

229 
joöty≥
 |
aKeyw‹d
[
j
].
code
;

233 
	`ã°ˇ£
–
j
==0 || j==1 || j==2 || j==3 || j==4 || j==5 || j==6 );

234 if–
j
>=
	`AºaySize
(
aKeyw‹d
) ){

235 
joöty≥
 |
JT_ERROR
;

240 (
joöty≥
 & (
JT_INNER
|
JT_OUTER
))==(JT_INNER|JT_OUTER) ||

241 (
joöty≥
 & 
JT_ERROR
)!=0

243 c⁄° *
zSp
 = " ";

244 
	`as£π
–
pB
!=0 );

245 if–
pC
==0 ){ 
zSp
++; }

246 
	`sqlôe3Eº‹Msg
(
pP¨£
, "unknown or unsupported joinÅype: "

247 "%T %T%s%T", 
pA
, 
pB
, 
zSp
, 
pC
);

248 
joöty≥
 = 
JT_INNER
;

249 }if–(
joöty≥
 & 
JT_OUTER
)!=0

250 && (
joöty≥
 & (
JT_LEFT
|
JT_RIGHT
))!=JT_LEFT ){

251 
	`sqlôe3Eº‹Msg
(
pP¨£
,

253 
joöty≥
 = 
JT_INNER
;

255  
joöty≥
;

256 
	}
}

262 
	$cﬁumnIndex
(
TabÀ
 *
pTab
, c⁄° *
zCﬁ
){

263 
i
;

264 
i
=0; i<
pTab
->
nCﬁ
; i++){

265 if–
	`sqlôe3SåICmp
(
pTab
->
aCﬁ
[
i
].
zName
, 
zCﬁ
)==0 )  i;

268 
	}
}

279 
	$èbÀAndCﬁumnIndex
(

280 
SrcLi°
 *
pSrc
,

281 
N
,

282 c⁄° *
zCﬁ
,

283 *
piTab
,

284 *
piCﬁ


286 
i
;

287 
iCﬁ
;

289 
	`as£π
–(
piTab
==0)==(
piCﬁ
==0) );

290 
i
=0; i<
N
; i++){

291 
iCﬁ
 = 
	`cﬁumnIndex
(
pSrc
->
a
[
i
].
pTab
, 
zCﬁ
);

292 if–
iCﬁ
>=0 ){

293 if–
piTab
 ){

294 *
piTab
 = 
i
;

295 *
piCﬁ
 = 
iCﬁ
;

301 
	}
}

314 
	$addWhîeTîm
(

315 
P¨£
 *
pP¨£
,

316 
SrcLi°
 *
pSrc
,

317 
iLe·
,

318 
iCﬁLe·
,

319 
iRight
,

320 
iCﬁRight
,

321 
isOuãrJoö
,

322 
Ex¥
 **
µWhîe


324 
sqlôe3
 *
db
 = 
pP¨£
->db;

325 
Ex¥
 *
pE1
;

326 
Ex¥
 *
pE2
;

327 
Ex¥
 *
pEq
;

329 
	`as£π
–
iLe·
<
iRight
 );

330 
	`as£π
–
pSrc
->
nSrc
>
iRight
 );

331 
	`as£π
–
pSrc
->
a
[
iLe·
].
pTab
 );

332 
	`as£π
–
pSrc
->
a
[
iRight
].
pTab
 );

334 
pE1
 = 
	`sqlôe3Cª©eCﬁumnEx¥
(
db
, 
pSrc
, 
iLe·
, 
iCﬁLe·
);

335 
pE2
 = 
	`sqlôe3Cª©eCﬁumnEx¥
(
db
, 
pSrc
, 
iRight
, 
iCﬁRight
);

337 
pEq
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_EQ
, 
pE1
, 
pE2
);

338 if–
pEq
 && 
isOuãrJoö
 ){

339 
	`Ex¥SëPr›îty
(
pEq
, 
EP_FromJoö
);

340 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEq
, 
EP_TokíO∆y
|
EP_Redu˚d
) );

341 
	`Ex¥SëVVAPr›îty
(
pEq
, 
EP_NoRedu˚
);

342 
pEq
->
iRightJoöTabÀ
 = (
i16
)
pE2
->
iTabÀ
;

344 *
µWhîe
 = 
	`sqlôe3Ex¥And
(
db
, *µWhîe, 
pEq
);

345 
	}
}

373 
	$£tJoöEx¥
(
Ex¥
 *
p
, 
iTabÀ
){

374  
p
 ){

375 
	`Ex¥SëPr›îty
(
p
, 
EP_FromJoö
);

376 
	`as£π
–!
	`Ex¥HasPr›îty
(
p
, 
EP_TokíO∆y
|
EP_Redu˚d
) );

377 
	`Ex¥SëVVAPr›îty
(
p
, 
EP_NoRedu˚
);

378 
p
->
iRightJoöTabÀ
 = (
i16
)
iTabÀ
;

379 if–
p
->
›
==
TK_FUNCTION
 &&Ö->
x
.
pLi°
 ){

380 
i
;

381 
i
=0; i<
p
->
x
.
pLi°
->
nEx¥
; i++){

382 
	`£tJoöEx¥
(
p
->
x
.
pLi°
->
a
[
i
].
pEx¥
, 
iTabÀ
);

385 
	`£tJoöEx¥
(
p
->
pLe·
, 
iTabÀ
);

386 
p
 =Ö->
pRight
;

388 
	}
}

404 
	$sqlôePro˚ssJoö
(
P¨£
 *
pP¨£
, 
Sñe˘
 *
p
){

405 
SrcLi°
 *
pSrc
;

406 
i
, 
j
;

407 
SrcLi°_ôem
 *
pLe·
;

408 
SrcLi°_ôem
 *
pRight
;

410 
pSrc
 = 
p
->pSrc;

411 
pLe·
 = &
pSrc
->
a
[0];

412 
pRight
 = &
pLe·
[1];

413 
i
=0; i<
pSrc
->
nSrc
-1; i++, 
pRight
++, 
pLe·
++){

414 
TabÀ
 *
pLe·Tab
 = 
pLe·
->
pTab
;

415 
TabÀ
 *
pRightTab
 = 
pRight
->
pTab
;

416 
isOuãr
;

418 if–
	`NEVER
(
pLe·Tab
==0 || 
pRightTab
==0) ) ;

419 
isOuãr
 = (
pRight
->
fg
.
joöty≥
 & 
JT_OUTER
)!=0;

424 if–
pRight
->
fg
.
joöty≥
 & 
JT_NATURAL
 ){

425 if–
pRight
->
pOn
 ||ÖRight->
pUsög
 ){

426 
	`sqlôe3Eº‹Msg
(
pP¨£
, "a NATURAL join mayÇot have "

430 
j
=0; j<
pRightTab
->
nCﬁ
; j++){

431 *
zName
;

432 
iLe·
;

433 
iLe·Cﬁ
;

435 
zName
 = 
pRightTab
->
aCﬁ
[
j
].zName;

436 if–
	`èbÀAndCﬁumnIndex
(
pSrc
, 
i
+1, 
zName
, &
iLe·
, &
iLe·Cﬁ
) ){

437 
	`addWhîeTîm
(
pP¨£
, 
pSrc
, 
iLe·
, 
iLe·Cﬁ
, 
i
+1, 
j
,

438 
isOuãr
, &
p
->
pWhîe
);

445 if–
pRight
->
pOn
 &&ÖRight->
pUsög
 ){

446 
	`sqlôe3Eº‹Msg
(
pP¨£
, "cannot have both ONánd USING "

454 if–
pRight
->
pOn
 ){

455 if–
isOuãr
 ) 
	`£tJoöEx¥
(
pRight
->
pOn
,ÖRight->
iCurs‹
);

456 
p
->
pWhîe
 = 
	`sqlôe3Ex¥And
(
pP¨£
->
db
,Ö->pWhîe, 
pRight
->
pOn
);

457 
pRight
->
pOn
 = 0;

467 if–
pRight
->
pUsög
 ){

468 
IdLi°
 *
pLi°
 = 
pRight
->
pUsög
;

469 
j
=0; j<
pLi°
->
nId
; j++){

470 *
zName
;

471 
iLe·
;

472 
iLe·Cﬁ
;

473 
iRightCﬁ
;

475 
zName
 = 
pLi°
->
a
[
j
].zName;

476 
iRightCﬁ
 = 
	`cﬁumnIndex
(
pRightTab
, 
zName
);

477 if–
iRightCﬁ
<0

478 || !
	`èbÀAndCﬁumnIndex
(
pSrc
, 
i
+1, 
zName
, &
iLe·
, &
iLe·Cﬁ
)

480 
	`sqlôe3Eº‹Msg
(
pP¨£
, "cannot join using column %s - column "

481 "nŸÖª£¡ i¿bŸhÅabÀs", 
zName
);

484 
	`addWhîeTîm
(
pP¨£
, 
pSrc
, 
iLe·
, 
iLe·Cﬁ
, 
i
+1, 
iRightCﬁ
,

485 
isOuãr
, &
p
->
pWhîe
);

490 
	}
}

493 
KeyInfo
 *
keyInfoFromEx¥Li°
(

494 
P¨£
 *
pP¨£
,

495 
Ex¥Li°
 *
pLi°
,

496 
iSèπ
,

497 
nExåa


504 
	$pushO¡oS‹ãr
(

505 
P¨£
 *
pP¨£
,

506 
S‹tCtx
 *
pS‹t
,

507 
Sñe˘
 *
pSñe˘
,

508 
ªgD©a
,

509 
ªgOrigD©a
,

510 
nD©a
,

511 
nPªfixReg


513 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

514 
bSeq
 = ((
pS‹t
->
s‹tFœgs
 & 
SORTFLAG_U£S‹ãr
)==0);

515 
nEx¥
 = 
pS‹t
->
pOrdîBy
->nExpr;

516 
nBa£
 = 
nEx¥
 + 
bSeq
 + 
nD©a
;

517 
ªgBa£
;

518 
ªgRec‹d
 = ++
pP¨£
->
nMem
;

519 
nOBS©
 = 
pS‹t
->nOBSat;

520 
›
;

521 
iLimô
;

523 
	`as£π
–
bSeq
==0 || bSeq==1 );

524 
	`as£π
–
nD©a
==1 || 
ªgD©a
==
ªgOrigD©a
 ||ÑegOrigData==0 );

525 if–
nPªfixReg
 ){

526 
	`as£π
–
nPªfixReg
==
nEx¥
+
bSeq
 );

527 
ªgBa£
 = 
ªgD©a
 - 
nEx¥
 - 
bSeq
;

529 
ªgBa£
 = 
pP¨£
->
nMem
 + 1;

530 
pP¨£
->
nMem
 +
nBa£
;

532 
	`as£π
–
pSñe˘
->
iOff£t
==0 ||ÖSñe˘->
iLimô
!=0 );

533 
iLimô
 = 
pSñe˘
->
iOff£t
 ?ÖSelect->iOffset+1 :ÖSelect->iLimit;

534 
pS‹t
->
œbñD⁄e
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

535 
	`sqlôe3Ex¥CodeEx¥Li°
(
pP¨£
, 
pS‹t
->
pOrdîBy
, 
ªgBa£
, 
ªgOrigD©a
,

536 
SQLITE_ECEL_DUP
 | (
ªgOrigD©a
? 
SQLITE_ECEL_REF
 : 0));

537 if–
bSeq
 ){

538 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Sequí˚
, 
pS‹t
->
iECurs‹
, 
ªgBa£
+
nEx¥
);

540 if–
nPªfixReg
==0 && 
nD©a
>0 ){

541 
	`sqlôe3Ex¥CodeMove
(
pP¨£
, 
ªgD©a
, 
ªgBa£
+
nEx¥
+
bSeq
, 
nD©a
);

543 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MakeRec‹d
, 
ªgBa£
+
nOBS©
, 
nBa£
-nOBS©, 
ªgRec‹d
);

544 if–
nOBS©
>0 ){

545 
ªgPªvKey
;

546 
addrFú°
;

547 
addrJmp
;

548 
VdbeOp
 *
pOp
;

549 
nKey
;

550 
KeyInfo
 *
pKI
;

552 
ªgPªvKey
 = 
pP¨£
->
nMem
+1;

553 
pP¨£
->
nMem
 +
pS‹t
->
nOBS©
;

554 
nKey
 = 
nEx¥
 - 
pS‹t
->
nOBS©
 + 
bSeq
;

555 if–
bSeq
 ){

556 
addrFú°
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_IfNŸ
, 
ªgBa£
+
nEx¥
);

558 
addrFú°
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Sequí˚Te°
, 
pS‹t
->
iECurs‹
);

560 
	`VdbeCovîage
(
v
);

561 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Com∑ª
, 
ªgPªvKey
, 
ªgBa£
, 
pS‹t
->
nOBS©
);

562 
pOp
 = 
	`sqlôe3VdbeGëOp
(
v
, 
pS‹t
->
addrS‹tIndex
);

563 if–
pP¨£
->
db
->
mÆlocFaûed
 ) ;

564 
pOp
->
p2
 = 
nKey
 + 
nD©a
;

565 
pKI
 = 
pOp
->
p4
.
pKeyInfo
;

566 
	`mem£t
(
pKI
->
aS‹tOrdî
, 0,ÖKI->
nFõld
);

567 
	`sqlôe3VdbeCh™geP4
(
v
, -1, (*)
pKI
, 
P4_KEYINFO
);

568 
	`ã°ˇ£
–
pKI
->
nXFõld
>2 );

569 
pOp
->
p4
.
pKeyInfo
 = 
	`keyInfoFromEx¥Li°
(
pP¨£
, 
pS‹t
->
pOrdîBy
, 
nOBS©
,

570 
pKI
->
nXFõld
-1);

571 
addrJmp
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

572 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Jump
, 
addrJmp
+1, 0,áddrJmp+1); 
	`VdbeCovîage
(v);

573 
pS‹t
->
œbñBkOut
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

574 
pS‹t
->
ªgRëu∫
 = ++
pP¨£
->
nMem
;

575 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Gosub
, 
pS‹t
->
ªgRëu∫
,ÖS‹t->
œbñBkOut
);

576 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Re£tS‹ãr
, 
pS‹t
->
iECurs‹
);

577 if–
iLimô
 ){

578 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IfNŸ
, 
iLimô
, 
pS‹t
->
œbñD⁄e
);

579 
	`VdbeCovîage
(
v
);

581 
	`sqlôe3VdbeJumpHîe
(
v
, 
addrFú°
);

582 
	`sqlôe3Ex¥CodeMove
(
pP¨£
, 
ªgBa£
, 
ªgPªvKey
, 
pS‹t
->
nOBS©
);

583 
	`sqlôe3VdbeJumpHîe
(
v
, 
addrJmp
);

585 if–
pS‹t
->
s‹tFœgs
 & 
SORTFLAG_U£S‹ãr
 ){

586 
›
 = 
OP_S‹ãrIn£π
;

588 
›
 = 
OP_IdxIn£π
;

590 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
›
, 
pS‹t
->
iECurs‹
, 
ªgRec‹d
,

591 
ªgBa£
+
nOBS©
, 
nBa£
-nOBSat);

592 if–
iLimô
 ){

593 
addr
;

594 
r1
 = 0;

599 
addr
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_IfNŸZîo
, 
iLimô
); 
	`VdbeCovîage
(v);

600 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_La°
, 
pS‹t
->
iECurs‹
);

601 if–
pS‹t
->
bOrdîedI¬îLo›
 ){

602 
r1
 = ++
pP¨£
->
nMem
;

603 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
pS‹t
->
iECurs‹
, 
nEx¥
, 
r1
);

604 
	`VdbeCommít
((
v
, "seq"));

606 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Dñëe
, 
pS‹t
->
iECurs‹
);

607 if–
pS‹t
->
bOrdîedI¬îLo›
 ){

613 
iBrk
 = 
	`sqlôe3VdbeCuºítAddr
(
v
) + 2;

614 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Eq
, 
ªgBa£
+
nEx¥
, 
iBrk
, 
r1
);

615 
	`sqlôe3VdbeCh™geP5
(
v
, 
SQLITE_NULLEQ
);

616 
	`VdbeCovîage
(
v
);

618 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr
);

620 
	}
}

625 
	$codeOff£t
(

626 
Vdbe
 *
v
,

627 
iOff£t
,

628 
iC⁄töue


630 if–
iOff£t
>0 ){

631 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_IfPos
, 
iOff£t
, 
iC⁄töue
, 1); 
	`VdbeCovîage
(v);

632 
	`VdbeCommít
((
v
, "OFFSET"));

634 
	}
}

645 
	$codeDi°ö˘
(

646 
P¨£
 *
pP¨£
,

647 
iTab
,

648 
addrRïót
,

649 
N
,

650 
iMem


652 
Vdbe
 *
v
;

653 
r1
;

655 
v
 = 
pP¨£
->
pVdbe
;

656 
r1
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

657 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_Found
, 
iTab
, 
addrRïót
, 
iMem
, 
N
); 
	`VdbeCovîage
(v);

658 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MakeRec‹d
, 
iMem
, 
N
, 
r1
);

659 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_IdxIn£π
, 
iTab
, 
r1
, 
iMem
, 
N
);

660 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
r1
);

661 
	}
}

672 
	$£À˘I¬îLo›
(

673 
P¨£
 *
pP¨£
,

674 
Sñe˘
 *
p
,

675 
Ex¥Li°
 *
pELi°
,

676 
§cTab
,

677 
S‹tCtx
 *
pS‹t
,

678 
Di°ö˘Ctx
 *
pDi°ö˘
,

679 
Sñe˘De°
 *
pDe°
,

680 
iC⁄töue
,

681 
iBªak


683 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

684 
i
;

685 
hasDi°ö˘
;

686 
eDe°
 = 
pDe°
->eDest;

687 
iP¨m
 = 
pDe°
->
iSDP¨m
;

688 
nResu…Cﬁ
;

689 
nPªfixReg
 = 0;

696 
ªgResu…
;

697 
ªgOrig
;

699 
	`as£π
–
v
 );

700 
	`as£π
–
pELi°
!=0 );

701 
hasDi°ö˘
 = 
pDi°ö˘
 ?ÖDi°ö˘->
eTn˘Ty≥
 : 
WHERE_DISTINCT_NOOP
;

702 if–
pS‹t
 &&ÖS‹t->
pOrdîBy
==0 )ÖSort = 0;

703 if–
pS‹t
==0 && !
hasDi°ö˘
 ){

704 
	`as£π
–
iC⁄töue
!=0 );

705 
	`codeOff£t
(
v
, 
p
->
iOff£t
, 
iC⁄töue
);

710 
nResu…Cﬁ
 = 
pELi°
->
nEx¥
;

712 if–
pDe°
->
iSd°
==0 ){

713 if–
pS‹t
 ){

714 
nPªfixReg
 = 
pS‹t
->
pOrdîBy
->
nEx¥
;

715 if–!(
pS‹t
->
s‹tFœgs
 & 
SORTFLAG_U£S‹ãr
ËË
nPªfixReg
++;

716 
pP¨£
->
nMem
 +
nPªfixReg
;

718 
pDe°
->
iSd°
 = 
pP¨£
->
nMem
+1;

719 
pP¨£
->
nMem
 +
nResu…Cﬁ
;

720 }if–
pDe°
->
iSd°
+
nResu…Cﬁ
 > 
pP¨£
->
nMem
 ){

726 
pP¨£
->
nMem
 +
nResu…Cﬁ
;

728 
pDe°
->
nSd°
 = 
nResu…Cﬁ
;

729 
ªgOrig
 = 
ªgResu…
 = 
pDe°
->
iSd°
;

730 if–
§cTab
>=0 ){

731 
i
=0; i<
nResu…Cﬁ
; i++){

732 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
§cTab
, 
i
, 
ªgResu…
+i);

733 
	`VdbeCommít
((
v
, "%s", 
pELi°
->
a
[
i
].
zName
));

735 }if–
eDe°
!=
SRT_Exi°s
 ){

739 
u8
 
e˚lFœgs
;

740 if–
eDe°
==
SRT_Mem
 ||ÉDe°==
SRT_Ouçut
 ||ÉDe°==
SRT_C‹outöe
 ){

741 
e˚lFœgs
 = 
SQLITE_ECEL_DUP
;

743 
e˚lFœgs
 = 0;

745 
	`as£π
–
eDe°
!=
SRT_TabÀ
 || 
pS‹t
==0 );

746 if–
pS‹t
 && 
hasDi°ö˘
==0 && 
eDe°
!=
SRT_EphemTab
 ){

753 
e˚lFœgs
 |(
SQLITE_ECEL_OMITREF
|
SQLITE_ECEL_REF
);

754 
i
=
pS‹t
->
nOBS©
; i<pS‹t->
pOrdîBy
->
nEx¥
; i++){

755 
j
;

756 if–(
j
 = 
pS‹t
->
pOrdîBy
->
a
[
i
].
u
.
x
.
iOrdîByCﬁ
)>0 ){

757 
pELi°
->
a
[
j
-1].
u
.
x
.
iOrdîByCﬁ
 = 
i
+1-
pS‹t
->
nOBS©
;

760 
ªgOrig
 = 0;

761 
	`as£π
–
eDe°
==
SRT_Së
 ||ÉDe°==
SRT_Mem


762 || 
eDe°
==
SRT_C‹outöe
 ||ÉDe°==
SRT_Ouçut
 );

764 
nResu…Cﬁ
 = 
	`sqlôe3Ex¥CodeEx¥Li°
(
pP¨£
,
pELi°
,
ªgResu…
,0,
e˚lFœgs
);

771 if–
hasDi°ö˘
 ){

772  
pDi°ö˘
->
eTn˘Ty≥
 ){

773 
WHERE_DISTINCT_ORDERED
: {

774 
VdbeOp
 *
pOp
;

775 
iJump
;

776 
ªgPªv
;

779 
ªgPªv
 = 
pP¨£
->
nMem
+1;

780 
pP¨£
->
nMem
 +
nResu…Cﬁ
;

788 
	`sqlôe3VdbeCh™geToNo›
(
v
, 
pDi°ö˘
->
addrTn˘
);

789 
pOp
 = 
	`sqlôe3VdbeGëOp
(
v
, 
pDi°ö˘
->
addrTn˘
);

790 
pOp
->
›code
 = 
OP_NuŒ
;

791 
pOp
->
p1
 = 1;

792 
pOp
->
p2
 = 
ªgPªv
;

794 
iJump
 = 
	`sqlôe3VdbeCuºítAddr
(
v
Ë+ 
nResu…Cﬁ
;

795 
i
=0; i<
nResu…Cﬁ
; i++){

796 
CﬁlSeq
 *
pCﬁl
 = 
	`sqlôe3Ex¥CﬁlSeq
(
pP¨£
, 
pELi°
->
a
[
i
].
pEx¥
);

797 if–
i
<
nResu…Cﬁ
-1 ){

798 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Ne
, 
ªgResu…
+
i
, 
iJump
, 
ªgPªv
+i);

799 
	`VdbeCovîage
(
v
);

801 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Eq
, 
ªgResu…
+
i
, 
iC⁄töue
, 
ªgPªv
+i);

802 
	`VdbeCovîage
(
v
);

804 
	`sqlôe3VdbeCh™geP4
(
v
, -1, (c⁄° *)
pCﬁl
, 
P4_COLLSEQ
);

805 
	`sqlôe3VdbeCh™geP5
(
v
, 
SQLITE_NULLEQ
);

807 
	`as£π
–
	`sqlôe3VdbeCuºítAddr
(
v
)==
iJump
 || 
pP¨£
->
db
->
mÆlocFaûed
 );

808 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_C›y
, 
ªgResu…
, 
ªgPªv
, 
nResu…Cﬁ
-1);

812 
WHERE_DISTINCT_UNIQUE
: {

813 
	`sqlôe3VdbeCh™geToNo›
(
v
, 
pDi°ö˘
->
addrTn˘
);

818 
	`as£π
–
pDi°ö˘
->
eTn˘Ty≥
==
WHERE_DISTINCT_UNORDERED
 );

819 
	`codeDi°ö˘
(
pP¨£
, 
pDi°ö˘
->
èbTn˘
, 
iC⁄töue
, 
nResu…Cﬁ
,

820 
ªgResu…
);

824 if–
pS‹t
==0 ){

825 
	`codeOff£t
(
v
, 
p
->
iOff£t
, 
iC⁄töue
);

829  
eDe°
 ){

833 #i‚de‡
SQLITE_OMIT_COMPOUND_SELECT


834 
SRT_Uni⁄
: {

835 
r1
;

836 
r1
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

837 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MakeRec‹d
, 
ªgResu…
, 
nResu…Cﬁ
, 
r1
);

838 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_IdxIn£π
, 
iP¨m
, 
r1
, 
ªgResu…
, 
nResu…Cﬁ
);

839 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
r1
);

847 
SRT_Ex˚±
: {

848 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_IdxDñëe
, 
iP¨m
, 
ªgResu…
, 
nResu…Cﬁ
);

855 
SRT_Fifo
:

856 
SRT_Di°Fifo
:

857 
SRT_TabÀ
:

858 
SRT_EphemTab
: {

859 
r1
 = 
	`sqlôe3GëTempR™ge
(
pP¨£
, 
nPªfixReg
+1);

860 
	`ã°ˇ£
–
eDe°
==
SRT_TabÀ
 );

861 
	`ã°ˇ£
–
eDe°
==
SRT_EphemTab
 );

862 
	`ã°ˇ£
–
eDe°
==
SRT_Fifo
 );

863 
	`ã°ˇ£
–
eDe°
==
SRT_Di°Fifo
 );

864 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MakeRec‹d
, 
ªgResu…
, 
nResu…Cﬁ
, 
r1
+
nPªfixReg
);

865 #i‚de‡
SQLITE_OMIT_CTE


866 if–
eDe°
==
SRT_Di°Fifo
 ){

872 
addr
 = 
	`sqlôe3VdbeCuºítAddr
(
v
) + 4;

873 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_Found
, 
iP¨m
+1, 
addr
, 
r1
, 0);

874 
	`VdbeCovîage
(
v
);

875 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_IdxIn£π
, 
iP¨m
+1, 
r1
,
ªgResu…
,
nResu…Cﬁ
);

876 
	`as£π
–
pS‹t
==0 );

879 if–
pS‹t
 ){

880 
	`pushO¡oS‹ãr
(
pP¨£
, 
pS‹t
, 
p
, 
r1
+
nPªfixReg
,
ªgResu…
,1,nPrefixReg);

882 
r2
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

883 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NewRowid
, 
iP¨m
, 
r2
);

884 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_In£π
, 
iP¨m
, 
r1
, 
r2
);

885 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_APPEND
);

886 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
r2
);

888 
	`sqlôe3Rñó£TempR™ge
(
pP¨£
, 
r1
, 
nPªfixReg
+1);

892 #i‚de‡
SQLITE_OMIT_SUBQUERY


897 
SRT_Së
: {

898 if–
pS‹t
 ){

903 
	`pushO¡oS‹ãr
(

904 
pP¨£
, 
pS‹t
, 
p
, 
ªgResu…
, 
ªgOrig
, 
nResu…Cﬁ
, 
nPªfixReg
);

906 
r1
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

907 
	`as£π
–
	`sqlôe3SåÀn30
(
pDe°
->
zAffSd°
)==
nResu…Cﬁ
 );

908 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_MakeRec‹d
, 
ªgResu…
, 
nResu…Cﬁ
,

909 
r1
, 
pDe°
->
zAffSd°
, 
nResu…Cﬁ
);

910 
	`sqlôe3Ex¥CacheAfföôyCh™ge
(
pP¨£
, 
ªgResu…
, 
nResu…Cﬁ
);

911 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_IdxIn£π
, 
iP¨m
, 
r1
, 
ªgResu…
, 
nResu…Cﬁ
);

912 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
r1
);

919 
SRT_Exi°s
: {

920 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 1, 
iP¨m
);

929 
SRT_Mem
: {

930 if–
pS‹t
 ){

931 
	`as£π
–
nResu…Cﬁ
<=
pDe°
->
nSd°
 );

932 
	`pushO¡oS‹ãr
(

933 
pP¨£
, 
pS‹t
, 
p
, 
ªgResu…
, 
ªgOrig
, 
nResu…Cﬁ
, 
nPªfixReg
);

935 
	`as£π
–
nResu…Cﬁ
==
pDe°
->
nSd°
 );

936 
	`as£π
–
ªgResu…
==
iP¨m
 );

943 
SRT_C‹outöe
:

944 
SRT_Ouçut
: {

945 
	`ã°ˇ£
–
eDe°
==
SRT_C‹outöe
 );

946 
	`ã°ˇ£
–
eDe°
==
SRT_Ouçut
 );

947 if–
pS‹t
 ){

948 
	`pushO¡oS‹ãr
(
pP¨£
, 
pS‹t
, 
p
, 
ªgResu…
, 
ªgOrig
, 
nResu…Cﬁ
,

949 
nPªfixReg
);

950 }if–
eDe°
==
SRT_C‹outöe
 ){

951 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Yõld
, 
pDe°
->
iSDP¨m
);

953 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 
ªgResu…
, 
nResu…Cﬁ
);

954 
	`sqlôe3Ex¥CacheAfföôyCh™ge
(
pP¨£
, 
ªgResu…
, 
nResu…Cﬁ
);

959 #i‚de‡
SQLITE_OMIT_CTE


966 
SRT_Di°Queue
:

967 
SRT_Queue
: {

968 
nKey
;

969 
r1
, 
r2
, 
r3
;

970 
addrTe°
 = 0;

971 
Ex¥Li°
 *
pSO
;

972 
pSO
 = 
pDe°
->
pOrdîBy
;

973 
	`as£π
–
pSO
 );

974 
nKey
 = 
pSO
->
nEx¥
;

975 
r1
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

976 
r2
 = 
	`sqlôe3GëTempR™ge
(
pP¨£
, 
nKey
+2);

977 
r3
 = 
r2
+
nKey
+1;

978 if–
eDe°
==
SRT_Di°Queue
 ){

982 
addrTe°
 = 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_Found
, 
iP¨m
+1, 0,

983 
ªgResu…
, 
nResu…Cﬁ
);

984 
	`VdbeCovîage
(
v
);

986 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MakeRec‹d
, 
ªgResu…
, 
nResu…Cﬁ
, 
r3
);

987 if–
eDe°
==
SRT_Di°Queue
 ){

988 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IdxIn£π
, 
iP¨m
+1, 
r3
);

989 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_USESEEKRESULT
);

991 
i
=0; i<
nKey
; i++){

992 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_SC›y
,

993 
ªgResu…
 + 
pSO
->
a
[
i
].
u
.
x
.
iOrdîByCﬁ
 - 1,

994 
r2
+
i
);

996 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Sequí˚
, 
iP¨m
, 
r2
+
nKey
);

997 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MakeRec‹d
, 
r2
, 
nKey
+2, 
r1
);

998 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_IdxIn£π
, 
iP¨m
, 
r1
, 
r2
, 
nKey
+2);

999 if–
addrTe°
 ) 
	`sqlôe3VdbeJumpHîe
(
v
,áddrTest);

1000 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
r1
);

1001 
	`sqlôe3Rñó£TempR™ge
(
pP¨£
, 
r2
, 
nKey
+2);

1008 #i‡!
	`deföed
(
SQLITE_OMIT_TRIGGER
)

1015 
	`as£π
–
eDe°
==
SRT_Disˇrd
 );

1025 if–
pS‹t
==0 && 
p
->
iLimô
 ){

1026 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_De¸JumpZîo
, 
p
->
iLimô
, 
iBªak
); 
	`VdbeCovîage
(v);

1028 
	}
}

1034 
KeyInfo
 *
	$sqlôe3KeyInfoAŒoc
(
sqlôe3
 *
db
, 
N
, 
X
){

1035 
nExåa
 = (
N
+
X
)*((
CﬁlSeq
*)+1);

1036 
KeyInfo
 *
p
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, (KeyInfoË+ 
nExåa
);

1037 if–
p
 ){

1038 
p
->
aS‹tOrdî
 = (
u8
*)&p->
aCﬁl
[
N
+
X
];

1039 
p
->
nFõld
 = (
u16
)
N
;

1040 
p
->
nXFõld
 = (
u16
)
X
;

1041 
p
->
íc
 = 
	`ENC
(
db
);

1042 
p
->
db
 = db;

1043 
p
->
xCom∑ª
 = 
UNKNOWN
;

1044 
p
->
nRef
 = 1;

1045 
	`mem£t
(&
p
[1], 0, 
nExåa
);

1047 
	`sqlôe3OomFau…
(
db
);

1049  
p
;

1050 
	}
}

1055 
	$sqlôe3KeyInfoUƒef
(
KeyInfo
 *
p
){

1056 if–
p
 ){

1057 
	`as£π
–
p
->
nRef
>0 );

1058 
p
->
nRef
--;

1059 if–
p
->
nRef
==0 ) 
	`sqlôe3DbFªe
’->
db
,Ö);

1061 
	}
}

1066 
KeyInfo
 *
	$sqlôe3KeyInfoRef
(
KeyInfo
 *
p
){

1067 if–
p
 ){

1068 
	`as£π
–
p
->
nRef
>0 );

1069 
p
->
nRef
++;

1071  
p
;

1072 
	}
}

1074 #ifde‡
SQLITE_DEBUG


1081 
	$sqlôe3KeyInfoIsWrôóbÀ
(
KeyInfo
 *
p
){ Ö->
nRef
==1; 
	}
}

1098 
KeyInfo
 *
	$keyInfoFromEx¥Li°
(

1099 
P¨£
 *
pP¨£
,

1100 
Ex¥Li°
 *
pLi°
,

1101 
iSèπ
,

1102 
nExåa


1104 
nEx¥
;

1105 
KeyInfo
 *
pInfo
;

1106 
Ex¥Li°_ôem
 *
pIãm
;

1107 
sqlôe3
 *
db
 = 
pP¨£
->db;

1108 
i
;

1110 
nEx¥
 = 
pLi°
->nExpr;

1111 
pInfo
 = 
	`sqlôe3KeyInfoAŒoc
(
db
, 
nEx¥
-
iSèπ
, 
nExåa
+1);

1112 if–
pInfo
 ){

1113 
	`as£π
–
	`sqlôe3KeyInfoIsWrôóbÀ
(
pInfo
) );

1114 
i
=
iSèπ
, 
pIãm
=
pLi°
->
a
+iSèπ; i<
nEx¥
; i++,ÖItem++){

1115 
CﬁlSeq
 *
pCﬁl
;

1116 
pCﬁl
 = 
	`sqlôe3Ex¥CﬁlSeq
(
pP¨£
, 
pIãm
->
pEx¥
);

1117 if–!
pCﬁl
 )ÖCﬁ»
db
->
pDÊtCﬁl
;

1118 
pInfo
->
aCﬁl
[
i
-
iSèπ
] = 
pCﬁl
;

1119 
pInfo
->
aS‹tOrdî
[
i
-
iSèπ
] = 
pIãm
->
s‹tOrdî
;

1122  
pInfo
;

1123 
	}
}

1128 c⁄° *
	$£À˘OpName
(
id
){

1129 *
z
;

1130  
id
 ){

1131 
TK_ALL
: 
z
 = "UNION ALL"; ;

1132 
TK_INTERSECT
: 
z
 = "INTERSECT"; ;

1133 
TK_EXCEPT
: 
z
 = "EXCEPT"; ;

1134 : 
z
 = "UNION"; ;

1136  
z
;

1137 
	}
}

1139 #i‚de‡
SQLITE_OMIT_EXPLAIN


1150 
	$ex∂aöTempTabÀ
(
P¨£
 *
pP¨£
, c⁄° *
zUßge
){

1151 if–
pP¨£
->
ex∂aö
==2 ){

1152 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

1153 *
zMsg
 = 
	`sqlôe3MPrötf
(
pP¨£
->
db
, "USE TEMP B-TREE FOR %s", 
zUßge
);

1154 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Ex∂aö
, 
pP¨£
->
iSñe˘Id
, 0, 0, 
zMsg
, 
P4_DYNAMIC
);

1156 
	}
}

1165 
	#ex∂aöSëI¡egî
(
a
, 
b
Ë®
	)
b

1169 
	#ex∂aöTempTabÀ
(
y
,
z
)

	)

1170 
	#ex∂aöSëI¡egî
(
y
,
z
)

	)

1173 #i‡!
deföed
(
SQLITE_OMIT_EXPLAIN
Ë&& !deföed(
SQLITE_OMIT_COMPOUND_SELECT
)

1188 
	$ex∂aöComposôe
(

1189 
P¨£
 *
pP¨£
,

1190 
›
,

1191 
iSub1
,

1192 
iSub2
,

1193 
bU£Tmp


1195 
	`as£π
–
›
==
TK_UNION
 || op==
TK_EXCEPT
 || op==
TK_INTERSECT
 || op==
TK_ALL
 );

1196 if–
pP¨£
->
ex∂aö
==2 ){

1197 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

1198 *
zMsg
 = 
	`sqlôe3MPrötf
(

1199 
pP¨£
->
db
, "COMPOUND SUBQUERIES %d AND %d %s(%s)", 
iSub1
, 
iSub2
,

1200 
bU£Tmp
?"USING TEMP B-TREE ":"", 
	`£À˘OpName
(
›
)

1202 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Ex∂aö
, 
pP¨£
->
iSñe˘Id
, 0, 0, 
zMsg
, 
P4_DYNAMIC
);

1204 
	}
}

1207 
	#ex∂aöComposôe
(
v
,
w
,
x
,
y
,
z
)

	)

1216 
	$gíî©eS‹tTaû
(

1217 
P¨£
 *
pP¨£
,

1218 
Sñe˘
 *
p
,

1219 
S‹tCtx
 *
pS‹t
,

1220 
nCﬁumn
,

1221 
Sñe˘De°
 *
pDe°


1223 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

1224 
addrBªak
 = 
pS‹t
->
œbñD⁄e
;

1225 
addrC⁄töue
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

1226 
addr
;

1227 
addrOn˚
 = 0;

1228 
iTab
;

1229 
Ex¥Li°
 *
pOrdîBy
 = 
pS‹t
->pOrderBy;

1230 
eDe°
 = 
pDe°
->eDest;

1231 
iP¨m
 = 
pDe°
->
iSDP¨m
;

1232 
ªgRow
;

1233 
ªgRowid
;

1234 
iCﬁ
;

1235 
nKey
;

1236 
iS‹tTab
;

1237 
nS‹tD©a
;

1238 
i
;

1239 
bSeq
;

1240 
Ex¥Li°_ôem
 *
aOutEx
 = 
p
->
pELi°
->
a
;

1242 
	`as£π
–
addrBªak
<0 );

1243 if–
pS‹t
->
œbñBkOut
 ){

1244 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Gosub
, 
pS‹t
->
ªgRëu∫
,ÖS‹t->
œbñBkOut
);

1245 
	`sqlôe3VdbeGŸo
(
v
, 
addrBªak
);

1246 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
pS‹t
->
œbñBkOut
);

1248 
iTab
 = 
pS‹t
->
iECurs‹
;

1249 if–
eDe°
==
SRT_Ouçut
 ||ÉDe°==
SRT_C‹outöe
 ||ÉDe°==
SRT_Mem
 ){

1250 
ªgRowid
 = 0;

1251 
ªgRow
 = 
pDe°
->
iSd°
;

1252 
nS‹tD©a
 = 
nCﬁumn
;

1254 
ªgRowid
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

1255 
ªgRow
 = 
	`sqlôe3GëTempR™ge
(
pP¨£
, 
nCﬁumn
);

1256 
nS‹tD©a
 = 
nCﬁumn
;

1258 
nKey
 = 
pOrdîBy
->
nEx¥
 - 
pS‹t
->
nOBS©
;

1259 if–
pS‹t
->
s‹tFœgs
 & 
SORTFLAG_U£S‹ãr
 ){

1260 
ªgS‹tOut
 = ++
pP¨£
->
nMem
;

1261 
iS‹tTab
 = 
pP¨£
->
nTab
++;

1262 if–
pS‹t
->
œbñBkOut
 ){

1263 
addrOn˚
 = 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_On˚
); 
	`VdbeCovîage
(v);

1265 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_O≥nP£udo
, 
iS‹tTab
, 
ªgS‹tOut
, 
nKey
+1+
nS‹tD©a
);

1266 if–
addrOn˚
 ) 
	`sqlôe3VdbeJumpHîe
(
v
,áddrOnce);

1267 
addr
 = 1 + 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_S‹ãrS‹t
, 
iTab
, 
addrBªak
);

1268 
	`VdbeCovîage
(
v
);

1269 
	`codeOff£t
(
v
, 
p
->
iOff£t
, 
addrC⁄töue
);

1270 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_S‹ãrD©a
, 
iTab
, 
ªgS‹tOut
, 
iS‹tTab
);

1271 
bSeq
 = 0;

1273 
addr
 = 1 + 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_S‹t
, 
iTab
, 
addrBªak
); 
	`VdbeCovîage
(v);

1274 
	`codeOff£t
(
v
, 
p
->
iOff£t
, 
addrC⁄töue
);

1275 
iS‹tTab
 = 
iTab
;

1276 
bSeq
 = 1;

1278 
i
=0, 
iCﬁ
=
nKey
+
bSeq
; i<
nS‹tD©a
; i++){

1279 
iRód
;

1280 if–
aOutEx
[
i
].
u
.
x
.
iOrdîByCﬁ
 ){

1281 
iRód
 = 
aOutEx
[
i
].
u
.
x
.
iOrdîByCﬁ
-1;

1283 
iRód
 = 
iCﬁ
++;

1285 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
iS‹tTab
, 
iRód
, 
ªgRow
+
i
);

1286 
	`VdbeCommít
((
v
, "%s", 
aOutEx
[
i
].
zName
 ?áOutEx[i].zNamê:áOutEx[i].
zS∑n
));

1288  
eDe°
 ){

1289 
SRT_EphemTab
: {

1290 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NewRowid
, 
iP¨m
, 
ªgRowid
);

1291 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_In£π
, 
iP¨m
, 
ªgRow
, 
ªgRowid
);

1292 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_APPEND
);

1295 #i‚de‡
SQLITE_OMIT_SUBQUERY


1296 
SRT_Së
: {

1297 
	`as£π
–
nCﬁumn
==
	`sqlôe3SåÀn30
(
pDe°
->
zAffSd°
) );

1298 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_MakeRec‹d
, 
ªgRow
, 
nCﬁumn
, 
ªgRowid
,

1299 
pDe°
->
zAffSd°
, 
nCﬁumn
);

1300 
	`sqlôe3Ex¥CacheAfföôyCh™ge
(
pP¨£
, 
ªgRow
, 
nCﬁumn
);

1301 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_IdxIn£π
, 
iP¨m
, 
ªgRowid
, 
ªgRow
, 
nCﬁumn
);

1304 
SRT_Mem
: {

1310 
	`as£π
–
eDe°
==
SRT_Ouçut
 ||ÉDe°==
SRT_C‹outöe
 );

1311 
	`ã°ˇ£
–
eDe°
==
SRT_Ouçut
 );

1312 
	`ã°ˇ£
–
eDe°
==
SRT_C‹outöe
 );

1313 if–
eDe°
==
SRT_Ouçut
 ){

1314 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 
pDe°
->
iSd°
, 
nCﬁumn
);

1315 
	`sqlôe3Ex¥CacheAfföôyCh™ge
(
pP¨£
, 
pDe°
->
iSd°
, 
nCﬁumn
);

1317 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Yõld
, 
pDe°
->
iSDP¨m
);

1322 if–
ªgRowid
 ){

1323 if–
eDe°
==
SRT_Së
 ){

1324 
	`sqlôe3Rñó£TempR™ge
(
pP¨£
, 
ªgRow
, 
nCﬁumn
);

1326 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgRow
);

1328 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgRowid
);

1332 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
addrC⁄töue
);

1333 if–
pS‹t
->
s‹tFœgs
 & 
SORTFLAG_U£S‹ãr
 ){

1334 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_S‹ãrNext
, 
iTab
, 
addr
); 
	`VdbeCovîage
(v);

1336 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Next
, 
iTab
, 
addr
); 
	`VdbeCovîage
(v);

1338 if–
pS‹t
->
ªgRëu∫
 ) 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Rëu∫
,ÖSort->regReturn);

1339 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
addrBªak
);

1340 
	}
}

1366 #ifde‡
SQLITE_ENABLE_COLUMN_METADATA


1367 
	#cﬁumnTy≥
(
A
,
B
,
C
,
D
,
E
,
F
Ë
	`cﬁumnTy≥Im∂
(A,B,C,D,E,F)

	)

1369 
	#cﬁumnTy≥
(
A
,
B
,
C
,
D
,
E
,
F
Ë
	`cﬁumnTy≥Im∂
(A,B,F)

	)

1371 c⁄° *
cﬁumnTy≥Im∂
(

1372 
NameC⁄ãxt
 *
pNC
,

1373 
Ex¥
 *
pEx¥
,

1374 #ifde‡
SQLITE_ENABLE_COLUMN_METADATA


1375 c⁄° **
pzOrigDb
,

1376 c⁄° **
pzOrigTab
,

1377 c⁄° **
pzOrigCﬁ
,

1379 
u8
 *
pE°Width


1381 c⁄° *
	gzTy≥
 = 0;

1382 
	gj
;

1383 
u8
 
	ge°Width
 = 1;

1384 #ifde‡
SQLITE_ENABLE_COLUMN_METADATA


1385 c⁄° *
	gzOrigDb
 = 0;

1386 c⁄° *
	gzOrigTab
 = 0;

1387 c⁄° *
	gzOrigCﬁ
 = 0;

1390 
as£π
–
pEx¥
!=0 );

1391 
as£π
–
pNC
->
pSrcLi°
!=0 );

1392  
	gpEx¥
->
	g›
 ){

1393 
	gTK_AGG_COLUMN
:

1394 
TK_COLUMN
: {

1399 
TabÀ
 *
pTab
 = 0;

1400 
Sñe˘
 *
	gpS
 = 0;

1401 
	giCﬁ
 = 
pEx¥
->
iCﬁumn
;

1402 
ã°ˇ£
–
pEx¥
->
›
==
TK_AGG_COLUMN
 );

1403 
ã°ˇ£
–
pEx¥
->
›
==
TK_COLUMN
 );

1404  
	gpNC
 && !
	gpTab
 ){

1405 
SrcLi°
 *
	gpTabLi°
 = 
pNC
->
pSrcLi°
;

1406 
	gj
=0;j<
	gpTabLi°
->
	gnSrc
 &&ÖTabLi°->
	ga
[
j
].
	giCurs‹
!=
pEx¥
->
iTabÀ
;j++);

1407 if–
	gj
<
	gpTabLi°
->
	gnSrc
 ){

1408 
	gpTab
 = 
pTabLi°
->
a
[
j
].
pTab
;

1409 
	gpS
 = 
pTabLi°
->
a
[
j
].
pSñe˘
;

1411 
	gpNC
 = 
pNC
->
pNext
;

1415 if–
	gpTab
==0 ){

1436 
as£π
–
pTab
 && 
pEx¥
->pTab==pTab );

1437 if–
	gpS
 ){

1442 if–
	giCﬁ
>=0 && 
ALWAYS
(
iCﬁ
<
pS
->
pELi°
->
nEx¥
) ){

1450 
NameC⁄ãxt
 
sNC
;

1451 
Ex¥
 *
	gp
 = 
pS
->
pELi°
->
a
[
iCﬁ
].
pEx¥
;

1452 
	gsNC
.
	gpSrcLi°
 = 
pS
->
pSrc
;

1453 
	gsNC
.
	gpNext
 = 
pNC
;

1454 
	gsNC
.
	gpP¨£
 = 
pNC
->
pP¨£
;

1455 
	gzTy≥
 = 
cﬁumnTy≥
(&
sNC
, 
p
,&
zOrigDb
,&
zOrigTab
,&
zOrigCﬁ
, &
e°Width
);

1457 }if–
	gpTab
->
	gpSchema
 ){

1459 
as£π
–!
pS
 );

1460 if–
	giCﬁ
<0 ) iCﬁ = 
pTab
->
iPKey
;

1461 
as£π
–
iCﬁ
==-1 || (iCﬁ>=0 && iCﬁ<
pTab
->
nCﬁ
) );

1462 #ifde‡
SQLITE_ENABLE_COLUMN_METADATA


1463 if–
	giCﬁ
<0 ){

1464 
	gzTy≥
 = "INTEGER";

1465 
	gzOrigCﬁ
 = "rowid";

1467 
	gzOrigCﬁ
 = 
pTab
->
aCﬁ
[
iCﬁ
].
zName
;

1468 
	gzTy≥
 = 
sqlôe3CﬁumnTy≥
(&
pTab
->
aCﬁ
[
iCﬁ
],0);

1469 
	ge°Width
 = 
pTab
->
aCﬁ
[
iCﬁ
].
szE°
;

1471 
	gzOrigTab
 = 
pTab
->
zName
;

1472 if–
	gpNC
->
	gpP¨£
 ){

1473 
	giDb
 = 
sqlôe3SchemaToIndex
(
pNC
->
pP¨£
->
db
, 
pTab
->
pSchema
);

1474 
	gzOrigDb
 = 
pNC
->
pP¨£
->
db
->
aDb
[
iDb
].
zDbSName
;

1477 if–
	giCﬁ
<0 ){

1478 
	gzTy≥
 = "INTEGER";

1480 
	gzTy≥
 = 
sqlôe3CﬁumnTy≥
(&
pTab
->
aCﬁ
[
iCﬁ
],0);

1481 
	ge°Width
 = 
pTab
->
aCﬁ
[
iCﬁ
].
szE°
;

1487 #i‚de‡
SQLITE_OMIT_SUBQUERY


1488 
	gTK_SELECT
: {

1493 
NameC⁄ãxt
 
sNC
;

1494 
Sñe˘
 *
	gpS
 = 
pEx¥
->
x
.
pSñe˘
;

1495 
Ex¥
 *
	gp
 = 
pS
->
pELi°
->
a
[0].
pEx¥
;

1496 
as£π
–
Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
) );

1497 
	gsNC
.
	gpSrcLi°
 = 
pS
->
pSrc
;

1498 
	gsNC
.
	gpNext
 = 
pNC
;

1499 
	gsNC
.
	gpP¨£
 = 
pNC
->
pP¨£
;

1500 
	gzTy≥
 = 
cﬁumnTy≥
(&
sNC
, 
p
, &
zOrigDb
, &
zOrigTab
, &
zOrigCﬁ
, &
e°Width
);

1506 #ifde‡
SQLITE_ENABLE_COLUMN_METADATA


1507 if–
	gpzOrigDb
 ){

1508 
as£π
–
pzOrigTab
 && 
pzOrigCﬁ
 );

1509 *
	gpzOrigDb
 = 
zOrigDb
;

1510 *
	gpzOrigTab
 = 
zOrigTab
;

1511 *
	gpzOrigCﬁ
 = 
zOrigCﬁ
;

1514 if–
	gpE°Width
 ) *pE°Width = 
e°Width
;

1515  
	gzTy≥
;

1522 
	$gíî©eCﬁumnTy≥s
(

1523 
P¨£
 *
pP¨£
,

1524 
SrcLi°
 *
pTabLi°
,

1525 
Ex¥Li°
 *
pELi°


1527 #i‚de‡
SQLITE_OMIT_DECLTYPE


1528 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

1529 
i
;

1530 
NameC⁄ãxt
 
sNC
;

1531 
sNC
.
pSrcLi°
 = 
pTabLi°
;

1532 
sNC
.
pP¨£
 =ÖParse;

1533 
i
=0; i<
pELi°
->
nEx¥
; i++){

1534 
Ex¥
 *
p
 = 
pELi°
->
a
[
i
].
pEx¥
;

1535 c⁄° *
zTy≥
;

1536 #ifde‡
SQLITE_ENABLE_COLUMN_METADATA


1537 c⁄° *
zOrigDb
 = 0;

1538 c⁄° *
zOrigTab
 = 0;

1539 c⁄° *
zOrigCﬁ
 = 0;

1540 
zTy≥
 = 
	`cﬁumnTy≥
(&
sNC
, 
p
, &
zOrigDb
, &
zOrigTab
, &
zOrigCﬁ
, 0);

1546 
	`sqlôe3VdbeSëCﬁName
(
v
, 
i
, 
COLNAME_DATABASE
, 
zOrigDb
, 
SQLITE_TRANSIENT
);

1547 
	`sqlôe3VdbeSëCﬁName
(
v
, 
i
, 
COLNAME_TABLE
, 
zOrigTab
, 
SQLITE_TRANSIENT
);

1548 
	`sqlôe3VdbeSëCﬁName
(
v
, 
i
, 
COLNAME_COLUMN
, 
zOrigCﬁ
, 
SQLITE_TRANSIENT
);

1550 
zTy≥
 = 
	`cﬁumnTy≥
(&
sNC
, 
p
, 0, 0, 0, 0);

1552 
	`sqlôe3VdbeSëCﬁName
(
v
, 
i
, 
COLNAME_DECLTYPE
, 
zTy≥
, 
SQLITE_TRANSIENT
);

1555 
	}
}

1562 
	$gíî©eCﬁumnNames
(

1563 
P¨£
 *
pP¨£
,

1564 
SrcLi°
 *
pTabLi°
,

1565 
Ex¥Li°
 *
pELi°


1567 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

1568 
i
, 
j
;

1569 
sqlôe3
 *
db
 = 
pP¨£
->db;

1570 
fuŒNames
, 
sh‹tNames
;

1572 #i‚de‡
SQLITE_OMIT_EXPLAIN


1574 if–
pP¨£
->
ex∂aö
 ){

1579 if–
pP¨£
->
cﬁNamesSë
 || 
db
->
mÆlocFaûed
 ) ;

1580 
	`as£π
–
v
!=0 );

1581 
	`as£π
–
pTabLi°
!=0 );

1582 
pP¨£
->
cﬁNamesSë
 = 1;

1583 
fuŒNames
 = (
db
->
Êags
 & 
SQLITE_FuŒCﬁNames
)!=0;

1584 
sh‹tNames
 = (
db
->
Êags
 & 
SQLITE_Sh‹tCﬁNames
)!=0;

1585 
	`sqlôe3VdbeSëNumCﬁs
(
v
, 
pELi°
->
nEx¥
);

1586 
i
=0; i<
pELi°
->
nEx¥
; i++){

1587 
Ex¥
 *
p
;

1588 
p
 = 
pELi°
->
a
[
i
].
pEx¥
;

1589 if–
	`NEVER
(
p
==0) ) ;

1590 if–
pELi°
->
a
[
i
].
zName
 ){

1591 *
zName
 = 
pELi°
->
a
[
i
].zName;

1592 
	`sqlôe3VdbeSëCﬁName
(
v
, 
i
, 
COLNAME_NAME
, 
zName
, 
SQLITE_TRANSIENT
);

1593 }if–
p
->
›
==
TK_COLUMN
 ||Ö->›==
TK_AGG_COLUMN
 ){

1594 
TabÀ
 *
pTab
;

1595 *
zCﬁ
;

1596 
iCﬁ
 = 
p
->
iCﬁumn
;

1597 
j
=0; 
	`ALWAYS
(j<
pTabLi°
->
nSrc
); j++){

1598 if–
pTabLi°
->
a
[
j
].
iCurs‹
==
p
->
iTabÀ
 ) ;

1600 
	`as£π
–
j
<
pTabLi°
->
nSrc
 );

1601 
pTab
 = 
pTabLi°
->
a
[
j
].pTab;

1602 if–
iCﬁ
<0 ) iCﬁ = 
pTab
->
iPKey
;

1603 
	`as£π
–
iCﬁ
==-1 || (iCﬁ>=0 && iCﬁ<
pTab
->
nCﬁ
) );

1604 if–
iCﬁ
<0 ){

1605 
zCﬁ
 = "rowid";

1607 
zCﬁ
 = 
pTab
->
aCﬁ
[
iCﬁ
].
zName
;

1609 if–!
sh‹tNames
 && !
fuŒNames
 ){

1610 
	`sqlôe3VdbeSëCﬁName
(
v
, 
i
, 
COLNAME_NAME
,

1611 
	`sqlôe3DbSåDup
(
db
, 
pELi°
->
a
[
i
].
zS∑n
), 
SQLITE_DYNAMIC
);

1612 }if–
fuŒNames
 ){

1613 *
zName
 = 0;

1614 
zName
 = 
	`sqlôe3MPrötf
(
db
, "%s.%s", 
pTab
->zName, 
zCﬁ
);

1615 
	`sqlôe3VdbeSëCﬁName
(
v
, 
i
, 
COLNAME_NAME
, 
zName
, 
SQLITE_DYNAMIC
);

1617 
	`sqlôe3VdbeSëCﬁName
(
v
, 
i
, 
COLNAME_NAME
, 
zCﬁ
, 
SQLITE_TRANSIENT
);

1620 c⁄° *
z
 = 
pELi°
->
a
[
i
].
zS∑n
;

1621 
z
 = z==0 ? 
	`sqlôe3MPrötf
(
db
, "cﬁumn%d", 
i
+1Ë: 
	`sqlôe3DbSåDup
(db, z);

1622 
	`sqlôe3VdbeSëCﬁName
(
v
, 
i
, 
COLNAME_NAME
, 
z
, 
SQLITE_DYNAMIC
);

1625 
	`gíî©eCﬁumnTy≥s
(
pP¨£
, 
pTabLi°
, 
pELi°
);

1626 
	}
}

1641 
	$sqlôe3CﬁumnsFromEx¥Li°
(

1642 
P¨£
 *
pP¨£
,

1643 
Ex¥Li°
 *
pELi°
,

1644 
i16
 *
≤Cﬁ
,

1645 
Cﬁumn
 **
∑Cﬁ


1647 
sqlôe3
 *
db
 = 
pP¨£
->db;

1648 
i
, 
j
;

1649 
u32
 
˙t
;

1650 
Cﬁumn
 *
aCﬁ
, *
pCﬁ
;

1651 
nCﬁ
;

1652 
Ex¥
 *
p
;

1653 *
zName
;

1654 
nName
;

1655 
Hash
 
ht
;

1657 
	`sqlôe3HashInô
(&
ht
);

1658 if–
pELi°
 ){

1659 
nCﬁ
 = 
pELi°
->
nEx¥
;

1660 
aCﬁ
 = 
	`sqlôe3DbMÆlocZîo
(
db
, ◊Cﬁ[0])*
nCﬁ
);

1661 
	`ã°ˇ£
–
aCﬁ
==0 );

1663 
nCﬁ
 = 0;

1664 
aCﬁ
 = 0;

1666 
	`as£π
–
nCﬁ
==(
i16
)nCol );

1667 *
≤Cﬁ
 = 
nCﬁ
;

1668 *
∑Cﬁ
 = 
aCﬁ
;

1670 
i
=0, 
pCﬁ
=
aCﬁ
; i<
nCﬁ
 && !
db
->
mÆlocFaûed
; i++,ÖCol++){

1673 
p
 = 
	`sqlôe3Ex¥SkùCﬁœã
(
pELi°
->
a
[
i
].
pEx¥
);

1674 if–(
zName
 = 
pELi°
->
a
[
i
].zName)!=0 ){

1677 
Ex¥
 *
pCﬁEx¥
 = 
p
;

1678 
TabÀ
 *
pTab
;

1679  
pCﬁEx¥
->
›
==
TK_DOT
 ){

1680 
pCﬁEx¥
 =ÖCﬁEx¥->
pRight
;

1681 
	`as£π
–
pCﬁEx¥
!=0 );

1683 if–
pCﬁEx¥
->
›
==
TK_COLUMN
 && 
	`ALWAYS
’CﬁEx¥->
pTab
!=0) ){

1685 
iCﬁ
 = 
pCﬁEx¥
->
iCﬁumn
;

1686 
pTab
 = 
pCﬁEx¥
->pTab;

1687 if–
iCﬁ
<0 ) iCﬁ = 
pTab
->
iPKey
;

1688 
zName
 = 
iCﬁ
>=0 ? 
pTab
->
aCﬁ
[iCol].zName : "rowid";

1689 }if–
pCﬁEx¥
->
›
==
TK_ID
 ){

1690 
	`as£π
–!
	`Ex¥HasPr›îty
(
pCﬁEx¥
, 
EP_I¡VÆue
) );

1691 
zName
 = 
pCﬁEx¥
->
u
.
zTokí
;

1694 
zName
 = 
pELi°
->
a
[
i
].
zS∑n
;

1697 
zName
 = 
	`sqlôe3MPrötf
(
db
, "%s", zName);

1702 
˙t
 = 0;

1703  
zName
 && 
	`sqlôe3HashFöd
(&
ht
, zName)!=0 ){

1704 
nName
 = 
	`sqlôe3SåÀn30
(
zName
);

1705 if–
nName
>0 ){

1706 
j
=
nName
-1; j>0 && 
	`sqlôe3Isdigô
(
zName
[j]); j--){}

1707 if–
zName
[
j
]==':' ) 
nName
 = j;

1709 
zName
 = 
	`sqlôe3MPrötf
(
db
, "%.*z:%u", 
nName
, zName, ++
˙t
);

1710 if–
˙t
>3 ) 
	`sqlôe3_øndom√ss
((cnt), &cnt);

1712 
pCﬁ
->
zName
 = zName;

1713 
	`sqlôe3CﬁumnPr›îtõsFromName
(0, 
pCﬁ
);

1714 if–
zName
 && 
	`sqlôe3HashIn£π
(&
ht
, zName, 
pCﬁ
)==pCol ){

1715 
	`sqlôe3OomFau…
(
db
);

1718 
	`sqlôe3HashCÀ¨
(&
ht
);

1719 if–
db
->
mÆlocFaûed
 ){

1720 
j
=0; j<
i
; j++){

1721 
	`sqlôe3DbFªe
(
db
, 
aCﬁ
[
j
].
zName
);

1723 
	`sqlôe3DbFªe
(
db
, 
aCﬁ
);

1724 *
∑Cﬁ
 = 0;

1725 *
≤Cﬁ
 = 0;

1726  
SQLITE_NOMEM_BKPT
;

1728  
SQLITE_OK
;

1729 
	}
}

1742 
	$sqlôe3Sñe˘AddCﬁumnTy≥AndCﬁœti⁄
(

1743 
P¨£
 *
pP¨£
,

1744 
TabÀ
 *
pTab
,

1745 
Sñe˘
 *
pSñe˘


1747 
sqlôe3
 *
db
 = 
pP¨£
->db;

1748 
NameC⁄ãxt
 
sNC
;

1749 
Cﬁumn
 *
pCﬁ
;

1750 
CﬁlSeq
 *
pCﬁl
;

1751 
i
;

1752 
Ex¥
 *
p
;

1753 
Ex¥Li°_ôem
 *
a
;

1754 
u64
 
szAŒ
 = 0;

1756 
	`as£π
–
pSñe˘
!=0 );

1757 
	`as£π
–(
pSñe˘
->
£lFœgs
 & 
SF_Resﬁved
)!=0 );

1758 
	`as£π
–
pTab
->
nCﬁ
==
pSñe˘
->
pELi°
->
nEx¥
 || 
db
->
mÆlocFaûed
 );

1759 if–
db
->
mÆlocFaûed
 ) ;

1760 
	`mem£t
(&
sNC
, 0, (sNC));

1761 
sNC
.
pSrcLi°
 = 
pSñe˘
->
pSrc
;

1762 
a
 = 
pSñe˘
->
pELi°
->a;

1763 
i
=0, 
pCﬁ
=
pTab
->
aCﬁ
; i<pTab->
nCﬁ
; i++,ÖCol++){

1764 c⁄° *
zTy≥
;

1765 
n
, 
m
;

1766 
p
 = 
a
[
i
].
pEx¥
;

1767 
zTy≥
 = 
	`cﬁumnTy≥
(&
sNC
, 
p
, 0, 0, 0, &
pCﬁ
->
szE°
);

1768 
szAŒ
 +
pCﬁ
->
szE°
;

1769 
pCﬁ
->
afföôy
 = 
	`sqlôe3Ex¥Afföôy
(
p
);

1770 if–
zTy≥
 && (
m
 = 
	`sqlôe3SåÀn30
(zType))>0 ){

1771 
n
 = 
	`sqlôe3SåÀn30
(
pCﬁ
->
zName
);

1772 
pCﬁ
->
zName
 = 
	`sqlôe3DbRóŒocOrFªe
(
db
,ÖCﬁ->zName, 
n
+
m
+2);

1773 if–
pCﬁ
->
zName
 ){

1774 
	`mem˝y
(&
pCﬁ
->
zName
[
n
+1], 
zTy≥
, 
m
+1);

1775 
pCﬁ
->
cﬁFœgs
 |
COLFLAG_HASTYPE
;

1778 if–
pCﬁ
->
afföôy
==0 )ÖCﬁ->afföôy = 
SQLITE_AFF_BLOB
;

1779 
pCﬁl
 = 
	`sqlôe3Ex¥CﬁlSeq
(
pP¨£
, 
p
);

1780 if–
pCﬁl
 && 
pCﬁ
->
zCﬁl
==0 ){

1781 
pCﬁ
->
zCﬁl
 = 
	`sqlôe3DbSåDup
(
db
, 
pCﬁl
->
zName
);

1784 
pTab
->
szTabRow
 = 
	`sqlôe3LogE°
(
szAŒ
*4);

1785 
	}
}

1791 
TabÀ
 *
	$sqlôe3Resu…SëOfSñe˘
(
P¨£
 *
pP¨£
, 
Sñe˘
 *
pSñe˘
){

1792 
TabÀ
 *
pTab
;

1793 
sqlôe3
 *
db
 = 
pP¨£
->db;

1794 
ßvedFœgs
;

1796 
ßvedFœgs
 = 
db
->
Êags
;

1797 
db
->
Êags
 &~
SQLITE_FuŒCﬁNames
;

1798 
db
->
Êags
 |
SQLITE_Sh‹tCﬁNames
;

1799 
	`sqlôe3Sñe˘Pªp
(
pP¨£
, 
pSñe˘
, 0);

1800 if–
pP¨£
->
nEº
 )  0;

1801  
pSñe˘
->
pPri‹
 )ÖSelect =ÖSelect->pPrior;

1802 
db
->
Êags
 = 
ßvedFœgs
;

1803 
pTab
 = 
	`sqlôe3DbMÆlocZîo
(
db
, (
TabÀ
) );

1804 if–
pTab
==0 ){

1809 
	`as£π
–
db
->
lookaside
.
bDißbÀ
 );

1810 
pTab
->
nTabRef
 = 1;

1811 
pTab
->
zName
 = 0;

1812 
pTab
->
nRowLogE°
 = 200; 
	`as£π
–200==
	`sqlôe3LogE°
(1048576) );

1813 
	`sqlôe3CﬁumnsFromEx¥Li°
(
pP¨£
, 
pSñe˘
->
pELi°
, &
pTab
->
nCﬁ
, &pTab->
aCﬁ
);

1814 
	`sqlôe3Sñe˘AddCﬁumnTy≥AndCﬁœti⁄
(
pP¨£
, 
pTab
, 
pSñe˘
);

1815 
pTab
->
iPKey
 = -1;

1816 if–
db
->
mÆlocFaûed
 ){

1817 
	`sqlôe3DñëeTabÀ
(
db
, 
pTab
);

1820  
pTab
;

1821 
	}
}

1827 
SQLITE_NOINLINE
 
Vdbe
 *
	$ÆlocVdbe
(
P¨£
 *
pP¨£
){

1828 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
 = 
	`sqlôe3VdbeCª©e
(pParse);

1829 if–
v
 ) 
	`sqlôe3VdbeAddOp2
(v, 
OP_Inô
, 0, 1);

1830 if–
pP¨£
->
pT›Àvñ
==0

1831 && 
	`O±imiz©i⁄E«bÀd
(
pP¨£
->
db
,
SQLITE_Fa˘‹OutC⁄°
)

1833 
pP¨£
->
okC⁄°Fa˘‹
 = 1;

1835  
v
;

1836 
	}
}

1837 
Vdbe
 *
	$sqlôe3GëVdbe
(
P¨£
 *
pP¨£
){

1838 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

1839  
v
 ? v : 
	`ÆlocVdbe
(
pP¨£
);

1840 
	}
}

1866 
	$compuãLimôRegi°îs
(
P¨£
 *
pP¨£
, 
Sñe˘
 *
p
, 
iBªak
){

1867 
Vdbe
 *
v
 = 0;

1868 
iLimô
 = 0;

1869 
iOff£t
;

1870 
n
;

1871 if–
p
->
iLimô
 ) ;

1879 
	`sqlôe3Ex¥CacheCÀ¨
(
pP¨£
);

1880 
	`as£π
–
p
->
pOff£t
==0 ||Ö->
pLimô
!=0 );

1881 if–
p
->
pLimô
 ){

1882 
p
->
iLimô
 = iLimô = ++
pP¨£
->
nMem
;

1883 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

1884 
	`as£π
–
v
!=0 );

1885 if–
	`sqlôe3Ex¥IsI¡egî
(
p
->
pLimô
, &
n
) ){

1886 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 
n
, 
iLimô
);

1887 
	`VdbeCommít
((
v
, "LIMIT counter"));

1888 if–
n
==0 ){

1889 
	`sqlôe3VdbeGŸo
(
v
, 
iBªak
);

1890 }if–
n
>=0 && 
p
->
nSñe˘Row
>
	`sqlôe3LogE°
((
u64
)n) ){

1891 
p
->
nSñe˘Row
 = 
	`sqlôe3LogE°
((
u64
)
n
);

1892 
p
->
£lFœgs
 |
SF_FixedLimô
;

1895 
	`sqlôe3Ex¥Code
(
pP¨£
, 
p
->
pLimô
, 
iLimô
);

1896 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Mu°BeI¡
, 
iLimô
); 
	`VdbeCovîage
(v);

1897 
	`VdbeCommít
((
v
, "LIMIT counter"));

1898 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IfNŸ
, 
iLimô
, 
iBªak
); 
	`VdbeCovîage
(v);

1900 if–
p
->
pOff£t
 ){

1901 
p
->
iOff£t
 = iOff£à++
pP¨£
->
nMem
;

1902 
pP¨£
->
nMem
++;

1903 
	`sqlôe3Ex¥Code
(
pP¨£
, 
p
->
pOff£t
, 
iOff£t
);

1904 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Mu°BeI¡
, 
iOff£t
); 
	`VdbeCovîage
(v);

1905 
	`VdbeCommít
((
v
, "OFFSET counter"));

1906 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Off£tLimô
, 
iLimô
, 
iOff£t
+1, iOffset);

1907 
	`VdbeCommít
((
v
, "LIMIT+OFFSET"));

1910 
	}
}

1912 #i‚de‡
SQLITE_OMIT_COMPOUND_SELECT


1921 
CﬁlSeq
 *
	$mu…iSñe˘CﬁlSeq
(
P¨£
 *
pP¨£
, 
Sñe˘
 *
p
, 
iCﬁ
){

1922 
CﬁlSeq
 *
pRë
;

1923 if–
p
->
pPri‹
 ){

1924 
pRë
 = 
	`mu…iSñe˘CﬁlSeq
(
pP¨£
, 
p
->
pPri‹
, 
iCﬁ
);

1926 
pRë
 = 0;

1928 
	`as£π
–
iCﬁ
>=0 );

1932 if–
pRë
==0 && 
	`ALWAYS
(
iCﬁ
<
p
->
pELi°
->
nEx¥
) ){

1933 
pRë
 = 
	`sqlôe3Ex¥CﬁlSeq
(
pP¨£
, 
p
->
pELi°
->
a
[
iCﬁ
].
pEx¥
);

1935  
pRë
;

1936 
	}
}

1947 
KeyInfo
 *
	$mu…iSñe˘OrdîByKeyInfo
(
P¨£
 *
pP¨£
, 
Sñe˘
 *
p
, 
nExåa
){

1948 
Ex¥Li°
 *
pOrdîBy
 = 
p
->pOrderBy;

1949 
nOrdîBy
 = 
p
->
pOrdîBy
->
nEx¥
;

1950 
sqlôe3
 *
db
 = 
pP¨£
->db;

1951 
KeyInfo
 *
pRë
 = 
	`sqlôe3KeyInfoAŒoc
(
db
, 
nOrdîBy
+
nExåa
, 1);

1952 if–
pRë
 ){

1953 
i
;

1954 
i
=0; i<
nOrdîBy
; i++){

1955 
Ex¥Li°_ôem
 *
pIãm
 = &
pOrdîBy
->
a
[
i
];

1956 
Ex¥
 *
pTîm
 = 
pIãm
->
pEx¥
;

1957 
CﬁlSeq
 *
pCﬁl
;

1959 if–
pTîm
->
Êags
 & 
EP_Cﬁœã
 ){

1960 
pCﬁl
 = 
	`sqlôe3Ex¥CﬁlSeq
(
pP¨£
, 
pTîm
);

1962 
pCﬁl
 = 
	`mu…iSñe˘CﬁlSeq
(
pP¨£
, 
p
, 
pIãm
->
u
.
x
.
iOrdîByCﬁ
-1);

1963 if–
pCﬁl
==0 )ÖCﬁ»
db
->
pDÊtCﬁl
;

1964 
pOrdîBy
->
a
[
i
].
pEx¥
 =

1965 
	`sqlôe3Ex¥AddCﬁœãSåög
(
pP¨£
, 
pTîm
, 
pCﬁl
->
zName
);

1967 
	`as£π
–
	`sqlôe3KeyInfoIsWrôóbÀ
(
pRë
) );

1968 
pRë
->
aCﬁl
[
i
] = 
pCﬁl
;

1969 
pRë
->
aS‹tOrdî
[
i
] = 
pOrdîBy
->
a
[i].
s‹tOrdî
;

1973  
pRë
;

1974 
	}
}

1976 #i‚de‡
SQLITE_OMIT_CTE


2013 
	$gíî©eWôhRecursiveQuîy
(

2014 
P¨£
 *
pP¨£
,

2015 
Sñe˘
 *
p
,

2016 
Sñe˘De°
 *
pDe°


2018 
SrcLi°
 *
pSrc
 = 
p
->pSrc;

2019 
nCﬁ
 = 
p
->
pELi°
->
nEx¥
;

2020 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

2021 
Sñe˘
 *
pSëup
 = 
p
->
pPri‹
;

2022 
addrT›
;

2023 
addrC⁄t
, 
addrBªak
;

2024 
iCuºít
 = 0;

2025 
ªgCuºít
;

2026 
iQueue
;

2027 
iDi°ö˘
 = 0;

2028 
eDe°
 = 
SRT_Fifo
;

2029 
Sñe˘De°
 
de°Queue
;

2030 
i
;

2031 
rc
;

2032 
Ex¥Li°
 *
pOrdîBy
;

2033 
Ex¥
 *
pLimô
, *
pOff£t
;

2034 
ªgLimô
, 
ªgOff£t
;

2037 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_RECURSIVE
, 0, 0, 0) ) ;

2040 
addrBªak
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

2041 
p
->
nSñe˘Row
 = 320;

2042 
	`compuãLimôRegi°îs
(
pP¨£
, 
p
, 
addrBªak
);

2043 
pLimô
 = 
p
->pLimit;

2044 
pOff£t
 = 
p
->pOffset;

2045 
ªgLimô
 = 
p
->
iLimô
;

2046 
ªgOff£t
 = 
p
->
iOff£t
;

2047 
p
->
pLimô
 =Ö->
pOff£t
 = 0;

2048 
p
->
iLimô
 =Ö->
iOff£t
 = 0;

2049 
pOrdîBy
 = 
p
->pOrderBy;

2052 
i
=0; 
	`ALWAYS
(i<
pSrc
->
nSrc
); i++){

2053 if–
pSrc
->
a
[
i
].
fg
.
isRecursive
 ){

2054 
iCuºít
 = 
pSrc
->
a
[
i
].
iCurs‹
;

2062 
iQueue
 = 
pP¨£
->
nTab
++;

2063 if–
p
->
›
==
TK_UNION
 ){

2064 
eDe°
 = 
pOrdîBy
 ? 
SRT_Di°Queue
 : 
SRT_Di°Fifo
;

2065 
iDi°ö˘
 = 
pP¨£
->
nTab
++;

2067 
eDe°
 = 
pOrdîBy
 ? 
SRT_Queue
 : 
SRT_Fifo
;

2069 
	`sqlôe3Sñe˘De°Inô
(&
de°Queue
, 
eDe°
, 
iQueue
);

2072 
ªgCuºít
 = ++
pP¨£
->
nMem
;

2073 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_O≥nP£udo
, 
iCuºít
, 
ªgCuºít
, 
nCﬁ
);

2074 if–
pOrdîBy
 ){

2075 
KeyInfo
 *
pKeyInfo
 = 
	`mu…iSñe˘OrdîByKeyInfo
(
pP¨£
, 
p
, 1);

2076 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_O≥nEphemîÆ
, 
iQueue
, 
pOrdîBy
->
nEx¥
+2, 0,

2077 (*)
pKeyInfo
, 
P4_KEYINFO
);

2078 
de°Queue
.
pOrdîBy
 =ÖOrderBy;

2080 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_O≥nEphemîÆ
, 
iQueue
, 
nCﬁ
);

2082 
	`VdbeCommít
((
v
, "QueueÅable"));

2083 if–
iDi°ö˘
 ){

2084 
p
->
addrO≥nEphm
[0] = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_O≥nEphemîÆ
, 
iDi°ö˘
, 0);

2085 
p
->
£lFœgs
 |
SF_U£sEphemîÆ
;

2089 
p
->
pOrdîBy
 = 0;

2092 
pSëup
->
pNext
 = 0;

2093 
rc
 = 
	`sqlôe3Sñe˘
(
pP¨£
, 
pSëup
, &
de°Queue
);

2094 
pSëup
->
pNext
 = 
p
;

2095 if–
rc
 ) 
íd_of_ªcursive_quîy
;

2098 
addrT›
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rewöd
, 
iQueue
, 
addrBªak
); 
	`VdbeCovîage
(v);

2101 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_NuŒRow
, 
iCuºít
);

2102 if–
pOrdîBy
 ){

2103 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
iQueue
, 
pOrdîBy
->
nEx¥
+1, 
ªgCuºít
);

2105 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_RowD©a
, 
iQueue
, 
ªgCuºít
);

2107 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Dñëe
, 
iQueue
);

2110 
addrC⁄t
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

2111 
	`codeOff£t
(
v
, 
ªgOff£t
, 
addrC⁄t
);

2112 
	`£À˘I¬îLo›
(
pP¨£
, 
p
,Ö->
pELi°
, 
iCuºít
,

2113 0, 0, 
pDe°
, 
addrC⁄t
, 
addrBªak
);

2114 if–
ªgLimô
 ){

2115 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_De¸JumpZîo
, 
ªgLimô
, 
addrBªak
);

2116 
	`VdbeCovîage
(
v
);

2118 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
addrC⁄t
);

2123 if–
p
->
£lFœgs
 & 
SF_Aggªg©e
 ){

2124 
	`sqlôe3Eº‹Msg
(
pP¨£
, "recursiveággregate queriesÇot supported");

2126 
p
->
pPri‹
 = 0;

2127 
	`sqlôe3Sñe˘
(
pP¨£
, 
p
, &
de°Queue
);

2128 
	`as£π
–
p
->
pPri‹
==0 );

2129 
p
->
pPri‹
 = 
pSëup
;

2133 
	`sqlôe3VdbeGŸo
(
v
, 
addrT›
);

2134 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
addrBªak
);

2136 
íd_of_ªcursive_quîy
:

2137 
	`sqlôe3Ex¥Li°Dñëe
(
pP¨£
->
db
, 
p
->
pOrdîBy
);

2138 
p
->
pOrdîBy
 =ÖOrderBy;

2139 
p
->
pLimô
 =ÖLimit;

2140 
p
->
pOff£t
 =ÖOffset;

2142 
	}
}

2146 
mu…iSñe˘OrdîBy
(

2147 
P¨£
 *
pP¨£
,

2148 
Sñe˘
 *
p
,

2149 
Sñe˘De°
 *
pDe°


2163 
	$mu…iSñe˘VÆues
(

2164 
P¨£
 *
pP¨£
,

2165 
Sñe˘
 *
p
,

2166 
Sñe˘De°
 *
pDe°


2168 
Sñe˘
 *
pPri‹
;

2169 
nRow
 = 1;

2170 
rc
 = 0;

2171 
	`as£π
–
p
->
£lFœgs
 & 
SF_Mu…iVÆue
 );

2173 
	`as£π
–
p
->
£lFœgs
 & 
SF_VÆues
 );

2174 
	`as£π
–
p
->
›
==
TK_ALL
 || (p->›==
TK_SELECT
 &&Ö->
pPri‹
==0) );

2175 
	`as£π
–
p
->
pLimô
==0 );

2176 
	`as£π
–
p
->
pOff£t
==0 );

2177 
	`as£π
–
p
->
pNext
==0 ||Ö->
pELi°
->
nEx¥
==p->pNext->pEList->nExpr );

2178 if–
p
->
pPri‹
==0 ) ;

2179 
	`as£π
–
p
->
pPri‹
->
pNext
==p );

2180 
p
 =Ö->
pPri‹
;

2181 
nRow
++;

2183  
p
 ){

2184 
pPri‹
 = 
p
->pPrior;

2185 
p
->
pPri‹
 = 0;

2186 
rc
 = 
	`sqlôe3Sñe˘
(
pP¨£
, 
p
, 
pDe°
);

2187 
p
->
pPri‹
 =ÖPrior;

2188 if–
rc
 ) ;

2189 
p
->
nSñe˘Row
 = 
nRow
;

2190 
p
 =Ö->
pNext
;

2192  
rc
;

2193 
	}
}

2226 
	$mu…iSñe˘
(

2227 
P¨£
 *
pP¨£
,

2228 
Sñe˘
 *
p
,

2229 
Sñe˘De°
 *
pDe°


2231 
rc
 = 
SQLITE_OK
;

2232 
Sñe˘
 *
pPri‹
;

2233 
Vdbe
 *
v
;

2234 
Sñe˘De°
 
de°
;

2235 
Sñe˘
 *
pDñëe
 = 0;

2236 
sqlôe3
 *
db
;

2237 #i‚de‡
SQLITE_OMIT_EXPLAIN


2238 
iSub1
 = 0;

2239 
iSub2
 = 0;

2245 
	`as£π
–
p
 &&Ö->
pPri‹
 );

2246 
	`as£π
–(
p
->
£lFœgs
 & 
SF_Recursive
)==0 ||Ö->
›
==
TK_ALL
 ||Ö->›==
TK_UNION
 );

2247 
db
 = 
pP¨£
->db;

2248 
pPri‹
 = 
p
->pPrior;

2249 
de°
 = *
pDe°
;

2250 if–
pPri‹
->
pOrdîBy
 ){

2251 
	`sqlôe3Eº‹Msg
(
pP¨£
,"ORDER BY clause should comeáfter %sÇot before",

2252 
	`£À˘OpName
(
p
->
›
));

2253 
rc
 = 1;

2254 
mu…i_£À˘_íd
;

2256 if–
pPri‹
->
pLimô
 ){

2257 
	`sqlôe3Eº‹Msg
(
pP¨£
,"LIMIT clause should comeáfter %sÇot before",

2258 
	`£À˘OpName
(
p
->
›
));

2259 
rc
 = 1;

2260 
mu…i_£À˘_íd
;

2263 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

2264 
	`as£π
–
v
!=0 );

2268 if–
de°
.
eDe°
==
SRT_EphemTab
 ){

2269 
	`as£π
–
p
->
pELi°
 );

2270 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_O≥nEphemîÆ
, 
de°
.
iSDP¨m
, 
p
->
pELi°
->
nEx¥
);

2271 
de°
.
eDe°
 = 
SRT_TabÀ
;

2276 if–
p
->
£lFœgs
 & 
SF_Mu…iVÆue
 ){

2277 
rc
 = 
	`mu…iSñe˘VÆues
(
pP¨£
, 
p
, &
de°
);

2278 
mu…i_£À˘_íd
;

2284 
	`as£π
–
p
->
pELi°
 && 
pPri‹
->pEList );

2285 
	`as£π
–
p
->
pELi°
->
nEx¥
==
pPri‹
->pEList->nExpr );

2287 #i‚de‡
SQLITE_OMIT_CTE


2288 if–
p
->
£lFœgs
 & 
SF_Recursive
 ){

2289 
	`gíî©eWôhRecursiveQuîy
(
pP¨£
, 
p
, &
de°
);

2295 if–
p
->
pOrdîBy
 ){

2296  
	`mu…iSñe˘OrdîBy
(
pP¨£
, 
p
, 
pDe°
);

2301  
p
->
›
 ){

2302 
TK_ALL
: {

2303 
addr
 = 0;

2304 
nLimô
;

2305 
	`as£π
–!
pPri‹
->
pLimô
 );

2306 
pPri‹
->
iLimô
 = 
p
->iLimit;

2307 
pPri‹
->
iOff£t
 = 
p
->iOffset;

2308 
pPri‹
->
pLimô
 = 
p
->pLimit;

2309 
pPri‹
->
pOff£t
 = 
p
->pOffset;

2310 
	`ex∂aöSëI¡egî
(
iSub1
, 
pP¨£
->
iNextSñe˘Id
);

2311 
rc
 = 
	`sqlôe3Sñe˘
(
pP¨£
, 
pPri‹
, &
de°
);

2312 
p
->
pLimô
 = 0;

2313 
p
->
pOff£t
 = 0;

2314 if–
rc
 ){

2315 
mu…i_£À˘_íd
;

2317 
p
->
pPri‹
 = 0;

2318 
p
->
iLimô
 = 
pPri‹
->iLimit;

2319 
p
->
iOff£t
 = 
pPri‹
->iOffset;

2320 if–
p
->
iLimô
 ){

2321 
addr
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_IfNŸ
, 
p
->
iLimô
); 
	`VdbeCovîage
(v);

2322 
	`VdbeCommít
((
v
, "Jumpáhead if LIMITÑeached"));

2323 if–
p
->
iOff£t
 ){

2324 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Off£tLimô
,

2325 
p
->
iLimô
,Ö->
iOff£t
+1,Ö->iOffset);

2328 
	`ex∂aöSëI¡egî
(
iSub2
, 
pP¨£
->
iNextSñe˘Id
);

2329 
rc
 = 
	`sqlôe3Sñe˘
(
pP¨£
, 
p
, &
de°
);

2330 
	`ã°ˇ£
–
rc
!=
SQLITE_OK
 );

2331 
pDñëe
 = 
p
->
pPri‹
;

2332 
p
->
pPri‹
 =ÖPrior;

2333 
p
->
nSñe˘Row
 = 
	`sqlôe3LogE°Add
’->nSñe˘Row, 
pPri‹
->nSelectRow);

2334 if–
pPri‹
->
pLimô


2335 && 
	`sqlôe3Ex¥IsI¡egî
(
pPri‹
->
pLimô
, &
nLimô
)

2336 && 
nLimô
>0 && 
p
->
nSñe˘Row
 > 
	`sqlôe3LogE°
((
u64
)nLimit)

2338 
p
->
nSñe˘Row
 = 
	`sqlôe3LogE°
((
u64
)
nLimô
);

2340 if–
addr
 ){

2341 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr
);

2345 
TK_EXCEPT
:

2346 
TK_UNION
: {

2347 
uni⁄Tab
;

2348 
u8
 
›
 = 0;

2349 
¥i‹Op
;

2350 
Ex¥
 *
pLimô
, *
pOff£t
;

2351 
addr
;

2352 
Sñe˘De°
 
uni⁄de°
;

2354 
	`ã°ˇ£
–
p
->
›
==
TK_EXCEPT
 );

2355 
	`ã°ˇ£
–
p
->
›
==
TK_UNION
 );

2356 
¥i‹Op
 = 
SRT_Uni⁄
;

2357 if–
de°
.
eDe°
==
¥i‹Op
 ){

2361 
	`as£π
–
p
->
pLimô
==0 );

2362 
	`as£π
–
p
->
pOff£t
==0 );

2363 
uni⁄Tab
 = 
de°
.
iSDP¨m
;

2368 
uni⁄Tab
 = 
pP¨£
->
nTab
++;

2369 
	`as£π
–
p
->
pOrdîBy
==0 );

2370 
addr
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_O≥nEphemîÆ
, 
uni⁄Tab
, 0);

2371 
	`as£π
–
p
->
addrO≥nEphm
[0] == -1 );

2372 
p
->
addrO≥nEphm
[0] = 
addr
;

2373 
	`födRightmo°
(
p
)->
£lFœgs
 |
SF_U£sEphemîÆ
;

2374 
	`as£π
–
p
->
pELi°
 );

2379 
	`as£π
–!
pPri‹
->
pOrdîBy
 );

2380 
	`sqlôe3Sñe˘De°Inô
(&
uni⁄de°
, 
¥i‹Op
, 
uni⁄Tab
);

2381 
	`ex∂aöSëI¡egî
(
iSub1
, 
pP¨£
->
iNextSñe˘Id
);

2382 
rc
 = 
	`sqlôe3Sñe˘
(
pP¨£
, 
pPri‹
, &
uni⁄de°
);

2383 if–
rc
 ){

2384 
mu…i_£À˘_íd
;

2389 if–
p
->
›
==
TK_EXCEPT
 ){

2390 
›
 = 
SRT_Ex˚±
;

2392 
	`as£π
–
p
->
›
==
TK_UNION
 );

2393 
›
 = 
SRT_Uni⁄
;

2395 
p
->
pPri‹
 = 0;

2396 
pLimô
 = 
p
->pLimit;

2397 
p
->
pLimô
 = 0;

2398 
pOff£t
 = 
p
->pOffset;

2399 
p
->
pOff£t
 = 0;

2400 
uni⁄de°
.
eDe°
 = 
›
;

2401 
	`ex∂aöSëI¡egî
(
iSub2
, 
pP¨£
->
iNextSñe˘Id
);

2402 
rc
 = 
	`sqlôe3Sñe˘
(
pP¨£
, 
p
, &
uni⁄de°
);

2403 
	`ã°ˇ£
–
rc
!=
SQLITE_OK
 );

2406 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
p
->
pOrdîBy
);

2407 
pDñëe
 = 
p
->
pPri‹
;

2408 
p
->
pPri‹
 =ÖPrior;

2409 
p
->
pOrdîBy
 = 0;

2410 if–
p
->
›
==
TK_UNION
 ){

2411 
p
->
nSñe˘Row
 = 
	`sqlôe3LogE°Add
’->nSñe˘Row, 
pPri‹
->nSelectRow);

2413 
	`sqlôe3Ex¥Dñëe
(
db
, 
p
->
pLimô
);

2414 
p
->
pLimô
 =ÖLimit;

2415 
p
->
pOff£t
 =ÖOffset;

2416 
p
->
iLimô
 = 0;

2417 
p
->
iOff£t
 = 0;

2422 
	`as£π
–
uni⁄Tab
==
de°
.
iSDP¨m
 || de°.
eDe°
!=
¥i‹Op
 );

2423 if–
de°
.
eDe°
!=
¥i‹Op
 ){

2424 
iC⁄t
, 
iBªak
, 
iSèπ
;

2425 
	`as£π
–
p
->
pELi°
 );

2426 if–
de°
.
eDe°
==
SRT_Ouçut
 ){

2427 
Sñe˘
 *
pFú°
 = 
p
;

2428  
pFú°
->
pPri‹
 )ÖFirst =ÖFirst->pPrior;

2429 
	`gíî©eCﬁumnNames
(
pP¨£
, 
pFú°
->
pSrc
,ÖFú°->
pELi°
);

2431 
iBªak
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

2432 
iC⁄t
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

2433 
	`compuãLimôRegi°îs
(
pP¨£
, 
p
, 
iBªak
);

2434 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rewöd
, 
uni⁄Tab
, 
iBªak
); 
	`VdbeCovîage
(v);

2435 
iSèπ
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

2436 
	`£À˘I¬îLo›
(
pP¨£
, 
p
,Ö->
pELi°
, 
uni⁄Tab
,

2437 0, 0, &
de°
, 
iC⁄t
, 
iBªak
);

2438 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
iC⁄t
);

2439 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Next
, 
uni⁄Tab
, 
iSèπ
); 
	`VdbeCovîage
(v);

2440 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
iBªak
);

2441 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Clo£
, 
uni⁄Tab
, 0);

2445 : 
	`as£π
–
p
->
›
==
TK_INTERSECT
 ); {

2446 
èb1
, 
èb2
;

2447 
iC⁄t
, 
iBªak
, 
iSèπ
;

2448 
Ex¥
 *
pLimô
, *
pOff£t
;

2449 
addr
;

2450 
Sñe˘De°
 
öãr£˘de°
;

2451 
r1
;

2457 
èb1
 = 
pP¨£
->
nTab
++;

2458 
èb2
 = 
pP¨£
->
nTab
++;

2459 
	`as£π
–
p
->
pOrdîBy
==0 );

2461 
addr
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_O≥nEphemîÆ
, 
èb1
, 0);

2462 
	`as£π
–
p
->
addrO≥nEphm
[0] == -1 );

2463 
p
->
addrO≥nEphm
[0] = 
addr
;

2464 
	`födRightmo°
(
p
)->
£lFœgs
 |
SF_U£sEphemîÆ
;

2465 
	`as£π
–
p
->
pELi°
 );

2469 
	`sqlôe3Sñe˘De°Inô
(&
öãr£˘de°
, 
SRT_Uni⁄
, 
èb1
);

2470 
	`ex∂aöSëI¡egî
(
iSub1
, 
pP¨£
->
iNextSñe˘Id
);

2471 
rc
 = 
	`sqlôe3Sñe˘
(
pP¨£
, 
pPri‹
, &
öãr£˘de°
);

2472 if–
rc
 ){

2473 
mu…i_£À˘_íd
;

2478 
addr
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_O≥nEphemîÆ
, 
èb2
, 0);

2479 
	`as£π
–
p
->
addrO≥nEphm
[1] == -1 );

2480 
p
->
addrO≥nEphm
[1] = 
addr
;

2481 
p
->
pPri‹
 = 0;

2482 
pLimô
 = 
p
->pLimit;

2483 
p
->
pLimô
 = 0;

2484 
pOff£t
 = 
p
->pOffset;

2485 
p
->
pOff£t
 = 0;

2486 
öãr£˘de°
.
iSDP¨m
 = 
èb2
;

2487 
	`ex∂aöSëI¡egî
(
iSub2
, 
pP¨£
->
iNextSñe˘Id
);

2488 
rc
 = 
	`sqlôe3Sñe˘
(
pP¨£
, 
p
, &
öãr£˘de°
);

2489 
	`ã°ˇ£
–
rc
!=
SQLITE_OK
 );

2490 
pDñëe
 = 
p
->
pPri‹
;

2491 
p
->
pPri‹
 =ÖPrior;

2492 if–
p
->
nSñe˘Row
>
pPri‹
->nSelectRow )Ö->nSelectRow =ÖPrior->nSelectRow;

2493 
	`sqlôe3Ex¥Dñëe
(
db
, 
p
->
pLimô
);

2494 
p
->
pLimô
 =ÖLimit;

2495 
p
->
pOff£t
 =ÖOffset;

2500 
	`as£π
–
p
->
pELi°
 );

2501 if–
de°
.
eDe°
==
SRT_Ouçut
 ){

2502 
Sñe˘
 *
pFú°
 = 
p
;

2503  
pFú°
->
pPri‹
 )ÖFirst =ÖFirst->pPrior;

2504 
	`gíî©eCﬁumnNames
(
pP¨£
, 
pFú°
->
pSrc
,ÖFú°->
pELi°
);

2506 
iBªak
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

2507 
iC⁄t
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

2508 
	`compuãLimôRegi°îs
(
pP¨£
, 
p
, 
iBªak
);

2509 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rewöd
, 
èb1
, 
iBªak
); 
	`VdbeCovîage
(v);

2510 
r1
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

2511 
iSèπ
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_RowD©a
, 
èb1
, 
r1
);

2512 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_NŸFound
, 
èb2
, 
iC⁄t
, 
r1
, 0); 
	`VdbeCovîage
(v);

2513 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
r1
);

2514 
	`£À˘I¬îLo›
(
pP¨£
, 
p
,Ö->
pELi°
, 
èb1
,

2515 0, 0, &
de°
, 
iC⁄t
, 
iBªak
);

2516 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
iC⁄t
);

2517 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Next
, 
èb1
, 
iSèπ
); 
	`VdbeCovîage
(v);

2518 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
iBªak
);

2519 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Clo£
, 
èb2
, 0);

2520 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Clo£
, 
èb1
, 0);

2525 
	`ex∂aöComposôe
(
pP¨£
, 
p
->
›
, 
iSub1
, 
iSub2
,Ö->›!=
TK_ALL
);

2536 if–
p
->
£lFœgs
 & 
SF_U£sEphemîÆ
 ){

2537 
i
;

2538 
KeyInfo
 *
pKeyInfo
;

2539 
Sñe˘
 *
pLo›
;

2540 
CﬁlSeq
 **
≠Cﬁl
;

2541 
nCﬁ
;

2543 
	`as£π
–
p
->
pNext
==0 );

2544 
nCﬁ
 = 
p
->
pELi°
->
nEx¥
;

2545 
pKeyInfo
 = 
	`sqlôe3KeyInfoAŒoc
(
db
, 
nCﬁ
, 1);

2546 if–!
pKeyInfo
 ){

2547 
rc
 = 
SQLITE_NOMEM_BKPT
;

2548 
mu…i_£À˘_íd
;

2550 
i
=0, 
≠Cﬁl
=
pKeyInfo
->
aCﬁl
; i<
nCﬁ
; i++,ápColl++){

2551 *
≠Cﬁl
 = 
	`mu…iSñe˘CﬁlSeq
(
pP¨£
, 
p
, 
i
);

2552 if–0==*
≠Cﬁl
 ){

2553 *
≠Cﬁl
 = 
db
->
pDÊtCﬁl
;

2557 
pLo›
=
p
;ÖLo›;ÖLo›ıLo›->
pPri‹
){

2558 
i
=0; i<2; i++){

2559 
addr
 = 
pLo›
->
addrO≥nEphm
[
i
];

2560 if–
addr
<0 ){

2563 
	`as£π
–
pLo›
->
addrO≥nEphm
[1]<0 );

2566 
	`sqlôe3VdbeCh™geP2
(
v
, 
addr
, 
nCﬁ
);

2567 
	`sqlôe3VdbeCh™geP4
(
v
, 
addr
, (*)
	`sqlôe3KeyInfoRef
(
pKeyInfo
),

2568 
P4_KEYINFO
);

2569 
pLo›
->
addrO≥nEphm
[
i
] = -1;

2572 
	`sqlôe3KeyInfoUƒef
(
pKeyInfo
);

2575 
mu…i_£À˘_íd
:

2576 
pDe°
->
iSd°
 = 
de°
.iSdst;

2577 
pDe°
->
nSd°
 = 
de°
.nSdst;

2578 
	`sqlôe3Sñe˘Dñëe
(
db
, 
pDñëe
);

2579  
rc
;

2580 
	}
}

2587 
	$sqlôe3Sñe˘Wr⁄gNumTîmsEº‹
(
P¨£
 *
pP¨£
, 
Sñe˘
 *
p
){

2588 if–
p
->
£lFœgs
 & 
SF_VÆues
 ){

2589 
	`sqlôe3Eº‹Msg
(
pP¨£
, "all VALUES must haveÅhe sameÇumber ofÅerms");

2591 
	`sqlôe3Eº‹Msg
(
pP¨£
, "SELECTsÅoÅheÜeftándÑight of %s"

2592 " dÿnŸ havêthêßmênumbî o‡ªsu… cﬁumns", 
	`£À˘OpName
(
p
->
›
));

2594 
	}
}

2616 
	$gíî©eOuçutSubroutöe
(

2617 
P¨£
 *
pP¨£
,

2618 
Sñe˘
 *
p
,

2619 
Sñe˘De°
 *
pIn
,

2620 
Sñe˘De°
 *
pDe°
,

2621 
ªgRëu∫
,

2622 
ªgPªv
,

2623 
KeyInfo
 *
pKeyInfo
,

2624 
iBªak


2626 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

2627 
iC⁄töue
;

2628 
addr
;

2630 
addr
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

2631 
iC⁄töue
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

2635 if–
ªgPªv
 ){

2636 
addr1
, 
addr2
;

2637 
addr1
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_IfNŸ
, 
ªgPªv
); 
	`VdbeCovîage
(v);

2638 
addr2
 = 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Com∑ª
, 
pIn
->
iSd°
, 
ªgPªv
+1,ÖIn->
nSd°
,

2639 (*)
	`sqlôe3KeyInfoRef
(
pKeyInfo
), 
P4_KEYINFO
);

2640 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Jump
, 
addr2
+2, 
iC⁄töue
,áddr2+2); 
	`VdbeCovîage
(v);

2641 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr1
);

2642 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_C›y
, 
pIn
->
iSd°
, 
ªgPªv
+1,ÖIn->
nSd°
-1);

2643 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 1, 
ªgPªv
);

2645 if–
pP¨£
->
db
->
mÆlocFaûed
 )  0;

2649 
	`codeOff£t
(
v
, 
p
->
iOff£t
, 
iC⁄töue
);

2651 
	`as£π
–
pDe°
->
eDe°
!=
SRT_Exi°s
 );

2652 
	`as£π
–
pDe°
->
eDe°
!=
SRT_TabÀ
 );

2653  
pDe°
->
eDe°
 ){

2656 
SRT_EphemTab
: {

2657 
r1
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

2658 
r2
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

2659 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MakeRec‹d
, 
pIn
->
iSd°
,ÖIn->
nSd°
, 
r1
);

2660 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NewRowid
, 
pDe°
->
iSDP¨m
, 
r2
);

2661 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_In£π
, 
pDe°
->
iSDP¨m
, 
r1
, 
r2
);

2662 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_APPEND
);

2663 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
r2
);

2664 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
r1
);

2668 #i‚de‡
SQLITE_OMIT_SUBQUERY


2671 
SRT_Së
: {

2672 
r1
;

2673 
	`ã°ˇ£
–
pIn
->
nSd°
>1 );

2674 
r1
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

2675 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_MakeRec‹d
, 
pIn
->
iSd°
,ÖIn->
nSd°
,

2676 
r1
, 
pDe°
->
zAffSd°
, 
pIn
->
nSd°
);

2677 
	`sqlôe3Ex¥CacheAfföôyCh™ge
(
pP¨£
, 
pIn
->
iSd°
,ÖIn->
nSd°
);

2678 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_IdxIn£π
, 
pDe°
->
iSDP¨m
, 
r1
,

2679 
pIn
->
iSd°
,ÖIn->
nSd°
);

2680 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
r1
);

2688 
SRT_Mem
: {

2689 
	`as£π
–
pIn
->
nSd°
==1 || 
pP¨£
->
nEº
>0 ); 
	`ã°ˇ£
(ÖIn->nSdst!=1 );

2690 
	`sqlôe3Ex¥CodeMove
(
pP¨£
, 
pIn
->
iSd°
, 
pDe°
->
iSDP¨m
, 1);

2699 
SRT_C‹outöe
: {

2700 if–
pDe°
->
iSd°
==0 ){

2701 
pDe°
->
iSd°
 = 
	`sqlôe3GëTempR™ge
(
pP¨£
, 
pIn
->
nSd°
);

2702 
pDe°
->
nSd°
 = 
pIn
->nSdst;

2704 
	`sqlôe3Ex¥CodeMove
(
pP¨£
, 
pIn
->
iSd°
, 
pDe°
->iSd°,ÖIn->
nSd°
);

2705 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Yõld
, 
pDe°
->
iSDP¨m
);

2718 
	`as£π
–
pDe°
->
eDe°
==
SRT_Ouçut
 );

2719 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 
pIn
->
iSd°
,ÖIn->
nSd°
);

2720 
	`sqlôe3Ex¥CacheAfföôyCh™ge
(
pP¨£
, 
pIn
->
iSd°
,ÖIn->
nSd°
);

2727 if–
p
->
iLimô
 ){

2728 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_De¸JumpZîo
, 
p
->
iLimô
, 
iBªak
); 
	`VdbeCovîage
(v);

2733 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
iC⁄töue
);

2734 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Rëu∫
, 
ªgRëu∫
);

2736  
addr
;

2737 
	}
}

2824 #i‚de‡
SQLITE_OMIT_COMPOUND_SELECT


2825 
	$mu…iSñe˘OrdîBy
(

2826 
P¨£
 *
pP¨£
,

2827 
Sñe˘
 *
p
,

2828 
Sñe˘De°
 *
pDe°


2830 
i
, 
j
;

2831 
Sñe˘
 *
pPri‹
;

2832 
Vdbe
 *
v
;

2833 
Sñe˘De°
 
de°A
;

2834 
Sñe˘De°
 
de°B
;

2835 
ªgAddrA
;

2836 
ªgAddrB
;

2837 
addrSñe˘A
;

2838 
addrSñe˘B
;

2839 
ªgOutA
;

2840 
ªgOutB
;

2841 
addrOutA
;

2842 
addrOutB
 = 0;

2843 
addrEofA
;

2844 
addrEofA_noB
;

2845 
addrEofB
;

2846 
addrA…B
;

2847 
addrAeqB
;

2848 
addrAgtB
;

2849 
ªgLimôA
;

2850 
ªgLimôB
;

2851 
ªgPªv
;

2852 
ßvedLimô
;

2853 
ßvedOff£t
;

2854 
œbñCm¥
;

2855 
œbñEnd
;

2856 
addr1
;

2857 
›
;

2858 
KeyInfo
 *
pKeyDup
 = 0;

2859 
KeyInfo
 *
pKeyMîge
;

2860 
sqlôe3
 *
db
;

2861 
Ex¥Li°
 *
pOrdîBy
;

2862 
nOrdîBy
;

2863 *
aPîmuã
;

2864 #i‚de‡
SQLITE_OMIT_EXPLAIN


2865 
iSub1
;

2866 
iSub2
;

2869 
	`as£π
–
p
->
pOrdîBy
!=0 );

2870 
	`as£π
–
pKeyDup
==0 );

2871 
db
 = 
pP¨£
->db;

2872 
v
 = 
pP¨£
->
pVdbe
;

2873 
	`as£π
–
v
!=0 );

2874 
œbñEnd
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

2875 
œbñCm¥
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

2880 
›
 = 
p
->op;

2881 
pPri‹
 = 
p
->pPrior;

2882 
	`as£π
–
pPri‹
->
pOrdîBy
==0 );

2883 
pOrdîBy
 = 
p
->pOrderBy;

2884 
	`as£π
–
pOrdîBy
 );

2885 
nOrdîBy
 = 
pOrdîBy
->
nEx¥
;

2891 if–
›
!=
TK_ALL
 ){

2892 
i
=1; 
db
->
mÆlocFaûed
==0 && i<=
p
->
pELi°
->
nEx¥
; i++){

2893 
Ex¥Li°_ôem
 *
pIãm
;

2894 
j
=0, 
pIãm
=
pOrdîBy
->
a
; j<
nOrdîBy
; j++,ÖItem++){

2895 
	`as£π
–
pIãm
->
u
.
x
.
iOrdîByCﬁ
>0 );

2896 if–
pIãm
->
u
.
x
.
iOrdîByCﬁ
==
i
 ) ;

2898 if–
j
==
nOrdîBy
 ){

2899 
Ex¥
 *
pNew
 = 
	`sqlôe3Ex¥
(
db
, 
TK_INTEGER
, 0);

2900 if–
pNew
==0 )  
SQLITE_NOMEM_BKPT
;

2901 
pNew
->
Êags
 |
EP_I¡VÆue
;

2902 
pNew
->
u
.
iVÆue
 = 
i
;

2903 
pOrdîBy
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
,ÖOrdîBy, 
pNew
);

2904 if–
pOrdîBy
 )ÖOrdîBy->
a
[
nOrdîBy
++].
u
.
x
.
iOrdîByCﬁ
 = (
u16
)
i
;

2916 
aPîmuã
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, ()*(
nOrdîBy
 + 1));

2917 if–
aPîmuã
 ){

2918 
Ex¥Li°_ôem
 *
pIãm
;

2919 
aPîmuã
[0] = 
nOrdîBy
;

2920 
i
=1, 
pIãm
=
pOrdîBy
->
a
; i<=
nOrdîBy
; i++,ÖItem++){

2921 
	`as£π
–
pIãm
->
u
.
x
.
iOrdîByCﬁ
>0 );

2922 
	`as£π
–
pIãm
->
u
.
x
.
iOrdîByCﬁ
<=
p
->
pELi°
->
nEx¥
 );

2923 
aPîmuã
[
i
] = 
pIãm
->
u
.
x
.
iOrdîByCﬁ
 - 1;

2925 
pKeyMîge
 = 
	`mu…iSñe˘OrdîByKeyInfo
(
pP¨£
, 
p
, 1);

2927 
pKeyMîge
 = 0;

2932 
p
->
pOrdîBy
 =ÖOrderBy;

2933 
pPri‹
->
pOrdîBy
 = 
	`sqlôe3Ex¥Li°Dup
(
pP¨£
->
db
,ÖOrderBy, 0);

2939 if–
›
==
TK_ALL
 ){

2940 
ªgPªv
 = 0;

2942 
nEx¥
 = 
p
->
pELi°
->nExpr;

2943 
	`as£π
–
nOrdîBy
>=
nEx¥
 || 
db
->
mÆlocFaûed
 );

2944 
ªgPªv
 = 
pP¨£
->
nMem
+1;

2945 
pP¨£
->
nMem
 +
nEx¥
+1;

2946 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 0, 
ªgPªv
);

2947 
pKeyDup
 = 
	`sqlôe3KeyInfoAŒoc
(
db
, 
nEx¥
, 1);

2948 if–
pKeyDup
 ){

2949 
	`as£π
–
	`sqlôe3KeyInfoIsWrôóbÀ
(
pKeyDup
) );

2950 
i
=0; i<
nEx¥
; i++){

2951 
pKeyDup
->
aCﬁl
[
i
] = 
	`mu…iSñe˘CﬁlSeq
(
pP¨£
, 
p
, i);

2952 
pKeyDup
->
aS‹tOrdî
[
i
] = 0;

2959 
p
->
pPri‹
 = 0;

2960 
pPri‹
->
pNext
 = 0;

2961 
	`sqlôe3ResﬁveOrdîGroupBy
(
pP¨£
, 
p
,Ö->
pOrdîBy
, "ORDER");

2962 if–
pPri‹
->pPrior==0 ){

2963 
	`sqlôe3ResﬁveOrdîGroupBy
(
pP¨£
, 
pPri‹
,ÖPri‹->
pOrdîBy
, "ORDER");

2967 
	`compuãLimôRegi°îs
(
pP¨£
, 
p
, 
œbñEnd
);

2968 if–
p
->
iLimô
 && 
›
==
TK_ALL
 ){

2969 
ªgLimôA
 = ++
pP¨£
->
nMem
;

2970 
ªgLimôB
 = ++
pP¨£
->
nMem
;

2971 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_C›y
, 
p
->
iOff£t
 ?Ö->iOff£t+1 :Ö->
iLimô
,

2972 
ªgLimôA
);

2973 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_C›y
, 
ªgLimôA
, 
ªgLimôB
);

2975 
ªgLimôA
 = 
ªgLimôB
 = 0;

2977 
	`sqlôe3Ex¥Dñëe
(
db
, 
p
->
pLimô
);

2978 
p
->
pLimô
 = 0;

2979 
	`sqlôe3Ex¥Dñëe
(
db
, 
p
->
pOff£t
);

2980 
p
->
pOff£t
 = 0;

2982 
ªgAddrA
 = ++
pP¨£
->
nMem
;

2983 
ªgAddrB
 = ++
pP¨£
->
nMem
;

2984 
ªgOutA
 = ++
pP¨£
->
nMem
;

2985 
ªgOutB
 = ++
pP¨£
->
nMem
;

2986 
	`sqlôe3Sñe˘De°Inô
(&
de°A
, 
SRT_C‹outöe
, 
ªgAddrA
);

2987 
	`sqlôe3Sñe˘De°Inô
(&
de°B
, 
SRT_C‹outöe
, 
ªgAddrB
);

2992 
addrSñe˘A
 = 
	`sqlôe3VdbeCuºítAddr
(
v
) + 1;

2993 
addr1
 = 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_InôC‹outöe
, 
ªgAddrA
, 0, 
addrSñe˘A
);

2994 
	`VdbeCommít
((
v
, "left SELECT"));

2995 
pPri‹
->
iLimô
 = 
ªgLimôA
;

2996 
	`ex∂aöSëI¡egî
(
iSub1
, 
pP¨£
->
iNextSñe˘Id
);

2997 
	`sqlôe3Sñe˘
(
pP¨£
, 
pPri‹
, &
de°A
);

2998 
	`sqlôe3VdbeEndC‹outöe
(
v
, 
ªgAddrA
);

2999 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr1
);

3004 
addrSñe˘B
 = 
	`sqlôe3VdbeCuºítAddr
(
v
) + 1;

3005 
addr1
 = 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_InôC‹outöe
, 
ªgAddrB
, 0, 
addrSñe˘B
);

3006 
	`VdbeCommít
((
v
, "right SELECT"));

3007 
ßvedLimô
 = 
p
->
iLimô
;

3008 
ßvedOff£t
 = 
p
->
iOff£t
;

3009 
p
->
iLimô
 = 
ªgLimôB
;

3010 
p
->
iOff£t
 = 0;

3011 
	`ex∂aöSëI¡egî
(
iSub2
, 
pP¨£
->
iNextSñe˘Id
);

3012 
	`sqlôe3Sñe˘
(
pP¨£
, 
p
, &
de°B
);

3013 
p
->
iLimô
 = 
ßvedLimô
;

3014 
p
->
iOff£t
 = 
ßvedOff£t
;

3015 
	`sqlôe3VdbeEndC‹outöe
(
v
, 
ªgAddrB
);

3020 
	`VdbeNo›Commít
((
v
, "OutputÑoutine for A"));

3021 
addrOutA
 = 
	`gíî©eOuçutSubroutöe
(
pP¨£
,

3022 
p
, &
de°A
, 
pDe°
, 
ªgOutA
,

3023 
ªgPªv
, 
pKeyDup
, 
œbñEnd
);

3028 if–
›
==
TK_ALL
 || op==
TK_UNION
 ){

3029 
	`VdbeNo›Commít
((
v
, "OutputÑoutine for B"));

3030 
addrOutB
 = 
	`gíî©eOuçutSubroutöe
(
pP¨£
,

3031 
p
, &
de°B
, 
pDe°
, 
ªgOutB
,

3032 
ªgPªv
, 
pKeyDup
, 
œbñEnd
);

3034 
	`sqlôe3KeyInfoUƒef
(
pKeyDup
);

3039 if–
›
==
TK_EXCEPT
 || op==
TK_INTERSECT
 ){

3040 
addrEofA_noB
 = 
addrEofA
 = 
œbñEnd
;

3042 
	`VdbeNo›Commít
((
v
, "eof-A subroutine"));

3043 
addrEofA
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Gosub
, 
ªgOutB
, 
addrOutB
);

3044 
addrEofA_noB
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Yõld
, 
ªgAddrB
, 
œbñEnd
);

3045 
	`VdbeCovîage
(
v
);

3046 
	`sqlôe3VdbeGŸo
(
v
, 
addrEofA
);

3047 
p
->
nSñe˘Row
 = 
	`sqlôe3LogE°Add
’->nSñe˘Row, 
pPri‹
->nSelectRow);

3053 if–
›
==
TK_INTERSECT
 ){

3054 
addrEofB
 = 
addrEofA
;

3055 if–
p
->
nSñe˘Row
 > 
pPri‹
->nSelectRow )Ö->nSelectRow =ÖPrior->nSelectRow;

3057 
	`VdbeNo›Commít
((
v
, "eof-B subroutine"));

3058 
addrEofB
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Gosub
, 
ªgOutA
, 
addrOutA
);

3059 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Yõld
, 
ªgAddrA
, 
œbñEnd
); 
	`VdbeCovîage
(v);

3060 
	`sqlôe3VdbeGŸo
(
v
, 
addrEofB
);

3065 
	`VdbeNo›Commít
((
v
, "A-lt-B subroutine"));

3066 
addrA…B
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Gosub
, 
ªgOutA
, 
addrOutA
);

3067 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Yõld
, 
ªgAddrA
, 
addrEofA
); 
	`VdbeCovîage
(v);

3068 
	`sqlôe3VdbeGŸo
(
v
, 
œbñCm¥
);

3072 if–
›
==
TK_ALL
 ){

3073 
addrAeqB
 = 
addrA…B
;

3074 }if–
›
==
TK_INTERSECT
 ){

3075 
addrAeqB
 = 
addrA…B
;

3076 
addrA…B
++;

3078 
	`VdbeNo›Commít
((
v
, "A-eq-B subroutine"));

3079 
addrAeqB
 =

3080 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Yõld
, 
ªgAddrA
, 
addrEofA
); 
	`VdbeCovîage
(v);

3081 
	`sqlôe3VdbeGŸo
(
v
, 
œbñCm¥
);

3086 
	`VdbeNo›Commít
((
v
, "A-gt-B subroutine"));

3087 
addrAgtB
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

3088 if–
›
==
TK_ALL
 || op==
TK_UNION
 ){

3089 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Gosub
, 
ªgOutB
, 
addrOutB
);

3091 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Yõld
, 
ªgAddrB
, 
addrEofB
); 
	`VdbeCovîage
(v);

3092 
	`sqlôe3VdbeGŸo
(
v
, 
œbñCm¥
);

3096 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr1
);

3097 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Yõld
, 
ªgAddrA
, 
addrEofA_noB
); 
	`VdbeCovîage
(v);

3098 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Yõld
, 
ªgAddrB
, 
addrEofB
); 
	`VdbeCovîage
(v);

3102 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
œbñCm¥
);

3103 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Pîmuèti⁄
, 0, 0, 0, (*)
aPîmuã
, 
P4_INTARRAY
);

3104 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Com∑ª
, 
de°A
.
iSd°
, 
de°B
.iSd°, 
nOrdîBy
,

3105 (*)
pKeyMîge
, 
P4_KEYINFO
);

3106 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_PERMUTE
);

3107 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Jump
, 
addrA…B
, 
addrAeqB
, 
addrAgtB
); 
	`VdbeCovîage
(v);

3111 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
œbñEnd
);

3115 if–
pDe°
->
eDe°
==
SRT_Ouçut
 ){

3116 
Sñe˘
 *
pFú°
 = 
pPri‹
;

3117  
pFú°
->
pPri‹
 )ÖFirst =ÖFirst->pPrior;

3118 
	`gíî©eCﬁumnNames
(
pP¨£
, 
pFú°
->
pSrc
,ÖFú°->
pELi°
);

3123 if–
p
->
pPri‹
 ){

3124 
	`sqlôe3Sñe˘Dñëe
(
db
, 
p
->
pPri‹
);

3126 
p
->
pPri‹
 =ÖPrior;

3127 
pPri‹
->
pNext
 = 
p
;

3131 
	`ex∂aöComposôe
(
pP¨£
, 
p
->
›
, 
iSub1
, 
iSub2
, 0);

3132  
pP¨£
->
nEº
!=0;

3133 
	}
}

3136 #i‡!
deföed
(
SQLITE_OMIT_SUBQUERY
Ë|| !deföed(
SQLITE_OMIT_VIEW
)

3138 
sub°Ex¥Li°
(
P¨£
*, 
Ex¥Li°
*, , ExprList*);

3139 
sub°Sñe˘
(
P¨£
*, 
Sñe˘
 *, , 
Ex¥Li°
*, );

3154 
Ex¥
 *
	$sub°Ex¥
(

3155 
P¨£
 *
pP¨£
,

3156 
Ex¥
 *
pEx¥
,

3157 
iTabÀ
,

3158 
Ex¥Li°
 *
pELi°


3160 
sqlôe3
 *
db
 = 
pP¨£
->db;

3161 if–
pEx¥
==0 )  0;

3162 if–
pEx¥
->
›
==
TK_COLUMN
 &&ÖEx¥->
iTabÀ
==iTable ){

3163 if–
pEx¥
->
iCﬁumn
<0 ){

3164 
pEx¥
->
›
 = 
TK_NULL
;

3166 
Ex¥
 *
pNew
;

3167 
Ex¥
 *
pC›y
 = 
pELi°
->
a
[
pEx¥
->
iCﬁumn
].pExpr;

3168 
	`as£π
–
pELi°
!=0 && 
pEx¥
->
iCﬁumn
<pELi°->
nEx¥
 );

3169 
	`as£π
–
pEx¥
->
pLe·
==0 &&ÖEx¥->
pRight
==0 );

3170 if–
	`sqlôe3Ex¥IsVe˘‹
(
pC›y
) ){

3171 
	`sqlôe3Ve˘‹Eº‹Msg
(
pP¨£
, 
pC›y
);

3173 
pNew
 = 
	`sqlôe3Ex¥Dup
(
db
, 
pC›y
, 0);

3174 if–
pNew
 && (
pEx¥
->
Êags
 & 
EP_FromJoö
) ){

3175 
pNew
->
iRightJoöTabÀ
 = 
pEx¥
->iRightJoinTable;

3176 
pNew
->
Êags
 |
EP_FromJoö
;

3178 
	`sqlôe3Ex¥Dñëe
(
db
, 
pEx¥
);

3179 
pEx¥
 = 
pNew
;

3183 
pEx¥
->
pLe·
 = 
	`sub°Ex¥
(
pP¨£
,ÖEx¥->pLe·, 
iTabÀ
, 
pELi°
);

3184 
pEx¥
->
pRight
 = 
	`sub°Ex¥
(
pP¨£
,ÖEx¥->pRight, 
iTabÀ
, 
pELi°
);

3185 if–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
) ){

3186 
	`sub°Sñe˘
(
pP¨£
, 
pEx¥
->
x
.
pSñe˘
, 
iTabÀ
, 
pELi°
, 1);

3188 
	`sub°Ex¥Li°
(
pP¨£
, 
pEx¥
->
x
.
pLi°
, 
iTabÀ
, 
pELi°
);

3191  
pEx¥
;

3192 
	}
}

3193 
	$sub°Ex¥Li°
(

3194 
P¨£
 *
pP¨£
,

3195 
Ex¥Li°
 *
pLi°
,

3196 
iTabÀ
,

3197 
Ex¥Li°
 *
pELi°


3199 
i
;

3200 if–
pLi°
==0 ) ;

3201 
i
=0; i<
pLi°
->
nEx¥
; i++){

3202 
pLi°
->
a
[
i
].
pEx¥
 = 
	`sub°Ex¥
(
pP¨£
,ÖLi°->a[i].pEx¥, 
iTabÀ
, 
pELi°
);

3204 
	}
}

3205 
	$sub°Sñe˘
(

3206 
P¨£
 *
pP¨£
,

3207 
Sñe˘
 *
p
,

3208 
iTabÀ
,

3209 
Ex¥Li°
 *
pELi°
,

3210 
doPri‹


3212 
SrcLi°
 *
pSrc
;

3213 
SrcLi°_ôem
 *
pIãm
;

3214 
i
;

3215 if–!
p
 ) ;

3217 
	`sub°Ex¥Li°
(
pP¨£
, 
p
->
pELi°
, 
iTabÀ
,ÖEList);

3218 
	`sub°Ex¥Li°
(
pP¨£
, 
p
->
pGroupBy
, 
iTabÀ
, 
pELi°
);

3219 
	`sub°Ex¥Li°
(
pP¨£
, 
p
->
pOrdîBy
, 
iTabÀ
, 
pELi°
);

3220 
p
->
pHavög
 = 
	`sub°Ex¥
(
pP¨£
,Ö->pHavög, 
iTabÀ
, 
pELi°
);

3221 
p
->
pWhîe
 = 
	`sub°Ex¥
(
pP¨£
,Ö->pWhîe, 
iTabÀ
, 
pELi°
);

3222 
pSrc
 = 
p
->pSrc;

3223 
	`as£π
–
pSrc
!=0 );

3224 
i
=
pSrc
->
nSrc
, 
pIãm
ıSrc->
a
; i>0; i--,ÖItem++){

3225 
	`sub°Sñe˘
(
pP¨£
, 
pIãm
->
pSñe˘
, 
iTabÀ
, 
pELi°
, 1);

3226 if–
pIãm
->
fg
.
isTabFunc
 ){

3227 
	`sub°Ex¥Li°
(
pP¨£
, 
pIãm
->
u1
.
pFuncArg
, 
iTabÀ
, 
pELi°
);

3230 } 
doPri‹
 && (
p
 =Ö->
pPri‹
)!=0 );

3231 
	}
}

3234 #i‡!
deföed
(
SQLITE_OMIT_SUBQUERY
Ë|| !deföed(
SQLITE_OMIT_VIEW
)

3374 
	$Ê©ãnSubquîy
(

3375 
P¨£
 *
pP¨£
,

3376 
Sñe˘
 *
p
,

3377 
iFrom
,

3378 
isAgg
,

3379 
subquîyIsAgg


3381 c⁄° *
zSavedAuthC⁄ãxt
 = 
pP¨£
->
zAuthC⁄ãxt
;

3382 
Sñe˘
 *
pP¨ít
;

3383 
Sñe˘
 *
pSub
;

3384 
Sñe˘
 *
pSub1
;

3385 
SrcLi°
 *
pSrc
;

3386 
SrcLi°
 *
pSubSrc
;

3387 
Ex¥Li°
 *
pLi°
;

3388 
iP¨ít
;

3389 
i
;

3390 
Ex¥
 *
pWhîe
;

3391 
SrcLi°_ôem
 *
pSubôem
;

3392 
sqlôe3
 *
db
 = 
pP¨£
->db;

3396 
	`as£π
–
p
!=0 );

3397 
	`as£π
–
p
->
pPri‹
==0 );

3398 if–
	`O±imiz©i⁄DißbÀd
(
db
, 
SQLITE_QuîyFœâíî
) )  0;

3399 
pSrc
 = 
p
->pSrc;

3400 
	`as£π
–
pSrc
 && 
iFrom
>=0 && iFrom<pSrc->
nSrc
 );

3401 
pSubôem
 = &
pSrc
->
a
[
iFrom
];

3402 
iP¨ít
 = 
pSubôem
->
iCurs‹
;

3403 
pSub
 = 
pSubôem
->
pSñe˘
;

3404 
	`as£π
–
pSub
!=0 );

3405 if–
subquîyIsAgg
 ){

3406 if–
isAgg
 )  0;

3407 if–
pSrc
->
nSrc
>1 )  0;

3408 if–(
p
->
pWhîe
 && 
	`Ex¥HasPr›îty
’->pWhîe,
EP_Subquîy
))

3409 || (
	`sqlôe3Ex¥Li°Fœgs
(
p
->
pELi°
Ë& 
EP_Subquîy
)!=0

3410 || (
	`sqlôe3Ex¥Li°Fœgs
(
p
->
pOrdîBy
Ë& 
EP_Subquîy
)!=0

3416 
pSubSrc
 = 
pSub
->
pSrc
;

3417 
	`as£π
–
pSubSrc
 );

3423 if–
pSub
->
pLimô
 && 
p
->pLimit )  0;

3424 if–
pSub
->
pOff£t
 )  0;

3425 if–(
p
->
£lFœgs
 & 
SF_Compound
)!=0 && 
pSub
->
pLimô
 ){

3428 if–
pSubSrc
->
nSrc
==0 )  0;

3429 if–
pSub
->
£lFœgs
 & 
SF_Di°ö˘
 )  0;

3430 if–
pSub
->
pLimô
 && (
pSrc
->
nSrc
>1 || 
isAgg
) ){

3433 if–(
p
->
£lFœgs
 & 
SF_Di°ö˘
)!=0 && 
subquîyIsAgg
 ){

3436 if–
p
->
pOrdîBy
 && 
pSub
->pOrderBy ){

3439 if–
isAgg
 && 
pSub
->
pOrdîBy
 )  0;

3440 if–
pSub
->
pLimô
 && 
p
->
pWhîe
 )  0;

3441 if–
pSub
->
pLimô
 && (
p
->
£lFœgs
 & 
SF_Di°ö˘
)!=0 ){

3444 
	`ã°ˇ£
–
pSub
->
£lFœgs
 & 
SF_Recursive
 );

3445 
	`ã°ˇ£
–
pSub
->
£lFœgs
 & 
SF_MöMaxAgg
 );

3446 if–
pSub
->
£lFœgs
 & (
SF_Recursive
|
SF_MöMaxAgg
) ){

3449 if–(
p
->
£lFœgs
 & 
SF_Recursive
Ë&& 
pSub
->
pPri‹
 ){

3485 if–(
pSubôem
->
fg
.
joöty≥
 & 
JT_OUTER
)!=0 ){

3494 if–
pSub
->
pPri‹
 ){

3495 if–
pSub
->
pOrdîBy
 ){

3498 if–
isAgg
 || (
p
->
£lFœgs
 & 
SF_Di°ö˘
)!=0 || 
pSrc
->
nSrc
!=1 ){

3501 
pSub1
=
pSub
;ÖSub1;ÖSub1ıSub1->
pPri‹
){

3502 
	`ã°ˇ£
–(
pSub1
->
£lFœgs
 & (
SF_Di°ö˘
|
SF_Aggªg©e
))==SF_Distinct );

3503 
	`ã°ˇ£
–(
pSub1
->
£lFœgs
 & (
SF_Di°ö˘
|
SF_Aggªg©e
))==SF_Aggregate );

3504 
	`as£π
–
pSub
->
pSrc
!=0 );

3505 
	`as£π
–
pSub
->
pELi°
->
nEx¥
==
pSub1
->pEList->nExpr );

3506 if–(
pSub1
->
£lFœgs
 & (
SF_Di°ö˘
|
SF_Aggªg©e
))!=0

3507 || (
pSub1
->
pPri‹
 &&ÖSub1->
›
!=
TK_ALL
)

3508 || 
pSub1
->
pSrc
->
nSrc
<1

3512 
	`ã°ˇ£
–
pSub1
->
pSrc
->
nSrc
>1 );

3516 if–
p
->
pOrdîBy
 ){

3517 
ii
;

3518 
ii
=0; ii<
p
->
pOrdîBy
->
nEx¥
; ii++){

3519 if–
p
->
pOrdîBy
->
a
[
ii
].
u
.
x
.
iOrdîByCﬁ
==0 )  0;

3525 
	`SELECTTRACE
(1,
pP¨£
,
p
,("flatten %s.%p fromÅerm %d\n",

3526 
pSub
->
zSñName
,ÖSub, 
iFrom
));

3529 
pP¨£
->
zAuthC⁄ãxt
 = 
pSubôem
->
zName
;

3530 
	`TESTONLY
(
i
 =Ë
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_SELECT
, 0, 0, 0);

3531 
	`ã°ˇ£
–
i
==
SQLITE_DENY
 );

3532 
pP¨£
->
zAuthC⁄ãxt
 = 
zSavedAuthC⁄ãxt
;

3567 
pSub
ıSub->
pPri‹
;ÖSub;ÖSub=pSub->pPrior){

3568 
Sñe˘
 *
pNew
;

3569 
Ex¥Li°
 *
pOrdîBy
 = 
p
->pOrderBy;

3570 
Ex¥
 *
pLimô
 = 
p
->pLimit;

3571 
Ex¥
 *
pOff£t
 = 
p
->pOffset;

3572 
Sñe˘
 *
pPri‹
 = 
p
->pPrior;

3573 
p
->
pOrdîBy
 = 0;

3574 
p
->
pSrc
 = 0;

3575 
p
->
pPri‹
 = 0;

3576 
p
->
pLimô
 = 0;

3577 
p
->
pOff£t
 = 0;

3578 
pNew
 = 
	`sqlôe3Sñe˘Dup
(
db
, 
p
, 0);

3579 
	`sqlôe3Sñe˘SëName
(
pNew
, 
pSub
->
zSñName
);

3580 
p
->
pOff£t
 =ÖOffset;

3581 
p
->
pLimô
 =ÖLimit;

3582 
p
->
pOrdîBy
 =ÖOrderBy;

3583 
p
->
pSrc
 =ÖSrc;

3584 
p
->
›
 = 
TK_ALL
;

3585 if–
pNew
==0 ){

3586 
p
->
pPri‹
 =ÖPrior;

3588 
pNew
->
pPri‹
 =ÖPrior;

3589 if–
pPri‹
 )ÖPri‹->
pNext
 = 
pNew
;

3590 
pNew
->
pNext
 = 
p
;

3591 
p
->
pPri‹
 = 
pNew
;

3592 
	`SELECTTRACE
(2,
pP¨£
,
p
,

3594 
pNew
->
zSñName
,ÖNew));

3596 if–
db
->
mÆlocFaûed
 )  1;

3602 
pSub
 = 
pSub1
 = 
pSubôem
->
pSñe˘
;

3607 
	`sqlôe3DbFªe
(
db
, 
pSubôem
->
zD©aba£
);

3608 
	`sqlôe3DbFªe
(
db
, 
pSubôem
->
zName
);

3609 
	`sqlôe3DbFªe
(
db
, 
pSubôem
->
zAlüs
);

3610 
pSubôem
->
zD©aba£
 = 0;

3611 
pSubôem
->
zName
 = 0;

3612 
pSubôem
->
zAlüs
 = 0;

3613 
pSubôem
->
pSñe˘
 = 0;

3622 if–
	`ALWAYS
(
pSubôem
->
pTab
!=0) ){

3623 
TabÀ
 *
pTabToDñ
 = 
pSubôem
->
pTab
;

3624 if–
pTabToDñ
->
nTabRef
==1 ){

3625 
P¨£
 *
pT›Àvñ
 = 
	`sqlôe3P¨£T›Àvñ
(
pP¨£
);

3626 
pTabToDñ
->
pNextZombõ
 = 
pT›Àvñ
->
pZombõTab
;

3627 
pT›Àvñ
->
pZombõTab
 = 
pTabToDñ
;

3629 
pTabToDñ
->
nTabRef
--;

3631 
pSubôem
->
pTab
 = 0;

3647 
pP¨ít
=
p
;ÖP¨ít;ÖP¨ítıP¨ít->
pPri‹
, 
pSub
=pSub->pPrior){

3648 
nSubSrc
;

3649 
u8
 
joöty≥
 = 0;

3650 
pSubSrc
 = 
pSub
->
pSrc
;

3651 
nSubSrc
 = 
pSubSrc
->
nSrc
;

3652 
pSrc
 = 
pP¨ít
->pSrc;

3654 if–
pSrc
 ){

3655 
	`as£π
–
pP¨ít
==
p
 );

3656 
joöty≥
 = 
pSubôem
->
fg
.jointype;

3658 
	`as£π
–
pP¨ít
!=
p
 );

3659 
pSrc
 = 
pP¨ít
->pSr¯
	`sqlôe3SrcLi°Aµíd
(
db
, 0, 0, 0);

3660 if–
pSrc
==0 ){

3661 
	`as£π
–
db
->
mÆlocFaûed
 );

3681 if–
nSubSrc
>1 ){

3682 
pP¨ít
->
pSrc
 =ÖSr¯
	`sqlôe3SrcLi°E∆¨ge
(
db
,ÖSrc, 
nSubSrc
-1,
iFrom
+1);

3683 if–
db
->
mÆlocFaûed
 ){

3691 
i
=0; i<
nSubSrc
; i++){

3692 
	`sqlôe3IdLi°Dñëe
(
db
, 
pSrc
->
a
[
i
+
iFrom
].
pUsög
);

3693 
	`as£π
–
pSrc
->
a
[
i
+
iFrom
].
fg
.
isTabFunc
==0 );

3694 
pSrc
->
a
[
i
+
iFrom
] = 
pSubSrc
->a[i];

3695 
	`mem£t
(&
pSubSrc
->
a
[
i
], 0, (pSubSrc->a[i]));

3697 
pSrc
->
a
[
iFrom
].
fg
.
joöty≥
 = jointype;

3711 
pLi°
 = 
pP¨ít
->
pELi°
;

3712 
i
=0; i<
pLi°
->
nEx¥
; i++){

3713 if–
pLi°
->
a
[
i
].
zName
==0 ){

3714 *
zName
 = 
	`sqlôe3DbSåDup
(
db
, 
pLi°
->
a
[
i
].
zS∑n
);

3715 
	`sqlôe3DequŸe
(
zName
);

3716 
pLi°
->
a
[
i
].
zName
 = zName;

3719 if–
pSub
->
pOrdîBy
 ){

3730 
Ex¥Li°
 *
pOrdîBy
 = 
pSub
->pOrderBy;

3731 
i
=0; i<
pOrdîBy
->
nEx¥
; i++){

3732 
pOrdîBy
->
a
[
i
].
u
.
x
.
iOrdîByCﬁ
 = 0;

3734 
	`as£π
–
pP¨ít
->
pOrdîBy
==0 );

3735 
	`as£π
–
pSub
->
pPri‹
==0 );

3736 
pP¨ít
->
pOrdîBy
 =ÖOrderBy;

3737 
pSub
->
pOrdîBy
 = 0;

3739 
pWhîe
 = 
	`sqlôe3Ex¥Dup
(
db
, 
pSub
->pWhere, 0);

3740 if–
subquîyIsAgg
 ){

3741 
	`as£π
–
pP¨ít
->
pHavög
==0 );

3742 
pP¨ít
->
pHavög
 =ÖP¨ít->
pWhîe
;

3743 
pP¨ít
->
pWhîe
 =ÖWhere;

3744 
pP¨ít
->
pHavög
 = 
	`sqlôe3Ex¥And
(
db
,

3745 
	`sqlôe3Ex¥Dup
(
db
, 
pSub
->
pHavög
, 0), 
pP¨ít
->pHaving

3747 
	`as£π
–
pP¨ít
->
pGroupBy
==0 );

3748 
pP¨ít
->
pGroupBy
 = 
	`sqlôe3Ex¥Li°Dup
(
db
, 
pSub
->pGroupBy, 0);

3750 
pP¨ít
->
pWhîe
 = 
	`sqlôe3Ex¥And
(
db
,ÖWhere,ÖParent->pWhere);

3752 
	`sub°Sñe˘
(
pP¨£
, 
pP¨ít
, 
iP¨ít
, 
pSub
->
pELi°
, 0);

3757 
pP¨ít
->
£lFœgs
 |
pSub
->£lFœg†& 
SF_Di°ö˘
;

3765 if–
pSub
->
pLimô
 ){

3766 
pP¨ít
->
pLimô
 = 
pSub
->pLimit;

3767 
pSub
->
pLimô
 = 0;

3774 
	`sqlôe3Sñe˘Dñëe
(
db
, 
pSub1
);

3776 #i‡
SELECTTRACE_ENABLED


3777 if–
sqlôe3Sñe˘Tø˚
 & 0x100 ){

3778 
	`SELECTTRACE
(0x100,
pP¨£
,
p
,("After flattening:\n"));

3779 
	`sqlôe3TªeVõwSñe˘
(0, 
p
, 0);

3784 
	}
}

3789 #i‡!
deföed
(
SQLITE_OMIT_SUBQUERY
Ë|| !deföed(
SQLITE_OMIT_VIEW
)

3825 
	$pushDownWhîeTîms
(

3826 
P¨£
 *
pP¨£
,

3827 
Sñe˘
 *
pSubq
,

3828 
Ex¥
 *
pWhîe
,

3829 
iCurs‹


3831 
Ex¥
 *
pNew
;

3832 
nChng
 = 0;

3833 
Sñe˘
 *
pX
;

3834 if–
pWhîe
==0 )  0;

3835 
pX
=
pSubq
;ÖX;ÖXıX->
pPri‹
){

3836 if–(
pX
->
£lFœgs
 & (
SF_Aggªg©e
|
SF_Recursive
))!=0 ){

3837 
	`ã°ˇ£
–
pX
->
£lFœgs
 & 
SF_Aggªg©e
 );

3838 
	`ã°ˇ£
–
pX
->
£lFœgs
 & 
SF_Recursive
 );

3839 
	`ã°ˇ£
–
pX
!=
pSubq
 );

3843 if–
pSubq
->
pLimô
!=0 ){

3846  
pWhîe
->
›
==
TK_AND
 ){

3847 
nChng
 +
	`pushDownWhîeTîms
(
pP¨£
, 
pSubq
, 
pWhîe
->
pRight
, 
iCurs‹
);

3848 
pWhîe
 =ÖWhîe->
pLe·
;

3850 if–
	`Ex¥HasPr›îty
(
pWhîe
,
EP_FromJoö
) )  0;

3851 if–
	`sqlôe3Ex¥IsTabÀC⁄°™t
(
pWhîe
, 
iCurs‹
) ){

3852 
nChng
++;

3853  
pSubq
 ){

3854 
pNew
 = 
	`sqlôe3Ex¥Dup
(
pP¨£
->
db
, 
pWhîe
, 0);

3855 
pNew
 = 
	`sub°Ex¥
(
pP¨£
,ÖNew, 
iCurs‹
, 
pSubq
->
pELi°
);

3856 
pSubq
->
pWhîe
 = 
	`sqlôe3Ex¥And
(
pP¨£
->
db
,ÖSubq->pWhîe, 
pNew
);

3857 
pSubq
 =ÖSubq->
pPri‹
;

3860  
nChng
;

3861 
	}
}

3879 
u8
 
	$möMaxQuîy
(
AggInfo
 *
pAggInfo
, 
Ex¥Li°
 **
µMöMax
){

3880 
eRë
 = 
WHERE_ORDERBY_NORMAL
;

3882 *
µMöMax
 = 0;

3883 if–
pAggInfo
->
nFunc
==1 ){

3884 
Ex¥
 *
pEx¥
 = 
pAggInfo
->
aFunc
[0].pExpr;

3885 
Ex¥Li°
 *
pELi°
 = 
pEx¥
->
x
.
pLi°
;

3887 
	`as£π
–
pEx¥
->
›
==
TK_AGG_FUNCTION
 );

3888 if–
pELi°
 &&ÖELi°->
nEx¥
==1 &&ÖELi°->
a
[0].
pEx¥
->
›
==
TK_AGG_COLUMN
 ){

3889 c⁄° *
zFunc
 = 
pEx¥
->
u
.
zTokí
;

3890 if–
	`sqlôe3SåICmp
(
zFunc
, "min")==0 ){

3891 
eRë
 = 
WHERE_ORDERBY_MIN
;

3892 *
µMöMax
 = 
pELi°
;

3893 }if–
	`sqlôe3SåICmp
(
zFunc
, "max")==0 ){

3894 
eRë
 = 
WHERE_ORDERBY_MAX
;

3895 *
µMöMax
 = 
pELi°
;

3900 
	`as£π
–*
µMöMax
==0 || (*µMöMax)->
nEx¥
==1 );

3901  
eRë
;

3902 
	}
}

3915 
TabÀ
 *
	$isSim∂eCou¡
(
Sñe˘
 *
p
, 
AggInfo
 *
pAggInfo
){

3916 
TabÀ
 *
pTab
;

3917 
Ex¥
 *
pEx¥
;

3919 
	`as£π
–!
p
->
pGroupBy
 );

3921 if–
p
->
pWhîe
 ||Ö->
pELi°
->
nEx¥
!=1

3922 || 
p
->
pSrc
->
nSrc
!=1 ||Ö->pSrc->
a
[0].
pSñe˘


3926 
pTab
 = 
p
->
pSrc
->
a
[0].pTab;

3927 
pEx¥
 = 
p
->
pELi°
->
a
[0].pExpr;

3928 
	`as£π
–
pTab
 && !pTab->
pSñe˘
 && 
pEx¥
 );

3930 if–
	`IsVútuÆ
(
pTab
) )  0;

3931 if–
pEx¥
->
›
!=
TK_AGG_FUNCTION
 )  0;

3932 if–
	`NEVER
(
pAggInfo
->
nFunc
==0) )  0;

3933 if–(
pAggInfo
->
aFunc
[0].
pFunc
->
funcFœgs
&
SQLITE_FUNC_COUNT
)==0 )  0;

3934 if–
pEx¥
->
Êags
&
EP_Di°ö˘
 )  0;

3936  
pTab
;

3937 
	}
}

3946 
	$sqlôe3IndexedByLookup
(
P¨£
 *
pP¨£
, 
SrcLi°_ôem
 *
pFrom
){

3947 if–
pFrom
->
pTab
 &&ÖFrom->
fg
.
isIndexedBy
 ){

3948 
TabÀ
 *
pTab
 = 
pFrom
->pTab;

3949 *
zIndexedBy
 = 
pFrom
->
u1
.zIndexedBy;

3950 
Index
 *
pIdx
;

3951 
pIdx
=
pTab
->
pIndex
;

3952 
pIdx
 && 
	`sqlôe3SåICmp
’Idx->
zName
, 
zIndexedBy
);

3953 
pIdx
ıIdx->
pNext


3955 if–!
pIdx
 ){

3956 
	`sqlôe3Eº‹Msg
(
pP¨£
, "nÿsuch index: %s", 
zIndexedBy
, 0);

3957 
pP¨£
->
checkSchema
 = 1;

3958  
SQLITE_ERROR
;

3960 
pFrom
->
pIBIndex
 = 
pIdx
;

3962  
SQLITE_OK
;

3963 
	}
}

3985 
	$c⁄vîtCompoundSñe˘ToSubquîy
(
WÆkî
 *
pWÆkî
, 
Sñe˘
 *
p
){

3986 
i
;

3987 
Sñe˘
 *
pNew
;

3988 
Sñe˘
 *
pX
;

3989 
sqlôe3
 *
db
;

3990 
Ex¥Li°_ôem
 *
a
;

3991 
SrcLi°
 *
pNewSrc
;

3992 
P¨£
 *
pP¨£
;

3993 
Tokí
 
dummy
;

3995 if–
p
->
pPri‹
==0 )  
WRC_C⁄töue
;

3996 if–
p
->
pOrdîBy
==0 )  
WRC_C⁄töue
;

3997 
pX
=
p
;ÖX && (pX->
›
==
TK_ALL
 ||ÖX->›==
TK_SELECT
);ÖXıX->
pPri‹
){}

3998 if–
pX
==0 )  
WRC_C⁄töue
;

3999 
a
 = 
p
->
pOrdîBy
->a;

4000 
i
=
p
->
pOrdîBy
->
nEx¥
-1; i>=0; i--){

4001 if–
a
[
i
].
pEx¥
->
Êags
 & 
EP_Cﬁœã
 ) ;

4003 if–
i
<0 )  
WRC_C⁄töue
;

4007 
pP¨£
 = 
pWÆkî
->pParse;

4008 
db
 = 
pP¨£
->db;

4009 
pNew
 = 
	`sqlôe3DbMÆlocZîo
(
db
, (*pNew) );

4010 if–
pNew
==0 )  
WRC_Ab‹t
;

4011 
	`mem£t
(&
dummy
, 0, (dummy));

4012 
pNewSrc
 = 
	`sqlôe3SrcLi°AµídFromTîm
(
pP¨£
,0,0,0,&
dummy
,
pNew
,0,0);

4013 if–
pNewSrc
==0 )  
WRC_Ab‹t
;

4014 *
pNew
 = *
p
;

4015 
p
->
pSrc
 = 
pNewSrc
;

4016 
p
->
pELi°
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
, 0, 
	`sqlôe3Ex¥
(
db
, 
TK_ASTERISK
, 0));

4017 
p
->
›
 = 
TK_SELECT
;

4018 
p
->
pWhîe
 = 0;

4019 
pNew
->
pGroupBy
 = 0;

4020 
pNew
->
pHavög
 = 0;

4021 
pNew
->
pOrdîBy
 = 0;

4022 
p
->
pPri‹
 = 0;

4023 
p
->
pNext
 = 0;

4024 
p
->
pWôh
 = 0;

4025 
p
->
£lFœgs
 &~
SF_Compound
;

4026 
	`as£π
–(
p
->
£lFœgs
 & 
SF_C⁄vîãd
)==0 );

4027 
p
->
£lFœgs
 |
SF_C⁄vîãd
;

4028 
	`as£π
–
pNew
->
pPri‹
!=0 );

4029 
pNew
->
pPri‹
->
pNext
 =ÖNew;

4030 
pNew
->
pLimô
 = 0;

4031 
pNew
->
pOff£t
 = 0;

4032  
WRC_C⁄töue
;

4033 
	}
}

4040 
	$ˇ¬ŸBeFun˘i⁄
(
P¨£
 *
pP¨£
, 
SrcLi°_ôem
 *
pFrom
){

4041 if–
pFrom
->
fg
.
isTabFunc
 ){

4042 
	`sqlôe3Eº‹Msg
(
pP¨£
, "'%s' i†nŸá fun˘i⁄", 
pFrom
->
zName
);

4046 
	}
}

4048 #i‚de‡
SQLITE_OMIT_CTE


4059 
Cã
 *
	$£¨chWôh
(

4060 
Wôh
 *
pWôh
,

4061 
SrcLi°_ôem
 *
pIãm
,

4062 
Wôh
 **
µC⁄ãxt


4064 c⁄° *
zName
;

4065 if–
pIãm
->
zD©aba£
==0 && (
zName
 =ÖItem->zName)!=0 ){

4066 
Wôh
 *
p
;

4067 
p
=
pWôh
;Ö;Öı->
pOuãr
){

4068 
i
;

4069 
i
=0; i<
p
->
nCã
; i++){

4070 if–
	`sqlôe3SåICmp
(
zName
, 
p
->
a
[
i
].zName)==0 ){

4071 *
µC⁄ãxt
 = 
p
;

4072  &
p
->
a
[
i
];

4078 
	}
}

4090 
	$sqlôe3WôhPush
(
P¨£
 *
pP¨£
, 
Wôh
 *
pWôh
, 
u8
 
bFªe
){

4091 
	`as£π
–
bFªe
==0 || (
pP¨£
->
pWôh
==0 &&ÖP¨£->
pWôhToFªe
==0) );

4092 if–
pWôh
 ){

4093 
	`as£π
–
pP¨£
->
pWôh
!=pWith );

4094 
pWôh
->
pOuãr
 = 
pP¨£
->pWith;

4095 
pP¨£
->
pWôh
 =ÖWith;

4096 if–
bFªe
 ) 
pP¨£
->
pWôhToFªe
 = 
pWôh
;

4098 
	}
}

4115 
	$wôhEx∑nd
(

4116 
WÆkî
 *
pWÆkî
,

4117 
SrcLi°_ôem
 *
pFrom


4119 
P¨£
 *
pP¨£
 = 
pWÆkî
->pParse;

4120 
sqlôe3
 *
db
 = 
pP¨£
->db;

4121 
Cã
 *
pCã
;

4122 
Wôh
 *
pWôh
;

4124 
	`as£π
–
pFrom
->
pTab
==0 );

4126 
pCã
 = 
	`£¨chWôh
(
pP¨£
->
pWôh
, 
pFrom
, &pWith);

4127 if–
pCã
 ){

4128 
TabÀ
 *
pTab
;

4129 
Ex¥Li°
 *
pELi°
;

4130 
Sñe˘
 *
pSñ
;

4131 
Sñe˘
 *
pLe·
;

4132 
bMayRecursive
;

4133 
Wôh
 *
pSavedWôh
;

4139 if–
pCã
->
zCãEº
 ){

4140 
	`sqlôe3Eº‹Msg
(
pP¨£
, 
pCã
->
zCãEº
,ÖCã->
zName
);

4141  
SQLITE_ERROR
;

4143 if–
	`ˇ¬ŸBeFun˘i⁄
(
pP¨£
, 
pFrom
ËË 
SQLITE_ERROR
;

4145 
	`as£π
–
pFrom
->
pTab
==0 );

4146 
pFrom
->
pTab
 =ÖTab = 
	`sqlôe3DbMÆlocZîo
(
db
, (
TabÀ
));

4147 if–
pTab
==0 )  
WRC_Ab‹t
;

4148 
pTab
->
nTabRef
 = 1;

4149 
pTab
->
zName
 = 
	`sqlôe3DbSåDup
(
db
, 
pCã
->zName);

4150 
pTab
->
iPKey
 = -1;

4151 
pTab
->
nRowLogE°
 = 200; 
	`as£π
–200==
	`sqlôe3LogE°
(1048576) );

4152 
pTab
->
èbFœgs
 |
TF_EphemîÆ
 | 
TF_NoVisibÀRowid
;

4153 
pFrom
->
pSñe˘
 = 
	`sqlôe3Sñe˘Dup
(
db
, 
pCã
->pSelect, 0);

4154 if–
db
->
mÆlocFaûed
 )  
SQLITE_NOMEM_BKPT
;

4155 
	`as£π
–
pFrom
->
pSñe˘
 );

4158 
pSñ
 = 
pFrom
->
pSñe˘
;

4159 
bMayRecursive
 = ( 
pSñ
->
›
==
TK_ALL
 ||ÖSñ->›==
TK_UNION
 );

4160 if–
bMayRecursive
 ){

4161 
i
;

4162 
SrcLi°
 *
pSrc
 = 
pFrom
->
pSñe˘
->pSrc;

4163 
i
=0; i<
pSrc
->
nSrc
; i++){

4164 
SrcLi°_ôem
 *
pIãm
 = &
pSrc
->
a
[
i
];

4165 if–
pIãm
->
zD©aba£
==0

4166 && 
pIãm
->
zName
!=0

4167 && 0==
	`sqlôe3SåICmp
(
pIãm
->
zName
, 
pCã
->zName)

4169 
pIãm
->
pTab
 =ÖTab;

4170 
pIãm
->
fg
.
isRecursive
 = 1;

4171 
pTab
->
nTabRef
++;

4172 
pSñ
->
£lFœgs
 |
SF_Recursive
;

4178 if–
pTab
->
nTabRef
>2 ){

4179 
	`sqlôe3Eº‹Msg
(

4180 
pP¨£
, "mu…ùÀÑe„ªn˚†tÿªcursivêèbÀ: %s", 
pCã
->
zName


4182  
SQLITE_ERROR
;

4184 
	`as£π
–
pTab
->
nTabRef
==1 || ((
pSñ
->
£lFœgs
&
SF_Recursive
) &&ÖTab->nTabRef==2 ));

4186 
pCã
->
zCãEº
 = "circularÑeference: %s";

4187 
pSavedWôh
 = 
pP¨£
->
pWôh
;

4188 
pP¨£
->
pWôh
 =ÖWith;

4189 
	`sqlôe3WÆkSñe˘
(
pWÆkî
, 
bMayRecursive
 ? 
pSñ
->
pPri‹
 :ÖSel);

4190 
pP¨£
->
pWôh
 =ÖWith;

4192 
pLe·
=
pSñ
;ÖLe·->
pPri‹
;ÖLeft=pLeft->pPrior);

4193 
pELi°
 = 
pLe·
->pEList;

4194 if–
pCã
->
pCﬁs
 ){

4195 if–
pELi°
 &&ÖELi°->
nEx¥
!=
pCã
->
pCﬁs
->nExpr ){

4196 
	`sqlôe3Eº‹Msg
(
pP¨£
, "table %s has %d values for %d columns",

4197 
pCã
->
zName
, 
pELi°
->
nEx¥
,ÖCã->
pCﬁs
->nExpr

4199 
pP¨£
->
pWôh
 = 
pSavedWôh
;

4200  
SQLITE_ERROR
;

4202 
pELi°
 = 
pCã
->
pCﬁs
;

4205 
	`sqlôe3CﬁumnsFromEx¥Li°
(
pP¨£
, 
pELi°
, &
pTab
->
nCﬁ
, &pTab->
aCﬁ
);

4206 if–
bMayRecursive
 ){

4207 if–
pSñ
->
£lFœgs
 & 
SF_Recursive
 ){

4208 
pCã
->
zCãEº
 = "multipleÑecursiveÑeferences: %s";

4210 
pCã
->
zCãEº
 = "recursiveÑeference iná subquery: %s";

4212 
	`sqlôe3WÆkSñe˘
(
pWÆkî
, 
pSñ
);

4214 
pCã
->
zCãEº
 = 0;

4215 
pP¨£
->
pWôh
 = 
pSavedWôh
;

4218  
SQLITE_OK
;

4219 
	}
}

4222 #i‚de‡
SQLITE_OMIT_CTE


4231 
	$£À˘P›Wôh
(
WÆkî
 *
pWÆkî
, 
Sñe˘
 *
p
){

4232 
P¨£
 *
pP¨£
 = 
pWÆkî
->pParse;

4233 
Wôh
 *
pWôh
 = 
	`födRightmo°
(
p
)->pWith;

4234 if–
pWôh
!=0 ){

4235 
	`as£π
–
pP¨£
->
pWôh
==pWith );

4236 
pP¨£
->
pWôh
 =ÖWôh->
pOuãr
;

4238 
	}
}

4240 
	#£À˘P›Wôh
 0

	)

4267 
	$£À˘Ex∑ndî
(
WÆkî
 *
pWÆkî
, 
Sñe˘
 *
p
){

4268 
P¨£
 *
pP¨£
 = 
pWÆkî
->pParse;

4269 
i
, 
j
, 
k
;

4270 
SrcLi°
 *
pTabLi°
;

4271 
Ex¥Li°
 *
pELi°
;

4272 
SrcLi°_ôem
 *
pFrom
;

4273 
sqlôe3
 *
db
 = 
pP¨£
->db;

4274 
Ex¥
 *
pE
, *
pRight
, *
pEx¥
;

4275 
u16
 
£lFœgs
 = 
p
->selFlags;

4277 
p
->
£lFœgs
 |
SF_Ex∑nded
;

4278 if–
db
->
mÆlocFaûed
 ){

4279  
WRC_Ab‹t
;

4281 if–
	`NEVER
(
p
->
pSrc
==0Ë|| (
£lFœgs
 & 
SF_Ex∑nded
)!=0 ){

4282  
WRC_Pru√
;

4284 
pTabLi°
 = 
p
->
pSrc
;

4285 
pELi°
 = 
p
->pEList;

4286 if–
pWÆkî
->
xSñe˘CÆlback2
==
£À˘P›Wôh
 ){

4287 
	`sqlôe3WôhPush
(
pP¨£
, 
	`födRightmo°
(
p
)->
pWôh
, 0);

4293 
	`sqlôe3SrcLi°AssignCurs‹s
(
pP¨£
, 
pTabLi°
);

4299 
i
=0, 
pFrom
=
pTabLi°
->
a
; i<pTabLi°->
nSrc
; i++,ÖFrom++){

4300 
TabÀ
 *
pTab
;

4301 
	`as£π
–
pFrom
->
fg
.
isRecursive
==0 ||ÖFrom->
pTab
!=0 );

4302 if–
pFrom
->
fg
.
isRecursive
 ) ;

4303 
	`as£π
–
pFrom
->
pTab
==0 );

4304 #i‚de‡
SQLITE_OMIT_CTE


4305 if–
	`wôhEx∑nd
(
pWÆkî
, 
pFrom
ËË 
WRC_Ab‹t
;

4306 if–
pFrom
->
pTab
 ) {} 

4308 if–
pFrom
->
zName
==0 ){

4309 #i‚de‡
SQLITE_OMIT_SUBQUERY


4310 
Sñe˘
 *
pSñ
 = 
pFrom
->
pSñe˘
;

4312 
	`as£π
–
pSñ
!=0 );

4313 
	`as£π
–
pFrom
->
pTab
==0 );

4314 if–
	`sqlôe3WÆkSñe˘
(
pWÆkî
, 
pSñ
ËË 
WRC_Ab‹t
;

4315 
pFrom
->
pTab
 =ÖTab = 
	`sqlôe3DbMÆlocZîo
(
db
, (
TabÀ
));

4316 if–
pTab
==0 )  
WRC_Ab‹t
;

4317 
pTab
->
nTabRef
 = 1;

4318 
pTab
->
zName
 = 
	`sqlôe3MPrötf
(
db
, "sqlite_sq_%p", (*)pTab);

4319  
pSñ
->
pPri‹
 ){ÖSel =ÖSel->pPrior; }

4320 
	`sqlôe3CﬁumnsFromEx¥Li°
(
pP¨£
, 
pSñ
->
pELi°
,&
pTab
->
nCﬁ
,&pTab->
aCﬁ
);

4321 
pTab
->
iPKey
 = -1;

4322 
pTab
->
nRowLogE°
 = 200; 
	`as£π
–200==
	`sqlôe3LogE°
(1048576) );

4323 
pTab
->
èbFœgs
 |
TF_EphemîÆ
;

4327 
	`as£π
–
pFrom
->
pTab
==0 );

4328 
pFrom
->
pTab
 =ÖTab = 
	`sqlôe3LoˇãTabÀIãm
(
pP¨£
, 0,ÖFrom);

4329 if–
pTab
==0 )  
WRC_Ab‹t
;

4330 if–
pTab
->
nTabRef
>=0xffff ){

4331 
	`sqlôe3Eº‹Msg
(
pP¨£
, "too manyÑeferencesÅo \"%s\": max 65535",

4332 
pTab
->
zName
);

4333 
pFrom
->
pTab
 = 0;

4334  
WRC_Ab‹t
;

4336 
pTab
->
nTabRef
++;

4337 if–!
	`IsVútuÆ
(
pTab
Ë&& 
	`ˇ¬ŸBeFun˘i⁄
(
pP¨£
, 
pFrom
) ){

4338  
WRC_Ab‹t
;

4340 #i‡!
	`deföed
(
SQLITE_OMIT_VIEW
Ë|| !deföed (
SQLITE_OMIT_VIRTUALTABLE
)

4341 if–
	`IsVútuÆ
(
pTab
Ë||ÖTab->
pSñe˘
 ){

4342 
i16
 
nCﬁ
;

4343 if–
	`sqlôe3VõwGëCﬁumnNames
(
pP¨£
, 
pTab
ËË 
WRC_Ab‹t
;

4344 
	`as£π
–
pFrom
->
pSñe˘
==0 );

4345 
pFrom
->
pSñe˘
 = 
	`sqlôe3Sñe˘Dup
(
db
, 
pTab
->pSelect, 0);

4346 
	`sqlôe3Sñe˘SëName
(
pFrom
->
pSñe˘
, 
pTab
->
zName
);

4347 
nCﬁ
 = 
pTab
->nCol;

4348 
pTab
->
nCﬁ
 = -1;

4349 
	`sqlôe3WÆkSñe˘
(
pWÆkî
, 
pFrom
->
pSñe˘
);

4350 
pTab
->
nCﬁ
 =ÇCol;

4356 if–
	`sqlôe3IndexedByLookup
(
pP¨£
, 
pFrom
) ){

4357  
WRC_Ab‹t
;

4363 if–
db
->
mÆlocFaûed
 || 
	`sqlôePro˚ssJoö
(
pP¨£
, 
p
) ){

4364  
WRC_Ab‹t
;

4378 
k
=0; k<
pELi°
->
nEx¥
; k++){

4379 
pE
 = 
pELi°
->
a
[
k
].
pEx¥
;

4380 if–
pE
->
›
==
TK_ASTERISK
 ) ;

4381 
	`as£π
–
pE
->
›
!=
TK_DOT
 ||ÖE->
pRight
!=0 );

4382 
	`as£π
–
pE
->
›
!=
TK_DOT
 || (pE->
pLe·
!=0 &&ÖE->pLe·->›==
TK_ID
) );

4383 if–
pE
->
›
==
TK_DOT
 &&ÖE->
pRight
->›==
TK_ASTERISK
 ) ;

4385 if–
k
<
pELi°
->
nEx¥
 ){

4391 
Ex¥Li°_ôem
 *
a
 = 
pELi°
->a;

4392 
Ex¥Li°
 *
pNew
 = 0;

4393 
Êags
 = 
pP¨£
->
db
->flags;

4394 
l⁄gNames
 = (
Êags
 & 
SQLITE_FuŒCﬁNames
)!=0

4395 && (
Êags
 & 
SQLITE_Sh‹tCﬁNames
)==0;

4397 
k
=0; k<
pELi°
->
nEx¥
; k++){

4398 
pE
 = 
a
[
k
].
pEx¥
;

4399 
pRight
 = 
pE
->pRight;

4400 
	`as£π
–
pE
->
›
!=
TK_DOT
 || 
pRight
!=0 );

4401 if–
pE
->
›
!=
TK_ASTERISK


4402 && (
pE
->
›
!=
TK_DOT
 || 
pRight
->›!=
TK_ASTERISK
)

4406 
pNew
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
,ÖNew, 
a
[
k
].
pEx¥
);

4407 if–
pNew
 ){

4408 
pNew
->
a
[pNew->
nEx¥
-1].
zName
 =á[
k
].zName;

4409 
pNew
->
a
[pNew->
nEx¥
-1].
zS∑n
 =á[
k
].zSpan;

4410 
a
[
k
].
zName
 = 0;

4411 
a
[
k
].
zS∑n
 = 0;

4413 
a
[
k
].
pEx¥
 = 0;

4417 
èbÀSìn
 = 0;

4418 *
zTName
 = 0;

4419 if–
pE
->
›
==
TK_DOT
 ){

4420 
	`as£π
–
pE
->
pLe·
!=0 );

4421 
	`as£π
–!
	`Ex¥HasPr›îty
(
pE
->
pLe·
, 
EP_I¡VÆue
) );

4422 
zTName
 = 
pE
->
pLe·
->
u
.
zTokí
;

4424 
i
=0, 
pFrom
=
pTabLi°
->
a
; i<pTabLi°->
nSrc
; i++,ÖFrom++){

4425 
TabÀ
 *
pTab
 = 
pFrom
->pTab;

4426 
Sñe˘
 *
pSub
 = 
pFrom
->
pSñe˘
;

4427 *
zTabName
 = 
pFrom
->
zAlüs
;

4428 c⁄° *
zSchemaName
 = 0;

4429 
iDb
;

4430 if–
zTabName
==0 ){

4431 
zTabName
 = 
pTab
->
zName
;

4433 if–
db
->
mÆlocFaûed
 ) ;

4434 if–
pSub
==0 || (pSub->
£lFœgs
 & 
SF_Ne°edFrom
)==0 ){

4435 
pSub
 = 0;

4436 if–
zTName
 && 
	`sqlôe3SåICmp
(zTName, 
zTabName
)!=0 ){

4439 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pTab
->
pSchema
);

4440 
zSchemaName
 = 
iDb
>=0 ? 
db
->
aDb
[iDb].
zDbSName
 : "*";

4442 
j
=0; j<
pTab
->
nCﬁ
; j++){

4443 *
zName
 = 
pTab
->
aCﬁ
[
j
].zName;

4444 *
zCﬁ«me
;

4445 *
zToFªe
;

4446 
Tokí
 
sCﬁ«me
;

4448 
	`as£π
–
zName
 );

4449 if–
zTName
 && 
pSub


4450 && 
	`sqlôe3M©chS∑nName
(
pSub
->
pELi°
->
a
[
j
].
zS∑n
, 0, 
zTName
, 0)==0

4459 if–(
p
->
£lFœgs
 & 
SF_In˛udeHiddí
)==0

4460 && 
	`IsHiddíCﬁumn
(&
pTab
->
aCﬁ
[
j
])

4464 
èbÀSìn
 = 1;

4466 if–
i
>0 && 
zTName
==0 ){

4467 if–(
pFrom
->
fg
.
joöty≥
 & 
JT_NATURAL
)!=0

4468 && 
	`èbÀAndCﬁumnIndex
(
pTabLi°
, 
i
, 
zName
, 0, 0)

4474 if–
	`sqlôe3IdLi°Index
(
pFrom
->
pUsög
, 
zName
)>=0 ){

4480 
pRight
 = 
	`sqlôe3Ex¥
(
db
, 
TK_ID
, 
zName
);

4481 
zCﬁ«me
 = 
zName
;

4482 
zToFªe
 = 0;

4483 if–
l⁄gNames
 || 
pTabLi°
->
nSrc
>1 ){

4484 
Ex¥
 *
pLe·
;

4485 
pLe·
 = 
	`sqlôe3Ex¥
(
db
, 
TK_ID
, 
zTabName
);

4486 
pEx¥
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_DOT
, 
pLe·
, 
pRight
);

4487 if–
zSchemaName
 ){

4488 
pLe·
 = 
	`sqlôe3Ex¥
(
db
, 
TK_ID
, 
zSchemaName
);

4489 
pEx¥
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_DOT
, 
pLe·
,ÖExpr);

4491 if–
l⁄gNames
 ){

4492 
zCﬁ«me
 = 
	`sqlôe3MPrötf
(
db
, "%s.%s", 
zTabName
, 
zName
);

4493 
zToFªe
 = 
zCﬁ«me
;

4496 
pEx¥
 = 
pRight
;

4498 
pNew
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
,ÖNew, 
pEx¥
);

4499 
	`sqlôe3TokíInô
(&
sCﬁ«me
, 
zCﬁ«me
);

4500 
	`sqlôe3Ex¥Li°SëName
(
pP¨£
, 
pNew
, &
sCﬁ«me
, 0);

4501 if–
pNew
 && (
p
->
£lFœgs
 & 
SF_Ne°edFrom
)!=0 ){

4502 
Ex¥Li°_ôem
 *
pX
 = &
pNew
->
a
[pNew->
nEx¥
-1];

4503 if–
pSub
 ){

4504 
pX
->
zS∑n
 = 
	`sqlôe3DbSåDup
(
db
, 
pSub
->
pELi°
->
a
[
j
].zSpan);

4505 
	`ã°ˇ£
–
pX
->
zS∑n
==0 );

4507 
pX
->
zS∑n
 = 
	`sqlôe3MPrötf
(
db
, "%s.%s.%s",

4508 
zSchemaName
, 
zTabName
, 
zCﬁ«me
);

4509 
	`ã°ˇ£
–
pX
->
zS∑n
==0 );

4511 
pX
->
bS∑nIsTab
 = 1;

4513 
	`sqlôe3DbFªe
(
db
, 
zToFªe
);

4516 if–!
èbÀSìn
 ){

4517 if–
zTName
 ){

4518 
	`sqlôe3Eº‹Msg
(
pP¨£
, "nÿsuchÅabÀ: %s", 
zTName
);

4520 
	`sqlôe3Eº‹Msg
(
pP¨£
, "noÅables specified");

4525 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pELi°
);

4526 
p
->
pELi°
 = 
pNew
;

4528 #i‡
SQLITE_MAX_COLUMN


4529 if–
p
->
pELi°
 &&Ö->pELi°->
nEx¥
>
db
->
aLimô
[
SQLITE_LIMIT_COLUMN
] ){

4530 
	`sqlôe3Eº‹Msg
(
pP¨£
, "too many columns inÑesult set");

4531  
WRC_Ab‹t
;

4534  
WRC_C⁄töue
;

4535 
	}
}

4546 
	$sqlôe3Ex¥WÆkNo›
(
WÆkî
 *
NŸU£d
, 
Ex¥
 *
NŸU£d2
){

4547 
	`UNUSED_PARAMETER2
(
NŸU£d
, 
NŸU£d2
);

4548  
WRC_C⁄töue
;

4549 
	}
}

4564 
	$sqlôe3Sñe˘Ex∑nd
(
P¨£
 *
pP¨£
, 
Sñe˘
 *
pSñe˘
){

4565 
WÆkî
 
w
;

4566 
	`mem£t
(&
w
, 0, (w));

4567 
w
.
xEx¥CÆlback
 = 
sqlôe3Ex¥WÆkNo›
;

4568 
w
.
pP¨£
 =ÖParse;

4569 if–
pP¨£
->
hasCompound
 ){

4570 
w
.
xSñe˘CÆlback
 = 
c⁄vîtCompoundSñe˘ToSubquîy
;

4571 
	`sqlôe3WÆkSñe˘
(&
w
, 
pSñe˘
);

4573 
w
.
xSñe˘CÆlback
 = 
£À˘Ex∑ndî
;

4574 if–(
pSñe˘
->
£lFœgs
 & 
SF_Mu…iVÆue
)==0 ){

4575 
w
.
xSñe˘CÆlback2
 = 
£À˘P›Wôh
;

4577 
	`sqlôe3WÆkSñe˘
(&
w
, 
pSñe˘
);

4578 
	}
}

4581 #i‚de‡
SQLITE_OMIT_SUBQUERY


4595 
	$£À˘AddSubquîyTy≥Info
(
WÆkî
 *
pWÆkî
, 
Sñe˘
 *
p
){

4596 
P¨£
 *
pP¨£
;

4597 
i
;

4598 
SrcLi°
 *
pTabLi°
;

4599 
SrcLi°_ôem
 *
pFrom
;

4601 
	`as£π
–
p
->
£lFœgs
 & 
SF_Resﬁved
 );

4602 
	`as£π
–(
p
->
£lFœgs
 & 
SF_HasTy≥Info
)==0 );

4603 
p
->
£lFœgs
 |
SF_HasTy≥Info
;

4604 
pP¨£
 = 
pWÆkî
->pParse;

4605 
pTabLi°
 = 
p
->
pSrc
;

4606 
i
=0, 
pFrom
=
pTabLi°
->
a
; i<pTabLi°->
nSrc
; i++,ÖFrom++){

4607 
TabÀ
 *
pTab
 = 
pFrom
->pTab;

4608 
	`as£π
–
pTab
!=0 );

4609 if–(
pTab
->
èbFœgs
 & 
TF_EphemîÆ
)!=0 ){

4611 
Sñe˘
 *
pSñ
 = 
pFrom
->
pSñe˘
;

4612 if–
pSñ
 ){

4613  
pSñ
->
pPri‹
 )ÖSel =ÖSel->pPrior;

4614 
	`sqlôe3Sñe˘AddCﬁumnTy≥AndCﬁœti⁄
(
pP¨£
, 
pTab
, 
pSñ
);

4618 
	}
}

4629 
	$sqlôe3Sñe˘AddTy≥Info
(
P¨£
 *
pP¨£
, 
Sñe˘
 *
pSñe˘
){

4630 #i‚de‡
SQLITE_OMIT_SUBQUERY


4631 
WÆkî
 
w
;

4632 
	`mem£t
(&
w
, 0, (w));

4633 
w
.
xSñe˘CÆlback2
 = 
£À˘AddSubquîyTy≥Info
;

4634 
w
.
xEx¥CÆlback
 = 
sqlôe3Ex¥WÆkNo›
;

4635 
w
.
pP¨£
 =ÖParse;

4636 
	`sqlôe3WÆkSñe˘
(&
w
, 
pSñe˘
);

4638 
	}
}

4653 
	$sqlôe3Sñe˘Pªp
(

4654 
P¨£
 *
pP¨£
,

4655 
Sñe˘
 *
p
,

4656 
NameC⁄ãxt
 *
pOuãrNC


4658 
sqlôe3
 *
db
;

4659 if–
	`NEVER
(
p
==0) ) ;

4660 
db
 = 
pP¨£
->db;

4661 if–
db
->
mÆlocFaûed
 ) ;

4662 if–
p
->
£lFœgs
 & 
SF_HasTy≥Info
 ) ;

4663 
	`sqlôe3Sñe˘Ex∑nd
(
pP¨£
, 
p
);

4664 if–
pP¨£
->
nEº
 || 
db
->
mÆlocFaûed
 ) ;

4665 
	`sqlôe3ResﬁveSñe˘Names
(
pP¨£
, 
p
, 
pOuãrNC
);

4666 if–
pP¨£
->
nEº
 || 
db
->
mÆlocFaûed
 ) ;

4667 
	`sqlôe3Sñe˘AddTy≥Info
(
pP¨£
, 
p
);

4668 
	}
}

4678 
	$ª£tAccumuœt‹
(
P¨£
 *
pP¨£
, 
AggInfo
 *
pAggInfo
){

4679 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

4680 
i
;

4681 
AggInfo_func
 *
pFunc
;

4682 
nReg
 = 
pAggInfo
->
nFunc
 +ÖAggInfo->
nCﬁumn
;

4683 if–
nReg
==0 ) ;

4684 #ifde‡
SQLITE_DEBUG


4687 
	`as£π
–
nReg
==
pAggInfo
->
mxReg
-pAggInfo->
mnReg
+1 );

4688 
i
=0; i<
pAggInfo
->
nCﬁumn
; i++){

4689 
	`as£π
–
pAggInfo
->
aCﬁ
[
i
].
iMem
>ıAggInfo->
mnReg


4690 && 
pAggInfo
->
aCﬁ
[
i
].
iMem
<ıAggInfo->
mxReg
 );

4692 
i
=0; i<
pAggInfo
->
nFunc
; i++){

4693 
	`as£π
–
pAggInfo
->
aFunc
[
i
].
iMem
>ıAggInfo->
mnReg


4694 && 
pAggInfo
->
aFunc
[
i
].
iMem
<ıAggInfo->
mxReg
 );

4697 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_NuŒ
, 0, 
pAggInfo
->
mnReg
,ÖAggInfo->
mxReg
);

4698 
pFunc
=
pAggInfo
->
aFunc
, 
i
=0; i<pAggInfo->
nFunc
; i++,ÖFunc++){

4699 if–
pFunc
->
iDi°ö˘
>=0 ){

4700 
Ex¥
 *
pE
 = 
pFunc
->
pEx¥
;

4701 
	`as£π
–!
	`Ex¥HasPr›îty
(
pE
, 
EP_xIsSñe˘
) );

4702 if–
pE
->
x
.
pLi°
==0 ||ÖE->x.pLi°->
nEx¥
!=1 ){

4703 
	`sqlôe3Eº‹Msg
(
pP¨£
, "DISTINCTággregates must haveÉxactly one "

4705 
pFunc
->
iDi°ö˘
 = -1;

4707 
KeyInfo
 *
pKeyInfo
 = 
	`keyInfoFromEx¥Li°
(
pP¨£
, 
pE
->
x
.
pLi°
, 0, 0);

4708 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_O≥nEphemîÆ
, 
pFunc
->
iDi°ö˘
, 0, 0,

4709 (*)
pKeyInfo
, 
P4_KEYINFO
);

4713 
	}
}

4719 
	$föÆizeAggFun˘i⁄s
(
P¨£
 *
pP¨£
, 
AggInfo
 *
pAggInfo
){

4720 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

4721 
i
;

4722 
AggInfo_func
 *
pF
;

4723 
i
=0, 
pF
=
pAggInfo
->
aFunc
; i<pAggInfo->
nFunc
; i++,ÖF++){

4724 
Ex¥Li°
 *
pLi°
 = 
pF
->
pEx¥
->
x
.pList;

4725 
	`as£π
–!
	`Ex¥HasPr›îty
(
pF
->
pEx¥
, 
EP_xIsSñe˘
) );

4726 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_AggFöÆ
, 
pF
->
iMem
, 
pLi°
 ?ÖLi°->
nEx¥
 : 0);

4727 
	`sqlôe3VdbeAµídP4
(
v
, 
pF
->
pFunc
, 
P4_FUNCDEF
);

4729 
	}
}

4735 
	$upd©eAccumuœt‹
(
P¨£
 *
pP¨£
, 
AggInfo
 *
pAggInfo
){

4736 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

4737 
i
;

4738 
ªgHô
 = 0;

4739 
addrHôTe°
 = 0;

4740 
AggInfo_func
 *
pF
;

4741 
AggInfo_cﬁ
 *
pC
;

4743 
pAggInfo
->
dúe˘Mode
 = 1;

4744 
i
=0, 
pF
=
pAggInfo
->
aFunc
; i<pAggInfo->
nFunc
; i++,ÖF++){

4745 
nArg
;

4746 
addrNext
 = 0;

4747 
ªgAgg
;

4748 
Ex¥Li°
 *
pLi°
 = 
pF
->
pEx¥
->
x
.pList;

4749 
	`as£π
–!
	`Ex¥HasPr›îty
(
pF
->
pEx¥
, 
EP_xIsSñe˘
) );

4750 if–
pLi°
 ){

4751 
nArg
 = 
pLi°
->
nEx¥
;

4752 
ªgAgg
 = 
	`sqlôe3GëTempR™ge
(
pP¨£
, 
nArg
);

4753 
	`sqlôe3Ex¥CodeEx¥Li°
(
pP¨£
, 
pLi°
, 
ªgAgg
, 0, 
SQLITE_ECEL_DUP
);

4755 
nArg
 = 0;

4756 
ªgAgg
 = 0;

4758 if–
pF
->
iDi°ö˘
>=0 ){

4759 
addrNext
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

4760 
	`ã°ˇ£
–
nArg
==0 );

4761 
	`ã°ˇ£
–
nArg
>1 );

4762 
	`codeDi°ö˘
(
pP¨£
, 
pF
->
iDi°ö˘
, 
addrNext
, 1, 
ªgAgg
);

4764 if–
pF
->
pFunc
->
funcFœgs
 & 
SQLITE_FUNC_NEEDCOLL
 ){

4765 
CﬁlSeq
 *
pCﬁl
 = 0;

4766 
Ex¥Li°_ôem
 *
pIãm
;

4767 
j
;

4768 
	`as£π
–
pLi°
!=0 );

4769 
j
=0, 
pIãm
=
pLi°
->
a
; !
pCﬁl
 && j<
nArg
; j++,ÖItem++){

4770 
pCﬁl
 = 
	`sqlôe3Ex¥CﬁlSeq
(
pP¨£
, 
pIãm
->
pEx¥
);

4772 if–!
pCﬁl
 ){

4773 
pCﬁl
 = 
pP¨£
->
db
->
pDÊtCﬁl
;

4775 if–
ªgHô
==0 && 
pAggInfo
->
nAccumuœt‹
 )ÑegHô = ++
pP¨£
->
nMem
;

4776 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_CﬁlSeq
, 
ªgHô
, 0, 0, (*)
pCﬁl
, 
P4_COLLSEQ
);

4778 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_AggSãp0
, 0, 
ªgAgg
, 
pF
->
iMem
);

4779 
	`sqlôe3VdbeAµídP4
(
v
, 
pF
->
pFunc
, 
P4_FUNCDEF
);

4780 
	`sqlôe3VdbeCh™geP5
(
v
, (
u8
)
nArg
);

4781 
	`sqlôe3Ex¥CacheAfföôyCh™ge
(
pP¨£
, 
ªgAgg
, 
nArg
);

4782 
	`sqlôe3Rñó£TempR™ge
(
pP¨£
, 
ªgAgg
, 
nArg
);

4783 if–
addrNext
 ){

4784 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
addrNext
);

4785 
	`sqlôe3Ex¥CacheCÀ¨
(
pP¨£
);

4799 if–
ªgHô
 ){

4800 
addrHôTe°
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_If
, 
ªgHô
); 
	`VdbeCovîage
(v);

4802 
	`sqlôe3Ex¥CacheCÀ¨
(
pP¨£
);

4803 
i
=0, 
pC
=
pAggInfo
->
aCﬁ
; i<pAggInfo->
nAccumuœt‹
; i++,ÖC++){

4804 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pC
->
pEx¥
,ÖC->
iMem
);

4806 
pAggInfo
->
dúe˘Mode
 = 0;

4807 
	`sqlôe3Ex¥CacheCÀ¨
(
pP¨£
);

4808 if–
addrHôTe°
 ){

4809 
	`sqlôe3VdbeJumpHîe
(
v
, 
addrHôTe°
);

4811 
	}
}

4817 #i‚de‡
SQLITE_OMIT_EXPLAIN


4818 
	$ex∂aöSim∂eCou¡
(

4819 
P¨£
 *
pP¨£
,

4820 
TabÀ
 *
pTab
,

4821 
Index
 *
pIdx


4823 if–
pP¨£
->
ex∂aö
==2 ){

4824 
bCovî
 = (
pIdx
!=0 && (
	`HasRowid
(
pTab
Ë|| !
	`IsPrim¨yKeyIndex
(pIdx)));

4825 *
zEqp
 = 
	`sqlôe3MPrötf
(
pP¨£
->
db
, "SCAN TABLE %s%s%s",

4826 
pTab
->
zName
,

4827 
bCovî
 ? " USING COVERING INDEX " : "",

4828 
bCovî
 ? 
pIdx
->
zName
 : ""

4830 
	`sqlôe3VdbeAddOp4
(

4831 
pP¨£
->
pVdbe
, 
OP_Ex∂aö
,ÖP¨£->
iSñe˘Id
, 0, 0, 
zEqp
, 
P4_DYNAMIC


4834 
	}
}

4836 
	#ex∂aöSim∂eCou¡
(
a
,
b
,
c
)

	)

4852 
	$sqlôe3Sñe˘
(

4853 
P¨£
 *
pP¨£
,

4854 
Sñe˘
 *
p
,

4855 
Sñe˘De°
 *
pDe°


4857 
i
, 
j
;

4858 
WhîeInfo
 *
pWInfo
;

4859 
Vdbe
 *
v
;

4860 
isAgg
;

4861 
Ex¥Li°
 *
pELi°
 = 0;

4862 
SrcLi°
 *
pTabLi°
;

4863 
Ex¥
 *
pWhîe
;

4864 
Ex¥Li°
 *
pGroupBy
;

4865 
Ex¥
 *
pHavög
;

4866 
rc
 = 1;

4867 
Di°ö˘Ctx
 
sDi°ö˘
;

4868 
S‹tCtx
 
sS‹t
;

4869 
AggInfo
 
sAggInfo
;

4870 
iEnd
;

4871 
sqlôe3
 *
db
;

4873 #i‚de‡
SQLITE_OMIT_EXPLAIN


4874 
iRe°‹eSñe˘Id
 = 
pP¨£
->
iSñe˘Id
;

4875 
pP¨£
->
iSñe˘Id
 =ÖP¨£->
iNextSñe˘Id
++;

4878 
db
 = 
pP¨£
->db;

4879 if–
p
==0 || 
db
->
mÆlocFaûed
 || 
pP¨£
->
nEº
 ){

4882 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_SELECT
, 0, 0, 0) )  1;

4883 
	`mem£t
(&
sAggInfo
, 0, (sAggInfo));

4884 #i‡
SELECTTRACE_ENABLED


4885 
pP¨£
->
nSñe˘Indít
++;

4886 
	`SELECTTRACE
(1,
pP¨£
,
p
, ("beginÖrocessing:\n"));

4887 if–
sqlôe3Sñe˘Tø˚
 & 0x100 ){

4888 
	`sqlôe3TªeVõwSñe˘
(0, 
p
, 0);

4892 
	`as£π
–
p
->
pOrdîBy
==0 || 
pDe°
->
eDe°
!=
SRT_Di°Fifo
 );

4893 
	`as£π
–
p
->
pOrdîBy
==0 || 
pDe°
->
eDe°
!=
SRT_Fifo
 );

4894 
	`as£π
–
p
->
pOrdîBy
==0 || 
pDe°
->
eDe°
!=
SRT_Di°Queue
 );

4895 
	`as£π
–
p
->
pOrdîBy
==0 || 
pDe°
->
eDe°
!=
SRT_Queue
 );

4896 if–
	`Ign‹abÀOrdîby
(
pDe°
) ){

4897 
	`as£π
(
pDe°
->
eDe°
==
SRT_Exi°s
 ||ÖDe°->eDe°==
SRT_Uni⁄
 ||

4898 
pDe°
->
eDe°
==
SRT_Ex˚±
 ||ÖDe°->eDe°==
SRT_Disˇrd
 ||

4899 
pDe°
->
eDe°
==
SRT_Queue
 ||ÖDe°->eDe°==
SRT_Di°Fifo
 ||

4900 
pDe°
->
eDe°
==
SRT_Di°Queue
 ||ÖDe°->eDe°==
SRT_Fifo
);

4903 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
p
->
pOrdîBy
);

4904 
p
->
pOrdîBy
 = 0;

4905 
p
->
£lFœgs
 &~
SF_Di°ö˘
;

4907 
	`sqlôe3Sñe˘Pªp
(
pP¨£
, 
p
, 0);

4908 
	`mem£t
(&
sS‹t
, 0, (sSort));

4909 
sS‹t
.
pOrdîBy
 = 
p
->pOrderBy;

4910 
pTabLi°
 = 
p
->
pSrc
;

4911 if–
pP¨£
->
nEº
 || 
db
->
mÆlocFaûed
 ){

4912 
£À˘_íd
;

4914 
	`as£π
–
p
->
pELi°
!=0 );

4915 
isAgg
 = (
p
->
£lFœgs
 & 
SF_Aggªg©e
)!=0;

4916 #i‡
SELECTTRACE_ENABLED


4917 if–
sqlôe3Sñe˘Tø˚
 & 0x100 ){

4918 
	`SELECTTRACE
(0x100,
pP¨£
,
p
, ("afterÇameÑesolution:\n"));

4919 
	`sqlôe3TªeVõwSñe˘
(0, 
p
, 0);

4925 #i‡!
	`deföed
(
SQLITE_OMIT_SUBQUERY
Ë|| !deföed(
SQLITE_OMIT_VIEW
)

4926 
i
=0; !
p
->
pPri‹
 && i<
pTabLi°
->
nSrc
; i++){

4927 
SrcLi°_ôem
 *
pIãm
 = &
pTabLi°
->
a
[
i
];

4928 
Sñe˘
 *
pSub
 = 
pIãm
->
pSñe˘
;

4929 
isAggSub
;

4930 
TabÀ
 *
pTab
 = 
pIãm
->pTab;

4931 if–
pSub
==0 ) ;

4935 if–
pTab
->
nCﬁ
!=
pSub
->
pELi°
->
nEx¥
 ){

4936 
	`sqlôe3Eº‹Msg
(
pP¨£
, "expected %d columns for '%s' but got %d",

4937 
pTab
->
nCﬁ
,ÖTab->
zName
, 
pSub
->
pELi°
->
nEx¥
);

4938 
£À˘_íd
;

4941 
isAggSub
 = (
pSub
->
£lFœgs
 & 
SF_Aggªg©e
)!=0;

4942 if–
	`Ê©ãnSubquîy
(
pP¨£
, 
p
, 
i
, 
isAgg
, 
isAggSub
) ){

4944 if–
isAggSub
 ){

4945 
isAgg
 = 1;

4946 
p
->
£lFœgs
 |
SF_Aggªg©e
;

4948 
i
 = -1;

4950 
pTabLi°
 = 
p
->
pSrc
;

4951 if–
db
->
mÆlocFaûed
 ) 
£À˘_íd
;

4952 if–!
	`Ign‹abÀOrdîby
(
pDe°
) ){

4953 
sS‹t
.
pOrdîBy
 = 
p
->pOrderBy;

4960 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

4961 if–
v
==0 ) 
£À˘_íd
;

4963 #i‚de‡
SQLITE_OMIT_COMPOUND_SELECT


4967 if–
p
->
pPri‹
 ){

4968 
rc
 = 
	`mu…iSñe˘
(
pP¨£
, 
p
, 
pDe°
);

4969 
	`ex∂aöSëI¡egî
(
pP¨£
->
iSñe˘Id
, 
iRe°‹eSñe˘Id
);

4970 #i‡
SELECTTRACE_ENABLED


4971 
	`SELECTTRACE
(1,
pP¨£
,
p
,("end compound-selectÖrocessing\n"));

4972 
pP¨£
->
nSñe˘Indít
--;

4974  
rc
;

4980 #i‡!
	`deföed
(
SQLITE_OMIT_SUBQUERY
Ë|| !deföed(
SQLITE_OMIT_VIEW
)

4981 
i
=0; i<
pTabLi°
->
nSrc
; i++){

4982 
SrcLi°_ôem
 *
pIãm
 = &
pTabLi°
->
a
[
i
];

4983 
Sñe˘De°
 
de°
;

4984 
Sñe˘
 *
pSub
 = 
pIãm
->
pSñe˘
;

4985 if–
pSub
==0 ) ;

4993 if–
pIãm
->
addrFûlSub
 ){

4994 if–
pIãm
->
fg
.
vüC‹outöe
==0 ){

4995 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Gosub
, 
pIãm
->
ªgRëu∫
,ÖIãm->
addrFûlSub
);

5007 
pP¨£
->
nHeight
 +
	`sqlôe3Sñe˘Ex¥Height
(
p
);

5012 if–(
pIãm
->
fg
.
joöty≥
 & 
JT_OUTER
)==0

5013 && 
	`pushDownWhîeTîms
(
pP¨£
, 
pSub
, 
p
->
pWhîe
, 
pIãm
->
iCurs‹
)

5015 #i‡
SELECTTRACE_ENABLED


5016 if–
sqlôe3Sñe˘Tø˚
 & 0x100 ){

5017 
	`SELECTTRACE
(0x100,
pP¨£
,
p
,("After WHERE-clauseÖush-down:\n"));

5018 
	`sqlôe3TªeVõwSñe˘
(0, 
p
, 0);

5037 if–
i
==0

5038 && (
pTabLi°
->
nSrc
==1

5039 || (
pTabLi°
->
a
[1].
fg
.
joöty≥
&(
JT_LEFT
|
JT_CROSS
))!=0)

5040 && (
p
->
£lFœgs
 & 
SF_AŒ
)==0

5041 && 
	`O±imiz©i⁄E«bÀd
(
db
, 
SQLITE_SubqC‹outöe
)

5046 
addrT›
 = 
	`sqlôe3VdbeCuºítAddr
(
v
)+1;

5047 
pIãm
->
ªgRëu∫
 = ++
pP¨£
->
nMem
;

5048 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_InôC‹outöe
, 
pIãm
->
ªgRëu∫
, 0, 
addrT›
);

5049 
	`VdbeCommít
((
v
, "%s", 
pIãm
->
pTab
->
zName
));

5050 
pIãm
->
addrFûlSub
 = 
addrT›
;

5051 
	`sqlôe3Sñe˘De°Inô
(&
de°
, 
SRT_C‹outöe
, 
pIãm
->
ªgRëu∫
);

5052 
	`ex∂aöSëI¡egî
(
pIãm
->
iSñe˘Id
, (
u8
)
pP¨£
->
iNextSñe˘Id
);

5053 
	`sqlôe3Sñe˘
(
pP¨£
, 
pSub
, &
de°
);

5054 
pIãm
->
pTab
->
nRowLogE°
 = 
pSub
->
nSñe˘Row
;

5055 
pIãm
->
fg
.
vüC‹outöe
 = 1;

5056 
pIãm
->
ªgResu…
 = 
de°
.
iSd°
;

5057 
	`sqlôe3VdbeEndC‹outöe
(
v
, 
pIãm
->
ªgRëu∫
);

5058 
	`sqlôe3VdbeJumpHîe
(
v
, 
addrT›
-1);

5059 
	`sqlôe3CÀ¨TempRegCache
(
pP¨£
);

5066 
t›Addr
;

5067 
⁄˚Addr
 = 0;

5068 
ªtAddr
;

5069 
	`as£π
–
pIãm
->
addrFûlSub
==0 );

5070 
pIãm
->
ªgRëu∫
 = ++
pP¨£
->
nMem
;

5071 
t›Addr
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 0, 
pIãm
->
ªgRëu∫
);

5072 
pIãm
->
addrFûlSub
 = 
t›Addr
+1;

5073 if–
pIãm
->
fg
.
isC‹ªœãd
==0 ){

5077 
⁄˚Addr
 = 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_On˚
); 
	`VdbeCovîage
(v);

5078 
	`VdbeCommít
((
v
, "m©îülizê\"%s\"", 
pIãm
->
pTab
->
zName
));

5080 
	`VdbeNo›Commít
((
v
, "m©îülizê\"%s\"", 
pIãm
->
pTab
->
zName
));

5082 
	`sqlôe3Sñe˘De°Inô
(&
de°
, 
SRT_EphemTab
, 
pIãm
->
iCurs‹
);

5083 
	`ex∂aöSëI¡egî
(
pIãm
->
iSñe˘Id
, (
u8
)
pP¨£
->
iNextSñe˘Id
);

5084 
	`sqlôe3Sñe˘
(
pP¨£
, 
pSub
, &
de°
);

5085 
pIãm
->
pTab
->
nRowLogE°
 = 
pSub
->
nSñe˘Row
;

5086 if–
⁄˚Addr
 ) 
	`sqlôe3VdbeJumpHîe
(
v
, onceAddr);

5087 
ªtAddr
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Rëu∫
, 
pIãm
->
ªgRëu∫
);

5088 
	`VdbeCommít
((
v
, "íd %s", 
pIãm
->
pTab
->
zName
));

5089 
	`sqlôe3VdbeCh™geP1
(
v
, 
t›Addr
, 
ªtAddr
);

5090 
	`sqlôe3CÀ¨TempRegCache
(
pP¨£
);

5092 if–
db
->
mÆlocFaûed
 ) 
£À˘_íd
;

5093 
pP¨£
->
nHeight
 -
	`sqlôe3Sñe˘Ex¥Height
(
p
);

5099 
pELi°
 = 
p
->pEList;

5100 
pWhîe
 = 
p
->pWhere;

5101 
pGroupBy
 = 
p
->pGroupBy;

5102 
pHavög
 = 
p
->pHaving;

5103 
sDi°ö˘
.
isTn˘
 = (
p
->
£lFœgs
 & 
SF_Di°ö˘
)!=0;

5105 #i‡
SELECTTRACE_ENABLED


5106 if–
sqlôe3Sñe˘Tø˚
 & 0x400 ){

5107 
	`SELECTTRACE
(0x400,
pP¨£
,
p
,("Afteráll FROM-clauseánalysis:\n"));

5108 
	`sqlôe3TªeVõwSñe˘
(0, 
p
, 0);

5127 if–(
p
->
£lFœgs
 & (
SF_Di°ö˘
|
SF_Aggªg©e
))==SF_Distinct

5128 && 
	`sqlôe3Ex¥Li°Com∑ª
(
sS‹t
.
pOrdîBy
, 
pELi°
, -1)==0

5130 
p
->
£lFœgs
 &~
SF_Di°ö˘
;

5131 
pGroupBy
 = 
p
->pGroupBy = 
	`sqlôe3Ex¥Li°Dup
(
db
, 
pELi°
, 0);

5135 
	`as£π
–
sDi°ö˘
.
isTn˘
 );

5137 #i‡
SELECTTRACE_ENABLED


5138 if–
sqlôe3Sñe˘Tø˚
 & 0x400 ){

5139 
	`SELECTTRACE
(0x400,
pP¨£
,
p
,("Transform DISTINCT into GROUP BY:\n"));

5140 
	`sqlôe3TªeVõwSñe˘
(0, 
p
, 0);

5153 if–
sS‹t
.
pOrdîBy
 ){

5154 
KeyInfo
 *
pKeyInfo
;

5155 
pKeyInfo
 = 
	`keyInfoFromEx¥Li°
(
pP¨£
, 
sS‹t
.
pOrdîBy
, 0, 
pELi°
->
nEx¥
);

5156 
sS‹t
.
iECurs‹
 = 
pP¨£
->
nTab
++;

5157 
sS‹t
.
addrS‹tIndex
 =

5158 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_O≥nEphemîÆ
,

5159 
sS‹t
.
iECurs‹
, sS‹t.
pOrdîBy
->
nEx¥
+1+
pELi°
->nExpr, 0,

5160 (*)
pKeyInfo
, 
P4_KEYINFO


5163 
sS‹t
.
addrS‹tIndex
 = -1;

5168 if–
pDe°
->
eDe°
==
SRT_EphemTab
 ){

5169 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_O≥nEphemîÆ
, 
pDe°
->
iSDP¨m
, 
pELi°
->
nEx¥
);

5174 
iEnd
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

5175 if–(
p
->
£lFœgs
 & 
SF_FixedLimô
)==0 ){

5176 
p
->
nSñe˘Row
 = 320;

5178 
	`compuãLimôRegi°îs
(
pP¨£
, 
p
, 
iEnd
);

5179 if–
p
->
iLimô
==0 && 
sS‹t
.
addrS‹tIndex
>=0 ){

5180 
	`sqlôe3VdbeCh™geOpcode
(
v
, 
sS‹t
.
addrS‹tIndex
, 
OP_S‹ãrO≥n
);

5181 
sS‹t
.
s‹tFœgs
 |
SORTFLAG_U£S‹ãr
;

5186 if–
p
->
£lFœgs
 & 
SF_Di°ö˘
 ){

5187 
sDi°ö˘
.
èbTn˘
 = 
pP¨£
->
nTab
++;

5188 
sDi°ö˘
.
addrTn˘
 = 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_O≥nEphemîÆ
,

5189 
sDi°ö˘
.
èbTn˘
, 0, 0,

5190 (*)
	`keyInfoFromEx¥Li°
(
pP¨£
, 
p
->
pELi°
,0,0),

5191 
P4_KEYINFO
);

5192 
	`sqlôe3VdbeCh™geP5
(
v
, 
BTREE_UNORDERED
);

5193 
sDi°ö˘
.
eTn˘Ty≥
 = 
WHERE_DISTINCT_UNORDERED
;

5195 
sDi°ö˘
.
eTn˘Ty≥
 = 
WHERE_DISTINCT_NOOP
;

5198 if–!
isAgg
 && 
pGroupBy
==0 ){

5200 
u16
 
w˘æFœgs
 = (
sDi°ö˘
.
isTn˘
 ? 
WHERE_WANT_DISTINCT
 : 0);

5201 
	`as£π
–
WHERE_USE_LIMIT
==
SF_FixedLimô
 );

5202 
w˘æFœgs
 |
p
->
£lFœgs
 & 
SF_FixedLimô
;

5205 
pWInfo
 = 
	`sqlôe3WhîeBegö
(
pP¨£
, 
pTabLi°
, 
pWhîe
, 
sS‹t
.
pOrdîBy
,

5206 
p
->
pELi°
, 
w˘æFœgs
,Ö->
nSñe˘Row
);

5207 if–
pWInfo
==0 ) 
£À˘_íd
;

5208 if–
	`sqlôe3WhîeOuçutRowCou¡
(
pWInfo
Ë< 
p
->
nSñe˘Row
 ){

5209 
p
->
nSñe˘Row
 = 
	`sqlôe3WhîeOuçutRowCou¡
(
pWInfo
);

5211 if–
sDi°ö˘
.
isTn˘
 && 
	`sqlôe3WhîeIsDi°ö˘
(
pWInfo
) ){

5212 
sDi°ö˘
.
eTn˘Ty≥
 = 
	`sqlôe3WhîeIsDi°ö˘
(
pWInfo
);

5214 if–
sS‹t
.
pOrdîBy
 ){

5215 
sS‹t
.
nOBS©
 = 
	`sqlôe3WhîeIsOrdîed
(
pWInfo
);

5216 
sS‹t
.
bOrdîedI¬îLo›
 = 
	`sqlôe3WhîeOrdîedI¬îLo›
(
pWInfo
);

5217 if–
sS‹t
.
nOBS©
==sS‹t.
pOrdîBy
->
nEx¥
 ){

5218 
sS‹t
.
pOrdîBy
 = 0;

5226 if–
sS‹t
.
addrS‹tIndex
>=0 && sS‹t.
pOrdîBy
==0 ){

5227 
	`sqlôe3VdbeCh™geToNo›
(
v
, 
sS‹t
.
addrS‹tIndex
);

5231 
	`£À˘I¬îLo›
(
pP¨£
, 
p
, 
pELi°
, -1, &
sS‹t
, &
sDi°ö˘
, 
pDe°
,

5232 
	`sqlôe3WhîeC⁄töueLabñ
(
pWInfo
),

5233 
	`sqlôe3WhîeBªakLabñ
(
pWInfo
));

5237 
	`sqlôe3WhîeEnd
(
pWInfo
);

5241 
NameC⁄ãxt
 
sNC
;

5242 
iAMem
;

5243 
iBMem
;

5244 
iU£Fœg
;

5247 
iAb‹tFœg
;

5248 
groupByS‹t
;

5249 
addrEnd
;

5250 
s‹tPTab
 = 0;

5251 
s‹tOut
 = 0;

5252 
‹dîByGΩ
 = 0;

5257 if–
pGroupBy
 ){

5258 
k
;

5259 
Ex¥Li°_ôem
 *
pIãm
;

5261 
k
=
p
->
pELi°
->
nEx¥
, 
pIãm
ı->pELi°->
a
; k>0; k--,ÖItem++){

5262 
pIãm
->
u
.
x
.
iAlüs
 = 0;

5264 
k
=
pGroupBy
->
nEx¥
, 
pIãm
ıGroupBy->
a
; k>0; k--,ÖItem++){

5265 
pIãm
->
u
.
x
.
iAlüs
 = 0;

5267 
	`as£π
–66==
	`sqlôe3LogE°
(100) );

5268 if–
p
->
nSñe˘Row
>66 )Ö->nSelectRow = 66;

5270 
	`as£π
–0==
	`sqlôe3LogE°
(1) );

5271 
p
->
nSñe˘Row
 = 0;

5282 if–
	`sqlôe3Ex¥Li°Com∑ª
(
pGroupBy
, 
sS‹t
.
pOrdîBy
, -1)==0 ){

5283 
‹dîByGΩ
 = 1;

5287 
addrEnd
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

5293 
	`mem£t
(&
sNC
, 0, (sNC));

5294 
sNC
.
pP¨£
 =ÖParse;

5295 
sNC
.
pSrcLi°
 = 
pTabLi°
;

5296 
sNC
.
pAggInfo
 = &
sAggInfo
;

5297 
sAggInfo
.
mnReg
 = 
pP¨£
->
nMem
+1;

5298 
sAggInfo
.
nS‹tögCﬁumn
 = 
pGroupBy
 ?ÖGroupBy->
nEx¥
 : 0;

5299 
sAggInfo
.
pGroupBy
 =ÖGroupBy;

5300 
	`sqlôe3Ex¥A«lyzeAggLi°
(&
sNC
, 
pELi°
);

5301 
	`sqlôe3Ex¥A«lyzeAggLi°
(&
sNC
, 
sS‹t
.
pOrdîBy
);

5302 if–
pHavög
 ){

5303 
	`sqlôe3Ex¥A«lyzeAggªg©es
(&
sNC
, 
pHavög
);

5305 
sAggInfo
.
nAccumuœt‹
 = sAggInfo.
nCﬁumn
;

5306 
i
=0; i<
sAggInfo
.
nFunc
; i++){

5307 
	`as£π
–!
	`Ex¥HasPr›îty
(
sAggInfo
.
aFunc
[
i
].
pEx¥
, 
EP_xIsSñe˘
) );

5308 
sNC
.
ncFœgs
 |
NC_InAggFunc
;

5309 
	`sqlôe3Ex¥A«lyzeAggLi°
(&
sNC
, 
sAggInfo
.
aFunc
[
i
].
pEx¥
->
x
.
pLi°
);

5310 
sNC
.
ncFœgs
 &~
NC_InAggFunc
;

5312 
sAggInfo
.
mxReg
 = 
pP¨£
->
nMem
;

5313 if–
db
->
mÆlocFaûed
 ) 
£À˘_íd
;

5318 if–
pGroupBy
 ){

5319 
KeyInfo
 *
pKeyInfo
;

5320 
addr1
;

5321 
addrOuçutRow
;

5322 
ªgOuçutRow
;

5323 
addrSëAb‹t
;

5324 
addrT›OfLo›
;

5325 
addrS‹tögIdx
;

5326 
addrRe£t
;

5327 
ªgRe£t
;

5334 
sAggInfo
.
s‹tögIdx
 = 
pP¨£
->
nTab
++;

5335 
pKeyInfo
 = 
	`keyInfoFromEx¥Li°
(
pP¨£
, 
pGroupBy
, 0, 
sAggInfo
.
nCﬁumn
);

5336 
addrS‹tögIdx
 = 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_S‹ãrO≥n
,

5337 
sAggInfo
.
s‹tögIdx
, sAggInfo.
nS‹tögCﬁumn
,

5338 0, (*)
pKeyInfo
, 
P4_KEYINFO
);

5342 
iU£Fœg
 = ++
pP¨£
->
nMem
;

5343 
iAb‹tFœg
 = ++
pP¨£
->
nMem
;

5344 
ªgOuçutRow
 = ++
pP¨£
->
nMem
;

5345 
addrOuçutRow
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

5346 
ªgRe£t
 = ++
pP¨£
->
nMem
;

5347 
addrRe£t
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

5348 
iAMem
 = 
pP¨£
->
nMem
 + 1;

5349 
pP¨£
->
nMem
 +
pGroupBy
->
nEx¥
;

5350 
iBMem
 = 
pP¨£
->
nMem
 + 1;

5351 
pP¨£
->
nMem
 +
pGroupBy
->
nEx¥
;

5352 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 0, 
iAb‹tFœg
);

5353 
	`VdbeCommít
((
v
, "clearábort flag"));

5354 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 0, 
iU£Fœg
);

5355 
	`VdbeCommít
((
v
, "indicateáccumulatorÉmpty"));

5356 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_NuŒ
, 0, 
iAMem
, iAMem+
pGroupBy
->
nEx¥
-1);

5363 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Gosub
, 
ªgRe£t
, 
addrRe£t
);

5364 
pWInfo
 = 
	`sqlôe3WhîeBegö
(
pP¨£
, 
pTabLi°
, 
pWhîe
, 
pGroupBy
, 0,

5365 
WHERE_GROUPBY
 | (
‹dîByGΩ
 ? 
WHERE_SORTBYGROUP
 : 0), 0

5367 if–
pWInfo
==0 ) 
£À˘_íd
;

5368 if–
	`sqlôe3WhîeIsOrdîed
(
pWInfo
)==
pGroupBy
->
nEx¥
 ){

5373 
groupByS‹t
 = 0;

5380 
ªgBa£
;

5381 
ªgRec‹d
;

5382 
nCﬁ
;

5383 
nGroupBy
;

5385 
	`ex∂aöTempTabÀ
(
pP¨£
,

5386 (
sDi°ö˘
.
isTn˘
 && (
p
->
£lFœgs
&
SF_Di°ö˘
)==0) ?

5389 
groupByS‹t
 = 1;

5390 
nGroupBy
 = 
pGroupBy
->
nEx¥
;

5391 
nCﬁ
 = 
nGroupBy
;

5392 
j
 = 
nGroupBy
;

5393 
i
=0; i<
sAggInfo
.
nCﬁumn
; i++){

5394 if–
sAggInfo
.
aCﬁ
[
i
].
iS‹ãrCﬁumn
>=
j
 ){

5395 
nCﬁ
++;

5396 
j
++;

5399 
ªgBa£
 = 
	`sqlôe3GëTempR™ge
(
pP¨£
, 
nCﬁ
);

5400 
	`sqlôe3Ex¥CacheCÀ¨
(
pP¨£
);

5401 
	`sqlôe3Ex¥CodeEx¥Li°
(
pP¨£
, 
pGroupBy
, 
ªgBa£
, 0, 0);

5402 
j
 = 
nGroupBy
;

5403 
i
=0; i<
sAggInfo
.
nCﬁumn
; i++){

5404 
AggInfo_cﬁ
 *
pCﬁ
 = &
sAggInfo
.
aCﬁ
[
i
];

5405 if–
pCﬁ
->
iS‹ãrCﬁumn
>=
j
 ){

5406 
r1
 = 
j
 + 
ªgBa£
;

5407 
	`sqlôe3Ex¥CodeGëCﬁumnToReg
(
pP¨£
,

5408 
pCﬁ
->
pTab
,ÖCﬁ->
iCﬁumn
,ÖCﬁ->
iTabÀ
, 
r1
);

5409 
j
++;

5412 
ªgRec‹d
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

5413 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MakeRec‹d
, 
ªgBa£
, 
nCﬁ
, 
ªgRec‹d
);

5414 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_S‹ãrIn£π
, 
sAggInfo
.
s‹tögIdx
, 
ªgRec‹d
);

5415 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgRec‹d
);

5416 
	`sqlôe3Rñó£TempR™ge
(
pP¨£
, 
ªgBa£
, 
nCﬁ
);

5417 
	`sqlôe3WhîeEnd
(
pWInfo
);

5418 
sAggInfo
.
s‹tögIdxPTab
 = 
s‹tPTab
 = 
pP¨£
->
nTab
++;

5419 
s‹tOut
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

5420 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_O≥nP£udo
, 
s‹tPTab
, 
s‹tOut
, 
nCﬁ
);

5421 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_S‹ãrS‹t
, 
sAggInfo
.
s‹tögIdx
, 
addrEnd
);

5422 
	`VdbeCommít
((
v
, "GROUP BY s‹t")); 
	`VdbeCovîage
(v);

5423 
sAggInfo
.
u£S‹tögIdx
 = 1;

5424 
	`sqlôe3Ex¥CacheCÀ¨
(
pP¨£
);

5435 if–
‹dîByGΩ
 && 
	`O±imiz©i⁄E«bÀd
(
db
, 
SQLITE_GroupByOrdî
)

5436 && (
groupByS‹t
 || 
	`sqlôe3WhîeIsS‹ãd
(
pWInfo
))

5438 
sS‹t
.
pOrdîBy
 = 0;

5439 
	`sqlôe3VdbeCh™geToNo›
(
v
, 
sS‹t
.
addrS‹tIndex
);

5447 
addrT›OfLo›
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

5448 
	`sqlôe3Ex¥CacheCÀ¨
(
pP¨£
);

5449 if–
groupByS‹t
 ){

5450 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_S‹ãrD©a
, 
sAggInfo
.
s‹tögIdx
,

5451 
s‹tOut
, 
s‹tPTab
);

5453 
j
=0; j<
pGroupBy
->
nEx¥
; j++){

5454 if–
groupByS‹t
 ){

5455 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
s‹tPTab
, 
j
, 
iBMem
+j);

5457 
sAggInfo
.
dúe˘Mode
 = 1;

5458 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pGroupBy
->
a
[
j
].
pEx¥
, 
iBMem
+j);

5461 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Com∑ª
, 
iAMem
, 
iBMem
, 
pGroupBy
->
nEx¥
,

5462 (*)
	`sqlôe3KeyInfoRef
(
pKeyInfo
), 
P4_KEYINFO
);

5463 
addr1
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

5464 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Jump
, 
addr1
+1, 0,áddr1+1); 
	`VdbeCovîage
(v);

5475 
	`sqlôe3Ex¥CodeMove
(
pP¨£
, 
iBMem
, 
iAMem
, 
pGroupBy
->
nEx¥
);

5476 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Gosub
, 
ªgOuçutRow
, 
addrOuçutRow
);

5477 
	`VdbeCommít
((
v
, "output oneÑow"));

5478 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IfPos
, 
iAb‹tFœg
, 
addrEnd
); 
	`VdbeCovîage
(v);

5479 
	`VdbeCommít
((
v
, "checkábort flag"));

5480 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Gosub
, 
ªgRe£t
, 
addrRe£t
);

5481 
	`VdbeCommít
((
v
, "resetáccumulator"));

5486 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr1
);

5487 
	`upd©eAccumuœt‹
(
pP¨£
, &
sAggInfo
);

5488 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 1, 
iU£Fœg
);

5489 
	`VdbeCommít
((
v
, "indicate data ináccumulator"));

5493 if–
groupByS‹t
 ){

5494 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_S‹ãrNext
, 
sAggInfo
.
s‹tögIdx
, 
addrT›OfLo›
);

5495 
	`VdbeCovîage
(
v
);

5497 
	`sqlôe3WhîeEnd
(
pWInfo
);

5498 
	`sqlôe3VdbeCh™geToNo›
(
v
, 
addrS‹tögIdx
);

5503 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Gosub
, 
ªgOuçutRow
, 
addrOuçutRow
);

5504 
	`VdbeCommít
((
v
, "output finalÑow"));

5508 
	`sqlôe3VdbeGŸo
(
v
, 
addrEnd
);

5517 
addrSëAb‹t
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

5518 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 1, 
iAb‹tFœg
);

5519 
	`VdbeCommít
((
v
, "setábort flag"));

5520 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Rëu∫
, 
ªgOuçutRow
);

5521 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
addrOuçutRow
);

5522 
addrOuçutRow
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

5523 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IfPos
, 
iU£Fœg
, 
addrOuçutRow
+2);

5524 
	`VdbeCovîage
(
v
);

5525 
	`VdbeCommít
((
v
, "GroupbyÑesult generatorÉntryÖoint"));

5526 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Rëu∫
, 
ªgOuçutRow
);

5527 
	`föÆizeAggFun˘i⁄s
(
pP¨£
, &
sAggInfo
);

5528 
	`sqlôe3Ex¥IfFÆ£
(
pP¨£
, 
pHavög
, 
addrOuçutRow
+1, 
SQLITE_JUMPIFNULL
);

5529 
	`£À˘I¬îLo›
(
pP¨£
, 
p
,Ö->
pELi°
, -1, &
sS‹t
,

5530 &
sDi°ö˘
, 
pDe°
,

5531 
addrOuçutRow
+1, 
addrSëAb‹t
);

5532 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Rëu∫
, 
ªgOuçutRow
);

5533 
	`VdbeCommít
((
v
, "end groupbyÑesult generator"));

5537 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
addrRe£t
);

5538 
	`ª£tAccumuœt‹
(
pP¨£
, &
sAggInfo
);

5539 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Rëu∫
, 
ªgRe£t
);

5543 
Ex¥Li°
 *
pDñ
 = 0;

5544 #i‚de‡
SQLITE_OMIT_BTREECOUNT


5545 
TabÀ
 *
pTab
;

5546 if–(
pTab
 = 
	`isSim∂eCou¡
(
p
, &
sAggInfo
))!=0 ){

5560 c⁄° 
iDb
 = 
	`sqlôe3SchemaToIndex
(
pP¨£
->
db
, 
pTab
->
pSchema
);

5561 c⁄° 
iC§
 = 
pP¨£
->
nTab
++;

5562 
Index
 *
pIdx
;

5563 
KeyInfo
 *
pKeyInfo
 = 0;

5564 
Index
 *
pBe°
 = 0;

5565 
iRoŸ
 = 
pTab
->
äum
;

5567 
	`sqlôe3CodeVîifySchema
(
pP¨£
, 
iDb
);

5568 
	`sqlôe3TabÀLock
(
pP¨£
, 
iDb
, 
pTab
->
äum
, 0,ÖTab->
zName
);

5579 if–!
	`HasRowid
(
pTab
ËË
pBe°
 = 
	`sqlôe3Prim¨yKeyIndex
(pTab);

5580 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
){

5581 if–
pIdx
->
bUn‹dîed
==0

5582 && 
pIdx
->
szIdxRow
<
pTab
->
szTabRow


5583 && 
pIdx
->
pP¨tIdxWhîe
==0

5584 && (!
pBe°
 || 
pIdx
->
szIdxRow
<pBest->szIdxRow)

5586 
pBe°
 = 
pIdx
;

5589 if–
pBe°
 ){

5590 
iRoŸ
 = 
pBe°
->
äum
;

5591 
pKeyInfo
 = 
	`sqlôe3KeyInfoOfIndex
(
pP¨£
, 
pBe°
);

5595 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_O≥nRód
, 
iC§
, 
iRoŸ
, 
iDb
, 1);

5596 if–
pKeyInfo
 ){

5597 
	`sqlôe3VdbeCh™geP4
(
v
, -1, (*)
pKeyInfo
, 
P4_KEYINFO
);

5599 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Cou¡
, 
iC§
, 
sAggInfo
.
aFunc
[0].
iMem
);

5600 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Clo£
, 
iC§
);

5601 
	`ex∂aöSim∂eCou¡
(
pP¨£
, 
pTab
, 
pBe°
);

5630 
Ex¥Li°
 *
pMöMax
 = 0;

5631 
u8
 
Êag
 = 
WHERE_ORDERBY_NORMAL
;

5633 
	`as£π
–
p
->
pGroupBy
==0 );

5634 
	`as£π
–
Êag
==0 );

5635 if–
p
->
pHavög
==0 ){

5636 
Êag
 = 
	`möMaxQuîy
(&
sAggInfo
, &
pMöMax
);

5638 
	`as£π
–
Êag
==0 || (
pMöMax
!=0 &&ÖMöMax->
nEx¥
==1) );

5640 if–
Êag
 ){

5641 
pMöMax
 = 
	`sqlôe3Ex¥Li°Dup
(
db
,ÖMinMax, 0);

5642 
pDñ
 = 
pMöMax
;

5643 
	`as£π
–
db
->
mÆlocFaûed
 || 
pMöMax
!=0 );

5644 if–!
db
->
mÆlocFaûed
 ){

5645 
pMöMax
->
a
[0].
s‹tOrdî
 = 
Êag
!=
WHERE_ORDERBY_MIN
 ?1:0;

5646 
pMöMax
->
a
[0].
pEx¥
->
›
 = 
TK_COLUMN
;

5654 
	`ª£tAccumuœt‹
(
pP¨£
, &
sAggInfo
);

5655 
pWInfo
 = 
	`sqlôe3WhîeBegö
(
pP¨£
, 
pTabLi°
, 
pWhîe
, 
pMöMax
,0,
Êag
,0);

5656 if–
pWInfo
==0 ){

5657 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pDñ
);

5658 
£À˘_íd
;

5660 
	`upd©eAccumuœt‹
(
pP¨£
, &
sAggInfo
);

5661 
	`as£π
–
pMöMax
==0 ||ÖMöMax->
nEx¥
==1 );

5662 if–
	`sqlôe3WhîeIsOrdîed
(
pWInfo
)>0 ){

5663 
	`sqlôe3VdbeGŸo
(
v
, 
	`sqlôe3WhîeBªakLabñ
(
pWInfo
));

5664 
	`VdbeCommít
((
v
, "%s() by index",

5665 (
Êag
==
WHERE_ORDERBY_MIN
?"min":"max")));

5667 
	`sqlôe3WhîeEnd
(
pWInfo
);

5668 
	`föÆizeAggFun˘i⁄s
(
pP¨£
, &
sAggInfo
);

5671 
sS‹t
.
pOrdîBy
 = 0;

5672 
	`sqlôe3Ex¥IfFÆ£
(
pP¨£
, 
pHavög
, 
addrEnd
, 
SQLITE_JUMPIFNULL
);

5673 
	`£À˘I¬îLo›
(
pP¨£
, 
p
,Ö->
pELi°
, -1, 0, 0,

5674 
pDe°
, 
addrEnd
,áddrEnd);

5675 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pDñ
);

5677 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
addrEnd
);

5681 if–
sDi°ö˘
.
eTn˘Ty≥
==
WHERE_DISTINCT_UNORDERED
 ){

5682 
	`ex∂aöTempTabÀ
(
pP¨£
, "DISTINCT");

5688 if–
sS‹t
.
pOrdîBy
 ){

5689 
	`ex∂aöTempTabÀ
(
pP¨£
,

5690 
sS‹t
.
nOBS©
>0 ? "RIGHT PART OF ORDER BY":"ORDER BY");

5691 
	`gíî©eS‹tTaû
(
pP¨£
, 
p
, &
sS‹t
, 
pELi°
->
nEx¥
, 
pDe°
);

5696 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
iEnd
);

5700 
rc
 = (
pP¨£
->
nEº
>0);

5705 
£À˘_íd
:

5706 
	`ex∂aöSëI¡egî
(
pP¨£
->
iSñe˘Id
, 
iRe°‹eSñe˘Id
);

5710 if–
rc
==
SQLITE_OK
 && 
pDe°
->
eDe°
==
SRT_Ouçut
 ){

5711 
	`gíî©eCﬁumnNames
(
pP¨£
, 
pTabLi°
, 
pELi°
);

5714 
	`sqlôe3DbFªe
(
db
, 
sAggInfo
.
aCﬁ
);

5715 
	`sqlôe3DbFªe
(
db
, 
sAggInfo
.
aFunc
);

5716 #i‡
SELECTTRACE_ENABLED


5717 
	`SELECTTRACE
(1,
pP¨£
,
p
,("endÖrocessing\n"));

5718 
pP¨£
->
nSñe˘Indít
--;

5720  
rc
;

5721 
	}
}

	@shell.c

15 #i‡(
deföed
(
_WIN32
Ë|| deföed(
WIN32
)Ë&& !deföed(
_CRT_SECURE_NO_WARNINGS
)

17 
	#_CRT_SECURE_NO_WARNINGS


	)

23 #i‡
deföed
(
INCLUDE_MSVC_H
)

24 
	~"msvc.h
"

30 #i‡(
deföed
(
__RTP__
Ë|| deföed(
_WRS_KERNEL
)Ë&& !
SQLITE_OMIT_LOAD_EXTENSION


31 
	#SQLITE_OMIT_LOAD_EXTENSION
 1

	)

37 #i‚de‡
SQLITE_DISABLE_LFS


38 
	#_LARGE_FILE
 1

	)

39 #i‚de‡
_FILE_OFFSET_BITS


40 
	#_FILE_OFFSET_BITS
 64

	)

42 
	#_LARGEFILE_SOURCE
 1

	)

45 
	~<°dlib.h
>

46 
	~<°rög.h
>

47 
	~<°dio.h
>

48 
	~<as£π.h
>

49 
	~"sqlôe3.h
"

50 #i‡
SQLITE_USER_AUTHENTICATION


51 
	~"sqlôe3u£øuth.h
"

53 
	~<˘y≥.h
>

54 
	~<°d¨g.h
>

56 #i‡!
deföed
(
_WIN32
Ë&& !deföed(
WIN32
)

57 
	~<sig«l.h
>

58 #i‡!
deföed
(
__RTP__
Ë&& !deföed(
_WRS_KERNEL
)

59 
	~<pwd.h
>

61 
	~<uni°d.h
>

62 
	~<sys/ty≥s.h
>

65 #i‡
HAVE_READLINE


66 
	~<ªadlöe/ªadlöe.h
>

67 
	~<ªadlöe/hi°‹y.h
>

70 #i‡
HAVE_EDITLINE


71 
	~<edôlöe/ªadlöe.h
>

74 #i‡
HAVE_EDITLINE
 || 
HAVE_READLINE


76 
	#shñl_add_hi°‹y
(
X
Ë
	`add_hi°‹y
(X)

	)

77 
	#shñl_ªad_hi°‹y
(
X
Ë
	`ªad_hi°‹y
(X)

	)

78 
	#shñl_wrôe_hi°‹y
(
X
Ë
	`wrôe_hi°‹y
(X)

	)

79 
	#shñl_°iÊe_hi°‹y
(
X
Ë
	`°iÊe_hi°‹y
(X)

	)

80 
	#shñl_ªadlöe
(
X
Ë
	`ªadlöe
(X)

	)

82 #ñi‡
HAVE_LINENOISE


84 
	~"löíoi£.h
"

85 
	#shñl_add_hi°‹y
(
X
Ë
	`löíoi£Hi°‹yAdd
(X)

	)

86 
	#shñl_ªad_hi°‹y
(
X
Ë
	`löíoi£Hi°‹yLﬂd
(X)

	)

87 
	#shñl_wrôe_hi°‹y
(
X
Ë
	`löíoi£Hi°‹ySave
(X)

	)

88 
	#shñl_°iÊe_hi°‹y
(
X
Ë
	`löíoi£Hi°‹ySëMaxLí
(X)

	)

89 
	#shñl_ªadlöe
(
X
Ë
	`löíoi£
(X)

	)

93 
	#shñl_ªad_hi°‹y
(
X
)

	)

94 
	#shñl_wrôe_hi°‹y
(
X
)

	)

95 
	#shñl_°iÊe_hi°‹y
(
X
)

	)

97 
	#SHELL_USE_LOCAL_GETLINE
 1

	)

101 #i‡
deföed
(
_WIN32
Ë|| deföed(
WIN32
)

102 
	~<io.h
>

103 
	~<f˙é.h
>

104 
	#ißây
(
h
Ë
	`_ißây
(h)

	)

105 #i‚de‡
ac˚ss


106 
	#ac˚ss
(
f
,
m
Ë
	`_ac˚ss
((f),(m))

	)

108 #unde‡
p›í


109 
	#p›í
 
_p›í


	)

110 #unde‡
p˛o£


111 
	#p˛o£
 
_p˛o£


	)

114 
ißây
();

116 #i‡!
deföed
(
__RTP__
Ë&& !deföed(
_WRS_KERNEL
)

119 
FILE
 *
p›í
(const *,const *);

120 
p˛o£
(
FILE
*);

122 
	#SQLITE_OMIT_POPEN
 1

	)

126 #i‡
deföed
(
_WIN32_WCE
)

131 
	#ißây
(
x
Ë1

	)

135 
	#IsS∑˚
(
X
Ë
	`is•a˚
(()X)

	)

136 
	#IsDigô
(
X
Ë
	`isdigô
(()X)

	)

137 
	#ToLowî
(
X
Ë()
	`tﬁowî
(()X)

	)

139 #i‡
deföed
(
_WIN32
Ë|| deföed(
WIN32
)

140 
	~<wödows.h
>

143 *
sqlôe3_wö32_unicode_to_utf8
(
LPCWSTR
);

144 *
sqlôe3_wö32_mbcs_to_utf8_v2
(const *, );

145 *
sqlôe3_wö32_utf8_to_mbcs_v2
(const *, );

146 
LPWSTR
 
sqlôe3_wö32_utf8_to_unicode
(c⁄° *
zText
);

155 #i‡
deföed
(
_WIN32
Ë|| deföed(
WIN32
)

156 
	$£tBö¨yMode
(
FILE
 *
fûe
, 
isOuçut
){

157 if–
isOuçut
 ) 
	`fÊush
(
fûe
);

158 
	`_£tmode
(
	`_fûío
(
fûe
), 
_O_BINARY
);

159 
	}
}

160 
	$£tTextMode
(
FILE
 *
fûe
, 
isOuçut
){

161 if–
isOuçut
 ) 
	`fÊush
(
fûe
);

162 
	`_£tmode
(
	`_fûío
(
fûe
), 
_O_TEXT
);

163 
	}
}

165 
	#£tBö¨yMode
(
X
,
Y
)

	)

166 
	#£tTextMode
(
X
,
Y
)

	)

171 
	gíabÀTimî
 = 0;

174 
sqlôe3_öt64
 
	$timeOfDay
(){

175 
sqlôe3_vfs
 *
˛ockVfs
 = 0;

176 
sqlôe3_öt64
 
t
;

177 if–
˛ockVfs
==0 ) clockVf†
	`sqlôe3_vfs_föd
(0);

178 if–
˛ockVfs
->
iVîsi⁄
>=2 && clockVfs->
xCuºítTimeI¡64
!=0 ){

179 
˛ockVfs
->
	`xCuºítTimeI¡64
(˛ockVfs, &
t
);

181 
r
;

182 
˛ockVfs
->
	`xCuºítTime
(˛ockVfs, &
r
);

183 
t
 = (
sqlôe3_öt64
)(
r
*86400000.0);

185  
t
;

186 
	}
}

188 #i‡!
deföed
(
_WIN32
Ë&& !deföed(
WIN32
Ë&& !deföed(
__möux
)

189 
	~<sys/time.h
>

190 
	~<sys/ªsour˚.h
>

193 #i‡
deföed
(
_WRS_KERNEL
Ë|| deföed(
__RTP__
)

194 
	srußge
 {

195 
timevÆ
 
	mru_utime
;

196 
timevÆ
 
	mru_°ime
;

198 
	#gërußge
(
A
,
B
Ë
	`mem£t
(B,0,(*B))

	)

202 
rußge
 
	gsBegö
;

203 
sqlôe3_öt64
 
	giBegö
;

208 
	$begöTimî
(){

209 if–
íabÀTimî
 ){

210 
	`gërußge
(
RUSAGE_SELF
, &
sBegö
);

211 
iBegö
 = 
	`timeOfDay
();

213 
	}
}

216 
	$timeDiff
(
timevÆ
 *
pSèπ
, timevÆ *
pEnd
){

217  (
pEnd
->
tv_u£c
 - 
pSèπ
->tv_usec)*0.000001 +

218 ()(
pEnd
->
tv_£c
 - 
pSèπ
->tv_sec);

219 
	}
}

224 
	$ídTimî
(){

225 if–
íabÀTimî
 ){

226 
sqlôe3_öt64
 
iEnd
 = 
	`timeOfDay
();

227 
rußge
 
sEnd
;

228 
	`gërußge
(
RUSAGE_SELF
, &
sEnd
);

229 
	`¥ötf
("Run Time:Ñeal %.3f user %f sys %f\n",

230 (
iEnd
 - 
iBegö
)*0.001,

231 
	`timeDiff
(&
sBegö
.
ru_utime
, &
sEnd
.ru_utime),

232 
	`timeDiff
(&
sBegö
.
ru_°ime
, &
sEnd
.ru_stime));

234 
	}
}

236 
	#BEGIN_TIMER
 
	`begöTimî
()

	)

237 
	#END_TIMER
 
	`ídTimî
()

	)

238 
	#HAS_TIMER
 1

	)

240 #ñi‡(
deföed
(
_WIN32
Ë|| deföed(
WIN32
))

243 
HANDLE
 
	ghPro˚ss
;

244 
FILETIME
 
	g·Kî√lBegö
;

245 
FILETIME
 
	g·U£rBegö
;

246 
sqlôe3_öt64
 
	g·WÆlBegö
;

247 
	$BOOL
 (
	tWINAPI
 *
	tGETPROCTIMES
)(
	tHANDLE
, 
	tLPFILETIME
, LPFILETIME,

248 
	tLPFILETIME
, LPFILETIME);

249 
GETPROCTIMES
 
gëPro˚ssTimesAddr
 = 
NULL
;

255 
	$hasTimî
(){

256 if–
gëPro˚ssTimesAddr
 ){

263 
hPro˚ss
 = 
	`GëCuºítPro˚ss
();

264 if–
hPro˚ss
 ){

265 
HINSTANCE
 
hö°Lib
 = 
	`LﬂdLibøry
(
	`TEXT
("Kernel32.dll"));

266 if–
NULL
 !
hö°Lib
 ){

267 
gëPro˚ssTimesAddr
 =

268 (
GETPROCTIMES
Ë
	`GëProcAddªss
(
hö°Lib
, "GetProcessTimes");

269 if–
NULL
 !
gëPro˚ssTimesAddr
 ){

272 
	`FªeLibøry
(
hö°Lib
);

277 
	}
}

282 
	$begöTimî
(){

283 if–
íabÀTimî
 && 
gëPro˚ssTimesAddr
 ){

284 
FILETIME
 
·Cª©i⁄
, 
·Exô
;

285 
	`gëPro˚ssTimesAddr
(
hPro˚ss
,&
·Cª©i⁄
,&
·Exô
,

286 &
·Kî√lBegö
,&
·U£rBegö
);

287 
·WÆlBegö
 = 
	`timeOfDay
();

289 
	}
}

292 
	$timeDiff
(
FILETIME
 *
pSèπ
, FILETIME *
pEnd
){

293 
sqlôe_öt64
 
i64Sèπ
 = *((sqlôe_öt64 *Ë
pSèπ
);

294 
sqlôe_öt64
 
i64End
 = *((sqlôe_öt64 *Ë
pEnd
);

295  (Ë((
i64End
 - 
i64Sèπ
) / 10000000.0);

296 
	}
}

301 
	$ídTimî
(){

302 if–
íabÀTimî
 && 
gëPro˚ssTimesAddr
){

303 
FILETIME
 
·Cª©i⁄
, 
·Exô
, 
·Kî√lEnd
, 
·U£rEnd
;

304 
sqlôe3_öt64
 
·WÆlEnd
 = 
	`timeOfDay
();

305 
	`gëPro˚ssTimesAddr
(
hPro˚ss
,&
·Cª©i⁄
,&
·Exô
,&
·Kî√lEnd
,&
·U£rEnd
);

306 
	`¥ötf
("Run Time:Ñeal %.3f user %f sys %f\n",

307 (
·WÆlEnd
 - 
·WÆlBegö
)*0.001,

308 
	`timeDiff
(&
·U£rBegö
, &
·U£rEnd
),

309 
	`timeDiff
(&
·Kî√lBegö
, &
·Kî√lEnd
));

311 
	}
}

313 
	#BEGIN_TIMER
 
	`begöTimî
()

	)

314 
	#END_TIMER
 
	`ídTimî
()

	)

315 
	#HAS_TIMER
 
	`hasTimî
()

	)

318 
	#BEGIN_TIMER


	)

319 
	#END_TIMER


	)

320 
	#HAS_TIMER
 0

	)

326 
	#UNUSED_PARAMETER
(
x
Ë()(x)

	)

332 
	gbaû_⁄_îr‹
 = 0;

338 
	g°dö_is_öãø˘ive
 = 1;

345 
	g°dout_is_c⁄sﬁe
 = 1;

352 
sqlôe3
 *
	gglobÆDb
 = 0;

357 vﬁ©ûê
	g£íI¡îru±
 = 0;

363 *
	gArgv0
;

369 
	gmaöProm±
[20];

370 
	gc⁄töueProm±
[20];

377 #i‡
deföed
(
_WIN32
Ë|| deföed(
WIN32
)

378 
	$utf8_¥ötf
(
FILE
 *
out
, c⁄° *
zF‹m©
, ...){

379 
va_li°
 
≠
;

380 
	`va_°¨t
(
≠
, 
zF‹m©
);

381 if–
°dout_is_c⁄sﬁe
 && (
out
==
°dout
 || out==
°dîr
) ){

382 *
z1
 = 
	`sqlôe3_vm¥ötf
(
zF‹m©
, 
≠
);

383 *
z2
 = 
	`sqlôe3_wö32_utf8_to_mbcs_v2
(
z1
, 0);

384 
	`sqlôe3_‰ì
(
z1
);

385 
	`Âuts
(
z2
, 
out
);

386 
	`sqlôe3_‰ì
(
z2
);

388 
	`vÂrötf
(
out
, 
zF‹m©
, 
≠
);

390 
	`va_íd
(
≠
);

391 
	}
}

392 #ñi‡!
deföed
(
utf8_¥ötf
)

393 
	#utf8_¥ötf
 
Ârötf


	)

400 #i‡!
deföed
(
øw_¥ötf
)

401 
	#øw_¥ötf
 
Ârötf


	)

407 #ifde‡
SQLITE_ENABLE_IOTRACE


408 
FILE
 *
	giŸø˚
 = 0;

417 #ifde‡
SQLITE_ENABLE_IOTRACE


418 
SQLITE_CDECL
 
	$iŸø˚Prötf
(c⁄° *
zF‹m©
, ...){

419 
va_li°
 
≠
;

420 *
z
;

421 if–
iŸø˚
==0 ) ;

422 
	`va_°¨t
(
≠
, 
zF‹m©
);

423 
z
 = 
	`sqlôe3_vm¥ötf
(
zF‹m©
, 
≠
);

424 
	`va_íd
(
≠
);

425 
	`utf8_¥ötf
(
iŸø˚
, "%s", 
z
);

426 
	`sqlôe3_‰ì
(
z
);

427 
	}
}

434 
	$isNumbî
(c⁄° *
z
, *
ªÆnum
){

435 if–*
z
=='-' || *z=='+' ) z++;

436 if–!
	`IsDigô
(*
z
) ){

439 
z
++;

440 if–
ªÆnum
 ) *realnum = 0;

441  
	`IsDigô
(*
z
) ){ z++; }

442 if–*
z
=='.' ){

443 
z
++;

444 if–!
	`IsDigô
(*
z
) )  0;

445  
	`IsDigô
(*
z
) ){ z++; }

446 if–
ªÆnum
 ) *realnum = 1;

448 if–*
z
=='e' || *z=='E' ){

449 
z
++;

450 if–*
z
=='+' || *z=='-' ) z++;

451 if–!
	`IsDigô
(*
z
) )  0;

452  
	`IsDigô
(*
z
) ){ z++; }

453 if–
ªÆnum
 ) *realnum = 1;

455  *
z
==0;

456 
	}
}

466 c⁄° *
	gzShñlSètic
 = 0;

467 
	$shñl°©icFunc
(

468 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

469 
¨gc
,

470 
sqlôe3_vÆue
 **
¨gv


472 
	`as£π
–0==
¨gc
 );

473 
	`as£π
–
zShñlSètic
 );

474 
	`UNUSED_PARAMETER
(
¨gc
);

475 
	`UNUSED_PARAMETER
(
¨gv
);

476 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
zShñlSètic
, -1, 
SQLITE_STATIC
);

477 
	}
}

484 
	$°æí30
(c⁄° *
z
){

485 c⁄° *
z2
 = 
z
;

486  *
z2
 ){ z2++; }

487  0x3ffffff‡& ()(
z2
 - 
z
);

488 
	}
}

499 *
	$loˇl_gëlöe
(*
zLöe
, 
FILE
 *
ö
){

500 
nLöe
 = 
zLöe
==0 ? 0 : 100;

501 
n
 = 0;

504 if–
n
+100>
nLöe
 ){

505 
nLöe
 =ÇLine*2 + 100;

506 
zLöe
 = 
	`ªÆloc
(zLöe, 
nLöe
);

507 if–
zLöe
==0 )  0;

509 if–
	`fgës
(&
zLöe
[
n
], 
nLöe
 -Ç, 
ö
)==0 ){

510 if–
n
==0 ){

511 
	`‰ì
(
zLöe
);

514 
zLöe
[
n
] = 0;

517  
zLöe
[
n
] )Ç++;

518 if–
n
>0 && 
zLöe
[n-1]=='\n' ){

519 
n
--;

520 if–
n
>0 && 
zLöe
[n-1]=='\r' )Ç--;

521 
zLöe
[
n
] = 0;

525 #i‡
	`deföed
(
_WIN32
Ë|| deföed(
WIN32
)

528 if–
°dö_is_öãø˘ive
 && 
ö
==
°dö
 ){

529 *
zTøns
 = 
	`sqlôe3_wö32_mbcs_to_utf8_v2
(
zLöe
, 0);

530 if–
zTøns
 ){

531 
nTøns
 = 
	`°æí30
(
zTøns
)+1;

532 if–
nTøns
>
nLöe
 ){

533 
zLöe
 = 
	`ªÆloc
(zLöe, 
nTøns
);

534 if–
zLöe
==0 ){

535 
	`sqlôe3_‰ì
(
zTøns
);

539 
	`mem˝y
(
zLöe
, 
zTøns
, 
nTøns
);

540 
	`sqlôe3_‰ì
(
zTøns
);

544  
zLöe
;

545 
	}
}

561 *
	$⁄e_öput_löe
(
FILE
 *
ö
, *
zPri‹
, 
isC⁄töu©i⁄
){

562 *
zProm±
;

563 *
zResu…
;

564 if–
ö
!=0 ){

565 
zResu…
 = 
	`loˇl_gëlöe
(
zPri‹
, 
ö
);

567 
zProm±
 = 
isC⁄töu©i⁄
 ? 
c⁄töueProm±
 : 
maöProm±
;

568 #i‡
SHELL_USE_LOCAL_GETLINE


569 
	`¥ötf
("%s", 
zProm±
);

570 
	`fÊush
(
°dout
);

571 
zResu…
 = 
	`loˇl_gëlöe
(
zPri‹
, 
°dö
);

573 
	`‰ì
(
zPri‹
);

574 
zResu…
 = 
	`shñl_ªadlöe
(
zProm±
);

575 if–
zResu…
 && *zResu… ) 
	`shñl_add_hi°‹y
(zResult);

578  
zResu…
;

579 
	}
}

581 #i‡
deföed
(
SQLITE_ENABLE_SESSION
)

585 
O≥nSessi⁄
 
	tO≥nSessi⁄
;

586 
	sO≥nSessi⁄
 {

587 *
	mzName
;

588 
	mnFûãr
;

589 **
	mazFûãr
;

590 
sqlôe3_£ssi⁄
 *
	mp
;

598 
SavedModeInfo
 
	tSavedModeInfo
;

599 
	sSavedModeInfo
 {

600 
	mvÆid
;

601 
	mmode
;

602 
	mshowHódî
;

603 
	mcﬁWidth
[100];

610 
ShñlSèã
 
	tShñlSèã
;

611 
	sShñlSèã
 {

612 
sqlôe3
 *
	mdb
;

613 
	mechoOn
;

614 
	mautoEx∂aö
;

615 
	mautoEQP
;

616 
	m°©sOn
;

617 
	msˇn°©sOn
;

618 
	mcou¡Ch™ges
;

619 
	mback¶ashOn
;

620 
	moutCou¡
;

621 
	m˙t
;

622 
FILE
 *
	mout
;

623 
FILE
 *
	måa˚Out
;

624 
	mnEº
;

625 
	mmode
;

626 
	mcMode
;

627 
	mn‹mÆMode
;

628 
	mwrôabÀSchema
;

629 
	mshowHódî
;

630 
	mnCheck
;

631 
	mshñlFlgs
;

632 *
	mzDe°TabÀ
;

633 
	mzTe°ˇ£
[30];

634 
	mcﬁSï¨©‹
[20];

635 
	mrowSï¨©‹
[20];

636 
	mcﬁWidth
[100];

637 
	ma˘uÆWidth
[100];

638 
	mnuŒVÆue
[20];

640 
	moutfûe
[
FILENAME_MAX
];

641 c⁄° *
	mzDbFûíame
;

642 *
	mzFªeOnClo£
;

643 c⁄° *
	mzVfs
;

644 
sqlôe3_°mt
 *
	mpStmt
;

645 
FILE
 *
	mpLog
;

646 *
	maiIndít
;

647 
	mnIndít
;

648 
	miIndít
;

649 #i‡
deföed
(
SQLITE_ENABLE_SESSION
)

650 
	mnSessi⁄
;

651 
O≥nSessi⁄
 
	maSessi⁄
[4];

658 
	#SHFLG_S¸©ch
 0x00001

	)

659 
	#SHFLG_Pageˇche
 0x00002

	)

660 
	#SHFLG_Lookaside
 0x00004

	)

665 
	#MODE_Löe
 0

	)

666 
	#MODE_Cﬁumn
 1

	)

667 
	#MODE_Li°
 2

	)

668 
	#MODE_Semi
 3

	)

669 
	#MODE_Html
 4

	)

670 
	#MODE_In£π
 5

	)

671 
	#MODE_QuŸe
 6

	)

672 
	#MODE_T˛
 7

	)

673 
	#MODE_Csv
 8

	)

674 
	#MODE_Ex∂aö
 9

	)

675 
	#MODE_Ascii
 10

	)

676 
	#MODE_Pªây
 11

	)

678 c⁄° *
	gmodeDes¸
[] = {

697 
	#SEP_Cﬁumn
 "|"

	)

698 
	#SEP_Row
 "\n"

	)

699 
	#SEP_Tab
 "\t"

	)

700 
	#SEP_S∑˚
 " "

	)

701 
	#SEP_Comma
 ","

	)

702 
	#SEP_CrLf
 "\r\n"

	)

703 
	#SEP_Unô
 "\x1F"

	)

704 
	#SEP_Rec‹d
 "\x1E"

	)

709 
	#AºaySize
(
X
Ë()((X)/(X[0]))

	)

714 
	$shñlLog
(*
pArg
, 
iEºCode
, c⁄° *
zMsg
){

715 
ShñlSèã
 *
p
 = (ShñlSèã*)
pArg
;

716 if–
p
->
pLog
==0 ) ;

717 
	`utf8_¥ötf
(
p
->
pLog
, "(%dË%s\n", 
iEºCode
, 
zMsg
);

718 
	`fÊush
(
p
->
pLog
);

719 
	}
}

724 
	$ouçut_hex_blob
(
FILE
 *
out
, c⁄° *
pBlob
, 
nBlob
){

725 
i
;

726 *
zBlob
 = (*)
pBlob
;

727 
	`øw_¥ötf
(
out
,"X'");

728 
i
=0; i<
nBlob
; i++){ 
	`øw_¥ötf
(
out
,"%02x",
zBlob
[i]&0xff); }

729 
	`øw_¥ötf
(
out
,"'");

730 
	}
}

735 
	$ouçut_quŸed_°rög
(
FILE
 *
out
, c⁄° *
z
){

736 
i
;

737 
nSögÀ
 = 0;

738 
	`£tBö¨yMode
(
out
, 1);

739 
i
=0; 
z
[i]; i++){

740 if–
z
[
i
]=='\'' ) 
nSögÀ
++;

742 if–
nSögÀ
==0 ){

743 
	`utf8_¥ötf
(
out
,"'%s'",
z
);

745 
	`øw_¥ötf
(
out
,"'");

746  *
z
 ){

747 
i
=0; 
z
[i] && z[i]!='\''; i++){}

748 if–
i
==0 ){

749 
	`øw_¥ötf
(
out
,"''");

750 
z
++;

751 }if–
z
[
i
]=='\'' ){

752 
	`utf8_¥ötf
(
out
,"%.*s''",
i
,
z
);

753 
z
 +
i
+1;

755 
	`utf8_¥ötf
(
out
,"%s",
z
);

759 
	`øw_¥ötf
(
out
,"'");

761 
	`£tTextMode
(
out
, 1);

762 
	}
}

767 
	$ouçut_c_°rög
(
FILE
 *
out
, c⁄° *
z
){

768 
c
;

769 
	`Âutc
('"', 
out
);

770  (
c
 = *(
z
++))!=0 ){

771 if–
c
=='\\' ){

772 
	`Âutc
(
c
, 
out
);

773 
	`Âutc
(
c
, 
out
);

774 }if–
c
=='"' ){

775 
	`Âutc
('\\', 
out
);

776 
	`Âutc
('"', 
out
);

777 }if–
c
=='\t' ){

778 
	`Âutc
('\\', 
out
);

779 
	`Âutc
('t', 
out
);

780 }if–
c
=='\n' ){

781 
	`Âutc
('\\', 
out
);

782 
	`Âutc
('n', 
out
);

783 }if–
c
=='\r' ){

784 
	`Âutc
('\\', 
out
);

785 
	`Âutc
('r', 
out
);

786 }if–!
	`i•röt
(
c
&0xff) ){

787 
	`øw_¥ötf
(
out
, "\\%03o", 
c
&0xff);

789 
	`Âutc
(
c
, 
out
);

792 
	`Âutc
('"', 
out
);

793 
	}
}

799 
	$ouçut_html_°rög
(
FILE
 *
out
, c⁄° *
z
){

800 
i
;

801 if–
z
==0 ) z = "";

802  *
z
 ){

803 
i
=0; 
z
[i]

804 && 
z
[
i
]!='<'

805 && 
z
[
i
]!='&'

806 && 
z
[
i
]!='>'

807 && 
z
[
i
]!='\"'

808 && 
z
[
i
]!='\'';

809 
i
++){}

810 if–
i
>0 ){

811 
	`utf8_¥ötf
(
out
,"%.*s",
i
,
z
);

813 if–
z
[
i
]=='<' ){

814 
	`øw_¥ötf
(
out
,"&lt;");

815 }if–
z
[
i
]=='&' ){

816 
	`øw_¥ötf
(
out
,"&amp;");

817 }if–
z
[
i
]=='>' ){

818 
	`øw_¥ötf
(
out
,"&gt;");

819 }if–
z
[
i
]=='\"' ){

820 
	`øw_¥ötf
(
out
,"&quot;");

821 }if–
z
[
i
]=='\'' ){

822 
	`øw_¥ötf
(
out
,"&#39;");

826 
z
 +
i
 + 1;

828 
	}
}

834 c⁄° 
	g√edCsvQuŸe
[] = {

859 
	$ouçut_csv
(
ShñlSèã
 *
p
, c⁄° *
z
, 
bSï
){

860 
FILE
 *
out
 = 
p
->out;

861 if–
z
==0 ){

862 
	`utf8_¥ötf
(
out
,"%s",
p
->
nuŒVÆue
);

864 
i
;

865 
nSï
 = 
	`°æí30
(
p
->
cﬁSï¨©‹
);

866 
i
=0; 
z
[i]; i++){

867 if–
√edCsvQuŸe
[((*)
z
)[
i
]]

868 || (
z
[
i
]==
p
->
cﬁSï¨©‹
[0] &&

869 (
nSï
==1 || 
	`memcmp
(
z
, 
p
->
cﬁSï¨©‹
,ÇSep)==0)) ){

870 
i
 = 0;

874 if–
i
==0 ){

875 
	`putc
('"', 
out
);

876 
i
=0; 
z
[i]; i++){

877 if–
z
[
i
]=='"' ) 
	`putc
('"', 
out
);

878 
	`putc
(
z
[
i
], 
out
);

880 
	`putc
('"', 
out
);

882 
	`utf8_¥ötf
(
out
, "%s", 
z
);

885 if–
bSï
 ){

886 
	`utf8_¥ötf
(
p
->
out
, "%s",Ö->
cﬁSï¨©‹
);

888 
	}
}

890 #ifde‡
SIGINT


894 
	$öãºu±_h™dÀr
(
NŸU£d
){

895 
	`UNUSED_PARAMETER
(
NŸU£d
);

896 
£íI¡îru±
++;

897 if–
£íI¡îru±
>2 ) 
	`exô
(1);

898 if–
globÆDb
 ) 
	`sqlôe3_öãºu±
(globalDb);

899 
	}
}

902 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


907 
	$shñlAuth
(

908 *
pClõ¡D©a
,

909 
›
,

910 c⁄° *
zA1
,

911 c⁄° *
zA2
,

912 c⁄° *
zA3
,

913 c⁄° *
zA4


915 
ShñlSèã
 *
p
 = (ShñlSèã*)
pClõ¡D©a
;

916 c⁄° *
azA˘i⁄
[] = { 0,

929 
i
;

930 c⁄° *
az
[4];

931 
az
[0] = 
zA1
;

932 
az
[1] = 
zA2
;

933 
az
[2] = 
zA3
;

934 
az
[3] = 
zA4
;

935 
	`utf8_¥ötf
(
p
->
out
, "auth‹izî: %s", 
azA˘i⁄
[
›
]);

936 
i
=0; i<4; i++){

937 
	`øw_¥ötf
(
p
->
out
, " ");

938 if–
az
[
i
] ){

939 
	`ouçut_c_°rög
(
p
->
out
, 
az
[
i
]);

941 
	`øw_¥ötf
(
p
->
out
, "NULL");

944 
	`øw_¥ötf
(
p
->
out
, "\n");

945  
SQLITE_OK
;

946 
	}
}

955 
	$¥ötSchemaLöe
(
FILE
 *
out
, c⁄° *
z
, c⁄° *
zTaû
){

956 if–
	`sqlôe3_°rglob
("CREATE TABLE ['\"]*", 
z
)==0 ){

957 
	`utf8_¥ötf
(
out
, "CREATE TABLE IF NOT EXISTS %s%s", 
z
+13, 
zTaû
);

959 
	`utf8_¥ötf
(
out
, "%s%s", 
z
, 
zTaû
);

961 
	}
}

962 
	$¥ötSchemaLöeN
(
FILE
 *
out
, *
z
, 
n
, c⁄° *
zTaû
){

963 
c
 = 
z
[
n
];

964 
z
[
n
] = 0;

965 
	`¥ötSchemaLöe
(
out
, 
z
, 
zTaû
);

966 
z
[
n
] = 
c
;

967 
	}
}

973 
	$shñl_ˇŒback
(

974 *
pArg
,

975 
nArg
,

976 **
azArg
,

977 **
azCﬁ
,

978 *
aiTy≥


980 
i
;

981 
ShñlSèã
 *
p
 = (ShñlSèã*)
pArg
;

983  
p
->
cMode
 ){

984 
MODE_Löe
: {

985 
w
 = 5;

986 if–
azArg
==0 ) ;

987 
i
=0; i<
nArg
; i++){

988 
Àn
 = 
	`°æí30
(
azCﬁ
[
i
] ?ázCol[i] : "");

989 if–
Àn
>
w
 ) w =Üen;

991 if–
p
->
˙t
++>0 ) 
	`utf8_¥ötf
’->
out
, "%s",Ö->
rowSï¨©‹
);

992 
i
=0; i<
nArg
; i++){

993 
	`utf8_¥ötf
(
p
->
out
,"%*†%s%s", 
w
, 
azCﬁ
[
i
],

994 
azArg
[
i
] ?ázArg[i] : 
p
->
nuŒVÆue
,Ö->
rowSï¨©‹
);

998 
MODE_Ex∂aö
:

999 
MODE_Cﬁumn
: {

1000 c⁄° 
aEx∂aöWidths
[] = {4, 13, 4, 4, 4, 13, 2, 13};

1001 c⁄° *
cﬁWidth
;

1002 
showHdr
;

1003 *
rowSï
;

1004 if–
p
->
cMode
==
MODE_Cﬁumn
 ){

1005 
cﬁWidth
 = 
p
->colWidth;

1006 
showHdr
 = 
p
->
showHódî
;

1007 
rowSï
 = 
p
->
rowSï¨©‹
;

1009 
cﬁWidth
 = 
aEx∂aöWidths
;

1010 
showHdr
 = 1;

1011 
rowSï
 = 
SEP_Row
;

1013 if–
p
->
˙t
++==0 ){

1014 
i
=0; i<
nArg
; i++){

1015 
w
, 
n
;

1016 if–
i
<
	`AºaySize
(
p
->
cﬁWidth
) ){

1017 
w
 = 
cﬁWidth
[
i
];

1019 
w
 = 0;

1021 if–
w
==0 ){

1022 
w
 = 
	`°æí30
(
azCﬁ
[
i
] ?ázCol[i] : "");

1023 if–
w
<10 ) w = 10;

1024 
n
 = 
	`°æí30
(
azArg
 &&ázArg[
i
] ?ázArg[i] : 
p
->
nuŒVÆue
);

1025 if–
w
<
n
 ) w =Ç;

1027 if–
i
<
	`AºaySize
(
p
->
a˘uÆWidth
) ){

1028 
p
->
a˘uÆWidth
[
i
] = 
w
;

1030 if–
showHdr
 ){

1031 if–
w
<0 ){

1032 
	`utf8_¥ötf
(
p
->
out
,"%*.*s%s",-
w
,-w,
azCﬁ
[
i
],

1033 
i
==
nArg
-1 ? 
rowSï
 : " ");

1035 
	`utf8_¥ötf
(
p
->
out
,"%-*.*s%s",
w
,w,
azCﬁ
[
i
],

1036 
i
==
nArg
-1 ? 
rowSï
 : " ");

1040 if–
showHdr
 ){

1041 
i
=0; i<
nArg
; i++){

1042 
w
;

1043 if–
i
<
	`AºaySize
(
p
->
a˘uÆWidth
) ){

1044 
w
 = 
p
->
a˘uÆWidth
[
i
];

1045 if–
w
<0 ) w = -w;

1047 
w
 = 10;

1049 
	`utf8_¥ötf
(
p
->
out
,"%-*.*s%s",
w
,w,

1052 
i
==
nArg
-1 ? 
rowSï
 : " ");

1056 if–
azArg
==0 ) ;

1057 
i
=0; i<
nArg
; i++){

1058 
w
;

1059 if–
i
<
	`AºaySize
(
p
->
a˘uÆWidth
) ){

1060 
w
 = 
p
->
a˘uÆWidth
[
i
];

1062 
w
 = 10;

1064 if–
p
->
cMode
==
MODE_Ex∂aö
 && 
azArg
[
i
] && 
	`°æí30
◊zArg[i])>
w
 ){

1065 
w
 = 
	`°æí30
(
azArg
[
i
]);

1067 if–
i
==1 && 
p
->
aiIndít
 &&Ö->
pStmt
 ){

1068 if–
p
->
iIndít
<p->
nIndít
 ){

1069 
	`utf8_¥ötf
(
p
->
out
, "%*.s",Ö->
aiIndít
[p->
iIndít
], "");

1071 
p
->
iIndít
++;

1073 if–
w
<0 ){

1074 
	`utf8_¥ötf
(
p
->
out
,"%*.*s%s",-
w
,-w,

1075 
azArg
[
i
] ?ázArg[i] : 
p
->
nuŒVÆue
,

1076 
i
==
nArg
-1 ? 
rowSï
 : " ");

1078 
	`utf8_¥ötf
(
p
->
out
,"%-*.*s%s",
w
,w,

1079 
azArg
[
i
] ?ázArg[i] : 
p
->
nuŒVÆue
,

1080 
i
==
nArg
-1 ? 
rowSï
 : " ");

1085 
MODE_Semi
: {

1086 
	`¥ötSchemaLöe
(
p
->
out
, 
azArg
[0], ";\n");

1089 
MODE_Pªây
: {

1090 *
z
;

1091 
j
;

1092 
nP¨í
 = 0;

1093 
cEnd
 = 0;

1094 
c
;

1095 
nLöe
 = 0;

1096 
	`as£π
–
nArg
==1 );

1097 if–
azArg
[0]==0 ) ;

1098 if–
	`sqlôe3_°æike
("CREATE VIEW%", 
azArg
[0], 0)==0

1099 || 
	`sqlôe3_°æike
("CREATE TRIG%", 
azArg
[0], 0)==0

1101 
	`utf8_¥ötf
(
p
->
out
, "%s;\n", 
azArg
[0]);

1104 
z
 = 
	`sqlôe3_m¥ötf
("%s", 
azArg
[0]);

1105 
j
 = 0;

1106 
i
=0; 
	`IsS∑˚
(
z
[i]); i++){}

1107 ; (
c
 = 
z
[
i
])!=0; i++){

1108 if–
	`IsS∑˚
(
c
) ){

1109 if–
	`IsS∑˚
(
z
[
j
-1]) || z[j-1]=='(' ) ;

1110 }if–(
c
=='(' || c==')'Ë&& 
j
>0 && 
	`IsS∑˚
(
z
[j-1]) ){

1111 
j
--;

1113 
z
[
j
++] = 
c
;

1115  
j
>0 && 
	`IsS∑˚
(
z
[j-1]) ){ j--; }

1116 
z
[
j
] = 0;

1117 if–
	`°æí30
(
z
)>=79 ){

1118 
i
=
j
=0; (
c
 = 
z
[i])!=0; i++){

1119 if–
c
==
cEnd
 ){

1120 
cEnd
 = 0;

1121 }if–
c
=='"' || c=='\'' || c=='`' ){

1122 
cEnd
 = 
c
;

1123 }if–
c
=='[' ){

1124 
cEnd
 = ']';

1125 }if–
c
=='(' ){

1126 
nP¨í
++;

1127 }if–
c
==')' ){

1128 
nP¨í
--;

1129 if–
nLöe
>0 && 
nP¨í
==0 && 
j
>0 ){

1130 
	`¥ötSchemaLöeN
(
p
->
out
, 
z
, 
j
, "\n");

1131 
j
 = 0;

1134 
z
[
j
++] = 
c
;

1135 if–
nP¨í
==1 && (
c
=='(' || c==',' || c=='\n') ){

1136 if–
c
=='\n' ) 
j
--;

1137 
	`¥ötSchemaLöeN
(
p
->
out
, 
z
, 
j
, "\n ");

1138 
j
 = 0;

1139 
nLöe
++;

1140  
	`IsS∑˚
(
z
[
i
+1]) ){ i++; }

1143 
z
[
j
] = 0;

1145 
	`¥ötSchemaLöe
(
p
->
out
, 
z
, ";\n");

1146 
	`sqlôe3_‰ì
(
z
);

1149 
MODE_Li°
: {

1150 if–
p
->
˙t
++==0 &&Ö->
showHódî
 ){

1151 
i
=0; i<
nArg
; i++){

1152 
	`utf8_¥ötf
(
p
->
out
,"%s%s",
azCﬁ
[
i
],

1153 
i
==
nArg
-1 ? 
p
->
rowSï¨©‹
 :Ö->
cﬁSï¨©‹
);

1156 if–
azArg
==0 ) ;

1157 
i
=0; i<
nArg
; i++){

1158 *
z
 = 
azArg
[
i
];

1159 if–
z
==0 ) z = 
p
->
nuŒVÆue
;

1160 
	`utf8_¥ötf
(
p
->
out
, "%s", 
z
);

1161 if–
i
<
nArg
-1 ){

1162 
	`utf8_¥ötf
(
p
->
out
, "%s",Ö->
cﬁSï¨©‹
);

1164 
	`utf8_¥ötf
(
p
->
out
, "%s",Ö->
rowSï¨©‹
);

1169 
MODE_Html
: {

1170 if–
p
->
˙t
++==0 &&Ö->
showHódî
 ){

1171 
	`øw_¥ötf
(
p
->
out
,"<TR>");

1172 
i
=0; i<
nArg
; i++){

1173 
	`øw_¥ötf
(
p
->
out
,"<TH>");

1174 
	`ouçut_html_°rög
(
p
->
out
, 
azCﬁ
[
i
]);

1175 
	`øw_¥ötf
(
p
->
out
,"</TH>\n");

1177 
	`øw_¥ötf
(
p
->
out
,"</TR>\n");

1179 if–
azArg
==0 ) ;

1180 
	`øw_¥ötf
(
p
->
out
,"<TR>");

1181 
i
=0; i<
nArg
; i++){

1182 
	`øw_¥ötf
(
p
->
out
,"<TD>");

1183 
	`ouçut_html_°rög
(
p
->
out
, 
azArg
[
i
] ?ázArg[i] :Ö->
nuŒVÆue
);

1184 
	`øw_¥ötf
(
p
->
out
,"</TD>\n");

1186 
	`øw_¥ötf
(
p
->
out
,"</TR>\n");

1189 
MODE_T˛
: {

1190 if–
p
->
˙t
++==0 &&Ö->
showHódî
 ){

1191 
i
=0; i<
nArg
; i++){

1192 
	`ouçut_c_°rög
(
p
->
out
,
azCﬁ
[
i
] ?ázCol[i] : "");

1193 if(
i
<
nArg
-1Ë
	`utf8_¥ötf
(
p
->
out
, "%s",Ö->
cﬁSï¨©‹
);

1195 
	`utf8_¥ötf
(
p
->
out
, "%s",Ö->
rowSï¨©‹
);

1197 if–
azArg
==0 ) ;

1198 
i
=0; i<
nArg
; i++){

1199 
	`ouçut_c_°rög
(
p
->
out
, 
azArg
[
i
] ?ázArg[i] :Ö->
nuŒVÆue
);

1200 if(
i
<
nArg
-1Ë
	`utf8_¥ötf
(
p
->
out
, "%s",Ö->
cﬁSï¨©‹
);

1202 
	`utf8_¥ötf
(
p
->
out
, "%s",Ö->
rowSï¨©‹
);

1205 
MODE_Csv
: {

1206 
	`£tBö¨yMode
(
p
->
out
, 1);

1207 if–
p
->
˙t
++==0 &&Ö->
showHódî
 ){

1208 
i
=0; i<
nArg
; i++){

1209 
	`ouçut_csv
(
p
, 
azCﬁ
[
i
] ?ázCﬁ[i] : "", i<
nArg
-1);

1211 
	`utf8_¥ötf
(
p
->
out
, "%s",Ö->
rowSï¨©‹
);

1213 if–
nArg
>0 ){

1214 
i
=0; i<
nArg
; i++){

1215 
	`ouçut_csv
(
p
, 
azArg
[
i
], i<
nArg
-1);

1217 
	`utf8_¥ötf
(
p
->
out
, "%s",Ö->
rowSï¨©‹
);

1219 
	`£tTextMode
(
p
->
out
, 1);

1222 
MODE_QuŸe
:

1223 
MODE_In£π
: {

1224 if–
azArg
==0 ) ;

1225 if–
p
->
cMode
==
MODE_In£π
 ){

1226 
	`utf8_¥ötf
(
p
->
out
,"INSERT INTO %s",p->
zDe°TabÀ
);

1227 if–
p
->
showHódî
 ){

1228 
	`øw_¥ötf
(
p
->
out
,"(");

1229 
i
=0; i<
nArg
; i++){

1230 *
zSï
 = 
i
>0 ? ",": "";

1231 
	`utf8_¥ötf
(
p
->
out
, "%s%s", 
zSï
, 
azCﬁ
[
i
]);

1233 
	`øw_¥ötf
(
p
->
out
,")");

1235 
	`øw_¥ötf
(
p
->
out
," VALUES(");

1236 }if–
p
->
˙t
==0 &&Ö->
showHódî
 ){

1237 
i
=0; i<
nArg
; i++){

1238 if–
i
>0 ) 
	`øw_¥ötf
(
p
->
out
, ",");

1239 
	`ouçut_quŸed_°rög
(
p
->
out
, 
azCﬁ
[
i
]);

1241 
	`øw_¥ötf
(
p
->
out
,"\n");

1243 
p
->
˙t
++;

1244 
i
=0; i<
nArg
; i++){

1245 *
zSï
 = 
i
>0 ? ",": "";

1246 if–(
azArg
[
i
]==0Ë|| (
aiTy≥
 &&áiTy≥[i]==
SQLITE_NULL
) ){

1247 
	`utf8_¥ötf
(
p
->
out
,"%sNULL",
zSï
);

1248 }if–
aiTy≥
 &&áiTy≥[
i
]==
SQLITE_TEXT
 ){

1249 if–
zSï
[0] ) 
	`utf8_¥ötf
(
p
->
out
,"%s",zSep);

1250 
	`ouçut_quŸed_°rög
(
p
->
out
, 
azArg
[
i
]);

1251 }if–
aiTy≥
 && (aiTy≥[
i
]==
SQLITE_INTEGER


1252 || 
aiTy≥
[
i
]==
SQLITE_FLOAT
) ){

1253 
	`utf8_¥ötf
(
p
->
out
,"%s%s",
zSï
, 
azArg
[
i
]);

1254 }if–
aiTy≥
 &&áiTy≥[
i
]==
SQLITE_BLOB
 && 
p
->
pStmt
 ){

1255 c⁄° *
pBlob
 = 
	`sqlôe3_cﬁumn_blob
(
p
->
pStmt
, 
i
);

1256 
nBlob
 = 
	`sqlôe3_cﬁumn_byãs
(
p
->
pStmt
, 
i
);

1257 if–
zSï
[0] ) 
	`utf8_¥ötf
(
p
->
out
,"%s",zSep);

1258 
	`ouçut_hex_blob
(
p
->
out
, 
pBlob
, 
nBlob
);

1259 }if–
	`isNumbî
(
azArg
[
i
], 0) ){

1260 
	`utf8_¥ötf
(
p
->
out
,"%s%s",
zSï
, 
azArg
[
i
]);

1262 if–
zSï
[0] ) 
	`utf8_¥ötf
(
p
->
out
,"%s",zSep);

1263 
	`ouçut_quŸed_°rög
(
p
->
out
, 
azArg
[
i
]);

1266 
	`øw_¥ötf
(
p
->
out
,p->
cMode
==
MODE_QuŸe
?"\n":");\n");

1269 
MODE_Ascii
: {

1270 if–
p
->
˙t
++==0 &&Ö->
showHódî
 ){

1271 
i
=0; i<
nArg
; i++){

1272 if–
i
>0 ) 
	`utf8_¥ötf
(
p
->
out
, "%s",Ö->
cﬁSï¨©‹
);

1273 
	`utf8_¥ötf
(
p
->
out
,"%s",
azCﬁ
[
i
] ?ázCol[i] : "");

1275 
	`utf8_¥ötf
(
p
->
out
, "%s",Ö->
rowSï¨©‹
);

1277 if–
azArg
==0 ) ;

1278 
i
=0; i<
nArg
; i++){

1279 if–
i
>0 ) 
	`utf8_¥ötf
(
p
->
out
, "%s",Ö->
cﬁSï¨©‹
);

1280 
	`utf8_¥ötf
(
p
->
out
,"%s",
azArg
[
i
] ?ázArg[i] :Ö->
nuŒVÆue
);

1282 
	`utf8_¥ötf
(
p
->
out
, "%s",Ö->
rowSï¨©‹
);

1287 
	}
}

1293 
	$ˇŒback
(*
pArg
, 
nArg
, **
azArg
, **
azCﬁ
){

1295  
	`shñl_ˇŒback
(
pArg
, 
nArg
, 
azArg
, 
azCﬁ
, 
NULL
);

1296 
	}
}

1303 
	$£t_èbÀ_«me
(
ShñlSèã
 *
p
, c⁄° *
zName
){

1304 
i
, 
n
;

1305 
√edQuŸe
;

1306 *
z
;

1308 if–
p
->
zDe°TabÀ
 ){

1309 
	`‰ì
(
p
->
zDe°TabÀ
);

1310 
p
->
zDe°TabÀ
 = 0;

1312 if–
zName
==0 ) ;

1313 
√edQuŸe
 = !
	`ißÕha
(()*
zName
) && *zName!='_';

1314 
i
=
n
=0; 
zName
[i]; i++,Ç++){

1315 if–!
	`iß um
(()
zName
[
i
]) && zName[i]!='_' ){

1316 
√edQuŸe
 = 1;

1317 if–
zName
[
i
]=='\'' ) 
n
++;

1320 if–
√edQuŸe
 ) 
n
 += 2;

1321 
z
 = 
p
->
zDe°TabÀ
 = 
	`mÆloc
–
n
+1 );

1322 if–
z
==0 ){

1323 
	`øw_¥ötf
(
°dîr
,"Error: out of memory\n");

1324 
	`exô
(1);

1326 
n
 = 0;

1327 if–
√edQuŸe
 ) 
z
[
n
++] = '\'';

1328 
i
=0; 
zName
[i]; i++){

1329 
z
[
n
++] = 
zName
[
i
];

1330 if–
zName
[
i
]=='\'' ) 
z
[
n
++] = '\'';

1332 if–
√edQuŸe
 ) 
z
[
n
++] = '\'';

1333 
z
[
n
] = 0;

1334 
	}
}

1344 *
	$≠≥ndText
(*
zIn
, c⁄° *
zAµíd
, 
quŸe
){

1345 
Àn
;

1346 
i
;

1347 
nAµíd
 = 
	`°æí30
(
zAµíd
);

1348 
nIn
 = (
zIn
?
	`°æí30
(zIn):0);

1350 
Àn
 = 
nAµíd
+
nIn
+1;

1351 if–
quŸe
 ){

1352 
Àn
 += 2;

1353 
i
=0; i<
nAµíd
; i++){

1354 if–
zAµíd
[
i
]==
quŸe
 ) 
Àn
++;

1358 
zIn
 = (*)
	`ªÆloc
(zIn, 
Àn
);

1359 if–!
zIn
 ){

1363 if–
quŸe
 ){

1364 *
zC§
 = &
zIn
[
nIn
];

1365 *
zC§
++ = 
quŸe
;

1366 
i
=0; i<
nAµíd
; i++){

1367 *
zC§
++ = 
zAµíd
[
i
];

1368 if–
zAµíd
[
i
]==
quŸe
 ) *
zC§
++ = quote;

1370 *
zC§
++ = 
quŸe
;

1371 *
zC§
++ = '\0';

1372 
	`as£π
–(
zC§
-
zIn
)==
Àn
 );

1374 
	`mem˝y
(&
zIn
[
nIn
], 
zAµíd
, 
nAµíd
);

1375 
zIn
[
Àn
-1] = '\0';

1378  
zIn
;

1379 
	}
}

1392 
	$run_èbÀ_dump_quîy
(

1393 
ShñlSèã
 *
p
,

1394 c⁄° *
zSñe˘
,

1395 c⁄° *
zFú°Row


1397 
sqlôe3_°mt
 *
pSñe˘
;

1398 
rc
;

1399 
nResu…
;

1400 
i
;

1401 c⁄° *
z
;

1402 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
p
->
db
, 
zSñe˘
, -1, &
pSñe˘
, 0);

1403 if–
rc
!=
SQLITE_OK
 || !
pSñe˘
 ){

1404 
	`utf8_¥ötf
(
p
->
out
, "/**** ERROR: (%dË%†*****/\n", 
rc
,

1405 
	`sqlôe3_îrmsg
(
p
->
db
));

1406 if–(
rc
&0xff)!=
SQLITE_CORRUPT
 ) 
p
->
nEº
++;

1407  
rc
;

1409 
rc
 = 
	`sqlôe3_°ï
(
pSñe˘
);

1410 
nResu…
 = 
	`sqlôe3_cﬁumn_cou¡
(
pSñe˘
);

1411  
rc
==
SQLITE_ROW
 ){

1412 if–
zFú°Row
 ){

1413 
	`utf8_¥ötf
(
p
->
out
, "%s", 
zFú°Row
);

1414 
zFú°Row
 = 0;

1416 
z
 = (c⁄° *)
	`sqlôe3_cﬁumn_ãxt
(
pSñe˘
, 0);

1417 
	`utf8_¥ötf
(
p
->
out
, "%s", 
z
);

1418 
i
=1; i<
nResu…
; i++){

1419 
	`utf8_¥ötf
(
p
->
out
, ",%s", 
	`sqlôe3_cﬁumn_ãxt
(
pSñe˘
, 
i
));

1421 if–
z
==0 ) z = "";

1422  
z
[0] && (z[0]!='-' || z[1]!='-') ) z++;

1423 if–
z
[0] ){

1424 
	`øw_¥ötf
(
p
->
out
, "\n;\n");

1426 
	`øw_¥ötf
(
p
->
out
, ";\n");

1428 
rc
 = 
	`sqlôe3_°ï
(
pSñe˘
);

1430 
rc
 = 
	`sqlôe3_föÆize
(
pSñe˘
);

1431 if–
rc
!=
SQLITE_OK
 ){

1432 
	`utf8_¥ötf
(
p
->
out
, "/**** ERROR: (%dË%†*****/\n", 
rc
,

1433 
	`sqlôe3_îrmsg
(
p
->
db
));

1434 if–(
rc
&0xff)!=
SQLITE_CORRUPT
 ) 
p
->
nEº
++;

1436  
rc
;

1437 
	}
}

1442 *
	$ßve_îr_msg
(

1443 
sqlôe3
 *
db


1445 
nEºMsg
 = 1+
	`°æí30
(
	`sqlôe3_îrmsg
(
db
));

1446 *
zEºMsg
 = 
	`sqlôe3_mÆloc64
(
nEºMsg
);

1447 if–
zEºMsg
 ){

1448 
	`mem˝y
(
zEºMsg
, 
	`sqlôe3_îrmsg
(
db
), 
nEºMsg
);

1450  
zEºMsg
;

1451 
	}
}

1453 #ifde‡
__löux__


1457 
	$di•œyLöuxIoSèts
(
FILE
 *
out
){

1458 
FILE
 *
ö
;

1459 
z
[200];

1460 
	`sqlôe3_¢¥ötf
((
z
), z, "/¥oc/%d/io", 
	`gëpid
());

1461 
ö
 = 
	`f›í
(
z
, "rb");

1462 if–
ö
==0 ) ;

1463  
	`fgës
(
z
, (z), 
ö
)!=0 ){

1465 c⁄° *
zP©ã∫
;

1466 c⁄° *
zDesc
;

1467 } 
aTøns
[] = {

1476 
i
;

1477 
i
=0; i<
	`AºaySize
(
aTøns
); i++){

1478 
n
 = ()
	`°æí
(
aTøns
[
i
].
zP©ã∫
);

1479 if–
	`°∫cmp
(
aTøns
[
i
].
zP©ã∫
, 
z
, 
n
)==0 ){

1480 
	`utf8_¥ötf
(
out
, "%-36†%s", 
aTøns
[
i
].
zDesc
, &
z
[
n
]);

1485 
	`f˛o£
(
ö
);

1486 
	}
}

1493 
	$di•œy_°©s
(

1494 
sqlôe3
 *
db
,

1495 
ShñlSèã
 *
pArg
,

1496 
bRe£t


1498 
iCur
;

1499 
iHiwå
;

1501 if–
pArg
 &&ÖArg->
out
 ){

1503 
iHiwå
 = 
iCur
 = -1;

1504 
	`sqlôe3_°©us
(
SQLITE_STATUS_MEMORY_USED
, &
iCur
, &
iHiwå
, 
bRe£t
);

1505 
	`øw_¥ötf
(
pArg
->
out
,

1507 
iCur
, 
iHiwå
);

1508 
iHiwå
 = 
iCur
 = -1;

1509 
	`sqlôe3_°©us
(
SQLITE_STATUS_MALLOC_COUNT
, &
iCur
, &
iHiwå
, 
bRe£t
);

1510 
	`øw_¥ötf
(
pArg
->
out
, "Number of Outstanding Allocations: %d (max %d)\n",

1511 
iCur
, 
iHiwå
);

1512 if–
pArg
->
shñlFlgs
 & 
SHFLG_Pageˇche
 ){

1513 
iHiwå
 = 
iCur
 = -1;

1514 
	`sqlôe3_°©us
(
SQLITE_STATUS_PAGECACHE_USED
, &
iCur
, &
iHiwå
, 
bRe£t
);

1515 
	`øw_¥ötf
(
pArg
->
out
,

1517 
iCur
, 
iHiwå
);

1519 
iHiwå
 = 
iCur
 = -1;

1520 
	`sqlôe3_°©us
(
SQLITE_STATUS_PAGECACHE_OVERFLOW
, &
iCur
, &
iHiwå
, 
bRe£t
);

1521 
	`øw_¥ötf
(
pArg
->
out
,

1523 
iCur
, 
iHiwå
);

1524 if–
pArg
->
shñlFlgs
 & 
SHFLG_S¸©ch
 ){

1525 
iHiwå
 = 
iCur
 = -1;

1526 
	`sqlôe3_°©us
(
SQLITE_STATUS_SCRATCH_USED
, &
iCur
, &
iHiwå
, 
bRe£t
);

1527 
	`øw_¥ötf
(
pArg
->
out
,

1529 
iCur
, 
iHiwå
);

1531 
iHiwå
 = 
iCur
 = -1;

1532 
	`sqlôe3_°©us
(
SQLITE_STATUS_SCRATCH_OVERFLOW
, &
iCur
, &
iHiwå
, 
bRe£t
);

1533 
	`øw_¥ötf
(
pArg
->
out
,

1535 
iCur
, 
iHiwå
);

1536 
iHiwå
 = 
iCur
 = -1;

1537 
	`sqlôe3_°©us
(
SQLITE_STATUS_MALLOC_SIZE
, &
iCur
, &
iHiwå
, 
bRe£t
);

1538 
	`øw_¥ötf
(
pArg
->
out
, "Largest Allocation: %d bytes\n",

1539 
iHiwå
);

1540 
iHiwå
 = 
iCur
 = -1;

1541 
	`sqlôe3_°©us
(
SQLITE_STATUS_PAGECACHE_SIZE
, &
iCur
, &
iHiwå
, 
bRe£t
);

1542 
	`øw_¥ötf
(
pArg
->
out
, "Largest Pcache Allocation: %d bytes\n",

1543 
iHiwå
);

1544 
iHiwå
 = 
iCur
 = -1;

1545 
	`sqlôe3_°©us
(
SQLITE_STATUS_SCRATCH_SIZE
, &
iCur
, &
iHiwå
, 
bRe£t
);

1546 
	`øw_¥ötf
(
pArg
->
out
, "Largest Scratch Allocation: %d bytes\n",

1547 
iHiwå
);

1548 #ifde‡
YYTRACKMAXSTACKDEPTH


1549 
iHiwå
 = 
iCur
 = -1;

1550 
	`sqlôe3_°©us
(
SQLITE_STATUS_PARSER_STACK
, &
iCur
, &
iHiwå
, 
bRe£t
);

1551 
	`øw_¥ötf
(
pArg
->
out
, "Deepest Parser Stack: %d (max %d)\n",

1552 
iCur
, 
iHiwå
);

1556 if–
pArg
 &&ÖArg->
out
 && 
db
 ){

1557 if–
pArg
->
shñlFlgs
 & 
SHFLG_Lookaside
 ){

1558 
iHiwå
 = 
iCur
 = -1;

1559 
	`sqlôe3_db_°©us
(
db
, 
SQLITE_DBSTATUS_LOOKASIDE_USED
,

1560 &
iCur
, &
iHiwå
, 
bRe£t
);

1561 
	`øw_¥ötf
(
pArg
->
out
,

1563 
iCur
, 
iHiwå
);

1564 
	`sqlôe3_db_°©us
(
db
, 
SQLITE_DBSTATUS_LOOKASIDE_HIT
,

1565 &
iCur
, &
iHiwå
, 
bRe£t
);

1566 
	`øw_¥ötf
(
pArg
->
out
, "SuccessfulÜookasideáttempts: %d\n",

1567 
iHiwå
);

1568 
	`sqlôe3_db_°©us
(
db
, 
SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE
,

1569 &
iCur
, &
iHiwå
, 
bRe£t
);

1570 
	`øw_¥ötf
(
pArg
->
out
, "Lookaside failures dueÅo size: %d\n",

1571 
iHiwå
);

1572 
	`sqlôe3_db_°©us
(
db
, 
SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL
,

1573 &
iCur
, &
iHiwå
, 
bRe£t
);

1574 
	`øw_¥ötf
(
pArg
->
out
, "Lookaside failures dueÅo OOM: %d\n",

1575 
iHiwå
);

1577 
iHiwå
 = 
iCur
 = -1;

1578 
	`sqlôe3_db_°©us
(
db
, 
SQLITE_DBSTATUS_CACHE_USED
, &
iCur
, &
iHiwå
, 
bRe£t
);

1579 
	`øw_¥ötf
(
pArg
->
out
, "Pager Heap Usage: %d bytes\n",

1580 
iCur
);

1581 
iHiwå
 = 
iCur
 = -1;

1582 
	`sqlôe3_db_°©us
(
db
, 
SQLITE_DBSTATUS_CACHE_HIT
, &
iCur
, &
iHiwå
, 1);

1583 
	`øw_¥ötf
(
pArg
->
out
, "Pagêˇchêhôs: %d\n", 
iCur
);

1584 
iHiwå
 = 
iCur
 = -1;

1585 
	`sqlôe3_db_°©us
(
db
, 
SQLITE_DBSTATUS_CACHE_MISS
, &
iCur
, &
iHiwå
, 1);

1586 
	`øw_¥ötf
(
pArg
->
out
, "Pagêˇchêmis£s: %d\n", 
iCur
);

1587 
iHiwå
 = 
iCur
 = -1;

1588 
	`sqlôe3_db_°©us
(
db
, 
SQLITE_DBSTATUS_CACHE_WRITE
, &
iCur
, &
iHiwå
, 1);

1589 
	`øw_¥ötf
(
pArg
->
out
, "Pagêˇchêwrôes: %d\n", 
iCur
);

1590 
iHiwå
 = 
iCur
 = -1;

1591 
	`sqlôe3_db_°©us
(
db
, 
SQLITE_DBSTATUS_SCHEMA_USED
, &
iCur
, &
iHiwå
, 
bRe£t
);

1592 
	`øw_¥ötf
(
pArg
->
out
, "Schema Heap Usage: %d bytes\n",

1593 
iCur
);

1594 
iHiwå
 = 
iCur
 = -1;

1595 
	`sqlôe3_db_°©us
(
db
, 
SQLITE_DBSTATUS_STMT_USED
, &
iCur
, &
iHiwå
, 
bRe£t
);

1596 
	`øw_¥ötf
(
pArg
->
out
, "Statement Heap/Lookaside Usage: %d bytes\n",

1597 
iCur
);

1600 if–
pArg
 &&ÖArg->
out
 && 
db
 &&ÖArg->
pStmt
 ){

1601 
iCur
 = 
	`sqlôe3_°mt_°©us
(
pArg
->
pStmt
, 
SQLITE_STMTSTATUS_FULLSCAN_STEP
,

1602 
bRe£t
);

1603 
	`øw_¥ötf
(
pArg
->
out
, "FuŒsˇ¿Sãps: %d\n", 
iCur
);

1604 
iCur
 = 
	`sqlôe3_°mt_°©us
(
pArg
->
pStmt
, 
SQLITE_STMTSTATUS_SORT
, 
bRe£t
);

1605 
	`øw_¥ötf
(
pArg
->
out
, "S‹àO≥øti⁄s: %d\n", 
iCur
);

1606 
iCur
 = 
	`sqlôe3_°mt_°©us
(
pArg
->
pStmt
, 
SQLITE_STMTSTATUS_AUTOINDEX
,
bRe£t
);

1607 
	`øw_¥ötf
(
pArg
->
out
, "Autoödex In£πs: %d\n", 
iCur
);

1608 
iCur
 = 
	`sqlôe3_°mt_°©us
(
pArg
->
pStmt
, 
SQLITE_STMTSTATUS_VM_STEP
, 
bRe£t
);

1609 
	`øw_¥ötf
(
pArg
->
out
, "VútuÆ MachöêSãps: %d\n", 
iCur
);

1612 #ifde‡
__löux__


1613 
	`di•œyLöuxIoSèts
(
pArg
->
out
);

1619 
	}
}

1624 
	$di•œy_sˇn°©s
(

1625 
sqlôe3
 *
db
,

1626 
ShñlSèã
 *
pArg


1628 #i‚de‡
SQLITE_ENABLE_STMT_SCANSTATUS


1629 
	`UNUSED_PARAMETER
(
db
);

1630 
	`UNUSED_PARAMETER
(
pArg
);

1632 
i
, 
k
, 
n
, 
mx
;

1633 
	`øw_¥ötf
(
pArg
->
out
, "-------- scanstats --------\n");

1634 
mx
 = 0;

1635 
k
=0; k<=
mx
; k++){

1636 
rE°Lo›
 = 1.0;

1637 
i
=
n
=0; 1; i++){

1638 
sqlôe3_°mt
 *
p
 = 
pArg
->
pStmt
;

1639 
sqlôe3_öt64
 
nLo›
, 
nVisô
;

1640 
rE°
;

1641 
iSid
;

1642 c⁄° *
zEx∂aö
;

1643 if–
	`sqlôe3_°mt_sˇn°©us
(
p
, 
i
, 
SQLITE_SCANSTAT_NLOOP
, (*)&
nLo›
) ){

1646 
	`sqlôe3_°mt_sˇn°©us
(
p
, 
i
, 
SQLITE_SCANSTAT_SELECTID
, (*)&
iSid
);

1647 if–
iSid
>
mx
 ) mx = iSid;

1648 if–
iSid
!=
k
 ) ;

1649 if–
n
==0 ){

1650 
rE°Lo›
 = ()
nLo›
;

1651 if–
k
>0 ) 
	`øw_¥ötf
(
pArg
->
out
, "-------- subquery %d -------\n", k);

1653 
n
++;

1654 
	`sqlôe3_°mt_sˇn°©us
(
p
, 
i
, 
SQLITE_SCANSTAT_NVISIT
, (*)&
nVisô
);

1655 
	`sqlôe3_°mt_sˇn°©us
(
p
, 
i
, 
SQLITE_SCANSTAT_EST
, (*)&
rE°
);

1656 
	`sqlôe3_°mt_sˇn°©us
(
p
, 
i
, 
SQLITE_SCANSTAT_EXPLAIN
, (*)&
zEx∂aö
);

1657 
	`utf8_¥ötf
(
pArg
->
out
, "Lo› %2d: %s\n", 
n
, 
zEx∂aö
);

1658 
rE°Lo›
 *
rE°
;

1659 
	`øw_¥ötf
(
pArg
->
out
,

1661 
nLo›
, 
nVisô
, (
sqlôe3_öt64
)(
rE°Lo›
+0.5), 
rE°


1665 
	`øw_¥ötf
(
pArg
->
out
, "---------------------------\n");

1667 
	}
}

1675 
	$°r_ö_¨øy
(c⁄° *
zSå
, c⁄° **
azAºay
){

1676 
i
;

1677 
i
=0; 
azAºay
[i]; i++){

1678 if–0==
	`°rcmp
(
zSå
, 
azAºay
[
i
]) )  1;

1681 
	}
}

1701 
	$ex∂aö_d©a_¥ï¨e
(
ShñlSèã
 *
p
, 
sqlôe3_°mt
 *
pSql
){

1702 c⁄° *
zSql
;

1703 c⁄° *
z
;

1704 *
abYõld
 = 0;

1705 
nAŒoc
 = 0;

1706 
iOp
;

1708 c⁄° *
azNext
[] = { "Next", "Prev", "VPrev", "VNext", "SorterNext",

1710 c⁄° *
azYõld
[] = { "Yield", "SeekLT", "SeekGT", "RowSetRead",

1712 c⁄° *
azGŸo
[] = { "Goto", 0 };

1716 if–
	`sqlôe3_cﬁumn_cou¡
(
pSql
)!=8 ){

1717 
p
->
cMode
 =Ö->
mode
;

1720 
zSql
 = 
	`sqlôe3_sql
(
pSql
);

1721 if–
zSql
==0 ) ;

1722 
z
=
zSql
; *z==' ' || *z=='\t' || *z=='\n' || *z=='\f' || *z=='\r'; z++);

1723 if–
	`sqlôe3_°∫icmp
(
z
, "explain", 7) ){

1724 
p
->
cMode
 =Ö->
mode
;

1728 
iOp
=0; 
SQLITE_ROW
==
	`sqlôe3_°ï
(
pSql
); iOp++){

1729 
i
;

1730 
iAddr
 = 
	`sqlôe3_cﬁumn_öt
(
pSql
, 0);

1731 c⁄° *
zOp
 = (c⁄° *)
	`sqlôe3_cﬁumn_ãxt
(
pSql
, 1);

1738 
p2
 = 
	`sqlôe3_cﬁumn_öt
(
pSql
, 3);

1739 
p2›
 = (
p2
 + (
iOp
-
iAddr
));

1742 if–
iOp
>=
nAŒoc
 ){

1743 if–
iOp
==0 ){

1746 c⁄° *
ex∂aöCﬁs
[] = {

1748 
jj
;

1749 
jj
=0; jj<
	`AºaySize
(
ex∂aöCﬁs
); jj++){

1750 if–
	`°rcmp
(
	`sqlôe3_cﬁumn_«me
(
pSql
,
jj
),
ex∂aöCﬁs
[jj])!=0 ){

1751 
p
->
cMode
 =Ö->
mode
;

1752 
	`sqlôe3_ª£t
(
pSql
);

1757 
nAŒoc
 += 100;

1758 
p
->
aiIndít
 = (*)
	`sqlôe3_ªÆloc64
’->aiIndít, 
nAŒoc
*());

1759 
abYõld
 = (*)
	`sqlôe3_ªÆloc64
◊bYõld, 
nAŒoc
*());

1761 
abYõld
[
iOp
] = 
	`°r_ö_¨øy
(
zOp
, 
azYõld
);

1762 
p
->
aiIndít
[
iOp
] = 0;

1763 
p
->
nIndít
 = 
iOp
+1;

1765 if–
	`°r_ö_¨øy
(
zOp
, 
azNext
) ){

1766 
i
=
p2›
; i<
iOp
; i++Ë
p
->
aiIndít
[i] += 2;

1768 if–
	`°r_ö_¨øy
(
zOp
, 
azGŸo
Ë&& 
p2›
<
p
->
nIndít


1769 && (
abYõld
[
p2›
] || 
	`sqlôe3_cﬁumn_öt
(
pSql
, 2))

1771 
i
=
p2›
; i<
iOp
; i++Ë
p
->
aiIndít
[i] += 2;

1775 
p
->
iIndít
 = 0;

1776 
	`sqlôe3_‰ì
(
abYõld
);

1777 
	`sqlôe3_ª£t
(
pSql
);

1778 
	}
}

1783 
	$ex∂aö_d©a_dñëe
(
ShñlSèã
 *
p
){

1784 
	`sqlôe3_‰ì
(
p
->
aiIndít
);

1785 
p
->
aiIndít
 = 0;

1786 
p
->
nIndít
 = 0;

1787 
p
->
iIndít
 = 0;

1788 
	}
}

1793 #i‡
deföed
(
SQLITE_DEBUG
Ë&& deföed(
SQLITE_ENABLE_SELECTTRACE
)

1794 
sqlôe3Sñe˘Tø˚
;

1795 
	gßvedSñe˘Tø˚
;

1797 #i‡
deföed
(
SQLITE_DEBUG
Ë&& deföed(
SQLITE_ENABLE_WHERETRACE
)

1798 
sqlôe3WhîeTø˚
;

1799 
	gßvedWhîeTø˚
;

1801 
	$dißbÀ_debug_åa˚_modes
(){

1802 #i‡
	`deföed
(
SQLITE_DEBUG
Ë&& deföed(
SQLITE_ENABLE_SELECTTRACE
)

1803 
ßvedSñe˘Tø˚
 = 
sqlôe3Sñe˘Tø˚
;

1804 
sqlôe3Sñe˘Tø˚
 = 0;

1806 #i‡
	`deföed
(
SQLITE_DEBUG
Ë&& deföed(
SQLITE_ENABLE_WHERETRACE
)

1807 
ßvedWhîeTø˚
 = 
sqlôe3WhîeTø˚
;

1808 
sqlôe3WhîeTø˚
 = 0;

1810 
	}
}

1811 
	$ª°‹e_debug_åa˚_modes
(){

1812 #i‡
	`deföed
(
SQLITE_DEBUG
Ë&& deföed(
SQLITE_ENABLE_SELECTTRACE
)

1813 
sqlôe3Sñe˘Tø˚
 = 
ßvedSñe˘Tø˚
;

1815 #i‡
	`deföed
(
SQLITE_DEBUG
Ë&& deföed(
SQLITE_ENABLE_WHERETRACE
)

1816 
sqlôe3WhîeTø˚
 = 
ßvedWhîeTø˚
;

1818 
	}
}

1823 
	$exec_¥ï¨ed_°mt
(

1824 
ShñlSèã
 *
pArg
,

1825 
sqlôe3_°mt
 *
pStmt
,

1826 (*
xCÆlback
)(*,,**,**,*)

1828 
rc
;

1833 
rc
 = 
	`sqlôe3_°ï
(
pStmt
);

1835 if–
SQLITE_ROW
 =
rc
 ){

1837 if–
xCÆlback
 ){

1839 
nCﬁ
 = 
	`sqlôe3_cﬁumn_cou¡
(
pStmt
);

1840 *
pD©a
 = 
	`sqlôe3_mÆloc64
(3*
nCﬁ
*(const *) + 1);

1841 if–!
pD©a
 ){

1842 
rc
 = 
SQLITE_NOMEM
;

1844 **
azCﬁs
 = (**)
pD©a
;

1845 **
azVÆs
 = &
azCﬁs
[
nCﬁ
];

1846 *
aiTy≥s
 = (*)&
azVÆs
[
nCﬁ
];

1847 
i
, 
x
;

1848 
	`as£π
(() <= (*));

1850 
i
=0; i<
nCﬁ
; i++){

1851 
azCﬁs
[
i
] = (*)
	`sqlôe3_cﬁumn_«me
(
pStmt
, i);

1855 
i
=0; i<
nCﬁ
; i++){

1856 
aiTy≥s
[
i
] = 
x
 = 
	`sqlôe3_cﬁumn_ty≥
(
pStmt
, i);

1857 if–
x
==
SQLITE_BLOB
 && 
pArg
 &&ÖArg->
cMode
==
MODE_In£π
 ){

1858 
azVÆs
[
i
] = "";

1860 
azVÆs
[
i
] = (*)
	`sqlôe3_cﬁumn_ãxt
(
pStmt
, i);

1862 if–!
azVÆs
[
i
] && (
aiTy≥s
[i]!=
SQLITE_NULL
) ){

1863 
rc
 = 
SQLITE_NOMEM
;

1869 if–
SQLITE_ROW
 =
rc
 ){

1871 if–
	`xCÆlback
(
pArg
, 
nCﬁ
, 
azVÆs
, 
azCﬁs
, 
aiTy≥s
) ){

1872 
rc
 = 
SQLITE_ABORT
;

1874 
rc
 = 
	`sqlôe3_°ï
(
pStmt
);

1877 }  
SQLITE_ROW
 =
rc
 );

1878 
	`sqlôe3_‰ì
(
pD©a
);

1882 
rc
 = 
	`sqlôe3_°ï
(
pStmt
);

1883 }  
rc
 =
SQLITE_ROW
 );

1886 
	}
}

1897 
	$shñl_exec
(

1898 
sqlôe3
 *
db
,

1899 c⁄° *
zSql
,

1900 (*
xCÆlback
)(*,,**,**,*),

1902 
ShñlSèã
 *
pArg
,

1903 **
pzEºMsg


1905 
sqlôe3_°mt
 *
pStmt
 = 
NULL
;

1906 
rc
 = 
SQLITE_OK
;

1907 
rc2
;

1908 c⁄° *
zLe·ovî
;

1910 if–
pzEºMsg
 ){

1911 *
pzEºMsg
 = 
NULL
;

1914  
zSql
[0] && (
SQLITE_OK
 =
rc
) ){

1915 c⁄° *
zStmtSql
;

1916 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
db
, 
zSql
, -1, &
pStmt
, &
zLe·ovî
);

1917 if–
SQLITE_OK
 !
rc
 ){

1918 if–
pzEºMsg
 ){

1919 *
pzEºMsg
 = 
	`ßve_îr_msg
(
db
);

1922 if–!
pStmt
 ){

1924 
zSql
 = 
zLe·ovî
;

1925  
	`IsS∑˚
(
zSql
[0]) ) zSql++;

1928 
zStmtSql
 = 
	`sqlôe3_sql
(
pStmt
);

1929 if–
zStmtSql
==0 ) zStmtSql = "";

1930  
	`IsS∑˚
(
zStmtSql
[0]) ) zStmtSql++;

1933 if–
pArg
 ){

1934 
pArg
->
pStmt
 =ÖStmt;

1935 
pArg
->
˙t
 = 0;

1939 if–
pArg
 &&ÖArg->
echoOn
 ){

1940 
	`utf8_¥ötf
(
pArg
->
out
, "%s\n", 
zStmtSql
 ? zStmtSq»: 
zSql
);

1944 if–
pArg
 &&ÖArg->
autoEQP
 && 
	`sqlôe3_°æike
("EXPLAIN%",
zStmtSql
,0)!=0 ){

1945 
sqlôe3_°mt
 *
pEx∂aö
;

1946 *
zEQP
;

1947 
	`dißbÀ_debug_åa˚_modes
();

1948 
zEQP
 = 
	`sqlôe3_m¥ötf
("EXPLAIN QUERY PLAN %s", 
zStmtSql
);

1949 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
db
, 
zEQP
, -1, &
pEx∂aö
, 0);

1950 if–
rc
==
SQLITE_OK
 ){

1951  
	`sqlôe3_°ï
(
pEx∂aö
)==
SQLITE_ROW
 ){

1952 
	`øw_¥ötf
(
pArg
->
out
,"--EQP-- %d,",
	`sqlôe3_cﬁumn_öt
(
pEx∂aö
, 0));

1953 
	`øw_¥ötf
(
pArg
->
out
,"%d,", 
	`sqlôe3_cﬁumn_öt
(
pEx∂aö
, 1));

1954 
	`øw_¥ötf
(
pArg
->
out
,"%d,", 
	`sqlôe3_cﬁumn_öt
(
pEx∂aö
, 2));

1955 
	`utf8_¥ötf
(
pArg
->
out
,"%s\n", 
	`sqlôe3_cﬁumn_ãxt
(
pEx∂aö
, 3));

1958 
	`sqlôe3_föÆize
(
pEx∂aö
);

1959 
	`sqlôe3_‰ì
(
zEQP
);

1960 if–
pArg
->
autoEQP
>=2 ){

1962 
zEQP
 = 
	`sqlôe3_m¥ötf
("EXPLAIN %s", 
zStmtSql
);

1963 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
db
, 
zEQP
, -1, &
pEx∂aö
, 0);

1964 if–
rc
==
SQLITE_OK
 ){

1965 
pArg
->
cMode
 = 
MODE_Ex∂aö
;

1966 
	`ex∂aö_d©a_¥ï¨e
(
pArg
, 
pEx∂aö
);

1967 
	`exec_¥ï¨ed_°mt
(
pArg
, 
pEx∂aö
, 
xCÆlback
);

1968 
	`ex∂aö_d©a_dñëe
(
pArg
);

1970 
	`sqlôe3_föÆize
(
pEx∂aö
);

1971 
	`sqlôe3_‰ì
(
zEQP
);

1973 
	`ª°‹e_debug_åa˚_modes
();

1976 if–
pArg
 ){

1977 
pArg
->
cMode
 =ÖArg->
mode
;

1978 if–
pArg
->
autoEx∂aö


1979 && 
	`sqlôe3_cﬁumn_cou¡
(
pStmt
)==8

1980 && 
	`sqlôe3_°æike
("EXPLAIN%", 
zStmtSql
,0)==0

1982 
pArg
->
cMode
 = 
MODE_Ex∂aö
;

1987 if–
pArg
->
cMode
==
MODE_Ex∂aö
 ){

1988 
	`ex∂aö_d©a_¥ï¨e
(
pArg
, 
pStmt
);

1992 
	`exec_¥ï¨ed_°mt
(
pArg
, 
pStmt
, 
xCÆlback
);

1993 
	`ex∂aö_d©a_dñëe
(
pArg
);

1996 if–
pArg
 &&ÖArg->
°©sOn
 ){

1997 
	`di•œy_°©s
(
db
, 
pArg
, 0);

2001 if–
pArg
 &&ÖArg->
sˇn°©sOn
 ){

2002 
	`di•œy_sˇn°©s
(
db
, 
pArg
);

2008 
rc2
 = 
	`sqlôe3_föÆize
(
pStmt
);

2009 if–
rc
!=
SQLITE_NOMEM
 )Ñ¯
rc2
;

2010 if–
rc
==
SQLITE_OK
 ){

2011 
zSql
 = 
zLe·ovî
;

2012  
	`IsS∑˚
(
zSql
[0]) ) zSql++;

2013 }if–
pzEºMsg
 ){

2014 *
pzEºMsg
 = 
	`ßve_îr_msg
(
db
);

2018 if–
pArg
 ){

2019 
pArg
->
pStmt
 = 
NULL
;

2024  
rc
;

2025 
	}
}

2034 
	$dump_ˇŒback
(*
pArg
, 
nArg
, **
azArg
, **
azCﬁ
){

2035 
rc
;

2036 c⁄° *
zTabÀ
;

2037 c⁄° *
zTy≥
;

2038 c⁄° *
zSql
;

2039 c⁄° *
zPªpStmt
 = 0;

2040 
ShñlSèã
 *
p
 = (ShñlSèã *)
pArg
;

2042 
	`UNUSED_PARAMETER
(
azCﬁ
);

2043 if–
nArg
!=3 )  1;

2044 
zTabÀ
 = 
azArg
[0];

2045 
zTy≥
 = 
azArg
[1];

2046 
zSql
 = 
azArg
[2];

2048 if–
	`°rcmp
(
zTabÀ
, "sqlite_sequence")==0 ){

2049 
zPªpStmt
 = "DELETE FROM sqlite_sequence;\n";

2050 }if–
	`sqlôe3_°rglob
("sqlôe_°©?", 
zTabÀ
)==0 ){

2051 
	`øw_¥ötf
(
p
->
out
, "ANALYZE sqlite_master;\n");

2052 }if–
	`°∫cmp
(
zTabÀ
, "sqlite_", 7)==0 ){

2054 }if–
	`°∫cmp
(
zSql
, "CREATE VIRTUAL TABLE", 20)==0 ){

2055 *
zIns
;

2056 if–!
p
->
wrôabÀSchema
 ){

2057 
	`øw_¥ötf
(
p
->
out
, "PRAGMA writable_schema=ON;\n");

2058 
p
->
wrôabÀSchema
 = 1;

2060 
zIns
 = 
	`sqlôe3_m¥ötf
(

2063 
zTabÀ
, zTabÀ, 
zSql
);

2064 
	`utf8_¥ötf
(
p
->
out
, "%s\n", 
zIns
);

2065 
	`sqlôe3_‰ì
(
zIns
);

2068 
	`¥ötSchemaLöe
(
p
->
out
, 
zSql
, ";\n");

2071 if–
	`°rcmp
(
zTy≥
, "table")==0 ){

2072 
sqlôe3_°mt
 *
pTabÀInfo
 = 0;

2073 *
zSñe˘
 = 0;

2074 *
zTabÀInfo
 = 0;

2075 *
zTmp
 = 0;

2076 
nRow
 = 0;

2078 
zTabÀInfo
 = 
	`≠≥ndText
(zTableInfo, "PRAGMAÅable_info(", 0);

2079 
zTabÀInfo
 = 
	`≠≥ndText
(zTabÀInfo, 
zTabÀ
, '"');

2080 
zTabÀInfo
 = 
	`≠≥ndText
(zTableInfo, ");", 0);

2082 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
p
->
db
, 
zTabÀInfo
, -1, &
pTabÀInfo
, 0);

2083 
	`‰ì
(
zTabÀInfo
);

2084 if–
rc
!=
SQLITE_OK
 || !
pTabÀInfo
 ){

2088 
zSñe˘
 = 
	`≠≥ndText
(zSelect, "SELECT 'INSERT INTO ' || ", 0);

2091 
zTmp
 = 
	`≠≥ndText
(zTmp, 
zTabÀ
, '"');

2092 if–
zTmp
 ){

2093 
zSñe˘
 = 
	`≠≥ndText
(zSñe˘, 
zTmp
, '\'');

2094 
	`‰ì
(
zTmp
);

2096 
zSñe˘
 = 
	`≠≥ndText
(zSelect, " || ' VALUES(' || ", 0);

2097 
rc
 = 
	`sqlôe3_°ï
(
pTabÀInfo
);

2098  
rc
==
SQLITE_ROW
 ){

2099 c⁄° *
zText
 = (c⁄° *)
	`sqlôe3_cﬁumn_ãxt
(
pTabÀInfo
, 1);

2100 
zSñe˘
 = 
	`≠≥ndText
(zSelect, "quote(", 0);

2101 
zSñe˘
 = 
	`≠≥ndText
(zSñe˘, 
zText
, '"');

2102 
rc
 = 
	`sqlôe3_°ï
(
pTabÀInfo
);

2103 if–
rc
==
SQLITE_ROW
 ){

2104 
zSñe˘
 = 
	`≠≥ndText
(zSelect, "), ", 0);

2106 
zSñe˘
 = 
	`≠≥ndText
(zSelect, ") ", 0);

2108 
nRow
++;

2110 
rc
 = 
	`sqlôe3_föÆize
(
pTabÀInfo
);

2111 if–
rc
!=
SQLITE_OK
 || 
nRow
==0 ){

2112 
	`‰ì
(
zSñe˘
);

2115 
zSñe˘
 = 
	`≠≥ndText
(zSelect, "|| ')' FROM ", 0);

2116 
zSñe˘
 = 
	`≠≥ndText
(zSñe˘, 
zTabÀ
, '"');

2118 
rc
 = 
	`run_èbÀ_dump_quîy
(
p
, 
zSñe˘
, 
zPªpStmt
);

2119 if–
rc
==
SQLITE_CORRUPT
 ){

2120 
zSñe˘
 = 
	`≠≥ndText
(zSelect, " ORDER BYÑowid DESC", 0);

2121 
	`run_èbÀ_dump_quîy
(
p
, 
zSñe˘
, 0);

2123 
	`‰ì
(
zSñe˘
);

2126 
	}
}

2135 
	$run_schema_dump_quîy
(

2136 
ShñlSèã
 *
p
,

2137 c⁄° *
zQuîy


2139 
rc
;

2140 *
zEº
 = 0;

2141 
rc
 = 
	`sqlôe3_exec
(
p
->
db
, 
zQuîy
, 
dump_ˇŒback
,Ö, &
zEº
);

2142 if–
rc
==
SQLITE_CORRUPT
 ){

2143 *
zQ2
;

2144 
Àn
 = 
	`°æí30
(
zQuîy
);

2145 
	`øw_¥ötf
(
p
->
out
, "/****** CORRUPTION ERROR *******/\n");

2146 if–
zEº
 ){

2147 
	`utf8_¥ötf
(
p
->
out
, "/****** %†******/\n", 
zEº
);

2148 
	`sqlôe3_‰ì
(
zEº
);

2149 
zEº
 = 0;

2151 
zQ2
 = 
	`mÆloc
–
Àn
+100 );

2152 if–
zQ2
==0 )  
rc
;

2153 
	`sqlôe3_¢¥ötf
(
Àn
+100, 
zQ2
, "%†ORDER BYÑowid DESC", 
zQuîy
);

2154 
rc
 = 
	`sqlôe3_exec
(
p
->
db
, 
zQ2
, 
dump_ˇŒback
,Ö, &
zEº
);

2155 if–
rc
 ){

2156 
	`utf8_¥ötf
(
p
->
out
, "/****** ERROR: %†******/\n", 
zEº
);

2158 
rc
 = 
SQLITE_CORRUPT
;

2160 
	`sqlôe3_‰ì
(
zEº
);

2161 
	`‰ì
(
zQ2
);

2163  
rc
;

2164 
	}
}

2169 
	gzHñp
[] =

2170 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


2192 #i‚de‡
SQLITE_OMIT_TEST_CONTROL


2198 #ifde‡
SQLITE_ENABLE_IOTRACE


2204 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


2235 #i‡
deföed
(
SQLITE_ENABLE_SESSION
)

2256 #i‡
deföed
(
SQLITE_ENABLE_SESSION
)

2260 
	$£ssi⁄_hñp
(
ShñlSèã
 *
p
){

2261 
	`øw_¥ötf
(
p
->
out
,

2276 
	}
}

2281 
¥o˚ss_öput
(
ShñlSèã
 *
p
, 
FILE
 *
ö
);

2298 *
	$ªadFûe
(c⁄° *
zName
, *
≤Byã
){

2299 
FILE
 *
ö
 = 
	`f›í
(
zName
, "rb");

2300 
nIn
;

2301 
size_t
 
nRód
;

2302 *
pBuf
;

2303 if–
ö
==0 )  0;

2304 
	`f£ek
(
ö
, 0, 
SEEK_END
);

2305 
nIn
 = 
	`·ñl
(
ö
);

2306 
	`ªwöd
(
ö
);

2307 
pBuf
 = 
	`sqlôe3_mÆloc64
–
nIn
+1 );

2308 if–
pBuf
==0 )  0;

2309 
nRód
 = 
	`‰ód
(
pBuf
, 
nIn
, 1, 
ö
);

2310 
	`f˛o£
(
ö
);

2311 if–
nRód
!=1 ){

2312 
	`sqlôe3_‰ì
(
pBuf
);

2315 
pBuf
[
nIn
] = 0;

2316 if–
≤Byã
 ) *≤Byã = 
nIn
;

2317  
pBuf
;

2318 
	}
}

2325 
	$ªadfûeFunc
(

2326 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

2327 
¨gc
,

2328 
sqlôe3_vÆue
 **
¨gv


2330 c⁄° *
zName
;

2331 *
pBuf
;

2332 
nBuf
;

2334 
	`UNUSED_PARAMETER
(
¨gc
);

2335 
zName
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

2336 if–
zName
==0 ) ;

2337 
pBuf
 = 
	`ªadFûe
(
zName
, &
nBuf
);

2338 if–
pBuf
 ) 
	`sqlôe3_ªsu…_blob
(
c⁄ãxt
,ÖBuf, 
nBuf
, 
sqlôe3_‰ì
);

2339 
	}
}

2347 
	$wrôefûeFunc
(

2348 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

2349 
¨gc
,

2350 
sqlôe3_vÆue
 **
¨gv


2352 
FILE
 *
out
;

2353 c⁄° *
z
;

2354 
sqlôe3_öt64
 
rc
;

2355 c⁄° *
zFûe
;

2357 
	`UNUSED_PARAMETER
(
¨gc
);

2358 
zFûe
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

2359 if–
zFûe
==0 ) ;

2360 
out
 = 
	`f›í
(
zFûe
, "wb");

2361 if–
out
==0 ) ;

2362 
z
 = (c⁄° *)
	`sqlôe3_vÆue_blob
(
¨gv
[1]);

2363 if–
z
==0 ){

2364 
rc
 = 0;

2366 
rc
 = 
	`fwrôe
(
z
, 1, 
	`sqlôe3_vÆue_byãs
(
¨gv
[1]), 
out
);

2368 
	`f˛o£
(
out
);

2369 
	`sqlôe3_ªsu…_öt64
(
c⁄ãxt
, 
rc
);

2370 
	}
}

2372 #i‡
deföed
(
SQLITE_ENABLE_SESSION
)

2377 
	$£ssi⁄_˛o£
(
O≥nSessi⁄
 *
pSessi⁄
){

2378 
i
;

2379 
	`sqlôe3£ssi⁄_dñëe
(
pSessi⁄
->
p
);

2380 
	`sqlôe3_‰ì
(
pSessi⁄
->
zName
);

2381 
i
=0; i<
pSessi⁄
->
nFûãr
; i++){

2382 
	`sqlôe3_‰ì
(
pSessi⁄
->
azFûãr
[
i
]);

2384 
	`sqlôe3_‰ì
(
pSessi⁄
->
azFûãr
);

2385 
	`mem£t
(
pSessi⁄
, 0, (
O≥nSessi⁄
));

2386 
	}
}

2392 #i‡
deföed
(
SQLITE_ENABLE_SESSION
)

2393 
	$£ssi⁄_˛o£_Æl
(
ShñlSèã
 *
p
){

2394 
i
;

2395 
i
=0; i<
p
->
nSessi⁄
; i++){

2396 
	`£ssi⁄_˛o£
(&
p
->
aSessi⁄
[
i
]);

2398 
p
->
nSessi⁄
 = 0;

2399 
	}
}

2401 
	#£ssi⁄_˛o£_Æl
(
X
)

	)

2408 #i‡
deföed
(
SQLITE_ENABLE_SESSION
)

2409 
	$£ssi⁄_fûãr
(*
pCtx
, c⁄° *
zTab
){

2410 
O≥nSessi⁄
 *
pSessi⁄
 = (O≥nSessi⁄*)
pCtx
;

2411 
i
;

2412 
i
=0; i<
pSessi⁄
->
nFûãr
; i++){

2413 if–
	`sqlôe3_°rglob
(
pSessi⁄
->
azFûãr
[
i
], 
zTab
)==0 )  0;

2416 
	}
}

2423 
	$›í_db
(
ShñlSèã
 *
p
, 
kìpAlive
){

2424 if–
p
->
db
==0 ){

2425 
	`sqlôe3_öôülize
();

2426 
	`sqlôe3_›í
(
p
->
zDbFûíame
, &p->
db
);

2427 
globÆDb
 = 
p
->
db
;

2428 if–
p
->
db
 && 
	`sqlôe3_îrcode
’->db)==
SQLITE_OK
 ){

2429 
	`sqlôe3_¸óã_fun˘i⁄
(
p
->
db
, "shñl°©ic", 0, 
SQLITE_UTF8
, 0,

2430 
shñl°©icFunc
, 0, 0);

2432 if–
p
->
db
==0 || 
SQLITE_OK
!=
	`sqlôe3_îrcode
(p->db) ){

2433 
	`utf8_¥ötf
(
°dîr
,"Error: unableÅo open database \"%s\": %s\n",

2434 
p
->
zDbFûíame
, 
	`sqlôe3_îrmsg
’->
db
));

2435 if–
kìpAlive
 ) ;

2436 
	`exô
(1);

2438 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


2439 
	`sqlôe3_íabÀ_lﬂd_exãnsi⁄
(
p
->
db
, 1);

2441 
	`sqlôe3_¸óã_fun˘i⁄
(
p
->
db
, "ªadfûe", 1, 
SQLITE_UTF8
, 0,

2442 
ªadfûeFunc
, 0, 0);

2443 
	`sqlôe3_¸óã_fun˘i⁄
(
p
->
db
, "wrôefûe", 2, 
SQLITE_UTF8
, 0,

2444 
wrôefûeFunc
, 0, 0);

2446 
	}
}

2464 
	$ªsﬁve_back¶ashes
(*
z
){

2465 
i
, 
j
;

2466 
c
;

2467  *
z
 && *z!='\\' ) z++;

2468 
i
=
j
=0; (
c
 = 
z
[i])!=0; i++, j++){

2469 if–
c
=='\\' && 
z
[
i
+1]!=0 ){

2470 
c
 = 
z
[++
i
];

2471 if–
c
=='a' ){

2472 
c
 = '\a';

2473 }if–
c
=='b' ){

2474 
c
 = '\b';

2475 }if–
c
=='t' ){

2476 
c
 = '\t';

2477 }if–
c
=='n' ){

2478 
c
 = '\n';

2479 }if–
c
=='v' ){

2480 
c
 = '\v';

2481 }if–
c
=='f' ){

2482 
c
 = '\f';

2483 }if–
c
=='r' ){

2484 
c
 = '\r';

2485 }if–
c
=='"' ){

2486 
c
 = '"';

2487 }if–
c
=='\'' ){

2488 
c
 = '\'';

2489 }if–
c
=='\\' ){

2490 
c
 = '\\';

2491 }if–
c
>='0' && c<='7' ){

2492 
c
 -= '0';

2493 if–
z
[
i
+1]>='0' && z[i+1]<='7' ){

2494 
i
++;

2495 
c
 = (c<<3Ë+ 
z
[
i
] - '0';

2496 if–
z
[
i
+1]>='0' && z[i+1]<='7' ){

2497 
i
++;

2498 
c
 = (c<<3Ë+ 
z
[
i
] - '0';

2503 
z
[
j
] = 
c
;

2505 if–
j
<
i
 ) 
z
[j] = 0;

2506 
	}
}

2512 
	$hexDigôVÆue
(
c
){

2513 if–
c
>='0' && c<='9' )  c - '0';

2514 if–
c
>='a' && c<='f' )  c - 'a' + 10;

2515 if–
c
>='A' && c<='F' )  c - 'A' + 10;

2517 
	}
}

2522 
sqlôe3_öt64
 
	$öãgîVÆue
(c⁄° *
zArg
){

2523 
sqlôe3_öt64
 
v
 = 0;

2524 c⁄° såu˘ { *
zSuffix
; 
iMu…
; } 
aMu…
[] = {

2535 
i
;

2536 
isNeg
 = 0;

2537 if–
zArg
[0]=='-' ){

2538 
isNeg
 = 1;

2539 
zArg
++;

2540 }if–
zArg
[0]=='+' ){

2541 
zArg
++;

2543 if–
zArg
[0]=='0' && zArg[1]=='x' ){

2544 
x
;

2545 
zArg
 += 2;

2546  (
x
 = 
	`hexDigôVÆue
(
zArg
[0]))>=0 ){

2547 
v
 = (v<<4Ë+ 
x
;

2548 
zArg
++;

2551  
	`IsDigô
(
zArg
[0]) ){

2552 
v
 = v*10 + 
zArg
[0] - '0';

2553 
zArg
++;

2556 
i
=0; i<
	`AºaySize
(
aMu…
); i++){

2557 if–
	`sqlôe3_°ricmp
(
aMu…
[
i
].
zSuffix
, 
zArg
)==0 ){

2558 
v
 *
aMu…
[
i
].
iMu…
;

2562  
isNeg
? -
v
 : v;

2563 
	}
}

2569 
	$boﬁónVÆue
(*
zArg
){

2570 
i
;

2571 if–
zArg
[0]=='0' && zArg[1]=='x' ){

2572 
i
=2; 
	`hexDigôVÆue
(
zArg
[i])>=0; i++){}

2574 
i
=0; 
zArg
[i]>='0' && zArg[i]<='9'; i++){}

2576 if–
i
>0 && 
zArg
[i]==0 )  ()(
	`öãgîVÆue
(zArg) & 0xffffffff);

2577 if–
	`sqlôe3_°ricmp
(
zArg
, "on")==0 || sqlite3_stricmp(zArg,"yes")==0 ){

2580 if–
	`sqlôe3_°ricmp
(
zArg
, "off")==0 || sqlite3_stricmp(zArg,"no")==0 ){

2583 
	`utf8_¥ötf
(
°dîr
, "ERROR: Notá boolean value: \"%s\". Assuming \"no\".\n",

2584 
zArg
);

2586 
	}
}

2591 
	$ouçut_fûe_˛o£
(
FILE
 *
f
){

2592 if–
f
 && f!=
°dout
 && f!=
°dîr
 ) 
	`f˛o£
(f);

2593 
	}
}

2600 
FILE
 *
	$ouçut_fûe_›í
(c⁄° *
zFûe
){

2601 
FILE
 *
f
;

2602 if–
	`°rcmp
(
zFûe
,"stdout")==0 ){

2603 
f
 = 
°dout
;

2604 }if–
	`°rcmp
(
zFûe
, "stderr")==0 ){

2605 
f
 = 
°dîr
;

2606 }if–
	`°rcmp
(
zFûe
, "off")==0 ){

2607 
f
 = 0;

2609 
f
 = 
	`f›í
(
zFûe
, "wb");

2610 if–
f
==0 ){

2611 
	`utf8_¥ötf
(
°dîr
, "Eº‹: c™nŸ o≥¿\"%s\"\n", 
zFûe
);

2614  
f
;

2615 
	}
}

2617 #i‡!
deföed
(
SQLITE_UNTESTABLE
)

2618 #i‡!
deföed
(
SQLITE_OMIT_TRACE
Ë&& !deföed(
SQLITE_OMIT_FLOATING_POINT
)

2622 
	$sql_åa˚_ˇŒback
(

2623 
mTy≥
,

2624 *
pArg
,

2625 *
pP
,

2626 *
pX


2628 
FILE
 *
f
 = (FILE*)
pArg
;

2629 
	`UNUSED_PARAMETER
(
mTy≥
);

2630 
	`UNUSED_PARAMETER
(
pP
);

2631 if–
f
 ){

2632 c⁄° *
z
 = (c⁄° *)
pX
;

2633 
i
 = ()
	`°æí
(
z
);

2634  
i
>0 && 
z
[i-1]==';' ){ i--; }

2635 
	`utf8_¥ötf
(
f
, "%.*s;\n", 
i
, 
z
);

2638 
	}
}

2646 
	$ã°_bªakpoöt
(){

2647 
nCÆl
 = 0;

2648 
nCÆl
++;

2649 
	}
}

2654 
Imp‹tCtx
 
	tImp‹tCtx
;

2655 
	sImp‹tCtx
 {

2656 c⁄° *
	mzFûe
;

2657 
FILE
 *
	mö
;

2658 *
	mz
;

2659 
	mn
;

2660 
	mnAŒoc
;

2661 
	mnLöe
;

2662 
	mcTîm
;

2663 
	mcCﬁSï
;

2664 
	mcRowSï
;

2668 
	$imp‹t_≠≥nd_ch¨
(
Imp‹tCtx
 *
p
, 
c
){

2669 if–
p
->
n
+1>ı->
nAŒoc
 ){

2670 
p
->
nAŒoc
 +=Ö->nAlloc + 100;

2671 
p
->
z
 = 
	`sqlôe3_ªÆloc64
’->z,Ö->
nAŒoc
);

2672 if–
p
->
z
==0 ){

2673 
	`øw_¥ötf
(
°dîr
, "out of memory\n");

2674 
	`exô
(1);

2677 
p
->
z
[p->
n
++] = ()
c
;

2678 
	}
}

2693 *
SQLITE_CDECL
 
	$csv_ªad_⁄e_fõld
(
Imp‹tCtx
 *
p
){

2694 
c
;

2695 
cSï
 = 
p
->
cCﬁSï
;

2696 
rSï
 = 
p
->
cRowSï
;

2697 
p
->
n
 = 0;

2698 
c
 = 
	`fgëc
(
p
->
ö
);

2699 if–
c
==
EOF
 || 
£íI¡îru±
 ){

2700 
p
->
cTîm
 = 
EOF
;

2703 if–
c
=='"' ){

2704 
pc
, 
µc
;

2705 
°¨tLöe
 = 
p
->
nLöe
;

2706 
cQuŸe
 = 
c
;

2707 
pc
 = 
µc
 = 0;

2709 
c
 = 
	`fgëc
(
p
->
ö
);

2710 if–
c
==
rSï
 ) 
p
->
nLöe
++;

2711 if–
c
==
cQuŸe
 ){

2712 if–
pc
==
cQuŸe
 ){

2713 
pc
 = 0;

2717 if–(
c
==
cSï
 && 
pc
==
cQuŸe
)

2718 || (
c
==
rSï
 && 
pc
==
cQuŸe
)

2719 || (
c
==
rSï
 && 
pc
=='\r' && 
µc
==
cQuŸe
)

2720 || (
c
==
EOF
 && 
pc
==
cQuŸe
)

2722 do{ 
p
->
n
--; }Ö->
z
[p->n]!=
cQuŸe
 );

2723 
p
->
cTîm
 = 
c
;

2726 if–
pc
==
cQuŸe
 && 
c
!='\r' ){

2727 
	`utf8_¥ötf
(
°dîr
, "%s:%d: unescaped %c character\n",

2728 
p
->
zFûe
,Ö->
nLöe
, 
cQuŸe
);

2730 if–
c
==
EOF
 ){

2731 
	`utf8_¥ötf
(
°dîr
, "%s:%d: unterminated %c-quoted field\n",

2732 
p
->
zFûe
, 
°¨tLöe
, 
cQuŸe
);

2733 
p
->
cTîm
 = 
c
;

2736 
	`imp‹t_≠≥nd_ch¨
(
p
, 
c
);

2737 
µc
 = 
pc
;

2738 
pc
 = 
c
;

2741  
c
!=
EOF
 && c!=
cSï
 && c!=
rSï
 ){

2742 
	`imp‹t_≠≥nd_ch¨
(
p
, 
c
);

2743 
c
 = 
	`fgëc
(
p
->
ö
);

2745 if–
c
==
rSï
 ){

2746 
p
->
nLöe
++;

2747 if–
p
->
n
>0 &&Ö->
z
[p->n-1]=='\r' )Ö->n--;

2749 
p
->
cTîm
 = 
c
;

2751 if–
p
->
z
 )Ö->z[p->
n
] = 0;

2752  
p
->
z
;

2753 
	}
}

2767 *
SQLITE_CDECL
 
	$ascii_ªad_⁄e_fõld
(
Imp‹tCtx
 *
p
){

2768 
c
;

2769 
cSï
 = 
p
->
cCﬁSï
;

2770 
rSï
 = 
p
->
cRowSï
;

2771 
p
->
n
 = 0;

2772 
c
 = 
	`fgëc
(
p
->
ö
);

2773 if–
c
==
EOF
 || 
£íI¡îru±
 ){

2774 
p
->
cTîm
 = 
EOF
;

2777  
c
!=
EOF
 && c!=
cSï
 && c!=
rSï
 ){

2778 
	`imp‹t_≠≥nd_ch¨
(
p
, 
c
);

2779 
c
 = 
	`fgëc
(
p
->
ö
);

2781 if–
c
==
rSï
 ){

2782 
p
->
nLöe
++;

2784 
p
->
cTîm
 = 
c
;

2785 if–
p
->
z
 )Ö->z[p->
n
] = 0;

2786  
p
->
z
;

2787 
	}
}

2794 
	$åyToCl⁄eD©a
(

2795 
ShñlSèã
 *
p
,

2796 
sqlôe3
 *
√wDb
,

2797 c⁄° *
zTabÀ


2799 
sqlôe3_°mt
 *
pQuîy
 = 0;

2800 
sqlôe3_°mt
 *
pIn£π
 = 0;

2801 *
zQuîy
 = 0;

2802 *
zIn£π
 = 0;

2803 
rc
;

2804 
i
, 
j
, 
n
;

2805 
nTabÀ
 = ()
	`°æí
(
zTabÀ
);

2806 
k
 = 0;

2807 
˙t
 = 0;

2808 c⁄° 
•öR©e
 = 10000;

2810 
zQuîy
 = 
	`sqlôe3_m¥ötf
("SELECT * FROM \"%w\"", 
zTabÀ
);

2811 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
p
->
db
, 
zQuîy
, -1, &
pQuîy
, 0);

2812 if–
rc
 ){

2813 
	`utf8_¥ötf
(
°dîr
, "Error %d: %s on [%s]\n",

2814 
	`sqlôe3_exãnded_îrcode
(
p
->
db
), 
	`sqlôe3_îrmsg
(p->db),

2815 
zQuîy
);

2816 
íd_d©a_x„r
;

2818 
n
 = 
	`sqlôe3_cﬁumn_cou¡
(
pQuîy
);

2819 
zIn£π
 = 
	`sqlôe3_mÆloc64
(200 + 
nTabÀ
 + 
n
*3);

2820 if–
zIn£π
==0 ){

2821 
	`øw_¥ötf
(
°dîr
, "out of memory\n");

2822 
íd_d©a_x„r
;

2824 
	`sqlôe3_¢¥ötf
(200+
nTabÀ
,
zIn£π
,

2825 "INSERT OR IGNORE INTO \"%s\" VALUES(?", 
zTabÀ
);

2826 
i
 = ()
	`°æí
(
zIn£π
);

2827 
j
=1; j<
n
; j++){

2828 
	`mem˝y
(
zIn£π
+
i
, ",?", 2);

2829 
i
 += 2;

2831 
	`mem˝y
(
zIn£π
+
i
, ");", 3);

2832 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
√wDb
, 
zIn£π
, -1, &
pIn£π
, 0);

2833 if–
rc
 ){

2834 
	`utf8_¥ötf
(
°dîr
, "Error %d: %s on [%s]\n",

2835 
	`sqlôe3_exãnded_îrcode
(
√wDb
), 
	`sqlôe3_îrmsg
(newDb),

2836 
zQuîy
);

2837 
íd_d©a_x„r
;

2839 
k
=0; k<2; k++){

2840  (
rc
 = 
	`sqlôe3_°ï
(
pQuîy
))==
SQLITE_ROW
 ){

2841 
i
=0; i<
n
; i++){

2842  
	`sqlôe3_cﬁumn_ty≥
(
pQuîy
, 
i
) ){

2843 
SQLITE_NULL
: {

2844 
	`sqlôe3_böd_nuŒ
(
pIn£π
, 
i
+1);

2847 
SQLITE_INTEGER
: {

2848 
	`sqlôe3_böd_öt64
(
pIn£π
, 
i
+1, 
	`sqlôe3_cﬁumn_öt64
(
pQuîy
,i));

2851 
SQLITE_FLOAT
: {

2852 
	`sqlôe3_böd_doubÀ
(
pIn£π
, 
i
+1, 
	`sqlôe3_cﬁumn_doubÀ
(
pQuîy
,i));

2855 
SQLITE_TEXT
: {

2856 
	`sqlôe3_böd_ãxt
(
pIn£π
, 
i
+1,

2857 (c⁄° *)
	`sqlôe3_cﬁumn_ãxt
(
pQuîy
,
i
),

2858 -1, 
SQLITE_STATIC
);

2861 
SQLITE_BLOB
: {

2862 
	`sqlôe3_böd_blob
(
pIn£π
, 
i
+1, 
	`sqlôe3_cﬁumn_blob
(
pQuîy
,i),

2863 
	`sqlôe3_cﬁumn_byãs
(
pQuîy
,
i
),

2864 
SQLITE_STATIC
);

2869 
rc
 = 
	`sqlôe3_°ï
(
pIn£π
);

2870 if–
rc
!=
SQLITE_OK
 &&Ñc!=
SQLITE_ROW
 &&Ñc!=
SQLITE_DONE
 ){

2871 
	`utf8_¥ötf
(
°dîr
, "Eº‹ %d: %s\n", 
	`sqlôe3_exãnded_îrcode
(
√wDb
),

2872 
	`sqlôe3_îrmsg
(
√wDb
));

2874 
	`sqlôe3_ª£t
(
pIn£π
);

2875 
˙t
++;

2876 if–(
˙t
%
•öR©e
)==0 ){

2877 
	`¥ötf
("%c\b", "|/-\\"[(
˙t
/
•öR©e
)%4]);

2878 
	`fÊush
(
°dout
);

2881 if–
rc
==
SQLITE_DONE
 ) ;

2882 
	`sqlôe3_föÆize
(
pQuîy
);

2883 
	`sqlôe3_‰ì
(
zQuîy
);

2884 
zQuîy
 = 
	`sqlôe3_m¥ötf
("SELECT * FROM \"%w\" ORDER BYÑowid DESC;",

2885 
zTabÀ
);

2886 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
p
->
db
, 
zQuîy
, -1, &
pQuîy
, 0);

2887 if–
rc
 ){

2888 
	`utf8_¥ötf
(
°dîr
, "W¨nög: c™nŸ sã∞\"%s\" backw¨ds", 
zTabÀ
);

2893 
íd_d©a_x„r
:

2894 
	`sqlôe3_föÆize
(
pQuîy
);

2895 
	`sqlôe3_föÆize
(
pIn£π
);

2896 
	`sqlôe3_‰ì
(
zQuîy
);

2897 
	`sqlôe3_‰ì
(
zIn£π
);

2898 
	}
}

2907 
	$åyToCl⁄eSchema
(

2908 
ShñlSèã
 *
p
,

2909 
sqlôe3
 *
√wDb
,

2910 c⁄° *
zWhîe
,

2911 (*
xF‹Each
)(
ShñlSèã
*,
sqlôe3
*,const *)

2913 
sqlôe3_°mt
 *
pQuîy
 = 0;

2914 *
zQuîy
 = 0;

2915 
rc
;

2916 c⁄° *
zName
;

2917 c⁄° *
zSql
;

2918 *
zEºMsg
 = 0;

2920 
zQuîy
 = 
	`sqlôe3_m¥ötf
("SELECTÇame, sql FROM sqlite_master"

2921 " WHERE %s", 
zWhîe
);

2922 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
p
->
db
, 
zQuîy
, -1, &
pQuîy
, 0);

2923 if–
rc
 ){

2924 
	`utf8_¥ötf
(
°dîr
, "Error: (%d) %s on [%s]\n",

2925 
	`sqlôe3_exãnded_îrcode
(
p
->
db
), 
	`sqlôe3_îrmsg
(p->db),

2926 
zQuîy
);

2927 
íd_schema_x„r
;

2929  (
rc
 = 
	`sqlôe3_°ï
(
pQuîy
))==
SQLITE_ROW
 ){

2930 
zName
 = 
	`sqlôe3_cﬁumn_ãxt
(
pQuîy
, 0);

2931 
zSql
 = 
	`sqlôe3_cﬁumn_ãxt
(
pQuîy
, 1);

2932 
	`¥ötf
("%s... ", 
zName
); 
	`fÊush
(
°dout
);

2933 
	`sqlôe3_exec
(
√wDb
, (c⁄° *)
zSql
, 0, 0, &
zEºMsg
);

2934 if–
zEºMsg
 ){

2935 
	`utf8_¥ötf
(
°dîr
, "Eº‹: %s\nSQL: [%s]\n", 
zEºMsg
, 
zSql
);

2936 
	`sqlôe3_‰ì
(
zEºMsg
);

2937 
zEºMsg
 = 0;

2939 if–
xF‹Each
 ){

2940 
	`xF‹Each
(
p
, 
√wDb
, (c⁄° *)
zName
);

2942 
	`¥ötf
("done\n");

2944 if–
rc
!=
SQLITE_DONE
 ){

2945 
	`sqlôe3_föÆize
(
pQuîy
);

2946 
	`sqlôe3_‰ì
(
zQuîy
);

2947 
zQuîy
 = 
	`sqlôe3_m¥ötf
("SELECTÇame, sql FROM sqlite_master"

2948 " WHERE %†ORDER BYÑowid DESC", 
zWhîe
);

2949 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
p
->
db
, 
zQuîy
, -1, &
pQuîy
, 0);

2950 if–
rc
 ){

2951 
	`utf8_¥ötf
(
°dîr
, "Error: (%d) %s on [%s]\n",

2952 
	`sqlôe3_exãnded_îrcode
(
p
->
db
), 
	`sqlôe3_îrmsg
(p->db),

2953 
zQuîy
);

2954 
íd_schema_x„r
;

2956  (
rc
 = 
	`sqlôe3_°ï
(
pQuîy
))==
SQLITE_ROW
 ){

2957 
zName
 = 
	`sqlôe3_cﬁumn_ãxt
(
pQuîy
, 0);

2958 
zSql
 = 
	`sqlôe3_cﬁumn_ãxt
(
pQuîy
, 1);

2959 
	`¥ötf
("%s... ", 
zName
); 
	`fÊush
(
°dout
);

2960 
	`sqlôe3_exec
(
√wDb
, (c⁄° *)
zSql
, 0, 0, &
zEºMsg
);

2961 if–
zEºMsg
 ){

2962 
	`utf8_¥ötf
(
°dîr
, "Eº‹: %s\nSQL: [%s]\n", 
zEºMsg
, 
zSql
);

2963 
	`sqlôe3_‰ì
(
zEºMsg
);

2964 
zEºMsg
 = 0;

2966 if–
xF‹Each
 ){

2967 
	`xF‹Each
(
p
, 
√wDb
, (c⁄° *)
zName
);

2969 
	`¥ötf
("done\n");

2972 
íd_schema_x„r
:

2973 
	`sqlôe3_föÆize
(
pQuîy
);

2974 
	`sqlôe3_‰ì
(
zQuîy
);

2975 
	}
}

2982 
	$åyToCl⁄e
(
ShñlSèã
 *
p
, c⁄° *
zNewDb
){

2983 
rc
;

2984 
sqlôe3
 *
√wDb
 = 0;

2985 if–
	`ac˚ss
(
zNewDb
,0)==0 ){

2986 
	`utf8_¥ötf
(
°dîr
, "Fûê\"%s\"áÃódyÉxi°s.\n", 
zNewDb
);

2989 
rc
 = 
	`sqlôe3_›í
(
zNewDb
, &
√wDb
);

2990 if–
rc
 ){

2991 
	`utf8_¥ötf
(
°dîr
, "Cannot create output database: %s\n",

2992 
	`sqlôe3_îrmsg
(
√wDb
));

2994 
	`sqlôe3_exec
(
p
->
db
, "PRAGMA writable_schema=ON;", 0, 0, 0);

2995 
	`sqlôe3_exec
(
√wDb
, "BEGIN EXCLUSIVE;", 0, 0, 0);

2996 
	`åyToCl⁄eSchema
(
p
, 
√wDb
, "ty≥='èbÀ'", 
åyToCl⁄eD©a
);

2997 
	`åyToCl⁄eSchema
(
p
, 
√wDb
, "type!='table'", 0);

2998 
	`sqlôe3_exec
(
√wDb
, "COMMIT;", 0, 0, 0);

2999 
	`sqlôe3_exec
(
p
->
db
, "PRAGMA writable_schema=OFF;", 0, 0, 0);

3001 
	`sqlôe3_˛o£
(
√wDb
);

3002 
	}
}

3007 
	$ouçut_ª£t
(
ShñlSèã
 *
p
){

3008 if–
p
->
outfûe
[0]=='|' ){

3009 #i‚de‡
SQLITE_OMIT_POPEN


3010 
	`p˛o£
(
p
->
out
);

3013 
	`ouçut_fûe_˛o£
(
p
->
out
);

3015 
p
->
outfûe
[0] = 0;

3016 
p
->
out
 = 
°dout
;

3017 
	}
}

3022 
	$db_öt
(
ShñlSèã
 *
p
, c⁄° *
zSql
){

3023 
sqlôe3_°mt
 *
pStmt
;

3024 
ªs
 = 0;

3025 
	`sqlôe3_¥ï¨e_v2
(
p
->
db
, 
zSql
, -1, &
pStmt
, 0);

3026 if–
pStmt
 && 
	`sqlôe3_°ï
’Stmt)==
SQLITE_ROW
 ){

3027 
ªs
 = 
	`sqlôe3_cﬁumn_öt
(
pStmt
,0);

3029 
	`sqlôe3_föÆize
(
pStmt
);

3030  
ªs
;

3031 
	}
}

3036 
	$gë2byãI¡
(*
a
){

3037  (
a
[0]<<8) +á[1];

3038 
	}
}

3039 
	$gë4byãI¡
(*
a
){

3040  (
a
[0]<<24) + (a[1]<<16) + (a[2]<<8) +á[3];

3041 
	}
}

3048 
	$shñl_dböfo_comm™d
(
ShñlSèã
 *
p
, 
nArg
, **
azArg
){

3049 c⁄° såu˘ { c⁄° *
zName
; 
of°
; } 
aFõld
[] = {

3063 c⁄° såu˘ { c⁄° *
zName
; c⁄° *
zSql
; } 
aQuîy
[] = {

3075 
sqlôe3_fûe
 *
pFûe
 = 0;

3076 
i
;

3077 *
zSchemaTab
;

3078 *
zDb
 = 
nArg
>=2 ? 
azArg
[1] : "main";

3079 
aHdr
[100];

3080 
	`›í_db
(
p
, 0);

3081 if–
p
->
db
==0 )  1;

3082 
	`sqlôe3_fûe_c⁄åﬁ
(
p
->
db
, 
zDb
, 
SQLITE_FCNTL_FILE_POINTER
, &
pFûe
);

3083 if–
pFûe
==0 ||ÖFûe->
pMëhods
==0 ||ÖFûe->pMëhods->
xRód
==0 ){

3086 
i
 = 
pFûe
->
pMëhods
->
	`xRód
’Fûe, 
aHdr
, 100, 0);

3087 if–
i
!=
SQLITE_OK
 ){

3088 
	`øw_¥ötf
(
°dîr
, "unableÅoÑead database header\n");

3091 
i
 = 
	`gë2byãI¡
(
aHdr
+16);

3092 if–
i
==1 ) i = 65536;

3093 
	`utf8_¥ötf
(
p
->
out
, "%-20†%d\n", "d©aba£Öagêsize:", 
i
);

3094 
	`utf8_¥ötf
(
p
->
out
, "%-20†%d\n", "wrôêf‹m©:", 
aHdr
[18]);

3095 
	`utf8_¥ötf
(
p
->
out
, "%-20†%d\n", "ªad f‹m©:", 
aHdr
[19]);

3096 
	`utf8_¥ötf
(
p
->
out
, "%-20†%d\n", "ª£rved byãs:", 
aHdr
[20]);

3097 
i
=0; i<
	`AºaySize
(
aFõld
); i++){

3098 
of°
 = 
aFõld
[
i
].ofst;

3099 
vÆ
 = 
	`gë4byãI¡
(
aHdr
 + 
of°
);

3100 
	`utf8_¥ötf
(
p
->
out
, "%-20†%u", 
aFõld
[
i
].
zName
, 
vÆ
);

3101  
of°
 ){

3103 if–
vÆ
==1 ) 
	`øw_¥ötf
(
p
->
out
, " (utf8)");

3104 if–
vÆ
==2 ) 
	`øw_¥ötf
(
p
->
out
, " (utf16le)");

3105 if–
vÆ
==3 ) 
	`øw_¥ötf
(
p
->
out
, " (utf16be)");

3108 
	`øw_¥ötf
(
p
->
out
, "\n");

3110 if–
zDb
==0 ){

3111 
zSchemaTab
 = 
	`sqlôe3_m¥ötf
("main.sqlite_master");

3112 }if–
	`°rcmp
(
zDb
,"temp")==0 ){

3113 
zSchemaTab
 = 
	`sqlôe3_m¥ötf
("%s", "sqlite_temp_master");

3115 
zSchemaTab
 = 
	`sqlôe3_m¥ötf
("\"%w\".sqlôe_ma°î", 
zDb
);

3117 
i
=0; i<
	`AºaySize
(
aQuîy
); i++){

3118 *
zSql
 = 
	`sqlôe3_m¥ötf
(
aQuîy
[
i
].zSql, 
zSchemaTab
);

3119 
vÆ
 = 
	`db_öt
(
p
, 
zSql
);

3120 
	`sqlôe3_‰ì
(
zSql
);

3121 
	`utf8_¥ötf
(
p
->
out
, "%-20†%d\n", 
aQuîy
[
i
].
zName
, 
vÆ
);

3123 
	`sqlôe3_‰ì
(
zSchemaTab
);

3125 
	}
}

3130 
	$shñlD©aba£Eº‹
(
sqlôe3
 *
db
){

3131 c⁄° *
zEº
 = 
	`sqlôe3_îrmsg
(
db
);

3132 
	`utf8_¥ötf
(
°dîr
, "Eº‹: %s\n", 
zEº
);

3134 
	}
}

3139 
	$shñlNomemEº‹
(){

3140 
	`øw_¥ötf
(
°dîr
, "Error: out of memory\n");

3142 
	}
}

3167 
	$ã°ˇ£_glob
(c⁄° *
zGlob
, c⁄° *
z
){

3168 
c
, 
c2
;

3169 
övît
;

3170 
£í
;

3172  (
c
 = (*(
zGlob
++)))!=0 ){

3173 if–
	`IsS∑˚
(
c
) ){

3174 if–!
	`IsS∑˚
(*
z
) )  0;

3175  
	`IsS∑˚
(*
zGlob
) ) zGlob++;

3176  
	`IsS∑˚
(*
z
) ) z++;

3177 }if–
c
=='*' ){

3178  (
c
=(*(
zGlob
++))) == '*' || c=='?' ){

3179 if–
c
=='?' && (*(
z
++))==0 )  0;

3181 if–
c
==0 ){

3183 }if–
c
=='[' ){

3184  *
z
 && 
	`ã°ˇ£_glob
(
zGlob
-1,z)==0 ){

3185 
z
++;

3187  (*
z
)!=0;

3189  (
c2
 = (*(
z
++)))!=0 ){

3190  
c2
!=
c
 ){

3191 
c2
 = *(
z
++);

3192 if–
c2
==0 )  0;

3194 if–
	`ã°ˇ£_glob
(
zGlob
,
z
) )  1;

3197 }if–
c
=='?' ){

3198 if–(*(
z
++))==0 )  0;

3199 }if–
c
=='[' ){

3200 
¥i‹_c
 = 0;

3201 
£í
 = 0;

3202 
övît
 = 0;

3203 
c
 = *(
z
++);

3204 if–
c
==0 )  0;

3205 
c2
 = *(
zGlob
++);

3206 if–
c2
=='^' ){

3207 
övît
 = 1;

3208 
c2
 = *(
zGlob
++);

3210 if–
c2
==']' ){

3211 if–
c
==']' ) 
£í
 = 1;

3212 
c2
 = *(
zGlob
++);

3214  
c2
 && c2!=']' ){

3215 if–
c2
=='-' && 
zGlob
[0]!=']' && zGlob[0]!=0 && 
¥i‹_c
>0 ){

3216 
c2
 = *(
zGlob
++);

3217 if–
c
>=
¥i‹_c
 && c<=
c2
 ) 
£í
 = 1;

3218 
¥i‹_c
 = 0;

3220 if–
c
==
c2
 ){

3221 
£í
 = 1;

3223 
¥i‹_c
 = 
c2
;

3225 
c2
 = *(
zGlob
++);

3227 if–
c2
==0 || (
£í
 ^ 
övît
)==0 )  0;

3228 }if–
c
=='#' ){

3229 if–(
z
[0]=='-' || z[0]=='+'Ë&& 
	`IsDigô
(z[1]) ) z++;

3230 if–!
	`IsDigô
(
z
[0]) )  0;

3231 
z
++;

3232  
	`IsDigô
(
z
[0]) ){ z++; }

3234 if–
c
!=(*(
z
++)) )  0;

3237  
	`IsS∑˚
(*
z
) ){ z++; }

3238  *
z
==0;

3239 
	}
}

3246 
	$›ti⁄M©ch
(c⁄° *
zSå
, c⁄° *
zO±
){

3247 if–
zSå
[0]!='-' )  0;

3248 
zSå
++;

3249 if–
zSå
[0]=='-' ) zStr++;

3250  
	`°rcmp
(
zSå
, 
zO±
)==0;

3251 
	}
}

3256 
	$shñlDñëeFûe
(c⁄° *
zFûíame
){

3257 
rc
;

3258 #ifde‡
_WIN32


3259 
wch¨_t
 *
z
 = 
	`sqlôe3_wö32_utf8_to_unicode
(
zFûíame
);

3260 
rc
 = 
	`_wu∆ök
(
z
);

3261 
	`sqlôe3_‰ì
(
z
);

3263 
rc
 = 
	`u∆ök
(
zFûíame
);

3265  
rc
;

3266 
	}
}

3284 
	$shñlFkeyCﬁœãCœu£
(

3285 
sqlôe3_c⁄ãxt
 *
pCtx
,

3286 
nVÆ
,

3287 
sqlôe3_vÆue
 **
≠VÆ


3289 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
pCtx
);

3290 c⁄° *
zP¨ít
;

3291 c⁄° *
zP¨ítCﬁ
;

3292 c⁄° *
zP¨ítSeq
;

3293 c⁄° *
zChûd
;

3294 c⁄° *
zChûdCﬁ
;

3295 c⁄° *
zChûdSeq
 = 0;

3296 
rc
;

3298 
	`as£π
–
nVÆ
==4 );

3299 
zP¨ít
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
≠VÆ
[0]);

3300 
zP¨ítCﬁ
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
≠VÆ
[1]);

3301 
zChûd
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
≠VÆ
[2]);

3302 
zChûdCﬁ
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
≠VÆ
[3]);

3304 
	`sqlôe3_ªsu…_ãxt
(
pCtx
, "", -1, 
SQLITE_STATIC
);

3305 
rc
 = 
	`sqlôe3_èbÀ_cﬁumn_mëad©a
(

3306 
db
, "maö", 
zP¨ít
, 
zP¨ítCﬁ
, 0, &
zP¨ítSeq
, 0, 0, 0

3308 if–
rc
==
SQLITE_OK
 ){

3309 
rc
 = 
	`sqlôe3_èbÀ_cﬁumn_mëad©a
(

3310 
db
, "maö", 
zChûd
, 
zChûdCﬁ
, 0, &
zChûdSeq
, 0, 0, 0

3314 if–
rc
==
SQLITE_OK
 && 
	`sqlôe3_°ricmp
(
zP¨ítSeq
, 
zChûdSeq
) ){

3315 *
z
 = 
	`sqlôe3_m¥ötf
(" COLLATE %s", 
zP¨ítSeq
);

3316 
	`sqlôe3_ªsu…_ãxt
(
pCtx
, 
z
, -1, 
SQLITE_TRANSIENT
);

3317 
	`sqlôe3_‰ì
(
z
);

3319 
	}
}

3325 
	$lötFkeyIndexes
(

3326 
ShñlSèã
 *
pSèã
,

3327 **
azArg
,

3328 
nArg


3330 
sqlôe3
 *
db
 = 
pSèã
->db;

3331 
FILE
 *
out
 = 
pSèã
->out;

3332 
bVîbo£
 = 0;

3333 
bGroupByP¨ít
 = 0;

3334 
i
;

3335 c⁄° *
zIndít
 = "";

3336 
rc
;

3337 
sqlôe3_°mt
 *
pSql
 = 0;

3374 c⁄° *
zSql
 =

3402 
i
=2; i<
nArg
; i++){

3403 
n
 = ()
	`°æí
(
azArg
[
i
]);

3404 if–
n
>1 && 
	`sqlôe3_°∫icmp
("-vîbo£", 
azArg
[
i
],Ç)==0 ){

3405 
bVîbo£
 = 1;

3407 if–
n
>1 && 
	`sqlôe3_°∫icmp
("-groupby∑ª¡", 
azArg
[
i
],Ç)==0 ){

3408 
bGroupByP¨ít
 = 1;

3409 
zIndít
 = " ";

3412 
	`øw_¥ötf
(
°dîr
, "Usage: %s %s ?-verbose? ?-groupbyparent?\n",

3413 
azArg
[0],ázArg[1]

3415  
SQLITE_ERROR
;

3420 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "fkey_cﬁœã_˛au£", 4, 
SQLITE_UTF8
,

3421 0, 
shñlFkeyCﬁœãCœu£
, 0, 0

3425 if–
rc
==
SQLITE_OK
 ){

3426 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
db
, 
zSql
, -1, &
pSql
, 0);

3428 if–
rc
==
SQLITE_OK
 ){

3429 
	`sqlôe3_böd_öt
(
pSql
, 1, 
bGroupByP¨ít
);

3432 if–
rc
==
SQLITE_OK
 ){

3433 
rc2
;

3434 *
zPªv
 = 0;

3435  
SQLITE_ROW
==
	`sqlôe3_°ï
(
pSql
) ){

3436 
ªs
 = -1;

3437 
sqlôe3_°mt
 *
pEx∂aö
 = 0;

3438 c⁄° *
zEQP
 = (c⁄° *)
	`sqlôe3_cﬁumn_ãxt
(
pSql
, 0);

3439 c⁄° *
zGlob
 = (c⁄° *)
	`sqlôe3_cﬁumn_ãxt
(
pSql
, 1);

3440 c⁄° *
zFrom
 = (c⁄° *)
	`sqlôe3_cﬁumn_ãxt
(
pSql
, 2);

3441 c⁄° *
zT¨gë
 = (c⁄° *)
	`sqlôe3_cﬁumn_ãxt
(
pSql
, 3);

3442 c⁄° *
zCI
 = (c⁄° *)
	`sqlôe3_cﬁumn_ãxt
(
pSql
, 4);

3443 c⁄° *
zP¨ít
 = (c⁄° *)
	`sqlôe3_cﬁumn_ãxt
(
pSql
, 5);

3445 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
db
, 
zEQP
, -1, &
pEx∂aö
, 0);

3446 if–
rc
!=
SQLITE_OK
 ) ;

3447 if–
SQLITE_ROW
==
	`sqlôe3_°ï
(
pEx∂aö
) ){

3448 c⁄° *
zPœn
 = (c⁄° *)
	`sqlôe3_cﬁumn_ãxt
(
pEx∂aö
, 3);

3449 
ªs
 = (0==
	`sqlôe3_°rglob
(
zGlob
, 
zPœn
));

3451 
rc
 = 
	`sqlôe3_föÆize
(
pEx∂aö
);

3452 if–
rc
!=
SQLITE_OK
 ) ;

3454 if–
ªs
<0 ){

3455 
	`øw_¥ötf
(
°dîr
, "Error: internalÉrror");

3458 if–
bGroupByP¨ít


3459 && (
bVîbo£
 || 
ªs
==0)

3460 && (
zPªv
==0 || 
	`sqlôe3_°ricmp
(
zP¨ít
, zPrev))

3462 
	`øw_¥ötf
(
out
, "-- P¨íàèbÀ %s\n", 
zP¨ít
);

3463 
	`sqlôe3_‰ì
(
zPªv
);

3464 
zPªv
 = 
	`sqlôe3_m¥ötf
("%s", 
zP¨ít
);

3467 if–
ªs
==0 ){

3468 
	`øw_¥ötf
(
out
, "%s%†--> %s\n", 
zIndít
, 
zCI
, 
zT¨gë
);

3469 }if–
bVîbo£
 ){

3470 
	`øw_¥ötf
(
out
, "%s/*ÇoÉxtra indexesÑequired for %s -> %s */\n",

3471 
zIndít
, 
zFrom
, 
zT¨gë


3476 
	`sqlôe3_‰ì
(
zPªv
);

3478 if–
rc
!=
SQLITE_OK
 ){

3479 
	`øw_¥ötf
(
°dîr
, "%s\n", 
	`sqlôe3_îrmsg
(
db
));

3482 
rc2
 = 
	`sqlôe3_föÆize
(
pSql
);

3483 if–
rc
==
SQLITE_OK
 && 
rc2
!=SQLITE_OK ){

3484 
rc
 = 
rc2
;

3485 
	`øw_¥ötf
(
°dîr
, "%s\n", 
	`sqlôe3_îrmsg
(
db
));

3488 
	`øw_¥ötf
(
°dîr
, "%s\n", 
	`sqlôe3_îrmsg
(
db
));

3491  
rc
;

3492 
	}
}

3497 
	$lötDŸComm™d
(

3498 
ShñlSèã
 *
pSèã
,

3499 **
azArg
,

3500 
nArg


3502 
n
;

3503 
n
 = (
nArg
>=2 ? ()
	`°æí
(
azArg
[1]) : 0);

3504 if–
n
<1 || 
	`sqlôe3_°∫icmp
(
azArg
[1], "fkey-ödexes",ÇËË
ußge
;

3505  
	`lötFkeyIndexes
(
pSèã
, 
azArg
, 
nArg
);

3507 
ußge
:

3508 
	`øw_¥ötf
(
°dîr
, "Ußgê%†sub-comm™d ?swôches...?\n", 
azArg
[0]);

3509 
	`øw_¥ötf
(
°dîr
, "Where sub-commandsáre:\n");

3510 
	`øw_¥ötf
(
°dîr
, " fkey-indexes\n");

3511  
SQLITE_ERROR
;

3512 
	}
}

3521 
	$do_mëa_comm™d
(*
zLöe
, 
ShñlSèã
 *
p
){

3522 
h
 = 1;

3523 
nArg
 = 0;

3524 
n
, 
c
;

3525 
rc
 = 0;

3526 *
azArg
[50];

3530  
zLöe
[
h
] && 
nArg
<
	`AºaySize
(
azArg
) ){

3531  
	`IsS∑˚
(
zLöe
[
h
]) ){ h++; }

3532 if–
zLöe
[
h
]==0 ) ;

3533 if–
zLöe
[
h
]=='\'' || zLine[h]=='"' ){

3534 
dñim
 = 
zLöe
[
h
++];

3535 
azArg
[
nArg
++] = &
zLöe
[
h
];

3536  
zLöe
[
h
] && zLöe[h]!=
dñim
 ){

3537 if–
zLöe
[
h
]=='\\' && 
dñim
=='"' && zLine[h+1]!=0 ) h++;

3538 
h
++;

3540 if–
zLöe
[
h
]==
dñim
 ){

3541 
zLöe
[
h
++] = 0;

3543 if–
dñim
=='"' ) 
	`ªsﬁve_back¶ashes
(
azArg
[
nArg
-1]);

3545 
azArg
[
nArg
++] = &
zLöe
[
h
];

3546  
zLöe
[
h
] && !
	`IsS∑˚
(zLine[h]) ){ h++; }

3547 if–
zLöe
[
h
] ) zLine[h++] = 0;

3548 
	`ªsﬁve_back¶ashes
(
azArg
[
nArg
-1]);

3554 if–
nArg
==0 )  0;

3555 
n
 = 
	`°æí30
(
azArg
[0]);

3556 
c
 = 
azArg
[0][0];

3558 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


3559 if–
c
=='a' && 
	`°∫cmp
(
azArg
[0], "auth", 
n
)==0 ){

3560 if–
nArg
!=2 ){

3561 
	`øw_¥ötf
(
°dîr
, "Usage: .auth ON|OFF\n");

3562 
rc
 = 1;

3563 
mëa_comm™d_exô
;

3565 
	`›í_db
(
p
, 0);

3566 if–
	`boﬁónVÆue
(
azArg
[1]) ){

3567 
	`sqlôe3_£t_auth‹izî
(
p
->
db
, 
shñlAuth
,Ö);

3569 
	`sqlôe3_£t_auth‹izî
(
p
->
db
, 0, 0);

3574 if–(
c
=='b' && 
n
>=3 && 
	`°∫cmp
(
azArg
[0], "backup",Ç)==0)

3575 || (
c
=='s' && 
n
>=3 && 
	`°∫cmp
(
azArg
[0], "save",Ç)==0)

3577 c⁄° *
zDe°Fûe
 = 0;

3578 c⁄° *
zDb
 = 0;

3579 
sqlôe3
 *
pDe°
;

3580 
sqlôe3_backup
 *
pBackup
;

3581 
j
;

3582 
j
=1; j<
nArg
; j++){

3583 c⁄° *
z
 = 
azArg
[
j
];

3584 if–
z
[0]=='-' ){

3585  
z
[0]=='-' ) z++;

3588 
	`utf8_¥ötf
(
°dîr
, "unknow¿›ti⁄: %s\n", 
azArg
[
j
]);

3591 }if–
zDe°Fûe
==0 ){

3592 
zDe°Fûe
 = 
azArg
[
j
];

3593 }if–
zDb
==0 ){

3594 
zDb
 = 
zDe°Fûe
;

3595 
zDe°Fûe
 = 
azArg
[
j
];

3597 
	`øw_¥ötf
(
°dîr
, "too manyárgumentsÅo .backup\n");

3601 if–
zDe°Fûe
==0 ){

3602 
	`øw_¥ötf
(
°dîr
, "missing FILENAMEárgument on .backup\n");

3605 if–
zDb
==0 ) zDb = "main";

3606 
rc
 = 
	`sqlôe3_›í
(
zDe°Fûe
, &
pDe°
);

3607 if–
rc
!=
SQLITE_OK
 ){

3608 
	`utf8_¥ötf
(
°dîr
, "Eº‹: c™nŸ o≥¿\"%s\"\n", 
zDe°Fûe
);

3609 
	`sqlôe3_˛o£
(
pDe°
);

3612 
	`›í_db
(
p
, 0);

3613 
pBackup
 = 
	`sqlôe3_backup_öô
(
pDe°
, "maö", 
p
->
db
, 
zDb
);

3614 if–
pBackup
==0 ){

3615 
	`utf8_¥ötf
(
°dîr
, "Eº‹: %s\n", 
	`sqlôe3_îrmsg
(
pDe°
));

3616 
	`sqlôe3_˛o£
(
pDe°
);

3619  (
rc
 = 
	`sqlôe3_backup_°ï
(
pBackup
,100))==
SQLITE_OK
 ){}

3620 
	`sqlôe3_backup_föish
(
pBackup
);

3621 if–
rc
==
SQLITE_DONE
 ){

3622 
rc
 = 0;

3624 
	`utf8_¥ötf
(
°dîr
, "Eº‹: %s\n", 
	`sqlôe3_îrmsg
(
pDe°
));

3625 
rc
 = 1;

3627 
	`sqlôe3_˛o£
(
pDe°
);

3630 if–
c
=='b' && 
n
>=3 && 
	`°∫cmp
(
azArg
[0], "bail",Ç)==0 ){

3631 if–
nArg
==2 ){

3632 
baû_⁄_îr‹
 = 
	`boﬁónVÆue
(
azArg
[1]);

3634 
	`øw_¥ötf
(
°dîr
, "Usage: .bail on|off\n");

3635 
rc
 = 1;

3639 if–
c
=='b' && 
n
>=3 && 
	`°∫cmp
(
azArg
[0], "binary",Ç)==0 ){

3640 if–
nArg
==2 ){

3641 if–
	`boﬁónVÆue
(
azArg
[1]) ){

3642 
	`£tBö¨yMode
(
p
->
out
, 1);

3644 
	`£tTextMode
(
p
->
out
, 1);

3647 
	`øw_¥ötf
(
°dîr
, "Usage: .binary on|off\n");

3648 
rc
 = 1;

3655 if–
c
=='b' && 
n
>=3 && 
	`°∫cmp
(
azArg
[0], "breakpoint",Ç)==0 ){

3656 
	`ã°_bªakpoöt
();

3659 if–
c
=='c' && 
n
>=3 && 
	`°∫cmp
(
azArg
[0], "changes",Ç)==0 ){

3660 if–
nArg
==2 ){

3661 
p
->
cou¡Ch™ges
 = 
	`boﬁónVÆue
(
azArg
[1]);

3663 
	`øw_¥ötf
(
°dîr
, "Usage: .changes on|off\n");

3664 
rc
 = 1;

3672 if–
c
=='c' && 
n
>=3 && 
	`°∫cmp
(
azArg
[0], "check",Ç)==0 ){

3673 *
zRes
 = 0;

3674 
	`ouçut_ª£t
(
p
);

3675 if–
nArg
!=2 ){

3676 
	`øw_¥ötf
(
°dîr
, "Usage: .check GLOB-PATTERN\n");

3677 
rc
 = 2;

3678 }if–(
zRes
 = 
	`ªadFûe
("testcase-out.txt", 0))==0 ){

3679 
	`øw_¥ötf
(
°dîr
, "Error: cannotÑead 'testcase-out.txt'\n");

3680 
rc
 = 2;

3681 }if–
	`ã°ˇ£_glob
(
azArg
[1],
zRes
)==0 ){

3682 
	`utf8_¥ötf
(
°dîr
,

3684 
p
->
zTe°ˇ£
, 
azArg
[1], 
zRes
);

3685 
rc
 = 2;

3687 
	`utf8_¥ötf
(
°dout
, "ã°ˇ£-%†ok\n", 
p
->
zTe°ˇ£
);

3688 
p
->
nCheck
++;

3690 
	`sqlôe3_‰ì
(
zRes
);

3693 if–
c
=='c' && 
	`°∫cmp
(
azArg
[0], "˛⁄e", 
n
)==0 ){

3694 if–
nArg
==2 ){

3695 
	`åyToCl⁄e
(
p
, 
azArg
[1]);

3697 
	`øw_¥ötf
(
°dîr
, "Usage: .clone FILENAME\n");

3698 
rc
 = 1;

3702 if–
c
=='d' && 
n
>1 && 
	`°∫cmp
(
azArg
[0], "databases",Ç)==0 ){

3703 
ShñlSèã
 
d©a
;

3704 *
zEºMsg
 = 0;

3705 
	`›í_db
(
p
, 0);

3706 
	`mem˝y
(&
d©a
, 
p
, (data));

3707 
d©a
.
showHódî
 = 0;

3708 
d©a
.
cMode
 = d©a.
mode
 = 
MODE_Li°
;

3709 
	`sqlôe3_¢¥ötf
((
d©a
.
cﬁSï¨©‹
),data.colSeparator,": ");

3710 
d©a
.
˙t
 = 0;

3711 
	`sqlôe3_exec
(
p
->
db
, "SELECTÇame, file FROMÖragma_database_list",

3712 
ˇŒback
, &
d©a
, &
zEºMsg
);

3713 if–
zEºMsg
 ){

3714 
	`utf8_¥ötf
(
°dîr
,"Eº‹: %s\n", 
zEºMsg
);

3715 
	`sqlôe3_‰ì
(
zEºMsg
);

3716 
rc
 = 1;

3720 if–
c
=='d' && 
	`°∫cmp
(
azArg
[0], "dböfo", 
n
)==0 ){

3721 
rc
 = 
	`shñl_dböfo_comm™d
(
p
, 
nArg
, 
azArg
);

3724 if–
c
=='d' && 
	`°∫cmp
(
azArg
[0], "dump", 
n
)==0 ){

3725 
	`›í_db
(
p
, 0);

3729 if–
nArg
!=1 &&ÇArg!=2 ){

3730 
	`øw_¥ötf
(
°dîr
, "Usage: .dump ?LIKE-PATTERN?\n");

3731 
rc
 = 1;

3732 
mëa_comm™d_exô
;

3734 
	`øw_¥ötf
(
p
->
out
, "PRAGMA foreign_keys=OFF;\n");

3735 
	`øw_¥ötf
(
p
->
out
, "BEGIN TRANSACTION;\n");

3736 
p
->
wrôabÀSchema
 = 0;

3737 
	`sqlôe3_exec
(
p
->
db
, "SAVEPOINT dump; PRAGMA writable_schema=ON", 0, 0, 0);

3738 
p
->
nEº
 = 0;

3739 if–
nArg
==1 ){

3740 
	`run_schema_dump_quîy
(
p
,

3744 
	`run_schema_dump_quîy
(
p
,

3748 
	`run_èbÀ_dump_quîy
(
p
,

3753 
i
;

3754 
i
=1; i<
nArg
; i++){

3755 
zShñlSètic
 = 
azArg
[
i
];

3756 
	`run_schema_dump_quîy
(
p
,

3760 
	`run_èbÀ_dump_quîy
(
p
,

3766 
zShñlSètic
 = 0;

3769 if–
p
->
wrôabÀSchema
 ){

3770 
	`øw_¥ötf
(
p
->
out
, "PRAGMA writable_schema=OFF;\n");

3771 
p
->
wrôabÀSchema
 = 0;

3773 
	`sqlôe3_exec
(
p
->
db
, "PRAGMA writable_schema=OFF;", 0, 0, 0);

3774 
	`sqlôe3_exec
(
p
->
db
, "RELEASE dump;", 0, 0, 0);

3775 
	`øw_¥ötf
(
p
->
out
,Ö->
nEº
 ? "ROLLBACK; -- dueÅoÉrrors\n" : "COMMIT;\n");

3778 if–
c
=='e' && 
	`°∫cmp
(
azArg
[0], "echo", 
n
)==0 ){

3779 if–
nArg
==2 ){

3780 
p
->
echoOn
 = 
	`boﬁónVÆue
(
azArg
[1]);

3782 
	`øw_¥ötf
(
°dîr
, "Usage: .echo on|off\n");

3783 
rc
 = 1;

3787 if–
c
=='e' && 
	`°∫cmp
(
azArg
[0], "eqp", 
n
)==0 ){

3788 if–
nArg
==2 ){

3789 if–
	`°rcmp
(
azArg
[1],"full")==0 ){

3790 
p
->
autoEQP
 = 2;

3792 
p
->
autoEQP
 = 
	`boﬁónVÆue
(
azArg
[1]);

3795 
	`øw_¥ötf
(
°dîr
, "Usage: .eqp on|off|full\n");

3796 
rc
 = 1;

3800 if–
c
=='e' && 
	`°∫cmp
(
azArg
[0], "exô", 
n
)==0 ){

3801 if–
nArg
>1 && (
rc
 = ()
	`öãgîVÆue
(
azArg
[1]))!=0 ) 
	`exô
(rc);

3802 
rc
 = 2;

3805 if–
c
=='e' && 
	`°∫cmp
(
azArg
[0], "ex∂aö", 
n
)==0 ){

3806 
vÆ
 = 1;

3807 if–
nArg
>=2 ){

3808 if–
	`°rcmp
(
azArg
[1],"auto")==0 ){

3809 
vÆ
 = 99;

3811 
vÆ
 = 
	`boﬁónVÆue
(
azArg
[1]);

3814 if–
vÆ
==1 && 
p
->
mode
!=
MODE_Ex∂aö
 ){

3815 
p
->
n‹mÆMode
 =Ö->
mode
;

3816 
p
->
mode
 = 
MODE_Ex∂aö
;

3817 
p
->
autoEx∂aö
 = 0;

3818 }if–
vÆ
==0 ){

3819 if–
p
->
mode
==
MODE_Ex∂aö
 )Ö->modêp->
n‹mÆMode
;

3820 
p
->
autoEx∂aö
 = 0;

3821 }if–
vÆ
==99 ){

3822 if–
p
->
mode
==
MODE_Ex∂aö
 )Ö->modêp->
n‹mÆMode
;

3823 
p
->
autoEx∂aö
 = 1;

3827 if–
c
=='f' && 
	`°∫cmp
(
azArg
[0], "fuŒschema", 
n
)==0 ){

3828 
ShñlSèã
 
d©a
;

3829 *
zEºMsg
 = 0;

3830 
doSèts
 = 0;

3831 
	`mem˝y
(&
d©a
, 
p
, (data));

3832 
d©a
.
showHódî
 = 0;

3833 
d©a
.
cMode
 = d©a.
mode
 = 
MODE_Semi
;

3834 if–
nArg
==2 && 
	`›ti⁄M©ch
(
azArg
[1], "indent") ){

3835 
d©a
.
cMode
 = d©a.
mode
 = 
MODE_Pªây
;

3836 
nArg
 = 1;

3838 if–
nArg
!=1 ){

3839 
	`øw_¥ötf
(
°dîr
, "Usage: .fullschema ?--indent?\n");

3840 
rc
 = 1;

3841 
mëa_comm™d_exô
;

3843 
	`›í_db
(
p
, 0);

3844 
rc
 = 
	`sqlôe3_exec
(
p
->
db
,

3851 
ˇŒback
, &
d©a
, &
zEºMsg


3853 if–
rc
==
SQLITE_OK
 ){

3854 
sqlôe3_°mt
 *
pStmt
;

3855 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
p
->
db
,

3858 -1, &
pStmt
, 0);

3859 
doSèts
 = 
	`sqlôe3_°ï
(
pStmt
)==
SQLITE_ROW
;

3860 
	`sqlôe3_föÆize
(
pStmt
);

3862 if–
doSèts
==0 ){

3863 
	`øw_¥ötf
(
p
->
out
, "/* No STATÅablesávailable */\n");

3865 
	`øw_¥ötf
(
p
->
out
, "ANALYZE sqlite_master;\n");

3866 
	`sqlôe3_exec
(
p
->
db
, "SELECT 'ANALYZE sqlite_master'",

3867 
ˇŒback
, &
d©a
, &
zEºMsg
);

3868 
d©a
.
cMode
 = d©a.
mode
 = 
MODE_In£π
;

3869 
d©a
.
zDe°TabÀ
 = "sqlite_stat1";

3870 
	`shñl_exec
(
p
->
db
, "SELECT * FROM sqlite_stat1",

3871 
shñl_ˇŒback
, &
d©a
,&
zEºMsg
);

3872 
d©a
.
zDe°TabÀ
 = "sqlite_stat3";

3873 
	`shñl_exec
(
p
->
db
, "SELECT * FROM sqlite_stat3",

3874 
shñl_ˇŒback
, &
d©a
,&
zEºMsg
);

3875 
d©a
.
zDe°TabÀ
 = "sqlite_stat4";

3876 
	`shñl_exec
(
p
->
db
, "SELECT * FROM sqlite_stat4",

3877 
shñl_ˇŒback
, &
d©a
, &
zEºMsg
);

3878 
	`øw_¥ötf
(
p
->
out
, "ANALYZE sqlite_master;\n");

3882 if–
c
=='h' && 
	`°∫cmp
(
azArg
[0], "hódîs", 
n
)==0 ){

3883 if–
nArg
==2 ){

3884 
p
->
showHódî
 = 
	`boﬁónVÆue
(
azArg
[1]);

3886 
	`øw_¥ötf
(
°dîr
, "Usage: .headers on|off\n");

3887 
rc
 = 1;

3891 if–
c
=='h' && 
	`°∫cmp
(
azArg
[0], "hñp", 
n
)==0 ){

3892 
	`utf8_¥ötf
(
p
->
out
, "%s", 
zHñp
);

3895 if–
c
=='i' && 
	`°∫cmp
(
azArg
[0], "imp‹t", 
n
)==0 ){

3896 *
zTabÀ
;

3897 *
zFûe
;

3898 
sqlôe3_°mt
 *
pStmt
 = 
NULL
;

3899 
nCﬁ
;

3900 
nByã
;

3901 
i
, 
j
;

3902 
√edCommô
;

3903 
nSï
;

3904 *
zSql
;

3905 
Imp‹tCtx
 
sCtx
;

3906 *(
SQLITE_CDECL
 *
xRód
)(
Imp‹tCtx
*);

3907 (
SQLITE_CDECL
 *
xClo£r
)(
FILE
*);

3909 if–
nArg
!=3 ){

3910 
	`øw_¥ötf
(
°dîr
, "Usage: .import FILE TABLE\n");

3911 
mëa_comm™d_exô
;

3913 
zFûe
 = 
azArg
[1];

3914 
zTabÀ
 = 
azArg
[2];

3915 
£íI¡îru±
 = 0;

3916 
	`mem£t
(&
sCtx
, 0, (sCtx));

3917 
	`›í_db
(
p
, 0);

3918 
nSï
 = 
	`°æí30
(
p
->
cﬁSï¨©‹
);

3919 if–
nSï
==0 ){

3920 
	`øw_¥ötf
(
°dîr
,

3924 if–
nSï
>1 ){

3925 
	`øw_¥ötf
(
°dîr
, "Error: multi-character column separatorsÇotállowed"

3929 
nSï
 = 
	`°æí30
(
p
->
rowSï¨©‹
);

3930 if–
nSï
==0 ){

3931 
	`øw_¥ötf
(
°dîr
, "Error:Çon-nullÑow separatorÑequired for import\n");

3934 if–
nSï
==2 && 
p
->
mode
==
MODE_Csv
 && 
	`°rcmp
’->
rowSï¨©‹
, 
SEP_CrLf
)==0 ){

3939 
	`sqlôe3_¢¥ötf
((
p
->
rowSï¨©‹
),Ö->rowSï¨©‹, 
SEP_Row
);

3940 
nSï
 = 
	`°æí30
(
p
->
rowSï¨©‹
);

3942 if–
nSï
>1 ){

3943 
	`øw_¥ötf
(
°dîr
, "Error: multi-characterÑow separatorsÇotállowed"

3947 
sCtx
.
zFûe
 = zFile;

3948 
sCtx
.
nLöe
 = 1;

3949 if–
sCtx
.
zFûe
[0]=='|' ){

3950 #ifde‡
SQLITE_OMIT_POPEN


3951 
	`øw_¥ötf
(
°dîr
, "Error:ÖipesáreÇot supported inÅhis OS\n");

3954 
sCtx
.
ö
 = 
	`p›í
(sCtx.
zFûe
+1, "r");

3955 
sCtx
.
zFûe
 = "<pipe>";

3956 
xClo£r
 = 
p˛o£
;

3959 
sCtx
.
ö
 = 
	`f›í
(sCtx.
zFûe
, "rb");

3960 
xClo£r
 = 
f˛o£
;

3962 if–
p
->
mode
==
MODE_Ascii
 ){

3963 
xRód
 = 
ascii_ªad_⁄e_fõld
;

3965 
xRód
 = 
csv_ªad_⁄e_fõld
;

3967 if–
sCtx
.
ö
==0 ){

3968 
	`utf8_¥ötf
(
°dîr
, "Eº‹: c™nŸ o≥¿\"%s\"\n", 
zFûe
);

3971 
sCtx
.
cCﬁSï
 = 
p
->
cﬁSï¨©‹
[0];

3972 
sCtx
.
cRowSï
 = 
p
->
rowSï¨©‹
[0];

3973 
zSql
 = 
	`sqlôe3_m¥ötf
("SELECT * FROM %s", 
zTabÀ
);

3974 if–
zSql
==0 ){

3975 
	`øw_¥ötf
(
°dîr
, "Error: out of memory\n");

3976 
	`xClo£r
(
sCtx
.
ö
);

3979 
nByã
 = 
	`°æí30
(
zSql
);

3980 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
p
->
db
, 
zSql
, -1, &
pStmt
, 0);

3981 
	`imp‹t_≠≥nd_ch¨
(&
sCtx
, 0);

3982 if–
rc
 && 
	`sqlôe3_°rglob
("nÿsuchÅabÀ: *", 
	`sqlôe3_îrmsg
(
p
->
db
))==0 ){

3983 *
zCª©e
 = 
	`sqlôe3_m¥ötf
("CREATE TABLE %s", 
zTabÀ
);

3984 
cSï
 = '(';

3985  
	`xRód
(&
sCtx
) ){

3986 
zCª©e
 = 
	`sqlôe3_m¥ötf
("%z%c\¿ \"%w\" TEXT", zCª©e, 
cSï
, 
sCtx
.
z
);

3987 
cSï
 = ',';

3988 if–
sCtx
.
cTîm
!=sCtx.
cCﬁSï
 ) ;

3990 if–
cSï
=='(' ){

3991 
	`sqlôe3_‰ì
(
zCª©e
);

3992 
	`sqlôe3_‰ì
(
sCtx
.
z
);

3993 
	`xClo£r
(
sCtx
.
ö
);

3994 
	`utf8_¥ötf
(
°dîr
,"%s:Ém±y fûe\n", 
sCtx
.
zFûe
);

3997 
zCª©e
 = 
	`sqlôe3_m¥ötf
("%z\n)", zCreate);

3998 
rc
 = 
	`sqlôe3_exec
(
p
->
db
, 
zCª©e
, 0, 0, 0);

3999 
	`sqlôe3_‰ì
(
zCª©e
);

4000 if–
rc
 ){

4001 
	`utf8_¥ötf
(
°dîr
, "CREATE TABLE %s(...ËÁûed: %s\n", 
zTabÀ
,

4002 
	`sqlôe3_îrmsg
(
p
->
db
));

4003 
	`sqlôe3_‰ì
(
sCtx
.
z
);

4004 
	`xClo£r
(
sCtx
.
ö
);

4007 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
p
->
db
, 
zSql
, -1, &
pStmt
, 0);

4009 
	`sqlôe3_‰ì
(
zSql
);

4010 if–
rc
 ){

4011 i‡(
pStmt
Ë
	`sqlôe3_föÆize
(pStmt);

4012 
	`utf8_¥ötf
(
°dîr
,"Eº‹: %s\n", 
	`sqlôe3_îrmsg
(
p
->
db
));

4013 
	`xClo£r
(
sCtx
.
ö
);

4016 
nCﬁ
 = 
	`sqlôe3_cﬁumn_cou¡
(
pStmt
);

4017 
	`sqlôe3_föÆize
(
pStmt
);

4018 
pStmt
 = 0;

4019 if–
nCﬁ
==0 )  0;

4020 
zSql
 = 
	`sqlôe3_mÆloc64
–
nByã
*2 + 20 + 
nCﬁ
*2 );

4021 if–
zSql
==0 ){

4022 
	`øw_¥ötf
(
°dîr
, "Error: out of memory\n");

4023 
	`xClo£r
(
sCtx
.
ö
);

4026 
	`sqlôe3_¢¥ötf
(
nByã
+20, 
zSql
, "INSERT INTO \"%w\" VALUES(?", 
zTabÀ
);

4027 
j
 = 
	`°æí30
(
zSql
);

4028 
i
=1; i<
nCﬁ
; i++){

4029 
zSql
[
j
++] = ',';

4030 
zSql
[
j
++] = '?';

4032 
zSql
[
j
++] = ')';

4033 
zSql
[
j
] = 0;

4034 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
p
->
db
, 
zSql
, -1, &
pStmt
, 0);

4035 
	`sqlôe3_‰ì
(
zSql
);

4036 if–
rc
 ){

4037 
	`utf8_¥ötf
(
°dîr
, "Eº‹: %s\n", 
	`sqlôe3_îrmsg
(
p
->
db
));

4038 i‡(
pStmt
Ë
	`sqlôe3_föÆize
(pStmt);

4039 
	`xClo£r
(
sCtx
.
ö
);

4042 
√edCommô
 = 
	`sqlôe3_gë_autocommô
(
p
->
db
);

4043 if–
√edCommô
 ) 
	`sqlôe3_exec
(
p
->
db
, "BEGIN", 0, 0, 0);

4045 
°¨tLöe
 = 
sCtx
.
nLöe
;

4046 
i
=0; i<
nCﬁ
; i++){

4047 *
z
 = 
	`xRód
(&
sCtx
);

4052 if–
z
==0 && 
i
==0 ) ;

4058 if–
p
->
mode
==
MODE_Ascii
 && (
z
==0 || z[0]==0Ë&& 
i
==0 ) ;

4059 
	`sqlôe3_böd_ãxt
(
pStmt
, 
i
+1, 
z
, -1, 
SQLITE_TRANSIENT
);

4060 if–
i
<
nCﬁ
-1 && 
sCtx
.
cTîm
!=sCtx.
cCﬁSï
 ){

4061 
	`utf8_¥ötf
(
°dîr
, "%s:%d:Éxpected %d columns but found %d - "

4063 
sCtx
.
zFûe
, 
°¨tLöe
, 
nCﬁ
, 
i
+1);

4064 
i
 += 2;

4065  
i
<=
nCﬁ
 ){ 
	`sqlôe3_böd_nuŒ
(
pStmt
, i); i++; }

4068 if–
sCtx
.
cTîm
==sCtx.
cCﬁSï
 ){

4070 
	`xRód
(&
sCtx
);

4071 
i
++;

4072 } 
sCtx
.
cTîm
==sCtx.
cCﬁSï
 );

4073 
	`utf8_¥ötf
(
°dîr
, "%s:%d:Éxpected %d columns but found %d - "

4075 
sCtx
.
zFûe
, 
°¨tLöe
, 
nCﬁ
, 
i
);

4077 if–
i
>=
nCﬁ
 ){

4078 
	`sqlôe3_°ï
(
pStmt
);

4079 
rc
 = 
	`sqlôe3_ª£t
(
pStmt
);

4080 if–
rc
!=
SQLITE_OK
 ){

4081 
	`utf8_¥ötf
(
°dîr
, "%s:%d: INSERT faûed: %s\n", 
sCtx
.
zFûe
,

4082 
°¨tLöe
, 
	`sqlôe3_îrmsg
(
p
->
db
));

4085 } 
sCtx
.
cTîm
!=
EOF
 );

4087 
	`xClo£r
(
sCtx
.
ö
);

4088 
	`sqlôe3_‰ì
(
sCtx
.
z
);

4089 
	`sqlôe3_föÆize
(
pStmt
);

4090 if–
√edCommô
 ) 
	`sqlôe3_exec
(
p
->
db
, "COMMIT", 0, 0, 0);

4093 #i‚de‡
SQLITE_UNTESTABLE


4094 if–
c
=='i' && 
	`°∫cmp
(
azArg
[0], "impo°î", 
n
)==0 ){

4095 *
zSql
;

4096 *
zCﬁli°
 = 0;

4097 
sqlôe3_°mt
 *
pStmt
;

4098 
äum
 = 0;

4099 
i
;

4100 if–
nArg
!=3 ){

4101 
	`utf8_¥ötf
(
°dîr
, "Usage: .imposter INDEX IMPOSTER\n");

4102 
rc
 = 1;

4103 
mëa_comm™d_exô
;

4105 
	`›í_db
(
p
, 0);

4106 
zSql
 = 
	`sqlôe3_m¥ötf
("SELECTÑootpage FROM sqlite_master"

4107 " WHEREÇame='%q' ANDÅy≥='ödex'", 
azArg
[1]);

4108 
	`sqlôe3_¥ï¨e_v2
(
p
->
db
, 
zSql
, -1, &
pStmt
, 0);

4109 
	`sqlôe3_‰ì
(
zSql
);

4110 if–
	`sqlôe3_°ï
(
pStmt
)==
SQLITE_ROW
 ){

4111 
äum
 = 
	`sqlôe3_cﬁumn_öt
(
pStmt
, 0);

4113 
	`sqlôe3_föÆize
(
pStmt
);

4114 if–
äum
==0 ){

4115 
	`utf8_¥ötf
(
°dîr
, "nÿsuch index: \"%s\"\n", 
azArg
[1]);

4116 
rc
 = 1;

4117 
mëa_comm™d_exô
;

4119 
zSql
 = 
	`sqlôe3_m¥ötf
("PRAGMA index_xöfo='%q'", 
azArg
[1]);

4120 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
p
->
db
, 
zSql
, -1, &
pStmt
, 0);

4121 
	`sqlôe3_‰ì
(
zSql
);

4122 
i
 = 0;

4123  
	`sqlôe3_°ï
(
pStmt
)==
SQLITE_ROW
 ){

4124 
zLabñ
[20];

4125 c⁄° *
zCﬁ
 = (c⁄° *)
	`sqlôe3_cﬁumn_ãxt
(
pStmt
,2);

4126 
i
++;

4127 if–
zCﬁ
==0 ){

4128 if–
	`sqlôe3_cﬁumn_öt
(
pStmt
,1)==-1 ){

4129 
zCﬁ
 = "_ROWID_";

4131 
	`sqlôe3_¢¥ötf
((
zLabñ
),zLabñ,"ex¥%d",
i
);

4132 
zCﬁ
 = 
zLabñ
;

4135 if–
zCﬁli°
==0 ){

4136 
zCﬁli°
 = 
	`sqlôe3_m¥ötf
("\"%w\"", 
zCﬁ
);

4138 
zCﬁli°
 = 
	`sqlôe3_m¥ötf
("%z,\"%w\"", zCﬁli°, 
zCﬁ
);

4141 
	`sqlôe3_föÆize
(
pStmt
);

4142 
zSql
 = 
	`sqlôe3_m¥ötf
(

4144 
azArg
[2], 
zCﬁli°
, zCollist);

4145 
	`sqlôe3_‰ì
(
zCﬁli°
);

4146 
rc
 = 
	`sqlôe3_ã°_c⁄åﬁ
(
SQLITE_TESTCTRL_IMPOSTER
, 
p
->
db
, "maö", 1, 
äum
);

4147 if–
rc
==
SQLITE_OK
 ){

4148 
rc
 = 
	`sqlôe3_exec
(
p
->
db
, 
zSql
, 0, 0, 0);

4149 
	`sqlôe3_ã°_c⁄åﬁ
(
SQLITE_TESTCTRL_IMPOSTER
, 
p
->
db
, "main", 0, 0);

4150 if–
rc
 ){

4151 
	`utf8_¥ötf
(
°dîr
, "Eº‹ i¿[%s]: %s\n", 
zSql
, 
	`sqlôe3_îrmsg
(
p
->
db
));

4153 
	`utf8_¥ötf
(
°dout
, "%s;\n", 
zSql
);

4154 
	`øw_¥ötf
(
°dout
,

4159 
	`øw_¥ötf
(
°dîr
, "SQLITE_TESTCTRL_IMPOSTERÑëu∫†%d\n", 
rc
);

4160 
rc
 = 1;

4162 
	`sqlôe3_‰ì
(
zSql
);

4166 #ifde‡
SQLITE_ENABLE_IOTRACE


4167 if–
c
=='i' && 
	`°∫cmp
(
azArg
[0], "iŸø˚", 
n
)==0 ){

4168 
SQLITE_API
 (
SQLITE_CDECL
 *
sqlôe3IoTø˚
)(const *, ...);

4169 if–
iŸø˚
 && iŸø˚!=
°dout
 ) 
	`f˛o£
(iotrace);

4170 
iŸø˚
 = 0;

4171 if–
nArg
<2 ){

4172 
sqlôe3IoTø˚
 = 0;

4173 }if–
	`°rcmp
(
azArg
[1], "-")==0 ){

4174 
sqlôe3IoTø˚
 = 
iŸø˚Prötf
;

4175 
iŸø˚
 = 
°dout
;

4177 
iŸø˚
 = 
	`f›í
(
azArg
[1], "w");

4178 if–
iŸø˚
==0 ){

4179 
	`utf8_¥ötf
(
°dîr
, "Eº‹: c™nŸ o≥¿\"%s\"\n", 
azArg
[1]);

4180 
sqlôe3IoTø˚
 = 0;

4181 
rc
 = 1;

4183 
sqlôe3IoTø˚
 = 
iŸø˚Prötf
;

4189 if–
c
=='l' && 
n
>=5 && 
	`°∫cmp
(
azArg
[0], "limits",Ç)==0 ){

4191 c⁄° *
zLimôName
;

4192 
limôCode
;

4193 } 
aLimô
[] = {

4194 { "Àngth", 
SQLITE_LIMIT_LENGTH
 },

4195 { "sql_Àngth", 
SQLITE_LIMIT_SQL_LENGTH
 },

4196 { "cﬁumn", 
SQLITE_LIMIT_COLUMN
 },

4197 { "ex¥_dïth", 
SQLITE_LIMIT_EXPR_DEPTH
 },

4198 { "compound_£À˘", 
SQLITE_LIMIT_COMPOUND_SELECT
 },

4199 { "vdbe_›", 
SQLITE_LIMIT_VDBE_OP
 },

4200 { "fun˘i⁄_¨g", 
SQLITE_LIMIT_FUNCTION_ARG
 },

4201 { "©èched", 
SQLITE_LIMIT_ATTACHED
 },

4202 { "like_∑âîn_Àngth", 
SQLITE_LIMIT_LIKE_PATTERN_LENGTH
 },

4203 { "v¨übÀ_numbî", 
SQLITE_LIMIT_VARIABLE_NUMBER
 },

4204 { "åiggî_dïth", 
SQLITE_LIMIT_TRIGGER_DEPTH
 },

4205 { "w‹kî_thªads", 
SQLITE_LIMIT_WORKER_THREADS
 },

4207 
i
, 
n2
;

4208 
	`›í_db
(
p
, 0);

4209 if–
nArg
==1 ){

4210 
i
=0; i<
	`AºaySize
(
aLimô
); i++){

4211 
	`¥ötf
("%20†%d\n", 
aLimô
[
i
].
zLimôName
,

4212 
	`sqlôe3_limô
(
p
->
db
, 
aLimô
[
i
].
limôCode
, -1));

4214 }if–
nArg
>3 ){

4215 
	`øw_¥ötf
(
°dîr
, "Usage: .limit NAME ?NEW-VALUE?\n");

4216 
rc
 = 1;

4217 
mëa_comm™d_exô
;

4219 
iLimô
 = -1;

4220 
n2
 = 
	`°æí30
(
azArg
[1]);

4221 
i
=0; i<
	`AºaySize
(
aLimô
); i++){

4222 if–
	`sqlôe3_°∫icmp
(
aLimô
[
i
].
zLimôName
, 
azArg
[1], 
n2
)==0 ){

4223 if–
iLimô
<0 ){

4224 
iLimô
 = 
i
;

4226 
	`utf8_¥ötf
(
°dîr
, "ambiguou†limô: \"%s\"\n", 
azArg
[1]);

4227 
rc
 = 1;

4228 
mëa_comm™d_exô
;

4232 if–
iLimô
<0 ){

4233 
	`utf8_¥ötf
(
°dîr
, "unknownÜimit: \"%s\"\n"

4235 
azArg
[1]);

4236 
rc
 = 1;

4237 
mëa_comm™d_exô
;

4239 if–
nArg
==3 ){

4240 
	`sqlôe3_limô
(
p
->
db
, 
aLimô
[
iLimô
].
limôCode
,

4241 ()
	`öãgîVÆue
(
azArg
[2]));

4243 
	`¥ötf
("%20†%d\n", 
aLimô
[
iLimô
].
zLimôName
,

4244 
	`sqlôe3_limô
(
p
->
db
, 
aLimô
[
iLimô
].
limôCode
, -1));

4248 if–
c
=='l' && 
n
>2 && 
	`°∫cmp
(
azArg
[0], "lint",Ç)==0 ){

4249 
	`›í_db
(
p
, 0);

4250 
	`lötDŸComm™d
(
p
, 
azArg
, 
nArg
);

4253 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


4254 if–
c
=='l' && 
	`°∫cmp
(
azArg
[0], "lﬂd", 
n
)==0 ){

4255 c⁄° *
zFûe
, *
zProc
;

4256 *
zEºMsg
 = 0;

4257 if–
nArg
<2 ){

4258 
	`øw_¥ötf
(
°dîr
, "Usage: .load FILE ?ENTRYPOINT?\n");

4259 
rc
 = 1;

4260 
mëa_comm™d_exô
;

4262 
zFûe
 = 
azArg
[1];

4263 
zProc
 = 
nArg
>=3 ? 
azArg
[2] : 0;

4264 
	`›í_db
(
p
, 0);

4265 
rc
 = 
	`sqlôe3_lﬂd_exãnsi⁄
(
p
->
db
, 
zFûe
, 
zProc
, &
zEºMsg
);

4266 if–
rc
!=
SQLITE_OK
 ){

4267 
	`utf8_¥ötf
(
°dîr
, "Eº‹: %s\n", 
zEºMsg
);

4268 
	`sqlôe3_‰ì
(
zEºMsg
);

4269 
rc
 = 1;

4274 if–
c
=='l' && 
	`°∫cmp
(
azArg
[0], "log", 
n
)==0 ){

4275 if–
nArg
!=2 ){

4276 
	`øw_¥ötf
(
°dîr
, "Usage: .log FILENAME\n");

4277 
rc
 = 1;

4279 c⁄° *
zFûe
 = 
azArg
[1];

4280 
	`ouçut_fûe_˛o£
(
p
->
pLog
);

4281 
p
->
pLog
 = 
	`ouçut_fûe_›í
(
zFûe
);

4285 if–
c
=='m' && 
	`°∫cmp
(
azArg
[0], "mode", 
n
)==0 ){

4286 c⁄° *
zMode
 = 
nArg
>=2 ? 
azArg
[1] : "";

4287 
n2
 = ()
	`°æí
(
zMode
);

4288 
c2
 = 
zMode
[0];

4289 if–
c2
=='l' && 
n2
>2 && 
	`°∫cmp
(
azArg
[1],"lines",n2)==0 ){

4290 
p
->
mode
 = 
MODE_Löe
;

4291 }if–
c2
=='c' && 
	`°∫cmp
(
azArg
[1],"cﬁumns",
n2
)==0 ){

4292 
p
->
mode
 = 
MODE_Cﬁumn
;

4293 }if–
c2
=='l' && 
n2
>2 && 
	`°∫cmp
(
azArg
[1],"list",n2)==0 ){

4294 
p
->
mode
 = 
MODE_Li°
;

4295 }if–
c2
=='h' && 
	`°∫cmp
(
azArg
[1],"html",
n2
)==0 ){

4296 
p
->
mode
 = 
MODE_Html
;

4297 }if–
c2
=='t' && 
	`°∫cmp
(
azArg
[1],"t˛",
n2
)==0 ){

4298 
p
->
mode
 = 
MODE_T˛
;

4299 
	`sqlôe3_¢¥ötf
((
p
->
cﬁSï¨©‹
),Ö->cﬁSï¨©‹, 
SEP_S∑˚
);

4300 }if–
c2
=='c' && 
	`°∫cmp
(
azArg
[1],"csv",
n2
)==0 ){

4301 
p
->
mode
 = 
MODE_Csv
;

4302 
	`sqlôe3_¢¥ötf
((
p
->
cﬁSï¨©‹
),Ö->cﬁSï¨©‹, 
SEP_Comma
);

4303 
	`sqlôe3_¢¥ötf
((
p
->
rowSï¨©‹
),Ö->rowSï¨©‹, 
SEP_CrLf
);

4304 }if–
c2
=='t' && 
	`°∫cmp
(
azArg
[1],"èbs",
n2
)==0 ){

4305 
p
->
mode
 = 
MODE_Li°
;

4306 
	`sqlôe3_¢¥ötf
((
p
->
cﬁSï¨©‹
),Ö->cﬁSï¨©‹, 
SEP_Tab
);

4307 }if–
c2
=='i' && 
	`°∫cmp
(
azArg
[1],"ö£π",
n2
)==0 ){

4308 
p
->
mode
 = 
MODE_In£π
;

4309 
	`£t_èbÀ_«me
(
p
, 
nArg
>=3 ? 
azArg
[2] : "table");

4310 }if–
c2
=='q' && 
	`°∫cmp
(
azArg
[1],"quŸe",
n2
)==0 ){

4311 
p
->
mode
 = 
MODE_QuŸe
;

4312 }if–
c2
=='a' && 
	`°∫cmp
(
azArg
[1],"ascii",
n2
)==0 ){

4313 
p
->
mode
 = 
MODE_Ascii
;

4314 
	`sqlôe3_¢¥ötf
((
p
->
cﬁSï¨©‹
),Ö->cﬁSï¨©‹, 
SEP_Unô
);

4315 
	`sqlôe3_¢¥ötf
((
p
->
rowSï¨©‹
),Ö->rowSï¨©‹, 
SEP_Rec‹d
);

4317 
	`øw_¥ötf
(
°dîr
, "Error: mode should be one of: "

4319 
rc
 = 1;

4321 
p
->
cMode
 =Ö->
mode
;

4324 if–
c
=='n' && 
	`°∫cmp
(
azArg
[0], "nuŒvÆue", 
n
)==0 ){

4325 if–
nArg
==2 ){

4326 
	`sqlôe3_¢¥ötf
((
p
->
nuŒVÆue
),Ö->nullValue,

4327 "%.*s", ()
	`AºaySize
(
p
->
nuŒVÆue
)-1, 
azArg
[1]);

4329 
	`øw_¥ötf
(
°dîr
, "Usage: .nullvalue STRING\n");

4330 
rc
 = 1;

4334 if–
c
=='o' && 
	`°∫cmp
(
azArg
[0], "›í", 
n
)==0 &&Ç>=2 ){

4335 *
zNewFûíame
;

4336 
iName
 = 1;

4337 
√wFœg
 = 0;

4339 
	`£ssi⁄_˛o£_Æl
(
p
);

4340 
	`sqlôe3_˛o£
(
p
->
db
);

4341 
p
->
db
 = 0;

4342 
	`sqlôe3_‰ì
(
p
->
zFªeOnClo£
);

4343 
p
->
zFªeOnClo£
 = 0;

4345 
iName
=1; iName<
nArg
 && 
azArg
[iName][0]=='-'; iName++){

4346 c⁄° *
z
 = 
azArg
[
iName
];

4347 if–
	`›ti⁄M©ch
(
z
,"new") ){

4348 
√wFœg
 = 1;

4349 }if–
z
[0]=='-' ){

4350 
	`utf8_¥ötf
(
°dîr
, "unknow¿›ti⁄: %s\n", 
z
);

4351 
rc
 = 1;

4352 
mëa_comm™d_exô
;

4356 
zNewFûíame
 = 
nArg
>
iName
 ? 
	`sqlôe3_m¥ötf
("%s", 
azArg
[iName]) : 0;

4357 if–
zNewFûíame
 ){

4358 if–
√wFœg
 ) 
	`shñlDñëeFûe
(
zNewFûíame
);

4359 
p
->
zDbFûíame
 = 
zNewFûíame
;

4360 
	`›í_db
(
p
, 1);

4361 if–
p
->
db
==0 ){

4362 
	`utf8_¥ötf
(
°dîr
, "Eº‹: c™nŸ o≥¿'%s'\n", 
zNewFûíame
);

4363 
	`sqlôe3_‰ì
(
zNewFûíame
);

4365 
p
->
zFªeOnClo£
 = 
zNewFûíame
;

4368 if–
p
->
db
==0 ){

4370 
p
->
zDbFûíame
 = 0;

4371 
	`›í_db
(
p
, 0);

4375 if–
c
=='o'

4376 && (
	`°∫cmp
(
azArg
[0], "ouçut", 
n
)==0 || strncmp(azArg[0], "once",Ç)==0)

4378 c⁄° *
zFûe
 = 
nArg
>=2 ? 
azArg
[1] : "stdout";

4379 if–
nArg
>2 ){

4380 
	`utf8_¥ötf
(
°dîr
, "Ußge: .%†FILE\n", 
azArg
[0]);

4381 
rc
 = 1;

4382 
mëa_comm™d_exô
;

4384 if–
n
>1 && 
	`°∫cmp
(
azArg
[0], "once",Ç)==0 ){

4385 if–
nArg
<2 ){

4386 
	`øw_¥ötf
(
°dîr
, "Usage: .once FILE\n");

4387 
rc
 = 1;

4388 
mëa_comm™d_exô
;

4390 
p
->
outCou¡
 = 2;

4392 
p
->
outCou¡
 = 0;

4394 
	`ouçut_ª£t
(
p
);

4395 if–
zFûe
[0]=='|' ){

4396 #ifde‡
SQLITE_OMIT_POPEN


4397 
	`øw_¥ötf
(
°dîr
, "Error:ÖipesáreÇot supported inÅhis OS\n");

4398 
rc
 = 1;

4399 
p
->
out
 = 
°dout
;

4401 
p
->
out
 = 
	`p›í
(
zFûe
 + 1, "w");

4402 if–
p
->
out
==0 ){

4403 
	`utf8_¥ötf
(
°dîr
,"Eº‹: c™nŸ o≥¿pùê\"%s\"\n", 
zFûe
 + 1);

4404 
p
->
out
 = 
°dout
;

4405 
rc
 = 1;

4407 
	`sqlôe3_¢¥ötf
((
p
->
outfûe
),Ö->outfûe, "%s", 
zFûe
);

4411 
p
->
out
 = 
	`ouçut_fûe_›í
(
zFûe
);

4412 if–
p
->
out
==0 ){

4413 if–
	`°rcmp
(
zFûe
,"off")!=0 ){

4414 
	`utf8_¥ötf
(
°dîr
,"Eº‹: c™nŸ wrôêtÿ\"%s\"\n", 
zFûe
);

4416 
p
->
out
 = 
°dout
;

4417 
rc
 = 1;

4419 
	`sqlôe3_¢¥ötf
((
p
->
outfûe
),Ö->outfûe, "%s", 
zFûe
);

4424 if–
c
=='p' && 
n
>=3 && 
	`°∫cmp
(
azArg
[0], "print",Ç)==0 ){

4425 
i
;

4426 
i
=1; i<
nArg
; i++){

4427 if–
i
>1 ) 
	`øw_¥ötf
(
p
->
out
, " ");

4428 
	`utf8_¥ötf
(
p
->
out
, "%s", 
azArg
[
i
]);

4430 
	`øw_¥ötf
(
p
->
out
, "\n");

4433 if–
c
=='p' && 
	`°∫cmp
(
azArg
[0], "¥om±", 
n
)==0 ){

4434 if–
nArg
 >= 2) {

4435 
	`°∫˝y
(
maöProm±
,
azArg
[1],()
	`AºaySize
(mainPrompt)-1);

4437 if–
nArg
 >= 3) {

4438 
	`°∫˝y
(
c⁄töueProm±
,
azArg
[2],()
	`AºaySize
(continuePrompt)-1);

4442 if–
c
=='q' && 
	`°∫cmp
(
azArg
[0], "quô", 
n
)==0 ){

4443 
rc
 = 2;

4446 if–
c
=='r' && 
n
>=3 && 
	`°∫cmp
(
azArg
[0], "read",Ç)==0 ){

4447 
FILE
 *
Æt
;

4448 if–
nArg
!=2 ){

4449 
	`øw_¥ötf
(
°dîr
, "Usage: .read FILE\n");

4450 
rc
 = 1;

4451 
mëa_comm™d_exô
;

4453 
Æt
 = 
	`f›í
(
azArg
[1], "rb");

4454 if–
Æt
==0 ){

4455 
	`utf8_¥ötf
(
°dîr
,"Eº‹: c™nŸ o≥¿\"%s\"\n", 
azArg
[1]);

4456 
rc
 = 1;

4458 
rc
 = 
	`¥o˚ss_öput
(
p
, 
Æt
);

4459 
	`f˛o£
(
Æt
);

4463 if–
c
=='r' && 
n
>=3 && 
	`°∫cmp
(
azArg
[0], "restore",Ç)==0 ){

4464 c⁄° *
zSrcFûe
;

4465 c⁄° *
zDb
;

4466 
sqlôe3
 *
pSrc
;

4467 
sqlôe3_backup
 *
pBackup
;

4468 
nTimeout
 = 0;

4470 if–
nArg
==2 ){

4471 
zSrcFûe
 = 
azArg
[1];

4472 
zDb
 = "main";

4473 }if–
nArg
==3 ){

4474 
zSrcFûe
 = 
azArg
[2];

4475 
zDb
 = 
azArg
[1];

4477 
	`øw_¥ötf
(
°dîr
, "Usage: .restore ?DB? FILE\n");

4478 
rc
 = 1;

4479 
mëa_comm™d_exô
;

4481 
rc
 = 
	`sqlôe3_›í
(
zSrcFûe
, &
pSrc
);

4482 if–
rc
!=
SQLITE_OK
 ){

4483 
	`utf8_¥ötf
(
°dîr
, "Eº‹: c™nŸ o≥¿\"%s\"\n", 
zSrcFûe
);

4484 
	`sqlôe3_˛o£
(
pSrc
);

4487 
	`›í_db
(
p
, 0);

4488 
pBackup
 = 
	`sqlôe3_backup_öô
(
p
->
db
, 
zDb
, 
pSrc
, "main");

4489 if–
pBackup
==0 ){

4490 
	`utf8_¥ötf
(
°dîr
, "Eº‹: %s\n", 
	`sqlôe3_îrmsg
(
p
->
db
));

4491 
	`sqlôe3_˛o£
(
pSrc
);

4494  (
rc
 = 
	`sqlôe3_backup_°ï
(
pBackup
,100))==
SQLITE_OK


4495 || 
rc
==
SQLITE_BUSY
 ){

4496 if–
rc
==
SQLITE_BUSY
 ){

4497 if–
nTimeout
++ >= 3 ) ;

4498 
	`sqlôe3_¶ìp
(100);

4501 
	`sqlôe3_backup_föish
(
pBackup
);

4502 if–
rc
==
SQLITE_DONE
 ){

4503 
rc
 = 0;

4504 }if–
rc
==
SQLITE_BUSY
 ||Ñc==
SQLITE_LOCKED
 ){

4505 
	`øw_¥ötf
(
°dîr
, "Error: source database is busy\n");

4506 
rc
 = 1;

4508 
	`utf8_¥ötf
(
°dîr
, "Eº‹: %s\n", 
	`sqlôe3_îrmsg
(
p
->
db
));

4509 
rc
 = 1;

4511 
	`sqlôe3_˛o£
(
pSrc
);

4515 if–
c
=='s' && 
	`°∫cmp
(
azArg
[0], "sˇn°©s", 
n
)==0 ){

4516 if–
nArg
==2 ){

4517 
p
->
sˇn°©sOn
 = 
	`boﬁónVÆue
(
azArg
[1]);

4518 #i‚de‡
SQLITE_ENABLE_STMT_SCANSTATUS


4519 
	`øw_¥ötf
(
°dîr
, "Warning: .scanstatsÇotávailable inÅhis build.\n");

4522 
	`øw_¥ötf
(
°dîr
, "Usage: .scanstats on|off\n");

4523 
rc
 = 1;

4527 if–
c
=='s' && 
	`°∫cmp
(
azArg
[0], "schema", 
n
)==0 ){

4528 
ShñlSèã
 
d©a
;

4529 *
zEºMsg
 = 0;

4530 
	`›í_db
(
p
, 0);

4531 
	`mem˝y
(&
d©a
, 
p
, (data));

4532 
d©a
.
showHódî
 = 0;

4533 
d©a
.
cMode
 = d©a.
mode
 = 
MODE_Semi
;

4534 if–
nArg
>=2 && 
	`›ti⁄M©ch
(
azArg
[1], "indent") ){

4535 
d©a
.
cMode
 = d©a.
mode
 = 
MODE_Pªây
;

4536 
nArg
--;

4537 if–
nArg
==2 ) 
azArg
[1] =ázArg[2];

4539 if–
nArg
==2 && 
azArg
[1][0]!='-' ){

4540 
i
;

4541 
i
=0; 
azArg
[1][i]; i++ËazArg[1][i] = 
	`ToLowî
(azArg[1][i]);

4542 if–
	`°rcmp
(
azArg
[1],"sqlite_master")==0 ){

4543 *
√w_¨gv
[2], *
√w_cﬁv
[2];

4544 
√w_¨gv
[0] = "CREATE TABLE sqlite_master (\n"

4551 
√w_¨gv
[1] = 0;

4552 
√w_cﬁv
[0] = "sql";

4553 
√w_cﬁv
[1] = 0;

4554 
	`ˇŒback
(&
d©a
, 1, 
√w_¨gv
, 
√w_cﬁv
);

4555 
rc
 = 
SQLITE_OK
;

4556 }if–
	`°rcmp
(
azArg
[1],"sqlite_temp_master")==0 ){

4557 *
√w_¨gv
[2], *
√w_cﬁv
[2];

4558 
√w_¨gv
[0] = "CREATE TEMP TABLE sqlite_temp_master (\n"

4565 
√w_¨gv
[1] = 0;

4566 
√w_cﬁv
[0] = "sql";

4567 
√w_cﬁv
[1] = 0;

4568 
	`ˇŒback
(&
d©a
, 1, 
√w_¨gv
, 
√w_cﬁv
);

4569 
rc
 = 
SQLITE_OK
;

4571 
zShñlSètic
 = 
azArg
[1];

4572 
rc
 = 
	`sqlôe3_exec
(
p
->
db
,

4580 
ˇŒback
, &
d©a
, &
zEºMsg
);

4581 
zShñlSètic
 = 0;

4583 }if–
nArg
==1 ){

4584 
rc
 = 
	`sqlôe3_exec
(
p
->
db
,

4591 
ˇŒback
, &
d©a
, &
zEºMsg


4594 
	`øw_¥ötf
(
°dîr
, "Usage: .schema ?--indent? ?LIKE-PATTERN?\n");

4595 
rc
 = 1;

4596 
mëa_comm™d_exô
;

4598 if–
zEºMsg
 ){

4599 
	`utf8_¥ötf
(
°dîr
,"Eº‹: %s\n", 
zEºMsg
);

4600 
	`sqlôe3_‰ì
(
zEºMsg
);

4601 
rc
 = 1;

4602 }if–
rc
 !
SQLITE_OK
 ){

4603 
	`øw_¥ötf
(
°dîr
,"Error: querying schema information\n");

4604 
rc
 = 1;

4606 
rc
 = 0;

4610 #i‡
	`deföed
(
SQLITE_DEBUG
Ë&& deföed(
SQLITE_ENABLE_SELECTTRACE
)

4611 if–
c
=='s' && 
n
==11 && 
	`°∫cmp
(
azArg
[0], "selecttrace",Ç)==0 ){

4612 
sqlôe3Sñe˘Tø˚
 = 
	`öãgîVÆue
(
azArg
[1]);

4616 #i‡
	`deföed
(
SQLITE_ENABLE_SESSION
)

4617 if–
c
=='s' && 
	`°∫cmp
(
azArg
[0],"£ssi⁄",
n
)==0 &&Ç>=3 ){

4618 
O≥nSessi⁄
 *
pSessi⁄
 = &
p
->
aSessi⁄
[0];

4619 **
azCmd
 = &
azArg
[1];

4620 
iSes
 = 0;

4621 
nCmd
 = 
nArg
 - 1;

4622 
i
;

4623 if–
nArg
<=1 ) 
£ssi⁄_sy¡ax_îr‹
;

4624 
	`›í_db
(
p
, 0);

4625 if–
nArg
>=3 ){

4626 
iSes
=0; iSes<
p
->
nSessi⁄
; iSes++){

4627 if–
	`°rcmp
(
p
->
aSessi⁄
[
iSes
].
zName
, 
azArg
[1])==0 ) ;

4629 if–
iSes
<
p
->
nSessi⁄
 ){

4630 
pSessi⁄
 = &
p
->
aSessi⁄
[
iSes
];

4631 
azCmd
++;

4632 
nCmd
--;

4634 
pSessi⁄
 = &
p
->
aSessi⁄
[0];

4635 
iSes
 = 0;

4643 if–
	`°rcmp
(
azCmd
[0],"attach")==0 ){

4644 if–
nCmd
!=2 ) 
£ssi⁄_sy¡ax_îr‹
;

4645 if–
pSessi⁄
->
p
==0 ){

4646 
£ssi⁄_nŸ_›í
:

4647 
	`øw_¥ötf
(
°dîr
, "ERROR: No sessionsáre open\n");

4649 
rc
 = 
	`sqlôe3£ssi⁄_©èch
(
pSessi⁄
->
p
, 
azCmd
[1]);

4650 if–
rc
 ){

4651 
	`øw_¥ötf
(
°dîr
, "ERROR: sqlôe3£ssi⁄_©èch(Ëªtu∫†%d\n", 
rc
);

4652 
rc
 = 0;

4661 if–
	`°rcmp
(
azCmd
[0],"changeset")==0 || strcmp(azCmd[0],"patchset")==0 ){

4662 
FILE
 *
out
 = 0;

4663 if–
nCmd
!=2 ) 
£ssi⁄_sy¡ax_îr‹
;

4664 if–
pSessi⁄
->
p
==0 ) 
£ssi⁄_nŸ_›í
;

4665 
out
 = 
	`f›í
(
azCmd
[1], "wb");

4666 if–
out
==0 ){

4667 
	`utf8_¥ötf
(
°dîr
, "ERROR: c™nŸ o≥¿\"%s\" f‹ wrôög\n", 
azCmd
[1]);

4669 
szChng
;

4670 *
pChng
;

4671 if–
azCmd
[0][0]=='c' ){

4672 
rc
 = 
	`sqlôe3£ssi⁄_ch™ge£t
(
pSessi⁄
->
p
, &
szChng
, &
pChng
);

4674 
rc
 = 
	`sqlôe3£ssi⁄_∑tch£t
(
pSessi⁄
->
p
, &
szChng
, &
pChng
);

4676 if–
rc
 ){

4677 
	`¥ötf
("Eº‹:Éº‹ codê%d\n", 
rc
);

4678 
rc
 = 0;

4680 if–
pChng


4681 && 
	`fwrôe
(
pChng
, 
szChng
, 1, 
out
)!=1 ){

4682 
	`øw_¥ötf
(
°dîr
, "ERROR: FailedÅo writeÉntire %d-byte output\n",

4683 
szChng
);

4685 
	`sqlôe3_‰ì
(
pChng
);

4686 
	`f˛o£
(
out
);

4693 if–
	`°rcmp
(
azCmd
[0], "close")==0 ){

4694 if–
nCmd
!=1 ) 
£ssi⁄_sy¡ax_îr‹
;

4695 if–
p
->
nSessi⁄
 ){

4696 
	`£ssi⁄_˛o£
(
pSessi⁄
);

4697 
p
->
aSessi⁄
[
iSes
] =Ö->aSessi⁄[--p->
nSessi⁄
];

4704 if–
	`°rcmp
(
azCmd
[0], "enable")==0 ){

4705 
ii
;

4706 if–
nCmd
>2 ) 
£ssi⁄_sy¡ax_îr‹
;

4707 
ii
 = 
nCmd
==1 ? -1 : 
	`boﬁónVÆue
(
azCmd
[1]);

4708 if–
p
->
nSessi⁄
 ){

4709 
ii
 = 
	`sqlôe3£ssi⁄_íabÀ
(
pSessi⁄
->
p
, ii);

4710 
	`utf8_¥ötf
(
p
->
out
, "session %sÉnable flag = %d\n",

4711 
pSessi⁄
->
zName
, 
ii
);

4718 if–
	`°rcmp
(
azCmd
[0], "filter")==0 ){

4719 
ii
, 
nByã
;

4720 if–
nCmd
<2 ) 
£ssi⁄_sy¡ax_îr‹
;

4721 if–
p
->
nSessi⁄
 ){

4722 
ii
=0; ii<
pSessi⁄
->
nFûãr
; ii++){

4723 
	`sqlôe3_‰ì
(
pSessi⁄
->
azFûãr
[
ii
]);

4725 
	`sqlôe3_‰ì
(
pSessi⁄
->
azFûãr
);

4726 
nByã
 = (
pSessi⁄
->
azFûãr
[0])*(
nCmd
-1);

4727 
pSessi⁄
->
azFûãr
 = 
	`sqlôe3_mÆloc
–
nByã
 );

4728 if–
pSessi⁄
->
azFûãr
==0 ){

4729 
	`øw_¥ötf
(
°dîr
, "Error: out or memory\n");

4730 
	`exô
(1);

4732 
ii
=1; ii<
nCmd
; ii++){

4733 
pSessi⁄
->
azFûãr
[
ii
-1] = 
	`sqlôe3_m¥ötf
("%s", 
azCmd
[ii]);

4735 
pSessi⁄
->
nFûãr
 = 
ii
-1;

4742 if–
	`°rcmp
(
azCmd
[0], "indirect")==0 ){

4743 
ii
;

4744 if–
nCmd
>2 ) 
£ssi⁄_sy¡ax_îr‹
;

4745 
ii
 = 
nCmd
==1 ? -1 : 
	`boﬁónVÆue
(
azCmd
[1]);

4746 if–
p
->
nSessi⁄
 ){

4747 
ii
 = 
	`sqlôe3£ssi⁄_ödúe˘
(
pSessi⁄
->
p
, ii);

4748 
	`utf8_¥ötf
(
p
->
out
, "session %s indirect flag = %d\n",

4749 
pSessi⁄
->
zName
, 
ii
);

4756 if–
	`°rcmp
(
azCmd
[0], "isempty")==0 ){

4757 
ii
;

4758 if–
nCmd
!=1 ) 
£ssi⁄_sy¡ax_îr‹
;

4759 if–
p
->
nSessi⁄
 ){

4760 
ii
 = 
	`sqlôe3£ssi⁄_i£m±y
(
pSessi⁄
->
p
);

4761 
	`utf8_¥ötf
(
p
->
out
, "session %s isempty flag = %d\n",

4762 
pSessi⁄
->
zName
, 
ii
);

4769 if–
	`°rcmp
(
azCmd
[0],"list")==0 ){

4770 
i
=0; i<
p
->
nSessi⁄
; i++){

4771 
	`utf8_¥ötf
(
p
->
out
, "%d %s\n", 
i
,Ö->
aSessi⁄
[i].
zName
);

4779 if–
	`°rcmp
(
azCmd
[0],"open")==0 ){

4780 *
zName
;

4781 if–
nCmd
!=3 ) 
£ssi⁄_sy¡ax_îr‹
;

4782 
zName
 = 
azCmd
[2];

4783 if–
zName
[0]==0 ) 
£ssi⁄_sy¡ax_îr‹
;

4784 
i
=0; i<
p
->
nSessi⁄
; i++){

4785 if–
	`°rcmp
(
p
->
aSessi⁄
[
i
].
zName
,zName)==0 ){

4786 
	`utf8_¥ötf
(
°dîr
, "Sessi⁄ \"%s\"áÃódyÉxi°s\n", 
zName
);

4787 
mëa_comm™d_exô
;

4790 if–
p
->
nSessi⁄
>=
	`AºaySize
’->
aSessi⁄
) ){

4791 
	`øw_¥ötf
(
°dîr
, "Maximum o‡%d sessi⁄s\n", 
	`AºaySize
(
p
->
aSessi⁄
));

4792 
mëa_comm™d_exô
;

4794 
pSessi⁄
 = &
p
->
aSessi⁄
[p->
nSessi⁄
];

4795 
rc
 = 
	`sqlôe3£ssi⁄_¸óã
(
p
->
db
, 
azCmd
[1], &
pSessi⁄
->p);

4796 if–
rc
 ){

4797 
	`øw_¥ötf
(
°dîr
, "C™nŸ o≥¿£ssi⁄:Éº‹ code=%d\n", 
rc
);

4798 
rc
 = 0;

4799 
mëa_comm™d_exô
;

4801 
pSessi⁄
->
nFûãr
 = 0;

4802 
	`sqlôe3£ssi⁄_èbÀ_fûãr
(
pSessi⁄
->
p
, 
£ssi⁄_fûãr
,ÖSession);

4803 
p
->
nSessi⁄
++;

4804 
pSessi⁄
->
zName
 = 
	`sqlôe3_m¥ötf
("%s", zName);

4807 
£ssi⁄_sy¡ax_îr‹
:

4808 
	`£ssi⁄_hñp
(
p
);

4812 #ifde‡
SQLITE_DEBUG


4815 if–
c
=='s' && 
n
>=10 && 
	`°∫cmp
(
azArg
[0], "selftest-", 9)==0 ){

4816 if–
	`°∫cmp
(
azArg
[0]+9, "boﬁón", 
n
-9)==0 ){

4817 
i
, 
v
;

4818 
i
=1; i<
nArg
; i++){

4819 
v
 = 
	`boﬁónVÆue
(
azArg
[
i
]);

4820 
	`utf8_¥ötf
(
p
->
out
, "%s: %d 0x%x\n", 
azArg
[
i
], 
v
, v);

4823 if–
	`°∫cmp
(
azArg
[0]+9, "öãgî", 
n
-9)==0 ){

4824 
i
; 
sqlôe3_öt64
 
v
;

4825 
i
=1; i<
nArg
; i++){

4826 
zBuf
[200];

4827 
v
 = 
	`öãgîVÆue
(
azArg
[
i
]);

4828 
	`sqlôe3_¢¥ötf
((
zBuf
),zBuf,"%s: %Œd 0x%Œx\n", 
azArg
[
i
],
v
,v);

4829 
	`utf8_¥ötf
(
p
->
out
, "%s", 
zBuf
);

4835 if–
c
=='s' && 
	`°∫cmp
(
azArg
[0], "£∑øt‹", 
n
)==0 ){

4836 if–
nArg
<2 ||ÇArg>3 ){

4837 
	`øw_¥ötf
(
°dîr
, "Usage: .separator COL ?ROW?\n");

4838 
rc
 = 1;

4840 if–
nArg
>=2 ){

4841 
	`sqlôe3_¢¥ötf
((
p
->
cﬁSï¨©‹
),Ö->colSeparator,

4842 "%.*s", ()
	`AºaySize
(
p
->
cﬁSï¨©‹
)-1, 
azArg
[1]);

4844 if–
nArg
>=3 ){

4845 
	`sqlôe3_¢¥ötf
((
p
->
rowSï¨©‹
),Ö->rowSeparator,

4846 "%.*s", ()
	`AºaySize
(
p
->
rowSï¨©‹
)-1, 
azArg
[2]);

4850 if–
c
=='s'

4851 && (
	`°∫cmp
(
azArg
[0], "shñl", 
n
)==0 || strncmp(azArg[0],"system",n)==0)

4853 *
zCmd
;

4854 
i
, 
x
;

4855 if–
nArg
<2 ){

4856 
	`øw_¥ötf
(
°dîr
, "Usage: .system COMMAND\n");

4857 
rc
 = 1;

4858 
mëa_comm™d_exô
;

4860 
zCmd
 = 
	`sqlôe3_m¥ötf
(
	`°rchr
(
azArg
[1],' ')==0?"%s":"\"%s\"",ázArg[1]);

4861 
i
=2; i<
nArg
; i++){

4862 
zCmd
 = 
	`sqlôe3_m¥ötf
(
	`°rchr
(
azArg
[
i
],' ')==0?"%z %s":"%z \"%s\"",

4863 
zCmd
, 
azArg
[
i
]);

4865 
x
 = 
	`sy°em
(
zCmd
);

4866 
	`sqlôe3_‰ì
(
zCmd
);

4867 if–
x
 ) 
	`øw_¥ötf
(
°dîr
, "System commandÑeturns %d\n", x);

4870 if–
c
=='s' && 
	`°∫cmp
(
azArg
[0], "show", 
n
)==0 ){

4871 c⁄° *
azBoﬁ
[] = { "off", "on", "full", "unk" };

4872 
i
;

4873 if–
nArg
!=1 ){

4874 
	`øw_¥ötf
(
°dîr
, "Usage: .show\n");

4875 
rc
 = 1;

4876 
mëa_comm™d_exô
;

4878 
	`utf8_¥ötf
(
p
->
out
, "%12.12s: %s\n","echo", 
azBoﬁ
[p->
echoOn
!=0]);

4879 
	`utf8_¥ötf
(
p
->
out
, "%12.12s: %s\n","eqp", 
azBoﬁ
[p->
autoEQP
&3]);

4880 
	`utf8_¥ötf
(
p
->
out
, "%12.12s: %s\n","explain",

4881 
p
->
mode
==
MODE_Ex∂aö
 ? "⁄" :Ö->
autoEx∂aö
 ? "auto" : "off");

4882 
	`utf8_¥ötf
(
p
->
out
,"%12.12s: %s\n","hódîs", 
azBoﬁ
[p->
showHódî
!=0]);

4883 
	`utf8_¥ötf
(
p
->
out
, "%12.12s: %s\n","mode", 
modeDes¸
[p->
mode
]);

4884 
	`utf8_¥ötf
(
p
->
out
, "%12.12s: ", "nullvalue");

4885 
	`ouçut_c_°rög
(
p
->
out
,Ö->
nuŒVÆue
);

4886 
	`øw_¥ötf
(
p
->
out
, "\n");

4887 
	`utf8_¥ötf
(
p
->
out
,"%12.12s: %s\n","output",

4888 
	`°æí30
(
p
->
outfûe
) ?Ö->outfile : "stdout");

4889 
	`utf8_¥ötf
(
p
->
out
,"%12.12s: ", "colseparator");

4890 
	`ouçut_c_°rög
(
p
->
out
,Ö->
cﬁSï¨©‹
);

4891 
	`øw_¥ötf
(
p
->
out
, "\n");

4892 
	`utf8_¥ötf
(
p
->
out
,"%12.12s: ", "rowseparator");

4893 
	`ouçut_c_°rög
(
p
->
out
,Ö->
rowSï¨©‹
);

4894 
	`øw_¥ötf
(
p
->
out
, "\n");

4895 
	`utf8_¥ötf
(
p
->
out
, "%12.12s: %s\n","°©s", 
azBoﬁ
[p->
°©sOn
!=0]);

4896 
	`utf8_¥ötf
(
p
->
out
, "%12.12s: ", "width");

4897 
i
=0;i<()
	`AºaySize
(
p
->
cﬁWidth
) &&Ö->colWidth[i] != 0;i++) {

4898 
	`øw_¥ötf
(
p
->
out
, "%d ",Ö->
cﬁWidth
[
i
]);

4900 
	`øw_¥ötf
(
p
->
out
, "\n");

4901 
	`utf8_¥ötf
(
p
->
out
, "%12.12s: %s\n", "filename",

4902 
p
->
zDbFûíame
 ?Ö->zDbFilename : "");

4905 if–
c
=='s' && 
	`°∫cmp
(
azArg
[0], "°©s", 
n
)==0 ){

4906 if–
nArg
==2 ){

4907 
p
->
°©sOn
 = 
	`boﬁónVÆue
(
azArg
[1]);

4908 }if–
nArg
==1 ){

4909 
	`di•œy_°©s
(
p
->
db
,Ö, 0);

4911 
	`øw_¥ötf
(
°dîr
, "Usage: .stats ?on|off?\n");

4912 
rc
 = 1;

4916 if–(
c
=='t' && 
n
>1 && 
	`°∫cmp
(
azArg
[0], "tables",Ç)==0)

4917 || (
c
=='i' && (
	`°∫cmp
(
azArg
[0], "ödi˚s", 
n
)==0

4918 || 
	`°∫cmp
(
azArg
[0], "ödexes", 
n
)==0) )

4920 
sqlôe3_°mt
 *
pStmt
;

4921 **
azResu…
;

4922 
nRow
, 
nAŒoc
;

4923 *
zSql
 = 0;

4924 
ii
;

4925 
	`›í_db
(
p
, 0);

4926 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
p
->
db
, "PRAGMA d©aba£_li°", -1, &
pStmt
, 0);

4927 if–
rc
 )  
	`shñlD©aba£Eº‹
(
p
->
db
);

4932 if–
c
=='t' ){

4933 
zSql
 = 
	`sqlôe3_m¥ötf
(

4938 }if–
nArg
>2 ){

4942 
	`øw_¥ötf
(
°dîr
, "Usage: .indexes ?LIKE-PATTERN?\n");

4943 
rc
 = 1;

4944 
mëa_comm™d_exô
;

4946 
zSql
 = 
	`sqlôe3_m¥ötf
(

4951 
ii
=0; 
zSql
 && 
	`sqlôe3_°ï
(
pStmt
)==
SQLITE_ROW
; ii++){

4952 c⁄° *
zDbName
 = (c⁄° *)
	`sqlôe3_cﬁumn_ãxt
(
pStmt
, 1);

4953 if–
zDbName
==0 || 
ii
==0 ) ;

4954 if–
c
=='t' ){

4955 
zSql
 = 
	`sqlôe3_m¥ötf
(

4960 " ANDÇamêLIKE ?1", 
zSql
, 
zDbName
, zDbName);

4962 
zSql
 = 
	`sqlôe3_m¥ötf
(

4966 " ANDÅbl_«mêLIKE ?1", 
zSql
, 
zDbName
, zDbName);

4969 
rc
 = 
	`sqlôe3_föÆize
(
pStmt
);

4970 if–
zSql
 && 
rc
==
SQLITE_OK
 ){

4971 
zSql
 = 
	`sqlôe3_m¥ötf
("%z ORDER BY 1", zSql);

4972 if–
zSql
 ) 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
p
->
db
, zSql, -1, &
pStmt
, 0);

4974 
	`sqlôe3_‰ì
(
zSql
);

4975 if–!
zSql
 )  
	`shñlNomemEº‹
();

4976 if–
rc
 )  
	`shñlD©aba£Eº‹
(
p
->
db
);

4980 
nRow
 = 
nAŒoc
 = 0;

4981 
azResu…
 = 0;

4982 if–
nArg
>1 ){

4983 
	`sqlôe3_böd_ãxt
(
pStmt
, 1, 
azArg
[1], -1, 
SQLITE_TRANSIENT
);

4985 
	`sqlôe3_böd_ãxt
(
pStmt
, 1, "%", -1, 
SQLITE_STATIC
);

4987  
	`sqlôe3_°ï
(
pStmt
)==
SQLITE_ROW
 ){

4988 if–
nRow
>=
nAŒoc
 ){

4989 **
azNew
;

4990 
n2
 = 
nAŒoc
*2 + 10;

4991 
azNew
 = 
	`sqlôe3_ªÆloc64
(
azResu…
, ◊zResu…[0])*
n2
);

4992 if–
azNew
==0 ){

4993 
rc
 = 
	`shñlNomemEº‹
();

4996 
nAŒoc
 = 
n2
;

4997 
azResu…
 = 
azNew
;

4999 
azResu…
[
nRow
] = 
	`sqlôe3_m¥ötf
("%s", 
	`sqlôe3_cﬁumn_ãxt
(
pStmt
, 0));

5000 if–0==
azResu…
[
nRow
] ){

5001 
rc
 = 
	`shñlNomemEº‹
();

5004 
nRow
++;

5006 if–
	`sqlôe3_föÆize
(
pStmt
)!=
SQLITE_OK
 ){

5007 
rc
 = 
	`shñlD©aba£Eº‹
(
p
->
db
);

5011 if–
rc
==0 && 
nRow
>0 ){

5012 
Àn
, 
maxÀn
 = 0;

5013 
i
, 
j
;

5014 
nPrötCﬁ
, 
nPrötRow
;

5015 
i
=0; i<
nRow
; i++){

5016 
Àn
 = 
	`°æí30
(
azResu…
[
i
]);

5017 if–
Àn
>
maxÀn
 ) maxlen =Üen;

5019 
nPrötCﬁ
 = 80/(
maxÀn
+2);

5020 if–
nPrötCﬁ
<1 )ÇPrintCol = 1;

5021 
nPrötRow
 = (
nRow
 + 
nPrötCﬁ
 - 1)/nPrintCol;

5022 
i
=0; i<
nPrötRow
; i++){

5023 
j
=
i
; j<
nRow
; j+=
nPrötRow
){

5024 *
zSp
 = 
j
<
nPrötRow
 ? "" : " ";

5025 
	`utf8_¥ötf
(
p
->
out
, "%s%-*s", 
zSp
, 
maxÀn
,

5026 
azResu…
[
j
] ?ázResult[j]:"");

5028 
	`øw_¥ötf
(
p
->
out
, "\n");

5032 
ii
=0; ii<
nRow
; ii++Ë
	`sqlôe3_‰ì
(
azResu…
[ii]);

5033 
	`sqlôe3_‰ì
(
azResu…
);

5037 if–
c
=='t' && 
	`°rcmp
(
azArg
[0],"testcase")==0 ){

5038 
	`ouçut_ª£t
(
p
);

5039 
p
->
out
 = 
	`ouçut_fûe_›í
("testcase-out.txt");

5040 if–
p
->
out
==0 ){

5041 
	`øw_¥ötf
(
°dîr
, "Error: cannot open 'testcase-out.txt'\n");

5043 if–
nArg
>=2 ){

5044 
	`sqlôe3_¢¥ötf
((
p
->
zTe°ˇ£
),Ö->zTe°ˇ£, "%s", 
azArg
[1]);

5046 
	`sqlôe3_¢¥ötf
((
p
->
zTe°ˇ£
),Ö->zTestcase, "?");

5050 #i‚de‡
SQLITE_UNTESTABLE


5051 if–
c
=='t' && 
n
>=8 && 
	`°∫cmp
(
azArg
[0], "ã°˘æ",Ç)==0 && 
nArg
>=2 ){

5053 c⁄° *
zCålName
;

5054 
˘æCode
;

5055 } 
aCål
[] = {

5056 { "¥ng_ßve", 
SQLITE_TESTCTRL_PRNG_SAVE
 },

5057 { "¥ng_ª°‹e", 
SQLITE_TESTCTRL_PRNG_RESTORE
 },

5058 { "¥ng_ª£t", 
SQLITE_TESTCTRL_PRNG_RESET
 },

5059 { "bôvec_ã°", 
SQLITE_TESTCTRL_BITVEC_TEST
 },

5060 { "Áu…_ö°Æl", 
SQLITE_TESTCTRL_FAULT_INSTALL
 },

5061 { "bíign_mÆloc_hooks", 
SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS
 },

5062 { "≥ndög_byã", 
SQLITE_TESTCTRL_PENDING_BYTE
 },

5063 { "as£π", 
SQLITE_TESTCTRL_ASSERT
 },

5064 { "Æways", 
SQLITE_TESTCTRL_ALWAYS
 },

5065 { "ª£rve", 
SQLITE_TESTCTRL_RESERVE
 },

5066 { "›timiz©i⁄s", 
SQLITE_TESTCTRL_OPTIMIZATIONS
 },

5067 { "iskeyw‹d", 
SQLITE_TESTCTRL_ISKEYWORD
 },

5068 { "s¸©chmÆloc", 
SQLITE_TESTCTRL_SCRATCHMALLOC
 },

5069 { "byã‹dî", 
SQLITE_TESTCTRL_BYTEORDER
 },

5070 { "√vî_c‹ru±", 
SQLITE_TESTCTRL_NEVER_CORRUPT
 },

5071 { "impo°î", 
SQLITE_TESTCTRL_IMPOSTER
 },

5073 
ã°˘æ
 = -1;

5074 
rc2
 = 0;

5075 
i
, 
n2
;

5076 
	`›í_db
(
p
, 0);

5080 
n2
 = 
	`°æí30
(
azArg
[1]);

5081 
i
=0; i<
	`AºaySize
(
aCål
); i++){

5082 if–
	`°∫cmp
(
azArg
[1], 
aCål
[
i
].
zCålName
, 
n2
)==0 ){

5083 if–
ã°˘æ
<0 ){

5084 
ã°˘æ
 = 
aCål
[
i
].
˘æCode
;

5086 
	`utf8_¥ötf
(
°dîr
, "ambiguou†›ti⁄Çame: \"%s\"\n", 
azArg
[1]);

5087 
ã°˘æ
 = -1;

5092 if–
ã°˘æ
<0 )Åe°˘æ = ()
	`öãgîVÆue
(
azArg
[1]);

5093 if–(
ã°˘æ
<
SQLITE_TESTCTRL_FIRST
Ë|| (ã°˘æ>
SQLITE_TESTCTRL_LAST
) ){

5094 
	`utf8_¥ötf
(
°dîr
,"Eº‹: invÆidÅe°˘æ o±i⁄: %s\n", 
azArg
[1]);

5096 
ã°˘æ
){

5099 
SQLITE_TESTCTRL_OPTIMIZATIONS
:

5100 
SQLITE_TESTCTRL_RESERVE
:

5101 if–
nArg
==3 ){

5102 
›t
 = ()
	`°πﬁ
(
azArg
[2], 0, 0);

5103 
rc2
 = 
	`sqlôe3_ã°_c⁄åﬁ
(
ã°˘æ
, 
p
->
db
, 
›t
);

5104 
	`øw_¥ötf
(
p
->
out
, "%d (0x%08x)\n", 
rc2
,Ñc2);

5106 
	`utf8_¥ötf
(
°dîr
,"Error:Åestctrl %sÅakesá single int option\n",

5107 
azArg
[1]);

5112 
SQLITE_TESTCTRL_PRNG_SAVE
:

5113 
SQLITE_TESTCTRL_PRNG_RESTORE
:

5114 
SQLITE_TESTCTRL_PRNG_RESET
:

5115 
SQLITE_TESTCTRL_BYTEORDER
:

5116 if–
nArg
==2 ){

5117 
rc2
 = 
	`sqlôe3_ã°_c⁄åﬁ
(
ã°˘æ
);

5118 
	`øw_¥ötf
(
p
->
out
, "%d (0x%08x)\n", 
rc2
,Ñc2);

5120 
	`utf8_¥ötf
(
°dîr
,"Error:Åestctrl %sÅakesÇo options\n",

5121 
azArg
[1]);

5126 
SQLITE_TESTCTRL_PENDING_BYTE
:

5127 if–
nArg
==3 ){

5128 
›t
 = ()
	`öãgîVÆue
(
azArg
[2]);

5129 
rc2
 = 
	`sqlôe3_ã°_c⁄åﬁ
(
ã°˘æ
, 
›t
);

5130 
	`øw_¥ötf
(
p
->
out
, "%d (0x%08x)\n", 
rc2
,Ñc2);

5132 
	`utf8_¥ötf
(
°dîr
,"Error:Åestctrl %sÅakesá single unsigned"

5133 " i¡ o±i⁄\n", 
azArg
[1]);

5138 
SQLITE_TESTCTRL_ASSERT
:

5139 
SQLITE_TESTCTRL_ALWAYS
:

5140 
SQLITE_TESTCTRL_NEVER_CORRUPT
:

5141 if–
nArg
==3 ){

5142 
›t
 = 
	`boﬁónVÆue
(
azArg
[2]);

5143 
rc2
 = 
	`sqlôe3_ã°_c⁄åﬁ
(
ã°˘æ
, 
›t
);

5144 
	`øw_¥ötf
(
p
->
out
, "%d (0x%08x)\n", 
rc2
,Ñc2);

5146 
	`utf8_¥ötf
(
°dîr
,"Error:Åestctrl %sÅakesá single int option\n",

5147 
azArg
[1]);

5152 #ifde‡
SQLITE_N_KEYWORD


5153 
SQLITE_TESTCTRL_ISKEYWORD
:

5154 if–
nArg
==3 ){

5155 c⁄° *
›t
 = 
azArg
[2];

5156 
rc2
 = 
	`sqlôe3_ã°_c⁄åﬁ
(
ã°˘æ
, 
›t
);

5157 
	`øw_¥ötf
(
p
->
out
, "%d (0x%08x)\n", 
rc2
,Ñc2);

5159 
	`utf8_¥ötf
(
°dîr
,

5161 
azArg
[1]);

5166 
SQLITE_TESTCTRL_IMPOSTER
:

5167 if–
nArg
==5 ){

5168 
rc2
 = 
	`sqlôe3_ã°_c⁄åﬁ
(
ã°˘æ
, 
p
->
db
,

5169 
azArg
[2],

5170 
	`öãgîVÆue
(
azArg
[3]),

5171 
	`öãgîVÆue
(
azArg
[4]));

5172 
	`øw_¥ötf
(
p
->
out
, "%d (0x%08x)\n", 
rc2
,Ñc2);

5174 
	`øw_¥ötf
(
°dîr
,"Usage: .testctrl imposter dbName onoffÅnum\n");

5178 
SQLITE_TESTCTRL_BITVEC_TEST
:

5179 
SQLITE_TESTCTRL_FAULT_INSTALL
:

5180 
SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS
:

5181 
SQLITE_TESTCTRL_SCRATCHMALLOC
:

5183 
	`utf8_¥ötf
(
°dîr
,

5185 
azArg
[1]);

5191 if–
c
=='t' && 
n
>4 && 
	`°∫cmp
(
azArg
[0], "timeout",Ç)==0 ){

5192 
	`›í_db
(
p
, 0);

5193 
	`sqlôe3_busy_timeout
(
p
->
db
, 
nArg
>=2 ? ()
	`öãgîVÆue
(
azArg
[1]) : 0);

5196 if–
c
=='t' && 
n
>=5 && 
	`°∫cmp
(
azArg
[0], "timer",Ç)==0 ){

5197 if–
nArg
==2 ){

5198 
íabÀTimî
 = 
	`boﬁónVÆue
(
azArg
[1]);

5199 if–
íabÀTimî
 && !
HAS_TIMER
 ){

5200 
	`øw_¥ötf
(
°dîr
, "Error:ÅimerÇotávailable onÅhis system.\n");

5201 
íabÀTimî
 = 0;

5204 
	`øw_¥ötf
(
°dîr
, "Usage: .timer on|off\n");

5205 
rc
 = 1;

5209 if–
c
=='t' && 
	`°∫cmp
(
azArg
[0], "åa˚", 
n
)==0 ){

5210 
	`›í_db
(
p
, 0);

5211 if–
nArg
!=2 ){

5212 
	`øw_¥ötf
(
°dîr
, "Usage: .trace FILE|off\n");

5213 
rc
 = 1;

5214 
mëa_comm™d_exô
;

5216 
	`ouçut_fûe_˛o£
(
p
->
åa˚Out
);

5217 
p
->
åa˚Out
 = 
	`ouçut_fûe_›í
(
azArg
[1]);

5218 #i‡!
	`deföed
(
SQLITE_OMIT_TRACE
Ë&& !deföed(
SQLITE_OMIT_FLOATING_POINT
)

5219 if–
p
->
åa˚Out
==0 ){

5220 
	`sqlôe3_åa˚_v2
(
p
->
db
, 0, 0, 0);

5222 
	`sqlôe3_åa˚_v2
(
p
->
db
, 
SQLITE_TRACE_STMT
, 
sql_åa˚_ˇŒback
,p->
åa˚Out
);

5228 #i‡
SQLITE_USER_AUTHENTICATION


5229 if–
c
=='u' && 
	`°∫cmp
(
azArg
[0], "u£r", 
n
)==0 ){

5230 if–
nArg
<2 ){

5231 
	`øw_¥ötf
(
°dîr
, "Usage: .user SUBCOMMAND ...\n");

5232 
rc
 = 1;

5233 
mëa_comm™d_exô
;

5235 
	`›í_db
(
p
, 0);

5236 if–
	`°rcmp
(
azArg
[1],"login")==0 ){

5237 if–
nArg
!=4 ){

5238 
	`øw_¥ötf
(
°dîr
, "Usage: .userÜogin USER PASSWORD\n");

5239 
rc
 = 1;

5240 
mëa_comm™d_exô
;

5242 
rc
 = 
	`sqlôe3_u£r_authítiˇã
(
p
->
db
, 
azArg
[2],ázArg[3],

5243 ()
	`°æí
(
azArg
[3]));

5244 if–
rc
 ){

5245 
	`utf8_¥ötf
(
°dîr
, "Authítiˇti⁄ faûed f‹ u£∏%s\n", 
azArg
[2]);

5246 
rc
 = 1;

5248 }if–
	`°rcmp
(
azArg
[1],"add")==0 ){

5249 if–
nArg
!=5 ){

5250 
	`øw_¥ötf
(
°dîr
, "Usage: .userádd USER PASSWORD ISADMIN\n");

5251 
rc
 = 1;

5252 
mëa_comm™d_exô
;

5254 
rc
 = 
	`sqlôe3_u£r_add
(
p
->
db
, 
azArg
[2],

5255 
azArg
[3], ()
	`°æí
(azArg[3]),

5256 
	`boﬁónVÆue
(
azArg
[4]));

5257 if–
rc
 ){

5258 
	`øw_¥ötf
(
°dîr
, "U£r-Add faûed: %d\n", 
rc
);

5259 
rc
 = 1;

5261 }if–
	`°rcmp
(
azArg
[1],"edit")==0 ){

5262 if–
nArg
!=5 ){

5263 
	`øw_¥ötf
(
°dîr
, "Usage: .userÉdit USER PASSWORD ISADMIN\n");

5264 
rc
 = 1;

5265 
mëa_comm™d_exô
;

5267 
rc
 = 
	`sqlôe3_u£r_ch™ge
(
p
->
db
, 
azArg
[2],

5268 
azArg
[3], ()
	`°æí
(azArg[3]),

5269 
	`boﬁónVÆue
(
azArg
[4]));

5270 if–
rc
 ){

5271 
	`øw_¥ötf
(
°dîr
, "U£r-Edô faûed: %d\n", 
rc
);

5272 
rc
 = 1;

5274 }if–
	`°rcmp
(
azArg
[1],"delete")==0 ){

5275 if–
nArg
!=3 ){

5276 
	`øw_¥ötf
(
°dîr
, "Usage: .user delete USER\n");

5277 
rc
 = 1;

5278 
mëa_comm™d_exô
;

5280 
rc
 = 
	`sqlôe3_u£r_dñëe
(
p
->
db
, 
azArg
[2]);

5281 if–
rc
 ){

5282 
	`øw_¥ötf
(
°dîr
, "U£r-DñëêÁûed: %d\n", 
rc
);

5283 
rc
 = 1;

5286 
	`øw_¥ötf
(
°dîr
, "Usage: .userÜogin|add|edit|delete ...\n");

5287 
rc
 = 1;

5288 
mëa_comm™d_exô
;

5293 if–
c
=='v' && 
	`°∫cmp
(
azArg
[0], "vîsi⁄", 
n
)==0 ){

5294 
	`utf8_¥ötf
(
p
->
out
, "SQLite %s %s\n" ,

5295 
	`sqlôe3_libvîsi⁄
(), 
	`sqlôe3_sour˚id
());

5298 if–
c
=='v' && 
	`°∫cmp
(
azArg
[0], "vfsöfo", 
n
)==0 ){

5299 c⁄° *
zDbName
 = 
nArg
==2 ? 
azArg
[1] : "main";

5300 
sqlôe3_vfs
 *
pVfs
;

5301 if–
p
->
db
 ){

5302 
	`sqlôe3_fûe_c⁄åﬁ
(
p
->
db
, 
zDbName
, 
SQLITE_FCNTL_VFS_POINTER
, &
pVfs
);

5303 if–
pVfs
 ){

5304 
	`utf8_¥ötf
(
p
->
out
, "vfs.zNamê = \"%s\"\n", 
pVfs
->
zName
);

5305 
	`øw_¥ötf
(
p
->
out
, "vfs.iVîsi⁄ = %d\n", 
pVfs
->
iVîsi⁄
);

5306 
	`øw_¥ötf
(
p
->
out
, "vfs.szOsFûê = %d\n", 
pVfs
->
szOsFûe
);

5307 
	`øw_¥ötf
(
p
->
out
, "vfs.mxP©h«mê%d\n", 
pVfs
->
mxP©h«me
);

5312 if–
c
=='v' && 
	`°∫cmp
(
azArg
[0], "vf¶i°", 
n
)==0 ){

5313 
sqlôe3_vfs
 *
pVfs
;

5314 
sqlôe3_vfs
 *
pCuºít
 = 0;

5315 if–
p
->
db
 ){

5316 
	`sqlôe3_fûe_c⁄åﬁ
(
p
->
db
, "maö", 
SQLITE_FCNTL_VFS_POINTER
, &
pCuºít
);

5318 
pVfs
=
	`sqlôe3_vfs_föd
(0);ÖVfs;ÖVfsıVfs->
pNext
){

5319 
	`utf8_¥ötf
(
p
->
out
, "vfs.zNamê = \"%s\"%s\n", 
pVfs
->
zName
,

5320 
pVfs
==
pCuºít
 ? " <--- CURRENT" : "");

5321 
	`øw_¥ötf
(
p
->
out
, "vfs.iVîsi⁄ = %d\n", 
pVfs
->
iVîsi⁄
);

5322 
	`øw_¥ötf
(
p
->
out
, "vfs.szOsFûê = %d\n", 
pVfs
->
szOsFûe
);

5323 
	`øw_¥ötf
(
p
->
out
, "vfs.mxP©h«mê%d\n", 
pVfs
->
mxP©h«me
);

5324 if–
pVfs
->
pNext
 ){

5325 
	`øw_¥ötf
(
p
->
out
, "-----------------------------------\n");

5330 if–
c
=='v' && 
	`°∫cmp
(
azArg
[0], "vf¢ame", 
n
)==0 ){

5331 c⁄° *
zDbName
 = 
nArg
==2 ? 
azArg
[1] : "main";

5332 *
zVfsName
 = 0;

5333 if–
p
->
db
 ){

5334 
	`sqlôe3_fûe_c⁄åﬁ
(
p
->
db
, 
zDbName
, 
SQLITE_FCNTL_VFSNAME
, &
zVfsName
);

5335 if–
zVfsName
 ){

5336 
	`utf8_¥ötf
(
p
->
out
, "%s\n", 
zVfsName
);

5337 
	`sqlôe3_‰ì
(
zVfsName
);

5342 #i‡
	`deföed
(
SQLITE_DEBUG
Ë&& deföed(
SQLITE_ENABLE_WHERETRACE
)

5343 if–
c
=='w' && 
	`°∫cmp
(
azArg
[0], "whîëø˚", 
n
)==0 ){

5344 
sqlôe3WhîeTø˚
 = 
nArg
>=2 ? 
	`boﬁónVÆue
(
azArg
[1]) : 0xff;

5348 if–
c
=='w' && 
	`°∫cmp
(
azArg
[0], "width", 
n
)==0 ){

5349 
j
;

5350 
	`as£π
–
nArg
<=
	`AºaySize
(
azArg
) );

5351 
j
=1; j<
nArg
 && j<
	`AºaySize
(
p
->
cﬁWidth
); j++){

5352 
p
->
cﬁWidth
[
j
-1] = ()
	`öãgîVÆue
(
azArg
[j]);

5357 
	`utf8_¥ötf
(
°dîr
, "Error: unknown command or invalidárguments: "

5358 " \"%s\". E¡î \".hñp\" f‹ hñp\n", 
azArg
[0]);

5359 
rc
 = 1;

5362 
mëa_comm™d_exô
:

5363 if–
p
->
outCou¡
 ){

5364 
p
->
outCou¡
--;

5365 if–
p
->
outCou¡
==0 ) 
	`ouçut_ª£t
(p);

5367  
rc
;

5368 
	}
}

5374 
	$löe_c⁄èös_£micﬁ⁄
(c⁄° *
z
, 
N
){

5375 
i
;

5376 
i
=0; i<
N
; i++){ if–
z
[i]==';' )  1; }

5378 
	}
}

5383 
	$_Æl_whôe•a˚
(c⁄° *
z
){

5384 ; *
z
; z++){

5385 if–
	`IsS∑˚
(
z
[0]) ) ;

5386 if–*
z
=='/' && z[1]=='*' ){

5387 
z
 += 2;

5388  *
z
 && (*z!='*' || z[1]!='/') ){ z++; }

5389 if–*
z
==0 )  0;

5390 
z
++;

5393 if–*
z
=='-' && z[1]=='-' ){

5394 
z
 += 2;

5395  *
z
 && *z!='\n' ){ z++; }

5396 if–*
z
==0 )  1;

5402 
	}
}

5409 
	$löe_is_comm™d_ãrmö©‹
(c⁄° *
zLöe
){

5410  
	`IsS∑˚
(
zLöe
[0]) ){ zLine++; };

5411 if–
zLöe
[0]=='/' && 
	`_Æl_whôe•a˚
(&zLine[1]) ){

5414 if–
	`ToLowî
(
zLöe
[0])=='g' && ToLower(zLine[1])=='o'

5415 && 
	`_Æl_whôe•a˚
(&
zLöe
[2]) ){

5419 
	}
}

5425 
	$löe_is_com∂ëe
(*
zSql
, 
nSql
){

5426 
rc
;

5427 if–
zSql
==0 )  1;

5428 
zSql
[
nSql
] = ';';

5429 
zSql
[
nSql
+1] = 0;

5430 
rc
 = 
	`sqlôe3_com∂ëe
(
zSql
);

5431 
zSql
[
nSql
] = 0;

5432  
rc
;

5433 
	}
}

5438 
	$runO√SqlLöe
(
ShñlSèã
 *
p
, *
zSql
, 
FILE
 *
ö
, 
°¨éöe
){

5439 
rc
;

5440 *
zEºMsg
 = 0;

5442 
	`›í_db
(
p
, 0);

5443 if–
p
->
back¶ashOn
 ) 
	`ªsﬁve_back¶ashes
(
zSql
);

5444 
BEGIN_TIMER
;

5445 
rc
 = 
	`shñl_exec
(
p
->
db
, 
zSql
, 
shñl_ˇŒback
,Ö, &
zEºMsg
);

5446 
END_TIMER
;

5447 if–
rc
 || 
zEºMsg
 ){

5448 
zPªfix
[100];

5449 if–
ö
!=0 || !
°dö_is_öãø˘ive
 ){

5450 
	`sqlôe3_¢¥ötf
((
zPªfix
), zPrefix,

5451 "Eº‹:Çó∏löê%d:", 
°¨éöe
);

5453 
	`sqlôe3_¢¥ötf
((
zPªfix
), zPrefix, "Error:");

5455 if–
zEºMsg
!=0 ){

5456 
	`utf8_¥ötf
(
°dîr
, "%†%s\n", 
zPªfix
, 
zEºMsg
);

5457 
	`sqlôe3_‰ì
(
zEºMsg
);

5458 
zEºMsg
 = 0;

5460 
	`utf8_¥ötf
(
°dîr
, "%†%s\n", 
zPªfix
, 
	`sqlôe3_îrmsg
(
p
->
db
));

5463 }if–
p
->
cou¡Ch™ges
 ){

5464 
	`øw_¥ötf
(
p
->
out
, "changes: %3dÅotal_changes: %d\n",

5465 
	`sqlôe3_ch™ges
(
p
->
db
), 
	`sqlôe3_tŸÆ_ch™ges
(p->db));

5468 
	}
}

5480 
	$¥o˚ss_öput
(
ShñlSèã
 *
p
, 
FILE
 *
ö
){

5481 *
zLöe
 = 0;

5482 *
zSql
 = 0;

5483 
nLöe
;

5484 
nSql
 = 0;

5485 
nAŒoc
 = 0;

5486 
nSqlPri‹
 = 0;

5487 
rc
;

5488 
îrC¡
 = 0;

5489 
löío
 = 0;

5490 
°¨éöe
 = 0;

5492  
îrC¡
==0 || !
baû_⁄_îr‹
 || (
ö
==0 && 
°dö_is_öãø˘ive
) ){

5493 
	`fÊush
(
p
->
out
);

5494 
zLöe
 = 
	`⁄e_öput_löe
(
ö
, zLöe, 
nSql
>0);

5495 if–
zLöe
==0 ){

5497 if–
ö
==0 && 
°dö_is_öãø˘ive
 ) 
	`¥ötf
("\n");

5500 if–
£íI¡îru±
 ){

5501 if–
ö
!=0 ) ;

5502 
£íI¡îru±
 = 0;

5504 
löío
++;

5505 if–
nSql
==0 && 
	`_Æl_whôe•a˚
(
zLöe
) ){

5506 if–
p
->
echoOn
 ) 
	`¥ötf
("%s\n", 
zLöe
);

5509 if–
zLöe
 && zLöe[0]=='.' && 
nSql
==0 ){

5510 if–
p
->
echoOn
 ) 
	`¥ötf
("%s\n", 
zLöe
);

5511 
rc
 = 
	`do_mëa_comm™d
(
zLöe
, 
p
);

5512 if–
rc
==2 ){

5514 }if–
rc
 ){

5515 
îrC¡
++;

5519 if–
	`löe_is_comm™d_ãrmö©‹
(
zLöe
Ë&& 
	`löe_is_com∂ëe
(
zSql
, 
nSql
) ){

5520 
	`mem˝y
(
zLöe
,";",2);

5522 
nLöe
 = 
	`°æí30
(
zLöe
);

5523 if–
nSql
+
nLöe
+2>=
nAŒoc
 ){

5524 
nAŒoc
 = 
nSql
+
nLöe
+100;

5525 
zSql
 = 
	`ªÆloc
(zSql, 
nAŒoc
);

5526 if–
zSql
==0 ){

5527 
	`øw_¥ötf
(
°dîr
, "Error: out of memory\n");

5528 
	`exô
(1);

5531 
nSqlPri‹
 = 
nSql
;

5532 if–
nSql
==0 ){

5533 
i
;

5534 
i
=0; 
zLöe
[i] && 
	`IsS∑˚
(zLine[i]); i++){}

5535 
	`as£π
–
nAŒoc
>0 && 
zSql
!=0 );

5536 
	`mem˝y
(
zSql
, 
zLöe
+
i
, 
nLöe
+1-i);

5537 
°¨éöe
 = 
löío
;

5538 
nSql
 = 
nLöe
-
i
;

5540 
zSql
[
nSql
++] = '\n';

5541 
	`mem˝y
(
zSql
+
nSql
, 
zLöe
, 
nLöe
+1);

5542 
nSql
 +
nLöe
;

5544 if–
nSql
 && 
	`löe_c⁄èös_£micﬁ⁄
(&
zSql
[
nSqlPri‹
],ÇSql-nSqlPrior)

5545 && 
	`sqlôe3_com∂ëe
(
zSql
) ){

5546 
îrC¡
 +
	`runO√SqlLöe
(
p
, 
zSql
, 
ö
, 
°¨éöe
);

5547 
nSql
 = 0;

5548 if–
p
->
outCou¡
 ){

5549 
	`ouçut_ª£t
(
p
);

5550 
p
->
outCou¡
 = 0;

5552 }if–
nSql
 && 
	`_Æl_whôe•a˚
(
zSql
) ){

5553 if–
p
->
echoOn
 ) 
	`¥ötf
("%s\n", 
zSql
);

5554 
nSql
 = 0;

5557 if–
nSql
 && !
	`_Æl_whôe•a˚
(
zSql
) ){

5558 
	`runO√SqlLöe
(
p
, 
zSql
, 
ö
, 
°¨éöe
);

5560 
	`‰ì
(
zSql
);

5561 
	`‰ì
(
zLöe
);

5562  
îrC¡
>0;

5563 
	}
}

5569 *
	$föd_home_dú
(
˛órFœg
){

5570 *
home_dú
 = 
NULL
;

5571 if–
˛órFœg
 ){

5572 
	`‰ì
(
home_dú
);

5573 
home_dú
 = 0;

5576 if–
home_dú
 )  home_dir;

5578 #i‡!
	`deföed
(
_WIN32
Ë&& !deföed(
WIN32
Ë&& !deföed(
_WIN32_WCE
) \

5579 && !
	`deföed
(
__RTP__
Ë&& !deföed(
_WRS_KERNEL
)

5581 
∑sswd
 *
pwít
;

5582 
uid_t
 
uid
 = 
	`gëuid
();

5583 if–(
pwít
=
	`gëpwuid
(
uid
)Ë!
NULL
) {

5584 
home_dú
 = 
pwít
->
pw_dú
;

5589 #i‡
	`deföed
(
_WIN32_WCE
)

5592 
home_dú
 = "/";

5595 #i‡
	`deföed
(
_WIN32
Ë|| deföed(
WIN32
)

5596 i‡(!
home_dú
) {

5597 
home_dú
 = 
	`gëív
("USERPROFILE");

5601 i‡(!
home_dú
) {

5602 
home_dú
 = 
	`gëív
("HOME");

5605 #i‡
	`deföed
(
_WIN32
Ë|| deföed(
WIN32
)

5606 i‡(!
home_dú
) {

5607 *
zDrive
, *
zP©h
;

5608 
n
;

5609 
zDrive
 = 
	`gëív
("HOMEDRIVE");

5610 
zP©h
 = 
	`gëív
("HOMEPATH");

5611 if–
zDrive
 && 
zP©h
 ){

5612 
n
 = 
	`°æí30
(
zDrive
Ë+ såÀn30(
zP©h
) + 1;

5613 
home_dú
 = 
	`mÆloc
–
n
 );

5614 if–
home_dú
==0 )  0;

5615 
	`sqlôe3_¢¥ötf
(
n
, 
home_dú
, "%s%s", 
zDrive
, 
zP©h
);

5616  
home_dú
;

5618 
home_dú
 = "c:\\";

5624 if–
home_dú
 ){

5625 
n
 = 
	`°æí30
(
home_dú
) + 1;

5626 *
z
 = 
	`mÆloc
–
n
 );

5627 if–
z
 ) 
	`mem˝y
(z, 
home_dú
, 
n
);

5628 
home_dú
 = 
z
;

5631  
home_dú
;

5632 
	}
}

5640 
	$¥o˚ss_sqlôîc
(

5641 
ShñlSèã
 *
p
,

5642 c⁄° *
sqlôîc_ovîride


5644 *
home_dú
 = 
NULL
;

5645 c⁄° *
sqlôîc
 = 
sqlôîc_ovîride
;

5646 *
zBuf
 = 0;

5647 
FILE
 *
ö
 = 
NULL
;

5649 i‡(
sqlôîc
 =
NULL
) {

5650 
home_dú
 = 
	`föd_home_dú
(0);

5651 if–
home_dú
==0 ){

5652 
	`øw_¥ötf
(
°dîr
, "-- warning: cannot find home directory;"

5656 
	`sqlôe3_öôülize
();

5657 
zBuf
 = 
	`sqlôe3_m¥ötf
("%s/.sqlôîc",
home_dú
);

5658 
sqlôîc
 = 
zBuf
;

5660 
ö
 = 
	`f›í
(
sqlôîc
,"rb");

5661 if–
ö
 ){

5662 if–
°dö_is_öãø˘ive
 ){

5663 
	`utf8_¥ötf
(
°dîr
,"-- LﬂdögÑesour˚†‰om %s\n",
sqlôîc
);

5665 
	`¥o˚ss_öput
(
p
,
ö
);

5666 
	`f˛o£
(
ö
);

5668 
	`sqlôe3_‰ì
(
zBuf
);

5669 
	}
}

5674 c⁄° 
	gzO±i⁄s
[] =

5684 #i‡
deföed
(
SQLITE_ENABLE_MEMSYS3
Ë|| deföed(
SQLITE_ENABLE_MEMSYS5
)

5694 #ifde‡
SQLITE_ENABLE_MULTIPLEX


5705 #ifde‡
SQLITE_ENABLE_VFSTRACE


5709 
	$ußge
(
showDëaû
){

5710 
	`utf8_¥ötf
(
°dîr
,

5713 "i‡thêfûêd€†nŸÖªviou¶yÉxi°.\n", 
Argv0
);

5714 if–
showDëaû
 ){

5715 
	`utf8_¥ötf
(
°dîr
, "OPTIONS in˛ude:\n%s", 
zO±i⁄s
);

5717 
	`øw_¥ötf
(
°dîr
, "UseÅhe -help option forádditional information\n");

5719 
	`exô
(1);

5720 
	}
}

5725 
	$maö_öô
(
ShñlSèã
 *
d©a
) {

5726 
	`mem£t
(
d©a
, 0, (*data));

5727 
d©a
->
n‹mÆMode
 = d©a->
cMode
 = d©a->
mode
 = 
MODE_Li°
;

5728 
d©a
->
autoEx∂aö
 = 1;

5729 
	`mem˝y
(
d©a
->
cﬁSï¨©‹
,
SEP_Cﬁumn
, 2);

5730 
	`mem˝y
(
d©a
->
rowSï¨©‹
,
SEP_Row
, 2);

5731 
d©a
->
showHódî
 = 0;

5732 
d©a
->
shñlFlgs
 = 
SHFLG_Lookaside
;

5733 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_URI
, 1);

5734 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_LOG
, 
shñlLog
, 
d©a
);

5735 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_MULTITHREAD
);

5736 
	`sqlôe3_¢¥ötf
((
maöProm±
), mainPrompt,"sqlite> ");

5737 
	`sqlôe3_¢¥ötf
((
c⁄töueProm±
), continuePrompt," ...> ");

5738 
	}
}

5743 #ifde‡
_WIN32


5744 
	$¥ötBﬁd
(c⁄° *
zText
){

5745 
HANDLE
 
out
 = 
	`GëStdH™dÀ
(
STD_OUTPUT_HANDLE
);

5746 
CONSOLE_SCREEN_BUFFER_INFO
 
deÁu…S¸ìnInfo
;

5747 
	`GëC⁄sﬁeS¸ìnBuf„rInfo
(
out
, &
deÁu…S¸ìnInfo
);

5748 
	`SëC⁄sﬁeTextAâribuã
(
out
,

5749 
FOREGROUND_RED
|
FOREGROUND_INTENSITY


5751 
	`¥ötf
("%s", 
zText
);

5752 
	`SëC⁄sﬁeTextAâribuã
(
out
, 
deÁu…S¸ìnInfo
.
wAâribuãs
);

5753 
	}
}

5755 
	$¥ötBﬁd
(c⁄° *
zText
){

5756 
	`¥ötf
("\033[1m%s\033[0m", 
zText
);

5757 
	}
}

5764 *
	$cmdlöe_›ti⁄_vÆue
(
¨gc
, **
¨gv
, 
i
){

5765 if–
i
==
¨gc
 ){

5766 
	`utf8_¥ötf
(
°dîr
, "%s: Error: missingárgumentÅo %s\n",

5767 
¨gv
[0],árgv[
¨gc
-1]);

5768 
	`exô
(1);

5770  
¨gv
[
i
];

5771 
	}
}

5773 #i‚de‡
SQLITE_SHELL_IS_UTF8


5774 #i‡(
deföed
(
_WIN32
Ë|| deföed(
WIN32
)Ë&& deföed(
_MSC_VER
)

5775 
	#SQLITE_SHELL_IS_UTF8
 (0)

	)

5777 
	#SQLITE_SHELL_IS_UTF8
 (1)

	)

5781 #i‡
SQLITE_SHELL_IS_UTF8


5782 
SQLITE_CDECL
 
	$maö
(
¨gc
, **
¨gv
){

5784 
SQLITE_CDECL
 
	$wmaö
(
¨gc
, 
wch¨_t
 **
w¨gv
){

5785 **
¨gv
;

5787 *
zEºMsg
 = 0;

5788 
ShñlSèã
 
d©a
;

5789 c⁄° *
zInôFûe
 = 0;

5790 
i
;

5791 
rc
 = 0;

5792 
w¨nInmem‹yDb
 = 0;

5793 
ªadStdö
 = 1;

5794 
nCmd
 = 0;

5795 **
azCmd
 = 0;

5797 
	`£tBö¨yMode
(
°dö
, 0);

5798 
	`£tvbuf
(
°dîr
, 0, 
_IONBF
, 0);

5799 
°dö_is_öãø˘ive
 = 
	`ißây
(0);

5800 
°dout_is_c⁄sﬁe
 = 
	`ißây
(1);

5802 #i‡
USE_SYSTEM_SQLITE
+0!=1

5803 if–
	`°rcmp
(
	`sqlôe3_sour˚id
(),
SQLITE_SOURCE_ID
)!=0 ){

5804 
	`utf8_¥ötf
(
°dîr
, "SQLite headeránd source version mismatch\n%s\n%s\n",

5805 
	`sqlôe3_sour˚id
(), 
SQLITE_SOURCE_ID
);

5806 
	`exô
(1);

5809 
	`maö_öô
(&
d©a
);

5810 #i‡!
SQLITE_SHELL_IS_UTF8


5811 
	`sqlôe3_öôülize
();

5812 
¨gv
 = 
	`sqlôe3_mÆloc64
(◊rgv[0])*
¨gc
);

5813 if–
¨gv
==0 ){

5814 
	`øw_¥ötf
(
°dîr
, "out of memory\n");

5815 
	`exô
(1);

5817 
i
=0; i<
¨gc
; i++){

5818 
¨gv
[
i
] = 
	`sqlôe3_wö32_unicode_to_utf8
(
w¨gv
[i]);

5819 if–
¨gv
[
i
]==0 ){

5820 
	`øw_¥ötf
(
°dîr
, "out of memory\n");

5821 
	`exô
(1);

5825 
	`as£π
–
¨gc
>=1 && 
¨gv
 &&árgv[0] );

5826 
Argv0
 = 
¨gv
[0];

5831 #ifde‡
SIGINT


5832 
	`sig«l
(
SIGINT
, 
öãºu±_h™dÀr
);

5835 #ifde‡
SQLITE_SHELL_DBNAME_PROC


5841 
	`SQLITE_SHELL_DBNAME_PROC
(const **);

5842 
	`SQLITE_SHELL_DBNAME_PROC
(&
d©a
.
zDbFûíame
);

5843 
w¨nInmem‹yDb
 = 0;

5852 
i
=1; i<
¨gc
; i++){

5853 *
z
;

5854 
z
 = 
¨gv
[
i
];

5855 if–
z
[0]!='-' ){

5856 if–
d©a
.
zDbFûíame
==0 ){

5857 
d©a
.
zDbFûíame
 = 
z
;

5861 
ªadStdö
 = 0;

5862 
nCmd
++;

5863 
azCmd
 = 
	`ªÆloc
◊zCmd, ◊zCmd[0])*
nCmd
);

5864 if–
azCmd
==0 ){

5865 
	`øw_¥ötf
(
°dîr
, "out of memory\n");

5866 
	`exô
(1);

5868 
azCmd
[
nCmd
-1] = 
z
;

5871 if–
z
[1]=='-' ) z++;

5872 if–
	`°rcmp
(
z
,"-separator")==0

5873 || 
	`°rcmp
(
z
,"-nullvalue")==0

5874 || 
	`°rcmp
(
z
,"-newline")==0

5875 || 
	`°rcmp
(
z
,"-cmd")==0

5877 ()
	`cmdlöe_›ti⁄_vÆue
(
¨gc
, 
¨gv
, ++
i
);

5878 }if–
	`°rcmp
(
z
,"-init")==0 ){

5879 
zInôFûe
 = 
	`cmdlöe_›ti⁄_vÆue
(
¨gc
, 
¨gv
, ++
i
);

5880 }if–
	`°rcmp
(
z
,"-batch")==0 ){

5885 
°dö_is_öãø˘ive
 = 0;

5886 }if–
	`°rcmp
(
z
,"-heap")==0 ){

5887 #i‡
	`deföed
(
SQLITE_ENABLE_MEMSYS3
Ë|| deföed(
SQLITE_ENABLE_MEMSYS5
)

5888 c⁄° *
zSize
;

5889 
sqlôe3_öt64
 
szHóp
;

5891 
zSize
 = 
	`cmdlöe_›ti⁄_vÆue
(
¨gc
, 
¨gv
, ++
i
);

5892 
szHóp
 = 
	`öãgîVÆue
(
zSize
);

5893 if–
szHóp
>0x7fff0000 ) szHeap = 0x7fff0000;

5894 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_HEAP
, 
	`mÆloc
(()
szHóp
), ()szHeap, 64);

5896 ()
	`cmdlöe_›ti⁄_vÆue
(
¨gc
, 
¨gv
, ++
i
);

5898 }if–
	`°rcmp
(
z
,"-scratch")==0 ){

5899 
n
, 
sz
;

5900 
sz
 = ()
	`öãgîVÆue
(
	`cmdlöe_›ti⁄_vÆue
(
¨gc
,
¨gv
,++
i
));

5901 if–
sz
>400000 ) sz = 400000;

5902 if–
sz
<2500 ) sz = 2500;

5903 
n
 = ()
	`öãgîVÆue
(
	`cmdlöe_›ti⁄_vÆue
(
¨gc
,
¨gv
,++
i
));

5904 if–
n
>10 )Ç = 10;

5905 if–
n
<1 )Ç = 1;

5906 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_SCRATCH
, 
	`mÆloc
(
n
*
sz
+1), sz,Ç);

5907 
d©a
.
shñlFlgs
 |
SHFLG_S¸©ch
;

5908 }if–
	`°rcmp
(
z
,"-pagecache")==0 ){

5909 
n
, 
sz
;

5910 
sz
 = ()
	`öãgîVÆue
(
	`cmdlöe_›ti⁄_vÆue
(
¨gc
,
¨gv
,++
i
));

5911 if–
sz
>70000 ) sz = 70000;

5912 if–
sz
<0 ) sz = 0;

5913 
n
 = ()
	`öãgîVÆue
(
	`cmdlöe_›ti⁄_vÆue
(
¨gc
,
¨gv
,++
i
));

5914 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_PAGECACHE
,

5915 (
n
>0 && 
sz
>0Ë? 
	`mÆloc
(n*sz) : 0, sz,Ç);

5916 
d©a
.
shñlFlgs
 |
SHFLG_Pageˇche
;

5917 }if–
	`°rcmp
(
z
,"-lookaside")==0 ){

5918 
n
, 
sz
;

5919 
sz
 = ()
	`öãgîVÆue
(
	`cmdlöe_›ti⁄_vÆue
(
¨gc
,
¨gv
,++
i
));

5920 if–
sz
<0 ) sz = 0;

5921 
n
 = ()
	`öãgîVÆue
(
	`cmdlöe_›ti⁄_vÆue
(
¨gc
,
¨gv
,++
i
));

5922 if–
n
<0 )Ç = 0;

5923 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_LOOKASIDE
, 
sz
, 
n
);

5924 if–
sz
*
n
==0 ) 
d©a
.
shñlFlgs
 &~
SHFLG_Lookaside
;

5925 #ifde‡
SQLITE_ENABLE_VFSTRACE


5926 }if–
	`°rcmp
(
z
,"-vfstrace")==0 ){

5927 
	`vf°ø˚_ªgi°î
(

5928 c⁄° *
zTø˚Name
,

5929 c⁄° *
zOldVfsName
,

5930 (*
xOut
)(const *,*),

5931 *
pOutArg
,

5932 
makeDeÁu…


5934 
	`vf°ø˚_ªgi°î
("åa˚",0,((*)(c⁄° *,*))
Âuts
,
°dîr
,1);

5936 #ifde‡
SQLITE_ENABLE_MULTIPLEX


5937 }if–
	`°rcmp
(
z
,"-multiplex")==0 ){

5938 
	`sqlôe3_mu…ùÀ_öôülize
(const *,);

5939 
	`sqlôe3_mu…ùÀx_öôülize
(0, 1);

5941 }if–
	`°rcmp
(
z
,"-mmap")==0 ){

5942 
sqlôe3_öt64
 
sz
 = 
	`öãgîVÆue
(
	`cmdlöe_›ti⁄_vÆue
(
¨gc
,
¨gv
,++
i
));

5943 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_MMAP_SIZE
, 
sz
, sz);

5944 }if–
	`°rcmp
(
z
,"-vfs")==0 ){

5945 
sqlôe3_vfs
 *
pVfs
 = 
	`sqlôe3_vfs_föd
(
	`cmdlöe_›ti⁄_vÆue
(
¨gc
,
¨gv
,++
i
));

5946 if–
pVfs
 ){

5947 
	`sqlôe3_vfs_ªgi°î
(
pVfs
, 1);

5949 
	`utf8_¥ötf
(
°dîr
, "nÿsuch VFS: \"%s\"\n", 
¨gv
[
i
]);

5950 
	`exô
(1);

5954 if–
d©a
.
zDbFûíame
==0 ){

5955 #i‚de‡
SQLITE_OMIT_MEMORYDB


5956 
d©a
.
zDbFûíame
 = ":memory:";

5957 
w¨nInmem‹yDb
 = 
¨gc
==1;

5959 
	`utf8_¥ötf
(
°dîr
,"%s: Eº‹:Çÿd©aba£ fûíamê•ecifõd\n", 
Argv0
);

5963 
d©a
.
out
 = 
°dout
;

5970 if–
	`ac˚ss
(
d©a
.
zDbFûíame
, 0)==0 ){

5971 
	`›í_db
(&
d©a
, 0);

5978 
	`¥o˚ss_sqlôîc
(&
d©a
,
zInôFûe
);

5985 
i
=1; i<
¨gc
; i++){

5986 *
z
 = 
¨gv
[
i
];

5987 if–
z
[0]!='-' ) ;

5988 if–
z
[1]=='-' ){ z++; }

5989 if–
	`°rcmp
(
z
,"-init")==0 ){

5990 
i
++;

5991 }if–
	`°rcmp
(
z
,"-html")==0 ){

5992 
d©a
.
mode
 = 
MODE_Html
;

5993 }if–
	`°rcmp
(
z
,"-list")==0 ){

5994 
d©a
.
mode
 = 
MODE_Li°
;

5995 }if–
	`°rcmp
(
z
,"-line")==0 ){

5996 
d©a
.
mode
 = 
MODE_Löe
;

5997 }if–
	`°rcmp
(
z
,"-column")==0 ){

5998 
d©a
.
mode
 = 
MODE_Cﬁumn
;

5999 }if–
	`°rcmp
(
z
,"-csv")==0 ){

6000 
d©a
.
mode
 = 
MODE_Csv
;

6001 
	`mem˝y
(
d©a
.
cﬁSï¨©‹
,",",2);

6002 }if–
	`°rcmp
(
z
,"-ascii")==0 ){

6003 
d©a
.
mode
 = 
MODE_Ascii
;

6004 
	`sqlôe3_¢¥ötf
((
d©a
.
cﬁSï¨©‹
), data.colSeparator,

6005 
SEP_Unô
);

6006 
	`sqlôe3_¢¥ötf
((
d©a
.
rowSï¨©‹
), data.rowSeparator,

6007 
SEP_Rec‹d
);

6008 }if–
	`°rcmp
(
z
,"-separator")==0 ){

6009 
	`sqlôe3_¢¥ötf
((
d©a
.
cﬁSï¨©‹
), data.colSeparator,

6010 "%s",
	`cmdlöe_›ti⁄_vÆue
(
¨gc
,
¨gv
,++
i
));

6011 }if–
	`°rcmp
(
z
,"-newline")==0 ){

6012 
	`sqlôe3_¢¥ötf
((
d©a
.
rowSï¨©‹
), data.rowSeparator,

6013 "%s",
	`cmdlöe_›ti⁄_vÆue
(
¨gc
,
¨gv
,++
i
));

6014 }if–
	`°rcmp
(
z
,"-nullvalue")==0 ){

6015 
	`sqlôe3_¢¥ötf
((
d©a
.
nuŒVÆue
), data.nullValue,

6016 "%s",
	`cmdlöe_›ti⁄_vÆue
(
¨gc
,
¨gv
,++
i
));

6017 }if–
	`°rcmp
(
z
,"-header")==0 ){

6018 
d©a
.
showHódî
 = 1;

6019 }if–
	`°rcmp
(
z
,"-noheader")==0 ){

6020 
d©a
.
showHódî
 = 0;

6021 }if–
	`°rcmp
(
z
,"-echo")==0 ){

6022 
d©a
.
echoOn
 = 1;

6023 }if–
	`°rcmp
(
z
,"-eqp")==0 ){

6024 
d©a
.
autoEQP
 = 1;

6025 }if–
	`°rcmp
(
z
,"-eqpfull")==0 ){

6026 
d©a
.
autoEQP
 = 2;

6027 }if–
	`°rcmp
(
z
,"-stats")==0 ){

6028 
d©a
.
°©sOn
 = 1;

6029 }if–
	`°rcmp
(
z
,"-scanstats")==0 ){

6030 
d©a
.
sˇn°©sOn
 = 1;

6031 }if–
	`°rcmp
(
z
,"-backslash")==0 ){

6037 
d©a
.
back¶ashOn
 = 1;

6038 }if–
	`°rcmp
(
z
,"-bail")==0 ){

6039 
baû_⁄_îr‹
 = 1;

6040 }if–
	`°rcmp
(
z
,"-version")==0 ){

6041 
	`¥ötf
("%†%s\n", 
	`sqlôe3_libvîsi⁄
(), 
	`sqlôe3_sour˚id
());

6043 }if–
	`°rcmp
(
z
,"-interactive")==0 ){

6044 
°dö_is_öãø˘ive
 = 1;

6045 }if–
	`°rcmp
(
z
,"-batch")==0 ){

6046 
°dö_is_öãø˘ive
 = 0;

6047 }if–
	`°rcmp
(
z
,"-heap")==0 ){

6048 
i
++;

6049 }if–
	`°rcmp
(
z
,"-scratch")==0 ){

6050 
i
+=2;

6051 }if–
	`°rcmp
(
z
,"-pagecache")==0 ){

6052 
i
+=2;

6053 }if–
	`°rcmp
(
z
,"-lookaside")==0 ){

6054 
i
+=2;

6055 }if–
	`°rcmp
(
z
,"-mmap")==0 ){

6056 
i
++;

6057 }if–
	`°rcmp
(
z
,"-vfs")==0 ){

6058 
i
++;

6059 #ifde‡
SQLITE_ENABLE_VFSTRACE


6060 }if–
	`°rcmp
(
z
,"-vfstrace")==0 ){

6061 
i
++;

6063 #ifde‡
SQLITE_ENABLE_MULTIPLEX


6064 }if–
	`°rcmp
(
z
,"-multiplex")==0 ){

6065 
i
++;

6067 }if–
	`°rcmp
(
z
,"-help")==0 ){

6068 
	`ußge
(1);

6069 }if–
	`°rcmp
(
z
,"-cmd")==0 ){

6074 if–
i
==
¨gc
-1 ) ;

6075 
z
 = 
	`cmdlöe_›ti⁄_vÆue
(
¨gc
,
¨gv
,++
i
);

6076 if–
z
[0]=='.' ){

6077 
rc
 = 
	`do_mëa_comm™d
(
z
, &
d©a
);

6078 if–
rc
 && 
baû_⁄_îr‹
 ) Ñc==2 ? 0 :Ñc;

6080 
	`›í_db
(&
d©a
, 0);

6081 
rc
 = 
	`shñl_exec
(
d©a
.
db
, 
z
, 
shñl_ˇŒback
, &d©a, &
zEºMsg
);

6082 if–
zEºMsg
!=0 ){

6083 
	`utf8_¥ötf
(
°dîr
,"Eº‹: %s\n", 
zEºMsg
);

6084 if–
baû_⁄_îr‹
 )  
rc
!=0 ?Ñc : 1;

6085 }if–
rc
!=0 ){

6086 
	`utf8_¥ötf
(
°dîr
,"Eº‹: u«bÀÅÿ¥o˚s†SQL \"%s\"\n", 
z
);

6087 if–
baû_⁄_îr‹
 )  
rc
;

6091 
	`utf8_¥ötf
(
°dîr
,"%s: Eº‹: unknow¿›ti⁄: %s\n", 
Argv0
, 
z
);

6092 
	`øw_¥ötf
(
°dîr
,"Use -help foráÜist of options.\n");

6095 
d©a
.
cMode
 = d©a.
mode
;

6098 if–!
ªadStdö
 ){

6103 
i
=0; i<
nCmd
; i++){

6104 if–
azCmd
[
i
][0]=='.' ){

6105 
rc
 = 
	`do_mëa_comm™d
(
azCmd
[
i
], &
d©a
);

6106 if–
rc
 ) Ñc==2 ? 0 :Ñc;

6108 
	`›í_db
(&
d©a
, 0);

6109 
rc
 = 
	`shñl_exec
(
d©a
.
db
, 
azCmd
[
i
], 
shñl_ˇŒback
, &d©a, &
zEºMsg
);

6110 if–
zEºMsg
!=0 ){

6111 
	`utf8_¥ötf
(
°dîr
,"Eº‹: %s\n", 
zEºMsg
);

6112  
rc
!=0 ?Ñc : 1;

6113 }if–
rc
!=0 ){

6114 
	`utf8_¥ötf
(
°dîr
,"Eº‹: u«bÀÅÿ¥o˚s†SQL: %s\n", 
azCmd
[
i
]);

6115  
rc
;

6119 
	`‰ì
(
azCmd
);

6123 if–
°dö_is_öãø˘ive
 ){

6124 *
zHome
;

6125 *
zHi°‹y
 = 0;

6126 
nHi°‹y
;

6127 
	`¥ötf
(

6130 
	`sqlôe3_libvîsi⁄
(), 
	`sqlôe3_sour˚id
()

6132 if–
w¨nInmem‹yDb
 ){

6133 
	`¥ötf
("ConnectedÅoá ");

6134 
	`¥ötBﬁd
("transient in-memory database");

6135 
	`¥ötf
(".\nUse \".open FILENAME\"ÅoÑeopen oná "

6138 
zHome
 = 
	`föd_home_dú
(0);

6139 if–
zHome
 ){

6140 
nHi°‹y
 = 
	`°æí30
(
zHome
) + 20;

6141 if–(
zHi°‹y
 = 
	`mÆloc
(
nHi°‹y
))!=0 ){

6142 
	`sqlôe3_¢¥ötf
(
nHi°‹y
, 
zHi°‹y
,"%s/.sqlôe_hi°‹y", 
zHome
);

6145 if–
zHi°‹y
 ){ 
	`shñl_ªad_hi°‹y
(zHistory); }

6146 
rc
 = 
	`¥o˚ss_öput
(&
d©a
, 0);

6147 if–
zHi°‹y
 ){

6148 
	`shñl_°iÊe_hi°‹y
(100);

6149 
	`shñl_wrôe_hi°‹y
(
zHi°‹y
);

6150 
	`‰ì
(
zHi°‹y
);

6153 
rc
 = 
	`¥o˚ss_öput
(&
d©a
, 
°dö
);

6156 
	`£t_èbÀ_«me
(&
d©a
, 0);

6157 if–
d©a
.
db
 ){

6158 
	`£ssi⁄_˛o£_Æl
(&
d©a
);

6159 
	`sqlôe3_˛o£
(
d©a
.
db
);

6161 
	`sqlôe3_‰ì
(
d©a
.
zFªeOnClo£
);

6162 
	`föd_home_dú
(1);

6163 #i‡!
SQLITE_SHELL_IS_UTF8


6164 
i
=0; i<
¨gc
; i++Ë
	`sqlôe3_‰ì
(
¨gv
[i]);

6165 
	`sqlôe3_‰ì
(
¨gv
);

6167  
rc
;

6168 
	}
}

	@sqlite3ext.h

18 #i‚de‡
SQLITE3EXT_H


19 
	#SQLITE3EXT_H


	)

20 
	~"sqlôe3.h
"

32 
	ssqlôe3_≠i_routöes
 {

33 * (*
	maggªg©e_c⁄ãxt
)(
	msqlôe3_c⁄ãxt
*,
	mnByãs
);

34 (*
	maggªg©e_cou¡
)(
	msqlôe3_c⁄ãxt
*);

35 (*
	mböd_blob
)(
	msqlôe3_°mt
*,,c⁄° *,
	mn
,(*)(*));

36 (*
	mböd_doubÀ
)(
	msqlôe3_°mt
*,,);

37 (*
	mböd_öt
)(
	msqlôe3_°mt
*,,);

38 (*
	mböd_öt64
)(
	msqlôe3_°mt
*,,
	msqlôe_öt64
);

39 (*
	mböd_nuŒ
)(
	msqlôe3_°mt
*,);

40 (*
	mböd_∑ømëî_cou¡
)(
	msqlôe3_°mt
*);

41 (*
	mböd_∑ømëî_ödex
)(
	msqlôe3_°mt
*,c⁄° *
	mzName
);

42 c⁄° * (*
	mböd_∑ømëî_«me
)(
	msqlôe3_°mt
*,);

43 (*
	mböd_ãxt
)(
	msqlôe3_°mt
*,,c⁄° *,
	mn
,(*)(*));

44 (*
	mböd_ãxt16
)(
	msqlôe3_°mt
*,,const *,,(*)(*));

45 (*
	mböd_vÆue
)(
	msqlôe3_°mt
*,,c⁄° 
	msqlôe3_vÆue
*);

46 (*
	mbusy_h™dÀr
)(
	msqlôe3
*,(*)(*,),*);

47 (*
	mbusy_timeout
)(
	msqlôe3
*,
	mms
);

48 (*
	mch™ges
)(
	msqlôe3
*);

49 (*
	m˛o£
)(
	msqlôe3
*);

50 (*
	mcﬁœti⁄_√eded
)(
	msqlôe3
*,*,(*)(*,sqlite3*,

51 
	meTextRï
,const *));

52 (*
	mcﬁœti⁄_√eded16
)(
	msqlôe3
*,*,(*)(*,sqlite3*,

53 
	meTextRï
,const *));

54 c⁄° * (*
	mcﬁumn_blob
)(
	msqlôe3_°mt
*,
	miCﬁ
);

55 (*
	mcﬁumn_byãs
)(
	msqlôe3_°mt
*,
	miCﬁ
);

56 (*
	mcﬁumn_byãs16
)(
	msqlôe3_°mt
*,
	miCﬁ
);

57 (*
	mcﬁumn_cou¡
)(
sqlôe3_°mt
*
	mpStmt
);

58 c⁄° * (*
	mcﬁumn_d©aba£_«me
)(
	msqlôe3_°mt
*,);

59 c⁄° * (*
	mcﬁumn_d©aba£_«me16
)(
	msqlôe3_°mt
*,);

60 c⁄° * (*
	mcﬁumn_de˛ty≥
)(
	msqlôe3_°mt
*,
	mi
);

61 c⁄° * (*
	mcﬁumn_de˛ty≥16
)(
	msqlôe3_°mt
*,);

62 (*
	mcﬁumn_doubÀ
)(
	msqlôe3_°mt
*,
	miCﬁ
);

63 (*
	mcﬁumn_öt
)(
	msqlôe3_°mt
*,
	miCﬁ
);

64 
sqlôe_öt64
 (*
cﬁumn_öt64
)(
	msqlôe3_°mt
*,
	miCﬁ
);

65 c⁄° * (*
	mcﬁumn_«me
)(
	msqlôe3_°mt
*,);

66 c⁄° * (*
	mcﬁumn_«me16
)(
	msqlôe3_°mt
*,);

67 c⁄° * (*
	mcﬁumn_‹igö_«me
)(
	msqlôe3_°mt
*,);

68 c⁄° * (*
	mcﬁumn_‹igö_«me16
)(
	msqlôe3_°mt
*,);

69 c⁄° * (*
	mcﬁumn_èbÀ_«me
)(
	msqlôe3_°mt
*,);

70 c⁄° * (*
	mcﬁumn_èbÀ_«me16
)(
	msqlôe3_°mt
*,);

71 c⁄° * (*
	mcﬁumn_ãxt
)(
	msqlôe3_°mt
*,
	miCﬁ
);

72 c⁄° * (*
	mcﬁumn_ãxt16
)(
	msqlôe3_°mt
*,
	miCﬁ
);

73 (*
	mcﬁumn_ty≥
)(
	msqlôe3_°mt
*,
	miCﬁ
);

74 
	msqlôe3_vÆue
* (*
	mcﬁumn_vÆue
)(
	msqlôe3_°mt
*,
	miCﬁ
);

75 * (*
	mcommô_hook
)(
	msqlôe3
*,(*)(*),*);

76 (*
	mcom∂ëe
)(c⁄° *
	msql
);

77 (*
	mcom∂ëe16
)(c⁄° *
	msql
);

78 (*
	m¸óã_cﬁœti⁄
)(
	msqlôe3
*,const *,,*,

80 (*
	m¸óã_cﬁœti⁄16
)(
	msqlôe3
*,const *,,*,

82 (*
	m¸óã_fun˘i⁄
)(
	msqlôe3
*,const *,,,*,

83 (*
	mxFunc
)(
	msqlôe3_c⁄ãxt
*,,
	msqlôe3_vÆue
**),

84 (*
	mxSãp
)(
	msqlôe3_c⁄ãxt
*,,
	msqlôe3_vÆue
**),

85 (*
	mxFöÆ
)(
	msqlôe3_c⁄ãxt
*));

86 (*
	m¸óã_fun˘i⁄16
)(
	msqlôe3
*,const *,,,*,

87 (*
	mxFunc
)(
	msqlôe3_c⁄ãxt
*,,
	msqlôe3_vÆue
**),

88 (*
	mxSãp
)(
	msqlôe3_c⁄ãxt
*,,
	msqlôe3_vÆue
**),

89 (*
	mxFöÆ
)(
	msqlôe3_c⁄ãxt
*));

90 (*
	m¸óã_moduÀ
)(
	msqlôe3
*,c⁄° *,c⁄° 
	msqlôe3_moduÀ
*,*);

91 (*
	md©a_cou¡
)(
sqlôe3_°mt
*
	mpStmt
);

92 
	msqlôe3
 * (*
	mdb_h™dÀ
)(
	msqlôe3_°mt
*);

93 (*
	mde˛¨e_vèb
)(
	msqlôe3
*,const *);

94 (*
	míabÀ_sh¨ed_ˇche
)();

95 (*
	mîrcode
)(
sqlôe3
*
	mdb
);

96 c⁄° * (*
	mîrmsg
)(
	msqlôe3
*);

97 c⁄° * (*
	mîrmsg16
)(
	msqlôe3
*);

98 (*
	mexec
)(
	msqlôe3
*,c⁄° *,
	msqlôe3_ˇŒback
,*,**);

99 (*
	mexpúed
)(
	msqlôe3_°mt
*);

100 (*
	mföÆize
)(
sqlôe3_°mt
*
	mpStmt
);

101 (*
	m‰ì
)(*);

102 (*
	m‰ì_èbÀ
)(**
	mªsu…
);

103 (*
	mgë_autocommô
)(
	msqlôe3
*);

104 * (*
	mgë_auxd©a
)(
	msqlôe3_c⁄ãxt
*,);

105 (*
	mgë_èbÀ
)(
	msqlôe3
*,const *,***,*,*,**);

106 (*
	mglobÆ_ªcovî
)();

107 (*
	möãºu±x
)(
	msqlôe3
*);

108 
sqlôe_öt64
 (*
œ°_ö£π_rowid
)(
	msqlôe3
*);

109 c⁄° * (*
	mlibvîsi⁄
)();

110 (*
	mlibvîsi⁄_numbî
)();

111 *(*
	mmÆloc
)();

112 * (*
	mm¥ötf
)(const *,...);

113 (*
	m›í
)(c⁄° *,
	msqlôe3
**);

114 (*
	m›í16
)(c⁄° *,
	msqlôe3
**);

115 (*
	m¥ï¨e
)(
	msqlôe3
*,c⁄° *,,
	msqlôe3_°mt
**,const **);

116 (*
	m¥ï¨e16
)(
	msqlôe3
*,c⁄° *,,
	msqlôe3_°mt
**,const **);

117 * (*
	m¥ofûe
)(
	msqlôe3
*,(*)(*,c⁄° *,
	msqlôe_uöt64
),*);

118 (*
	m¥ogªss_h™dÀr
)(
	msqlôe3
*,,(*)(*),*);

119 *(*
	mªÆloc
)(*,);

120 (*
	mª£t
)(
sqlôe3_°mt
*
	mpStmt
);

121 (*
	mªsu…_blob
)(
	msqlôe3_c⁄ãxt
*,const *,,(*)(*));

122 (*
	mªsu…_doubÀ
)(
	msqlôe3_c⁄ãxt
*,);

123 (*
	mªsu…_îr‹
)(
	msqlôe3_c⁄ãxt
*,const *,);

124 (*
	mªsu…_îr‹16
)(
	msqlôe3_c⁄ãxt
*,const *,);

125 (*
	mªsu…_öt
)(
	msqlôe3_c⁄ãxt
*,);

126 (*
	mªsu…_öt64
)(
	msqlôe3_c⁄ãxt
*,
	msqlôe_öt64
);

127 (*
	mªsu…_nuŒ
)(
	msqlôe3_c⁄ãxt
*);

128 (*
	mªsu…_ãxt
)(
	msqlôe3_c⁄ãxt
*,const *,,(*)(*));

129 (*
	mªsu…_ãxt16
)(
	msqlôe3_c⁄ãxt
*,const *,,(*)(*));

130 (*
	mªsu…_ãxt16be
)(
	msqlôe3_c⁄ãxt
*,const *,,(*)(*));

131 (*
	mªsu…_ãxt16À
)(
	msqlôe3_c⁄ãxt
*,const *,,(*)(*));

132 (*
	mªsu…_vÆue
)(
	msqlôe3_c⁄ãxt
*,
	msqlôe3_vÆue
*);

133 * (*
	mrﬁlback_hook
)(
	msqlôe3
*,(*)(*),*);

134 (*
	m£t_auth‹izî
)(
	msqlôe3
*,(*)(*,,const *,const *,

136 (*
	m£t_auxd©a
)(
	msqlôe3_c⁄ãxt
*,,*,(*)(*));

137 * (*
	m¢¥ötf
)(,*,const *,...);

138 (*
	m°ï
)(
	msqlôe3_°mt
*);

139 (*
	mèbÀ_cﬁumn_mëad©a
)(
	msqlôe3
*,const *,const *,const *,

141 (*
	mthªad_˛ónup
)();

142 (*
	mtŸÆ_ch™ges
)(
	msqlôe3
*);

143 * (*
	måa˚
)(
	msqlôe3
*,(*
	mxTø˚
)(*,const *),*);

144 (*
	må™s„r_bödögs
)(
	msqlôe3_°mt
*,sqlite3_stmt*);

145 * (*
	mupd©e_hook
)(
	msqlôe3
*,(*)(*,,const*,const*,

146 
	msqlôe_öt64
),*);

147 * (*
	mu£r_d©a
)(
	msqlôe3_c⁄ãxt
*);

148 c⁄° * (*
	mvÆue_blob
)(
	msqlôe3_vÆue
*);

149 (*
	mvÆue_byãs
)(
	msqlôe3_vÆue
*);

150 (*
	mvÆue_byãs16
)(
	msqlôe3_vÆue
*);

151 (*
	mvÆue_doubÀ
)(
	msqlôe3_vÆue
*);

152 (*
	mvÆue_öt
)(
	msqlôe3_vÆue
*);

153 
sqlôe_öt64
 (*
vÆue_öt64
)(
	msqlôe3_vÆue
*);

154 (*
	mvÆue_numîic_ty≥
)(
	msqlôe3_vÆue
*);

155 c⁄° * (*
	mvÆue_ãxt
)(
	msqlôe3_vÆue
*);

156 c⁄° * (*
	mvÆue_ãxt16
)(
	msqlôe3_vÆue
*);

157 c⁄° * (*
	mvÆue_ãxt16be
)(
	msqlôe3_vÆue
*);

158 c⁄° * (*
	mvÆue_ãxt16À
)(
	msqlôe3_vÆue
*);

159 (*
	mvÆue_ty≥
)(
	msqlôe3_vÆue
*);

160 *(*
	mvm¥ötf
)(c⁄° *,
	mva_li°
);

162 (*
	movîlﬂd_fun˘i⁄
)(
	msqlôe3
*, c⁄° *
	mzFuncName
, 
	mnArg
);

164 (*
	m¥ï¨e_v2
)(
	msqlôe3
*,c⁄° *,,
	msqlôe3_°mt
**,const **);

165 (*
	m¥ï¨e16_v2
)(
	msqlôe3
*,c⁄° *,,
	msqlôe3_°mt
**,const **);

166 (*
	m˛ór_bödögs
)(
	msqlôe3_°mt
*);

168 (*
	m¸óã_moduÀ_v2
)(
	msqlôe3
*,c⁄° *,c⁄° 
	msqlôe3_moduÀ
*,*,

169 (*
	mxDe°roy
)(*));

171 (*
	mböd_zîoblob
)(
	msqlôe3_°mt
*,,);

172 (*
	mblob_byãs
)(
	msqlôe3_blob
*);

173 (*
	mblob_˛o£
)(
	msqlôe3_blob
*);

174 (*
	mblob_›í
)(
	msqlôe3
*,c⁄° *,c⁄° *,c⁄° *,
	msqlôe3_öt64
,

175 ,
	msqlôe3_blob
**);

176 (*
	mblob_ªad
)(
	msqlôe3_blob
*,*,,);

177 (*
	mblob_wrôe
)(
	msqlôe3_blob
*,const *,,);

178 (*
	m¸óã_cﬁœti⁄_v2
)(
	msqlôe3
*,const *,,*,

181 (*
	mfûe_c⁄åﬁ
)(
	msqlôe3
*,const *,,*);

182 
sqlôe3_öt64
 (*
mem‹y_highw©î
)();

183 
sqlôe3_öt64
 (*
mem‹y_u£d
)();

184 
	msqlôe3_muãx
 *(*
	mmuãx_Æloc
)();

185 (*
	mmuãx_íãr
)(
	msqlôe3_muãx
*);

186 (*
	mmuãx_‰ì
)(
	msqlôe3_muãx
*);

187 (*
	mmuãx_Àave
)(
	msqlôe3_muãx
*);

188 (*
	mmuãx_åy
)(
	msqlôe3_muãx
*);

189 (*
	m›í_v2
)(c⁄° *,
	msqlôe3
**,,const *);

190 (*
	mªÀa£_mem‹y
)();

191 (*
	mªsu…_îr‹_nomem
)(
	msqlôe3_c⁄ãxt
*);

192 (*
	mªsu…_îr‹_toobig
)(
	msqlôe3_c⁄ãxt
*);

193 (*
	m¶ìp
)();

194 (*
	mso·_hóp_limô
)();

195 
	msqlôe3_vfs
 *(*
	mvfs_föd
)(const *);

196 (*
	mvfs_ªgi°î
)(
	msqlôe3_vfs
*,);

197 (*
	mvfs_uƒegi°î
)(
	msqlôe3_vfs
*);

198 (*
	mxthªadß„
)();

199 (*
	mªsu…_zîoblob
)(
	msqlôe3_c⁄ãxt
*,);

200 (*
	mªsu…_îr‹_code
)(
	msqlôe3_c⁄ãxt
*,);

201 (*
	mã°_c⁄åﬁ
)(, ...);

202 (*
	møndom√ss
)(,*);

203 
	msqlôe3
 *(*
	mc⁄ãxt_db_h™dÀ
)(
	msqlôe3_c⁄ãxt
*);

204 (*
	mexãnded_ªsu…_codes
)(
	msqlôe3
*,);

205 (*
	mlimô
)(
	msqlôe3
*,,);

206 
	msqlôe3_°mt
 *(*
	m√xt_°mt
)(
	msqlôe3
*,sqlite3_stmt*);

207 c⁄° *(*
	msql
)(
	msqlôe3_°mt
*);

208 (*
	m°©us
)(,*,*,);

209 (*
	mbackup_föish
)(
	msqlôe3_backup
*);

210 
	msqlôe3_backup
 *(*
	mbackup_öô
)(
	msqlôe3
*,const *,sqlite3*,const *);

211 (*
	mbackup_∑gecou¡
)(
	msqlôe3_backup
*);

212 (*
	mbackup_ªmaöög
)(
	msqlôe3_backup
*);

213 (*
	mbackup_°ï
)(
	msqlôe3_backup
*,);

214 c⁄° *(*
	mcompûe›ti⁄_gë
)();

215 (*
	mcompûe›ti⁄_u£d
)(const *);

216 (*
	m¸óã_fun˘i⁄_v2
)(
	msqlôe3
*,const *,,,*,

217 (*
	mxFunc
)(
	msqlôe3_c⁄ãxt
*,,
	msqlôe3_vÆue
**),

218 (*
	mxSãp
)(
	msqlôe3_c⁄ãxt
*,,
	msqlôe3_vÆue
**),

219 (*
	mxFöÆ
)(
	msqlôe3_c⁄ãxt
*),

220 (*
	mxDe°roy
)(*));

221 (*
	mdb_c⁄fig
)(
	msqlôe3
*,,...);

222 
	msqlôe3_muãx
 *(*
	mdb_muãx
)(
	msqlôe3
*);

223 (*
	mdb_°©us
)(
	msqlôe3
*,,*,*,);

224 (*
	mexãnded_îrcode
)(
	msqlôe3
*);

225 (*
	mlog
)(,const *,...);

226 
sqlôe3_öt64
 (*
so·_hóp_limô64
)(
	msqlôe3_öt64
);

227 c⁄° *(*
	msour˚id
)();

228 (*
	m°mt_°©us
)(
	msqlôe3_°mt
*,,);

229 (*
	m°∫icmp
)(const *,const *,);

230 (*
	mu∆ock_nŸify
)(
	msqlôe3
*,(*)(**,),*);

231 (*
	mwÆ_autocheckpoöt
)(
	msqlôe3
*,);

232 (*
	mwÆ_checkpoöt
)(
	msqlôe3
*,const *);

233 *(*
	mwÆ_hook
)(
	msqlôe3
*,(*)(*,sqlite3*,const *,),*);

234 (*
	mblob_ª›í
)(
	msqlôe3_blob
*,
	msqlôe3_öt64
);

235 (*
	mvèb_c⁄fig
)(
	msqlôe3
*,
	m›
,...);

236 (*
	mvèb_⁄_c⁄Êi˘
)(
	msqlôe3
*);

238 (*
	m˛o£_v2
)(
	msqlôe3
*);

239 c⁄° *(*
	mdb_fûíame
)(
	msqlôe3
*,const *);

240 (*
	mdb_ªad⁄ly
)(
	msqlôe3
*,const *);

241 (*
	mdb_ªÀa£_mem‹y
)(
	msqlôe3
*);

242 c⁄° *(*
	mîr°r
)();

243 (*
	m°mt_busy
)(
	msqlôe3_°mt
*);

244 (*
	m°mt_ªad⁄ly
)(
	msqlôe3_°mt
*);

245 (*
	m°ricmp
)(const *,const *);

246 (*
	muri_boﬁón
)(const *,const *,);

247 
sqlôe3_öt64
 (*
uri_öt64
)(c⁄° *,c⁄° *,
	msqlôe3_öt64
);

248 c⁄° *(*
	muri_∑ømëî
)(const *,const *);

249 *(*
	mv¢¥ötf
)(,*,c⁄° *,
	mva_li°
);

250 (*
	mwÆ_checkpoöt_v2
)(
	msqlôe3
*,const *,,*,*);

252 (*
	mauto_exãnsi⁄
)((*)());

253 (*
	mböd_blob64
)(
	msqlôe3_°mt
*,,c⁄° *,
	msqlôe3_uöt64
,

255 (*
	mböd_ãxt64
)(
	msqlôe3_°mt
*,,c⁄° *,
	msqlôe3_uöt64
,

257 (*
	mˇn˚l_auto_exãnsi⁄
)((*)());

258 (*
	mlﬂd_exãnsi⁄
)(
	msqlôe3
*,const *,const *,**);

259 *(*
	mmÆloc64
)(
	msqlôe3_uöt64
);

260 
sqlôe3_uöt64
 (*
msize
)(*);

261 *(*
	mªÆloc64
)(*,
	msqlôe3_uöt64
);

262 (*
	mª£t_auto_exãnsi⁄
)();

263 (*
	mªsu…_blob64
)(
	msqlôe3_c⁄ãxt
*,c⁄° *,
	msqlôe3_uöt64
,

265 (*
	mªsu…_ãxt64
)(
	msqlôe3_c⁄ãxt
*,c⁄° *,
	msqlôe3_uöt64
,

267 (*
	m°rglob
)(const *,const *);

269 
	msqlôe3_vÆue
 *(*
	mvÆue_dup
)(const sqlite3_value*);

270 (*
	mvÆue_‰ì
)(
	msqlôe3_vÆue
*);

271 (*
	mªsu…_zîoblob64
)(
	msqlôe3_c⁄ãxt
*,
	msqlôe3_uöt64
);

272 (*
	mböd_zîoblob64
)(
	msqlôe3_°mt
*, , 
	msqlôe3_uöt64
);

274 (*
	mvÆue_subty≥
)(
	msqlôe3_vÆue
*);

275 (*
	mªsu…_subty≥
)(
	msqlôe3_c⁄ãxt
*,);

277 (*
	m°©us64
)(,
	msqlôe3_öt64
*,sqlite3_int64*,);

278 (*
	m°æike
)(const *,const *,);

279 (*
	mdb_ˇcheÊush
)(
	msqlôe3
*);

281 (*
	msy°em_î∫o
)(
	msqlôe3
*);

283 (*
	måa˚_v2
)(
	msqlôe3
*,,(*)(,*,*,*),*);

284 *(*
	mex∑nded_sql
)(
	msqlôe3_°mt
*);

291 (*
	tsqlôe3_lﬂdext_íåy
)(

292 
	tsqlôe3
 *
	tdb
,

293 **
	tpzEºMsg
,

294 c⁄° 
	tsqlôe3_≠i_routöes
 *
	tpThunk


308 #i‡!
	`deföed
(
SQLITE_CORE
Ë&& !deföed(
SQLITE_OMIT_LOAD_EXTENSION
)

309 
	#sqlôe3_aggªg©e_c⁄ãxt
 
sqlôe3_≠i
->
aggªg©e_c⁄ãxt


	)

310 #i‚de‡
SQLITE_OMIT_DEPRECATED


311 
	#sqlôe3_aggªg©e_cou¡
 
sqlôe3_≠i
->
aggªg©e_cou¡


	)

313 
	#sqlôe3_böd_blob
 
sqlôe3_≠i
->
böd_blob


	)

314 
	#sqlôe3_böd_doubÀ
 
sqlôe3_≠i
->
böd_doubÀ


	)

315 
	#sqlôe3_böd_öt
 
sqlôe3_≠i
->
böd_öt


	)

316 
	#sqlôe3_böd_öt64
 
sqlôe3_≠i
->
böd_öt64


	)

317 
	#sqlôe3_böd_nuŒ
 
sqlôe3_≠i
->
böd_nuŒ


	)

318 
	#sqlôe3_böd_∑ømëî_cou¡
 
sqlôe3_≠i
->
böd_∑ømëî_cou¡


	)

319 
	#sqlôe3_böd_∑ømëî_ödex
 
sqlôe3_≠i
->
böd_∑ømëî_ödex


	)

320 
	#sqlôe3_böd_∑ømëî_«me
 
sqlôe3_≠i
->
böd_∑ømëî_«me


	)

321 
	#sqlôe3_böd_ãxt
 
sqlôe3_≠i
->
böd_ãxt


	)

322 
	#sqlôe3_böd_ãxt16
 
sqlôe3_≠i
->
böd_ãxt16


	)

323 
	#sqlôe3_böd_vÆue
 
sqlôe3_≠i
->
böd_vÆue


	)

324 
	#sqlôe3_busy_h™dÀr
 
sqlôe3_≠i
->
busy_h™dÀr


	)

325 
	#sqlôe3_busy_timeout
 
sqlôe3_≠i
->
busy_timeout


	)

326 
	#sqlôe3_ch™ges
 
sqlôe3_≠i
->
ch™ges


	)

327 
	#sqlôe3_˛o£
 
sqlôe3_≠i
->
˛o£


	)

328 
	#sqlôe3_cﬁœti⁄_√eded
 
sqlôe3_≠i
->
cﬁœti⁄_√eded


	)

329 
	#sqlôe3_cﬁœti⁄_√eded16
 
sqlôe3_≠i
->
cﬁœti⁄_√eded16


	)

330 
	#sqlôe3_cﬁumn_blob
 
sqlôe3_≠i
->
cﬁumn_blob


	)

331 
	#sqlôe3_cﬁumn_byãs
 
sqlôe3_≠i
->
cﬁumn_byãs


	)

332 
	#sqlôe3_cﬁumn_byãs16
 
sqlôe3_≠i
->
cﬁumn_byãs16


	)

333 
	#sqlôe3_cﬁumn_cou¡
 
sqlôe3_≠i
->
cﬁumn_cou¡


	)

334 
	#sqlôe3_cﬁumn_d©aba£_«me
 
sqlôe3_≠i
->
cﬁumn_d©aba£_«me


	)

335 
	#sqlôe3_cﬁumn_d©aba£_«me16
 
sqlôe3_≠i
->
cﬁumn_d©aba£_«me16


	)

336 
	#sqlôe3_cﬁumn_de˛ty≥
 
sqlôe3_≠i
->
cﬁumn_de˛ty≥


	)

337 
	#sqlôe3_cﬁumn_de˛ty≥16
 
sqlôe3_≠i
->
cﬁumn_de˛ty≥16


	)

338 
	#sqlôe3_cﬁumn_doubÀ
 
sqlôe3_≠i
->
cﬁumn_doubÀ


	)

339 
	#sqlôe3_cﬁumn_öt
 
sqlôe3_≠i
->
cﬁumn_öt


	)

340 
	#sqlôe3_cﬁumn_öt64
 
sqlôe3_≠i
->
cﬁumn_öt64


	)

341 
	#sqlôe3_cﬁumn_«me
 
sqlôe3_≠i
->
cﬁumn_«me


	)

342 
	#sqlôe3_cﬁumn_«me16
 
sqlôe3_≠i
->
cﬁumn_«me16


	)

343 
	#sqlôe3_cﬁumn_‹igö_«me
 
sqlôe3_≠i
->
cﬁumn_‹igö_«me


	)

344 
	#sqlôe3_cﬁumn_‹igö_«me16
 
sqlôe3_≠i
->
cﬁumn_‹igö_«me16


	)

345 
	#sqlôe3_cﬁumn_èbÀ_«me
 
sqlôe3_≠i
->
cﬁumn_èbÀ_«me


	)

346 
	#sqlôe3_cﬁumn_èbÀ_«me16
 
sqlôe3_≠i
->
cﬁumn_èbÀ_«me16


	)

347 
	#sqlôe3_cﬁumn_ãxt
 
sqlôe3_≠i
->
cﬁumn_ãxt


	)

348 
	#sqlôe3_cﬁumn_ãxt16
 
sqlôe3_≠i
->
cﬁumn_ãxt16


	)

349 
	#sqlôe3_cﬁumn_ty≥
 
sqlôe3_≠i
->
cﬁumn_ty≥


	)

350 
	#sqlôe3_cﬁumn_vÆue
 
sqlôe3_≠i
->
cﬁumn_vÆue


	)

351 
	#sqlôe3_commô_hook
 
sqlôe3_≠i
->
commô_hook


	)

352 
	#sqlôe3_com∂ëe
 
sqlôe3_≠i
->
com∂ëe


	)

353 
	#sqlôe3_com∂ëe16
 
sqlôe3_≠i
->
com∂ëe16


	)

354 
	#sqlôe3_¸óã_cﬁœti⁄
 
sqlôe3_≠i
->
¸óã_cﬁœti⁄


	)

355 
	#sqlôe3_¸óã_cﬁœti⁄16
 
sqlôe3_≠i
->
¸óã_cﬁœti⁄16


	)

356 
	#sqlôe3_¸óã_fun˘i⁄
 
sqlôe3_≠i
->
¸óã_fun˘i⁄


	)

357 
	#sqlôe3_¸óã_fun˘i⁄16
 
sqlôe3_≠i
->
¸óã_fun˘i⁄16


	)

358 
	#sqlôe3_¸óã_moduÀ
 
sqlôe3_≠i
->
¸óã_moduÀ


	)

359 
	#sqlôe3_¸óã_moduÀ_v2
 
sqlôe3_≠i
->
¸óã_moduÀ_v2


	)

360 
	#sqlôe3_d©a_cou¡
 
sqlôe3_≠i
->
d©a_cou¡


	)

361 
	#sqlôe3_db_h™dÀ
 
sqlôe3_≠i
->
db_h™dÀ


	)

362 
	#sqlôe3_de˛¨e_vèb
 
sqlôe3_≠i
->
de˛¨e_vèb


	)

363 
	#sqlôe3_íabÀ_sh¨ed_ˇche
 
sqlôe3_≠i
->
íabÀ_sh¨ed_ˇche


	)

364 
	#sqlôe3_îrcode
 
sqlôe3_≠i
->
îrcode


	)

365 
	#sqlôe3_îrmsg
 
sqlôe3_≠i
->
îrmsg


	)

366 
	#sqlôe3_îrmsg16
 
sqlôe3_≠i
->
îrmsg16


	)

367 
	#sqlôe3_exec
 
sqlôe3_≠i
->
exec


	)

368 #i‚de‡
SQLITE_OMIT_DEPRECATED


369 
	#sqlôe3_expúed
 
sqlôe3_≠i
->
expúed


	)

371 
	#sqlôe3_föÆize
 
sqlôe3_≠i
->
föÆize


	)

372 
	#sqlôe3_‰ì
 
sqlôe3_≠i
->
‰ì


	)

373 
	#sqlôe3_‰ì_èbÀ
 
sqlôe3_≠i
->
‰ì_èbÀ


	)

374 
	#sqlôe3_gë_autocommô
 
sqlôe3_≠i
->
gë_autocommô


	)

375 
	#sqlôe3_gë_auxd©a
 
sqlôe3_≠i
->
gë_auxd©a


	)

376 
	#sqlôe3_gë_èbÀ
 
sqlôe3_≠i
->
gë_èbÀ


	)

377 #i‚de‡
SQLITE_OMIT_DEPRECATED


378 
	#sqlôe3_globÆ_ªcovî
 
sqlôe3_≠i
->
globÆ_ªcovî


	)

380 
	#sqlôe3_öãºu±
 
sqlôe3_≠i
->
öãºu±x


	)

381 
	#sqlôe3_œ°_ö£π_rowid
 
sqlôe3_≠i
->
œ°_ö£π_rowid


	)

382 
	#sqlôe3_libvîsi⁄
 
sqlôe3_≠i
->
libvîsi⁄


	)

383 
	#sqlôe3_libvîsi⁄_numbî
 
sqlôe3_≠i
->
libvîsi⁄_numbî


	)

384 
	#sqlôe3_mÆloc
 
sqlôe3_≠i
->
mÆloc


	)

385 
	#sqlôe3_m¥ötf
 
sqlôe3_≠i
->
m¥ötf


	)

386 
	#sqlôe3_›í
 
sqlôe3_≠i
->
›í


	)

387 
	#sqlôe3_›í16
 
sqlôe3_≠i
->
›í16


	)

388 
	#sqlôe3_¥ï¨e
 
sqlôe3_≠i
->
¥ï¨e


	)

389 
	#sqlôe3_¥ï¨e16
 
sqlôe3_≠i
->
¥ï¨e16


	)

390 
	#sqlôe3_¥ï¨e_v2
 
sqlôe3_≠i
->
¥ï¨e_v2


	)

391 
	#sqlôe3_¥ï¨e16_v2
 
sqlôe3_≠i
->
¥ï¨e16_v2


	)

392 
	#sqlôe3_¥ofûe
 
sqlôe3_≠i
->
¥ofûe


	)

393 
	#sqlôe3_¥ogªss_h™dÀr
 
sqlôe3_≠i
->
¥ogªss_h™dÀr


	)

394 
	#sqlôe3_ªÆloc
 
sqlôe3_≠i
->
ªÆloc


	)

395 
	#sqlôe3_ª£t
 
sqlôe3_≠i
->
ª£t


	)

396 
	#sqlôe3_ªsu…_blob
 
sqlôe3_≠i
->
ªsu…_blob


	)

397 
	#sqlôe3_ªsu…_doubÀ
 
sqlôe3_≠i
->
ªsu…_doubÀ


	)

398 
	#sqlôe3_ªsu…_îr‹
 
sqlôe3_≠i
->
ªsu…_îr‹


	)

399 
	#sqlôe3_ªsu…_îr‹16
 
sqlôe3_≠i
->
ªsu…_îr‹16


	)

400 
	#sqlôe3_ªsu…_öt
 
sqlôe3_≠i
->
ªsu…_öt


	)

401 
	#sqlôe3_ªsu…_öt64
 
sqlôe3_≠i
->
ªsu…_öt64


	)

402 
	#sqlôe3_ªsu…_nuŒ
 
sqlôe3_≠i
->
ªsu…_nuŒ


	)

403 
	#sqlôe3_ªsu…_ãxt
 
sqlôe3_≠i
->
ªsu…_ãxt


	)

404 
	#sqlôe3_ªsu…_ãxt16
 
sqlôe3_≠i
->
ªsu…_ãxt16


	)

405 
	#sqlôe3_ªsu…_ãxt16be
 
sqlôe3_≠i
->
ªsu…_ãxt16be


	)

406 
	#sqlôe3_ªsu…_ãxt16À
 
sqlôe3_≠i
->
ªsu…_ãxt16À


	)

407 
	#sqlôe3_ªsu…_vÆue
 
sqlôe3_≠i
->
ªsu…_vÆue


	)

408 
	#sqlôe3_rﬁlback_hook
 
sqlôe3_≠i
->
rﬁlback_hook


	)

409 
	#sqlôe3_£t_auth‹izî
 
sqlôe3_≠i
->
£t_auth‹izî


	)

410 
	#sqlôe3_£t_auxd©a
 
sqlôe3_≠i
->
£t_auxd©a


	)

411 
	#sqlôe3_¢¥ötf
 
sqlôe3_≠i
->
¢¥ötf


	)

412 
	#sqlôe3_°ï
 
sqlôe3_≠i
->
°ï


	)

413 
	#sqlôe3_èbÀ_cﬁumn_mëad©a
 
sqlôe3_≠i
->
èbÀ_cﬁumn_mëad©a


	)

414 
	#sqlôe3_thªad_˛ónup
 
sqlôe3_≠i
->
thªad_˛ónup


	)

415 
	#sqlôe3_tŸÆ_ch™ges
 
sqlôe3_≠i
->
tŸÆ_ch™ges


	)

416 
	#sqlôe3_åa˚
 
sqlôe3_≠i
->
åa˚


	)

417 #i‚de‡
SQLITE_OMIT_DEPRECATED


418 
	#sqlôe3_å™s„r_bödögs
 
sqlôe3_≠i
->
å™s„r_bödögs


	)

420 
	#sqlôe3_upd©e_hook
 
sqlôe3_≠i
->
upd©e_hook


	)

421 
	#sqlôe3_u£r_d©a
 
sqlôe3_≠i
->
u£r_d©a


	)

422 
	#sqlôe3_vÆue_blob
 
sqlôe3_≠i
->
vÆue_blob


	)

423 
	#sqlôe3_vÆue_byãs
 
sqlôe3_≠i
->
vÆue_byãs


	)

424 
	#sqlôe3_vÆue_byãs16
 
sqlôe3_≠i
->
vÆue_byãs16


	)

425 
	#sqlôe3_vÆue_doubÀ
 
sqlôe3_≠i
->
vÆue_doubÀ


	)

426 
	#sqlôe3_vÆue_öt
 
sqlôe3_≠i
->
vÆue_öt


	)

427 
	#sqlôe3_vÆue_öt64
 
sqlôe3_≠i
->
vÆue_öt64


	)

428 
	#sqlôe3_vÆue_numîic_ty≥
 
sqlôe3_≠i
->
vÆue_numîic_ty≥


	)

429 
	#sqlôe3_vÆue_ãxt
 
sqlôe3_≠i
->
vÆue_ãxt


	)

430 
	#sqlôe3_vÆue_ãxt16
 
sqlôe3_≠i
->
vÆue_ãxt16


	)

431 
	#sqlôe3_vÆue_ãxt16be
 
sqlôe3_≠i
->
vÆue_ãxt16be


	)

432 
	#sqlôe3_vÆue_ãxt16À
 
sqlôe3_≠i
->
vÆue_ãxt16À


	)

433 
	#sqlôe3_vÆue_ty≥
 
sqlôe3_≠i
->
vÆue_ty≥


	)

434 
	#sqlôe3_vm¥ötf
 
sqlôe3_≠i
->
vm¥ötf


	)

435 
	#sqlôe3_v¢¥ötf
 
sqlôe3_≠i
->
v¢¥ötf


	)

436 
	#sqlôe3_ovîlﬂd_fun˘i⁄
 
sqlôe3_≠i
->
ovîlﬂd_fun˘i⁄


	)

437 
	#sqlôe3_¥ï¨e_v2
 
sqlôe3_≠i
->
¥ï¨e_v2


	)

438 
	#sqlôe3_¥ï¨e16_v2
 
sqlôe3_≠i
->
¥ï¨e16_v2


	)

439 
	#sqlôe3_˛ór_bödögs
 
sqlôe3_≠i
->
˛ór_bödögs


	)

440 
	#sqlôe3_böd_zîoblob
 
sqlôe3_≠i
->
böd_zîoblob


	)

441 
	#sqlôe3_blob_byãs
 
sqlôe3_≠i
->
blob_byãs


	)

442 
	#sqlôe3_blob_˛o£
 
sqlôe3_≠i
->
blob_˛o£


	)

443 
	#sqlôe3_blob_›í
 
sqlôe3_≠i
->
blob_›í


	)

444 
	#sqlôe3_blob_ªad
 
sqlôe3_≠i
->
blob_ªad


	)

445 
	#sqlôe3_blob_wrôe
 
sqlôe3_≠i
->
blob_wrôe


	)

446 
	#sqlôe3_¸óã_cﬁœti⁄_v2
 
sqlôe3_≠i
->
¸óã_cﬁœti⁄_v2


	)

447 
	#sqlôe3_fûe_c⁄åﬁ
 
sqlôe3_≠i
->
fûe_c⁄åﬁ


	)

448 
	#sqlôe3_mem‹y_highw©î
 
sqlôe3_≠i
->
mem‹y_highw©î


	)

449 
	#sqlôe3_mem‹y_u£d
 
sqlôe3_≠i
->
mem‹y_u£d


	)

450 
	#sqlôe3_muãx_Æloc
 
sqlôe3_≠i
->
muãx_Æloc


	)

451 
	#sqlôe3_muãx_íãr
 
sqlôe3_≠i
->
muãx_íãr


	)

452 
	#sqlôe3_muãx_‰ì
 
sqlôe3_≠i
->
muãx_‰ì


	)

453 
	#sqlôe3_muãx_Àave
 
sqlôe3_≠i
->
muãx_Àave


	)

454 
	#sqlôe3_muãx_åy
 
sqlôe3_≠i
->
muãx_åy


	)

455 
	#sqlôe3_›í_v2
 
sqlôe3_≠i
->
›í_v2


	)

456 
	#sqlôe3_ªÀa£_mem‹y
 
sqlôe3_≠i
->
ªÀa£_mem‹y


	)

457 
	#sqlôe3_ªsu…_îr‹_nomem
 
sqlôe3_≠i
->
ªsu…_îr‹_nomem


	)

458 
	#sqlôe3_ªsu…_îr‹_toobig
 
sqlôe3_≠i
->
ªsu…_îr‹_toobig


	)

459 
	#sqlôe3_¶ìp
 
sqlôe3_≠i
->
¶ìp


	)

460 
	#sqlôe3_so·_hóp_limô
 
sqlôe3_≠i
->
so·_hóp_limô


	)

461 
	#sqlôe3_vfs_föd
 
sqlôe3_≠i
->
vfs_föd


	)

462 
	#sqlôe3_vfs_ªgi°î
 
sqlôe3_≠i
->
vfs_ªgi°î


	)

463 
	#sqlôe3_vfs_uƒegi°î
 
sqlôe3_≠i
->
vfs_uƒegi°î


	)

464 
	#sqlôe3_thªadß„
 
sqlôe3_≠i
->
xthªadß„


	)

465 
	#sqlôe3_ªsu…_zîoblob
 
sqlôe3_≠i
->
ªsu…_zîoblob


	)

466 
	#sqlôe3_ªsu…_îr‹_code
 
sqlôe3_≠i
->
ªsu…_îr‹_code


	)

467 
	#sqlôe3_ã°_c⁄åﬁ
 
sqlôe3_≠i
->
ã°_c⁄åﬁ


	)

468 
	#sqlôe3_øndom√ss
 
sqlôe3_≠i
->
øndom√ss


	)

469 
	#sqlôe3_c⁄ãxt_db_h™dÀ
 
sqlôe3_≠i
->
c⁄ãxt_db_h™dÀ


	)

470 
	#sqlôe3_exãnded_ªsu…_codes
 
sqlôe3_≠i
->
exãnded_ªsu…_codes


	)

471 
	#sqlôe3_limô
 
sqlôe3_≠i
->
limô


	)

472 
	#sqlôe3_√xt_°mt
 
sqlôe3_≠i
->
√xt_°mt


	)

473 
	#sqlôe3_sql
 
sqlôe3_≠i
->
sql


	)

474 
	#sqlôe3_°©us
 
sqlôe3_≠i
->
°©us


	)

475 
	#sqlôe3_backup_föish
 
sqlôe3_≠i
->
backup_föish


	)

476 
	#sqlôe3_backup_öô
 
sqlôe3_≠i
->
backup_öô


	)

477 
	#sqlôe3_backup_∑gecou¡
 
sqlôe3_≠i
->
backup_∑gecou¡


	)

478 
	#sqlôe3_backup_ªmaöög
 
sqlôe3_≠i
->
backup_ªmaöög


	)

479 
	#sqlôe3_backup_°ï
 
sqlôe3_≠i
->
backup_°ï


	)

480 
	#sqlôe3_compûe›ti⁄_gë
 
sqlôe3_≠i
->
compûe›ti⁄_gë


	)

481 
	#sqlôe3_compûe›ti⁄_u£d
 
sqlôe3_≠i
->
compûe›ti⁄_u£d


	)

482 
	#sqlôe3_¸óã_fun˘i⁄_v2
 
sqlôe3_≠i
->
¸óã_fun˘i⁄_v2


	)

483 
	#sqlôe3_db_c⁄fig
 
sqlôe3_≠i
->
db_c⁄fig


	)

484 
	#sqlôe3_db_muãx
 
sqlôe3_≠i
->
db_muãx


	)

485 
	#sqlôe3_db_°©us
 
sqlôe3_≠i
->
db_°©us


	)

486 
	#sqlôe3_exãnded_îrcode
 
sqlôe3_≠i
->
exãnded_îrcode


	)

487 
	#sqlôe3_log
 
sqlôe3_≠i
->
log


	)

488 
	#sqlôe3_so·_hóp_limô64
 
sqlôe3_≠i
->
so·_hóp_limô64


	)

489 
	#sqlôe3_sour˚id
 
sqlôe3_≠i
->
sour˚id


	)

490 
	#sqlôe3_°mt_°©us
 
sqlôe3_≠i
->
°mt_°©us


	)

491 
	#sqlôe3_°∫icmp
 
sqlôe3_≠i
->
°∫icmp


	)

492 
	#sqlôe3_u∆ock_nŸify
 
sqlôe3_≠i
->
u∆ock_nŸify


	)

493 
	#sqlôe3_wÆ_autocheckpoöt
 
sqlôe3_≠i
->
wÆ_autocheckpoöt


	)

494 
	#sqlôe3_wÆ_checkpoöt
 
sqlôe3_≠i
->
wÆ_checkpoöt


	)

495 
	#sqlôe3_wÆ_hook
 
sqlôe3_≠i
->
wÆ_hook


	)

496 
	#sqlôe3_blob_ª›í
 
sqlôe3_≠i
->
blob_ª›í


	)

497 
	#sqlôe3_vèb_c⁄fig
 
sqlôe3_≠i
->
vèb_c⁄fig


	)

498 
	#sqlôe3_vèb_⁄_c⁄Êi˘
 
sqlôe3_≠i
->
vèb_⁄_c⁄Êi˘


	)

500 
	#sqlôe3_˛o£_v2
 
sqlôe3_≠i
->
˛o£_v2


	)

501 
	#sqlôe3_db_fûíame
 
sqlôe3_≠i
->
db_fûíame


	)

502 
	#sqlôe3_db_ªad⁄ly
 
sqlôe3_≠i
->
db_ªad⁄ly


	)

503 
	#sqlôe3_db_ªÀa£_mem‹y
 
sqlôe3_≠i
->
db_ªÀa£_mem‹y


	)

504 
	#sqlôe3_îr°r
 
sqlôe3_≠i
->
îr°r


	)

505 
	#sqlôe3_°mt_busy
 
sqlôe3_≠i
->
°mt_busy


	)

506 
	#sqlôe3_°mt_ªad⁄ly
 
sqlôe3_≠i
->
°mt_ªad⁄ly


	)

507 
	#sqlôe3_°ricmp
 
sqlôe3_≠i
->
°ricmp


	)

508 
	#sqlôe3_uri_boﬁón
 
sqlôe3_≠i
->
uri_boﬁón


	)

509 
	#sqlôe3_uri_öt64
 
sqlôe3_≠i
->
uri_öt64


	)

510 
	#sqlôe3_uri_∑ømëî
 
sqlôe3_≠i
->
uri_∑ømëî


	)

511 
	#sqlôe3_uri_v¢¥ötf
 
sqlôe3_≠i
->
v¢¥ötf


	)

512 
	#sqlôe3_wÆ_checkpoöt_v2
 
sqlôe3_≠i
->
wÆ_checkpoöt_v2


	)

514 
	#sqlôe3_auto_exãnsi⁄
 
sqlôe3_≠i
->
auto_exãnsi⁄


	)

515 
	#sqlôe3_böd_blob64
 
sqlôe3_≠i
->
böd_blob64


	)

516 
	#sqlôe3_böd_ãxt64
 
sqlôe3_≠i
->
böd_ãxt64


	)

517 
	#sqlôe3_ˇn˚l_auto_exãnsi⁄
 
sqlôe3_≠i
->
ˇn˚l_auto_exãnsi⁄


	)

518 
	#sqlôe3_lﬂd_exãnsi⁄
 
sqlôe3_≠i
->
lﬂd_exãnsi⁄


	)

519 
	#sqlôe3_mÆloc64
 
sqlôe3_≠i
->
mÆloc64


	)

520 
	#sqlôe3_msize
 
sqlôe3_≠i
->
msize


	)

521 
	#sqlôe3_ªÆloc64
 
sqlôe3_≠i
->
ªÆloc64


	)

522 
	#sqlôe3_ª£t_auto_exãnsi⁄
 
sqlôe3_≠i
->
ª£t_auto_exãnsi⁄


	)

523 
	#sqlôe3_ªsu…_blob64
 
sqlôe3_≠i
->
ªsu…_blob64


	)

524 
	#sqlôe3_ªsu…_ãxt64
 
sqlôe3_≠i
->
ªsu…_ãxt64


	)

525 
	#sqlôe3_°rglob
 
sqlôe3_≠i
->
°rglob


	)

527 
	#sqlôe3_vÆue_dup
 
sqlôe3_≠i
->
vÆue_dup


	)

528 
	#sqlôe3_vÆue_‰ì
 
sqlôe3_≠i
->
vÆue_‰ì


	)

529 
	#sqlôe3_ªsu…_zîoblob64
 
sqlôe3_≠i
->
ªsu…_zîoblob64


	)

530 
	#sqlôe3_böd_zîoblob64
 
sqlôe3_≠i
->
böd_zîoblob64


	)

532 
	#sqlôe3_vÆue_subty≥
 
sqlôe3_≠i
->
vÆue_subty≥


	)

533 
	#sqlôe3_ªsu…_subty≥
 
sqlôe3_≠i
->
ªsu…_subty≥


	)

535 
	#sqlôe3_°©us64
 
sqlôe3_≠i
->
°©us64


	)

536 
	#sqlôe3_°æike
 
sqlôe3_≠i
->
°æike


	)

537 
	#sqlôe3_db_ˇcheÊush
 
sqlôe3_≠i
->
db_ˇcheÊush


	)

539 
	#sqlôe3_sy°em_î∫o
 
sqlôe3_≠i
->
sy°em_î∫o


	)

541 
	#sqlôe3_åa˚_v2
 
sqlôe3_≠i
->
åa˚_v2


	)

542 
	#sqlôe3_ex∑nded_sql
 
sqlôe3_≠i
->
ex∑nded_sql


	)

545 #i‡!
	`deföed
(
SQLITE_CORE
Ë&& !deföed(
SQLITE_OMIT_LOAD_EXTENSION
)

548 
	#SQLITE_EXTENSION_INIT1
 c⁄° 
sqlôe3_≠i_routöes
 *
sqlôe3_≠i
=0;

	)

549 
	#SQLITE_EXTENSION_INIT2
(
v
Ë
sqlôe3_≠i
=v;

	)

550 
	#SQLITE_EXTENSION_INIT3
 \

551 c⁄° 
sqlôe3_≠i_routöes
 *
sqlôe3_≠i
;

	)

555 
	#SQLITE_EXTENSION_INIT1


	)

556 
	#SQLITE_EXTENSION_INIT2
(
v
Ë()v;

	)

557 
	#SQLITE_EXTENSION_INIT3


	)

	@sqliteInt.h

15 #i‚de‡
SQLITEINT_H


16 
	#SQLITEINT_H


	)

49 #i‚de‡
SQLITE_TCLAPI


50 
	#SQLITE_TCLAPI


	)

57 #i‡
deföed
(
_MSC_VER
) && _MSC_VER>=1400

58 
	#_CRT_RAND_S


	)

67 
	~"msvc.h
"

72 
	~"vxw‹ks.h
"

98 #i‚de‡
SQLITE_DISABLE_LFS


99 
	#_LARGE_FILE
 1

	)

100 #i‚de‡
_FILE_OFFSET_BITS


101 
	#_FILE_OFFSET_BITS
 64

	)

103 
	#_LARGEFILE_SOURCE
 1

	)

107 #ifde‡
__GNUC__


108 
	#GCC_VERSION
 (
__GNUC__
*1000000+
__GNUC_MINOR__
*1000+
__GNUC_PATCHLEVEL__
)

	)

110 
	#GCC_VERSION
 0

	)

114 #i‡
deföed
(
__GNUC__
Ë&& !deföed(
_GNU_SOURCE
)

115 
	#_GNU_SOURCE


	)

118 #i‡
deföed
(
__O≥nBSD__
Ë&& !deföed(
_BSD_SOURCE
)

119 
	#_BSD_SOURCE


	)

136 #i‡
deföed
(
_HAVE_MINGW_H
)

137 
	~"mögw.h
"

138 #ñi‡
deföed
(
_HAVE__MINGW_H
)

139 
	~"_mögw.h
"

147 #i‡!
deföed
(
_USE_32BIT_TIME_T
Ë&& !deföed(
_USE_64BIT_TIME_T
) && \

148 
deföed
(
_WIN32
Ë&& !deföed(
_WIN64
) && \

149 
deföed
(
__MINGW_MAJOR_VERSION
Ë&& 
	g__MINGW_MAJOR_VERSION
 >= 4 && \

150 
	$deföed
(
__MSVCRT__
)

151 
	#_USE_32BIT_TIME_T


	)

158 
	~"sqlôe3.h
"

164 #ifde‡
_HAVE_SQLITE_CONFIG_H


165 
	~"c⁄fig.h
"

168 
	~"sqlôeLimô.h
"

171 #i‡
	`deföed
(
__BORLANDC__
)

172 #¥agm®
w¨n
 -
rch


173 #¥agm®
w¨n
 -
ccc


174 #¥agm®
w¨n
 -
aus


175 #¥agm®
w¨n
 -
csu


176 #¥agm®
w¨n
 -
•a


182 #ifde‡
HAVE_STDINT_H


183 
	~<°döt.h
>

185 #ifde‡
HAVE_INTTYPES_H


186 
	~<öây≥s.h
>

205 #i‡
	`deföed
(
__PTRDIFF_TYPE__
)

206 
	#SQLITE_INT_TO_PTR
(
X
Ë((*)(
__PTRDIFF_TYPE__
)(X))

	)

207 
	#SQLITE_PTR_TO_INT
(
X
Ë(()(
__PTRDIFF_TYPE__
)(X))

	)

208 #ñi‡!
	`deföed
(
__GNUC__
)

209 
	#SQLITE_INT_TO_PTR
(
X
Ë((*)&((*)0)[X])

	)

210 
	#SQLITE_PTR_TO_INT
(
X
Ë(()(((*)X)-(*)0))

	)

211 #ñi‡
	`deföed
(
HAVE_STDINT_H
)

212 
	#SQLITE_INT_TO_PTR
(
X
Ë((*)(
öçå_t
)(X))

	)

213 
	#SQLITE_PTR_TO_INT
(
X
Ë(()(
öçå_t
)(X))

	)

215 
	#SQLITE_INT_TO_PTR
(
X
Ë((*)(X))

	)

216 
	#SQLITE_PTR_TO_INT
(
X
Ë(()(X))

	)

223 #i‡
	`deföed
(
__GNUC__
)

224 
	#SQLITE_NOINLINE
 
	`__©åibuã__
((
noölöe
))

	)

225 #ñi‡
	`deföed
(
_MSC_VER
) && _MSC_VER>=1310

226 
	#SQLITE_NOINLINE
 
	`__de˛•ec
(
noölöe
)

	)

228 
	#SQLITE_NOINLINE


	)

236 #i‡!
	`deföed
(
SQLITE_DISABLE_INTRINSIC
)

237 #i‡
	`deföed
(
_MSC_VER
) && _MSC_VER>=1400

238 #i‡!
	`deföed
(
_WIN32_WCE
)

239 
	~<öåö.h
>

240 #¥agm®
	`öåösic
(
_byãsw≠_ush‹t
)

241 #¥agm®
	`öåösic
(
_byãsw≠_ul⁄g
)

242 #¥agm®
	`öåösic
(
_RódWrôeB¨rõr
)

244 
	~<cmnöåö.h
>

260 #i‡!
	`deföed
(
SQLITE_THREADSAFE
)

261 #i‡
	`deföed
(
THREADSAFE
)

262 
	#SQLITE_THREADSAFE
 
THREADSAFE


	)

264 
	#SQLITE_THREADSAFE
 1

	)

272 #i‚de‡
SQLITE_POWERSAFE_OVERWRITE


273 
	#SQLITE_POWERSAFE_OVERWRITE
 1

	)

281 #i‡!
	`deföed
(
SQLITE_DEFAULT_MEMSTATUS
)

282 
	#SQLITE_DEFAULT_MEMSTATUS
 1

	)

302 #i‡
	`deföed
(
SQLITE_SYSTEM_MALLOC
) \

303 + 
	`deföed
(
SQLITE_WIN32_MALLOC
) \

304 + 
	`deföed
(
SQLITE_ZERO_MALLOC
) \

305 + 
	`deföed
(
SQLITE_MEMDEBUG
)>1

311 #i‡
	`deföed
(
SQLITE_SYSTEM_MALLOC
) \

312 + 
	`deföed
(
SQLITE_WIN32_MALLOC
) \

313 + 
	`deföed
(
SQLITE_ZERO_MALLOC
) \

314 + 
	`deföed
(
SQLITE_MEMDEBUG
)==0

315 
	#SQLITE_SYSTEM_MALLOC
 1

	)

322 #i‡!
	`deföed
(
SQLITE_MALLOC_SOFT_LIMIT
)

323 
	#SQLITE_MALLOC_SOFT_LIMIT
 1024

	)

332 #i‡!
	`deföed
(
_XOPEN_SOURCE
Ë&& !deföed(
__DARWIN__
Ë&& !deföed(
__APPLE__
)

333 
	#_XOPEN_SOURCE
 600

	)

347 #i‡!
	`deföed
(
NDEBUG
Ë&& !deföed(
SQLITE_DEBUG
)

348 
	#NDEBUG
 1

	)

350 #i‡
	`deföed
(
NDEBUG
Ë&& deföed(
SQLITE_DEBUG
)

351 #unde‡
NDEBUG


357 #i‡!
	`deföed
(
SQLITE_ENABLE_EXPLAIN_COMMENTS
Ë&& deföed(
SQLITE_DEBUG
)

358 
	#SQLITE_ENABLE_EXPLAIN_COMMENTS
 1

	)

375 #ifde‡
SQLITE_COVERAGE_TEST


376 
	`sqlôe3Covîage
();

377 
	#ã°ˇ£
(
X
Ëif–X ){ 
	`sqlôe3Covîage
(
__LINE__
); 
	}

	)
}

379 
	#ã°ˇ£
(
X
)

	)

387 #i‡!
deföed
(
NDEBUG
Ë|| deföed(
SQLITE_COVERAGE_TEST
)

388 
	#TESTONLY
(
X
Ë
	)
X

390 
	#TESTONLY
(
X
)

	)

401 #i‚de‡
NDEBUG


402 
	#VVA_ONLY
(
X
Ë
	)
X

404 
	#VVA_ONLY
(
X
)

	)

422 #i‡
deföed
(
SQLITE_COVERAGE_TEST
Ë|| deföed(
SQLITE_MUTATION_TEST
)

423 
	#ALWAYS
(
X
Ë(1)

	)

424 
	#NEVER
(
X
Ë(0)

	)

425 #ñi‡!
deföed
(
NDEBUG
)

426 
	#ALWAYS
(
X
Ë((X)?1:(
	`as£π
(0),0))

	)

427 
	#NEVER
(
X
Ë((X)?(
	`as£π
(0),1):0)

	)

429 
	#ALWAYS
(
X
Ë(X)

	)

430 
	#NEVER
(
X
Ë(X)

	)

440 #i‡
deföed
(
SQLITE_TEST_REALLOC_STRESS
)

441 
	#ONLY_IF_REALLOC_STRESS
(
X
Ë(X)

	)

442 #ñi‡!
deföed
(
NDEBUG
)

443 
	#ONLY_IF_REALLOC_STRESS
(
X
Ë((X)?(
	`as£π
(0),1):0)

	)

445 
	#ONLY_IF_REALLOC_STRESS
(
X
Ë(0)

	)

451 #i‡
deföed
(
SQLITE_FORCE_OS_TRACE
Ë|| deföed(
SQLITE_TEST
) || \

452 (
deföed
(
SQLITE_DEBUG
Ë&& 
	gSQLITE_OS_WIN
)

453 
sqlôe3OSTø˚
;

454 
	#OSTRACE
(
X
Ëif–
sqlôe3OSTø˚
 ) 
sqlôe3DebugPrötf
 
	)
X

455 
	#SQLITE_HAVE_OS_TRACE


	)

457 
	#OSTRACE
(
X
)

	)

458 #unde‡
SQLITE_HAVE_OS_TRACE


467 #i‡
deföed
(
SQLITE_HAVE_OS_TRACE
Ë|| deföed(
SQLITE_TEST
) || \

468 (
deföed
(
SQLITE_DEBUG
Ë&& 
	gSQLITE_OS_WIN
)

469 
	#SQLITE_NEED_ERR_NAME


	)

471 #unde‡
SQLITE_NEED_ERR_NAME


477 #ifde‡
SQLITE_OMIT_EXPLAIN


478 #unde‡
SQLITE_ENABLE_EXPLAIN_COMMENTS


486 
	#IS_BIG_INT
(
X
Ë(((X)&~(
i64
)0xffffffff)!=0)

	)

495 
	#likñy
(
X
Ë(X)

	)

496 
	#u∆ikñy
(
X
Ë(X)

	)

498 
	~"hash.h
"

499 
	~"∑r£.h
"

500 
	~<°dio.h
>

501 
	~<°dlib.h
>

502 
	~<°rög.h
>

503 
	~<as£π.h
>

504 
	~<°ddef.h
>

510 #ifde‡
SQLITE_OMIT_FLOATING_POINT


511 
sqlôe_öt64


	)

512 
sqlôe_öt64


	)

513 
	#LONGDOUBLE_TYPE
 
sqlôe_öt64


	)

514 #i‚de‡
SQLITE_BIG_DBL


515 
	#SQLITE_BIG_DBL
 (((
sqlôe3_öt64
)1)<<50)

	)

517 
	#SQLITE_OMIT_DATETIME_FUNCS
 1

	)

518 
	#SQLITE_OMIT_TRACE
 1

	)

519 #unde‡
SQLITE_MIXED_ENDIAN_64BIT_FLOAT


520 #unde‡
SQLITE_HAVE_ISNAN


522 #i‚de‡
SQLITE_BIG_DBL


523 
	#SQLITE_BIG_DBL
 (1e99)

	)

531 #ifde‡
SQLITE_OMIT_TEMPDB


532 
	#OMIT_TEMPDB
 1

	)

534 
	#OMIT_TEMPDB
 0

	)

543 
	#SQLITE_MAX_FILE_FORMAT
 4

	)

544 #i‚de‡
SQLITE_DEFAULT_FILE_FORMAT


545 
	#SQLITE_DEFAULT_FILE_FORMAT
 4

	)

552 #i‚de‡
SQLITE_DEFAULT_RECURSIVE_TRIGGERS


553 
	#SQLITE_DEFAULT_RECURSIVE_TRIGGERS
 0

	)

560 #i‚de‡
SQLITE_TEMP_STORE


561 
	#SQLITE_TEMP_STORE
 1

	)

562 
	#SQLITE_TEMP_STORE_xc
 1

	)

570 #i‡
SQLITE_TEMP_STORE
==3 || 
SQLITE_THREADSAFE
==0

571 #unde‡
SQLITE_MAX_WORKER_THREADS


572 
	#SQLITE_MAX_WORKER_THREADS
 0

	)

574 #i‚de‡
SQLITE_MAX_WORKER_THREADS


575 
	#SQLITE_MAX_WORKER_THREADS
 8

	)

577 #i‚de‡
SQLITE_DEFAULT_WORKER_THREADS


578 
	#SQLITE_DEFAULT_WORKER_THREADS
 0

	)

580 #i‡
SQLITE_DEFAULT_WORKER_THREADS
>
SQLITE_MAX_WORKER_THREADS


581 #unde‡
SQLITE_MAX_WORKER_THREADS


582 
	#SQLITE_MAX_WORKER_THREADS
 
SQLITE_DEFAULT_WORKER_THREADS


	)

591 #i‚de‡
SQLITE_DEFAULT_PCACHE_INITSZ


592 
	#SQLITE_DEFAULT_PCACHE_INITSZ
 100

	)

599 #i‚de‡
off£tof


600 
	#off£tof
(
STRUCTURE
,
FIELD
Ë(()((*)&((STRUCTURE*)0)->FIELD))

	)

606 #i‚de‡
MIN


607 
	#MIN
(
A
,
B
Ë((A)<(B)?(A):(B))

	)

609 #i‚de‡
MAX


610 
	#MAX
(
A
,
B
Ë((A)>(B)?(A):(B))

	)

616 
	#SWAP
(
TYPE
,
A
,
B
Ë{TYPE 
t
=A; A=B; BÒ;}

	)

623 
	#SQLITE_EBCDIC
 1

	)

625 
	#SQLITE_ASCII
 1

	)

635 #i‚de‡
UINT32_TYPE


636 #ifde‡
HAVE_UINT32_T


637 
	#UINT32_TYPE
 
uöt32_t


	)

639 
	#UINT32_TYPE
 

	)

642 #i‚de‡
UINT16_TYPE


643 #ifde‡
HAVE_UINT16_T


644 
	#UINT16_TYPE
 
uöt16_t


	)

646 
	#UINT16_TYPE
 

	)

649 #i‚de‡
INT16_TYPE


650 #ifde‡
HAVE_INT16_T


651 
	#INT16_TYPE
 
öt16_t


	)

653 
	#INT16_TYPE
 

	)

656 #i‚de‡
UINT8_TYPE


657 #ifde‡
HAVE_UINT8_T


658 
	#UINT8_TYPE
 
uöt8_t


	)

660 
	#UINT8_TYPE
 

	)

663 #i‚de‡
INT8_TYPE


664 #ifde‡
HAVE_INT8_T


665 
	#INT8_TYPE
 
öt8_t


	)

667 
	#INT8_TYPE
 sig√d 

	)

670 #i‚de‡
LONGDOUBLE_TYPE


671 
	#LONGDOUBLE_TYPE
 

	)

673 
sqlôe_öt64
 
	ti64
;

674 
sqlôe_uöt64
 
	tu64
;

675 
UINT32_TYPE
 
	tu32
;

676 
UINT16_TYPE
 
	tu16
;

677 
INT16_TYPE
 
	ti16
;

678 
UINT8_TYPE
 
	tu8
;

679 
INT8_TYPE
 
	ti8
;

687 
	#SQLITE_MAX_U32
 ((((
u64
)1)<<32)-1)

	)

695 #ifde‡
SQLITE_64BIT_STATS


696 
u64
 
	ttRow˙t
;

698 
u32
 
	ttRow˙t
;

724 
INT16_TYPE
 
	tLogE°
;

729 #i‚de‡
SQLITE_PTRSIZE


730 #i‡
deföed
(
__SIZEOF_POINTER__
)

731 
	#SQLITE_PTRSIZE
 
__SIZEOF_POINTER__


	)

732 #ñi‡
deföed
(
i386
Ë|| deföed(
__i386__
Ë|| deföed(
_M_IX86
) || \

733 
deföed
(
_M_ARM
Ë|| deföed(
__¨m__
Ë|| 
	$deföed
(
__x86
)

734 
	#SQLITE_PTRSIZE
 4

	)

736 
	#SQLITE_PTRSIZE
 8

	)

742 #i‡
	`deföed
(
HAVE_STDINT_H
)

743 
uöçå_t
 
	tu±r
;

744 #ñi‡
SQLITE_PTRSIZE
==4

745 
u32
 
	tu±r
;

747 
u64
 
	tu±r
;

758 
	#SQLITE_WITHIN
(
P
,
S
,
E
Ë(((
u±r
)(P)>=(u±r)(S))&&((u±r)(P)<(u±r)(E)))

	)

770 #i‡(
	`deföed
(
i386
Ë|| deföed(
__i386__
Ë|| deföed(
_M_IX86
) || \

771 
	`deföed
(
__x86_64
Ë|| deföed(
__x86_64__
Ë|| deföed(
_M_X64
) || \

772 
	`deföed
(
_M_AMD64
Ë|| deföed(
_M_ARM
Ë|| deföed(
__x86
) || \

773 
	`deföed
(
__¨m__
)Ë&& !
	$deföed
(
SQLITE_RUNTIME_BYTEORDER
)

774 
	#SQLITE_BYTEORDER
 1234

	)

775 
	#SQLITE_BIGENDIAN
 0

	)

776 
	#SQLITE_LITTLEENDIAN
 1

	)

777 
	#SQLITE_UTF16NATIVE
 
SQLITE_UTF16LE


	)

779 #i‡(
	`deföed
(
•¨c
Ë|| deföed(
__µc__
)) \

780 && !
	$deföed
(
SQLITE_RUNTIME_BYTEORDER
)

781 
	#SQLITE_BYTEORDER
 4321

	)

782 
	#SQLITE_BIGENDIAN
 1

	)

783 
	#SQLITE_LITTLEENDIAN
 0

	)

784 
	#SQLITE_UTF16NATIVE
 
SQLITE_UTF16BE


	)

786 #i‡!
	`deföed
(
SQLITE_BYTEORDER
)

787 #ifde‡
SQLITE_AMALGAMATION


788 c⁄° 
sqlôe3⁄e
 = 1;

790 c⁄° 
sqlôe3⁄e
;

792 
	#SQLITE_BYTEORDER
 0

	)

793 
	#SQLITE_BIGENDIAN
 (*(*)(&
sqlôe3⁄e
)==0)

	)

794 
	#SQLITE_LITTLEENDIAN
 (*(*)(&
sqlôe3⁄e
)==1)

	)

795 
	#SQLITE_UTF16NATIVE
 (
SQLITE_BIGENDIAN
?
SQLITE_UTF16BE
:
SQLITE_UTF16LE
)

	)

803 
	#LARGEST_INT64
 (0xffffffff|(((
i64
)0x7fffffff)<<32))

	)

804 
	#SMALLEST_INT64
 (((
i64
)-1Ë- 
LARGEST_INT64
)

	)

810 
	#ROUND8
(
x
Ë(((x)+7)&~7)

	)

815 
	#ROUNDDOWN8
(
x
Ë((x)&~7)

	)

826 #ifde‡
SQLITE_4_BYTE_ALIGNED_MALLOC


827 
	#EIGHT_BYTE_ALIGNMENT
(
X
Ë((((*)(XË- (*)0)&3)==0)

	)

829 
	#EIGHT_BYTE_ALIGNMENT
(
X
Ë((((*)(XË- (*)0)&7)==0)

	)

835 #i‡
	`deföed
(
__O≥nBSD__
Ë|| deföed(
__QNXNTO__
)

836 #unde‡
SQLITE_MAX_MMAP_SIZE


837 
	#SQLITE_MAX_MMAP_SIZE
 0

	)

843 #ifde‡
__APPLE__


844 
	~<T¨gëC⁄dôi⁄Æs.h
>

846 #i‚de‡
SQLITE_MAX_MMAP_SIZE


847 #i‡
	`deföed
(
__löux__
) \

848 || 
	`deföed
(
_WIN32
) \

849 || (
	`deföed
(
__APPLE__
Ë&& deföed(
__MACH__
)) \

850 || 
	`deföed
(
__sun
) \

851 || 
	`deföed
(
__FªeBSD__
) \

852 || 
	$deföed
(
__Døg⁄Fly__
)

853 
	#SQLITE_MAX_MMAP_SIZE
 0x7fff0000

	)

855 
	#SQLITE_MAX_MMAP_SIZE
 0

	)

857 
	#SQLITE_MAX_MMAP_SIZE_xc
 1

	)

865 #i‚de‡
SQLITE_DEFAULT_MMAP_SIZE


866 
	#SQLITE_DEFAULT_MMAP_SIZE
 0

	)

867 
	#SQLITE_DEFAULT_MMAP_SIZE_xc
 1

	)

869 #i‡
SQLITE_DEFAULT_MMAP_SIZE
>
SQLITE_MAX_MMAP_SIZE


870 #unde‡
SQLITE_DEFAULT_MMAP_SIZE


871 
	#SQLITE_DEFAULT_MMAP_SIZE
 
SQLITE_MAX_MMAP_SIZE


	)

879 #ifde‡
SQLITE_ENABLE_STAT4


880 #unde‡
SQLITE_ENABLE_STAT3


881 
	#SQLITE_ENABLE_STAT3_OR_STAT4
 1

	)

882 #ñi‡
SQLITE_ENABLE_STAT3


883 
	#SQLITE_ENABLE_STAT3_OR_STAT4
 1

	)

884 #ñi‡
SQLITE_ENABLE_STAT3_OR_STAT4


885 #unde‡
SQLITE_ENABLE_STAT3_OR_STAT4


892 #i‡
	`deföed
(
SQLITE_DEBUG
Ë|| deföed(
SQLITE_ENABLE_SELECTTRACE
)

893 
	#SELECTTRACE_ENABLED
 1

	)

895 
	#SELECTTRACE_ENABLED
 0

	)

907 
BusyH™dÀr
 
	tBusyH™dÀr
;

908 
	sBusyH™dÀr
 {

909 (*
xFunc
)(*,);

910 *
pArg
;

911 
nBusy
;

919 
	#MASTER_NAME
 "sqlôe_ma°î"

	)

920 
	#TEMP_MASTER_NAME
 "sqlôe_ãmp_ma°î"

	)

925 
	#MASTER_ROOT
 1

	)

930 
	#SCHEMA_TABLE
(
x
Ë((!
OMIT_TEMPDB
)&&(x==1)?
TEMP_MASTER_NAME
:
MASTER_NAME
)

	)

936 
	#AºaySize
(
X
Ë(()((X)/(X[0])))

	)

941 
	#IsPowîOfTwo
(
X
Ë(((X)&((X)-1))==0)

	)

951 
	#SQLITE_DYNAMIC
 ((
sqlôe3_de°ru˘‹_ty≥
)
sqlôe3MÆlocSize
)

	)

967 #ifde‡
SQLITE_OMIT_WSD


968 
	#SQLITE_WSD
 c⁄°

	)

969 
	#GLOBAL
(
t
,
v
Ë(*—*)
	`sqlôe3_wsd_föd
((*)&(v), (v)))

	)

970 
	#sqlôe3GlobÆC⁄fig
 
	`GLOBAL
(
Sqlôe3C⁄fig
, 
sqlôe3C⁄fig
)

	)

971 
	`sqlôe3_wsd_öô
(
N
, 
J
);

972 *
	`sqlôe3_wsd_föd
(*
K
, 
L
);

974 
	#SQLITE_WSD


	)

975 
	#GLOBAL
(
t
,
v
Ë
	)
v

976 
	#sqlôe3GlobÆC⁄fig
 
sqlôe3C⁄fig


	)

995 
	#UNUSED_PARAMETER
(
x
Ë()(x)

	)

996 
	#UNUSED_PARAMETER2
(
x
,
y
Ë
	`UNUSED_PARAMETER
(x),UNUSED_PARAMETER(y)

	)

1001 
AggInfo
 
	tAggInfo
;

1002 
AuthC⁄ãxt
 
	tAuthC⁄ãxt
;

1003 
AutoöcInfo
 
	tAutoöcInfo
;

1004 
Bôvec
 
	tBôvec
;

1005 
CﬁlSeq
 
	tCﬁlSeq
;

1006 
Cﬁumn
 
	tCﬁumn
;

1007 
Db
 
	tDb
;

1008 
Schema
 
	tSchema
;

1009 
Ex¥
 
	tEx¥
;

1010 
Ex¥Li°
 
	tEx¥Li°
;

1011 
Ex¥S∑n
 
	tEx¥S∑n
;

1012 
FKey
 
	tFKey
;

1013 
FuncDe°ru˘‹
 
	tFuncDe°ru˘‹
;

1014 
FuncDef
 
	tFuncDef
;

1015 
FuncDefHash
 
	tFuncDefHash
;

1016 
IdLi°
 
	tIdLi°
;

1017 
Index
 
	tIndex
;

1018 
IndexSam∂e
 
	tIndexSam∂e
;

1019 
KeyCœss
 
	tKeyCœss
;

1020 
KeyInfo
 
	tKeyInfo
;

1021 
Lookaside
 
	tLookaside
;

1022 
LookasideSlŸ
 
	tLookasideSlŸ
;

1023 
ModuÀ
 
	tModuÀ
;

1024 
NameC⁄ãxt
 
	tNameC⁄ãxt
;

1025 
P¨£
 
	tP¨£
;

1026 
PªUpd©e
 
	tPªUpd©e
;

1027 
PrötfArgumíts
 
	tPrötfArgumíts
;

1028 
RowSë
 
	tRowSë
;

1029 
Savïoöt
 
	tSavïoöt
;

1030 
Sñe˘
 
	tSñe˘
;

1031 
SQLôeThªad
 
	tSQLôeThªad
;

1032 
Sñe˘De°
 
	tSñe˘De°
;

1033 
SrcLi°
 
	tSrcLi°
;

1034 
SåAccum
 
	tSåAccum
;

1035 
TabÀ
 
	tTabÀ
;

1036 
TabÀLock
 
	tTabÀLock
;

1037 
Tokí
 
	tTokí
;

1038 
TªeVõw
 
	tTªeVõw
;

1039 
Triggî
 
	tTriggî
;

1040 
TriggîPrg
 
	tTriggîPrg
;

1041 
TriggîSãp
 
	tTriggîSãp
;

1042 
U≈ackedRec‹d
 
	tU≈ackedRec‹d
;

1043 
VTabÀ
 
	tVTabÀ
;

1044 
VèbCtx
 
	tVèbCtx
;

1045 
WÆkî
 
	tWÆkî
;

1046 
WhîeInfo
 
	tWhîeInfo
;

1047 
Wôh
 
	tWôh
;

1055 
	tVLi°
;

1063 
	~"båì.h
"

1064 
	~"vdbe.h
"

1065 
	~"∑gî.h
"

1066 
	~"pˇche.h
"

1067 
	~"os.h
"

1068 
	~"muãx.h
"

1069 
	~"log.h
"

1074 #ifde‡
SQLITE_EXTRA_DURABLE


1075 #w¨nög 
U£
 
SQLITE_DEFAULT_SYNCHRONOUS
=3 
ö°ód
 
of
 
SQLITE_EXTRA_DURABLE


1076 
	#SQLITE_DEFAULT_SYNCHRONOUS
 3

	)

1095 #i‚de‡
SQLITE_DEFAULT_SYNCHRONOUS


1096 
	#SQLITE_DEFAULT_SYNCHRONOUS
 (
PAGER_SYNCHRONOUS_FULL
-1)

	)

1098 #i‚de‡
SQLITE_DEFAULT_WAL_SYNCHRONOUS


1099 
	#SQLITE_DEFAULT_WAL_SYNCHRONOUS
 
SQLITE_DEFAULT_SYNCHRONOUS


	)

1109 
	sDb
 {

1110 *
zDbSName
;

1111 
Båì
 *
pBt
;

1112 
u8
 
ß„ty_Àvñ
;

1113 
u8
 
bSyncSë
;

1114 
Schema
 *
pSchema
;

1134 
	sSchema
 {

1135 
schema_cookõ
;

1136 
iGíî©i⁄
;

1137 
Hash
 
tblHash
;

1138 
Hash
 
idxHash
;

1139 
Hash
 
åigHash
;

1140 
Hash
 
fkeyHash
;

1141 
TabÀ
 *
pSeqTab
;

1142 
u8
 
fûe_f‹m©
;

1143 
u8
 
íc
;

1144 
u16
 
schemaFœgs
;

1145 
ˇche_size
;

1152 
	#DbHasPr›îty
(
D
,
I
,
P
Ë(((D)->
aDb
[I].
pSchema
->
schemaFœgs
&(P))==(P))

	)

1153 
	#DbHasAnyPr›îty
(
D
,
I
,
P
Ë(((D)->
aDb
[I].
pSchema
->
schemaFœgs
&(P))!=0)

	)

1154 
	#DbSëPr›îty
(
D
,
I
,
P
Ë(D)->
aDb
[I].
pSchema
->
schemaFœgs
|=(P)

	)

1155 
	#DbCÀ¨Pr›îty
(
D
,
I
,
P
Ë(D)->
aDb
[I].
pSchema
->
schemaFœgs
&=~(P)

	)

1167 
	#DB_SchemaLﬂded
 0x0001

	)

1168 
	#DB_Uƒe£tVõws
 0x0002

	)

1169 
	#DB_Em±y
 0x0004

	)

1175 
	#SQLITE_N_LIMIT
 (
SQLITE_LIMIT_WORKER_THREADS
+1)

	)

1197 
	sLookaside
 {

1198 
u32
 
bDißbÀ
;

1199 
u16
 
sz
;

1200 
u8
 
bMÆlo˚d
;

1201 
nOut
;

1202 
mxOut
;

1203 
™Sèt
[3];

1204 
LookasideSlŸ
 *
pFªe
;

1205 *
pSèπ
;

1206 *
pEnd
;

1208 
	sLookasideSlŸ
 {

1209 
LookasideSlŸ
 *
pNext
;

1219 
	#SQLITE_FUNC_HASH_SZ
 23

	)

1220 
	sFuncDefHash
 {

1221 
FuncDef
 *
a
[
SQLITE_FUNC_HASH_SZ
];

1224 #ifde‡
SQLITE_USER_AUTHENTICATION


1229 
sqlôe3_u£øuth
 
	tsqlôe3_u£øuth
;

1230 
	ssqlôe3_u£øuth
 {

1231 
u8
 
authLevñ
;

1232 
nAuthPW
;

1233 *
zAuthPW
;

1234 *
zAuthU£r
;

1238 
	#UAUTH_Unknown
 0

	)

1239 
	#UAUTH_Faû
 1

	)

1240 
	#UAUTH_U£r
 2

	)

1241 
	#UAUTH_Admö
 3

	)

1244 
	`sqlôe3U£rAuthTabÀ
(const *);

1245 
	`sqlôe3U£rAuthCheckLogö
(
sqlôe3
*,c⁄° *,
u8
*);

1246 
	`sqlôe3U£rAuthInô
(
sqlôe3
*);

1247 
	`sqlôe3Cry±Func
(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**);

1254 #ifde‡
SQLITE_USER_AUTHENTICATION


1255 (*
	tsqlôe3_xauth
)(*,,const *,const *,const *,

1258 (*
	tsqlôe3_xauth
)(*,,const *,const *,const *,

1262 #i‚de‡
SQLITE_OMIT_DEPRECATED


1266 
	#SQLITE_TRACE_LEGACY
 0x80

	)

1268 
	#SQLITE_TRACE_LEGACY
 0

	)

1275 
	ssqlôe3
 {

1276 
sqlôe3_vfs
 *
pVfs
;

1277 
Vdbe
 *
pVdbe
;

1278 
CﬁlSeq
 *
pDÊtCﬁl
;

1279 
sqlôe3_muãx
 *
muãx
;

1280 
Db
 *
aDb
;

1281 
nDb
;

1282 
Êags
;

1283 
i64
 
œ°Rowid
;

1284 
i64
 
szMm≠
;

1285 
›íFœgs
;

1286 
îrCode
;

1287 
îrMask
;

1288 
iSysEºno
;

1289 
u16
 
dbO±Fœgs
;

1290 
u8
 
íc
;

1291 
u8
 
autoCommô
;

1292 
u8
 
ãmp_°‹e
;

1293 
u8
 
mÆlocFaûed
;

1294 
u8
 
bBíignMÆloc
;

1295 
u8
 
dÊtLockMode
;

1296 sig√d 
√xtAutovac
;

1297 
u8
 
suµªssEº
;

1298 
u8
 
vèbOnC⁄Êi˘
;

1299 
u8
 
isTønß˘i⁄Savïoöt
;

1300 
u8
 
mTø˚
;

1301 
√xtPagesize
;

1302 
u32
 
magic
;

1303 
nCh™ge
;

1304 
nTŸÆCh™ge
;

1305 
aLimô
[
SQLITE_N_LIMIT
];

1306 
nMaxS‹ãrMm≠
;

1307 
	ssqlôe3InôInfo
 {

1308 
√wTnum
;

1309 
u8
 
iDb
;

1310 
u8
 
busy
;

1311 
u8
 
‹ph™Triggî
;

1312 
u8
 
impo°îTabÀ
;

1313 } 
öô
;

1314 
nVdbeA˘ive
;

1315 
nVdbeRód
;

1316 
nVdbeWrôe
;

1317 
nVdbeExec
;

1318 
nVDe°roy
;

1319 
nExãnsi⁄
;

1320 **
aExãnsi⁄
;

1321 (*
xTø˚
)(
u32
,*,*,*);

1322 *
pTø˚Arg
;

1323 (*
xProfûe
)(*,c⁄° *,
u64
);

1324 *
pProfûeArg
;

1325 *
pCommôArg
;

1326 (*
xCommôCÆlback
)(*);

1327 *
pRﬁlbackArg
;

1328 (*
xRﬁlbackCÆlback
)(*);

1329 *
pUpd©eArg
;

1330 (*
xUpd©eCÆlback
)(*,, c⁄° *,c⁄° *,
sqlôe_öt64
);

1331 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


1332 *
pPªUpd©eArg
;

1333 (*
xPªUpd©eCÆlback
)(

1334 *,
sqlôe3
*,,c⁄°*,c⁄°*,
sqlôe3_öt64
,sqlite3_int64

1336 
PªUpd©e
 *
pPªUpd©e
;

1338 #i‚de‡
SQLITE_OMIT_WAL


1339 (*
xWÆCÆlback
)(*, 
sqlôe3
 *, const *, );

1340 *
pWÆArg
;

1342 (*
xCﬁlNìded
)(*,
sqlôe3
*,
eTextRï
,const *);

1343 (*
xCﬁlNìded16
)(*,
sqlôe3
*,
eTextRï
,const *);

1344 *
pCﬁlNìdedArg
;

1345 
sqlôe3_vÆue
 *
pEº
;

1347 vﬁ©ûê
isI¡îru±ed
;

1348 
nŸU£d1
;

1349 } 
u1
;

1350 
Lookaside
 
lookaside
;

1351 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


1352 
sqlôe3_xauth
 
xAuth
;

1353 *
pAuthArg
;

1355 #i‚de‡
SQLITE_OMIT_PROGRESS_CALLBACK


1356 (*
xProgªss
)(*);

1357 *
pProgªssArg
;

1358 
nProgªssOps
;

1360 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


1361 
nVTøns
;

1362 
Hash
 
aModuÀ
;

1363 
VèbCtx
 *
pVèbCtx
;

1364 
VTabÀ
 **
aVTøns
;

1365 
VTabÀ
 *
pDisc⁄√˘
;

1367 
Hash
 
aFunc
;

1368 
Hash
 
aCﬁlSeq
;

1369 
BusyH™dÀr
 
busyH™dÀr
;

1370 
Db
 
aDbSètic
[2];

1371 
Savïoöt
 *
pSavïoöt
;

1372 
busyTimeout
;

1373 
nSavïoöt
;

1374 
nSèãmít
;

1375 
i64
 
nDe„ºedC⁄s
;

1376 
i64
 
nDe„ºedImmC⁄s
;

1377 *
≤ByãsFªed
;

1378 #ifde‡
SQLITE_ENABLE_UNLOCK_NOTIFY


1389 
sqlôe3
 *
pBlockögC⁄√˘i⁄
;

1390 
sqlôe3
 *
pU∆ockC⁄√˘i⁄
;

1391 *
pU∆ockArg
;

1392 (*
xU∆ockNŸify
)(**, );

1393 
sqlôe3
 *
pNextBlocked
;

1395 #ifde‡
SQLITE_USER_AUTHENTICATION


1396 
sqlôe3_u£øuth
 
auth
;

1403 
	#SCHEMA_ENC
(
db
Ë((db)->
aDb
[0].
pSchema
->
íc
)

	)

1404 
	#ENC
(
db
Ë((db)->
íc
)

	)

1414 
	#SQLITE_VdbeTø˚
 0x00000001

	)

1415 
	#SQLITE_I¡înCh™ges
 0x00000002

	)

1416 
	#SQLITE_FuŒCﬁNames
 0x00000004

	)

1417 
	#SQLITE_FuŒFSync
 0x00000008

	)

1418 
	#SQLITE_Ck±FuŒFSync
 0x00000010

	)

1419 
	#SQLITE_CacheSpûl
 0x00000020

	)

1420 
	#SQLITE_Sh‹tCﬁNames
 0x00000040

	)

1421 
	#SQLITE_Cou¡Rows
 0x00000080

	)

1424 
	#SQLITE_NuŒCÆlback
 0x00000100

	)

1426 
	#SQLITE_SqlTø˚
 0x00000200

	)

1427 
	#SQLITE_VdbeLi°ög
 0x00000400

	)

1428 
	#SQLITE_WrôeSchema
 0x00000800

	)

1429 
	#SQLITE_VdbeAdd›Tø˚
 0x00001000

	)

1430 
	#SQLITE_Ign‹eChecks
 0x00002000

	)

1431 
	#SQLITE_RódUncommôãd
 0x0004000

	)

1432 
	#SQLITE_LegacyFûeFmt
 0x00008000

	)

1433 
	#SQLITE_RecovîyMode
 0x00010000

	)

1434 
	#SQLITE_Revî£Ordî
 0x00020000

	)

1435 
	#SQLITE_RecTriggîs
 0x00040000

	)

1436 
	#SQLITE_F‹eignKeys
 0x00080000

	)

1437 
	#SQLITE_AutoIndex
 0x00100000

	)

1438 
	#SQLITE_Pª„rBuûtö
 0x00200000

	)

1439 
	#SQLITE_LﬂdExãnsi⁄
 0x00400000

	)

1440 
	#SQLITE_LﬂdExtFunc
 0x00800000

	)

1441 
	#SQLITE_E«bÀTriggî
 0x01000000

	)

1442 
	#SQLITE_De„rFKs
 0x02000000

	)

1443 
	#SQLITE_QuîyO∆y
 0x04000000

	)

1444 
	#SQLITE_VdbeEQP
 0x08000000

	)

1445 
	#SQLITE_Vacuum
 0x10000000

	)

1446 
	#SQLITE_CñlSizeCk
 0x20000000

	)

1447 
	#SQLITE_Fts3Tokíizî
 0x40000000

	)

1448 
	#SQLITE_NoCk±OnClo£
 0x80000000

	)

1456 
	#SQLITE_QuîyFœâíî
 0x0001

	)

1457 
	#SQLITE_CﬁumnCache
 0x0002

	)

1458 
	#SQLITE_GroupByOrdî
 0x0004

	)

1459 
	#SQLITE_Fa˘‹OutC⁄°
 0x0008

	)

1461 
	#SQLITE_Di°ö˘O±
 0x0020

	)

1462 
	#SQLITE_CovîIdxSˇn
 0x0040

	)

1463 
	#SQLITE_OrdîByIdxJoö
 0x0080

	)

1464 
	#SQLITE_SubqC‹outöe
 0x0100

	)

1465 
	#SQLITE_Tønsôive
 0x0200

	)

1466 
	#SQLITE_OmôNo›Joö
 0x0400

	)

1467 
	#SQLITE_Sèt34
 0x0800

	)

1468 
	#SQLITE_Curs‹Höts
 0x2000

	)

1469 
	#SQLITE_AŒO±s
 0xfff‡

	)

1474 
	#O±imiz©i⁄DißbÀd
(
db
, 
mask
Ë(((db)->
dbO±Fœgs
&(mask))!=0)

	)

1475 
	#O±imiz©i⁄E«bÀd
(
db
, 
mask
Ë(((db)->
dbO±Fœgs
&(mask))==0)

	)

1481 
	#C⁄°Fa˘‹Ok
(
P
Ë((P)->
okC⁄°Fa˘‹
)

	)

1488 
	#SQLITE_MAGIC_OPEN
 0xa029a697

	)

1489 
	#SQLITE_MAGIC_CLOSED
 0x9f3c2d33

	)

1490 
	#SQLITE_MAGIC_SICK
 0x4b771290

	)

1491 
	#SQLITE_MAGIC_BUSY
 0xf03b7906

	)

1492 
	#SQLITE_MAGIC_ERROR
 0xb5357930

	)

1493 
	#SQLITE_MAGIC_ZOMBIE
 0x64cffc7‡

	)

1505 
	sFuncDef
 {

1506 
i8
 
nArg
;

1507 
u16
 
funcFœgs
;

1508 *
pU£rD©a
;

1509 
FuncDef
 *
pNext
;

1510 (*
xSFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**);

1511 (*
xFöÆize
)(
sqlôe3_c⁄ãxt
*);

1512 c⁄° *
zName
;

1514 
FuncDef
 *
pHash
;

1515 
FuncDe°ru˘‹
 *
pDe°ru˘‹
;

1516 } 
u
;

1533 
	sFuncDe°ru˘‹
 {

1534 
nRef
;

1535 (*
xDe°roy
)(*);

1536 *
pU£rD©a
;

1552 
	#SQLITE_FUNC_ENCMASK
 0x0003

	)

1553 
	#SQLITE_FUNC_LIKE
 0x0004

	)

1554 
	#SQLITE_FUNC_CASE
 0x0008

	)

1555 
	#SQLITE_FUNC_EPHEM
 0x0010

	)

1556 
	#SQLITE_FUNC_NEEDCOLL
 0x0020

	)

1557 
	#SQLITE_FUNC_LENGTH
 0x0040

	)

1558 
	#SQLITE_FUNC_TYPEOF
 0x0080

	)

1559 
	#SQLITE_FUNC_COUNT
 0x0100

	)

1560 
	#SQLITE_FUNC_COALESCE
 0x0200

	)

1561 
	#SQLITE_FUNC_UNLIKELY
 0x0400

	)

1562 
	#SQLITE_FUNC_CONSTANT
 0x0800

	)

1563 
	#SQLITE_FUNC_MINMAX
 0x1000

	)

1564 
	#SQLITE_FUNC_SLOCHNG
 0x2000

	)

1601 
	#FUNCTION
(
zName
, 
nArg
, 
iArg
, 
bNC
, 
xFunc
) \

1602 {
nArg
, 
SQLITE_FUNC_CONSTANT
|
SQLITE_UTF8
|(
bNC
*
SQLITE_FUNC_NEEDCOLL
), \

1603 
	`SQLITE_INT_TO_PTR
(
iArg
), 0, 
xFunc
, 0, #zName, {0} 
	}

	)
}

1604 
	#VFUNCTION
(
zName
, 
nArg
, 
iArg
, 
bNC
, 
xFunc
) \

1605 {
nArg
, 
SQLITE_UTF8
|(
bNC
*
SQLITE_FUNC_NEEDCOLL
), \

1606 
	`SQLITE_INT_TO_PTR
(
iArg
), 0, 
xFunc
, 0, #zName, {0} }

	)

1607 
	#DFUNCTION
(
zName
, 
nArg
, 
iArg
, 
bNC
, 
xFunc
) \

1608 {
nArg
, 
SQLITE_FUNC_SLOCHNG
|
SQLITE_UTF8
|(
bNC
*
SQLITE_FUNC_NEEDCOLL
), \

1609 
	`SQLITE_INT_TO_PTR
(
iArg
), 0, 
xFunc
, 0, #zName, {0} }

	)

1610 
	#FUNCTION2
(
zName
, 
nArg
, 
iArg
, 
bNC
, 
xFunc
, 
exåaFœgs
) \

1611 {
nArg
,
SQLITE_FUNC_CONSTANT
|
SQLITE_UTF8
|(
bNC
*
SQLITE_FUNC_NEEDCOLL
)|
exåaFœgs
,\

1612 
	`SQLITE_INT_TO_PTR
(
iArg
), 0, 
xFunc
, 0, #zName, {0} }

	)

1613 
	#STR_FUNCTION
(
zName
, 
nArg
, 
pArg
, 
bNC
, 
xFunc
) \

1614 {
nArg
, 
SQLITE_FUNC_SLOCHNG
|
SQLITE_UTF8
|(
bNC
*
SQLITE_FUNC_NEEDCOLL
), \

1615 
pArg
, 0, 
xFunc
, 0, #zName, }

	)

1616 
	#LIKEFUNC
(
zName
, 
nArg
, 
¨g
, 
Êags
) \

1617 {
nArg
, 
SQLITE_FUNC_CONSTANT
|
SQLITE_UTF8
|
Êags
, \

1618 (*)
¨g
, 0, 
likeFunc
, 0, #zName, {0} }

	)

1619 
	#AGGREGATE
(
zName
, 
nArg
, 
¨g
, 
nc
, 
xSãp
, 
xFöÆ
) \

1620 {
nArg
, 
SQLITE_UTF8
|(
nc
*
SQLITE_FUNC_NEEDCOLL
), \

1621 
	`SQLITE_INT_TO_PTR
(
¨g
), 0, 
xSãp
,
xFöÆ
,#zName, {0}}

	)

1622 
	#AGGREGATE2
(
zName
, 
nArg
, 
¨g
, 
nc
, 
xSãp
, 
xFöÆ
, 
exåaFœgs
) \

1623 {
nArg
, 
SQLITE_UTF8
|(
nc
*
SQLITE_FUNC_NEEDCOLL
)|
exåaFœgs
, \

1624 
	`SQLITE_INT_TO_PTR
(
¨g
), 0, 
xSãp
,
xFöÆ
,#zName, {0}}

	)

1632 
	sSavïoöt
 {

1633 *
	mzName
;

1634 
i64
 
	mnDe„ºedC⁄s
;

1635 
i64
 
	mnDe„ºedImmC⁄s
;

1636 
Savïoöt
 *
	mpNext
;

1643 
	#SAVEPOINT_BEGIN
 0

	)

1644 
	#SAVEPOINT_RELEASE
 1

	)

1645 
	#SAVEPOINT_ROLLBACK
 2

	)

1653 
	sModuÀ
 {

1654 c⁄° 
sqlôe3_moduÀ
 *
	mpModuÀ
;

1655 c⁄° *
	mzName
;

1656 *
	mpAux
;

1657 (*
	mxDe°roy
)(*);

1658 
TabÀ
 *
	mpEpoTab
;

1665 
	sCﬁumn
 {

1666 *
	mzName
;

1667 
Ex¥
 *
	mpDÊt
;

1668 *
	mzCﬁl
;

1669 
u8
 
	mnŸNuŒ
;

1670 
	mafföôy
;

1671 
u8
 
	mszE°
;

1672 
u8
 
	mcﬁFœgs
;

1677 
	#COLFLAG_PRIMKEY
 0x0001

	)

1678 
	#COLFLAG_HIDDEN
 0x0002

	)

1679 
	#COLFLAG_HASTYPE
 0x0004

	)

1690 
	sCﬁlSeq
 {

1691 *
	mzName
;

1692 
u8
 
	míc
;

1693 *
	mpU£r
;

1694 (*
	mxCmp
)(*,, const *, , const *);

1695 (*
	mxDñ
)(*);

1701 
	#SQLITE_SO_ASC
 0

	)

1702 
	#SQLITE_SO_DESC
 1

	)

1703 
	#SQLITE_SO_UNDEFINED
 -1

	)

1719 
	#SQLITE_AFF_BLOB
 'A'

	)

1720 
	#SQLITE_AFF_TEXT
 'B'

	)

1721 
	#SQLITE_AFF_NUMERIC
 'C'

	)

1722 
	#SQLITE_AFF_INTEGER
 'D'

	)

1723 
	#SQLITE_AFF_REAL
 'E'

	)

1725 
	#sqlôe3IsNumîicAfföôy
(
X
Ë((X)>=
SQLITE_AFF_NUMERIC
)

	)

1731 
	#SQLITE_AFF_MASK
 0x47

	)

1742 
	#SQLITE_KEEPNULL
 0x08

	)

1743 
	#SQLITE_JUMPIFNULL
 0x10

	)

1744 
	#SQLITE_STOREP2
 0x20

	)

1745 
	#SQLITE_NULLEQ
 0x80

	)

1746 
	#SQLITE_NOTNULL
 0x90

	)

1790 
	sVTabÀ
 {

1791 
sqlôe3
 *
	mdb
;

1792 
ModuÀ
 *
	mpMod
;

1793 
sqlôe3_vèb
 *
	mpVèb
;

1794 
	mnRef
;

1795 
u8
 
	mbC⁄°øöt
;

1796 
	miSavïoöt
;

1797 
VTabÀ
 *
	mpNext
;

1804 
	sTabÀ
 {

1805 *
	mzName
;

1806 
Cﬁumn
 *
	maCﬁ
;

1807 
Index
 *
	mpIndex
;

1808 
Sñe˘
 *
	mpSñe˘
;

1809 
FKey
 *
	mpFKey
;

1810 *
	mzCﬁAff
;

1811 
Ex¥Li°
 *
	mpCheck
;

1813 
	mäum
;

1814 
u32
 
	mnTabRef
;

1815 
i16
 
	miPKey
;

1816 
i16
 
	mnCﬁ
;

1817 
LogE°
 
	mnRowLogE°
;

1818 
LogE°
 
	mszTabRow
;

1819 #ifde‡
SQLITE_ENABLE_COSTMULT


1820 
LogE°
 
	mco°Mu…
;

1822 
u8
 
	mèbFœgs
;

1823 
u8
 
	mkeyC⁄f
;

1824 #i‚de‡
SQLITE_OMIT_ALTERTABLE


1825 
	maddCﬁOff£t
;

1827 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


1828 
	mnModuÀArg
;

1829 **
	mazModuÀArg
;

1830 
VTabÀ
 *
	mpVTabÀ
;

1832 
Triggî
 *
	mpTriggî
;

1833 
Schema
 *
	mpSchema
;

1834 
TabÀ
 *
	mpNextZombõ
;

1846 
	#TF_Ród⁄ly
 0x01

	)

1847 
	#TF_EphemîÆ
 0x02

	)

1848 
	#TF_HasPrim¨yKey
 0x04

	)

1849 
	#TF_Autoö¸emít
 0x08

	)

1850 
	#TF_VútuÆ
 0x10

	)

1851 
	#TF_WôhoutRowid
 0x20

	)

1852 
	#TF_NoVisibÀRowid
 0x40

	)

1853 
	#TF_OOOHiddí
 0x80

	)

1861 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


1862 
	#IsVútuÆ
(
X
Ë(((X)->
èbFœgs
 & 
TF_VútuÆ
)!=0)

	)

1864 
	#IsVútuÆ
(
X
Ë0

	)

1873 #i‡
deföed
(
SQLITE_ENABLE_HIDDEN_COLUMNS
)

1874 
	#IsHiddíCﬁumn
(
X
Ë(((X)->
cﬁFœgs
 & 
COLFLAG_HIDDEN
)!=0)

	)

1875 
	#IsOrdö¨yHiddíCﬁumn
(
X
Ë(((X)->
cﬁFœgs
 & 
COLFLAG_HIDDEN
)!=0)

	)

1876 #ñi‡!
deföed
(
SQLITE_OMIT_VIRTUALTABLE
)

1877 
	#IsHiddíCﬁumn
(
X
Ë(((X)->
cﬁFœgs
 & 
COLFLAG_HIDDEN
)!=0)

	)

1878 
	#IsOrdö¨yHiddíCﬁumn
(
X
Ë0

	)

1880 
	#IsHiddíCﬁumn
(
X
Ë0

	)

1881 
	#IsOrdö¨yHiddíCﬁumn
(
X
Ë0

	)

1886 
	#HasRowid
(
X
Ë(((X)->
èbFœgs
 & 
TF_WôhoutRowid
)==0)

	)

1887 
	#VisibÀRowid
(
X
Ë(((X)->
èbFœgs
 & 
TF_NoVisibÀRowid
)==0)

	)

1917 
	sFKey
 {

1918 
TabÀ
 *
	mpFrom
;

1919 
FKey
 *
	mpNextFrom
;

1920 *
	mzTo
;

1921 
FKey
 *
	mpNextTo
;

1922 
FKey
 *
	mpPªvTo
;

1923 
	mnCﬁ
;

1925 
u8
 
	misDe„ºed
;

1926 
u8
 
	maA˘i⁄
[2];

1927 
Triggî
 *
	m≠Triggî
[2];

1928 
	ssCﬁM≠
 {

1929 
	miFrom
;

1930 *
	mzCﬁ
;

1931 } 
	maCﬁ
[1];

1959 
	#OE_N⁄e
 0

	)

1960 
	#OE_Rﬁlback
 1

	)

1961 
	#OE_Ab‹t
 2

	)

1962 
	#OE_Faû
 3

	)

1963 
	#OE_Ign‹e
 4

	)

1964 
	#OE_Rïœ˚
 5

	)

1966 
	#OE_Re°ri˘
 6

	)

1967 
	#OE_SëNuŒ
 7

	)

1968 
	#OE_SëDÊt
 8

	)

1969 
	#OE_Casˇde
 9

	)

1971 
	#OE_DeÁu…
 10

	)

1983 
	sKeyInfo
 {

1984 
com∑ª
 
	mxCom∑ª
;

1985 
u32
 
	mnRef
;

1986 
u8
 
	míc
;

1987 
u16
 
	mnFõld
;

1988 
u16
 
	mnXFõld
;

1989 
sqlôe3
 *
	mdb
;

1990 
u8
 *
	maS‹tOrdî
;

1991 
CﬁlSeq
 *
	maCﬁl
[1];

2029 
	sU≈ackedRec‹d
 {

2030 
KeyInfo
 *
	mpKeyInfo
;

2031 
Mem
 *
	maMem
;

2032 
u16
 
	mnFõld
;

2033 
i8
 
	mdeÁu…_rc
;

2034 
u8
 
	mîrCode
;

2035 
i8
 
	mr1
;

2036 
i8
 
	mr2
;

2037 
u8
 
	meqSìn
;

2075 
	sIndex
 {

2076 *
	mzName
;

2077 
i16
 *
	maiCﬁumn
;

2078 
LogE°
 *
	maiRowLogE°
;

2079 
TabÀ
 *
	mpTabÀ
;

2080 *
	mzCﬁAff
;

2081 
Index
 *
	mpNext
;

2082 
Schema
 *
	mpSchema
;

2083 
u8
 *
	maS‹tOrdî
;

2084 c⁄° **
	mazCﬁl
;

2085 
Ex¥
 *
	mpP¨tIdxWhîe
;

2086 
Ex¥Li°
 *
	maCﬁEx¥
;

2087 
	mäum
;

2088 
LogE°
 
	mszIdxRow
;

2089 
u16
 
	mnKeyCﬁ
;

2090 
u16
 
	mnCﬁumn
;

2091 
u8
 
	m⁄Eº‹
;

2092 
	midxTy≥
:2;

2093 
	mbUn‹dîed
:1;

2094 
	muniqNŸNuŒ
:1;

2095 
	misResized
:1;

2096 
	misCovîög
:1;

2097 
	mnoSkùSˇn
:1;

2098 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


2099 
	mnSam∂e
;

2100 
	mnSam∂eCﬁ
;

2101 
tRow˙t
 *
	maAvgEq
;

2102 
IndexSam∂e
 *
	maSam∂e
;

2103 
tRow˙t
 *
	maiRowE°
;

2104 
tRow˙t
 
	mnRowE°0
;

2111 
	#SQLITE_IDXTYPE_APPDEF
 0

	)

2112 
	#SQLITE_IDXTYPE_UNIQUE
 1

	)

2113 
	#SQLITE_IDXTYPE_PRIMARYKEY
 2

	)

2116 
	#IsPrim¨yKeyIndex
(
X
Ë((X)->
idxTy≥
==
SQLITE_IDXTYPE_PRIMARYKEY
)

	)

2119 
	#IsUniqueIndex
(
X
Ë((X)->
⁄Eº‹
!=
OE_N⁄e
)

	)

2124 
	#XN_ROWID
 (-1Ë

	)

2125 
	#XN_EXPR
 (-2Ë

	)

2132 
	sIndexSam∂e
 {

2133 *
	mp
;

2134 
	mn
;

2135 
tRow˙t
 *
	m™Eq
;

2136 
tRow˙t
 *
	m™Lt
;

2137 
tRow˙t
 *
	m™DLt
;

2148 
	sTokí
 {

2149 c⁄° *
	mz
;

2150 
	mn
;

2166 
	sAggInfo
 {

2167 
u8
 
	mdúe˘Mode
;

2169 
u8
 
	mu£S‹tögIdx
;

2171 
	ms‹tögIdx
;

2172 
	ms‹tögIdxPTab
;

2173 
	mnS‹tögCﬁumn
;

2174 
	mmnReg
, 
	mmxReg
;

2175 
Ex¥Li°
 *
	mpGroupBy
;

2176 
	sAggInfo_cﬁ
 {

2177 
TabÀ
 *
	mpTab
;

2178 
	miTabÀ
;

2179 
	miCﬁumn
;

2180 
	miS‹ãrCﬁumn
;

2181 
	miMem
;

2182 
Ex¥
 *
	mpEx¥
;

2183 } *
	maCﬁ
;

2184 
	mnCﬁumn
;

2185 
	mnAccumuœt‹
;

2188 
	sAggInfo_func
 {

2189 
Ex¥
 *
	mpEx¥
;

2190 
FuncDef
 *
	mpFunc
;

2191 
	miMem
;

2192 
	miDi°ö˘
;

2193 } *
	maFunc
;

2194 
	mnFunc
;

2207 #i‡
SQLITE_MAX_VARIABLE_NUMBER
<=32767

2208 
i16
 
	tynV¨
;

2210 
	tynV¨
;

2276 
	sEx¥
 {

2277 
u8
 
	m›
;

2278 
	mafföôy
;

2279 
u32
 
	mÊags
;

2281 *
	mzTokí
;

2282 
	miVÆue
;

2283 } 
	mu
;

2290 
Ex¥
 *
	mpLe·
;

2291 
Ex¥
 *
	mpRight
;

2293 
Ex¥Li°
 *
	mpLi°
;

2294 
Sñe˘
 *
	mpSñe˘
;

2295 } 
	mx
;

2302 #i‡
SQLITE_MAX_EXPR_DEPTH
>0

2303 
	mnHeight
;

2305 
	miTabÀ
;

2310 
ynV¨
 
	miCﬁumn
;

2313 
i16
 
	miAgg
;

2314 
i16
 
	miRightJoöTabÀ
;

2315 
u8
 
	m›2
;

2318 
AggInfo
 *
	mpAggInfo
;

2319 
TabÀ
 *
	mpTab
;

2325 
	#EP_FromJoö
 0x000001

	)

2326 
	#EP_Agg
 0x000002

	)

2327 
	#EP_Resﬁved
 0x000004

	)

2328 
	#EP_Eº‹
 0x000008

	)

2329 
	#EP_Di°ö˘
 0x000010

	)

2330 
	#EP_V¨Sñe˘
 0x000020

	)

2331 
	#EP_DblQuŸed
 0x000040

	)

2332 
	#EP_InfixFunc
 0x000080

	)

2333 
	#EP_Cﬁœã
 0x000100

	)

2334 
	#EP_Gíîic
 0x000200

	)

2335 
	#EP_I¡VÆue
 0x000400

	)

2336 
	#EP_xIsSñe˘
 0x000800

	)

2337 
	#EP_Skù
 0x001000

	)

2338 
	#EP_Redu˚d
 0x002000

	)

2339 
	#EP_TokíO∆y
 0x004000

	)

2340 
	#EP_Sètic
 0x008000

	)

2341 
	#EP_MemTokí
 0x010000

	)

2342 
	#EP_NoRedu˚
 0x020000

	)

2343 
	#EP_U∆ikñy
 0x040000

	)

2344 
	#EP_C⁄°Func
 0x080000

	)

2345 
	#EP_C™BeNuŒ
 0x100000

	)

2346 
	#EP_Subquîy
 0x200000

	)

2347 
	#EP_Alüs
 0x400000

	)

2348 
	#EP_Lóf
 0x800000

	)

2353 
	#EP_Pr›ag©e
 (
EP_Cﬁœã
|
EP_Subquîy
Ë

	)

2359 
	#Ex¥HasPr›îty
(
E
,
P
Ë(((E)->
Êags
&(P))!=0)

	)

2360 
	#Ex¥HasAŒPr›îty
(
E
,
P
Ë(((E)->
Êags
&(P))==(P))

	)

2361 
	#Ex¥SëPr›îty
(
E
,
P
Ë(E)->
Êags
|=(P)

	)

2362 
	#Ex¥CÀ¨Pr›îty
(
E
,
P
Ë(E)->
Êags
&=~(P)

	)

2368 #ifde‡
SQLITE_DEBUG


2369 
	#Ex¥SëVVAPr›îty
(
E
,
P
Ë(E)->
Êags
|=(P)

	)

2371 
	#Ex¥SëVVAPr›îty
(
E
,
P
)

	)

2379 
	#EXPR_FULLSIZE
 (
Ex¥
Ë

	)

2380 
	#EXPR_REDUCEDSIZE
 
	`off£tof
(
Ex¥
,
iTabÀ
Ë

	)

2381 
	#EXPR_TOKENONLYSIZE
 
	`off£tof
(
Ex¥
,
pLe·
Ë

	)

2387 
	#EXPRDUP_REDUCE
 0x0001

	)

2405 
	sEx¥Li°
 {

2406 
	mnEx¥
;

2407 
	sEx¥Li°_ôem
 {

2408 
Ex¥
 *
	mpEx¥
;

2409 *
	mzName
;

2410 *
	mzS∑n
;

2411 
u8
 
	ms‹tOrdî
;

2412 
	md⁄e
 :1;

2413 
	mbS∑nIsTab
 :1;

2414 
	mªußbÀ
 :1;

2417 
u16
 
	miOrdîByCﬁ
;

2418 
u16
 
	miAlüs
;

2419 } 
	mx
;

2420 
	miC⁄°Ex¥Reg
;

2421 } 
	mu
;

2422 } *
	ma
;

2430 
	sEx¥S∑n
 {

2431 
Ex¥
 *
	mpEx¥
;

2432 c⁄° *
	mzSèπ
;

2433 c⁄° *
	mzEnd
;

2451 
	sIdLi°
 {

2452 
	sIdLi°_ôem
 {

2453 *
	mzName
;

2454 
	midx
;

2455 } *
	ma
;

2456 
	mnId
;

2466 #ifde‡
SQLITE_BITMASK_TYPE


2467 
SQLITE_BITMASK_TYPE
 
	tBômask
;

2469 
u64
 
	tBômask
;

2475 
	#BMS
 (()((
Bômask
)*8))

	)

2480 
	#MASKBIT
(
n
Ë(((
Bômask
)1)<<“))

	)

2481 
	#MASKBIT32
(
n
Ë((()1)<<“))

	)

2482 
	#ALLBITS
 ((
Bômask
)-1)

	)

2503 
	sSrcLi°
 {

2504 
	mnSrc
;

2505 
u32
 
	mnAŒoc
;

2506 
	sSrcLi°_ôem
 {

2507 
Schema
 *
	mpSchema
;

2508 *
	mzD©aba£
;

2509 *
	mzName
;

2510 *
	mzAlüs
;

2511 
TabÀ
 *
	mpTab
;

2512 
Sñe˘
 *
	mpSñe˘
;

2513 
	maddrFûlSub
;

2514 
	mªgRëu∫
;

2515 
	mªgResu…
;

2517 
u8
 
	mjoöty≥
;

2518 
	mnŸIndexed
 :1;

2519 
	misIndexedBy
 :1;

2520 
	misTabFunc
 :1;

2521 
	misC‹ªœãd
 :1;

2522 
	mvüC‹outöe
 :1;

2523 
	misRecursive
 :1;

2524 } 
	mfg
;

2525 #i‚de‡
SQLITE_OMIT_EXPLAIN


2526 
u8
 
	miSñe˘Id
;

2528 
	miCurs‹
;

2529 
Ex¥
 *
	mpOn
;

2530 
IdLi°
 *
	mpUsög
;

2531 
Bômask
 
	mcﬁU£d
;

2533 *
	mzIndexedBy
;

2534 
Ex¥Li°
 *
	mpFuncArg
;

2535 } 
	mu1
;

2536 
Index
 *
	mpIBIndex
;

2537 } 
	ma
[1];

2543 
	#JT_INNER
 0x0001

	)

2544 
	#JT_CROSS
 0x0002

	)

2545 
	#JT_NATURAL
 0x0004

	)

2546 
	#JT_LEFT
 0x0008

	)

2547 
	#JT_RIGHT
 0x0010

	)

2548 
	#JT_OUTER
 0x0020

	)

2549 
	#JT_ERROR
 0x0040

	)

2559 
	#WHERE_ORDERBY_NORMAL
 0x0000

	)

2560 
	#WHERE_ORDERBY_MIN
 0x0001

	)

2561 
	#WHERE_ORDERBY_MAX
 0x0002

	)

2562 
	#WHERE_ONEPASS_DESIRED
 0x0004

	)

2563 
	#WHERE_ONEPASS_MULTIROW
 0x0008

	)

2564 
	#WHERE_DUPLICATES_OK
 0x0010

	)

2565 
	#WHERE_OR_SUBCLAUSE
 0x0020

	)

2567 
	#WHERE_GROUPBY
 0x0040

	)

2568 
	#WHERE_DISTINCTBY
 0x0080

	)

2569 
	#WHERE_WANT_DISTINCT
 0x0100

	)

2570 
	#WHERE_SORTBYGROUP
 0x0200

	)

2571 
	#WHERE_SEEK_TABLE
 0x0400

	)

2572 
	#WHERE_ORDERBY_LIMIT
 0x0800

	)

2575 
	#WHERE_USE_LIMIT
 0x4000

	)

2580 
	#WHERE_DISTINCT_NOOP
 0

	)

2581 
	#WHERE_DISTINCT_UNIQUE
 1

	)

2582 
	#WHERE_DISTINCT_ORDERED
 2

	)

2583 
	#WHERE_DISTINCT_UNORDERED
 3

	)

2606 
	sNameC⁄ãxt
 {

2607 
P¨£
 *
	mpP¨£
;

2608 
SrcLi°
 *
	mpSrcLi°
;

2609 
Ex¥Li°
 *
	mpELi°
;

2610 
AggInfo
 *
	mpAggInfo
;

2611 
NameC⁄ãxt
 *
	mpNext
;

2612 
	mnRef
;

2613 
	mnEº
;

2614 
u16
 
	mncFœgs
;

2625 
	#NC_AŒowAgg
 0x0001

	)

2626 
	#NC_P¨tIdx
 0x0002

	)

2627 
	#NC_IsCheck
 0x0004

	)

2628 
	#NC_InAggFunc
 0x0008

	)

2629 
	#NC_HasAgg
 0x0010

	)

2630 
	#NC_IdxEx¥
 0x0020

	)

2631 
	#NC_V¨Sñe˘
 0x0040

	)

2632 
	#NC_MöMaxAgg
 0x1000

	)

2654 
	sSñe˘
 {

2655 
Ex¥Li°
 *
	mpELi°
;

2656 
u8
 
	m›
;

2657 
LogE°
 
	mnSñe˘Row
;

2658 
u32
 
	m£lFœgs
;

2659 
	miLimô
, 
	miOff£t
;

2660 #i‡
SELECTTRACE_ENABLED


2661 
	mzSñName
[12];

2663 
	maddrO≥nEphm
[2];

2664 
SrcLi°
 *
	mpSrc
;

2665 
Ex¥
 *
	mpWhîe
;

2666 
Ex¥Li°
 *
	mpGroupBy
;

2667 
Ex¥
 *
	mpHavög
;

2668 
Ex¥Li°
 *
	mpOrdîBy
;

2669 
Sñe˘
 *
	mpPri‹
;

2670 
Sñe˘
 *
	mpNext
;

2671 
Ex¥
 *
	mpLimô
;

2672 
Ex¥
 *
	mpOff£t
;

2673 
Wôh
 *
	mpWôh
;

2685 
	#SF_Di°ö˘
 0x00001

	)

2686 
	#SF_AŒ
 0x00002

	)

2687 
	#SF_Resﬁved
 0x00004

	)

2688 
	#SF_Aggªg©e
 0x00008

	)

2689 
	#SF_HasAgg
 0x00010

	)

2690 
	#SF_U£sEphemîÆ
 0x00020

	)

2691 
	#SF_Ex∑nded
 0x00040

	)

2692 
	#SF_HasTy≥Info
 0x00080

	)

2693 
	#SF_Compound
 0x00100

	)

2694 
	#SF_VÆues
 0x00200

	)

2695 
	#SF_Mu…iVÆue
 0x00400

	)

2696 
	#SF_Ne°edFrom
 0x00800

	)

2697 
	#SF_MöMaxAgg
 0x01000

	)

2698 
	#SF_Recursive
 0x02000

	)

2699 
	#SF_FixedLimô
 0x04000

	)

2700 
	#SF_MaybeC⁄vît
 0x08000

	)

2701 
	#SF_C⁄vîãd
 0x10000

	)

2702 
	#SF_In˛udeHiddí
 0x20000

	)

2769 
	#SRT_Uni⁄
 1

	)

2770 
	#SRT_Ex˚±
 2

	)

2771 
	#SRT_Exi°s
 3

	)

2772 
	#SRT_Disˇrd
 4

	)

2773 
	#SRT_Fifo
 5

	)

2774 
	#SRT_Di°Fifo
 6

	)

2775 
	#SRT_Queue
 7

	)

2776 
	#SRT_Di°Queue
 8

	)

2779 
	#Ign‹abÀOrdîby
(
X
Ë((X->
eDe°
)<=
SRT_Di°Queue
)

	)

2781 
	#SRT_Ouçut
 9

	)

2782 
	#SRT_Mem
 10

	)

2783 
	#SRT_Së
 11

	)

2784 
	#SRT_EphemTab
 12

	)

2785 
	#SRT_C‹outöe
 13

	)

2786 
	#SRT_TabÀ
 14

	)

2792 
	sSñe˘De°
 {

2793 
u8
 
	meDe°
;

2794 *
	mzAffSd°
;

2795 
	miSDP¨m
;

2796 
	miSd°
;

2797 
	mnSd°
;

2798 
Ex¥Li°
 *
	mpOrdîBy
;

2810 
	sAutoöcInfo
 {

2811 
AutoöcInfo
 *
	mpNext
;

2812 
TabÀ
 *
	mpTab
;

2813 
	miDb
;

2814 
	mªgCå
;

2820 #i‚de‡
SQLITE_N_COLCACHE


2821 
	#SQLITE_N_COLCACHE
 10

	)

2842 
	sTriggîPrg
 {

2843 
Triggî
 *
	mpTriggî
;

2844 
TriggîPrg
 *
	mpNext
;

2845 
SubProgøm
 *
	mpProgøm
;

2846 
	m‹c⁄f
;

2847 
u32
 
	maCﬁmask
[2];

2853 #i‡
SQLITE_MAX_ATTACHED
>30

2854 
	tyDbMask
[(
SQLITE_MAX_ATTACHED
+9)/8];

2855 
	#DbMaskTe°
(
M
,
I
Ë(((M)[(I)/8]&(1<<((I)&7)))!=0)

	)

2856 
	#DbMaskZîo
(
M
Ë
	`mem£t
((M),0,(M))

	)

2857 
	#DbMaskSë
(
M
,
I
Ë(M)[(I)/8]|=(1<<((I)&7))

	)

2858 
	#DbMaskAŒZîo
(
M
Ë
	`sqlôe3DbMaskAŒZîo
(M)

	)

2859 
	#DbMaskN⁄Zîo
(
M
Ë(
	`sqlôe3DbMaskAŒZîo
(M)==0)

	)

2861 
	tyDbMask
;

2862 
	#DbMaskTe°
(
M
,
I
Ë(((M)&(((
yDbMask
)1)<<(I)))!=0)

	)

2863 
	#DbMaskZîo
(
M
Ë(M)=0

	)

2864 
	#DbMaskSë
(
M
,
I
Ë(M)|=(((
yDbMask
)1)<<(I))

	)

2865 
	#DbMaskAŒZîo
(
M
Ë(M)==0

	)

2866 
	#DbMaskN⁄Zîo
(
M
Ë(M)!=0

	)

2885 
	sP¨£
 {

2886 
sqlôe3
 *
	mdb
;

2887 *
	mzEºMsg
;

2888 
Vdbe
 *
	mpVdbe
;

2889 
	mrc
;

2890 
u8
 
	mcﬁNamesSë
;

2891 
u8
 
	mcheckSchema
;

2892 
u8
 
	m√°ed
;

2893 
u8
 
	mnTempReg
;

2894 
u8
 
	misMu…iWrôe
;

2895 
u8
 
	mmayAb‹t
;

2896 
u8
 
	mhasCompound
;

2897 
u8
 
	mokC⁄°Fa˘‹
;

2898 
u8
 
	mdißbÀLookaside
;

2899 
u8
 
	mnCﬁCache
;

2900 
	mnR™geReg
;

2901 
	miR™geReg
;

2902 
	mnEº
;

2903 
	mnTab
;

2904 
	mnMem
;

2905 
	mnOpAŒoc
;

2906 
	mszOpAŒoc
;

2907 
	mckBa£
;

2908 
	miSñfTab
;

2909 
	miCacheLevñ
;

2910 
	miCacheC¡
;

2911 
	mnLabñ
;

2912 *
	maLabñ
;

2913 
Ex¥Li°
 *
	mpC⁄°Ex¥
;

2914 
Tokí
 
	mc⁄°øötName
;

2915 
yDbMask
 
	mwrôeMask
;

2916 
yDbMask
 
	mcookõMask
;

2917 
	mªgRowid
;

2918 
	mªgRoŸ
;

2919 
	mnMaxArg
;

2920 #i‡
SELECTTRACE_ENABLED


2921 
	mnSñe˘
;

2922 
	mnSñe˘Indít
;

2924 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


2925 
	mnTabÀLock
;

2926 
TabÀLock
 *
	maTabÀLock
;

2928 
AutoöcInfo
 *
	mpAöc
;

2929 
P¨£
 *
	mpT›Àvñ
;

2930 
TabÀ
 *
	mpTriggîTab
;

2931 
	maddrCrTab
;

2932 
u32
 
	mnQuîyLo›
;

2933 
u32
 
	mﬁdmask
;

2934 
u32
 
	m√wmask
;

2935 
u8
 
	meTriggîOp
;

2936 
u8
 
	meOrc⁄f
;

2937 
u8
 
	mdißbÀTriggîs
;

2946 
	syCﬁCache
 {

2947 
	miTabÀ
;

2948 
i16
 
	miCﬁumn
;

2949 
u8
 
	mãmpReg
;

2950 
	miLevñ
;

2951 
	miReg
;

2952 
	mÃu
;

2953 } 
	maCﬁCache
[
SQLITE_N_COLCACHE
];

2954 
	maTempReg
[8];

2955 
Tokí
 
	msNameTokí
;

2964 
Tokí
 
	msLa°Tokí
;

2965 
ynV¨
 
	mnV¨
;

2966 
u8
 
	miPkS‹tOrdî
;

2967 
u8
 
	mex∂aö
;

2968 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


2969 
u8
 
	mde˛¨eVèb
;

2970 
	mnVèbLock
;

2972 
	mnHeight
;

2973 #i‚de‡
SQLITE_OMIT_EXPLAIN


2974 
	miSñe˘Id
;

2975 
	miNextSñe˘Id
;

2977 
VLi°
 *
	mpVLi°
;

2978 
Vdbe
 *
	mpRïª∑ª
;

2979 c⁄° *
	mzTaû
;

2980 
TabÀ
 *
	mpNewTabÀ
;

2981 
Triggî
 *
	mpNewTriggî
;

2982 c⁄° *
	mzAuthC⁄ãxt
;

2983 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


2984 
Tokí
 
	msArg
;

2985 
TabÀ
 **
	m≠VèbLock
;

2987 
TabÀ
 *
	mpZombõTab
;

2988 
TriggîPrg
 *
	mpTriggîPrg
;

2989 
Wôh
 *
	mpWôh
;

2990 
Wôh
 *
	mpWôhToFªe
;

2996 
	#PARSE_HDR_SZ
 
	`off£tof
(
P¨£
,
aCﬁCache
Ë

	)

2997 
	#PARSE_RECURSE_SZ
 
	`off£tof
(
P¨£
,
sLa°Tokí
Ë

	)

2998 
	#PARSE_TAIL_SZ
 ((
P¨£
)-
PARSE_RECURSE_SZ
Ë

	)

2999 
	#PARSE_TAIL
(
X
Ë(((*)(X))+
PARSE_RECURSE_SZ
Ë

	)

3004 #ifde‡
SQLITE_OMIT_VIRTUALTABLE


3005 
	#IN_DECLARE_VTAB
 0

	)

3007 
	#IN_DECLARE_VTAB
 (
pP¨£
->
de˛¨eVèb
)

	)

3014 
	sAuthC⁄ãxt
 {

3015 c⁄° *
	mzAuthC⁄ãxt
;

3016 
P¨£
 *
	mpP¨£
;

3031 
	#OPFLAG_NCHANGE
 0x01

	)

3033 
	#OPFLAG_EPHEM
 0x01

	)

3034 
	#OPFLAG_LASTROWID
 0x02

	)

3035 
	#OPFLAG_ISUPDATE
 0x04

	)

3036 
	#OPFLAG_APPEND
 0x08

	)

3037 
	#OPFLAG_USESEEKRESULT
 0x10

	)

3038 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


3039 
	#OPFLAG_ISNOOP
 0x40

	)

3041 
	#OPFLAG_LENGTHARG
 0x40

	)

3042 
	#OPFLAG_TYPEOFARG
 0x80

	)

3043 
	#OPFLAG_BULKCSR
 0x01

	)

3044 
	#OPFLAG_SEEKEQ
 0x02

	)

3045 
	#OPFLAG_FORDELETE
 0x08

	)

3046 
	#OPFLAG_P2ISREG
 0x10

	)

3047 
	#OPFLAG_PERMUTE
 0x01

	)

3048 
	#OPFLAG_SAVEPOSITION
 0x02

	)

3049 
	#OPFLAG_AUXDELETE
 0x04

	)

3066 
	sTriggî
 {

3067 *
	mzName
;

3068 *
	mèbÀ
;

3069 
u8
 
	m›
;

3070 
u8
 
	må_tm
;

3071 
Ex¥
 *
	mpWhí
;

3072 
IdLi°
 *
	mpCﬁumns
;

3074 
Schema
 *
	mpSchema
;

3075 
Schema
 *
	mpTabSchema
;

3076 
TriggîSãp
 *
	m°ï_li°
;

3077 
Triggî
 *
	mpNext
;

3087 
	#TRIGGER_BEFORE
 1

	)

3088 
	#TRIGGER_AFTER
 2

	)

3128 
	sTriggîSãp
 {

3129 
u8
 
	m›
;

3130 
u8
 
	m‹c⁄f
;

3131 
Triggî
 *
	mpTrig
;

3132 
Sñe˘
 *
	mpSñe˘
;

3133 *
	mzT¨gë
;

3134 
Ex¥
 *
	mpWhîe
;

3135 
Ex¥Li°
 *
	mpEx¥Li°
;

3136 
IdLi°
 *
	mpIdLi°
;

3137 
TriggîSãp
 *
	mpNext
;

3138 
TriggîSãp
 *
	mpLa°
;

3146 
DbFixî
 
	tDbFixî
;

3147 
	sDbFixî
 {

3148 
P¨£
 *
	mpP¨£
;

3149 
Schema
 *
	mpSchema
;

3150 
	mbV¨O∆y
;

3151 c⁄° *
	mzDb
;

3152 c⁄° *
	mzTy≥
;

3153 c⁄° 
Tokí
 *
	mpName
;

3160 
	sSåAccum
 {

3161 
sqlôe3
 *
	mdb
;

3162 *
	mzBa£
;

3163 *
	mzText
;

3164 
u32
 
	mnCh¨
;

3165 
u32
 
	mnAŒoc
;

3166 
u32
 
	mmxAŒoc
;

3167 
u8
 
	maccEº‹
;

3168 
u8
 
	m¥ötfFœgs
;

3170 
	#STRACCUM_NOMEM
 1

	)

3171 
	#STRACCUM_TOOBIG
 2

	)

3172 
	#SQLITE_PRINTF_INTERNAL
 0x01

	)

3173 
	#SQLITE_PRINTF_SQLFUNC
 0x02

	)

3174 
	#SQLITE_PRINTF_MALLOCED
 0x04

	)

3176 
	#isMÆlo˚d
(
X
Ë(((X)->
¥ötfFœgs
 & 
SQLITE_PRINTF_MALLOCED
)!=0)

	)

3184 
sqlôe3
 *
	mdb
;

3185 **
	mpzEºMsg
;

3186 
	miDb
;

3187 
	mrc
;

3188 } 
	tInôD©a
;

3195 
	sSqlôe3C⁄fig
 {

3196 
	mbMem°©
;

3197 
	mbC‹eMuãx
;

3198 
	mbFuŒMuãx
;

3199 
	mbO≥nUri
;

3200 
	mbU£Cis
;

3201 
	mmxSåÀn
;

3202 
	m√vîC‹ru±
;

3203 
	mszLookaside
;

3204 
	mnLookaside
;

3205 
	mnStmtSpûl
;

3206 
sqlôe3_mem_mëhods
 
	mm
;

3207 
sqlôe3_muãx_mëhods
 
	mmuãx
;

3208 
sqlôe3_pˇche_mëhods2
 
	mpˇche2
;

3209 *
	mpHóp
;

3210 
	mnHóp
;

3211 
	mmnReq
, 
	mmxReq
;

3212 
sqlôe3_öt64
 
	mszMm≠
;

3213 
sqlôe3_öt64
 
	mmxMm≠
;

3214 *
	mpS¸©ch
;

3215 
	mszS¸©ch
;

3216 
	mnS¸©ch
;

3217 *
	mpPage
;

3218 
	mszPage
;

3219 
	mnPage
;

3220 
	mmxP¨£rSèck
;

3221 
	msh¨edCacheE«bÀd
;

3222 
u32
 
	mszPma
;

3225 
	misInô
;

3226 
	möProgªss
;

3227 
	misMuãxInô
;

3228 
	misMÆlocInô
;

3229 
	misPCacheInô
;

3230 
	mnRefInôMuãx
;

3231 
sqlôe3_muãx
 *
	mpInôMuãx
;

3232 (*
	mxLog
)(*,,const *);

3233 *
	mpLogArg
;

3234 #ifde‡
SQLITE_ENABLE_SQLLOG


3235 (*
	mxSqŒog
)(*,
	msqlôe3
*,const *, );

3236 *
	mpSqŒogArg
;

3238 #ifde‡
SQLITE_VDBE_COVERAGE


3242 (*
	mxVdbeBønch
)(*,
	miSrcLöe
,
u8
 
	meThis
,u8 
	meMx
);

3243 *
	mpVdbeBønchArg
;

3245 #i‚de‡
SQLITE_UNTESTABLE


3246 (*
	mxTe°CÆlback
)();

3248 
	mbLoˇ…imeFau…
;

3249 
	miOn˚Re£tThªshﬁd
;

3268 
	#CORRUPT_DB
 (
sqlôe3C⁄fig
.
√vîC‹ru±
==0)

	)

3273 
	sWÆkî
 {

3274 
P¨£
 *
	mpP¨£
;

3275 (*
	mxEx¥CÆlback
)(
	mWÆkî
*, 
	mEx¥
*);

3276 (*
	mxSñe˘CÆlback
)(
	mWÆkî
*,
	mSñe˘
*);

3277 (*
	mxSñe˘CÆlback2
)(
	mWÆkî
*,
	mSñe˘
*);

3278 
	mwÆkîDïth
;

3279 
u8
 
	meCode
;

3281 
NameC⁄ãxt
 *
	mpNC
;

3282 
	mn
;

3283 
	miCur
;

3284 
SrcLi°
 *
	mpSrcLi°
;

3285 
SrcCou¡
 *
	mpSrcCou¡
;

3286 
CCurHöt
 *
	mpCCurHöt
;

3287 *
	maiCﬁ
;

3288 
IdxCovî
 *
	mpIdxCovî
;

3289 } 
	mu
;

3293 
sqlôe3WÆkEx¥
(
WÆkî
*, 
Ex¥
*);

3294 
sqlôe3WÆkEx¥Li°
(
WÆkî
*, 
Ex¥Li°
*);

3295 
sqlôe3WÆkSñe˘
(
WÆkî
*, 
Sñe˘
*);

3296 
sqlôe3WÆkSñe˘Ex¥
(
WÆkî
*, 
Sñe˘
*);

3297 
sqlôe3WÆkSñe˘From
(
WÆkî
*, 
Sñe˘
*);

3298 
sqlôe3Ex¥WÆkNo›
(
WÆkî
*, 
Ex¥
*);

3304 
	#WRC_C⁄töue
 0

	)

3305 
	#WRC_Pru√
 1

	)

3306 
	#WRC_Ab‹t
 2

	)

3312 
	sWôh
 {

3313 
	mnCã
;

3314 
Wôh
 *
	mpOuãr
;

3315 
	sCã
 {

3316 *
	mzName
;

3317 
Ex¥Li°
 *
	mpCﬁs
;

3318 
Sñe˘
 *
	mpSñe˘
;

3319 c⁄° *
	mzCãEº
;

3320 } 
	ma
[1];

3323 #ifde‡
SQLITE_DEBUG


3328 
	sTªeVõw
 {

3329 
	miLevñ
;

3330 
u8
 
	mbLöe
[100];

3338 
	#SQLITE_SKIP_UTF8
(
zIn
) { \

3339 if–(*(
zIn
++))>=0xc0 ){ \

3340  (*
zIn
 & 0xc0)==0x80 ){ zIn++; } \

3342 }

	)

3351 
sqlôe3C‹ru±Eº‹
();

3352 
sqlôe3Misu£Eº‹
();

3353 
sqlôe3C™t›íEº‹
();

3354 
	#SQLITE_CORRUPT_BKPT
 
	`sqlôe3C‹ru±Eº‹
(
__LINE__
)

	)

3355 
	#SQLITE_MISUSE_BKPT
 
	`sqlôe3Misu£Eº‹
(
__LINE__
)

	)

3356 
	#SQLITE_CANTOPEN_BKPT
 
	`sqlôe3C™t›íEº‹
(
__LINE__
)

	)

3357 #ifde‡
SQLITE_DEBUG


3358 
sqlôe3NomemEº‹
();

3359 
sqlôe3I€ºnomemEº‹
();

3360 
	#SQLITE_NOMEM_BKPT
 
	`sqlôe3NomemEº‹
(
__LINE__
)

	)

3361 
	#SQLITE_IOERR_NOMEM_BKPT
 
	`sqlôe3I€ºnomemEº‹
(
__LINE__
)

	)

3363 
	#SQLITE_NOMEM_BKPT
 
SQLITE_NOMEM


	)

3364 
	#SQLITE_IOERR_NOMEM_BKPT
 
SQLITE_IOERR_NOMEM


	)

3370 #i‡
deföed
(
SQLITE_OMIT_VIRTUALTABLE
)

3371 #unde‡
SQLITE_ENABLE_FTS3


3372 #unde‡
SQLITE_ENABLE_FTS4


3380 #i‡
deföed
(
SQLITE_ENABLE_FTS4
Ë&& !deföed(
SQLITE_ENABLE_FTS3
)

3381 
	#SQLITE_ENABLE_FTS3
 1

	)

3388 #i‡!
deföed
(
SQLITE_ASCII
) || \

3389 (
deföed
(
SQLITE_ENABLE_FTS3
Ë&& 
	$deföed
(
SQLITE_AMALGAMATION
))

3390 
	~<˘y≥.h
>

3398 #ifde‡
SQLITE_ASCII


3399 
	#sqlôe3Touµî
(
x
Ë((x)&~(
sqlôe3Cty≥M≠
[()(x)]&0x20))

	)

3400 
	#sqlôe3Is•a˚
(
x
Ë(
sqlôe3Cty≥M≠
[()(x)]&0x01)

	)

3401 
	#sqlôe3Iß um
(
x
Ë(
sqlôe3Cty≥M≠
[()(x)]&0x06)

	)

3402 
	#sqlôe3IßÕha
(
x
Ë(
sqlôe3Cty≥M≠
[()(x)]&0x02)

	)

3403 
	#sqlôe3Isdigô
(
x
Ë(
sqlôe3Cty≥M≠
[()(x)]&0x04)

	)

3404 
	#sqlôe3Isxdigô
(
x
Ë(
sqlôe3Cty≥M≠
[()(x)]&0x08)

	)

3405 
	#sqlôe3Tﬁowî
(
x
Ë(
sqlôe3UµîToLowî
[()(x)])

	)

3406 
	#sqlôe3IsquŸe
(
x
Ë(
sqlôe3Cty≥M≠
[()(x)]&0x80)

	)

3408 
	#sqlôe3Touµî
(
x
Ë
	`touµî
(()(x))

	)

3409 
	#sqlôe3Is•a˚
(
x
Ë
	`is•a˚
(()(x))

	)

3410 
	#sqlôe3Iß um
(
x
Ë
	`iß um
(()(x))

	)

3411 
	#sqlôe3IßÕha
(
x
Ë
	`ißÕha
(()(x))

	)

3412 
	#sqlôe3Isdigô
(
x
Ë
	`isdigô
(()(x))

	)

3413 
	#sqlôe3Isxdigô
(
x
Ë
	`isxdigô
(()(x))

	)

3414 
	#sqlôe3Tﬁowî
(
x
Ë
	`tﬁowî
(()(x))

	)

3415 
	#sqlôe3IsquŸe
(
x
Ë((x)=='"'||(x)=='\''||(x)=='['||(x)=='`')

	)

3417 #i‚de‡
SQLITE_OMIT_COMPILEOPTION_DIAGS


3418 
	`sqlôe3IsIdCh¨
(
u8
);

3424 
	`sqlôe3SåICmp
(const *,const *);

3425 
	`sqlôe3SåÀn30
(const *);

3426 *
	`sqlôe3CﬁumnTy≥
(
Cﬁumn
*,*);

3427 
	#sqlôe3SåNICmp
 
sqlôe3_°∫icmp


	)

3429 
	`sqlôe3MÆlocInô
();

3430 
	`sqlôe3MÆlocEnd
();

3431 *
	`sqlôe3MÆloc
(
u64
);

3432 *
	`sqlôe3MÆlocZîo
(
u64
);

3433 *
	`sqlôe3DbMÆlocZîo
(
sqlôe3
*, 
u64
);

3434 *
	`sqlôe3DbMÆlocRaw
(
sqlôe3
*, 
u64
);

3435 *
	`sqlôe3DbMÆlocRawNN
(
sqlôe3
*, 
u64
);

3436 *
	`sqlôe3DbSåDup
(
sqlôe3
*,const *);

3437 *
	`sqlôe3DbSåNDup
(
sqlôe3
*,c⁄° *, 
u64
);

3438 *
	`sqlôe3RóŒoc
(*, 
u64
);

3439 *
	`sqlôe3DbRóŒocOrFªe
(
sqlôe3
 *, *, 
u64
);

3440 *
	`sqlôe3DbRóŒoc
(
sqlôe3
 *, *, 
u64
);

3441 
	`sqlôe3DbFªe
(
sqlôe3
*, *);

3442 
	`sqlôe3MÆlocSize
(*);

3443 
	`sqlôe3DbMÆlocSize
(
sqlôe3
*, *);

3444 *
	`sqlôe3S¸©chMÆloc
();

3445 
	`sqlôe3S¸©chFªe
(*);

3446 *
	`sqlôe3PageMÆloc
();

3447 
	`sqlôe3PageFªe
(*);

3448 
	`sqlôe3MemSëDeÁu…
();

3449 #i‚de‡
SQLITE_UNTESTABLE


3450 
	`sqlôe3BíignMÆlocHooks
((*)(), (*)());

3452 
	`sqlôe3HópNóæyFuŒ
();

3462 #ifde‡
SQLITE_USE_ALLOCA


3463 
	#sqlôe3SèckAŒocRaw
(
D
,
N
Ë
	`Æloˇ
(N)

	)

3464 
	#sqlôe3SèckAŒocZîo
(
D
,
N
Ë
	`mem£t
(
	`Æloˇ
(N), 0, N)

	)

3465 
	#sqlôe3SèckFªe
(
D
,
P
)

	)

3467 
	#sqlôe3SèckAŒocRaw
(
D
,
N
Ë
	`sqlôe3DbMÆlocRaw
(D,N)

	)

3468 
	#sqlôe3SèckAŒocZîo
(
D
,
N
Ë
	`sqlôe3DbMÆlocZîo
(D,N)

	)

3469 
	#sqlôe3SèckFªe
(
D
,
P
Ë
	`sqlôe3DbFªe
(D,P)

	)

3475 #ifde‡
SQLITE_ENABLE_MEMSYS5


3476 c⁄° 
sqlôe3_mem_mëhods
 *
	`sqlôe3MemGëMemsys5
();

3477 #unde‡
SQLITE_ENABLE_MEMSYS3


3479 #ifde‡
SQLITE_ENABLE_MEMSYS3


3480 c⁄° 
sqlôe3_mem_mëhods
 *
	`sqlôe3MemGëMemsys3
();

3484 #i‚de‡
SQLITE_MUTEX_OMIT


3485 
sqlôe3_muãx_mëhods
 c⁄° *
	`sqlôe3DeÁu…Muãx
();

3486 
sqlôe3_muãx_mëhods
 c⁄° *
	`sqlôe3No›Muãx
();

3487 
sqlôe3_muãx
 *
	`sqlôe3MuãxAŒoc
();

3488 
	`sqlôe3MuãxInô
();

3489 
	`sqlôe3MuãxEnd
();

3491 #i‡!
	`deföed
(
SQLITE_MUTEX_OMIT
Ë&& !deföed(
SQLITE_MUTEX_NOOP
)

3492 
	`sqlôe3Mem‹yB¨rõr
();

3494 
	#sqlôe3Mem‹yB¨rõr
()

	)

3497 
sqlôe3_öt64
 
	`sqlôe3SètusVÆue
();

3498 
	`sqlôe3SètusUp
(, );

3499 
	`sqlôe3SètusDown
(, );

3500 
	`sqlôe3SètusHighw©î
(, );

3503 
sqlôe3_muãx
 *
	`sqlôe3Pˇche1Muãx
();

3504 
sqlôe3_muãx
 *
	`sqlôe3MÆlocMuãx
();

3506 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


3507 
	`sqlôe3IsNaN
();

3509 
	#sqlôe3IsNaN
(
X
Ë0

	)

3516 
	sPrötfArgumíts
 {

3517 
nArg
;

3518 
nU£d
;

3519 
sqlôe3_vÆue
 **
≠Arg
;

3522 
	`sqlôe3VXPrötf
(
SåAccum
*, c⁄° *, 
va_li°
);

3523 
	`sqlôe3XPrötf
(
SåAccum
*, const *, ...);

3524 *
	`sqlôe3MPrötf
(
sqlôe3
*,const *, ...);

3525 *
	`sqlôe3VMPrötf
(
sqlôe3
*,c⁄° *, 
va_li°
);

3526 #i‡
	`deföed
(
SQLITE_DEBUG
Ë|| deföed(
SQLITE_HAVE_OS_TRACE
)

3527 
	`sqlôe3DebugPrötf
(const *, ...);

3529 #i‡
	`deföed
(
SQLITE_TEST
)

3530 *
	`sqlôe3Te°TextToPå
(const *);

3533 #i‡
	`deföed
(
SQLITE_DEBUG
)

3534 
	`sqlôe3TªeVõwEx¥
(
TªeVõw
*, c⁄° 
Ex¥
*, 
u8
);

3535 
	`sqlôe3TªeVõwB¨eEx¥Li°
(
TªeVõw
*, c⁄° 
Ex¥Li°
*, const *);

3536 
	`sqlôe3TªeVõwEx¥Li°
(
TªeVõw
*, c⁄° 
Ex¥Li°
*, 
u8
, const *);

3537 
	`sqlôe3TªeVõwSñe˘
(
TªeVõw
*, c⁄° 
Sñe˘
*, 
u8
);

3538 
	`sqlôe3TªeVõwWôh
(
TªeVõw
*, c⁄° 
Wôh
*, 
u8
);

3542 
	`sqlôe3SëSåög
(**, 
sqlôe3
*, const *);

3543 
	`sqlôe3Eº‹Msg
(
P¨£
*, const *, ...);

3544 
	`sqlôe3DequŸe
(*);

3545 
	`sqlôe3TokíInô
(
Tokí
*,*);

3546 
	`sqlôe3Keyw‹dCode
(const *, );

3547 
	`sqlôe3RunP¨£r
(
P¨£
*, const *, **);

3548 
	`sqlôe3FöishCodög
(
P¨£
*);

3549 
	`sqlôe3GëTempReg
(
P¨£
*);

3550 
	`sqlôe3Rñó£TempReg
(
P¨£
*,);

3551 
	`sqlôe3GëTempR™ge
(
P¨£
*,);

3552 
	`sqlôe3Rñó£TempR™ge
(
P¨£
*,,);

3553 
	`sqlôe3CÀ¨TempRegCache
(
P¨£
*);

3554 #ifde‡
SQLITE_DEBUG


3555 
	`sqlôe3NoTempsInR™ge
(
P¨£
*,,);

3557 
Ex¥
 *
	`sqlôe3Ex¥AŒoc
(
sqlôe3
*,,c⁄° 
Tokí
*,);

3558 
Ex¥
 *
	`sqlôe3Ex¥
(
sqlôe3
*,,const *);

3559 
	`sqlôe3Ex¥AâachSubåìs
(
sqlôe3
*,
Ex¥
*,Expr*,Expr*);

3560 
Ex¥
 *
	`sqlôe3PEx¥
(
P¨£
*, , Expr*, Expr*);

3561 
	`sqlôe3PEx¥AddSñe˘
(
P¨£
*, 
Ex¥
*, 
Sñe˘
*);

3562 
Ex¥
 *
	`sqlôe3Ex¥And
(
sqlôe3
*,Expr*, Expr*);

3563 
Ex¥
 *
	`sqlôe3Ex¥Fun˘i⁄
(
P¨£
*,
Ex¥Li°
*, 
Tokí
*);

3564 
	`sqlôe3Ex¥AssignV¨Numbî
(
P¨£
*, 
Ex¥
*, 
u32
);

3565 
	`sqlôe3Ex¥Dñëe
(
sqlôe3
*, 
Ex¥
*);

3566 
Ex¥Li°
 *
	`sqlôe3Ex¥Li°Aµíd
(
P¨£
*,Ex¥Li°*,
Ex¥
*);

3567 
Ex¥Li°
 *
	`sqlôe3Ex¥Li°AµídVe˘‹
(
P¨£
*,Ex¥Li°*,
IdLi°
*,
Ex¥
*);

3568 
	`sqlôe3Ex¥Li°SëS‹tOrdî
(
Ex¥Li°
*,);

3569 
	`sqlôe3Ex¥Li°SëName
(
P¨£
*,
Ex¥Li°
*,
Tokí
*,);

3570 
	`sqlôe3Ex¥Li°SëS∑n
(
P¨£
*,
Ex¥Li°
*,
Ex¥S∑n
*);

3571 
	`sqlôe3Ex¥Li°Dñëe
(
sqlôe3
*, 
Ex¥Li°
*);

3572 
u32
 
	`sqlôe3Ex¥Li°Fœgs
(c⁄° 
Ex¥Li°
*);

3573 
	`sqlôe3Inô
(
sqlôe3
*, **);

3574 
	`sqlôe3InôCÆlback
(*, , **, **);

3575 
	`sqlôe3Pøgma
(
P¨£
*,
Tokí
*,Token*,Token*,);

3576 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


3577 
ModuÀ
 *
	`sqlôe3PøgmaVèbRegi°î
(
sqlôe3
*,c⁄° *
zName
);

3579 
	`sqlôe3Re£tAŒSchemasOfC⁄√˘i⁄
(
sqlôe3
*);

3580 
	`sqlôe3Re£tO√Schema
(
sqlôe3
*,);

3581 
	`sqlôe3Cﬁœp£D©aba£Aºay
(
sqlôe3
*);

3582 
	`sqlôe3CommôI¡î«lCh™ges
(
sqlôe3
*);

3583 
	`sqlôe3DñëeCﬁumnNames
(
sqlôe3
*,
TabÀ
*);

3584 
	`sqlôe3CﬁumnsFromEx¥Li°
(
P¨£
*,
Ex¥Li°
*,
i16
*,
Cﬁumn
**);

3585 
	`sqlôe3Sñe˘AddCﬁumnTy≥AndCﬁœti⁄
(
P¨£
*,
TabÀ
*,
Sñe˘
*);

3586 
TabÀ
 *
	`sqlôe3Resu…SëOfSñe˘
(
P¨£
*,
Sñe˘
*);

3587 
	`sqlôe3O≥nMa°îTabÀ
(
P¨£
 *, );

3588 
Index
 *
	`sqlôe3Prim¨yKeyIndex
(
TabÀ
*);

3589 
i16
 
	`sqlôe3CﬁumnOfIndex
(
Index
*, i16);

3590 
	`sqlôe3SèπTabÀ
(
P¨£
*,
Tokí
*,Token*,,,,);

3591 #i‡
SQLITE_ENABLE_HIDDEN_COLUMNS


3592 
	`sqlôe3CﬁumnPr›îtõsFromName
(
TabÀ
*, 
Cﬁumn
*);

3594 
	#sqlôe3CﬁumnPr›îtõsFromName
(
T
,
C
Ë

	)

3596 
	`sqlôe3AddCﬁumn
(
P¨£
*,
Tokí
*,Token*);

3597 
	`sqlôe3AddNŸNuŒ
(
P¨£
*, );

3598 
	`sqlôe3AddPrim¨yKey
(
P¨£
*, 
Ex¥Li°
*, , , );

3599 
	`sqlôe3AddCheckC⁄°øöt
(
P¨£
*, 
Ex¥
*);

3600 
	`sqlôe3AddDeÁu…VÆue
(
P¨£
*,
Ex¥S∑n
*);

3601 
	`sqlôe3AddCﬁœãTy≥
(
P¨£
*, 
Tokí
*);

3602 
	`sqlôe3EndTabÀ
(
P¨£
*,
Tokí
*,Tokí*,
u8
,
Sñe˘
*);

3603 
	`sqlôe3P¨£Uri
(const *,const *,*,

3604 
sqlôe3_vfs
**,**,**);

3605 
Båì
 *
	`sqlôe3DbNameToBåì
(
sqlôe3
*,const *);

3607 #ifde‡
SQLITE_UNTESTABLE


3608 
	#sqlôe3Fau…Sim
(
X
Ë
SQLITE_OK


	)

3610 
	`sqlôe3Fau…Sim
();

3613 
Bôvec
 *
	`sqlôe3BôvecCª©e
(
u32
);

3614 
	`sqlôe3BôvecTe°
(
Bôvec
*, 
u32
);

3615 
	`sqlôe3BôvecTe°NŸNuŒ
(
Bôvec
*, 
u32
);

3616 
	`sqlôe3BôvecSë
(
Bôvec
*, 
u32
);

3617 
	`sqlôe3BôvecCÀ¨
(
Bôvec
*, 
u32
, *);

3618 
	`sqlôe3BôvecDe°roy
(
Bôvec
*);

3619 
u32
 
	`sqlôe3BôvecSize
(
Bôvec
*);

3620 #i‚de‡
SQLITE_UNTESTABLE


3621 
	`sqlôe3BôvecBuûtöTe°
(,*);

3624 
RowSë
 *
	`sqlôe3RowSëInô
(
sqlôe3
*, *, );

3625 
	`sqlôe3RowSëCÀ¨
(
RowSë
*);

3626 
	`sqlôe3RowSëIn£π
(
RowSë
*, 
i64
);

3627 
	`sqlôe3RowSëTe°
(
RowSë
*, 
iB©ch
, 
i64
);

3628 
	`sqlôe3RowSëNext
(
RowSë
*, 
i64
*);

3630 
	`sqlôe3Cª©eVõw
(
P¨£
*,
Tokí
*,Tokí*,Tokí*,
Ex¥Li°
*,
Sñe˘
*,,);

3632 #i‡!
	`deföed
(
SQLITE_OMIT_VIEW
Ë|| !deföed(
SQLITE_OMIT_VIRTUALTABLE
)

3633 
	`sqlôe3VõwGëCﬁumnNames
(
P¨£
*,
TabÀ
*);

3635 
	#sqlôe3VõwGëCﬁumnNames
(
A
,
B
Ë0

	)

3638 #i‡
SQLITE_MAX_ATTACHED
>30

3639 
	`sqlôe3DbMaskAŒZîo
(
yDbMask
);

3641 
	`sqlôe3Dr›TabÀ
(
P¨£
*, 
SrcLi°
*, , );

3642 
	`sqlôe3CodeDr›TabÀ
(
P¨£
*, 
TabÀ
*, , );

3643 
	`sqlôe3DñëeTabÀ
(
sqlôe3
*, 
TabÀ
*);

3644 #i‚de‡
SQLITE_OMIT_AUTOINCREMENT


3645 
	`sqlôe3Autoö¸emítBegö
(
P¨£
 *
pP¨£
);

3646 
	`sqlôe3Autoö¸emítEnd
(
P¨£
 *
pP¨£
);

3648 
	#sqlôe3Autoö¸emítBegö
(
X
)

	)

3649 
	#sqlôe3Autoö¸emítEnd
(
X
)

	)

3651 
	`sqlôe3In£π
(
P¨£
*, 
SrcLi°
*, 
Sñe˘
*, 
IdLi°
*, );

3652 *
	`sqlôe3AºayAŒoˇã
(
sqlôe3
*,*,,*,*);

3653 
IdLi°
 *
	`sqlôe3IdLi°Aµíd
(
sqlôe3
*, IdLi°*, 
Tokí
*);

3654 
	`sqlôe3IdLi°Index
(
IdLi°
*,const *);

3655 
SrcLi°
 *
	`sqlôe3SrcLi°E∆¨ge
(
sqlôe3
*, SrcList*, , );

3656 
SrcLi°
 *
	`sqlôe3SrcLi°Aµíd
(
sqlôe3
*, SrcLi°*, 
Tokí
*, Token*);

3657 
SrcLi°
 *
	`sqlôe3SrcLi°AµídFromTîm
(
P¨£
*, SrcLi°*, 
Tokí
*, Token*,

3658 
Tokí
*, 
Sñe˘
*, 
Ex¥
*, 
IdLi°
*);

3659 
	`sqlôe3SrcLi°IndexedBy
(
P¨£
 *, 
SrcLi°
 *, 
Tokí
 *);

3660 
	`sqlôe3SrcLi°FuncArgs
(
P¨£
*, 
SrcLi°
*, 
Ex¥Li°
*);

3661 
	`sqlôe3IndexedByLookup
(
P¨£
 *, 
SrcLi°_ôem
 *);

3662 
	`sqlôe3SrcLi°Shi·JoöTy≥
(
SrcLi°
*);

3663 
	`sqlôe3SrcLi°AssignCurs‹s
(
P¨£
*, 
SrcLi°
*);

3664 
	`sqlôe3IdLi°Dñëe
(
sqlôe3
*, 
IdLi°
*);

3665 
	`sqlôe3SrcLi°Dñëe
(
sqlôe3
*, 
SrcLi°
*);

3666 
Index
 *
	`sqlôe3AŒoˇãIndexObje˘
(
sqlôe3
*,
i16
,,**);

3667 
	`sqlôe3Cª©eIndex
(
P¨£
*,
Tokí
*,Tokí*,
SrcLi°
*,
Ex¥Li°
*,,Token*,

3668 
Ex¥
*, , , 
u8
);

3669 
	`sqlôe3Dr›Index
(
P¨£
*, 
SrcLi°
*, );

3670 
	`sqlôe3Sñe˘
(
P¨£
*, 
Sñe˘
*, 
Sñe˘De°
*);

3671 
Sñe˘
 *
	`sqlôe3Sñe˘New
(
P¨£
*,
Ex¥Li°
*,
SrcLi°
*,
Ex¥
*,ExprList*,

3672 
Ex¥
*,
Ex¥Li°
*,
u32
,Expr*,Expr*);

3673 
	`sqlôe3Sñe˘Dñëe
(
sqlôe3
*, 
Sñe˘
*);

3674 
TabÀ
 *
	`sqlôe3SrcLi°Lookup
(
P¨£
*, 
SrcLi°
*);

3675 
	`sqlôe3IsRódO∆y
(
P¨£
*, 
TabÀ
*, );

3676 
	`sqlôe3O≥nTabÀ
(
P¨£
*, 
iCur
, 
iDb
, 
TabÀ
*, );

3677 #i‡
	`deföed
(
SQLITE_ENABLE_UPDATE_DELETE_LIMIT
Ë&& !deföed(
SQLITE_OMIT_SUBQUERY
)

3678 
Ex¥
 *
	`sqlôe3LimôWhîe
(
P¨£
*,
SrcLi°
*,Ex¥*,
Ex¥Li°
*,Expr*,Expr*,*);

3680 
	`sqlôe3DñëeFrom
(
P¨£
*, 
SrcLi°
*, 
Ex¥
*);

3681 
	`sqlôe3Upd©e
(
P¨£
*, 
SrcLi°
*, 
Ex¥Li°
*, 
Ex¥
*, );

3682 
WhîeInfo
 *
	`sqlôe3WhîeBegö
(
P¨£
*,
SrcLi°
*,
Ex¥
*,
Ex¥Li°
*,Ex¥Li°*,
u16
,);

3683 
	`sqlôe3WhîeEnd
(
WhîeInfo
*);

3684 
LogE°
 
	`sqlôe3WhîeOuçutRowCou¡
(
WhîeInfo
*);

3685 
	`sqlôe3WhîeIsDi°ö˘
(
WhîeInfo
*);

3686 
	`sqlôe3WhîeIsOrdîed
(
WhîeInfo
*);

3687 
	`sqlôe3WhîeOrdîedI¬îLo›
(
WhîeInfo
*);

3688 
	`sqlôe3WhîeIsS‹ãd
(
WhîeInfo
*);

3689 
	`sqlôe3WhîeC⁄töueLabñ
(
WhîeInfo
*);

3690 
	`sqlôe3WhîeBªakLabñ
(
WhîeInfo
*);

3691 
	`sqlôe3WhîeOkO√Pass
(
WhîeInfo
*, *);

3692 
	#ONEPASS_OFF
 0

	)

3693 
	#ONEPASS_SINGLE
 1

	)

3694 
	#ONEPASS_MULTI
 2

	)

3695 
	`sqlôe3Ex¥CodeLﬂdIndexCﬁumn
(
P¨£
*, 
Index
*, , , );

3696 
	`sqlôe3Ex¥CodeGëCﬁumn
(
P¨£
*, 
TabÀ
*, , , , 
u8
);

3697 
	`sqlôe3Ex¥CodeGëCﬁumnToReg
(
P¨£
*, 
TabÀ
*, , , );

3698 
	`sqlôe3Ex¥CodeGëCﬁumnOfTabÀ
(
Vdbe
*, 
TabÀ
*, , , );

3699 
	`sqlôe3Ex¥CodeMove
(
P¨£
*, , , );

3700 
	`sqlôe3Ex¥CacheSt‹e
(
P¨£
*, , , );

3701 
	`sqlôe3Ex¥CachePush
(
P¨£
*);

3702 
	`sqlôe3Ex¥CacheP›
(
P¨£
*);

3703 
	`sqlôe3Ex¥CacheRemove
(
P¨£
*, , );

3704 
	`sqlôe3Ex¥CacheCÀ¨
(
P¨£
*);

3705 
	`sqlôe3Ex¥CacheAfföôyCh™ge
(
P¨£
*, , );

3706 
	`sqlôe3Ex¥Code
(
P¨£
*, 
Ex¥
*, );

3707 
	`sqlôe3Ex¥CodeC›y
(
P¨£
*, 
Ex¥
*, );

3708 
	`sqlôe3Ex¥CodeFa˘‹abÀ
(
P¨£
*, 
Ex¥
*, );

3709 
	`sqlôe3Ex¥CodeAtInô
(
P¨£
*, 
Ex¥
*, , 
u8
);

3710 
	`sqlôe3Ex¥CodeTemp
(
P¨£
*, 
Ex¥
*, *);

3711 
	`sqlôe3Ex¥CodeT¨gë
(
P¨£
*, 
Ex¥
*, );

3712 
	`sqlôe3Ex¥CodeAndCache
(
P¨£
*, 
Ex¥
*, );

3713 
	`sqlôe3Ex¥CodeEx¥Li°
(
P¨£
*, 
Ex¥Li°
*, , , 
u8
);

3714 
	#SQLITE_ECEL_DUP
 0x01

	)

3715 
	#SQLITE_ECEL_FACTOR
 0x02

	)

3716 
	#SQLITE_ECEL_REF
 0x04

	)

3717 
	#SQLITE_ECEL_OMITREF
 0x08

	)

3718 
	`sqlôe3Ex¥IfTrue
(
P¨£
*, 
Ex¥
*, , );

3719 
	`sqlôe3Ex¥IfFÆ£
(
P¨£
*, 
Ex¥
*, , );

3720 
	`sqlôe3Ex¥IfFÆ£Dup
(
P¨£
*, 
Ex¥
*, , );

3721 
TabÀ
 *
	`sqlôe3FödTabÀ
(
sqlôe3
*,const *, const *);

3722 
	#LOCATE_VIEW
 0x01

	)

3723 
	#LOCATE_NOERR
 0x02

	)

3724 
TabÀ
 *
	`sqlôe3LoˇãTabÀ
(
P¨£
*,
u32
 
Êags
,const *, const *);

3725 
TabÀ
 *
	`sqlôe3LoˇãTabÀIãm
(
P¨£
*,
u32
 
Êags
,
SrcLi°_ôem
 *);

3726 
Index
 *
	`sqlôe3FödIndex
(
sqlôe3
*,const *, const *);

3727 
	`sqlôe3U∆ökAndDñëeTabÀ
(
sqlôe3
*,,const *);

3728 
	`sqlôe3U∆ökAndDñëeIndex
(
sqlôe3
*,,const *);

3729 
	`sqlôe3Vacuum
(
P¨£
*,
Tokí
*);

3730 
	`sqlôe3RunVacuum
(**, 
sqlôe3
*, );

3731 *
	`sqlôe3NameFromTokí
(
sqlôe3
*, 
Tokí
*);

3732 
	`sqlôe3Ex¥Com∑ª
(
Ex¥
*, Expr*, );

3733 
	`sqlôe3Ex¥Li°Com∑ª
(
Ex¥Li°
*, ExprList*, );

3734 
	`sqlôe3Ex¥Im∂õsEx¥
(
Ex¥
*, Expr*, );

3735 
	`sqlôe3Ex¥A«lyzeAggªg©es
(
NameC⁄ãxt
*, 
Ex¥
*);

3736 
	`sqlôe3Ex¥A«lyzeAggLi°
(
NameC⁄ãxt
*,
Ex¥Li°
*);

3737 
	`sqlôe3Ex¥CovîedByIndex
(
Ex¥
*, 
iCur
, 
Index
 *
pIdx
);

3738 
	`sqlôe3Fun˘i⁄U£sThisSrc
(
Ex¥
*, 
SrcLi°
*);

3739 
Vdbe
 *
	`sqlôe3GëVdbe
(
P¨£
*);

3740 #i‚de‡
SQLITE_UNTESTABLE


3741 
	`sqlôe3P∫gSaveSèã
();

3742 
	`sqlôe3P∫gRe°‹eSèã
();

3744 
	`sqlôe3RﬁlbackAŒ
(
sqlôe3
*,);

3745 
	`sqlôe3CodeVîifySchema
(
P¨£
*, );

3746 
	`sqlôe3CodeVîifyNamedSchema
(
P¨£
*, c⁄° *
zDb
);

3747 
	`sqlôe3BegöTønß˘i⁄
(
P¨£
*, );

3748 
	`sqlôe3CommôTønß˘i⁄
(
P¨£
*);

3749 
	`sqlôe3RﬁlbackTønß˘i⁄
(
P¨£
*);

3750 
	`sqlôe3Savïoöt
(
P¨£
*, , 
Tokí
*);

3751 
	`sqlôe3Clo£Savïoöts
(
sqlôe3
 *);

3752 
	`sqlôe3LóveMuãxAndClo£Zombõ
(
sqlôe3
*);

3753 
	`sqlôe3Ex¥IsC⁄°™t
(
Ex¥
*);

3754 
	`sqlôe3Ex¥IsC⁄°™tNŸJoö
(
Ex¥
*);

3755 
	`sqlôe3Ex¥IsC⁄°™tOrFun˘i⁄
(
Ex¥
*, 
u8
);

3756 
	`sqlôe3Ex¥IsTabÀC⁄°™t
(
Ex¥
*,);

3757 #ifde‡
SQLITE_ENABLE_CURSOR_HINTS


3758 
	`sqlôe3Ex¥C⁄èösSubquîy
(
Ex¥
*);

3760 
	`sqlôe3Ex¥IsI¡egî
(
Ex¥
*, *);

3761 
	`sqlôe3Ex¥C™BeNuŒ
(c⁄° 
Ex¥
*);

3762 
	`sqlôe3Ex¥NìdsNoAfföôyCh™ge
(c⁄° 
Ex¥
*, );

3763 
	`sqlôe3IsRowid
(const *);

3764 
	`sqlôe3Gíî©eRowDñëe
(

3765 
P¨£
*,
TabÀ
*,
Triggî
*,,,,
i16
,
u8
,u8,u8,);

3766 
	`sqlôe3Gíî©eRowIndexDñëe
(
P¨£
*, 
TabÀ
*, , , *, );

3767 
	`sqlôe3Gíî©eIndexKey
(
P¨£
*, 
Index
*, , , , *,Index*,);

3768 
	`sqlôe3ResﬁveP¨tIdxLabñ
(
P¨£
*,);

3769 
	`sqlôe3Gíî©eC⁄°øötChecks
(
P¨£
*,
TabÀ
*,*,,,,,

3770 
u8
,u8,,*,*);

3771 
	`sqlôe3Com∂ëeIn£πi⁄
(
P¨£
*,
TabÀ
*,,,,*,,,);

3772 
	`sqlôe3O≥nTabÀAndIndi˚s
(
P¨£
*, 
TabÀ
*, , 
u8
, , u8*, *, *);

3773 
	`sqlôe3BegöWrôeO≥øti⁄
(
P¨£
*, , );

3774 
	`sqlôe3Mu…iWrôe
(
P¨£
*);

3775 
	`sqlôe3MayAb‹t
(
P¨£
*);

3776 
	`sqlôe3HÆtC⁄°øöt
(
P¨£
*, , , *, 
i8
, 
u8
);

3777 
	`sqlôe3UniqueC⁄°øöt
(
P¨£
*, , 
Index
*);

3778 
	`sqlôe3RowidC⁄°øöt
(
P¨£
*, , 
TabÀ
*);

3779 
Ex¥
 *
	`sqlôe3Ex¥Dup
(
sqlôe3
*,Expr*,);

3780 
Ex¥Li°
 *
	`sqlôe3Ex¥Li°Dup
(
sqlôe3
*,ExprList*,);

3781 
SrcLi°
 *
	`sqlôe3SrcLi°Dup
(
sqlôe3
*,SrcList*,);

3782 
IdLi°
 *
	`sqlôe3IdLi°Dup
(
sqlôe3
*,IdList*);

3783 
Sñe˘
 *
	`sqlôe3Sñe˘Dup
(
sqlôe3
*,Select*,);

3784 #i‡
SELECTTRACE_ENABLED


3785 
	`sqlôe3Sñe˘SëName
(
Sñe˘
*,const *);

3787 
	#sqlôe3Sñe˘SëName
(
A
,
B
)

	)

3789 
	`sqlôe3In£πBuûtöFuncs
(
FuncDef
*,);

3790 
FuncDef
 *
	`sqlôe3FödFun˘i⁄
(
sqlôe3
*,c⁄° *,,
u8
,u8);

3791 
	`sqlôe3Regi°îBuûtöFun˘i⁄s
();

3792 
	`sqlôe3Regi°îD©eTimeFun˘i⁄s
();

3793 
	`sqlôe3Regi°îPîC⁄√˘i⁄BuûtöFun˘i⁄s
(
sqlôe3
*);

3794 
	`sqlôe3Sa„tyCheckOk
(
sqlôe3
*);

3795 
	`sqlôe3Sa„tyCheckSickOrOk
(
sqlôe3
*);

3796 
	`sqlôe3Ch™geCookõ
(
P¨£
*, );

3798 #i‡!
	`deföed
(
SQLITE_OMIT_VIEW
Ë&& !deföed(
SQLITE_OMIT_TRIGGER
)

3799 
	`sqlôe3M©îülizeVõw
(
P¨£
*, 
TabÀ
*, 
Ex¥
*, );

3802 #i‚de‡
SQLITE_OMIT_TRIGGER


3803 
	`sqlôe3BegöTriggî
(
P¨£
*, 
Tokí
*,Tokí*,,,
IdLi°
*,
SrcLi°
*,

3804 
Ex¥
*,, );

3805 
	`sqlôe3FöishTriggî
(
P¨£
*, 
TriggîSãp
*, 
Tokí
*);

3806 
	`sqlôe3Dr›Triggî
(
P¨£
*, 
SrcLi°
*, );

3807 
	`sqlôe3Dr›TriggîPå
(
P¨£
*, 
Triggî
*);

3808 
Triggî
 *
	`sqlôe3TriggîsExi°
(
P¨£
 *, 
TabÀ
*, , 
Ex¥Li°
*, *
pMask
);

3809 
Triggî
 *
	`sqlôe3TriggîLi°
(
P¨£
 *, 
TabÀ
 *);

3810 
	`sqlôe3CodeRowTriggî
(
P¨£
*, 
Triggî
 *, , 
Ex¥Li°
*, , 
TabÀ
 *,

3812 
	`sqlôe3CodeRowTriggîDúe˘
(
P¨£
 *, 
Triggî
 *, 
TabÀ
 *, , , );

3813 
	`sqlôeVõwTriggîs
(
P¨£
*, 
TabÀ
*, 
Ex¥
*, , 
Ex¥Li°
*);

3814 
	`sqlôe3DñëeTriggîSãp
(
sqlôe3
*, 
TriggîSãp
*);

3815 
TriggîSãp
 *
	`sqlôe3TriggîSñe˘Sãp
(
sqlôe3
*,
Sñe˘
*);

3816 
TriggîSãp
 *
	`sqlôe3TriggîIn£πSãp
(
sqlôe3
*,
Tokí
*, 
IdLi°
*,

3817 
Sñe˘
*,
u8
);

3818 
TriggîSãp
 *
	`sqlôe3TriggîUpd©eSãp
(
sqlôe3
*,
Tokí
*,
Ex¥Li°
*, 
Ex¥
*, 
u8
);

3819 
TriggîSãp
 *
	`sqlôe3TriggîDñëeSãp
(
sqlôe3
*,
Tokí
*, 
Ex¥
*);

3820 
	`sqlôe3DñëeTriggî
(
sqlôe3
*, 
Triggî
*);

3821 
	`sqlôe3U∆ökAndDñëeTriggî
(
sqlôe3
*,,const *);

3822 
u32
 
	`sqlôe3TriggîCﬁmask
(
P¨£
*,
Triggî
*,
Ex¥Li°
*,,,
TabÀ
*,);

3823 
	#sqlôe3P¨£T›Àvñ
(
p
Ë(’)->
pT›Àvñ
 ? (p)->pT›Àvñ : (p))

	)

3824 
	#sqlôe3IsT›Àvñ
(
p
Ë(’)->
pT›Àvñ
==0)

	)

3826 
	#sqlôe3TriggîsExi°
(
B
,
C
,
D
,
E
,
F
Ë0

	)

3827 
	#sqlôe3DñëeTriggî
(
A
,
B
)

	)

3828 
	#sqlôe3Dr›TriggîPå
(
A
,
B
)

	)

3829 
	#sqlôe3U∆ökAndDñëeTriggî
(
A
,
B
,
C
)

	)

3830 
	#sqlôe3CodeRowTriggî
(
A
,
B
,
C
,
D
,
E
,
F
,
G
,
H
,
I
)

	)

3831 
	#sqlôe3CodeRowTriggîDúe˘
(
A
,
B
,
C
,
D
,
E
,
F
)

	)

3832 
	#sqlôe3TriggîLi°
(
X
, 
Y
Ë0

	)

3833 
	#sqlôe3P¨£T›Àvñ
(
p
Ë
	)
p

3834 
	#sqlôe3IsT›Àvñ
(
p
Ë1

	)

3835 
	#sqlôe3TriggîCﬁmask
(
A
,
B
,
C
,
D
,
E
,
F
,
G
Ë0

	)

3838 
	`sqlôe3JoöTy≥
(
P¨£
*, 
Tokí
*, Token*, Token*);

3839 
	`sqlôe3Cª©eF‹eignKey
(
P¨£
*, 
Ex¥Li°
*, 
Tokí
*, ExprList*, );

3840 
	`sqlôe3De„rF‹eignKey
(
P¨£
*, );

3841 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


3842 
	`sqlôe3AuthRód
(
P¨£
*,
Ex¥
*,
Schema
*,
SrcLi°
*);

3843 
	`sqlôe3AuthCheck
(
P¨£
*,, const *, const *, const *);

3844 
	`sqlôe3AuthC⁄ãxtPush
(
P¨£
*, 
AuthC⁄ãxt
*, const *);

3845 
	`sqlôe3AuthC⁄ãxtP›
(
AuthC⁄ãxt
*);

3846 
	`sqlôe3AuthRódCﬁ
(
P¨£
*, const *, const *, );

3848 
	#sqlôe3AuthRód
(
a
,
b
,
c
,
d
)

	)

3849 
	#sqlôe3AuthCheck
(
a
,
b
,
c
,
d
,
e
Ë
SQLITE_OK


	)

3850 
	#sqlôe3AuthC⁄ãxtPush
(
a
,
b
,
c
)

	)

3851 
	#sqlôe3AuthC⁄ãxtP›
(
a
Ë(()◊))

	)

3853 
	`sqlôe3Aâach
(
P¨£
*, 
Ex¥
*, Expr*, Expr*);

3854 
	`sqlôe3Dëach
(
P¨£
*, 
Ex¥
*);

3855 
	`sqlôe3FixInô
(
DbFixî
*, 
P¨£
*, , c⁄° *, c⁄° 
Tokí
*);

3856 
	`sqlôe3FixSrcLi°
(
DbFixî
*, 
SrcLi°
*);

3857 
	`sqlôe3FixSñe˘
(
DbFixî
*, 
Sñe˘
*);

3858 
	`sqlôe3FixEx¥
(
DbFixî
*, 
Ex¥
*);

3859 
	`sqlôe3FixEx¥Li°
(
DbFixî
*, 
Ex¥Li°
*);

3860 
	`sqlôe3FixTriggîSãp
(
DbFixî
*, 
TriggîSãp
*);

3861 
	`sqlôe3AtoF
(c⁄° *
z
, *, , 
u8
);

3862 
	`sqlôe3GëI¡32
(const *, *);

3863 
	`sqlôe3Atoi
(const *);

3864 
	`sqlôe3Utf16ByãLí
(c⁄° *
pD©a
, 
nCh¨
);

3865 
	`sqlôe3Utf8Ch¨Lí
(c⁄° *
pD©a
, 
nByã
);

3866 
u32
 
	`sqlôe3Utf8Ród
(c⁄° 
u8
**);

3867 
LogE°
 
	`sqlôe3LogE°
(
u64
);

3868 
LogE°
 
	`sqlôe3LogE°Add
(LogEst,LogEst);

3869 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


3870 
LogE°
 
	`sqlôe3LogE°FromDoubÀ
();

3872 #i‡
	`deföed
(
SQLITE_ENABLE_STMT_SCANSTATUS
) || \

3873 
	`deföed
(
SQLITE_ENABLE_STAT3_OR_STAT4
) || \

3874 
	$deföed
(
SQLITE_EXPLAIN_ESTIMATED_ROWS
)

3875 
u64
 
	`sqlôe3LogE°ToI¡
(
LogE°
);

3877 
VLi°
 *
	`sqlôe3VLi°Add
(
sqlôe3
*,VList*,const *,,);

3878 c⁄° *
	`sqlôe3VLi°NumToName
(
VLi°
*,);

3879 
	`sqlôe3VLi°NameToNum
(
VLi°
*,const *,);

3886 
	`sqlôe3PutV¨öt
(*, 
u64
);

3887 
u8
 
	`sqlôe3GëV¨öt
(c⁄° *, 
u64
 *);

3888 
u8
 
	`sqlôe3GëV¨öt32
(c⁄° *, 
u32
 *);

3889 
	`sqlôe3V¨ötLí
(
u64
 
v
);

3896 
	#gëV¨öt32
(
A
,
B
) \

3897 (
u8
)((*(
A
)<(u8)0x80)?((
B
)=(
u32
)*(A)),1:
	`sqlôe3GëV¨öt32
((A),(u32 *)&(B)))

	)

3898 
	#putV¨öt32
(
A
,
B
) \

3899 (
u8
)(((
u32
)(
B
)<(u32)0x80)?(*(
A
)=()(B)),1:\

3900 
	`sqlôe3PutV¨öt
((
A
),(
B
)))

	)

3901 
	#gëV¨öt
 
sqlôe3GëV¨öt


	)

3902 
	#putV¨öt
 
sqlôe3PutV¨öt


	)

3905 c⁄° *
	`sqlôe3IndexAfföôySå
(
sqlôe3
*, 
Index
*);

3906 
	`sqlôe3TabÀAfföôy
(
Vdbe
*, 
TabÀ
*, );

3907 
	`sqlôe3Com∑ªAfföôy
(
Ex¥
 *
pEx¥
, 
aff2
);

3908 
	`sqlôe3IndexAfföôyOk
(
Ex¥
 *
pEx¥
, 
idx_afföôy
);

3909 
	`sqlôe3TabÀCﬁumnAfföôy
(
TabÀ
*,);

3910 
	`sqlôe3Ex¥Afföôy
(
Ex¥
 *
pEx¥
);

3911 
	`sqlôe3Atoi64
(c⁄° *, 
i64
*, , 
u8
);

3912 
	`sqlôe3DecOrHexToI64
(c⁄° *, 
i64
*);

3913 
	`sqlôe3Eº‹WôhMsg
(
sqlôe3
*, , const *,...);

3914 
	`sqlôe3Eº‹
(
sqlôe3
*,);

3915 
	`sqlôe3Sy°emEº‹
(
sqlôe3
*,);

3916 *
	`sqlôe3HexToBlob
(
sqlôe3
*, c⁄° *
z
, 
n
);

3917 
u8
 
	`sqlôe3HexToI¡
(
h
);

3918 
	`sqlôe3TwoP¨tName
(
P¨£
 *, 
Tokí
 *, Token *, Token **);

3920 #i‡
	`deföed
(
SQLITE_NEED_ERR_NAME
)

3921 c⁄° *
	`sqlôe3EºName
();

3924 c⁄° *
	`sqlôe3EºSå
();

3925 
	`sqlôe3RódSchema
(
P¨£
 *
pP¨£
);

3926 
CﬁlSeq
 *
	`sqlôe3FödCﬁlSeq
(
sqlôe3
*,
u8
 
íc
, const *,);

3927 
CﬁlSeq
 *
	`sqlôe3LoˇãCﬁlSeq
(
P¨£
 *
pP¨£
, c⁄° *
zName
);

3928 
CﬁlSeq
 *
	`sqlôe3Ex¥CﬁlSeq
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pEx¥
);

3929 
Ex¥
 *
	`sqlôe3Ex¥AddCﬁœãTokí
(
P¨£
 *
pP¨£
, Ex¥*, c⁄° 
Tokí
*, );

3930 
Ex¥
 *
	`sqlôe3Ex¥AddCﬁœãSåög
(
P¨£
*,Expr*,const *);

3931 
Ex¥
 *
	`sqlôe3Ex¥SkùCﬁœã
(Expr*);

3932 
	`sqlôe3CheckCﬁlSeq
(
P¨£
 *, 
CﬁlSeq
 *);

3933 
	`sqlôe3CheckObje˘Name
(
P¨£
 *, const *);

3934 
	`sqlôe3VdbeSëCh™ges
(
sqlôe3
 *, );

3935 
	`sqlôe3AddI¡64
(
i64
*,i64);

3936 
	`sqlôe3SubI¡64
(
i64
*,i64);

3937 
	`sqlôe3MulI¡64
(
i64
*,i64);

3938 
	`sqlôe3AbsI¡32
();

3939 #ifde‡
SQLITE_ENABLE_8_3_NAMES


3940 
	`sqlôe3FûeSuffix3
(const *, *);

3942 
	#sqlôe3FûeSuffix3
(
X
,
Y
)

	)

3944 
u8
 
	`sqlôe3GëBoﬁón
(c⁄° *
z
,u8);

3946 c⁄° *
	`sqlôe3VÆueText
(
sqlôe3_vÆue
*, 
u8
);

3947 
	`sqlôe3VÆueByãs
(
sqlôe3_vÆue
*, 
u8
);

3948 
	`sqlôe3VÆueSëSå
(
sqlôe3_vÆue
*, , c⁄° *,
u8
,

3950 
	`sqlôe3VÆueSëNuŒ
(
sqlôe3_vÆue
*);

3951 
	`sqlôe3VÆueFªe
(
sqlôe3_vÆue
*);

3952 
sqlôe3_vÆue
 *
	`sqlôe3VÆueNew
(
sqlôe3
 *);

3953 *
	`sqlôe3Utf16to8
(
sqlôe3
 *, c⁄° *, , 
u8
);

3954 
	`sqlôe3VÆueFromEx¥
(
sqlôe3
 *, 
Ex¥
 *, 
u8
, u8, 
sqlôe3_vÆue
 **);

3955 
	`sqlôe3VÆueAµlyAfföôy
(
sqlôe3_vÆue
 *, 
u8
, u8);

3956 #i‚de‡
SQLITE_AMALGAMATION


3957 c⁄° 
sqlôe3OpcodePr›îty
[];

3958 c⁄° 
sqlôe3SåBINARY
[];

3959 c⁄° 
sqlôe3UµîToLowî
[];

3960 c⁄° 
sqlôe3Cty≥M≠
[];

3961 c⁄° 
Tokí
 
sqlôe3I¡Tokís
[];

3962 
SQLITE_WSD
 
Sqlôe3C⁄fig
 
sqlôe3C⁄fig
;

3963 
FuncDefHash
 
sqlôe3BuûtöFun˘i⁄s
;

3964 #i‚de‡
SQLITE_OMIT_WSD


3965 
sqlôe3PídögByã
;

3968 
	`sqlôe3RoŸPageMoved
(
sqlôe3
*, , , );

3969 
	`sqlôe3Reödex
(
P¨£
*, 
Tokí
*, Token*);

3970 
	`sqlôe3A…îFun˘i⁄s
();

3971 
	`sqlôe3A…îRíameTabÀ
(
P¨£
*, 
SrcLi°
*, 
Tokí
*);

3972 
	`sqlôe3GëTokí
(const *, *);

3973 
	`sqlôe3Ne°edP¨£
(
P¨£
*, const *, ...);

3974 
	`sqlôe3ExpúePª∑ªdSèãmíts
(
sqlôe3
*);

3975 
	`sqlôe3CodeSub£À˘
(
P¨£
*, 
Ex¥
 *, , );

3976 
	`sqlôe3Sñe˘Pªp
(
P¨£
*, 
Sñe˘
*, 
NameC⁄ãxt
*);

3977 
	`sqlôe3Sñe˘Wr⁄gNumTîmsEº‹
(
P¨£
 *
pP¨£
, 
Sñe˘
 *
p
);

3978 
	`sqlôe3M©chS∑nName
(const *, const *, const *, const *);

3979 
	`sqlôe3ResﬁveEx¥Names
(
NameC⁄ãxt
*, 
Ex¥
*);

3980 
	`sqlôe3ResﬁveEx¥Li°Names
(
NameC⁄ãxt
*, 
Ex¥Li°
*);

3981 
	`sqlôe3ResﬁveSñe˘Names
(
P¨£
*, 
Sñe˘
*, 
NameC⁄ãxt
*);

3982 
	`sqlôe3ResﬁveSñfRe„ªn˚
(
P¨£
*,
TabÀ
*,,
Ex¥
*,
Ex¥Li°
*);

3983 
	`sqlôe3ResﬁveOrdîGroupBy
(
P¨£
*, 
Sñe˘
*, 
Ex¥Li°
*, const *);

3984 
	`sqlôe3CﬁumnDeÁu…
(
Vdbe
 *, 
TabÀ
 *, , );

3985 
	`sqlôe3A…îFöishAddCﬁumn
(
P¨£
 *, 
Tokí
 *);

3986 
	`sqlôe3A…îBegöAddCﬁumn
(
P¨£
 *, 
SrcLi°
 *);

3987 
CﬁlSeq
 *
	`sqlôe3GëCﬁlSeq
(
P¨£
*, 
u8
, CollSeq *, const *);

3988 
	`sqlôe3AfföôyTy≥
(c⁄° *, 
u8
*);

3989 
	`sqlôe3A«lyze
(
P¨£
*, 
Tokí
*, Token*);

3990 
	`sqlôe3InvokeBusyH™dÀr
(
BusyH™dÀr
*);

3991 
	`sqlôe3FödDb
(
sqlôe3
*, 
Tokí
*);

3992 
	`sqlôe3FödDbName
(
sqlôe3
 *, const *);

3993 
	`sqlôe3A«lysisLﬂd
(
sqlôe3
*,
iDB
);

3994 
	`sqlôe3DñëeIndexSam∂es
(
sqlôe3
*,
Index
*);

3995 
	`sqlôe3DeÁu…RowE°
(
Index
*);

3996 
	`sqlôe3Regi°îLikeFun˘i⁄s
(
sqlôe3
*, );

3997 
	`sqlôe3IsLikeFun˘i⁄
(
sqlôe3
*,
Ex¥
*,*,*);

3998 
	`sqlôe3SchemaCÀ¨
(*);

3999 
Schema
 *
	`sqlôe3SchemaGë
(
sqlôe3
 *, 
Båì
 *);

4000 
	`sqlôe3SchemaToIndex
(
sqlôe3
 *
db
, 
Schema
 *);

4001 
KeyInfo
 *
	`sqlôe3KeyInfoAŒoc
(
sqlôe3
*,,);

4002 
	`sqlôe3KeyInfoUƒef
(
KeyInfo
*);

4003 
KeyInfo
 *
	`sqlôe3KeyInfoRef
(KeyInfo*);

4004 
KeyInfo
 *
	`sqlôe3KeyInfoOfIndex
(
P¨£
*, 
Index
*);

4005 #ifde‡
SQLITE_DEBUG


4006 
	`sqlôe3KeyInfoIsWrôóbÀ
(
KeyInfo
*);

4008 
	`sqlôe3Cª©eFunc
(
sqlôe3
 *, const *, , , *,

4009 (*)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
 **),

4010 (*)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
 **), (*)(sqlite3_context*),

4011 
FuncDe°ru˘‹
 *
pDe°ru˘‹


4013 
	`sqlôe3OomFau…
(
sqlôe3
*);

4014 
	`sqlôe3OomCÀ¨
(
sqlôe3
*);

4015 
	`sqlôe3ApiExô
(
sqlôe3
 *
db
, );

4016 
	`sqlôe3O≥nTempD©aba£
(
P¨£
 *);

4018 
	`sqlôe3SåAccumInô
(
SåAccum
*, 
sqlôe3
*, *, , );

4019 
	`sqlôe3SåAccumAµíd
(
SåAccum
*,const *,);

4020 
	`sqlôe3SåAccumAµídAŒ
(
SåAccum
*,const *);

4021 
	`sqlôe3AµídCh¨
(
SåAccum
*,,);

4022 *
	`sqlôe3SåAccumFöish
(
SåAccum
*);

4023 
	`sqlôe3SåAccumRe£t
(
SåAccum
*);

4024 
	`sqlôe3Sñe˘De°Inô
(
Sñe˘De°
*,,);

4025 
Ex¥
 *
	`sqlôe3Cª©eCﬁumnEx¥
(
sqlôe3
 *, 
SrcLi°
 *, , );

4027 
	`sqlôe3BackupRe°¨t
(
sqlôe3_backup
 *);

4028 
	`sqlôe3BackupUpd©e
(
sqlôe3_backup
 *, 
Pgno
, c⁄° 
u8
 *);

4030 #i‚de‡
SQLITE_OMIT_SUBQUERY


4031 
	`sqlôe3Ex¥CheckIN
(
P¨£
*, 
Ex¥
*);

4033 
	#sqlôe3Ex¥CheckIN
(
x
,
y
Ë
SQLITE_OK


	)

4036 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


4037 
	`sqlôe3A«lyzeFun˘i⁄s
();

4038 
	`sqlôe3Sèt4ProbeSëVÆue
(

4039 
P¨£
*,
Index
*,
U≈ackedRec‹d
**,
Ex¥
*,,,*);

4040 
	`sqlôe3Sèt4VÆueFromEx¥
(
P¨£
*, 
Ex¥
*, 
u8
, 
sqlôe3_vÆue
**);

4041 
	`sqlôe3Sèt4ProbeFªe
(
U≈ackedRec‹d
*);

4042 
	`sqlôe3Sèt4Cﬁumn
(
sqlôe3
*, c⁄° *, , , 
sqlôe3_vÆue
**);

4043 
	`sqlôe3IndexCﬁumnAfföôy
(
sqlôe3
*, 
Index
*, );

4049 *
	`sqlôe3P¨£rAŒoc
(*(*)(
u64
));

4050 
	`sqlôe3P¨£rFªe
(*, (*)(*));

4051 
	`sqlôe3P¨£r
(*, , 
Tokí
, 
P¨£
*);

4052 #ifde‡
YYTRACKMAXSTACKDEPTH


4053 
	`sqlôe3P¨£rSèckPók
(*);

4056 
	`sqlôe3AutoLﬂdExãnsi⁄s
(
sqlôe3
*);

4057 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


4058 
	`sqlôe3Clo£Exãnsi⁄s
(
sqlôe3
*);

4060 
	#sqlôe3Clo£Exãnsi⁄s
(
X
)

	)

4063 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


4064 
	`sqlôe3TabÀLock
(
P¨£
 *, , , 
u8
, const *);

4066 
	#sqlôe3TabÀLock
(
v
,
w
,
x
,
y
,
z
)

	)

4069 #ifde‡
SQLITE_TEST


4070 
	`sqlôe3Utf8To8
(*);

4073 #ifde‡
SQLITE_OMIT_VIRTUALTABLE


4074 
	#sqlôe3VèbCÀ¨
(
Y
)

	)

4075 
	#sqlôe3VèbSync
(
X
,
Y
Ë
SQLITE_OK


	)

4076 
	#sqlôe3VèbRﬁlback
(
X
)

	)

4077 
	#sqlôe3VèbCommô
(
X
)

	)

4078 
	#sqlôe3VèbInSync
(
db
Ë0

	)

4079 
	#sqlôe3VèbLock
(
X
)

	)

4080 
	#sqlôe3VèbU∆ock
(
X
)

	)

4081 
	#sqlôe3VèbU∆ockLi°
(
X
)

	)

4082 
	#sqlôe3VèbSavïoöt
(
X
, 
Y
, 
Z
Ë
SQLITE_OK


	)

4083 
	#sqlôe3GëVTabÀ
(
X
,
Y
Ë((
VTabÀ
*)0)

	)

4085 
	`sqlôe3VèbCÀ¨
(
sqlôe3
 *
db
, 
TabÀ
*);

4086 
	`sqlôe3VèbDisc⁄√˘
(
sqlôe3
 *
db
, 
TabÀ
 *
p
);

4087 
	`sqlôe3VèbSync
(
sqlôe3
 *
db
, 
Vdbe
*);

4088 
	`sqlôe3VèbRﬁlback
(
sqlôe3
 *
db
);

4089 
	`sqlôe3VèbCommô
(
sqlôe3
 *
db
);

4090 
	`sqlôe3VèbLock
(
VTabÀ
 *);

4091 
	`sqlôe3VèbU∆ock
(
VTabÀ
 *);

4092 
	`sqlôe3VèbU∆ockLi°
(
sqlôe3
*);

4093 
	`sqlôe3VèbSavïoöt
(
sqlôe3
 *, , );

4094 
	`sqlôe3VèbImp‹tEºmsg
(
Vdbe
*, 
sqlôe3_vèb
*);

4095 
VTabÀ
 *
	`sqlôe3GëVTabÀ
(
sqlôe3
*, 
TabÀ
*);

4096 
ModuÀ
 *
	`sqlôe3VèbCª©eModuÀ
(

4097 
sqlôe3
*,

4099 c⁄° 
sqlôe3_moduÀ
*,

4103 
	#sqlôe3VèbInSync
(
db
Ë((db)->
nVTøns
>0 && (db)->
aVTøns
==0)

	)

4105 
	`sqlôe3VèbEp⁄ymousTabÀInô
(
P¨£
*,
ModuÀ
*);

4106 
	`sqlôe3VèbEp⁄ymousTabÀCÀ¨
(
sqlôe3
*,
ModuÀ
*);

4107 
	`sqlôe3VèbMakeWrôabÀ
(
P¨£
*,
TabÀ
*);

4108 
	`sqlôe3VèbBegöP¨£
(
P¨£
*, 
Tokí
*, Token*, Token*, );

4109 
	`sqlôe3VèbFöishP¨£
(
P¨£
*, 
Tokí
*);

4110 
	`sqlôe3VèbArgInô
(
P¨£
*);

4111 
	`sqlôe3VèbArgExãnd
(
P¨£
*, 
Tokí
*);

4112 
	`sqlôe3VèbCÆlCª©e
(
sqlôe3
*, , const *, **);

4113 
	`sqlôe3VèbCÆlC⁄√˘
(
P¨£
*, 
TabÀ
*);

4114 
	`sqlôe3VèbCÆlDe°roy
(
sqlôe3
*, , const *);

4115 
	`sqlôe3VèbBegö
(
sqlôe3
 *, 
VTabÀ
 *);

4116 
FuncDef
 *
	`sqlôe3VèbOvîlﬂdFun˘i⁄
(
sqlôe3
 *,FuncDef*, 
nArg
, 
Ex¥
*);

4117 
	`sqlôe3InvÆidFun˘i⁄
(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**);

4118 
sqlôe3_öt64
 
	`sqlôe3StmtCuºítTime
(
sqlôe3_c⁄ãxt
*);

4119 
	`sqlôe3VdbeP¨amëîIndex
(
Vdbe
*, const *, );

4120 
	`sqlôe3Tøns„rBödögs
(
sqlôe3_°mt
 *, sqlite3_stmt *);

4121 
	`sqlôe3P¨£rRe£t
(
P¨£
*);

4122 
	`sqlôe3Rïª∑ª
(
Vdbe
*);

4123 
	`sqlôe3Ex¥Li°CheckLígth
(
P¨£
*, 
Ex¥Li°
*, const *);

4124 
CﬁlSeq
 *
	`sqlôe3Bö¨yCom∑ªCﬁlSeq
(
P¨£
 *, 
Ex¥
 *, Expr *);

4125 
	`sqlôe3TempInMem‹y
(c⁄° 
sqlôe3
*);

4126 c⁄° *
	`sqlôe3Jou∫ÆModíame
();

4127 #i‚de‡
SQLITE_OMIT_WAL


4128 
	`sqlôe3Checkpoöt
(
sqlôe3
*, , , *, *);

4129 
	`sqlôe3WÆDeÁu…Hook
(*,
sqlôe3
*,const *,);

4131 #i‚de‡
SQLITE_OMIT_CTE


4132 
Wôh
 *
	`sqlôe3WôhAdd
(
P¨£
*,Wôh*,
Tokí
*,
Ex¥Li°
*,
Sñe˘
*);

4133 
	`sqlôe3WôhDñëe
(
sqlôe3
*,
Wôh
*);

4134 
	`sqlôe3WôhPush
(
P¨£
*, 
Wôh
*, 
u8
);

4136 
	#sqlôe3WôhPush
(
x
,
y
,
z
)

	)

4137 
	#sqlôe3WôhDñëe
(
x
,
y
)

	)

4147 #i‡!
	`deföed
(
SQLITE_OMIT_FOREIGN_KEY
Ë&& !deföed(
SQLITE_OMIT_TRIGGER
)

4148 
	`sqlôe3FkCheck
(
P¨£
*, 
TabÀ
*, , , *, );

4149 
	`sqlôe3FkDr›TabÀ
(
P¨£
*, 
SrcLi°
 *, 
TabÀ
*);

4150 
	`sqlôe3FkA˘i⁄s
(
P¨£
*, 
TabÀ
*, 
Ex¥Li°
*, , *, );

4151 
	`sqlôe3FkRequúed
(
P¨£
*, 
TabÀ
*, *, );

4152 
u32
 
	`sqlôe3FkOldmask
(
P¨£
*, 
TabÀ
*);

4153 
FKey
 *
	`sqlôe3FkRe„ªn˚s
(
TabÀ
 *);

4155 
	#sqlôe3FkA˘i⁄s
(
a
,
b
,
c
,
d
,
e
,
f
)

	)

4156 
	#sqlôe3FkCheck
(
a
,
b
,
c
,
d
,
e
,
f
)

	)

4157 
	#sqlôe3FkDr›TabÀ
(
a
,
b
,
c
)

	)

4158 
	#sqlôe3FkOldmask
(
a
,
b
Ë0

	)

4159 
	#sqlôe3FkRequúed
(
a
,
b
,
c
,
d
Ë0

	)

4161 #i‚de‡
SQLITE_OMIT_FOREIGN_KEY


4162 
	`sqlôe3FkDñëe
(
sqlôe3
 *, 
TabÀ
*);

4163 
	`sqlôe3FkLoˇãIndex
(
P¨£
*,
TabÀ
*,
FKey
*,
Index
**,**);

4165 
	#sqlôe3FkDñëe
(
a
,
b
)

	)

4166 
	#sqlôe3FkLoˇãIndex
(
a
,
b
,
c
,
d
,
e
)

	)

4173 
	#SQLITE_FAULTINJECTOR_MALLOC
 0

	)

4174 
	#SQLITE_FAULTINJECTOR_COUNT
 1

	)

4181 #i‚de‡
SQLITE_UNTESTABLE


4182 
	`sqlôe3BegöBíignMÆloc
();

4183 
	`sqlôe3EndBíignMÆloc
();

4185 
	#sqlôe3BegöBíignMÆloc
()

	)

4186 
	#sqlôe3EndBíignMÆloc
()

	)

4192 
	#IN_INDEX_ROWID
 1

	)

4193 
	#IN_INDEX_EPH
 2

	)

4194 
	#IN_INDEX_INDEX_ASC
 3

	)

4195 
	#IN_INDEX_INDEX_DESC
 4

	)

4196 
	#IN_INDEX_NOOP
 5

	)

4200 
	#IN_INDEX_NOOP_OK
 0x0001

	)

4201 
	#IN_INDEX_MEMBERSHIP
 0x0002

	)

4202 
	#IN_INDEX_LOOP
 0x0004

	)

4203 
	`sqlôe3FödInIndex
(
P¨£
 *, 
Ex¥
 *, 
u32
, *, *);

4205 
	`sqlôe3Jou∫ÆO≥n
(
sqlôe3_vfs
 *, c⁄° *, 
sqlôe3_fûe
 *, , );

4206 
	`sqlôe3Jou∫ÆSize
(
sqlôe3_vfs
 *);

4207 #ifde‡
SQLITE_ENABLE_ATOMIC_WRITE


4208 
	`sqlôe3Jou∫ÆCª©e
(
sqlôe3_fûe
 *);

4211 
	`sqlôe3Jou∫ÆIsInMem‹y
(
sqlôe3_fûe
 *
p
);

4212 
	`sqlôe3MemJou∫ÆO≥n
(
sqlôe3_fûe
 *);

4214 
	`sqlôe3Ex¥SëHeightAndFœgs
(
P¨£
 *
pP¨£
, 
Ex¥
 *
p
);

4215 #i‡
SQLITE_MAX_EXPR_DEPTH
>0

4216 
	`sqlôe3Sñe˘Ex¥Height
(
Sñe˘
 *);

4217 
	`sqlôe3Ex¥CheckHeight
(
P¨£
*, );

4219 
	#sqlôe3Sñe˘Ex¥Height
(
x
Ë0

	)

4220 
	#sqlôe3Ex¥CheckHeight
(
x
,
y
)

	)

4223 
u32
 
	`sqlôe3Gë4byã
(c⁄° 
u8
*);

4224 
	`sqlôe3Put4byã
(
u8
*, 
u32
);

4226 #ifde‡
SQLITE_ENABLE_UNLOCK_NOTIFY


4227 
	`sqlôe3C⁄√˘i⁄Blocked
(
sqlôe3
 *, sqlite3 *);

4228 
	`sqlôe3C⁄√˘i⁄U∆ocked
(
sqlôe3
 *
db
);

4229 
	`sqlôe3C⁄√˘i⁄Clo£d
(
sqlôe3
 *
db
);

4231 
	#sqlôe3C⁄√˘i⁄Blocked
(
x
,
y
)

	)

4232 
	#sqlôe3C⁄√˘i⁄U∆ocked
(
x
)

	)

4233 
	#sqlôe3C⁄√˘i⁄Clo£d
(
x
)

	)

4236 #ifde‡
SQLITE_DEBUG


4237 
	`sqlôe3P¨£rTø˚
(
FILE
*, *);

4245 #ifde‡
SQLITE_ENABLE_IOTRACE


4246 
	#IOTRACE
(
A
Ëif–
sqlôe3IoTø˚
 ){ sqlôe3IoTø˚ A; 
	}

	)
}

4247 
sqlôe3VdbeIOTø˚Sql
(
Vdbe
*);

4248 
SQLITE_API
 
SQLITE_EXTERN
 (
SQLITE_CDECL
 *
sqlôe3IoTø˚
)(const *,...);

4250 
	#IOTRACE
(
A
)

	)

4251 
	#sqlôe3VdbeIOTø˚Sql
(
X
)

	)

4282 #ifde‡
SQLITE_MEMDEBUG


4283 
	`sqlôe3MemdebugSëTy≥
(*,
u8
);

4284 
	`sqlôe3MemdebugHasTy≥
(*,
u8
);

4285 
	`sqlôe3MemdebugNoTy≥
(*,
u8
);

4287 
	#sqlôe3MemdebugSëTy≥
(
X
,
Y
Ë

	)

4288 
	#sqlôe3MemdebugHasTy≥
(
X
,
Y
Ë1

	)

4289 
	#sqlôe3MemdebugNoTy≥
(
X
,
Y
Ë1

	)

4291 
	#MEMTYPE_HEAP
 0x01

	)

4292 
	#MEMTYPE_LOOKASIDE
 0x02

	)

4293 
	#MEMTYPE_SCRATCH
 0x04

	)

4294 
	#MEMTYPE_PCACHE
 0x08

	)

4299 #i‡
SQLITE_MAX_WORKER_THREADS
>0

4300 
	`sqlôe3ThªadCª©e
(
SQLôeThªad
**,*(*)(*),*);

4301 
	`sqlôe3ThªadJoö
(
SQLôeThªad
*, **);

4304 #i‡
	`deföed
(
SQLITE_ENABLE_DBSTAT_VTAB
Ë|| deföed(
SQLITE_TEST
)

4305 
	`sqlôe3Db°©Regi°î
(
sqlôe3
*);

4308 
	`sqlôe3Ex¥Ve˘‹Size
(
Ex¥
 *
pEx¥
);

4309 
	`sqlôe3Ex¥IsVe˘‹
(
Ex¥
 *
pEx¥
);

4310 
Ex¥
 *
	`sqlôe3Ve˘‹FõldSubex¥
(Expr*, );

4311 
Ex¥
 *
	`sqlôe3Ex¥F‹Ve˘‹Fõld
(
P¨£
*,Expr*,);

4312 
	`sqlôe3Ve˘‹Eº‹Msg
(
P¨£
*, 
Ex¥
*);

	@sqliteLimit.h

23 #i‚de‡
SQLITE_MAX_LENGTH


24 
	#SQLITE_MAX_LENGTH
 1000000000

	)

44 #i‚de‡
SQLITE_MAX_COLUMN


45 
	#SQLITE_MAX_COLUMN
 2000

	)

55 #i‚de‡
SQLITE_MAX_SQL_LENGTH


56 
	#SQLITE_MAX_SQL_LENGTH
 1000000000

	)

69 #i‚de‡
SQLITE_MAX_EXPR_DEPTH


70 
	#SQLITE_MAX_EXPR_DEPTH
 1000

	)

81 #i‚de‡
SQLITE_MAX_COMPOUND_SELECT


82 
	#SQLITE_MAX_COMPOUND_SELECT
 500

	)

89 #i‚de‡
SQLITE_MAX_VDBE_OP


90 
	#SQLITE_MAX_VDBE_OP
 25000

	)

96 #i‚de‡
SQLITE_MAX_FUNCTION_ARG


97 
	#SQLITE_MAX_FUNCTION_ARG
 127

	)

109 #i‚de‡
SQLITE_DEFAULT_CACHE_SIZE


110 
	#SQLITE_DEFAULT_CACHE_SIZE
 -2000

	)

117 #i‚de‡
SQLITE_DEFAULT_WAL_AUTOCHECKPOINT


118 
	#SQLITE_DEFAULT_WAL_AUTOCHECKPOINT
 1000

	)

127 #i‚de‡
SQLITE_MAX_ATTACHED


128 
	#SQLITE_MAX_ATTACHED
 10

	)

135 #i‚de‡
SQLITE_MAX_VARIABLE_NUMBER


136 
	#SQLITE_MAX_VARIABLE_NUMBER
 999

	)

150 #ifde‡
SQLITE_MAX_PAGE_SIZE


151 #unde‡
SQLITE_MAX_PAGE_SIZE


153 
	#SQLITE_MAX_PAGE_SIZE
 65536

	)

159 #i‚de‡
SQLITE_DEFAULT_PAGE_SIZE


160 
	#SQLITE_DEFAULT_PAGE_SIZE
 4096

	)

162 #i‡
SQLITE_DEFAULT_PAGE_SIZE
>
SQLITE_MAX_PAGE_SIZE


163 #unde‡
SQLITE_DEFAULT_PAGE_SIZE


164 
	#SQLITE_DEFAULT_PAGE_SIZE
 
SQLITE_MAX_PAGE_SIZE


	)

174 #i‚de‡
SQLITE_MAX_DEFAULT_PAGE_SIZE


175 
	#SQLITE_MAX_DEFAULT_PAGE_SIZE
 8192

	)

177 #i‡
SQLITE_MAX_DEFAULT_PAGE_SIZE
>
SQLITE_MAX_PAGE_SIZE


178 #unde‡
SQLITE_MAX_DEFAULT_PAGE_SIZE


179 
	#SQLITE_MAX_DEFAULT_PAGE_SIZE
 
SQLITE_MAX_PAGE_SIZE


	)

190 #i‚de‡
SQLITE_MAX_PAGE_COUNT


191 
	#SQLITE_MAX_PAGE_COUNT
 1073741823

	)

198 #i‚de‡
SQLITE_MAX_LIKE_PATTERN_LENGTH


199 
	#SQLITE_MAX_LIKE_PATTERN_LENGTH
 50000

	)

209 #i‚de‡
SQLITE_MAX_TRIGGER_DEPTH


210 
	#SQLITE_MAX_TRIGGER_DEPTH
 1000

	)

	@status.c

16 
	~"sqlôeI¡.h
"

17 
	~"vdbeI¡.h
"

22 #i‡
SQLITE_PTRSIZE
>4

23 
sqlôe3_öt64
 
	tsqlôe3SètVÆueTy≥
;

25 
u32
 
	tsqlôe3SètVÆueTy≥
;

27 
sqlôe3SètTy≥
 
	tsqlôe3SètTy≥
;

28 
SQLITE_WSD
 
	ssqlôe3SètTy≥
 {

29 
sqlôe3SètVÆueTy≥
 
	mnowVÆue
[10];

30 
sqlôe3SètVÆueTy≥
 
	mmxVÆue
[10];

31 } 
	gsqlôe3Sèt
 = { {0,}, {0,} };

37 c⁄° 
	g°©Muãx
[] = {

57 #ifde‡
SQLITE_OMIT_WSD


58 
	#wsdSètInô
 
sqlôe3SètTy≥
 *
x
 = &
	`GLOBAL
(sqlôe3SètTy≥,
sqlôe3Sèt
)

	)

59 
	#wsdSèt
 
x
[0]

	)

61 
	#wsdSètInô


	)

62 
	#wsdSèt
 
sqlôe3Sèt


	)

69 
sqlôe3_öt64
 
	$sqlôe3SètusVÆue
(
›
){

70 
wsdSètInô
;

71 
	`as£π
–
›
>=0 && op<
	`AºaySize
(
wsdSèt
.
nowVÆue
) );

72 
	`as£π
–
›
>=0 && op<
	`AºaySize
(
°©Muãx
) );

73 
	`as£π
–
	`sqlôe3_muãx_hñd
(
°©Muãx
[
›
] ? 
	`sqlôe3Pˇche1Muãx
()

74 : 
	`sqlôe3MÆlocMuãx
()) );

75  
wsdSèt
.
nowVÆue
[
›
];

76 
	}
}

89 
	$sqlôe3SètusUp
(
›
, 
N
){

90 
wsdSètInô
;

91 
	`as£π
–
›
>=0 && op<
	`AºaySize
(
wsdSèt
.
nowVÆue
) );

92 
	`as£π
–
›
>=0 && op<
	`AºaySize
(
°©Muãx
) );

93 
	`as£π
–
	`sqlôe3_muãx_hñd
(
°©Muãx
[
›
] ? 
	`sqlôe3Pˇche1Muãx
()

94 : 
	`sqlôe3MÆlocMuãx
()) );

95 
wsdSèt
.
nowVÆue
[
›
] +
N
;

96 if–
wsdSèt
.
nowVÆue
[
›
]>wsdSèt.
mxVÆue
[op] ){

97 
wsdSèt
.
mxVÆue
[
›
] = wsdSèt.
nowVÆue
[op];

99 
	}
}

100 
	$sqlôe3SètusDown
(
›
, 
N
){

101 
wsdSètInô
;

102 
	`as£π
–
N
>=0 );

103 
	`as£π
–
›
>=0 && op<
	`AºaySize
(
°©Muãx
) );

104 
	`as£π
–
	`sqlôe3_muãx_hñd
(
°©Muãx
[
›
] ? 
	`sqlôe3Pˇche1Muãx
()

105 : 
	`sqlôe3MÆlocMuãx
()) );

106 
	`as£π
–
›
>=0 && op<
	`AºaySize
(
wsdSèt
.
nowVÆue
) );

107 
wsdSèt
.
nowVÆue
[
›
] -
N
;

108 
	}
}

114 
	$sqlôe3SètusHighw©î
(
›
, 
X
){

115 
sqlôe3SètVÆueTy≥
 
√wVÆue
;

116 
wsdSètInô
;

117 
	`as£π
–
X
>=0 );

118 
√wVÆue
 = (
sqlôe3SètVÆueTy≥
)
X
;

119 
	`as£π
–
›
>=0 && op<
	`AºaySize
(
wsdSèt
.
nowVÆue
) );

120 
	`as£π
–
›
>=0 && op<
	`AºaySize
(
°©Muãx
) );

121 
	`as£π
–
	`sqlôe3_muãx_hñd
(
°©Muãx
[
›
] ? 
	`sqlôe3Pˇche1Muãx
()

122 : 
	`sqlôe3MÆlocMuãx
()) );

123 
	`as£π
–
›
==
SQLITE_STATUS_MALLOC_SIZE


124 || 
›
==
SQLITE_STATUS_PAGECACHE_SIZE


125 || 
›
==
SQLITE_STATUS_SCRATCH_SIZE


126 || 
›
==
SQLITE_STATUS_PARSER_STACK
 );

127 if–
√wVÆue
>
wsdSèt
.
mxVÆue
[
›
] ){

128 
wsdSèt
.
mxVÆue
[
›
] = 
√wVÆue
;

130 
	}
}

135 
	$sqlôe3_°©us64
(

136 
›
,

137 
sqlôe3_öt64
 *
pCuºít
,

138 
sqlôe3_öt64
 *
pHighw©î
,

139 
ª£tFœg


141 
sqlôe3_muãx
 *
pMuãx
;

142 
wsdSètInô
;

143 if–
›
<0 || op>=
	`AºaySize
(
wsdSèt
.
nowVÆue
) ){

144  
SQLITE_MISUSE_BKPT
;

146 #ifde‡
SQLITE_ENABLE_API_ARMOR


147 if–
pCuºít
==0 || 
pHighw©î
==0 )  
SQLITE_MISUSE_BKPT
;

149 
pMuãx
 = 
°©Muãx
[
›
] ? 
	`sqlôe3Pˇche1Muãx
(Ë: 
	`sqlôe3MÆlocMuãx
();

150 
	`sqlôe3_muãx_íãr
(
pMuãx
);

151 *
pCuºít
 = 
wsdSèt
.
nowVÆue
[
›
];

152 *
pHighw©î
 = 
wsdSèt
.
mxVÆue
[
›
];

153 if–
ª£tFœg
 ){

154 
wsdSèt
.
mxVÆue
[
›
] = wsdSèt.
nowVÆue
[op];

156 
	`sqlôe3_muãx_Àave
(
pMuãx
);

157 ()
pMuãx
;

158  
SQLITE_OK
;

159 
	}
}

160 
	$sqlôe3_°©us
(
›
, *
pCuºít
, *
pHighw©î
, 
ª£tFœg
){

161 
sqlôe3_öt64
 
iCur
 = 0, 
iHwå
 = 0;

162 
rc
;

163 #ifde‡
SQLITE_ENABLE_API_ARMOR


164 if–
pCuºít
==0 || 
pHighw©î
==0 )  
SQLITE_MISUSE_BKPT
;

166 
rc
 = 
	`sqlôe3_°©us64
(
›
, &
iCur
, &
iHwå
, 
ª£tFœg
);

167 if–
rc
==0 ){

168 *
pCuºít
 = ()
iCur
;

169 *
pHighw©î
 = ()
iHwå
;

171  
rc
;

172 
	}
}

177 
	$sqlôe3_db_°©us
(

178 
sqlôe3
 *
db
,

179 
›
,

180 *
pCuºít
,

181 *
pHighw©î
,

182 
ª£tFœg


184 
rc
 = 
SQLITE_OK
;

185 #ifde‡
SQLITE_ENABLE_API_ARMOR


186 if–!
	`sqlôe3Sa„tyCheckOk
(
db
Ë|| 
pCuºít
==0|| 
pHighw©î
==0 ){

187  
SQLITE_MISUSE_BKPT
;

190 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

191  
›
 ){

192 
SQLITE_DBSTATUS_LOOKASIDE_USED
: {

193 *
pCuºít
 = 
db
->
lookaside
.
nOut
;

194 *
pHighw©î
 = 
db
->
lookaside
.
mxOut
;

195 if–
ª£tFœg
 ){

196 
db
->
lookaside
.
mxOut
 = db->lookaside.
nOut
;

201 
SQLITE_DBSTATUS_LOOKASIDE_HIT
:

202 
SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE
:

203 
SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL
: {

204 
	`ã°ˇ£
–
›
==
SQLITE_DBSTATUS_LOOKASIDE_HIT
 );

205 
	`ã°ˇ£
–
›
==
SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE
 );

206 
	`ã°ˇ£
–
›
==
SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL
 );

207 
	`as£π
–(
›
-
SQLITE_DBSTATUS_LOOKASIDE_HIT
)>=0 );

208 
	`as£π
–(
›
-
SQLITE_DBSTATUS_LOOKASIDE_HIT
)<3 );

209 *
pCuºít
 = 0;

210 *
pHighw©î
 = 
db
->
lookaside
.
™Sèt
[
›
 - 
SQLITE_DBSTATUS_LOOKASIDE_HIT
];

211 if–
ª£tFœg
 ){

212 
db
->
lookaside
.
™Sèt
[
›
 - 
SQLITE_DBSTATUS_LOOKASIDE_HIT
] = 0;

222 
SQLITE_DBSTATUS_CACHE_USED_SHARED
:

223 
SQLITE_DBSTATUS_CACHE_USED
: {

224 
tŸÆU£d
 = 0;

225 
i
;

226 
	`sqlôe3BåìE¡îAŒ
(
db
);

227 
i
=0; i<
db
->
nDb
; i++){

228 
Båì
 *
pBt
 = 
db
->
aDb
[
i
].pBt;

229 if–
pBt
 ){

230 
Pagî
 *
pPagî
 = 
	`sqlôe3BåìPagî
(
pBt
);

231 
nByã
 = 
	`sqlôe3PagîMemU£d
(
pPagî
);

232 if–
›
==
SQLITE_DBSTATUS_CACHE_USED_SHARED
 ){

233 
nByã
 =ÇByã / 
	`sqlôe3BåìC⁄√˘i⁄Cou¡
(
pBt
);

235 
tŸÆU£d
 +
nByã
;

238 
	`sqlôe3BåìLóveAŒ
(
db
);

239 *
pCuºít
 = 
tŸÆU£d
;

240 *
pHighw©î
 = 0;

249 
SQLITE_DBSTATUS_SCHEMA_USED
: {

250 
i
;

251 
nByã
 = 0;

253 
	`sqlôe3BåìE¡îAŒ
(
db
);

254 
db
->
≤ByãsFªed
 = &
nByã
;

255 
i
=0; i<
db
->
nDb
; i++){

256 
Schema
 *
pSchema
 = 
db
->
aDb
[
i
].pSchema;

257 if–
	`ALWAYS
(
pSchema
!=0) ){

258 
HashEÀm
 *
p
;

260 
nByã
 +
sqlôe3GlobÆC⁄fig
.
m
.
	`xRoundup
((
HashEÀm
)) * (

261 
pSchema
->
tblHash
.
cou¡


262 + 
pSchema
->
åigHash
.
cou¡


263 + 
pSchema
->
idxHash
.
cou¡


264 + 
pSchema
->
fkeyHash
.
cou¡


266 
nByã
 +
	`sqlôe3_msize
(
pSchema
->
tblHash
.
ht
);

267 
nByã
 +
	`sqlôe3_msize
(
pSchema
->
åigHash
.
ht
);

268 
nByã
 +
	`sqlôe3_msize
(
pSchema
->
idxHash
.
ht
);

269 
nByã
 +
	`sqlôe3_msize
(
pSchema
->
fkeyHash
.
ht
);

271 
p
=
	`sqlôeHashFú°
(&
pSchema
->
åigHash
);Ö;Ö=
	`sqlôeHashNext
(p)){

272 
	`sqlôe3DñëeTriggî
(
db
, (
Triggî
*)
	`sqlôeHashD©a
(
p
));

274 
p
=
	`sqlôeHashFú°
(&
pSchema
->
tblHash
);Ö;Ö=
	`sqlôeHashNext
(p)){

275 
	`sqlôe3DñëeTabÀ
(
db
, (
TabÀ
 *)
	`sqlôeHashD©a
(
p
));

279 
db
->
≤ByãsFªed
 = 0;

280 
	`sqlôe3BåìLóveAŒ
(
db
);

282 *
pHighw©î
 = 0;

283 *
pCuºít
 = 
nByã
;

292 
SQLITE_DBSTATUS_STMT_USED
: {

293 
Vdbe
 *
pVdbe
;

294 
nByã
 = 0;

296 
db
->
≤ByãsFªed
 = &
nByã
;

297 
pVdbe
=
db
->pVdbe;ÖVdbe;ÖVdbeıVdbe->
pNext
){

298 
	`sqlôe3VdbeCÀ¨Obje˘
(
db
, 
pVdbe
);

299 
	`sqlôe3DbFªe
(
db
, 
pVdbe
);

301 
db
->
≤ByãsFªed
 = 0;

303 *
pHighw©î
 = 0;

304 *
pCuºít
 = 
nByã
;

314 
SQLITE_DBSTATUS_CACHE_HIT
:

315 
SQLITE_DBSTATUS_CACHE_MISS
:

316 
SQLITE_DBSTATUS_CACHE_WRITE
:{

317 
i
;

318 
nRë
 = 0;

319 
	`as£π
–
SQLITE_DBSTATUS_CACHE_MISS
==
SQLITE_DBSTATUS_CACHE_HIT
+1 );

320 
	`as£π
–
SQLITE_DBSTATUS_CACHE_WRITE
==
SQLITE_DBSTATUS_CACHE_HIT
+2 );

322 
i
=0; i<
db
->
nDb
; i++){

323 if–
db
->
aDb
[
i
].
pBt
 ){

324 
Pagî
 *
pPagî
 = 
	`sqlôe3BåìPagî
(
db
->
aDb
[
i
].
pBt
);

325 
	`sqlôe3PagîCacheSèt
(
pPagî
, 
›
, 
ª£tFœg
, &
nRë
);

328 *
pHighw©î
 = 0;

331 *
pCuºít
 = 
nRë
;

339 
SQLITE_DBSTATUS_DEFERRED_FKS
: {

340 *
pHighw©î
 = 0;

341 *
pCuºít
 = 
db
->
nDe„ºedImmC⁄s
>0 || db->
nDe„ºedC⁄s
>0;

346 
rc
 = 
SQLITE_ERROR
;

349 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

350  
rc
;

351 
	}
}

	@table.c

19 
	~"sqlôeI¡.h
"

20 
	~<°dlib.h
>

21 
	~<°rög.h
>

23 #i‚de‡
SQLITE_OMIT_GET_TABLE


29 
	sTabResu…
 {

30 **
	mazResu…
;

31 *
	mzEºMsg
;

32 
u32
 
	mnAŒoc
;

33 
u32
 
	mnRow
;

34 
u32
 
	mnCﬁumn
;

35 
u32
 
	mnD©a
;

36 
	mrc
;

37 } 
	tTabResu…
;

44 
	$sqlôe3_gë_èbÀ_cb
(*
pArg
, 
nCﬁ
, **
¨gv
, **
cﬁv
){

45 
TabResu…
 *
p
 = (TabResu…*)
pArg
;

46 
√ed
;

47 
i
;

48 *
z
;

53 if–
p
->
nRow
==0 && 
¨gv
!=0 ){

54 
√ed
 = 
nCﬁ
*2;

56 
√ed
 = 
nCﬁ
;

58 if–
p
->
nD©a
 + 
√ed
 >Ö->
nAŒoc
 ){

59 **
azNew
;

60 
p
->
nAŒoc
 =Ö->nAŒoc*2 + 
√ed
;

61 
azNew
 = 
	`sqlôe3_ªÆloc64
–
p
->
azResu…
, (*)*p->
nAŒoc
 );

62 if–
azNew
==0 ) 
mÆloc_Áûed
;

63 
p
->
azResu…
 = 
azNew
;

69 if–
p
->
nRow
==0 ){

70 
p
->
nCﬁumn
 = 
nCﬁ
;

71 
i
=0; i<
nCﬁ
; i++){

72 
z
 = 
	`sqlôe3_m¥ötf
("%s", 
cﬁv
[
i
]);

73 if–
z
==0 ) 
mÆloc_Áûed
;

74 
p
->
azResu…
[p->
nD©a
++] = 
z
;

76 }if–()
p
->
nCﬁumn
!=
nCﬁ
 ){

77 
	`sqlôe3_‰ì
(
p
->
zEºMsg
);

78 
p
->
zEºMsg
 = 
	`sqlôe3_m¥ötf
(

81 
p
->
rc
 = 
SQLITE_ERROR
;

87 if–
¨gv
!=0 ){

88 
i
=0; i<
nCﬁ
; i++){

89 if–
¨gv
[
i
]==0 ){

90 
z
 = 0;

92 
n
 = 
	`sqlôe3SåÀn30
(
¨gv
[
i
])+1;

93 
z
 = 
	`sqlôe3_mÆloc64
–
n
 );

94 if–
z
==0 ) 
mÆloc_Áûed
;

95 
	`mem˝y
(
z
, 
¨gv
[
i
], 
n
);

97 
p
->
azResu…
[p->
nD©a
++] = 
z
;

99 
p
->
nRow
++;

103 
mÆloc_Áûed
:

104 
p
->
rc
 = 
SQLITE_NOMEM_BKPT
;

106 
	}
}

118 
	$sqlôe3_gë_èbÀ
(

119 
sqlôe3
 *
db
,

120 c⁄° *
zSql
,

121 ***
∑zResu…
,

122 *
≤Row
,

123 *
≤Cﬁumn
,

124 **
pzEºMsg


126 
rc
;

127 
TabResu…
 
ªs
;

129 #ifde‡
SQLITE_ENABLE_API_ARMOR


130 if–!
	`sqlôe3Sa„tyCheckOk
(
db
Ë|| 
∑zResu…
==0 )  
SQLITE_MISUSE_BKPT
;

132 *
∑zResu…
 = 0;

133 if–
≤Cﬁumn
 ) *pnColumn = 0;

134 if–
≤Row
 ) *pnRow = 0;

135 if–
pzEºMsg
 ) *pzErrMsg = 0;

136 
ªs
.
zEºMsg
 = 0;

137 
ªs
.
nRow
 = 0;

138 
ªs
.
nCﬁumn
 = 0;

139 
ªs
.
nD©a
 = 1;

140 
ªs
.
nAŒoc
 = 20;

141 
ªs
.
rc
 = 
SQLITE_OK
;

142 
ªs
.
azResu…
 = 
	`sqlôe3_mÆloc64
((*)*ªs.
nAŒoc
 );

143 if–
ªs
.
azResu…
==0 ){

144 
db
->
îrCode
 = 
SQLITE_NOMEM
;

145  
SQLITE_NOMEM_BKPT
;

147 
ªs
.
azResu…
[0] = 0;

148 
rc
 = 
	`sqlôe3_exec
(
db
, 
zSql
, 
sqlôe3_gë_èbÀ_cb
, &
ªs
, 
pzEºMsg
);

149 
	`as£π
–(
ªs
.
azResu…
[0])>‘es.
nD©a
) );

150 
ªs
.
azResu…
[0] = 
	`SQLITE_INT_TO_PTR
‘es.
nD©a
);

151 if–(
rc
&0xff)==
SQLITE_ABORT
 ){

152 
	`sqlôe3_‰ì_èbÀ
(&
ªs
.
azResu…
[1]);

153 if–
ªs
.
zEºMsg
 ){

154 if–
pzEºMsg
 ){

155 
	`sqlôe3_‰ì
(*
pzEºMsg
);

156 *
pzEºMsg
 = 
	`sqlôe3_m¥ötf
("%s",
ªs
.
zEºMsg
);

158 
	`sqlôe3_‰ì
(
ªs
.
zEºMsg
);

160 
db
->
îrCode
 = 
ªs
.
rc
;

161  
ªs
.
rc
;

163 
	`sqlôe3_‰ì
(
ªs
.
zEºMsg
);

164 if–
rc
!=
SQLITE_OK
 ){

165 
	`sqlôe3_‰ì_èbÀ
(&
ªs
.
azResu…
[1]);

166  
rc
;

168 if–
ªs
.
nAŒoc
>ªs.
nD©a
 ){

169 **
azNew
;

170 
azNew
 = 
	`sqlôe3_ªÆloc64
–
ªs
.
azResu…
, (*)*ªs.
nD©a
 );

171 if–
azNew
==0 ){

172 
	`sqlôe3_‰ì_èbÀ
(&
ªs
.
azResu…
[1]);

173 
db
->
îrCode
 = 
SQLITE_NOMEM
;

174  
SQLITE_NOMEM_BKPT
;

176 
ªs
.
azResu…
 = 
azNew
;

178 *
∑zResu…
 = &
ªs
.
azResu…
[1];

179 if–
≤Cﬁumn
 ) *≤Cﬁum¿
ªs
.
nCﬁumn
;

180 if–
≤Row
 ) *≤Row = 
ªs
.
nRow
;

181  
rc
;

182 
	}
}

187 
	$sqlôe3_‰ì_èbÀ
(

188 **
azResu…


190 if–
azResu…
 ){

191 
i
, 
n
;

192 
azResu…
--;

193 
	`as£π
–
azResu…
!=0 );

194 
n
 = 
	`SQLITE_PTR_TO_INT
(
azResu…
[0]);

195 
i
=1; i<
n
; i++){ if–
azResu…
[i] ) 
	`sqlôe3_‰ì
(azResult[i]); }

196 
	`sqlôe3_‰ì
(
azResu…
);

198 
	}
}

	@tclsqlite.c

32 #i‡
deföed
(
INCLUDE_MSVC_H
)

33 
	~"msvc.h
"

36 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

37 
	~"sqlôe_t˛.h
"

39 
	~"t˛.h
"

40 #i‚de‡
SQLITE_TCLAPI


41 
	#SQLITE_TCLAPI


	)

44 
	~<î∫o.h
>

50 #i‚de‡
SQLITE_AMALGAMATION


51 
	~"sqlôe3.h
"

52 
	~<°dlib.h
>

53 
	~<°rög.h
>

54 
	~<as£π.h
>

55 
	tu8
;

57 
	~<˘y≥.h
>

60 #i‡!
deföed
(
_WIN32
)

61 
	~<uni°d.h
>

62 
	#GETPID
 
gëpid


	)

63 #ñi‡!
deföed
(
_WIN32_WCE
)

64 #i‚de‡
SQLITE_AMALGAMATION


65 
	#WIN32_LEAN_AND_MEAN


	)

66 
	~<wödows.h
>

68 
	#GETPID
 ()
GëCuºítPro˚ssId


	)

75 #ifde‡
BUILD_sqlôe


76 #unde‡
TCL_STORAGE_CLASS


77 
	#TCL_STORAGE_CLASS
 
DLLEXPORT


	)

80 
	#NUM_PREPARED_STMTS
 10

	)

81 
	#MAX_PREPARED_STMTS
 100

	)

84 
SqlôeDb
 
	tSqlôeDb
;

90 
SqlFunc
 
	tSqlFunc
;

91 
	sSqlFunc
 {

92 
T˛_I¡îp
 *
	möãΩ
;

93 
T˛_Obj
 *
	mpS¸ùt
;

94 
SqlôeDb
 *
	mpDb
;

95 
	mu£EvÆObjv
;

96 *
	mzName
;

97 
SqlFunc
 *
	mpNext
;

104 
SqlCﬁœã
 
	tSqlCﬁœã
;

105 
	sSqlCﬁœã
 {

106 
T˛_I¡îp
 *
	möãΩ
;

107 *
	mzS¸ùt
;

108 
SqlCﬁœã
 *
	mpNext
;

115 
SqlPª∑ªdStmt
 
	tSqlPª∑ªdStmt
;

116 
	sSqlPª∑ªdStmt
 {

117 
SqlPª∑ªdStmt
 *
	mpNext
;

118 
SqlPª∑ªdStmt
 *
	mpPªv
;

119 
sqlôe3_°mt
 *
	mpStmt
;

120 
	mnSql
;

121 c⁄° *
	mzSql
;

122 
	mnP¨m
;

123 
T˛_Obj
 **
	m≠P¨m
;

126 
In¸blobCh™√l
 
	tIn¸blobCh™√l
;

137 
	sSqlôeDb
 {

138 
sqlôe3
 *
	mdb
;

139 
T˛_I¡îp
 *
	möãΩ
;

140 *
	mzBusy
;

141 *
	mzCommô
;

142 *
	mzTø˚
;

143 *
	mzTø˚V2
;

144 *
	mzProfûe
;

145 *
	mzProgªss
;

146 *
	mzAuth
;

147 
	mdißbÀAuth
;

148 *
	mzNuŒ
;

149 
SqlFunc
 *
	mpFunc
;

150 
T˛_Obj
 *
	mpUpd©eHook
;

151 
T˛_Obj
 *
	mpPªUpd©eHook
;

152 
T˛_Obj
 *
	mpRﬁlbackHook
;

153 
T˛_Obj
 *
	mpWÆHook
;

154 
T˛_Obj
 *
	mpU∆ockNŸify
;

155 
SqlCﬁœã
 *
	mpCﬁœã
;

156 
	mrc
;

157 
T˛_Obj
 *
	mpCﬁœãNìded
;

158 
SqlPª∑ªdStmt
 *
	m°mtLi°
;

159 
SqlPª∑ªdStmt
 *
	m°mtLa°
;

160 
	mmaxStmt
;

161 
	mnStmt
;

162 
In¸blobCh™√l
 *
	mpIn¸blob
;

163 
	mnSãp
, 
	mnS‹t
, 
	mnIndex
;

164 
	mnTønß˘i⁄
;

165 
	m›íFœgs
;

166 #ifde‡
SQLITE_TEST


167 
	mbLegacyPª∑ª
;

171 
	sIn¸blobCh™√l
 {

172 
sqlôe3_blob
 *
	mpBlob
;

173 
SqlôeDb
 *
	mpDb
;

174 
	miSìk
;

175 
T˛_Ch™√l
 
	mch™√l
;

176 
In¸blobCh™√l
 *
	mpNext
;

177 
In¸blobCh™√l
 *
	mpPªv
;

184 
	$°æí30
(c⁄° *
z
){

185 c⁄° *
z2
 = 
z
;

186  *
z2
 ){ z2++; }

187  0x3ffffff‡& ()(
z2
 - 
z
);

188 
	}
}

191 #i‚de‡
SQLITE_OMIT_INCRBLOB


196 
	$˛o£In¸blobCh™√ls
(
SqlôeDb
 *
pDb
){

197 
In¸blobCh™√l
 *
p
;

198 
In¸blobCh™√l
 *
pNext
;

200 
p
=
pDb
->
pIn¸blob
;Ö;Ö=
pNext
){

201 
pNext
 = 
p
->pNext;

207 
	`T˛_Uƒegi°îCh™√l
(
pDb
->
öãΩ
, 
p
->
ch™√l
);

209 
	}
}

214 
SQLITE_TCLAPI
 
	$ö¸blobClo£
(

215 
Clõ¡D©a
 
ö°™˚D©a
,

216 
T˛_I¡îp
 *
öãΩ


218 
In¸blobCh™√l
 *
p
 = (In¸blobCh™√»*)
ö°™˚D©a
;

219 
rc
 = 
	`sqlôe3_blob_˛o£
(
p
->
pBlob
);

220 
sqlôe3
 *
db
 = 
p
->
pDb
->db;

223 if–
p
->
pNext
 ){

224 
p
->
pNext
->
pPªv
 =Ö->pPrev;

226 if–
p
->
pPªv
 ){

227 
p
->
pPªv
->
pNext
 =Ö->pNext;

229 if–
p
->
pDb
->
pIn¸blob
==p ){

230 
p
->
pDb
->
pIn¸blob
 =Ö->
pNext
;

234 
	`T˛_Fªe
((*)
p
);

236 if–
rc
!=
SQLITE_OK
 ){

237 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3_îrmsg
(
db
), 
TCL_VOLATILE
);

238  
TCL_ERROR
;

240  
TCL_OK
;

241 
	}
}

246 
SQLITE_TCLAPI
 
	$ö¸blobI≈ut
(

247 
Clõ¡D©a
 
ö°™˚D©a
,

248 *
buf
,

249 
bufSize
,

250 *
îr‹CodePå


252 
In¸blobCh™√l
 *
p
 = (In¸blobCh™√»*)
ö°™˚D©a
;

253 
nRód
 = 
bufSize
;

254 
nBlob
;

255 
rc
;

257 
nBlob
 = 
	`sqlôe3_blob_byãs
(
p
->
pBlob
);

258 if–(
p
->
iSìk
+
nRód
)>
nBlob
 ){

259 
nRód
 = 
nBlob
-
p
->
iSìk
;

261 if–
nRód
<=0 ){

265 
rc
 = 
	`sqlôe3_blob_ªad
(
p
->
pBlob
, (*)
buf
, 
nRód
,Ö->
iSìk
);

266 if–
rc
!=
SQLITE_OK
 ){

267 *
îr‹CodePå
 = 
rc
;

271 
p
->
iSìk
 +
nRód
;

272  
nRód
;

273 
	}
}

278 
SQLITE_TCLAPI
 
	$ö¸blobOuçut
(

279 
Clõ¡D©a
 
ö°™˚D©a
,

280 
CONST
 *
buf
,

281 
toWrôe
,

282 *
îr‹CodePå


284 
In¸blobCh™√l
 *
p
 = (In¸blobCh™√»*)
ö°™˚D©a
;

285 
nWrôe
 = 
toWrôe
;

286 
nBlob
;

287 
rc
;

289 
nBlob
 = 
	`sqlôe3_blob_byãs
(
p
->
pBlob
);

290 if–(
p
->
iSìk
+
nWrôe
)>
nBlob
 ){

291 *
îr‹CodePå
 = 
EINVAL
;

294 if–
nWrôe
<=0 ){

298 
rc
 = 
	`sqlôe3_blob_wrôe
(
p
->
pBlob
, (*)
buf
, 
nWrôe
,Ö->
iSìk
);

299 if–
rc
!=
SQLITE_OK
 ){

300 *
îr‹CodePå
 = 
EIO
;

304 
p
->
iSìk
 +
nWrôe
;

305  
nWrôe
;

306 
	}
}

311 
SQLITE_TCLAPI
 
	$ö¸blobSìk
(

312 
Clõ¡D©a
 
ö°™˚D©a
,

313 
off£t
,

314 
£ekMode
,

315 *
îr‹CodePå


317 
In¸blobCh™√l
 *
p
 = (In¸blobCh™√»*)
ö°™˚D©a
;

319  
£ekMode
 ){

320 
SEEK_SET
:

321 
p
->
iSìk
 = 
off£t
;

323 
SEEK_CUR
:

324 
p
->
iSìk
 +
off£t
;

326 
SEEK_END
:

327 
p
->
iSìk
 = 
	`sqlôe3_blob_byãs
’->
pBlob
Ë+ 
off£t
;

330 : 
	`as£π
(!"Bad seekMode");

333  
p
->
iSìk
;

334 
	}
}

337 
SQLITE_TCLAPI
 
	$ö¸blobW©ch
(

338 
Clõ¡D©a
 
ö°™˚D©a
,

339 
mode


342 
	}
}

343 
SQLITE_TCLAPI
 
	$ö¸blobH™dÀ
(

344 
Clõ¡D©a
 
ö°™˚D©a
,

345 
dú
,

346 
Clõ¡D©a
 *
hPå


348  
TCL_ERROR
;

349 
	}
}

351 
T˛_Ch™√lTy≥
 
	gIn¸blobCh™√lTy≥
 = {

353 
TCL_CHANNEL_VERSION_2
,

354 
ö¸blobClo£
,

355 
ö¸blobI≈ut
,

356 
ö¸blobOuçut
,

357 
ö¸blobSìk
,

360 
ö¸blobW©ch
,

361 
ö¸blobH™dÀ
,

372 
	$¸óãIn¸blobCh™√l
(

373 
T˛_I¡îp
 *
öãΩ
,

374 
SqlôeDb
 *
pDb
,

375 c⁄° *
zDb
,

376 c⁄° *
zTabÀ
,

377 c⁄° *
zCﬁumn
,

378 
sqlôe_öt64
 
iRow
,

379 
isRód⁄ly


381 
In¸blobCh™√l
 *
p
;

382 
sqlôe3
 *
db
 = 
pDb
->db;

383 
sqlôe3_blob
 *
pBlob
;

384 
rc
;

385 
Êags
 = 
TCL_READABLE
|(
isRód⁄ly
 ? 0 : 
TCL_WRITABLE
);

388 
cou¡
 = 0;

389 
zCh™√l
[64];

391 
rc
 = 
	`sqlôe3_blob_›í
(
db
, 
zDb
, 
zTabÀ
, 
zCﬁumn
, 
iRow
, !
isRód⁄ly
, &
pBlob
);

392 if–
rc
!=
SQLITE_OK
 ){

393 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3_îrmsg
(
pDb
->
db
), 
TCL_VOLATILE
);

394  
TCL_ERROR
;

397 
p
 = (
In¸blobCh™√l
 *)
	`T˛_AŒoc
((IncrblobChannel));

398 
p
->
iSìk
 = 0;

399 
p
->
pBlob
 =ÖBlob;

401 
	`sqlôe3_¢¥ötf
((
zCh™√l
), zCh™√l, "ö¸blob_%d", ++
cou¡
);

402 
p
->
ch™√l
 = 
	`T˛_Cª©eCh™√l
(&
In¸blobCh™√lTy≥
, 
zCh™√l
,Ö, 
Êags
);

403 
	`T˛_Regi°îCh™√l
(
öãΩ
, 
p
->
ch™√l
);

406 
p
->
pNext
 = 
pDb
->
pIn¸blob
;

407 
p
->
pPªv
 = 0;

408 if–
p
->
pNext
 ){

409 
p
->
pNext
->
pPªv
 =Ö;

411 
pDb
->
pIn¸blob
 = 
p
;

412 
p
->
pDb
 =ÖDb;

414 
	`T˛_SëResu…
(
öãΩ
, (*)
	`T˛_GëCh™√lName
(
p
->
ch™√l
), 
TCL_VOLATILE
);

415  
TCL_OK
;

416 
	}
}

418 
	#˛o£In¸blobCh™√ls
(
pDb
)

	)

433 
	$ß„ToU£EvÆObjv
(
T˛_I¡îp
 *
öãΩ
, 
T˛_Obj
 *
pCmd
){

438 c⁄° *
z
;

439 
n
;

440 
z
 = 
	`T˛_GëSåögFromObj
(
pCmd
, &
n
);

441  
n
-- > 0 ){

442 
c
 = *(
z
++);

443 if–
c
=='$' || c=='[' || c==';' )  0;

446 
	}
}

453 
SqlFunc
 *
	$födSqlFunc
(
SqlôeDb
 *
pDb
, c⁄° *
zName
){

454 
SqlFunc
 *
p
, *
pNew
;

455 
nName
 = 
	`°æí30
(
zName
);

456 
pNew
 = (
SqlFunc
*)
	`T˛_AŒoc
–(*pNewË+ 
nName
 + 1 );

457 
pNew
->
zName
 = (*)&pNew[1];

458 
	`mem˝y
(
pNew
->
zName
, zName, 
nName
+1);

459 
p
=
pDb
->
pFunc
;Ö;Öı->
pNext
){

460 if–
	`sqlôe3_°ricmp
(
p
->
zName
, 
pNew
->zName)==0 ){

461 
	`T˛_Fªe
((*)
pNew
);

462  
p
;

465 
pNew
->
öãΩ
 = 
pDb
->interp;

466 
pNew
->
pDb
 =ÖDb;

467 
pNew
->
pS¸ùt
 = 0;

468 
pNew
->
pNext
 = 
pDb
->
pFunc
;

469 
pDb
->
pFunc
 = 
pNew
;

470  
pNew
;

471 
	}
}

476 
	$dbFªeStmt
(
SqlPª∑ªdStmt
 *
pStmt
){

477 #ifde‡
SQLITE_TEST


478 if–
	`sqlôe3_sql
(
pStmt
->pStmt)==0 ){

479 
	`T˛_Fªe
((*)
pStmt
->
zSql
);

482 
	`sqlôe3_föÆize
(
pStmt
->pStmt);

483 
	`T˛_Fªe
((*)
pStmt
);

484 
	}
}

489 
	$ÊushStmtCache
(
SqlôeDb
 *
pDb
){

490 
SqlPª∑ªdStmt
 *
pPªStmt
;

491 
SqlPª∑ªdStmt
 *
pNext
;

493 
pPªStmt
 = 
pDb
->
°mtLi°
;ÖPªStmt;ÖPªStmt=
pNext
){

494 
pNext
 = 
pPªStmt
->pNext;

495 
	`dbFªeStmt
(
pPªStmt
);

497 
pDb
->
nStmt
 = 0;

498 
pDb
->
°mtLa°
 = 0;

499 
pDb
->
°mtLi°
 = 0;

500 
	}
}

506 
SQLITE_TCLAPI
 
	$DbDñëeCmd
(*
db
){

507 
SqlôeDb
 *
pDb
 = (SqlôeDb*)
db
;

508 
	`ÊushStmtCache
(
pDb
);

509 
	`˛o£In¸blobCh™√ls
(
pDb
);

510 
	`sqlôe3_˛o£
(
pDb
->
db
);

511  
pDb
->
pFunc
 ){

512 
SqlFunc
 *
pFunc
 = 
pDb
->pFunc;

513 
pDb
->
pFunc
 =ÖFunc->
pNext
;

514 
	`as£π
–
pFunc
->
pDb
==pDb );

515 
	`T˛_De¸RefCou¡
(
pFunc
->
pS¸ùt
);

516 
	`T˛_Fªe
((*)
pFunc
);

518  
pDb
->
pCﬁœã
 ){

519 
SqlCﬁœã
 *
pCﬁœã
 = 
pDb
->pCollate;

520 
pDb
->
pCﬁœã
 =ÖCﬁœã->
pNext
;

521 
	`T˛_Fªe
((*)
pCﬁœã
);

523 if–
pDb
->
zBusy
 ){

524 
	`T˛_Fªe
(
pDb
->
zBusy
);

526 if–
pDb
->
zTø˚
 ){

527 
	`T˛_Fªe
(
pDb
->
zTø˚
);

529 if–
pDb
->
zTø˚V2
 ){

530 
	`T˛_Fªe
(
pDb
->
zTø˚V2
);

532 if–
pDb
->
zProfûe
 ){

533 
	`T˛_Fªe
(
pDb
->
zProfûe
);

535 if–
pDb
->
zAuth
 ){

536 
	`T˛_Fªe
(
pDb
->
zAuth
);

538 if–
pDb
->
zNuŒ
 ){

539 
	`T˛_Fªe
(
pDb
->
zNuŒ
);

541 if–
pDb
->
pUpd©eHook
 ){

542 
	`T˛_De¸RefCou¡
(
pDb
->
pUpd©eHook
);

544 if–
pDb
->
pPªUpd©eHook
 ){

545 
	`T˛_De¸RefCou¡
(
pDb
->
pPªUpd©eHook
);

547 if–
pDb
->
pRﬁlbackHook
 ){

548 
	`T˛_De¸RefCou¡
(
pDb
->
pRﬁlbackHook
);

550 if–
pDb
->
pWÆHook
 ){

551 
	`T˛_De¸RefCou¡
(
pDb
->
pWÆHook
);

553 if–
pDb
->
pCﬁœãNìded
 ){

554 
	`T˛_De¸RefCou¡
(
pDb
->
pCﬁœãNìded
);

556 
	`T˛_Fªe
((*)
pDb
);

557 
	}
}

563 
	$DbBusyH™dÀr
(*
cd
, 
nTrõs
){

564 
SqlôeDb
 *
pDb
 = (SqlôeDb*)
cd
;

565 
rc
;

566 
zVÆ
[30];

568 
	`sqlôe3_¢¥ötf
((
zVÆ
), zVÆ, "%d", 
nTrõs
);

569 
rc
 = 
	`T˛_V¨EvÆ
(
pDb
->
öãΩ
,ÖDb->
zBusy
, " ", 
zVÆ
, (*)0);

570 if–
rc
!=
TCL_OK
 || 
	`©oi
(
	`T˛_GëSåögResu…
(
pDb
->
öãΩ
)) ){

574 
	}
}

576 #i‚de‡
SQLITE_OMIT_PROGRESS_CALLBACK


580 
	$DbProgªssH™dÀr
(*
cd
){

581 
SqlôeDb
 *
pDb
 = (SqlôeDb*)
cd
;

582 
rc
;

584 
	`as£π
–
pDb
->
zProgªss
 );

585 
rc
 = 
	`T˛_EvÆ
(
pDb
->
öãΩ
,ÖDb->
zProgªss
);

586 if–
rc
!=
TCL_OK
 || 
	`©oi
(
	`T˛_GëSåögResu…
(
pDb
->
öãΩ
)) ){

590 
	}
}

593 #i‡!
deföed
(
SQLITE_OMIT_TRACE
Ë&& !deföed(
SQLITE_OMIT_FLOATING_POINT
) && \

594 !
	$deföed
(
SQLITE_OMIT_DEPRECATED
)

599 
	$DbTø˚H™dÀr
(*
cd
, c⁄° *
zSql
){

600 
SqlôeDb
 *
pDb
 = (SqlôeDb*)
cd
;

601 
T˛_DSåög
 
°r
;

603 
	`T˛_DSåögInô
(&
°r
);

604 
	`T˛_DSåögAµíd
(&
°r
, 
pDb
->
zTø˚
, -1);

605 
	`T˛_DSåögAµídEÀmít
(&
°r
, 
zSql
);

606 
	`T˛_EvÆ
(
pDb
->
öãΩ
, 
	`T˛_DSåögVÆue
(&
°r
));

607 
	`T˛_DSåögFªe
(&
°r
);

608 
	`T˛_Re£tResu…
(
pDb
->
öãΩ
);

609 
	}
}

612 #i‚de‡
SQLITE_OMIT_TRACE


619 
	$DbTø˚V2H™dÀr
(

620 
ty≥
,

621 *
cd
,

622 *
pd
,

623 *
xd


625 
SqlôeDb
 *
pDb
 = (SqlôeDb*)
cd
;

626 
T˛_Obj
 *
pCmd
;

628  
ty≥
 ){

629 
SQLITE_TRACE_STMT
: {

630 
sqlôe3_°mt
 *
pStmt
 = (sqlôe3_°mà*)
pd
;

631 *
zSql
 = (*)
xd
;

633 
pCmd
 = 
	`T˛_NewSåögObj
(
pDb
->
zTø˚V2
, -1);

634 
	`T˛_In¸RefCou¡
(
pCmd
);

635 
	`T˛_Li°ObjAµídEÀmít
(
pDb
->
öãΩ
, 
pCmd
,

636 
	`T˛_NewWideI¡Obj
((
T˛_WideI¡
)
pStmt
));

637 
	`T˛_Li°ObjAµídEÀmít
(
pDb
->
öãΩ
, 
pCmd
,

638 
	`T˛_NewSåögObj
(
zSql
, -1));

639 
	`T˛_EvÆObjEx
(
pDb
->
öãΩ
, 
pCmd
, 
TCL_EVAL_DIRECT
);

640 
	`T˛_De¸RefCou¡
(
pCmd
);

641 
	`T˛_Re£tResu…
(
pDb
->
öãΩ
);

644 
SQLITE_TRACE_PROFILE
: {

645 
sqlôe3_°mt
 *
pStmt
 = (sqlôe3_°mà*)
pd
;

646 
sqlôe3_öt64
 
ns
 = (sqlôe3_öt64)
xd
;

648 
pCmd
 = 
	`T˛_NewSåögObj
(
pDb
->
zTø˚V2
, -1);

649 
	`T˛_In¸RefCou¡
(
pCmd
);

650 
	`T˛_Li°ObjAµídEÀmít
(
pDb
->
öãΩ
, 
pCmd
,

651 
	`T˛_NewWideI¡Obj
((
T˛_WideI¡
)
pStmt
));

652 
	`T˛_Li°ObjAµídEÀmít
(
pDb
->
öãΩ
, 
pCmd
,

653 
	`T˛_NewWideI¡Obj
((
T˛_WideI¡
)
ns
));

654 
	`T˛_EvÆObjEx
(
pDb
->
öãΩ
, 
pCmd
, 
TCL_EVAL_DIRECT
);

655 
	`T˛_De¸RefCou¡
(
pCmd
);

656 
	`T˛_Re£tResu…
(
pDb
->
öãΩ
);

659 
SQLITE_TRACE_ROW
: {

660 
sqlôe3_°mt
 *
pStmt
 = (sqlôe3_°mà*)
pd
;

662 
pCmd
 = 
	`T˛_NewSåögObj
(
pDb
->
zTø˚V2
, -1);

663 
	`T˛_In¸RefCou¡
(
pCmd
);

664 
	`T˛_Li°ObjAµídEÀmít
(
pDb
->
öãΩ
, 
pCmd
,

665 
	`T˛_NewWideI¡Obj
((
T˛_WideI¡
)
pStmt
));

666 
	`T˛_EvÆObjEx
(
pDb
->
öãΩ
, 
pCmd
, 
TCL_EVAL_DIRECT
);

667 
	`T˛_De¸RefCou¡
(
pCmd
);

668 
	`T˛_Re£tResu…
(
pDb
->
öãΩ
);

671 
SQLITE_TRACE_CLOSE
: {

672 
sqlôe3
 *
db
 = (sqlôe3 *)
pd
;

674 
pCmd
 = 
	`T˛_NewSåögObj
(
pDb
->
zTø˚V2
, -1);

675 
	`T˛_In¸RefCou¡
(
pCmd
);

676 
	`T˛_Li°ObjAµídEÀmít
(
pDb
->
öãΩ
, 
pCmd
,

677 
	`T˛_NewWideI¡Obj
((
T˛_WideI¡
)
db
));

678 
	`T˛_EvÆObjEx
(
pDb
->
öãΩ
, 
pCmd
, 
TCL_EVAL_DIRECT
);

679 
	`T˛_De¸RefCou¡
(
pCmd
);

680 
	`T˛_Re£tResu…
(
pDb
->
öãΩ
);

684  
SQLITE_OK
;

685 
	}
}

688 #i‡!
deföed
(
SQLITE_OMIT_TRACE
Ë&& !deföed(
SQLITE_OMIT_FLOATING_POINT
) && \

689 !
	$deföed
(
SQLITE_OMIT_DEPRECATED
)

694 
	$DbProfûeH™dÀr
(*
cd
, c⁄° *
zSql
, 
sqlôe_uöt64
 
tm
){

695 
SqlôeDb
 *
pDb
 = (SqlôeDb*)
cd
;

696 
T˛_DSåög
 
°r
;

697 
zTm
[100];

699 
	`sqlôe3_¢¥ötf
((
zTm
)-1, zTm, "%Œd", 
tm
);

700 
	`T˛_DSåögInô
(&
°r
);

701 
	`T˛_DSåögAµíd
(&
°r
, 
pDb
->
zProfûe
, -1);

702 
	`T˛_DSåögAµídEÀmít
(&
°r
, 
zSql
);

703 
	`T˛_DSåögAµídEÀmít
(&
°r
, 
zTm
);

704 
	`T˛_EvÆ
(
pDb
->
öãΩ
, 
	`T˛_DSåögVÆue
(&
°r
));

705 
	`T˛_DSåögFªe
(&
°r
);

706 
	`T˛_Re£tResu…
(
pDb
->
öãΩ
);

707 
	}
}

716 
	$DbCommôH™dÀr
(*
cd
){

717 
SqlôeDb
 *
pDb
 = (SqlôeDb*)
cd
;

718 
rc
;

720 
rc
 = 
	`T˛_EvÆ
(
pDb
->
öãΩ
,ÖDb->
zCommô
);

721 if–
rc
!=
TCL_OK
 || 
	`©oi
(
	`T˛_GëSåögResu…
(
pDb
->
öãΩ
)) ){

725 
	}
}

727 
	$DbRﬁlbackH™dÀr
(*
˛õ¡D©a
){

728 
SqlôeDb
 *
pDb
 = (SqlôeDb*)
˛õ¡D©a
;

729 
	`as£π
(
pDb
->
pRﬁlbackHook
);

730 if–
TCL_OK
!=
	`T˛_EvÆObjEx
(
pDb
->
öãΩ
,ÖDb->
pRﬁlbackHook
, 0) ){

731 
	`T˛_BackgroundEº‹
(
pDb
->
öãΩ
);

733 
	}
}

738 
	$DbWÆH™dÀr
(

739 *
˛õ¡D©a
,

740 
sqlôe3
 *
db
,

741 c⁄° *
zDb
,

742 
nE¡ry


744 
ªt
 = 
SQLITE_OK
;

745 
T˛_Obj
 *
p
;

746 
SqlôeDb
 *
pDb
 = (SqlôeDb*)
˛õ¡D©a
;

747 
T˛_I¡îp
 *
öãΩ
 = 
pDb
->interp;

748 
	`as£π
(
pDb
->
pWÆHook
);

750 
	`as£π
–
db
==
pDb
->db );

751 
p
 = 
	`T˛_Du∂iˇãObj
(
pDb
->
pWÆHook
);

752 
	`T˛_In¸RefCou¡
(
p
);

753 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
p
, 
	`T˛_NewSåögObj
(
zDb
, -1));

754 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
p
, 
	`T˛_NewI¡Obj
(
nE¡ry
));

755 if–
TCL_OK
!=
	`T˛_EvÆObjEx
(
öãΩ
, 
p
, 0)

756 || 
TCL_OK
!=
	`T˛_GëI¡FromObj
(
öãΩ
, 
	`T˛_GëObjResu…
(öãΩ), &
ªt
)

758 
	`T˛_BackgroundEº‹
(
öãΩ
);

760 
	`T˛_De¸RefCou¡
(
p
);

762  
ªt
;

763 
	}
}

765 #i‡
deföed
(
SQLITE_TEST
Ë&& deföed(
SQLITE_ENABLE_UNLOCK_NOTIFY
)

766 
	$£tTe°U∆ockNŸifyV¨s
(
T˛_I¡îp
 *
öãΩ
, 
iArg
, 
nArg
){

767 
zBuf
[64];

768 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%d", 
iArg
);

769 
	`T˛_SëV¨
(
öãΩ
, "sqlôe_u∆ock_nŸify_¨g", 
zBuf
, 
TCL_GLOBAL_ONLY
);

770 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%d", 
nArg
);

771 
	`T˛_SëV¨
(
öãΩ
, "sqlôe_u∆ock_nŸify_¨gcou¡", 
zBuf
, 
TCL_GLOBAL_ONLY
);

772 
	}
}

774 
	#£tTe°U∆ockNŸifyV¨s
(
x
,
y
,
z
)

	)

777 #ifde‡
SQLITE_ENABLE_UNLOCK_NOTIFY


778 
	$DbU∆ockNŸify
(**
≠Arg
, 
nArg
){

779 
i
;

780 
i
=0; i<
nArg
; i++){

781 c⁄° 
Êags
 = (
TCL_EVAL_GLOBAL
|
TCL_EVAL_DIRECT
);

782 
SqlôeDb
 *
pDb
 = (SqlôeDb *)
≠Arg
[
i
];

783 
	`£tTe°U∆ockNŸifyV¨s
(
pDb
->
öãΩ
, 
i
, 
nArg
);

784 
	`as£π
–
pDb
->
pU∆ockNŸify
);

785 
	`T˛_EvÆObjEx
(
pDb
->
öãΩ
,ÖDb->
pU∆ockNŸify
, 
Êags
);

786 
	`T˛_De¸RefCou¡
(
pDb
->
pU∆ockNŸify
);

787 
pDb
->
pU∆ockNŸify
 = 0;

789 
	}
}

792 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


796 
	$DbPªUpd©eH™dÀr
(

797 *
p
,

798 
sqlôe3
 *
db
,

799 
›
,

800 c⁄° *
zDb
,

801 c⁄° *
zTbl
,

802 
sqlôe_öt64
 
iKey1
,

803 
sqlôe_öt64
 
iKey2


805 
SqlôeDb
 *
pDb
 = (SqlôeDb *)
p
;

806 
T˛_Obj
 *
pCmd
;

807 c⁄° *
azSå
[] = {"DELETE", "INSERT", "UPDATE"};

809 
	`as£π
–(
SQLITE_DELETE
-1)/9 == 0 );

810 
	`as£π
–(
SQLITE_INSERT
-1)/9 == 1 );

811 
	`as£π
–(
SQLITE_UPDATE
-1)/9 == 2 );

812 
	`as£π
–
pDb
->
pPªUpd©eHook
 );

813 
	`as£π
–
db
==
pDb
->db );

814 
	`as£π
–
›
==
SQLITE_INSERT
 || op==
SQLITE_UPDATE
 || op==
SQLITE_DELETE
 );

816 
pCmd
 = 
	`T˛_Du∂iˇãObj
(
pDb
->
pPªUpd©eHook
);

817 
	`T˛_In¸RefCou¡
(
pCmd
);

818 
	`T˛_Li°ObjAµídEÀmít
(0, 
pCmd
, 
	`T˛_NewSåögObj
(
azSå
[(
›
-1)/9], -1));

819 
	`T˛_Li°ObjAµídEÀmít
(0, 
pCmd
, 
	`T˛_NewSåögObj
(
zDb
, -1));

820 
	`T˛_Li°ObjAµídEÀmít
(0, 
pCmd
, 
	`T˛_NewSåögObj
(
zTbl
, -1));

821 
	`T˛_Li°ObjAµídEÀmít
(0, 
pCmd
, 
	`T˛_NewWideI¡Obj
(
iKey1
));

822 
	`T˛_Li°ObjAµídEÀmít
(0, 
pCmd
, 
	`T˛_NewWideI¡Obj
(
iKey2
));

823 
	`T˛_EvÆObjEx
(
pDb
->
öãΩ
, 
pCmd
, 
TCL_EVAL_DIRECT
);

824 
	`T˛_De¸RefCou¡
(
pCmd
);

825 
	}
}

828 
	$DbUpd©eH™dÀr
(

829 *
p
,

830 
›
,

831 c⁄° *
zDb
,

832 c⁄° *
zTbl
,

833 
sqlôe_öt64
 
rowid


835 
SqlôeDb
 *
pDb
 = (SqlôeDb *)
p
;

836 
T˛_Obj
 *
pCmd
;

837 c⁄° *
azSå
[] = {"DELETE", "INSERT", "UPDATE"};

839 
	`as£π
–(
SQLITE_DELETE
-1)/9 == 0 );

840 
	`as£π
–(
SQLITE_INSERT
-1)/9 == 1 );

841 
	`as£π
–(
SQLITE_UPDATE
-1)/9 == 2 );

843 
	`as£π
–
pDb
->
pUpd©eHook
 );

844 
	`as£π
–
›
==
SQLITE_INSERT
 || op==
SQLITE_UPDATE
 || op==
SQLITE_DELETE
 );

846 
pCmd
 = 
	`T˛_Du∂iˇãObj
(
pDb
->
pUpd©eHook
);

847 
	`T˛_In¸RefCou¡
(
pCmd
);

848 
	`T˛_Li°ObjAµídEÀmít
(0, 
pCmd
, 
	`T˛_NewSåögObj
(
azSå
[(
›
-1)/9], -1));

849 
	`T˛_Li°ObjAµídEÀmít
(0, 
pCmd
, 
	`T˛_NewSåögObj
(
zDb
, -1));

850 
	`T˛_Li°ObjAµídEÀmít
(0, 
pCmd
, 
	`T˛_NewSåögObj
(
zTbl
, -1));

851 
	`T˛_Li°ObjAµídEÀmít
(0, 
pCmd
, 
	`T˛_NewWideI¡Obj
(
rowid
));

852 
	`T˛_EvÆObjEx
(
pDb
->
öãΩ
, 
pCmd
, 
TCL_EVAL_DIRECT
);

853 
	`T˛_De¸RefCou¡
(
pCmd
);

854 
	}
}

856 
	$t˛CﬁœãNìded
(

857 *
pCtx
,

858 
sqlôe3
 *
db
,

859 
íc
,

860 c⁄° *
zName


862 
SqlôeDb
 *
pDb
 = (SqlôeDb *)
pCtx
;

863 
T˛_Obj
 *
pS¸ùt
 = 
	`T˛_Du∂iˇãObj
(
pDb
->
pCﬁœãNìded
);

864 
	`T˛_In¸RefCou¡
(
pS¸ùt
);

865 
	`T˛_Li°ObjAµídEÀmít
(0, 
pS¸ùt
, 
	`T˛_NewSåögObj
(
zName
, -1));

866 
	`T˛_EvÆObjEx
(
pDb
->
öãΩ
, 
pS¸ùt
, 0);

867 
	`T˛_De¸RefCou¡
(
pS¸ùt
);

868 
	}
}

874 
	$t˛SqlCﬁœã
(

875 *
pCtx
,

876 
nA
,

877 c⁄° *
zA
,

878 
nB
,

879 c⁄° *
zB


881 
SqlCﬁœã
 *
p
 = (SqlCﬁœã *)
pCtx
;

882 
T˛_Obj
 *
pCmd
;

884 
pCmd
 = 
	`T˛_NewSåögObj
(
p
->
zS¸ùt
, -1);

885 
	`T˛_In¸RefCou¡
(
pCmd
);

886 
	`T˛_Li°ObjAµídEÀmít
(
p
->
öãΩ
, 
pCmd
, 
	`T˛_NewSåögObj
(
zA
, 
nA
));

887 
	`T˛_Li°ObjAµídEÀmít
(
p
->
öãΩ
, 
pCmd
, 
	`T˛_NewSåögObj
(
zB
, 
nB
));

888 
	`T˛_EvÆObjEx
(
p
->
öãΩ
, 
pCmd
, 
TCL_EVAL_DIRECT
);

889 
	`T˛_De¸RefCou¡
(
pCmd
);

890  (
	`©oi
(
	`T˛_GëSåögResu…
(
p
->
öãΩ
)));

891 
	}
}

897 
	$t˛SqlFunc
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
, 
¨gc
, 
sqlôe3_vÆue
**
¨gv
){

898 
SqlFunc
 *
p
 = 
	`sqlôe3_u£r_d©a
(
c⁄ãxt
);

899 
T˛_Obj
 *
pCmd
;

900 
i
;

901 
rc
;

903 if–
¨gc
==0 ){

908 
pCmd
 = 
p
->
pS¸ùt
;

909 
	`T˛_In¸RefCou¡
(
pCmd
);

910 
rc
 = 
	`T˛_EvÆObjEx
(
p
->
öãΩ
, 
pCmd
, 0);

911 
	`T˛_De¸RefCou¡
(
pCmd
);

922 
T˛_Obj
 **
aArg
;

923 
nArg
;

924 if–
	`T˛_Li°ObjGëEÀmíts
(
p
->
öãΩ
,Ö->
pS¸ùt
, &
nArg
, &
aArg
) ){

925 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
, 
	`T˛_GëSåögResu…
(
p
->
öãΩ
), -1);

928 
pCmd
 = 
	`T˛_NewLi°Obj
(
nArg
, 
aArg
);

929 
	`T˛_In¸RefCou¡
(
pCmd
);

930 
i
=0; i<
¨gc
; i++){

931 
sqlôe3_vÆue
 *
pIn
 = 
¨gv
[
i
];

932 
T˛_Obj
 *
pVÆ
;

935  
	`sqlôe3_vÆue_ty≥
(
pIn
) ){

936 
SQLITE_BLOB
: {

937 
byãs
 = 
	`sqlôe3_vÆue_byãs
(
pIn
);

938 
pVÆ
 = 
	`T˛_NewByãAºayObj
(
	`sqlôe3_vÆue_blob
(
pIn
), 
byãs
);

941 
SQLITE_INTEGER
: {

942 
sqlôe_öt64
 
v
 = 
	`sqlôe3_vÆue_öt64
(
pIn
);

943 if–
v
>=-2147483647 && v<=2147483647 ){

944 
pVÆ
 = 
	`T˛_NewI¡Obj
(()
v
);

946 
pVÆ
 = 
	`T˛_NewWideI¡Obj
(
v
);

950 
SQLITE_FLOAT
: {

951 
r
 = 
	`sqlôe3_vÆue_doubÀ
(
pIn
);

952 
pVÆ
 = 
	`T˛_NewDoubÀObj
(
r
);

955 
SQLITE_NULL
: {

956 
pVÆ
 = 
	`T˛_NewSåögObj
(
p
->
pDb
->
zNuŒ
, -1);

960 
byãs
 = 
	`sqlôe3_vÆue_byãs
(
pIn
);

961 
pVÆ
 = 
	`T˛_NewSåögObj
((*)
	`sqlôe3_vÆue_ãxt
(
pIn
), 
byãs
);

965 
rc
 = 
	`T˛_Li°ObjAµídEÀmít
(
p
->
öãΩ
, 
pCmd
, 
pVÆ
);

966 if–
rc
 ){

967 
	`T˛_De¸RefCou¡
(
pCmd
);

968 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
, 
	`T˛_GëSåögResu…
(
p
->
öãΩ
), -1);

972 if–!
p
->
u£EvÆObjv
 ){

976 
	`T˛_GëSåög
(
pCmd
);

978 
rc
 = 
	`T˛_EvÆObjEx
(
p
->
öãΩ
, 
pCmd
, 
TCL_EVAL_DIRECT
);

979 
	`T˛_De¸RefCou¡
(
pCmd
);

982 if–
rc
 &&Ñc!=
TCL_RETURN
 ){

983 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
, 
	`T˛_GëSåögResu…
(
p
->
öãΩ
), -1);

985 
T˛_Obj
 *
pV¨
 = 
	`T˛_GëObjResu…
(
p
->
öãΩ
);

986 
n
;

987 
u8
 *
d©a
;

988 c⁄° *
zTy≥
 = (
pV¨
->
ty≥På
 ?ÖV¨->ty≥På->
«me
 : "");

989 
c
 = 
zTy≥
[0];

990 if–
c
=='b' && 
	`°rcmp
(
zTy≥
,"byã¨øy")==0 && 
pV¨
->
byãs
==0 ){

993 
d©a
 = 
	`T˛_GëByãAºayFromObj
(
pV¨
, &
n
);

994 
	`sqlôe3_ªsu…_blob
(
c⁄ãxt
, 
d©a
, 
n
, 
SQLITE_TRANSIENT
);

995 }if–
c
=='b' && 
	`°rcmp
(
zTy≥
,"boolean")==0 ){

996 
	`T˛_GëI¡FromObj
(0, 
pV¨
, &
n
);

997 
	`sqlôe3_ªsu…_öt
(
c⁄ãxt
, 
n
);

998 }if–
c
=='d' && 
	`°rcmp
(
zTy≥
,"double")==0 ){

999 
r
;

1000 
	`T˛_GëDoubÀFromObj
(0, 
pV¨
, &
r
);

1001 
	`sqlôe3_ªsu…_doubÀ
(
c⁄ãxt
, 
r
);

1002 }if–(
c
=='w' && 
	`°rcmp
(
zTy≥
,"wideInt")==0) ||

1003 (
c
=='i' && 
	`°rcmp
(
zTy≥
,"int")==0) ){

1004 
T˛_WideI¡
 
v
;

1005 
	`T˛_GëWideI¡FromObj
(0, 
pV¨
, &
v
);

1006 
	`sqlôe3_ªsu…_öt64
(
c⁄ãxt
, 
v
);

1008 
d©a
 = (*)
	`T˛_GëSåögFromObj
(
pV¨
, &
n
);

1009 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, (*)
d©a
, 
n
, 
SQLITE_TRANSIENT
);

1012 
	}
}

1014 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


1021 
auth_ˇŒback
(

1022 *
pArg
,

1023 
code
,

1024 c⁄° *
zArg1
,

1025 c⁄° *
zArg2
,

1026 c⁄° *
zArg3
,

1027 c⁄° *
zArg4


1028 #ifde‡
SQLITE_USER_AUTHENTICATION


1029 ,c⁄° *
zArg5


1032 c⁄° *
	gzCode
;

1033 
T˛_DSåög
 
	g°r
;

1034 
	grc
;

1035 c⁄° *
	gzRïly
;

1036 
SqlôeDb
 *
	gpDb
 = (SqlôeDb*)
pArg
;

1037 if–
	gpDb
->
	gdißbÀAuth
 )  
	gSQLITE_OK
;

1039  
	gcode
 ){

1040 
	gSQLITE_COPY
 : 
zCode
="SQLITE_COPY"; ;

1041 
	gSQLITE_CREATE_INDEX
 : 
zCode
="SQLITE_CREATE_INDEX"; ;

1042 
	gSQLITE_CREATE_TABLE
 : 
zCode
="SQLITE_CREATE_TABLE"; ;

1043 
	gSQLITE_CREATE_TEMP_INDEX
 : 
zCode
="SQLITE_CREATE_TEMP_INDEX"; ;

1044 
	gSQLITE_CREATE_TEMP_TABLE
 : 
zCode
="SQLITE_CREATE_TEMP_TABLE"; ;

1045 
	gSQLITE_CREATE_TEMP_TRIGGER
: 
zCode
="SQLITE_CREATE_TEMP_TRIGGER"; ;

1046 
	gSQLITE_CREATE_TEMP_VIEW
 : 
zCode
="SQLITE_CREATE_TEMP_VIEW"; ;

1047 
	gSQLITE_CREATE_TRIGGER
 : 
zCode
="SQLITE_CREATE_TRIGGER"; ;

1048 
	gSQLITE_CREATE_VIEW
 : 
zCode
="SQLITE_CREATE_VIEW"; ;

1049 
	gSQLITE_DELETE
 : 
zCode
="SQLITE_DELETE"; ;

1050 
	gSQLITE_DROP_INDEX
 : 
zCode
="SQLITE_DROP_INDEX"; ;

1051 
	gSQLITE_DROP_TABLE
 : 
zCode
="SQLITE_DROP_TABLE"; ;

1052 
	gSQLITE_DROP_TEMP_INDEX
 : 
zCode
="SQLITE_DROP_TEMP_INDEX"; ;

1053 
	gSQLITE_DROP_TEMP_TABLE
 : 
zCode
="SQLITE_DROP_TEMP_TABLE"; ;

1054 
	gSQLITE_DROP_TEMP_TRIGGER
 : 
zCode
="SQLITE_DROP_TEMP_TRIGGER"; ;

1055 
	gSQLITE_DROP_TEMP_VIEW
 : 
zCode
="SQLITE_DROP_TEMP_VIEW"; ;

1056 
	gSQLITE_DROP_TRIGGER
 : 
zCode
="SQLITE_DROP_TRIGGER"; ;

1057 
	gSQLITE_DROP_VIEW
 : 
zCode
="SQLITE_DROP_VIEW"; ;

1058 
	gSQLITE_INSERT
 : 
zCode
="SQLITE_INSERT"; ;

1059 
	gSQLITE_PRAGMA
 : 
zCode
="SQLITE_PRAGMA"; ;

1060 
	gSQLITE_READ
 : 
zCode
="SQLITE_READ"; ;

1061 
	gSQLITE_SELECT
 : 
zCode
="SQLITE_SELECT"; ;

1062 
	gSQLITE_TRANSACTION
 : 
zCode
="SQLITE_TRANSACTION"; ;

1063 
	gSQLITE_UPDATE
 : 
zCode
="SQLITE_UPDATE"; ;

1064 
	gSQLITE_ATTACH
 : 
zCode
="SQLITE_ATTACH"; ;

1065 
	gSQLITE_DETACH
 : 
zCode
="SQLITE_DETACH"; ;

1066 
	gSQLITE_ALTER_TABLE
 : 
zCode
="SQLITE_ALTER_TABLE"; ;

1067 
	gSQLITE_REINDEX
 : 
zCode
="SQLITE_REINDEX"; ;

1068 
	gSQLITE_ANALYZE
 : 
zCode
="SQLITE_ANALYZE"; ;

1069 
	gSQLITE_CREATE_VTABLE
 : 
zCode
="SQLITE_CREATE_VTABLE"; ;

1070 
	gSQLITE_DROP_VTABLE
 : 
zCode
="SQLITE_DROP_VTABLE"; ;

1071 
	gSQLITE_FUNCTION
 : 
zCode
="SQLITE_FUNCTION"; ;

1072 
	gSQLITE_SAVEPOINT
 : 
zCode
="SQLITE_SAVEPOINT"; ;

1073 
	gSQLITE_RECURSIVE
 : 
zCode
="SQLITE_RECURSIVE"; ;

1074  : 
zCode
="????"; ;

1076 
T˛_DSåögInô
(&
°r
);

1077 
T˛_DSåögAµíd
(&
°r
, 
pDb
->
zAuth
, -1);

1078 
T˛_DSåögAµídEÀmít
(&
°r
, 
zCode
);

1079 
T˛_DSåögAµídEÀmít
(&
°r
, 
zArg1
 ? zArg1 : "");

1080 
T˛_DSåögAµídEÀmít
(&
°r
, 
zArg2
 ? zArg2 : "");

1081 
T˛_DSåögAµídEÀmít
(&
°r
, 
zArg3
 ? zArg3 : "");

1082 
T˛_DSåögAµídEÀmít
(&
°r
, 
zArg4
 ? zArg4 : "");

1083 #ifde‡
SQLITE_USER_AUTHENTICATION


1084 
T˛_DSåögAµídEÀmít
(&
°r
, 
zArg5
 ? zArg5 : "");

1086 
	grc
 = 
T˛_GlobÆEvÆ
(
pDb
->
öãΩ
, 
T˛_DSåögVÆue
(&
°r
));

1087 
T˛_DSåögFªe
(&
°r
);

1088 
	gzRïly
 = 
rc
==
TCL_OK
 ? 
T˛_GëSåögResu…
(
pDb
->
öãΩ
) : "SQLITE_DENY";

1089 if–
°rcmp
(
zRïly
,"SQLITE_OK")==0 ){

1090 
rc
 = 
SQLITE_OK
;

1091 }if–
°rcmp
(
zRïly
,"SQLITE_DENY")==0 ){

1092 
rc
 = 
SQLITE_DENY
;

1093 }if–
°rcmp
(
zRïly
,"SQLITE_IGNORE")==0 ){

1094 
rc
 = 
SQLITE_IGNORE
;

1096 
	grc
 = 999;

1098  
	grc
;

1113 *
	$loˇl_gëlöe
(*
zProm±
, 
FILE
 *
ö
){

1114 *
zLöe
;

1115 
nLöe
;

1116 
n
;

1118 
nLöe
 = 100;

1119 
zLöe
 = 
	`mÆloc
–
nLöe
 );

1120 if–
zLöe
==0 )  0;

1121 
n
 = 0;

1123 if–
n
+100>
nLöe
 ){

1124 
nLöe
 =ÇLine*2 + 100;

1125 
zLöe
 = 
	`ªÆloc
(zLöe, 
nLöe
);

1126 if–
zLöe
==0 )  0;

1128 if–
	`fgës
(&
zLöe
[
n
], 
nLöe
 -Ç, 
ö
)==0 ){

1129 if–
n
==0 ){

1130 
	`‰ì
(
zLöe
);

1133 
zLöe
[
n
] = 0;

1136  
zLöe
[
n
] ){Ç++; }

1137 if–
n
>0 && 
zLöe
[n-1]=='\n' ){

1138 
n
--;

1139 
zLöe
[
n
] = 0;

1143 
zLöe
 = 
	`ªÆloc
–zLöe, 
n
+1 );

1144  
zLöe
;

1145 
	}
}

1156 
SQLITE_TCLAPI
 
	$DbTønsPo°Cmd
(

1157 
Clõ¡D©a
 
d©a
[],

1158 
T˛_I¡îp
 *
öãΩ
,

1159 
ªsu…


1161 c⁄° *c⁄° 
azEnd
[] = {

1167 
SqlôeDb
 *
pDb
 = (SqlôeDb*)
d©a
[0];

1168 
rc
 = 
ªsu…
;

1169 c⁄° *
zEnd
;

1171 
pDb
->
nTønß˘i⁄
--;

1172 
zEnd
 = 
azEnd
[(
rc
==
TCL_ERROR
)*2 + (
pDb
->
nTønß˘i⁄
==0)];

1174 
pDb
->
dißbÀAuth
++;

1175 if–
	`sqlôe3_exec
(
pDb
->
db
, 
zEnd
, 0, 0, 0) ){

1186 if–
rc
!=
TCL_ERROR
 ){

1187 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3_îrmsg
(
pDb
->
db
), (*)0);

1188 
rc
 = 
TCL_ERROR
;

1190 
	`sqlôe3_exec
(
pDb
->
db
, "ROLLBACK", 0, 0, 0);

1192 
pDb
->
dißbÀAuth
--;

1194  
rc
;

1195 
	}
}

1204 
	$dbPª∑ª
(

1205 
SqlôeDb
 *
pDb
,

1206 c⁄° *
zSql
,

1207 
sqlôe3_°mt
 **
µStmt
,

1208 c⁄° **
pzOut


1210 #ifde‡
SQLITE_TEST


1211 if–
pDb
->
bLegacyPª∑ª
 ){

1212  
	`sqlôe3_¥ï¨e
(
pDb
->
db
, 
zSql
, -1, 
µStmt
, 
pzOut
);

1215  
	`sqlôe3_¥ï¨e_v2
(
pDb
->
db
, 
zSql
, -1, 
µStmt
, 
pzOut
);

1216 
	}
}

1233 
	$dbPª∑ªAndBöd
(

1234 
SqlôeDb
 *
pDb
,

1235 c⁄° *
zIn
,

1236 c⁄° **
pzOut
,

1237 
SqlPª∑ªdStmt
 **
µPªStmt


1239 c⁄° *
zSql
 = 
zIn
;

1240 
sqlôe3_°mt
 *
pStmt
 = 0;

1241 
SqlPª∑ªdStmt
 *
pPªStmt
;

1242 
nSql
;

1243 
nV¨
 = 0;

1244 
iP¨m
 = 0;

1245 
c
;

1246 
i
;

1247 
T˛_I¡îp
 *
öãΩ
 = 
pDb
->interp;

1249 *
µPªStmt
 = 0;

1252  (
c
 = 
zSql
[0])==' ' || c=='\t' || c=='\r' || c=='\n' ){ zSql++; }

1253 
nSql
 = 
	`°æí30
(
zSql
);

1255 
pPªStmt
 = 
pDb
->
°mtLi°
;ÖPªStmt;ÖPªStmtıPªStmt->
pNext
){

1256 
n
 = 
pPªStmt
->
nSql
;

1257 if–
nSql
>=
n


1258 && 
	`memcmp
(
pPªStmt
->
zSql
, zSql, 
n
)==0

1259 && (
zSql
[
n
]==0 || zSql[n-1]==';')

1261 
pStmt
 = 
pPªStmt
->pStmt;

1262 *
pzOut
 = &
zSql
[
pPªStmt
->
nSql
];

1268 if–
pPªStmt
->
pPªv
 ){

1269 
pPªStmt
->
pPªv
->
pNext
 =ÖPreStmt->pNext;

1271 
pDb
->
°mtLi°
 = 
pPªStmt
->
pNext
;

1273 if–
pPªStmt
->
pNext
 ){

1274 
pPªStmt
->
pNext
->
pPªv
 =ÖPreStmt->pPrev;

1276 
pDb
->
°mtLa°
 = 
pPªStmt
->
pPªv
;

1278 
pDb
->
nStmt
--;

1279 
nV¨
 = 
	`sqlôe3_böd_∑ømëî_cou¡
(
pStmt
);

1286 if–
pPªStmt
==0 ){

1287 
nByã
;

1289 if–
SQLITE_OK
!=
	`dbPª∑ª
(
pDb
, 
zSql
, &
pStmt
, 
pzOut
) ){

1290 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
(
	`sqlôe3_îrmsg
(
pDb
->
db
), -1));

1291  
TCL_ERROR
;

1293 if–
pStmt
==0 ){

1294 if–
SQLITE_OK
!=
	`sqlôe3_îrcode
(
pDb
->
db
) ){

1296 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
(
	`sqlôe3_îrmsg
(
pDb
->
db
), -1));

1297  
TCL_ERROR
;

1302  
TCL_OK
;

1306 
	`as£π
–
pPªStmt
==0 );

1307 
nV¨
 = 
	`sqlôe3_böd_∑ømëî_cou¡
(
pStmt
);

1308 
nByã
 = (
SqlPª∑ªdStmt
Ë+ 
nV¨
*(
T˛_Obj
 *);

1309 
pPªStmt
 = (
SqlPª∑ªdStmt
*)
	`T˛_AŒoc
(
nByã
);

1310 
	`mem£t
(
pPªStmt
, 0, 
nByã
);

1312 
pPªStmt
->
pStmt
 =ÖStmt;

1313 
pPªStmt
->
nSql
 = ()(*
pzOut
 - 
zSql
);

1314 
pPªStmt
->
zSql
 = 
	`sqlôe3_sql
(
pStmt
);

1315 
pPªStmt
->
≠P¨m
 = (
T˛_Obj
 **)&pPreStmt[1];

1316 #ifde‡
SQLITE_TEST


1317 if–
pPªStmt
->
zSql
==0 ){

1318 *
zC›y
 = 
	`T˛_AŒoc
(
pPªStmt
->
nSql
 + 1);

1319 
	`mem˝y
(
zC›y
, 
zSql
, 
pPªStmt
->
nSql
);

1320 
zC›y
[
pPªStmt
->
nSql
] = '\0';

1321 
pPªStmt
->
zSql
 = 
zC›y
;

1325 
	`as£π
–
pPªStmt
 );

1326 
	`as£π
–
	`°æí30
(
pPªStmt
->
zSql
)=ıPªStmt->
nSql
 );

1327 
	`as£π
–0==
	`memcmp
(
pPªStmt
->
zSql
, zSql,ÖPªStmt->
nSql
) );

1330 
i
=1; i<=
nV¨
; i++){

1331 c⁄° *
zV¨
 = 
	`sqlôe3_böd_∑ømëî_«me
(
pStmt
, 
i
);

1332 if–
zV¨
!=0 && (zVar[0]=='$' || zVar[0]==':' || zVar[0]=='@') ){

1333 
T˛_Obj
 *
pV¨
 = 
	`T˛_GëV¨2Ex
(
öãΩ
, &
zV¨
[1], 0, 0);

1334 if–
pV¨
 ){

1335 
n
;

1336 
u8
 *
d©a
;

1337 c⁄° *
zTy≥
 = (
pV¨
->
ty≥På
 ?ÖV¨->ty≥På->
«me
 : "");

1338 
c
 = 
zTy≥
[0];

1339 if–
zV¨
[0]=='@' ||

1340 (
c
=='b' && 
	`°rcmp
(
zTy≥
,"byã¨øy")==0 && 
pV¨
->
byãs
==0) ){

1344 
d©a
 = 
	`T˛_GëByãAºayFromObj
(
pV¨
, &
n
);

1345 
	`sqlôe3_böd_blob
(
pStmt
, 
i
, 
d©a
, 
n
, 
SQLITE_STATIC
);

1346 
	`T˛_In¸RefCou¡
(
pV¨
);

1347 
pPªStmt
->
≠P¨m
[
iP¨m
++] = 
pV¨
;

1348 }if–
c
=='b' && 
	`°rcmp
(
zTy≥
,"boolean")==0 ){

1349 
	`T˛_GëI¡FromObj
(
öãΩ
, 
pV¨
, &
n
);

1350 
	`sqlôe3_böd_öt
(
pStmt
, 
i
, 
n
);

1351 }if–
c
=='d' && 
	`°rcmp
(
zTy≥
,"double")==0 ){

1352 
r
;

1353 
	`T˛_GëDoubÀFromObj
(
öãΩ
, 
pV¨
, &
r
);

1354 
	`sqlôe3_böd_doubÀ
(
pStmt
, 
i
, 
r
);

1355 }if–(
c
=='w' && 
	`°rcmp
(
zTy≥
,"wideInt")==0) ||

1356 (
c
=='i' && 
	`°rcmp
(
zTy≥
,"int")==0) ){

1357 
T˛_WideI¡
 
v
;

1358 
	`T˛_GëWideI¡FromObj
(
öãΩ
, 
pV¨
, &
v
);

1359 
	`sqlôe3_böd_öt64
(
pStmt
, 
i
, 
v
);

1361 
d©a
 = (*)
	`T˛_GëSåögFromObj
(
pV¨
, &
n
);

1362 
	`sqlôe3_böd_ãxt
(
pStmt
, 
i
, (*)
d©a
, 
n
, 
SQLITE_STATIC
);

1363 
	`T˛_In¸RefCou¡
(
pV¨
);

1364 
pPªStmt
->
≠P¨m
[
iP¨m
++] = 
pV¨
;

1367 
	`sqlôe3_böd_nuŒ
(
pStmt
, 
i
);

1371 
pPªStmt
->
nP¨m
 = 
iP¨m
;

1372 *
µPªStmt
 = 
pPªStmt
;

1374  
TCL_OK
;

1375 
	}
}

1386 
	$dbRñó£Stmt
(

1387 
SqlôeDb
 *
pDb
,

1388 
SqlPª∑ªdStmt
 *
pPªStmt
,

1389 
disˇrd


1391 
i
;

1394 
i
=0; i<
pPªStmt
->
nP¨m
; i++){

1395 
	`T˛_De¸RefCou¡
(
pPªStmt
->
≠P¨m
[
i
]);

1397 
pPªStmt
->
nP¨m
 = 0;

1399 if–
pDb
->
maxStmt
<=0 || 
disˇrd
 ){

1401 
	`dbFªeStmt
(
pPªStmt
);

1404 
pPªStmt
->
pNext
 = 
pDb
->
°mtLi°
;

1405 
pPªStmt
->
pPªv
 = 0;

1406 if–
pDb
->
°mtLi°
 ){

1407 
pDb
->
°mtLi°
->
pPªv
 = 
pPªStmt
;

1409 
pDb
->
°mtLi°
 = 
pPªStmt
;

1410 if–
pDb
->
°mtLa°
==0 ){

1411 
	`as£π
–
pDb
->
nStmt
==0 );

1412 
pDb
->
°mtLa°
 = 
pPªStmt
;

1414 
	`as£π
–
pDb
->
nStmt
>0 );

1416 
pDb
->
nStmt
++;

1420  
pDb
->
nStmt
>pDb->
maxStmt
 ){

1421 
SqlPª∑ªdStmt
 *
pLa°
 = 
pDb
->
°mtLa°
;

1422 
pDb
->
°mtLa°
 = 
pLa°
->
pPªv
;

1423 
pDb
->
°mtLa°
->
pNext
 = 0;

1424 
pDb
->
nStmt
--;

1425 
	`dbFªeStmt
(
pLa°
);

1428 
	}
}

1439 
DbEvÆC⁄ãxt
 
	tDbEvÆC⁄ãxt
;

1440 
	sDbEvÆC⁄ãxt
 {

1441 
SqlôeDb
 *
	mpDb
;

1442 
T˛_Obj
 *
	mpSql
;

1443 c⁄° *
	mzSql
;

1444 
SqlPª∑ªdStmt
 *
	mpPªStmt
;

1445 
	mnCﬁ
;

1446 
T˛_Obj
 *
	mpAºay
;

1447 
T˛_Obj
 **
	m≠CﬁName
;

1454 
	$dbRñó£CﬁumnNames
(
DbEvÆC⁄ãxt
 *
p
){

1455 if–
p
->
≠CﬁName
 ){

1456 
i
;

1457 
i
=0; i<
p
->
nCﬁ
; i++){

1458 
	`T˛_De¸RefCou¡
(
p
->
≠CﬁName
[
i
]);

1460 
	`T˛_Fªe
((*)
p
->
≠CﬁName
);

1461 
p
->
≠CﬁName
 = 0;

1463 
p
->
nCﬁ
 = 0;

1464 
	}
}

1478 
	$dbEvÆInô
(

1479 
DbEvÆC⁄ãxt
 *
p
,

1480 
SqlôeDb
 *
pDb
,

1481 
T˛_Obj
 *
pSql
,

1482 
T˛_Obj
 *
pAºay


1484 
	`mem£t
(
p
, 0, (
DbEvÆC⁄ãxt
));

1485 
p
->
pDb
 =ÖDb;

1486 
p
->
zSql
 = 
	`T˛_GëSåög
(
pSql
);

1487 
p
->
pSql
 =ÖSql;

1488 
	`T˛_In¸RefCou¡
(
pSql
);

1489 if–
pAºay
 ){

1490 
p
->
pAºay
 =ÖArray;

1491 
	`T˛_In¸RefCou¡
(
pAºay
);

1493 
	}
}

1499 
	$dbEvÆRowInfo
(

1500 
DbEvÆC⁄ãxt
 *
p
,

1501 *
≤Cﬁ
,

1502 
T˛_Obj
 ***
∑pCﬁName


1505 if–0==
p
->
≠CﬁName
 ){

1506 
sqlôe3_°mt
 *
pStmt
 = 
p
->
pPªStmt
->pStmt;

1507 
i
;

1508 
nCﬁ
;

1509 
T˛_Obj
 **
≠CﬁName
 = 0;

1511 
p
->
nCﬁ
 =ÇCﬁ = 
	`sqlôe3_cﬁumn_cou¡
(
pStmt
);

1512 if–
nCﬁ
>0 && (
∑pCﬁName
 || 
p
->
pAºay
) ){

1513 
≠CﬁName
 = (
T˛_Obj
**)
	`T˛_AŒoc
–(T˛_Obj*)*
nCﬁ
 );

1514 
i
=0; i<
nCﬁ
; i++){

1515 
≠CﬁName
[
i
] = 
	`T˛_NewSåögObj
(
	`sqlôe3_cﬁumn_«me
(
pStmt
,i), -1);

1516 
	`T˛_In¸RefCou¡
(
≠CﬁName
[
i
]);

1518 
p
->
≠CﬁName
 =ápColName;

1524 if–
p
->
pAºay
 ){

1525 
T˛_I¡îp
 *
öãΩ
 = 
p
->
pDb
->interp;

1526 
T˛_Obj
 *
pCﬁLi°
 = 
	`T˛_NewObj
();

1527 
T˛_Obj
 *
pSèr
 = 
	`T˛_NewSåögObj
("*", -1);

1529 
i
=0; i<
nCﬁ
; i++){

1530 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pCﬁLi°
, 
≠CﬁName
[
i
]);

1532 
	`T˛_In¸RefCou¡
(
pSèr
);

1533 
	`T˛_ObjSëV¨2
(
öãΩ
, 
p
->
pAºay
, 
pSèr
, 
pCﬁLi°
, 0);

1534 
	`T˛_De¸RefCou¡
(
pSèr
);

1538 if–
∑pCﬁName
 ){

1539 *
∑pCﬁName
 = 
p
->
≠CﬁName
;

1541 if–
≤Cﬁ
 ){

1542 *
≤Cﬁ
 = 
p
->
nCﬁ
;

1544 
	}
}

1557 
	$dbEvÆSãp
(
DbEvÆC⁄ãxt
 *
p
){

1558 c⁄° *
zPªvSql
 = 0;

1560  
p
->
zSql
[0] ||Ö->
pPªStmt
 ){

1561 
rc
;

1562 if–
p
->
pPªStmt
==0 ){

1563 
zPªvSql
 = (
p
->
zSql
==zPrevSql ? 0 :Ö->zSql);

1564 
rc
 = 
	`dbPª∑ªAndBöd
(
p
->
pDb
,Ö->
zSql
, &p->zSql, &p->
pPªStmt
);

1565 if–
rc
!=
TCL_OK
 ) Ñc;

1567 
rcs
;

1568 
SqlôeDb
 *
pDb
 = 
p
->pDb;

1569 
SqlPª∑ªdStmt
 *
pPªStmt
 = 
p
->pPreStmt;

1570 
sqlôe3_°mt
 *
pStmt
 = 
pPªStmt
->pStmt;

1572 
rcs
 = 
	`sqlôe3_°ï
(
pStmt
);

1573 if–
rcs
==
SQLITE_ROW
 ){

1574  
TCL_OK
;

1576 if–
p
->
pAºay
 ){

1577 
	`dbEvÆRowInfo
(
p
, 0, 0);

1579 
rcs
 = 
	`sqlôe3_ª£t
(
pStmt
);

1581 
pDb
->
nSãp
 = 
	`sqlôe3_°mt_°©us
(
pStmt
,
SQLITE_STMTSTATUS_FULLSCAN_STEP
,1);

1582 
pDb
->
nS‹t
 = 
	`sqlôe3_°mt_°©us
(
pStmt
,
SQLITE_STMTSTATUS_SORT
,1);

1583 
pDb
->
nIndex
 = 
	`sqlôe3_°mt_°©us
(
pStmt
,
SQLITE_STMTSTATUS_AUTOINDEX
,1);

1584 
	`dbRñó£CﬁumnNames
(
p
);

1585 
p
->
pPªStmt
 = 0;

1587 if–
rcs
!=
SQLITE_OK
 ){

1590 
	`dbRñó£Stmt
(
pDb
, 
pPªStmt
, 1);

1591 #i‡
SQLITE_TEST


1592 if–
p
->
pDb
->
bLegacyPª∑ª
 && 
rcs
==
SQLITE_SCHEMA
 && 
zPªvSql
 ){

1598 
p
->
zSql
 = 
zPªvSql
;

1602 
	`T˛_SëObjResu…
(
pDb
->
öãΩ
,

1603 
	`T˛_NewSåögObj
(
	`sqlôe3_îrmsg
(
pDb
->
db
), -1));

1604  
TCL_ERROR
;

1606 
	`dbRñó£Stmt
(
pDb
, 
pPªStmt
, 0);

1612  
TCL_BREAK
;

1613 
	}
}

1620 
	$dbEvÆFöÆize
(
DbEvÆC⁄ãxt
 *
p
){

1621 if–
p
->
pPªStmt
 ){

1622 
	`sqlôe3_ª£t
(
p
->
pPªStmt
->
pStmt
);

1623 
	`dbRñó£Stmt
(
p
->
pDb
,Ö->
pPªStmt
, 0);

1624 
p
->
pPªStmt
 = 0;

1626 if–
p
->
pAºay
 ){

1627 
	`T˛_De¸RefCou¡
(
p
->
pAºay
);

1628 
p
->
pAºay
 = 0;

1630 
	`T˛_De¸RefCou¡
(
p
->
pSql
);

1631 
	`dbRñó£CﬁumnNames
(
p
);

1632 
	}
}

1639 
T˛_Obj
 *
	$dbEvÆCﬁumnVÆue
(
DbEvÆC⁄ãxt
 *
p
, 
iCﬁ
){

1640 
sqlôe3_°mt
 *
pStmt
 = 
p
->
pPªStmt
->pStmt;

1641  
	`sqlôe3_cﬁumn_ty≥
(
pStmt
, 
iCﬁ
) ){

1642 
SQLITE_BLOB
: {

1643 
byãs
 = 
	`sqlôe3_cﬁumn_byãs
(
pStmt
, 
iCﬁ
);

1644 c⁄° *
zBlob
 = 
	`sqlôe3_cﬁumn_blob
(
pStmt
, 
iCﬁ
);

1645 if–!
zBlob
 ) 
byãs
 = 0;

1646  
	`T˛_NewByãAºayObj
((
u8
*)
zBlob
, 
byãs
);

1648 
SQLITE_INTEGER
: {

1649 
sqlôe_öt64
 
v
 = 
	`sqlôe3_cﬁumn_öt64
(
pStmt
, 
iCﬁ
);

1650 if–
v
>=-2147483647 && v<=2147483647 ){

1651  
	`T˛_NewI¡Obj
(()
v
);

1653  
	`T˛_NewWideI¡Obj
(
v
);

1656 
SQLITE_FLOAT
: {

1657  
	`T˛_NewDoubÀObj
(
	`sqlôe3_cﬁumn_doubÀ
(
pStmt
, 
iCﬁ
));

1659 
SQLITE_NULL
: {

1660  
	`T˛_NewSåögObj
(
p
->
pDb
->
zNuŒ
, -1);

1664  
	`T˛_NewSåögObj
((*)
	`sqlôe3_cﬁumn_ãxt
(
pStmt
, 
iCﬁ
), -1);

1665 
	}
}

1674 #i‡
TCL_MAJOR_VERSION
>8 || (TCL_MAJOR_VERSION==8 && 
TCL_MINOR_VERSION
>=6)

1675 
	#SQLITE_TCL_NRE
 1

	)

1676 
	$DbU£Nª
(){

1677 
maj‹
, 
mö‹
;

1678 
	`T˛_GëVîsi⁄
(&
maj‹
, &
mö‹
, 0, 0);

1679 –(
maj‹
==8 && 
mö‹
>=6) || major>8 );

1680 
	}
}

1691 
	#SQLITE_TCL_NRE
 0

	)

1692 
	#DbU£Nª
(Ë0

	)

1693 
	#T˛_NRAddCÆlback
(
a
,
b
,
c
,
d
,
e
,
f
Ë()0

	)

1694 
	#T˛_NREvÆObj
(
a
,
b
,
c
Ë0

	)

1695 
	#T˛_NRCª©eComm™d
(
a
,
b
,
c
,
d
,
e
,
f
Ë()0

	)

1703 
SQLITE_TCLAPI
 
	$DbEvÆNextCmd
(

1704 
Clõ¡D©a
 
d©a
[],

1705 
T˛_I¡îp
 *
öãΩ
,

1706 
ªsu…


1708 
rc
 = 
ªsu…
;

1714 
DbEvÆC⁄ãxt
 *
p
 = (DbEvÆC⁄ãxà*)
d©a
[0];

1715 
T˛_Obj
 *
pS¸ùt
 = (T˛_Obj *)
d©a
[1];

1716 
T˛_Obj
 *
pAºay
 = 
p
->pArray;

1718  (
rc
==
TCL_OK
 ||Ñc==
TCL_CONTINUE
Ë&& TCL_OK==‘¯
	`dbEvÆSãp
(
p
)) ){

1719 
i
;

1720 
nCﬁ
;

1721 
T˛_Obj
 **
≠CﬁName
;

1722 
	`dbEvÆRowInfo
(
p
, &
nCﬁ
, &
≠CﬁName
);

1723 
i
=0; i<
nCﬁ
; i++){

1724 
T˛_Obj
 *
pVÆ
 = 
	`dbEvÆCﬁumnVÆue
(
p
, 
i
);

1725 if–
pAºay
==0 ){

1726 
	`T˛_ObjSëV¨2
(
öãΩ
, 
≠CﬁName
[
i
], 0, 
pVÆ
, 0);

1728 
	`T˛_ObjSëV¨2
(
öãΩ
, 
pAºay
, 
≠CﬁName
[
i
], 
pVÆ
, 0);

1741 if–
	`DbU£Nª
() ){

1742 
	`T˛_NRAddCÆlback
(
öãΩ
, 
DbEvÆNextCmd
, (*)
p
, (*)
pS¸ùt
, 0, 0);

1743  
	`T˛_NREvÆObj
(
öãΩ
, 
pS¸ùt
, 0);

1745 
rc
 = 
	`T˛_EvÆObjEx
(
öãΩ
, 
pS¸ùt
, 0);

1749 
	`T˛_De¸RefCou¡
(
pS¸ùt
);

1750 
	`dbEvÆFöÆize
(
p
);

1751 
	`T˛_Fªe
((*)
p
);

1753 if–
rc
==
TCL_OK
 ||Ñc==
TCL_BREAK
 ){

1754 
	`T˛_Re£tResu…
(
öãΩ
);

1755 
rc
 = 
TCL_OK
;

1757  
rc
;

1758 
	}
}

1769 
	$DbHookCmd
(

1770 
T˛_I¡îp
 *
öãΩ
,

1771 
SqlôeDb
 *
pDb
,

1772 
T˛_Obj
 *
pArg
,

1773 
T˛_Obj
 **
µHook


1775 
sqlôe3
 *
db
 = 
pDb
->db;

1777 if–*
µHook
 ){

1778 
	`T˛_SëObjResu…
(
öãΩ
, *
µHook
);

1779 if–
pArg
 ){

1780 
	`T˛_De¸RefCou¡
(*
µHook
);

1781 *
µHook
 = 0;

1784 if–
pArg
 ){

1785 
	`as£π
–!(*
µHook
) );

1786 if–
	`T˛_GëCh¨Lígth
(
pArg
)>0 ){

1787 *
µHook
 = 
pArg
;

1788 
	`T˛_In¸RefCou¡
(*
µHook
);

1792 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


1793 
	`sqlôe3_¥eupd©e_hook
(
db
, (
pDb
->
pPªUpd©eHook
?
DbPªUpd©eH™dÀr
:0),ÖDb);

1795 
	`sqlôe3_upd©e_hook
(
db
, (
pDb
->
pUpd©eHook
?
DbUpd©eH™dÀr
:0),ÖDb);

1796 
	`sqlôe3_rﬁlback_hook
(
db
, (
pDb
->
pRﬁlbackHook
?
DbRﬁlbackH™dÀr
:0),ÖDb);

1797 
	`sqlôe3_wÆ_hook
(
db
, (
pDb
->
pWÆHook
?
DbWÆH™dÀr
:0),ÖDb);

1798 
	}
}

1813 
SQLITE_TCLAPI
 
	$DbObjCmd
(

1814 *
cd
,

1815 
T˛_I¡îp
 *
öãΩ
,

1816 
objc
,

1817 
T˛_Obj
 *c⁄°*
objv


1819 
SqlôeDb
 *
pDb
 = (SqlôeDb*)
cd
;

1820 
choi˚
;

1821 
rc
 = 
TCL_OK
;

1822 c⁄° *
DB_°rs
[] = {

1838 
	eDB_íum
 {

1839 
DB_AUTHORIZER
, 
DB_BACKUP
, 
DB_BUSY
,

1840 
DB_CACHE
, 
DB_CHANGES
, 
DB_CLOSE
,

1841 
DB_COLLATE
, 
DB_COLLATION_NEEDED
, 
DB_COMMIT_HOOK
,

1842 
DB_COMPLETE
, 
DB_COPY
, 
DB_ENABLE_LOAD_EXTENSION
,

1843 
DB_ERRORCODE
, 
DB_EVAL
, 
DB_EXISTS
,

1844 
DB_FUNCTION
, 
DB_INCRBLOB
, 
DB_INTERRUPT
,

1845 
DB_LAST_INSERT_ROWID
, 
DB_NULLVALUE
, 
DB_ONECOLUMN
,

1846 
DB_PREUPDATE
, 
DB_PROFILE
, 
DB_PROGRESS
,

1847 
DB_REKEY
, 
DB_RESTORE
, 
DB_ROLLBACK_HOOK
,

1848 
DB_STATUS
, 
DB_TIMEOUT
, 
DB_TOTAL_CHANGES
,

1849 
DB_TRACE
, 
DB_TRACE_V2
, 
DB_TRANSACTION
,

1850 
DB_UNLOCK_NOTIFY
, 
DB_UPDATE_HOOK
, 
DB_VERSION
,

1851 
DB_WAL_HOOK
,

1855 if–
objc
<2 ){

1856 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "SUBCOMMAND ...");

1857  
TCL_ERROR
;

1859 if–
	`T˛_GëIndexFromObj
(
öãΩ
, 
objv
[1], 
DB_°rs
, "›ti⁄", 0, &
choi˚
) ){

1860  
TCL_ERROR
;

1863  (
DB_íum
)
choi˚
 ){

1883 
DB_AUTHORIZER
: {

1884 #ifde‡
SQLITE_OMIT_AUTHORIZATION


1885 
	`T˛_AµídResu…
(
öãΩ
, "authorizationÇotávailable inÅhis build",

1887  
TCL_ERROR
;

1889 if–
objc
>3 ){

1890 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "?CALLBACK?");

1891  
TCL_ERROR
;

1892 }if–
objc
==2 ){

1893 if–
pDb
->
zAuth
 ){

1894 
	`T˛_AµídResu…
(
öãΩ
, 
pDb
->
zAuth
, (*)0);

1897 *
zAuth
;

1898 
Àn
;

1899 if–
pDb
->
zAuth
 ){

1900 
	`T˛_Fªe
(
pDb
->
zAuth
);

1902 
zAuth
 = 
	`T˛_GëSåögFromObj
(
objv
[2], &
Àn
);

1903 if–
zAuth
 && 
Àn
>0 ){

1904 
pDb
->
zAuth
 = 
	`T˛_AŒoc
–
Àn
 + 1 );

1905 
	`mem˝y
(
pDb
->
zAuth
, zAuth, 
Àn
+1);

1907 
pDb
->
zAuth
 = 0;

1909 if–
pDb
->
zAuth
 ){

1910 (*
	tsqlôe3_auth_cb
)(

1913 
pDb
->
öãΩ
 = interp;

1914 
	`sqlôe3_£t_auth‹izî
(
pDb
->
db
,(
sqlôe3_auth_cb
)
auth_ˇŒback
,pDb);

1916 
	`sqlôe3_£t_auth‹izî
(
pDb
->
db
, 0, 0);

1929 
DB_BACKUP
: {

1930 c⁄° *
zDe°Fûe
;

1931 c⁄° *
zSrcDb
;

1932 
sqlôe3
 *
pDe°
;

1933 
sqlôe3_backup
 *
pBackup
;

1935 if–
objc
==3 ){

1936 
zSrcDb
 = "main";

1937 
zDe°Fûe
 = 
	`T˛_GëSåög
(
objv
[2]);

1938 }if–
objc
==4 ){

1939 
zSrcDb
 = 
	`T˛_GëSåög
(
objv
[2]);

1940 
zDe°Fûe
 = 
	`T˛_GëSåög
(
objv
[3]);

1942 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "?DATABASE? FILENAME");

1943  
TCL_ERROR
;

1945 
rc
 = 
	`sqlôe3_›í_v2
(
zDe°Fûe
, &
pDe°
,

1946 
SQLITE_OPEN_READWRITE
 | 
SQLITE_OPEN_CREATE
| 
pDb
->
›íFœgs
, 0);

1947 if–
rc
!=
SQLITE_OK
 ){

1948 
	`T˛_AµídResu…
(
öãΩ
, "cannot openÅarget database: ",

1949 
	`sqlôe3_îrmsg
(
pDe°
), (*)0);

1950 
	`sqlôe3_˛o£
(
pDe°
);

1951  
TCL_ERROR
;

1953 
pBackup
 = 
	`sqlôe3_backup_öô
(
pDe°
, "maö", 
pDb
->
db
, 
zSrcDb
);

1954 if–
pBackup
==0 ){

1955 
	`T˛_AµídResu…
(
öãΩ
, "backup failed: ",

1956 
	`sqlôe3_îrmsg
(
pDe°
), (*)0);

1957 
	`sqlôe3_˛o£
(
pDe°
);

1958  
TCL_ERROR
;

1960  (
rc
 = 
	`sqlôe3_backup_°ï
(
pBackup
,100))==
SQLITE_OK
 ){}

1961 
	`sqlôe3_backup_föish
(
pBackup
);

1962 if–
rc
==
SQLITE_DONE
 ){

1963 
rc
 = 
TCL_OK
;

1965 
	`T˛_AµídResu…
(
öãΩ
, "backup failed: ",

1966 
	`sqlôe3_îrmsg
(
pDe°
), (*)0);

1967 
rc
 = 
TCL_ERROR
;

1969 
	`sqlôe3_˛o£
(
pDe°
);

1978 
DB_BUSY
: {

1979 if–
objc
>3 ){

1980 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "CALLBACK");

1981  
TCL_ERROR
;

1982 }if–
objc
==2 ){

1983 if–
pDb
->
zBusy
 ){

1984 
	`T˛_AµídResu…
(
öãΩ
, 
pDb
->
zBusy
, (*)0);

1987 *
zBusy
;

1988 
Àn
;

1989 if–
pDb
->
zBusy
 ){

1990 
	`T˛_Fªe
(
pDb
->
zBusy
);

1992 
zBusy
 = 
	`T˛_GëSåögFromObj
(
objv
[2], &
Àn
);

1993 if–
zBusy
 && 
Àn
>0 ){

1994 
pDb
->
zBusy
 = 
	`T˛_AŒoc
–
Àn
 + 1 );

1995 
	`mem˝y
(
pDb
->
zBusy
, zBusy, 
Àn
+1);

1997 
pDb
->
zBusy
 = 0;

1999 if–
pDb
->
zBusy
 ){

2000 
pDb
->
öãΩ
 = interp;

2001 
	`sqlôe3_busy_h™dÀr
(
pDb
->
db
, 
DbBusyH™dÀr
,ÖDb);

2003 
	`sqlôe3_busy_h™dÀr
(
pDb
->
db
, 0, 0);

2015 
DB_CACHE
: {

2016 *
subCmd
;

2017 
n
;

2019 if–
objc
<=2 ){

2020 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "cache option ?arg?");

2021  
TCL_ERROR
;

2023 
subCmd
 = 
	`T˛_GëSåögFromObj
–
objv
[2], 0 );

2024 if–*
subCmd
=='f' && 
	`°rcmp
(subCmd,"flush")==0 ){

2025 if–
objc
!=3 ){

2026 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "flush");

2027  
TCL_ERROR
;

2029 
	`ÊushStmtCache
–
pDb
 );

2031 }if–*
subCmd
=='s' && 
	`°rcmp
(subCmd,"size")==0 ){

2032 if–
objc
!=4 ){

2033 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "sizeÇ");

2034  
TCL_ERROR
;

2036 if–
TCL_ERROR
==
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
n
) ){

2037 
	`T˛_AµídResu…
–
öãΩ
, "cannot convert \"",

2038 
	`T˛_GëSåögFromObj
(
objv
[3],0), "\"Åo integer", (*)0);

2039  
TCL_ERROR
;

2041 if–
n
<0 ){

2042 
	`ÊushStmtCache
–
pDb
 );

2043 
n
 = 0;

2044 }if–
n
>
MAX_PREPARED_STMTS
 ){

2045 
n
 = 
MAX_PREPARED_STMTS
;

2047 
pDb
->
maxStmt
 = 
n
;

2051 
	`T˛_AµídResu…
–
öãΩ
, "bad option \"",

2052 
	`T˛_GëSåögFromObj
(
objv
[2],0), "\": must be flush or size",

2054  
TCL_ERROR
;

2065 
DB_CHANGES
: {

2066 
T˛_Obj
 *
pResu…
;

2067 if–
objc
!=2 ){

2068 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "");

2069  
TCL_ERROR
;

2071 
pResu…
 = 
	`T˛_GëObjResu…
(
öãΩ
);

2072 
	`T˛_SëI¡Obj
(
pResu…
, 
	`sqlôe3_ch™ges
(
pDb
->
db
));

2080 
DB_CLOSE
: {

2081 
	`T˛_DñëeComm™d
(
öãΩ
, 
	`T˛_GëSåögFromObj
(
objv
[0], 0));

2091 
DB_COLLATE
: {

2092 
SqlCﬁœã
 *
pCﬁœã
;

2093 *
zName
;

2094 *
zS¸ùt
;

2095 
nS¸ùt
;

2096 if–
objc
!=4 ){

2097 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "NAME SCRIPT");

2098  
TCL_ERROR
;

2100 
zName
 = 
	`T˛_GëSåögFromObj
(
objv
[2], 0);

2101 
zS¸ùt
 = 
	`T˛_GëSåögFromObj
(
objv
[3], &
nS¸ùt
);

2102 
pCﬁœã
 = (
SqlCﬁœã
*)
	`T˛_AŒoc
–(*pCﬁœãË+ 
nS¸ùt
 + 1 );

2103 if–
pCﬁœã
==0 )  
TCL_ERROR
;

2104 
pCﬁœã
->
öãΩ
 = interp;

2105 
pCﬁœã
->
pNext
 = 
pDb
->pCollate;

2106 
pCﬁœã
->
zS¸ùt
 = (*)&pCollate[1];

2107 
pDb
->
pCﬁœã
 =ÖCollate;

2108 
	`mem˝y
(
pCﬁœã
->
zS¸ùt
, zS¸ùt, 
nS¸ùt
+1);

2109 if–
	`sqlôe3_¸óã_cﬁœti⁄
(
pDb
->
db
, 
zName
, 
SQLITE_UTF8
,

2110 
pCﬁœã
, 
t˛SqlCﬁœã
) ){

2111 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3_îrmsg
(
pDb
->
db
), 
TCL_VOLATILE
);

2112  
TCL_ERROR
;

2123 
DB_COLLATION_NEEDED
: {

2124 if–
objc
!=3 ){

2125 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "SCRIPT");

2126  
TCL_ERROR
;

2128 if–
pDb
->
pCﬁœãNìded
 ){

2129 
	`T˛_De¸RefCou¡
(
pDb
->
pCﬁœãNìded
);

2131 
pDb
->
pCﬁœãNìded
 = 
	`T˛_Du∂iˇãObj
(
objv
[2]);

2132 
	`T˛_In¸RefCou¡
(
pDb
->
pCﬁœãNìded
);

2133 
	`sqlôe3_cﬁœti⁄_√eded
(
pDb
->
db
,ÖDb, 
t˛CﬁœãNìded
);

2144 
DB_COMMIT_HOOK
: {

2145 if–
objc
>3 ){

2146 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "?CALLBACK?");

2147  
TCL_ERROR
;

2148 }if–
objc
==2 ){

2149 if–
pDb
->
zCommô
 ){

2150 
	`T˛_AµídResu…
(
öãΩ
, 
pDb
->
zCommô
, (*)0);

2153 c⁄° *
zCommô
;

2154 
Àn
;

2155 if–
pDb
->
zCommô
 ){

2156 
	`T˛_Fªe
(
pDb
->
zCommô
);

2158 
zCommô
 = 
	`T˛_GëSåögFromObj
(
objv
[2], &
Àn
);

2159 if–
zCommô
 && 
Àn
>0 ){

2160 
pDb
->
zCommô
 = 
	`T˛_AŒoc
–
Àn
 + 1 );

2161 
	`mem˝y
(
pDb
->
zCommô
, zCommô, 
Àn
+1);

2163 
pDb
->
zCommô
 = 0;

2165 if–
pDb
->
zCommô
 ){

2166 
pDb
->
öãΩ
 = interp;

2167 
	`sqlôe3_commô_hook
(
pDb
->
db
, 
DbCommôH™dÀr
,ÖDb);

2169 
	`sqlôe3_commô_hook
(
pDb
->
db
, 0, 0);

2181 
DB_COMPLETE
: {

2182 #i‚de‡
SQLITE_OMIT_COMPLETE


2183 
T˛_Obj
 *
pResu…
;

2184 
isCom∂ëe
;

2185 if–
objc
!=3 ){

2186 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "SQL");

2187  
TCL_ERROR
;

2189 
isCom∂ëe
 = 
	`sqlôe3_com∂ëe
–
	`T˛_GëSåögFromObj
(
objv
[2], 0) );

2190 
pResu…
 = 
	`T˛_GëObjResu…
(
öãΩ
);

2191 
	`T˛_SëBoﬁónObj
(
pResu…
, 
isCom∂ëe
);

2213 
DB_COPY
: {

2214 *
zTabÀ
;

2215 *
zFûe
;

2216 *
zC⁄Êi˘
;

2217 
sqlôe3_°mt
 *
pStmt
;

2218 
nCﬁ
;

2219 
nByã
;

2220 
i
, 
j
;

2221 
nSï
;

2222 
nNuŒ
;

2223 *
zSql
;

2224 *
zLöe
;

2225 **
azCﬁ
;

2226 c⁄° *
zCommô
;

2227 
FILE
 *
ö
;

2228 
löío
 = 0;

2229 
zLöeNum
[80];

2230 
T˛_Obj
 *
pResu…
;

2232 c⁄° *
zSï
;

2233 c⁄° *
zNuŒ
;

2234 if–
objc
<5 || objc>7 ){

2235 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
,

2237  
TCL_ERROR
;

2239 if–
objc
>=6 ){

2240 
zSï
 = 
	`T˛_GëSåögFromObj
(
objv
[5], 0);

2242 
zSï
 = "\t";

2244 if–
objc
>=7 ){

2245 
zNuŒ
 = 
	`T˛_GëSåögFromObj
(
objv
[6], 0);

2247 
zNuŒ
 = "";

2249 
zC⁄Êi˘
 = 
	`T˛_GëSåögFromObj
(
objv
[2], 0);

2250 
zTabÀ
 = 
	`T˛_GëSåögFromObj
(
objv
[3], 0);

2251 
zFûe
 = 
	`T˛_GëSåögFromObj
(
objv
[4], 0);

2252 
nSï
 = 
	`°æí30
(
zSï
);

2253 
nNuŒ
 = 
	`°æí30
(
zNuŒ
);

2254 if–
nSï
==0 ){

2255 
	`T˛_AµídResu…
(
öãΩ
,"Error:Çon-null separatorÑequired for copy",

2257  
TCL_ERROR
;

2259 if(
	`°rcmp
(
zC⁄Êi˘
, "rollback") != 0 &&

2260 
	`°rcmp
(
zC⁄Êi˘
, "abort" ) != 0 &&

2261 
	`°rcmp
(
zC⁄Êi˘
, "fail" ) != 0 &&

2262 
	`°rcmp
(
zC⁄Êi˘
, "ignore" ) != 0 &&

2263 
	`°rcmp
(
zC⁄Êi˘
, "replace" ) != 0 ) {

2264 
	`T˛_AµídResu…
(
öãΩ
, "Eº‹: \"", 
zC⁄Êi˘
,

2267  
TCL_ERROR
;

2269 
zSql
 = 
	`sqlôe3_m¥ötf
("SELECT * FROM '%q'", 
zTabÀ
);

2270 if–
zSql
==0 ){

2271 
	`T˛_AµídResu…
(
öãΩ
, "Eº‹:ÇÿsuchÅabÀ: ", 
zTabÀ
, (*)0);

2272  
TCL_ERROR
;

2274 
nByã
 = 
	`°æí30
(
zSql
);

2275 
rc
 = 
	`sqlôe3_¥ï¨e
(
pDb
->
db
, 
zSql
, -1, &
pStmt
, 0);

2276 
	`sqlôe3_‰ì
(
zSql
);

2277 if–
rc
 ){

2278 
	`T˛_AµídResu…
(
öãΩ
, "Eº‹: ", 
	`sqlôe3_îrmsg
(
pDb
->
db
), (*)0);

2279 
nCﬁ
 = 0;

2281 
nCﬁ
 = 
	`sqlôe3_cﬁumn_cou¡
(
pStmt
);

2283 
	`sqlôe3_föÆize
(
pStmt
);

2284 if–
nCﬁ
==0 ) {

2285  
TCL_ERROR
;

2287 
zSql
 = 
	`mÆloc
–
nByã
 + 50 + 
nCﬁ
*2 );

2288 if–
zSql
==0 ) {

2289 
	`T˛_AµídResu…
(
öãΩ
, "Error: can't malloc()", (*)0);

2290  
TCL_ERROR
;

2292 
	`sqlôe3_¢¥ötf
(
nByã
+50, 
zSql
, "INSERT OR %q INTO '%q' VALUES(?",

2293 
zC⁄Êi˘
, 
zTabÀ
);

2294 
j
 = 
	`°æí30
(
zSql
);

2295 
i
=1; i<
nCﬁ
; i++){

2296 
zSql
[
j
++] = ',';

2297 
zSql
[
j
++] = '?';

2299 
zSql
[
j
++] = ')';

2300 
zSql
[
j
] = 0;

2301 
rc
 = 
	`sqlôe3_¥ï¨e
(
pDb
->
db
, 
zSql
, -1, &
pStmt
, 0);

2302 
	`‰ì
(
zSql
);

2303 if–
rc
 ){

2304 
	`T˛_AµídResu…
(
öãΩ
, "Eº‹: ", 
	`sqlôe3_îrmsg
(
pDb
->
db
), (*)0);

2305 
	`sqlôe3_föÆize
(
pStmt
);

2306  
TCL_ERROR
;

2308 
ö
 = 
	`f›í
(
zFûe
, "rb");

2309 if–
ö
==0 ){

2310 
	`T˛_AµídResu…
(
öãΩ
, "Eº‹: c™nŸ o≥¿fûe: ", 
zFûe
, 
NULL
);

2311 
	`sqlôe3_föÆize
(
pStmt
);

2312  
TCL_ERROR
;

2314 
azCﬁ
 = 
	`mÆloc
–◊zCﬁ[0])*(
nCﬁ
+1) );

2315 if–
azCﬁ
==0 ) {

2316 
	`T˛_AµídResu…
(
öãΩ
, "Error: can't malloc()", (*)0);

2317 
	`f˛o£
(
ö
);

2318  
TCL_ERROR
;

2320 ()
	`sqlôe3_exec
(
pDb
->
db
, "BEGIN", 0, 0, 0);

2321 
zCommô
 = "COMMIT";

2322  (
zLöe
 = 
	`loˇl_gëlöe
(0, 
ö
))!=0 ){

2323 *
z
;

2324 
löío
++;

2325 
azCﬁ
[0] = 
zLöe
;

2326 
i
=0, 
z
=
zLöe
; *z; z++){

2327 if–*
z
==
zSï
[0] && 
	`°∫cmp
(z, zSï, 
nSï
)==0 ){

2328 *
z
 = 0;

2329 
i
++;

2330 if–
i
<
nCﬁ
 ){

2331 
azCﬁ
[
i
] = &
z
[
nSï
];

2332 
z
 +
nSï
-1;

2336 if–
i
+1!=
nCﬁ
 ){

2337 *
zEº
;

2338 
nEº
 = 
	`°æí30
(
zFûe
) + 200;

2339 
zEº
 = 
	`mÆloc
(
nEº
);

2340 if–
zEº
 ){

2341 
	`sqlôe3_¢¥ötf
(
nEº
, 
zEº
,

2343 
zFûe
, 
löío
, 
nCﬁ
, 
i
+1);

2344 
	`T˛_AµídResu…
(
öãΩ
, 
zEº
, (*)0);

2345 
	`‰ì
(
zEº
);

2347 
zCommô
 = "ROLLBACK";

2350 
i
=0; i<
nCﬁ
; i++){

2352 if–(
nNuŒ
>0 && 
	`°rcmp
(
azCﬁ
[
i
], 
zNuŒ
)==0)

2353 || 
	`°æí30
(
azCﬁ
[
i
])==0

2355 
	`sqlôe3_böd_nuŒ
(
pStmt
, 
i
+1);

2357 
	`sqlôe3_böd_ãxt
(
pStmt
, 
i
+1, 
azCﬁ
[i], -1, 
SQLITE_STATIC
);

2360 
	`sqlôe3_°ï
(
pStmt
);

2361 
rc
 = 
	`sqlôe3_ª£t
(
pStmt
);

2362 
	`‰ì
(
zLöe
);

2363 if–
rc
!=
SQLITE_OK
 ){

2364 
	`T˛_AµídResu…
(
öãΩ
,"Eº‹: ", 
	`sqlôe3_îrmsg
(
pDb
->
db
), (*)0);

2365 
zCommô
 = "ROLLBACK";

2369 
	`‰ì
(
azCﬁ
);

2370 
	`f˛o£
(
ö
);

2371 
	`sqlôe3_föÆize
(
pStmt
);

2372 ()
	`sqlôe3_exec
(
pDb
->
db
, 
zCommô
, 0, 0, 0);

2374 if–
zCommô
[0] == 'C' ){

2376 
pResu…
 = 
	`T˛_GëObjResu…
(
öãΩ
);

2377 
	`T˛_SëI¡Obj
(
pResu…
, 
löío
);

2378 
rc
 = 
TCL_OK
;

2381 
	`sqlôe3_¢¥ötf
((
zLöeNum
), zLöeNum,"%d",
löío
);

2382 
	`T˛_AµídResu…
(
öãΩ
,", faûed whûê¥o˚ssögÜöe: ",
zLöeNum
,

2384 
rc
 = 
TCL_ERROR
;

2395 
DB_ENABLE_LOAD_EXTENSION
: {

2396 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


2397 
⁄off
;

2398 if–
objc
!=3 ){

2399 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "BOOLEAN");

2400  
TCL_ERROR
;

2402 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[2], &
⁄off
) ){

2403  
TCL_ERROR
;

2405 
	`sqlôe3_íabÀ_lﬂd_exãnsi⁄
(
pDb
->
db
, 
⁄off
);

2408 
	`T˛_AµídResu…
(
öãΩ
, "extensionÜoading isÅurned offát compile-time",

2410  
TCL_ERROR
;

2420 
DB_ERRORCODE
: {

2421 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
	`sqlôe3_îrcode
(
pDb
->
db
)));

2432 
DB_EXISTS
:

2433 
DB_ONECOLUMN
: {

2434 
T˛_Obj
 *
pResu…
 = 0;

2435 
DbEvÆC⁄ãxt
 
sEvÆ
;

2436 if–
objc
!=3 ){

2437 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "SQL");

2438  
TCL_ERROR
;

2441 
	`dbEvÆInô
(&
sEvÆ
, 
pDb
, 
objv
[2], 0);

2442 
rc
 = 
	`dbEvÆSãp
(&
sEvÆ
);

2443 if–
choi˚
==
DB_ONECOLUMN
 ){

2444 if–
rc
==
TCL_OK
 ){

2445 
pResu…
 = 
	`dbEvÆCﬁumnVÆue
(&
sEvÆ
, 0);

2446 }if–
rc
==
TCL_BREAK
 ){

2447 
	`T˛_Re£tResu…
(
öãΩ
);

2449 }if–
rc
==
TCL_BREAK
 ||Ñc==
TCL_OK
 ){

2450 
pResu…
 = 
	`T˛_NewBoﬁónObj
(
rc
==
TCL_OK
);

2452 
	`dbEvÆFöÆize
(&
sEvÆ
);

2453 if–
pResu…
 ) 
	`T˛_SëObjResu…
(
öãΩ
,ÖResult);

2455 if–
rc
==
TCL_BREAK
 ){

2456 
rc
 = 
TCL_OK
;

2470 
DB_EVAL
: {

2471 if–
objc
<3 || objc>5 ){

2472 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "SQL ?ARRAY-NAME? ?SCRIPT?");

2473  
TCL_ERROR
;

2476 if–
objc
==3 ){

2477 
DbEvÆC⁄ãxt
 
sEvÆ
;

2478 
T˛_Obj
 *
pRë
 = 
	`T˛_NewObj
();

2479 
	`T˛_In¸RefCou¡
(
pRë
);

2480 
	`dbEvÆInô
(&
sEvÆ
, 
pDb
, 
objv
[2], 0);

2481  
TCL_OK
==(
rc
 = 
	`dbEvÆSãp
(&
sEvÆ
)) ){

2482 
i
;

2483 
nCﬁ
;

2484 
	`dbEvÆRowInfo
(&
sEvÆ
, &
nCﬁ
, 0);

2485 
i
=0; i<
nCﬁ
; i++){

2486 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`dbEvÆCﬁumnVÆue
(&
sEvÆ
, 
i
));

2489 
	`dbEvÆFöÆize
(&
sEvÆ
);

2490 if–
rc
==
TCL_BREAK
 ){

2491 
	`T˛_SëObjResu…
(
öãΩ
, 
pRë
);

2492 
rc
 = 
TCL_OK
;

2494 
	`T˛_De¸RefCou¡
(
pRë
);

2496 
Clõ¡D©a
 
cd2
[2];

2497 
DbEvÆC⁄ãxt
 *
p
;

2498 
T˛_Obj
 *
pAºay
 = 0;

2499 
T˛_Obj
 *
pS¸ùt
;

2501 if–
objc
==5 && *(*)
	`T˛_GëSåög
(
objv
[3]) ){

2502 
pAºay
 = 
objv
[3];

2504 
pS¸ùt
 = 
objv
[
objc
-1];

2505 
	`T˛_In¸RefCou¡
(
pS¸ùt
);

2507 
p
 = (
DbEvÆC⁄ãxt
 *)
	`T˛_AŒoc
((DbEvalContext));

2508 
	`dbEvÆInô
(
p
, 
pDb
, 
objv
[2], 
pAºay
);

2510 
cd2
[0] = (*)
p
;

2511 
cd2
[1] = (*)
pS¸ùt
;

2512 
rc
 = 
	`DbEvÆNextCmd
(
cd2
, 
öãΩ
, 
TCL_OK
);

2523 
DB_FUNCTION
: {

2524 
Êags
 = 
SQLITE_UTF8
;

2525 
SqlFunc
 *
pFunc
;

2526 
T˛_Obj
 *
pS¸ùt
;

2527 *
zName
;

2528 
nArg
 = -1;

2529 
i
;

2530 if–
objc
<4 ){

2531 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "NAME ?SWITCHES? SCRIPT");

2532  
TCL_ERROR
;

2534 
i
=3; i<(
objc
-1); i++){

2535 c⁄° *
z
 = 
	`T˛_GëSåög
(
objv
[
i
]);

2536 
n
 = 
	`°æí30
(
z
);

2537 if–
n
>2 && 
	`°∫cmp
(
z
, "-argcount",n)==0 ){

2538 if–
i
==(
objc
-2) ){

2539 
	`T˛_AµídResu…
(
öãΩ
, "›ti⁄Ñequúe†™árgumít: ", 
z
, 0);

2540  
TCL_ERROR
;

2542 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[
i
+1], &
nArg
ËË 
TCL_ERROR
;

2543 if–
nArg
<0 ){

2544 
	`T˛_AµídResu…
(
öãΩ
, "number ofárguments must beÇon-negative",

2546  
TCL_ERROR
;

2548 
i
++;

2550 if–
n
>2 && 
	`°∫cmp
(
z
, "-deterministic",n)==0 ){

2551 
Êags
 |
SQLITE_DETERMINISTIC
;

2553 
	`T˛_AµídResu…
(
öãΩ
, "bad o±i⁄ \"", 
z
,

2556  
TCL_ERROR
;

2560 
pS¸ùt
 = 
objv
[
objc
-1];

2561 
zName
 = 
	`T˛_GëSåögFromObj
(
objv
[2], 0);

2562 
pFunc
 = 
	`födSqlFunc
(
pDb
, 
zName
);

2563 if–
pFunc
==0 )  
TCL_ERROR
;

2564 if–
pFunc
->
pS¸ùt
 ){

2565 
	`T˛_De¸RefCou¡
(
pFunc
->
pS¸ùt
);

2567 
pFunc
->
pS¸ùt
 =ÖScript;

2568 
	`T˛_In¸RefCou¡
(
pS¸ùt
);

2569 
pFunc
->
u£EvÆObjv
 = 
	`ß„ToU£EvÆObjv
(
öãΩ
, 
pS¸ùt
);

2570 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
pDb
->
db
, 
zName
, 
nArg
, 
Êags
,

2571 
pFunc
, 
t˛SqlFunc
, 0, 0);

2572 if–
rc
!=
SQLITE_OK
 ){

2573 
rc
 = 
TCL_ERROR
;

2574 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3_îrmsg
(
pDb
->
db
), 
TCL_VOLATILE
);

2582 
DB_INCRBLOB
: {

2583 #ifde‡
SQLITE_OMIT_INCRBLOB


2584 
	`T˛_AµídResu…
(
öãΩ
, "incrblobÇotávailable inÅhis build", (*)0);

2585  
TCL_ERROR
;

2587 
isRód⁄ly
 = 0;

2588 c⁄° *
zDb
 = "main";

2589 c⁄° *
zTabÀ
;

2590 c⁄° *
zCﬁumn
;

2591 
T˛_WideI¡
 
iRow
;

2594 if–
objc
>3 && 
	`°rcmp
(
	`T˛_GëSåög
(
objv
[2]), "-readonly")==0 ){

2595 
isRód⁄ly
 = 1;

2598 if–
objc
!=(5+
isRód⁄ly
) && objc!=(6+isReadonly) ){

2599 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "?-readonly? ?DB? TABLE COLUMN ROWID");

2600  
TCL_ERROR
;

2603 if–
objc
==(6+
isRód⁄ly
) ){

2604 
zDb
 = 
	`T˛_GëSåög
(
objv
[2]);

2606 
zTabÀ
 = 
	`T˛_GëSåög
(
objv
[
objc
-3]);

2607 
zCﬁumn
 = 
	`T˛_GëSåög
(
objv
[
objc
-2]);

2608 
rc
 = 
	`T˛_GëWideI¡FromObj
(
öãΩ
, 
objv
[
objc
-1], &
iRow
);

2610 if–
rc
==
TCL_OK
 ){

2611 
rc
 = 
	`¸óãIn¸blobCh™√l
(

2612 
öãΩ
, 
pDb
, 
zDb
, 
zTabÀ
, 
zCﬁumn
, (
sqlôe3_öt64
)
iRow
, 
isRód⁄ly


2625 
DB_INTERRUPT
: {

2626 
	`sqlôe3_öãºu±
(
pDb
->
db
);

2638 
DB_NULLVALUE
: {

2639 if–
objc
!=2 && objc!=3 ){

2640 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "NULLVALUE");

2641  
TCL_ERROR
;

2643 if–
objc
==3 ){

2644 
Àn
;

2645 *
zNuŒ
 = 
	`T˛_GëSåögFromObj
(
objv
[2], &
Àn
);

2646 if–
pDb
->
zNuŒ
 ){

2647 
	`T˛_Fªe
(
pDb
->
zNuŒ
);

2649 if–
zNuŒ
 && 
Àn
>0 ){

2650 
pDb
->
zNuŒ
 = 
	`T˛_AŒoc
–
Àn
 + 1 );

2651 
	`mem˝y
(
pDb
->
zNuŒ
, zNuŒ, 
Àn
);

2652 
pDb
->
zNuŒ
[
Àn
] = '\0';

2654 
pDb
->
zNuŒ
 = 0;

2657 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
(
pDb
->
zNuŒ
, -1));

2666 
DB_LAST_INSERT_ROWID
: {

2667 
T˛_Obj
 *
pResu…
;

2668 
T˛_WideI¡
 
rowid
;

2669 if–
objc
!=2 ){

2670 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "");

2671  
TCL_ERROR
;

2673 
rowid
 = 
	`sqlôe3_œ°_ö£π_rowid
(
pDb
->
db
);

2674 
pResu…
 = 
	`T˛_GëObjResu…
(
öãΩ
);

2675 
	`T˛_SëWideI¡Obj
(
pResu…
, 
rowid
);

2688 
DB_PROGRESS
: {

2689 if–
objc
==2 ){

2690 if–
pDb
->
zProgªss
 ){

2691 
	`T˛_AµídResu…
(
öãΩ
, 
pDb
->
zProgªss
, (*)0);

2693 }if–
objc
==4 ){

2694 *
zProgªss
;

2695 
Àn
;

2696 
N
;

2697 if–
TCL_OK
!=
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
N
) ){

2698  
TCL_ERROR
;

2700 if–
pDb
->
zProgªss
 ){

2701 
	`T˛_Fªe
(
pDb
->
zProgªss
);

2703 
zProgªss
 = 
	`T˛_GëSåögFromObj
(
objv
[3], &
Àn
);

2704 if–
zProgªss
 && 
Àn
>0 ){

2705 
pDb
->
zProgªss
 = 
	`T˛_AŒoc
–
Àn
 + 1 );

2706 
	`mem˝y
(
pDb
->
zProgªss
, zProgªss, 
Àn
+1);

2708 
pDb
->
zProgªss
 = 0;

2710 #i‚de‡
SQLITE_OMIT_PROGRESS_CALLBACK


2711 if–
pDb
->
zProgªss
 ){

2712 
pDb
->
öãΩ
 = interp;

2713 
	`sqlôe3_¥ogªss_h™dÀr
(
pDb
->
db
, 
N
, 
DbProgªssH™dÀr
,ÖDb);

2715 
	`sqlôe3_¥ogªss_h™dÀr
(
pDb
->
db
, 0, 0, 0);

2719 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "N CALLBACK");

2720  
TCL_ERROR
;

2731 
DB_PROFILE
: {

2732 if–
objc
>3 ){

2733 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "?CALLBACK?");

2734  
TCL_ERROR
;

2735 }if–
objc
==2 ){

2736 if–
pDb
->
zProfûe
 ){

2737 
	`T˛_AµídResu…
(
öãΩ
, 
pDb
->
zProfûe
, (*)0);

2740 *
zProfûe
;

2741 
Àn
;

2742 if–
pDb
->
zProfûe
 ){

2743 
	`T˛_Fªe
(
pDb
->
zProfûe
);

2745 
zProfûe
 = 
	`T˛_GëSåögFromObj
(
objv
[2], &
Àn
);

2746 if–
zProfûe
 && 
Àn
>0 ){

2747 
pDb
->
zProfûe
 = 
	`T˛_AŒoc
–
Àn
 + 1 );

2748 
	`mem˝y
(
pDb
->
zProfûe
, zProfûe, 
Àn
+1);

2750 
pDb
->
zProfûe
 = 0;

2752 #i‡!
	`deföed
(
SQLITE_OMIT_TRACE
Ë&& !deföed(
SQLITE_OMIT_FLOATING_POINT
) && \

2753 !
	`deföed
(
SQLITE_OMIT_DEPRECATED
)

2754 if–
pDb
->
zProfûe
 ){

2755 
pDb
->
öãΩ
 = interp;

2756 
	`sqlôe3_¥ofûe
(
pDb
->
db
, 
DbProfûeH™dÀr
,ÖDb);

2758 
	`sqlôe3_¥ofûe
(
pDb
->
db
, 0, 0);

2770 
DB_REKEY
: {

2771 #i‡
	`deföed
(
SQLITE_HAS_CODEC
Ë&& !deföed(
SQLITE_OMIT_CODEC_FROM_TCL
)

2772 
nKey
;

2773 *
pKey
;

2775 if–
objc
!=3 ){

2776 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "KEY");

2777  
TCL_ERROR
;

2779 #i‡
	`deföed
(
SQLITE_HAS_CODEC
Ë&& !deföed(
SQLITE_OMIT_CODEC_FROM_TCL
)

2780 
pKey
 = 
	`T˛_GëByãAºayFromObj
(
objv
[2], &
nKey
);

2781 
rc
 = 
	`sqlôe3_ªkey
(
pDb
->
db
, 
pKey
, 
nKey
);

2782 if–
rc
 ){

2783 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3_îr°r
(
rc
), (*)0);

2784 
rc
 = 
TCL_ERROR
;

2795 
DB_RESTORE
: {

2796 c⁄° *
zSrcFûe
;

2797 c⁄° *
zDe°Db
;

2798 
sqlôe3
 *
pSrc
;

2799 
sqlôe3_backup
 *
pBackup
;

2800 
nTimeout
 = 0;

2802 if–
objc
==3 ){

2803 
zDe°Db
 = "main";

2804 
zSrcFûe
 = 
	`T˛_GëSåög
(
objv
[2]);

2805 }if–
objc
==4 ){

2806 
zDe°Db
 = 
	`T˛_GëSåög
(
objv
[2]);

2807 
zSrcFûe
 = 
	`T˛_GëSåög
(
objv
[3]);

2809 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "?DATABASE? FILENAME");

2810  
TCL_ERROR
;

2812 
rc
 = 
	`sqlôe3_›í_v2
(
zSrcFûe
, &
pSrc
,

2813 
SQLITE_OPEN_READONLY
 | 
pDb
->
›íFœgs
, 0);

2814 if–
rc
!=
SQLITE_OK
 ){

2815 
	`T˛_AµídResu…
(
öãΩ
, "cannot open source database: ",

2816 
	`sqlôe3_îrmsg
(
pSrc
), (*)0);

2817 
	`sqlôe3_˛o£
(
pSrc
);

2818  
TCL_ERROR
;

2820 
pBackup
 = 
	`sqlôe3_backup_öô
(
pDb
->
db
, 
zDe°Db
, 
pSrc
, "main");

2821 if–
pBackup
==0 ){

2822 
	`T˛_AµídResu…
(
öãΩ
, "restore failed: ",

2823 
	`sqlôe3_îrmsg
(
pDb
->
db
), (*)0);

2824 
	`sqlôe3_˛o£
(
pSrc
);

2825  
TCL_ERROR
;

2827  (
rc
 = 
	`sqlôe3_backup_°ï
(
pBackup
,100))==
SQLITE_OK


2828 || 
rc
==
SQLITE_BUSY
 ){

2829 if–
rc
==
SQLITE_BUSY
 ){

2830 if–
nTimeout
++ >= 3 ) ;

2831 
	`sqlôe3_¶ìp
(100);

2834 
	`sqlôe3_backup_föish
(
pBackup
);

2835 if–
rc
==
SQLITE_DONE
 ){

2836 
rc
 = 
TCL_OK
;

2837 }if–
rc
==
SQLITE_BUSY
 ||Ñc==
SQLITE_LOCKED
 ){

2838 
	`T˛_AµídResu…
(
öãΩ
, "restore failed: source database busy",

2840 
rc
 = 
TCL_ERROR
;

2842 
	`T˛_AµídResu…
(
öãΩ
, "restore failed: ",

2843 
	`sqlôe3_îrmsg
(
pDb
->
db
), (*)0);

2844 
rc
 = 
TCL_ERROR
;

2846 
	`sqlôe3_˛o£
(
pSrc
);

2856 
DB_STATUS
: {

2857 
v
;

2858 c⁄° *
zOp
;

2859 if–
objc
!=3 ){

2860 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "(step|sort|autoindex)");

2861  
TCL_ERROR
;

2863 
zOp
 = 
	`T˛_GëSåög
(
objv
[2]);

2864 if–
	`°rcmp
(
zOp
, "step")==0 ){

2865 
v
 = 
pDb
->
nSãp
;

2866 }if–
	`°rcmp
(
zOp
, "sort")==0 ){

2867 
v
 = 
pDb
->
nS‹t
;

2868 }if–
	`°rcmp
(
zOp
, "autoindex")==0 ){

2869 
v
 = 
pDb
->
nIndex
;

2871 
	`T˛_AµídResu…
(
öãΩ
,

2874  
TCL_ERROR
;

2876 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
v
));

2885 
DB_TIMEOUT
: {

2886 
ms
;

2887 if–
objc
!=3 ){

2888 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "MILLISECONDS");

2889  
TCL_ERROR
;

2891 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
ms
ËË 
TCL_ERROR
;

2892 
	`sqlôe3_busy_timeout
(
pDb
->
db
, 
ms
);

2902 
DB_TOTAL_CHANGES
: {

2903 
T˛_Obj
 *
pResu…
;

2904 if–
objc
!=2 ){

2905 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "");

2906  
TCL_ERROR
;

2908 
pResu…
 = 
	`T˛_GëObjResu…
(
öãΩ
);

2909 
	`T˛_SëI¡Obj
(
pResu…
, 
	`sqlôe3_tŸÆ_ch™ges
(
pDb
->
db
));

2919 
DB_TRACE
: {

2920 if–
objc
>3 ){

2921 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "?CALLBACK?");

2922  
TCL_ERROR
;

2923 }if–
objc
==2 ){

2924 if–
pDb
->
zTø˚
 ){

2925 
	`T˛_AµídResu…
(
öãΩ
, 
pDb
->
zTø˚
, (*)0);

2928 *
zTø˚
;

2929 
Àn
;

2930 if–
pDb
->
zTø˚
 ){

2931 
	`T˛_Fªe
(
pDb
->
zTø˚
);

2933 
zTø˚
 = 
	`T˛_GëSåögFromObj
(
objv
[2], &
Àn
);

2934 if–
zTø˚
 && 
Àn
>0 ){

2935 
pDb
->
zTø˚
 = 
	`T˛_AŒoc
–
Àn
 + 1 );

2936 
	`mem˝y
(
pDb
->
zTø˚
, zTø˚, 
Àn
+1);

2938 
pDb
->
zTø˚
 = 0;

2940 #i‡!
	`deföed
(
SQLITE_OMIT_TRACE
Ë&& !deföed(
SQLITE_OMIT_FLOATING_POINT
) && \

2941 !
	`deföed
(
SQLITE_OMIT_DEPRECATED
)

2942 if–
pDb
->
zTø˚
 ){

2943 
pDb
->
öãΩ
 = interp;

2944 
	`sqlôe3_åa˚
(
pDb
->
db
, 
DbTø˚H™dÀr
,ÖDb);

2946 
	`sqlôe3_åa˚
(
pDb
->
db
, 0, 0);

2959 
DB_TRACE_V2
: {

2960 if–
objc
>4 ){

2961 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "?CALLBACK? ?MASK?");

2962  
TCL_ERROR
;

2963 }if–
objc
==2 ){

2964 if–
pDb
->
zTø˚V2
 ){

2965 
	`T˛_AµídResu…
(
öãΩ
, 
pDb
->
zTø˚V2
, (*)0);

2968 *
zTø˚V2
;

2969 
Àn
;

2970 
T˛_WideI¡
 
wMask
 = 0;

2971 if–
objc
==4 ){

2972 c⁄° *
TTYPE_°rs
[] = {

2975 
	eTTYPE_íum
 {

2976 
TTYPE_STMT
, 
TTYPE_PROFILE
, 
TTYPE_ROW
, 
TTYPE_CLOSE


2978 
i
;

2979 if–
TCL_OK
!=
	`T˛_Li°ObjLígth
(
öãΩ
, 
objv
[3], &
Àn
) ){

2980  
TCL_ERROR
;

2982 
i
=0; i<
Àn
; i++){

2983 
T˛_Obj
 *
pObj
;

2984 
ây≥
;

2985 if–
TCL_OK
!=
	`T˛_Li°ObjIndex
(
öãΩ
, 
objv
[3], 
i
, &
pObj
) ){

2986  
TCL_ERROR
;

2988 if–
	`T˛_GëIndexFromObj
(
öãΩ
, 
pObj
, 
TTYPE_°rs
, "traceÅype",

2989 0, &
ây≥
)!=
TCL_OK
 ){

2990 
T˛_WideI¡
 
wTy≥
;

2991 
T˛_Obj
 *
pEº‹
 = 
	`T˛_Du∂iˇãObj
(
	`T˛_GëObjResu…
(
öãΩ
));

2992 
	`T˛_In¸RefCou¡
(
pEº‹
);

2993 if–
TCL_OK
==
	`T˛_GëWideI¡FromObj
(
öãΩ
, 
pObj
, &
wTy≥
) ){

2994 
	`T˛_De¸RefCou¡
(
pEº‹
);

2995 
wMask
 |
wTy≥
;

2997 
	`T˛_SëObjResu…
(
öãΩ
, 
pEº‹
);

2998 
	`T˛_De¸RefCou¡
(
pEº‹
);

2999  
TCL_ERROR
;

3002  (
TTYPE_íum
)
ây≥
 ){

3003 
TTYPE_STMT
: 
wMask
 |
SQLITE_TRACE_STMT
; ;

3004 
TTYPE_PROFILE
: 
wMask
 |
SQLITE_TRACE_PROFILE
; ;

3005 
TTYPE_ROW
: 
wMask
 |
SQLITE_TRACE_ROW
; ;

3006 
TTYPE_CLOSE
: 
wMask
 |
SQLITE_TRACE_CLOSE
; ;

3011 
wMask
 = 
SQLITE_TRACE_STMT
;

3013 if–
pDb
->
zTø˚V2
 ){

3014 
	`T˛_Fªe
(
pDb
->
zTø˚V2
);

3016 
zTø˚V2
 = 
	`T˛_GëSåögFromObj
(
objv
[2], &
Àn
);

3017 if–
zTø˚V2
 && 
Àn
>0 ){

3018 
pDb
->
zTø˚V2
 = 
	`T˛_AŒoc
–
Àn
 + 1 );

3019 
	`mem˝y
(
pDb
->
zTø˚V2
, zTø˚V2, 
Àn
+1);

3021 
pDb
->
zTø˚V2
 = 0;

3023 #i‡!
	`deföed
(
SQLITE_OMIT_TRACE
Ë&& !deföed(
SQLITE_OMIT_FLOATING_POINT
)

3024 if–
pDb
->
zTø˚V2
 ){

3025 
pDb
->
öãΩ
 = interp;

3026 
	`sqlôe3_åa˚_v2
(
pDb
->
db
, ()
wMask
, 
DbTø˚V2H™dÀr
,ÖDb);

3028 
	`sqlôe3_åa˚_v2
(
pDb
->
db
, 0, 0, 0);

3046 
DB_TRANSACTION
: {

3047 
T˛_Obj
 *
pS¸ùt
;

3048 c⁄° *
zBegö
 = "SAVEPOINT _tcl_transaction";

3049 if–
objc
!=3 && objc!=4 ){

3050 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "[TYPE] SCRIPT");

3051  
TCL_ERROR
;

3054 if–
pDb
->
nTønß˘i⁄
==0 && 
objc
==4 ){

3055 c⁄° *
TTYPE_°rs
[] = {

3058 
	eTTYPE_íum
 {

3059 
TTYPE_DEFERRED
, 
TTYPE_EXCLUSIVE
, 
TTYPE_IMMEDIATE


3061 
ây≥
;

3062 if–
	`T˛_GëIndexFromObj
(
öãΩ
, 
objv
[2], 
TTYPE_°rs
, "transactionÅype",

3063 0, &
ây≥
) ){

3064  
TCL_ERROR
;

3066  (
TTYPE_íum
)
ây≥
 ){

3067 
TTYPE_DEFERRED
: ; ;

3068 
TTYPE_EXCLUSIVE
: 
zBegö
 = "BEGIN EXCLUSIVE"; ;

3069 
TTYPE_IMMEDIATE
: 
zBegö
 = "BEGIN IMMEDIATE"; ;

3072 
pS¸ùt
 = 
objv
[
objc
-1];

3075 
pDb
->
dißbÀAuth
++;

3076 
rc
 = 
	`sqlôe3_exec
(
pDb
->
db
, 
zBegö
, 0, 0, 0);

3077 
pDb
->
dißbÀAuth
--;

3078 if–
rc
!=
SQLITE_OK
 ){

3079 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3_îrmsg
(
pDb
->
db
), (*)0);

3080  
TCL_ERROR
;

3082 
pDb
->
nTønß˘i⁄
++;

3089 if–
	`DbU£Nª
() ){

3090 
	`T˛_NRAddCÆlback
(
öãΩ
, 
DbTønsPo°Cmd
, 
cd
, 0, 0, 0);

3091 ()
	`T˛_NREvÆObj
(
öãΩ
, 
pS¸ùt
, 0);

3093 
rc
 = 
	`DbTønsPo°Cmd
(&
cd
, 
öãΩ
, 
	`T˛_EvÆObjEx
(öãΩ, 
pS¸ùt
, 0));

3101 
DB_UNLOCK_NOTIFY
: {

3102 #i‚de‡
SQLITE_ENABLE_UNLOCK_NOTIFY


3103 
	`T˛_AµídResu…
(
öãΩ
, "unlock_notifyÇotávailable inÅhis build",

3105 
rc
 = 
TCL_ERROR
;

3107 if–
objc
!=2 && objc!=3 ){

3108 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "?SCRIPT?");

3109 
rc
 = 
TCL_ERROR
;

3111 (*
xNŸify
)(**, ) = 0;

3112 *
pNŸifyArg
 = 0;

3114 if–
pDb
->
pU∆ockNŸify
 ){

3115 
	`T˛_De¸RefCou¡
(
pDb
->
pU∆ockNŸify
);

3116 
pDb
->
pU∆ockNŸify
 = 0;

3119 if–
objc
==3 ){

3120 
xNŸify
 = 
DbU∆ockNŸify
;

3121 
pNŸifyArg
 = (*)
pDb
;

3122 
pDb
->
pU∆ockNŸify
 = 
objv
[2];

3123 
	`T˛_In¸RefCou¡
(
pDb
->
pU∆ockNŸify
);

3126 if–
	`sqlôe3_u∆ock_nŸify
(
pDb
->
db
, 
xNŸify
, 
pNŸifyArg
) ){

3127 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3_îrmsg
(
pDb
->
db
), (*)0);

3128 
rc
 = 
TCL_ERROR
;

3141 
DB_PREUPDATE
: {

3142 #i‚de‡
SQLITE_ENABLE_PREUPDATE_HOOK


3143 
	`T˛_AµídResu…
(
öãΩ
, "preupdate_hook was omittedát compile-time",

3145 
rc
 = 
TCL_ERROR
;

3147 c⁄° *
azSub
[] = {"count", "depth", "hook", "new", "old", 0};

3148 
	eDbPªupd©eSubCmd
 {

3149 
PRE_COUNT
, 
PRE_DEPTH
, 
PRE_HOOK
, 
PRE_NEW
, 
PRE_OLD


3151 
iSub
;

3153 if–
objc
<3 ){

3154 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "SUB-COMMAND ?ARGS?");

3156 if–
	`T˛_GëIndexFromObj
(
öãΩ
, 
objv
[2], 
azSub
, "sub-comm™d", 0, &
iSub
) ){

3157  
TCL_ERROR
;

3160  (
DbPªupd©eSubCmd
)
iSub
 ){

3161 
PRE_COUNT
: {

3162 
nCﬁ
 = 
	`sqlôe3_¥eupd©e_cou¡
(
pDb
->
db
);

3163 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
nCﬁ
));

3167 
PRE_HOOK
: {

3168 if–
objc
>4 ){

3169 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "hook ?SCRIPT?");

3170  
TCL_ERROR
;

3172 
	`DbHookCmd
(
öãΩ
, 
pDb
, (
objc
==4 ? 
objv
[3] : 0), &pDb->
pPªUpd©eHook
);

3176 
PRE_DEPTH
: {

3177 
T˛_Obj
 *
pRë
;

3178 if–
objc
!=3 ){

3179 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 3, 
objv
, "");

3180  
TCL_ERROR
;

3182 
pRë
 = 
	`T˛_NewI¡Obj
(
	`sqlôe3_¥eupd©e_dïth
(
pDb
->
db
));

3183 
	`T˛_SëObjResu…
(
öãΩ
, 
pRë
);

3187 
PRE_NEW
:

3188 
PRE_OLD
: {

3189 
iIdx
;

3190 
sqlôe3_vÆue
 *
pVÆue
;

3191 if–
objc
!=4 ){

3192 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 3, 
objv
, "INDEX");

3193  
TCL_ERROR
;

3195 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
iIdx
) ){

3196  
TCL_ERROR
;

3199 if–
iSub
==
PRE_OLD
 ){

3200 
rc
 = 
	`sqlôe3_¥eupd©e_ﬁd
(
pDb
->
db
, 
iIdx
, &
pVÆue
);

3202 
	`as£π
–
iSub
==
PRE_NEW
 );

3203 
rc
 = 
	`sqlôe3_¥eupd©e_√w
(
pDb
->
db
, 
iIdx
, &
pVÆue
);

3206 if–
rc
==
SQLITE_OK
 ){

3207 
T˛_Obj
 *
pObj
;

3208 
pObj
 = 
	`T˛_NewSåögObj
((*)
	`sqlôe3_vÆue_ãxt
(
pVÆue
), -1);

3209 
	`T˛_SëObjResu…
(
öãΩ
, 
pObj
);

3211 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3_îrmsg
(
pDb
->
db
), 0);

3212  
TCL_ERROR
;

3225 
DB_WAL_HOOK
:

3226 
DB_UPDATE_HOOK
:

3227 
DB_ROLLBACK_HOOK
: {

3231 
T˛_Obj
 **
µHook
 = 0;

3232 if–
choi˚
==
DB_WAL_HOOK
 ) 
µHook
 = &
pDb
->
pWÆHook
;

3233 if–
choi˚
==
DB_UPDATE_HOOK
 ) 
µHook
 = &
pDb
->
pUpd©eHook
;

3234 if–
choi˚
==
DB_ROLLBACK_HOOK
 ) 
µHook
 = &
pDb
->
pRﬁlbackHook
;

3235 if–
objc
>3 ){

3236 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "?SCRIPT?");

3237  
TCL_ERROR
;

3240 
	`DbHookCmd
(
öãΩ
, 
pDb
, (
objc
==3 ? 
objv
[2] : 0), 
µHook
);

3248 
DB_VERSION
: {

3249 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3_libvîsi⁄
(), 
TCL_STATIC
);

3255  
rc
;

3256 
	}
}

3258 #i‡
SQLITE_TCL_NRE


3263 
SQLITE_TCLAPI
 
	$DbObjCmdAd≠t‹
(

3264 *
cd
,

3265 
T˛_I¡îp
 *
öãΩ
,

3266 
objc
,

3267 
T˛_Obj
 *c⁄°*
objv


3269  
	`T˛_NRCÆlObjProc
(
öãΩ
, 
DbObjCmd
, 
cd
, 
objc
, 
objv
);

3270 
	}
}

3288 
SQLITE_TCLAPI
 
	$DbMaö
(

3289 *
cd
,

3290 
T˛_I¡îp
 *
öãΩ
,

3291 
objc
,

3292 
T˛_Obj
 *c⁄°*
objv


3294 
SqlôeDb
 *
p
;

3295 c⁄° *
zArg
;

3296 *
zEºMsg
;

3297 
i
;

3298 c⁄° *
zFûe
;

3299 c⁄° *
zVfs
 = 0;

3300 
Êags
;

3301 
T˛_DSåög
 
å™¶©edFûíame
;

3302 #i‡
	`deföed
(
SQLITE_HAS_CODEC
Ë&& !deföed(
SQLITE_OMIT_CODEC_FROM_TCL
)

3303 *
pKey
 = 0;

3304 
nKey
 = 0;

3306 
rc
;

3314 #ifde‡
SQLITE_TCL_DEFAULT_FULLMUTEX


3315 
Êags
 = 
SQLITE_OPEN_READWRITE
 | 
SQLITE_OPEN_CREATE
 | 
SQLITE_OPEN_FULLMUTEX
;

3317 
Êags
 = 
SQLITE_OPEN_READWRITE
 | 
SQLITE_OPEN_CREATE
 | 
SQLITE_OPEN_NOMUTEX
;

3320 if–
objc
==2 ){

3321 
zArg
 = 
	`T˛_GëSåögFromObj
(
objv
[1], 0);

3322 if–
	`°rcmp
(
zArg
,"-version")==0 ){

3323 
	`T˛_AµídResu…
(
öãΩ
,
	`sqlôe3_libvîsi⁄
(), (*)0);

3324  
TCL_OK
;

3326 if–
	`°rcmp
(
zArg
,"-sourceid")==0 ){

3327 
	`T˛_AµídResu…
(
öãΩ
,
	`sqlôe3_sour˚id
(), (*)0);

3328  
TCL_OK
;

3330 if–
	`°rcmp
(
zArg
,"-has-codec")==0 ){

3331 #i‡
	`deföed
(
SQLITE_HAS_CODEC
Ë&& !deföed(
SQLITE_OMIT_CODEC_FROM_TCL
)

3332 
	`T˛_AµídResu…
(
öãΩ
,"1",(*)0);

3334 
	`T˛_AµídResu…
(
öãΩ
,"0",(*)0);

3336  
TCL_OK
;

3339 
i
=3; i+1<
objc
; i+=2){

3340 
zArg
 = 
	`T˛_GëSåög
(
objv
[
i
]);

3341 if–
	`°rcmp
(
zArg
,"-key")==0 ){

3342 #i‡
	`deföed
(
SQLITE_HAS_CODEC
Ë&& !deföed(
SQLITE_OMIT_CODEC_FROM_TCL
)

3343 
pKey
 = 
	`T˛_GëByãAºayFromObj
(
objv
[
i
+1], &
nKey
);

3345 }if–
	`°rcmp
(
zArg
, "-vfs")==0 ){

3346 
zVfs
 = 
	`T˛_GëSåög
(
objv
[
i
+1]);

3347 }if–
	`°rcmp
(
zArg
, "-readonly")==0 ){

3348 
b
;

3349 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[
i
+1], &
b
ËË 
TCL_ERROR
;

3350 if–
b
 ){

3351 
Êags
 &~(
SQLITE_OPEN_READWRITE
|
SQLITE_OPEN_CREATE
);

3352 
Êags
 |
SQLITE_OPEN_READONLY
;

3354 
Êags
 &~
SQLITE_OPEN_READONLY
;

3355 
Êags
 |
SQLITE_OPEN_READWRITE
;

3357 }if–
	`°rcmp
(
zArg
, "-create")==0 ){

3358 
b
;

3359 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[
i
+1], &
b
ËË 
TCL_ERROR
;

3360 if–
b
 && (
Êags
 & 
SQLITE_OPEN_READONLY
)==0 ){

3361 
Êags
 |
SQLITE_OPEN_CREATE
;

3363 
Êags
 &~
SQLITE_OPEN_CREATE
;

3365 }if–
	`°rcmp
(
zArg
, "-nomutex")==0 ){

3366 
b
;

3367 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[
i
+1], &
b
ËË 
TCL_ERROR
;

3368 if–
b
 ){

3369 
Êags
 |
SQLITE_OPEN_NOMUTEX
;

3370 
Êags
 &~
SQLITE_OPEN_FULLMUTEX
;

3372 
Êags
 &~
SQLITE_OPEN_NOMUTEX
;

3374 }if–
	`°rcmp
(
zArg
, "-fullmutex")==0 ){

3375 
b
;

3376 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[
i
+1], &
b
ËË 
TCL_ERROR
;

3377 if–
b
 ){

3378 
Êags
 |
SQLITE_OPEN_FULLMUTEX
;

3379 
Êags
 &~
SQLITE_OPEN_NOMUTEX
;

3381 
Êags
 &~
SQLITE_OPEN_FULLMUTEX
;

3383 }if–
	`°rcmp
(
zArg
, "-uri")==0 ){

3384 
b
;

3385 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[
i
+1], &
b
ËË 
TCL_ERROR
;

3386 if–
b
 ){

3387 
Êags
 |
SQLITE_OPEN_URI
;

3389 
Êags
 &~
SQLITE_OPEN_URI
;

3392 
	`T˛_AµídResu…
(
öãΩ
, "unknow¿›ti⁄: ", 
zArg
, (*)0);

3393  
TCL_ERROR
;

3396 if–
objc
<3 || (objc&1)!=1 ){

3397 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
,

3400 #i‡
	`deföed
(
SQLITE_HAS_CODEC
Ë&& !deföed(
SQLITE_OMIT_CODEC_FROM_TCL
)

3404  
TCL_ERROR
;

3406 
zEºMsg
 = 0;

3407 
p
 = (
SqlôeDb
*)
	`T˛_AŒoc
( (*p) );

3408 if–
p
==0 ){

3409 
	`T˛_SëResu…
(
öãΩ
, (*)"mÆlo¯Áûed", 
TCL_STATIC
);

3410  
TCL_ERROR
;

3412 
	`mem£t
(
p
, 0, (*p));

3413 
zFûe
 = 
	`T˛_GëSåögFromObj
(
objv
[2], 0);

3414 
zFûe
 = 
	`T˛_Tøn¶©eFûeName
(
öãΩ
, zFûe, &
å™¶©edFûíame
);

3415 
rc
 = 
	`sqlôe3_›í_v2
(
zFûe
, &
p
->
db
, 
Êags
, 
zVfs
);

3416 
	`T˛_DSåögFªe
(&
å™¶©edFûíame
);

3417 if–
p
->
db
 ){

3418 if–
SQLITE_OK
!=
	`sqlôe3_îrcode
(
p
->
db
) ){

3419 
zEºMsg
 = 
	`sqlôe3_m¥ötf
("%s", 
	`sqlôe3_îrmsg
(
p
->
db
));

3420 
	`sqlôe3_˛o£
(
p
->
db
);

3421 
p
->
db
 = 0;

3424 
zEºMsg
 = 
	`sqlôe3_m¥ötf
("%s", 
	`sqlôe3_îr°r
(
rc
));

3426 #i‡
	`deföed
(
SQLITE_HAS_CODEC
Ë&& !deföed(
SQLITE_OMIT_CODEC_FROM_TCL
)

3427 if–
p
->
db
 ){

3428 
	`sqlôe3_key
(
p
->
db
, 
pKey
, 
nKey
);

3431 if–
p
->
db
==0 ){

3432 
	`T˛_SëResu…
(
öãΩ
, 
zEºMsg
, 
TCL_VOLATILE
);

3433 
	`T˛_Fªe
((*)
p
);

3434 
	`sqlôe3_‰ì
(
zEºMsg
);

3435  
TCL_ERROR
;

3437 
p
->
maxStmt
 = 
NUM_PREPARED_STMTS
;

3438 
p
->
›íFœgs
 = 
Êags
 & 
SQLITE_OPEN_URI
;

3439 
p
->
öãΩ
 = interp;

3440 
zArg
 = 
	`T˛_GëSåögFromObj
(
objv
[1], 0);

3441 if–
	`DbU£Nª
() ){

3442 
	`T˛_NRCª©eComm™d
(
öãΩ
, 
zArg
, 
DbObjCmdAd≠t‹
, 
DbObjCmd
,

3443 (*)
p
, 
DbDñëeCmd
);

3445 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
zArg
, 
DbObjCmd
, (*)
p
, 
DbDñëeCmd
);

3447  
TCL_OK
;

3448 
	}
}

3454 #i‚de‡
USE_TCL_STUBS


3455 #unde‡
T˛_InôStubs


3456 
	#T˛_InôStubs
(
a
,
b
,
c
Ë
TCL_VERSION


	)

3464 #i‚de‡
PACKAGE_VERSION


3465 
	#PACKAGE_VERSION
 
SQLITE_VERSION


	)

3479 
EXTERN
 
	$Sqlôe3_Inô
(
T˛_I¡îp
 *
öãΩ
){

3480 
rc
 = 
	`T˛_InôStubs
(
öãΩ
, "8.4", 0Ë? 
TCL_OK
 : 
TCL_ERROR
;

3481 if–
rc
==
TCL_OK
 ){

3482 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sqlôe3", (
T˛_ObjCmdProc
*)
DbMaö
, 0, 0);

3483 #i‚de‡
SQLITE_3_SUFFIX_ONLY


3487 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sqlôe", (
T˛_ObjCmdProc
*)
DbMaö
, 0, 0);

3489 
rc
 = 
	`T˛_PkgProvide
(
öãΩ
, "sqlôe3", 
PACKAGE_VERSION
);

3491  
rc
;

3492 
	}
}

3493 
EXTERN
 
	$T˛sqlôe3_Inô
(
T˛_I¡îp
 *
öãΩ
){  
	`Sqlôe3_Inô
(öãΩ); 
	}
}

3494 
EXTERN
 
	$Sqlôe3_U∆ﬂd
(
T˛_I¡îp
 *
öãΩ
, 
Êags
){  
TCL_OK
; 
	}
}

3495 
EXTERN
 
	$T˛sqlôe3_U∆ﬂd
(
T˛_I¡îp
 *
öãΩ
, 
Êags
){  
TCL_OK
; 
	}
}

3501 
EXTERN
 
	$Sqlôe3_Sa„Inô
(
T˛_I¡îp
 *
öãΩ
){  
TCL_ERROR
; 
	}
}

3502 
EXTERN
 
	$Sqlôe3_Sa„U∆ﬂd
(
T˛_I¡îp
 *
öãΩ
, 
Êags
){ 
TCL_ERROR
;
	}
}

3506 #i‚de‡
SQLITE_3_SUFFIX_ONLY


3507 
	$Sqlôe_Inô
(
T˛_I¡îp
 *
öãΩ
){  
	`Sqlôe3_Inô
(öãΩ); 
	}
}

3508 
	$T˛sqlôe_Inô
(
T˛_I¡îp
 *
öãΩ
){  
	`Sqlôe3_Inô
(öãΩ); 
	}
}

3509 
	$Sqlôe_U∆ﬂd
(
T˛_I¡îp
 *
öãΩ
, 
Êags
){  
TCL_OK
; 
	}
}

3510 
	$T˛sqlôe_U∆ﬂd
(
T˛_I¡îp
 *
öãΩ
, 
Êags
){  
TCL_OK
; 
	}
}

3513 #ifde‡
TCLSH


3522 #i‡
deföed
(
SQLITE_TEST
Ë|| deföed(
SQLITE_TCLMD5
)

3548 #i‚de‡
uöt32


3549 
	#uöt32
 

	)

3552 
	sMD5C⁄ãxt
 {

3553 
	misInô
;

3554 
uöt32
 
	mbuf
[4];

3555 
uöt32
 
	mbôs
[2];

3556 
	mö
[64];

3558 
MD5C⁄ãxt
 
	tMD5C⁄ãxt
;

3563 
	$byãRevî£
 (*
buf
, 
l⁄gs
){

3564 
uöt32
 
t
;

3566 
t
 = (
uöt32
)(()
buf
[3]<<8 | buf[2]) << 16 |

3567 (()
buf
[1]<<8 | buf[0]);

3568 *(
uöt32
 *)
buf
 = 
t
;

3569 
buf
 += 4;

3570 } --
l⁄gs
);

3571 
	}
}

3575 
	#F1
(
x
, 
y
, 
z
Ë(z ^ (x & (y ^ z)))

	)

3576 
	#F2
(
x
, 
y
, 
z
Ë
	`F1
(z, x, y)

	)

3577 
	#F3
(
x
, 
y
, 
z
Ë(x ^ y ^ z)

	)

3578 
	#F4
(
x
, 
y
, 
z
Ë(y ^ (x | ~z))

	)

3581 
	#MD5STEP
(
f
, 
w
, 
x
, 
y
, 
z
, 
d©a
, 
s
) \

3582 –
w
 +
	`f
(
x
, 
y
, 
z
Ë+ 
d©a
, w = w<<
s
 | w>>(32-s), w +x )

	)

3589 
	$MD5Tønsf‹m
(
uöt32
 
buf
[4], c⁄° uöt32 
ö
[16]){

3590 
uöt32
 
a
, 
b
, 
c
, 
d
;

3592 
a
 = 
buf
[0];

3593 
b
 = 
buf
[1];

3594 
c
 = 
buf
[2];

3595 
d
 = 
buf
[3];

3597 
	`MD5STEP
(
F1
, 
a
, 
b
, 
c
, 
d
, 
ö
[ 0]+0xd76aa478, 7);

3598 
	`MD5STEP
(
F1
, 
d
, 
a
, 
b
, 
c
, 
ö
[ 1]+0xe8c7b756, 12);

3599 
	`MD5STEP
(
F1
, 
c
, 
d
, 
a
, 
b
, 
ö
[ 2]+0x242070db, 17);

3600 
	`MD5STEP
(
F1
, 
b
, 
c
, 
d
, 
a
, 
ö
[ 3]+0xc1bdceee, 22);

3601 
	`MD5STEP
(
F1
, 
a
, 
b
, 
c
, 
d
, 
ö
[ 4]+0xf57c0faf, 7);

3602 
	`MD5STEP
(
F1
, 
d
, 
a
, 
b
, 
c
, 
ö
[ 5]+0x4787c62a, 12);

3603 
	`MD5STEP
(
F1
, 
c
, 
d
, 
a
, 
b
, 
ö
[ 6]+0xa8304613, 17);

3604 
	`MD5STEP
(
F1
, 
b
, 
c
, 
d
, 
a
, 
ö
[ 7]+0xfd469501, 22);

3605 
	`MD5STEP
(
F1
, 
a
, 
b
, 
c
, 
d
, 
ö
[ 8]+0x698098d8, 7);

3606 
	`MD5STEP
(
F1
, 
d
, 
a
, 
b
, 
c
, 
ö
[ 9]+0x8b44f7af, 12);

3607 
	`MD5STEP
(
F1
, 
c
, 
d
, 
a
, 
b
, 
ö
[10]+0xffff5bb1, 17);

3608 
	`MD5STEP
(
F1
, 
b
, 
c
, 
d
, 
a
, 
ö
[11]+0x895cd7be, 22);

3609 
	`MD5STEP
(
F1
, 
a
, 
b
, 
c
, 
d
, 
ö
[12]+0x6b901122, 7);

3610 
	`MD5STEP
(
F1
, 
d
, 
a
, 
b
, 
c
, 
ö
[13]+0xfd987193, 12);

3611 
	`MD5STEP
(
F1
, 
c
, 
d
, 
a
, 
b
, 
ö
[14]+0xa679438e, 17);

3612 
	`MD5STEP
(
F1
, 
b
, 
c
, 
d
, 
a
, 
ö
[15]+0x49b40821, 22);

3614 
	`MD5STEP
(
F2
, 
a
, 
b
, 
c
, 
d
, 
ö
[ 1]+0xf61e2562, 5);

3615 
	`MD5STEP
(
F2
, 
d
, 
a
, 
b
, 
c
, 
ö
[ 6]+0xc040b340, 9);

3616 
	`MD5STEP
(
F2
, 
c
, 
d
, 
a
, 
b
, 
ö
[11]+0x265e5a51, 14);

3617 
	`MD5STEP
(
F2
, 
b
, 
c
, 
d
, 
a
, 
ö
[ 0]+0xe9b6c7aa, 20);

3618 
	`MD5STEP
(
F2
, 
a
, 
b
, 
c
, 
d
, 
ö
[ 5]+0xd62f105d, 5);

3619 
	`MD5STEP
(
F2
, 
d
, 
a
, 
b
, 
c
, 
ö
[10]+0x02441453, 9);

3620 
	`MD5STEP
(
F2
, 
c
, 
d
, 
a
, 
b
, 
ö
[15]+0xd8a1e681, 14);

3621 
	`MD5STEP
(
F2
, 
b
, 
c
, 
d
, 
a
, 
ö
[ 4]+0xe7d3fbc8, 20);

3622 
	`MD5STEP
(
F2
, 
a
, 
b
, 
c
, 
d
, 
ö
[ 9]+0x21e1cde6, 5);

3623 
	`MD5STEP
(
F2
, 
d
, 
a
, 
b
, 
c
, 
ö
[14]+0xc33707d6, 9);

3624 
	`MD5STEP
(
F2
, 
c
, 
d
, 
a
, 
b
, 
ö
[ 3]+0xf4d50d87, 14);

3625 
	`MD5STEP
(
F2
, 
b
, 
c
, 
d
, 
a
, 
ö
[ 8]+0x455a14ed, 20);

3626 
	`MD5STEP
(
F2
, 
a
, 
b
, 
c
, 
d
, 
ö
[13]+0xa9e3e905, 5);

3627 
	`MD5STEP
(
F2
, 
d
, 
a
, 
b
, 
c
, 
ö
[ 2]+0xfcefa3f8, 9);

3628 
	`MD5STEP
(
F2
, 
c
, 
d
, 
a
, 
b
, 
ö
[ 7]+0x676f02d9, 14);

3629 
	`MD5STEP
(
F2
, 
b
, 
c
, 
d
, 
a
, 
ö
[12]+0x8d2a4c8a, 20);

3631 
	`MD5STEP
(
F3
, 
a
, 
b
, 
c
, 
d
, 
ö
[ 5]+0xfffa3942, 4);

3632 
	`MD5STEP
(
F3
, 
d
, 
a
, 
b
, 
c
, 
ö
[ 8]+0x8771f681, 11);

3633 
	`MD5STEP
(
F3
, 
c
, 
d
, 
a
, 
b
, 
ö
[11]+0x6d9d6122, 16);

3634 
	`MD5STEP
(
F3
, 
b
, 
c
, 
d
, 
a
, 
ö
[14]+0xfde5380c, 23);

3635 
	`MD5STEP
(
F3
, 
a
, 
b
, 
c
, 
d
, 
ö
[ 1]+0xa4beea44, 4);

3636 
	`MD5STEP
(
F3
, 
d
, 
a
, 
b
, 
c
, 
ö
[ 4]+0x4bdecfa9, 11);

3637 
	`MD5STEP
(
F3
, 
c
, 
d
, 
a
, 
b
, 
ö
[ 7]+0xf6bb4b60, 16);

3638 
	`MD5STEP
(
F3
, 
b
, 
c
, 
d
, 
a
, 
ö
[10]+0xbebfbc70, 23);

3639 
	`MD5STEP
(
F3
, 
a
, 
b
, 
c
, 
d
, 
ö
[13]+0x289b7ec6, 4);

3640 
	`MD5STEP
(
F3
, 
d
, 
a
, 
b
, 
c
, 
ö
[ 0]+0xeaa127fa, 11);

3641 
	`MD5STEP
(
F3
, 
c
, 
d
, 
a
, 
b
, 
ö
[ 3]+0xd4ef3085, 16);

3642 
	`MD5STEP
(
F3
, 
b
, 
c
, 
d
, 
a
, 
ö
[ 6]+0x04881d05, 23);

3643 
	`MD5STEP
(
F3
, 
a
, 
b
, 
c
, 
d
, 
ö
[ 9]+0xd9d4d039, 4);

3644 
	`MD5STEP
(
F3
, 
d
, 
a
, 
b
, 
c
, 
ö
[12]+0xe6db99e5, 11);

3645 
	`MD5STEP
(
F3
, 
c
, 
d
, 
a
, 
b
, 
ö
[15]+0x1fa27cf8, 16);

3646 
	`MD5STEP
(
F3
, 
b
, 
c
, 
d
, 
a
, 
ö
[ 2]+0xc4ac5665, 23);

3648 
	`MD5STEP
(
F4
, 
a
, 
b
, 
c
, 
d
, 
ö
[ 0]+0xf4292244, 6);

3649 
	`MD5STEP
(
F4
, 
d
, 
a
, 
b
, 
c
, 
ö
[ 7]+0x432aff97, 10);

3650 
	`MD5STEP
(
F4
, 
c
, 
d
, 
a
, 
b
, 
ö
[14]+0xab9423a7, 15);

3651 
	`MD5STEP
(
F4
, 
b
, 
c
, 
d
, 
a
, 
ö
[ 5]+0xfc93a039, 21);

3652 
	`MD5STEP
(
F4
, 
a
, 
b
, 
c
, 
d
, 
ö
[12]+0x655b59c3, 6);

3653 
	`MD5STEP
(
F4
, 
d
, 
a
, 
b
, 
c
, 
ö
[ 3]+0x8f0ccc92, 10);

3654 
	`MD5STEP
(
F4
, 
c
, 
d
, 
a
, 
b
, 
ö
[10]+0xffeff47d, 15);

3655 
	`MD5STEP
(
F4
, 
b
, 
c
, 
d
, 
a
, 
ö
[ 1]+0x85845dd1, 21);

3656 
	`MD5STEP
(
F4
, 
a
, 
b
, 
c
, 
d
, 
ö
[ 8]+0x6fa87e4f, 6);

3657 
	`MD5STEP
(
F4
, 
d
, 
a
, 
b
, 
c
, 
ö
[15]+0xfe2ce6e0, 10);

3658 
	`MD5STEP
(
F4
, 
c
, 
d
, 
a
, 
b
, 
ö
[ 6]+0xa3014314, 15);

3659 
	`MD5STEP
(
F4
, 
b
, 
c
, 
d
, 
a
, 
ö
[13]+0x4e0811a1, 21);

3660 
	`MD5STEP
(
F4
, 
a
, 
b
, 
c
, 
d
, 
ö
[ 4]+0xf7537e82, 6);

3661 
	`MD5STEP
(
F4
, 
d
, 
a
, 
b
, 
c
, 
ö
[11]+0xbd3af235, 10);

3662 
	`MD5STEP
(
F4
, 
c
, 
d
, 
a
, 
b
, 
ö
[ 2]+0x2ad7d2bb, 15);

3663 
	`MD5STEP
(
F4
, 
b
, 
c
, 
d
, 
a
, 
ö
[ 9]+0xeb86d391, 21);

3665 
buf
[0] +
a
;

3666 
buf
[1] +
b
;

3667 
buf
[2] +
c
;

3668 
buf
[3] +
d
;

3669 
	}
}

3675 
	$MD5Inô
(
MD5C⁄ãxt
 *
˘x
){

3676 
˘x
->
isInô
 = 1;

3677 
˘x
->
buf
[0] = 0x67452301;

3678 
˘x
->
buf
[1] = 0xefcdab89;

3679 
˘x
->
buf
[2] = 0x98badcfe;

3680 
˘x
->
buf
[3] = 0x10325476;

3681 
˘x
->
bôs
[0] = 0;

3682 
˘x
->
bôs
[1] = 0;

3683 
	}
}

3690 
	$MD5Upd©e
(
MD5C⁄ãxt
 *
˘x
, c⁄° *
buf
, 
Àn
){

3691 
uöt32
 
t
;

3695 
t
 = 
˘x
->
bôs
[0];

3696 i‡((
˘x
->
bôs
[0] = 
t
 + ((
uöt32
)
Àn
 << 3)) <Å)

3697 
˘x
->
bôs
[1]++;

3698 
˘x
->
bôs
[1] +
Àn
 >> 29;

3700 
t
 = (t >> 3) & 0x3f;

3704 i‡–
t
 ) {

3705 *
p
 = (*)
˘x
->
ö
 + 
t
;

3707 
t
 = 64-t;

3708 i‡(
Àn
 < 
t
) {

3709 
	`mem˝y
(
p
, 
buf
, 
Àn
);

3712 
	`mem˝y
(
p
, 
buf
, 
t
);

3713 
	`byãRevî£
(
˘x
->
ö
, 16);

3714 
	`MD5Tønsf‹m
(
˘x
->
buf
, (
uöt32
 *)˘x->
ö
);

3715 
buf
 +
t
;

3716 
Àn
 -
t
;

3721 
Àn
 >= 64) {

3722 
	`mem˝y
(
˘x
->
ö
, 
buf
, 64);

3723 
	`byãRevî£
(
˘x
->
ö
, 16);

3724 
	`MD5Tønsf‹m
(
˘x
->
buf
, (
uöt32
 *)˘x->
ö
);

3725 
buf
 += 64;

3726 
Àn
 -= 64;

3731 
	`mem˝y
(
˘x
->
ö
, 
buf
, 
Àn
);

3732 
	}
}

3738 
	$MD5FöÆ
(
dige°
[16], 
MD5C⁄ãxt
 *
˘x
){

3739 
cou¡
;

3740 *
p
;

3743 
cou¡
 = (
˘x
->
bôs
[0] >> 3) & 0x3F;

3747 
p
 = 
˘x
->
ö
 + 
cou¡
;

3748 *
p
++ = 0x80;

3751 
cou¡
 = 64 - 1 - count;

3754 i‡(
cou¡
 < 8) {

3756 
	`mem£t
(
p
, 0, 
cou¡
);

3757 
	`byãRevî£
(
˘x
->
ö
, 16);

3758 
	`MD5Tønsf‹m
(
˘x
->
buf
, (
uöt32
 *)˘x->
ö
);

3761 
	`mem£t
(
˘x
->
ö
, 0, 56);

3764 
	`mem£t
(
p
, 0, 
cou¡
-8);

3766 
	`byãRevî£
(
˘x
->
ö
, 14);

3769 
	`mem˝y
(
˘x
->
ö
 + 14*4, ctx->
bôs
, 8);

3771 
	`MD5Tønsf‹m
(
˘x
->
buf
, (
uöt32
 *)˘x->
ö
);

3772 
	`byãRevî£
((*)
˘x
->
buf
, 4);

3773 
	`mem˝y
(
dige°
, 
˘x
->
buf
, 16);

3774 
	}
}

3779 
	$MD5Dige°ToBa£16
(*
dige°
, *
zBuf
){

3780 c⁄° 
zEncode
[] = "0123456789abcdef";

3781 
i
, 
j
;

3783 
j
=
i
=0; i<16; i++){

3784 
a
 = 
dige°
[
i
];

3785 
zBuf
[
j
++] = 
zEncode
[(
a
>>4)&0xf];

3786 
zBuf
[
j
++] = 
zEncode
[
a
 & 0xf];

3788 
zBuf
[
j
] = 0;

3789 
	}
}

3797 
	$MD5Dige°ToBa£10x8
(
dige°
[16], 
zDige°
[50]){

3798 
i
, 
j
;

3799 
x
;

3800 
i
=
j
=0; i<16; i+=2){

3801 
x
 = 
dige°
[
i
]*256 + digest[i+1];

3802 if–
i
>0 ) 
zDige°
[
j
++] = '-';

3803 
	`sqlôe3_¢¥ötf
(50-
j
, &
zDige°
[j], "%05u", 
x
);

3804 
j
 += 5;

3806 
zDige°
[
j
] = 0;

3807 
	}
}

3813 
SQLITE_TCLAPI
 
	$md5_cmd
(

3814 *
cd
,

3815 
T˛_I¡îp
 *
öãΩ
,

3816 
¨gc
,

3817 c⁄° **
¨gv


3819 
MD5C⁄ãxt
 
˘x
;

3820 
dige°
[16];

3821 
zBuf
[50];

3822 (*
c⁄vîãr
)(*, *);

3824 if–
¨gc
!=2 ){

3825 
	`T˛_AµídResu…
(
öãΩ
,"wr⁄g #árgs: should bê\"", 
¨gv
[0],

3827  
TCL_ERROR
;

3829 
	`MD5Inô
(&
˘x
);

3830 
	`MD5Upd©e
(&
˘x
, (*)
¨gv
[1], ()
	`°æí
(argv[1]));

3831 
	`MD5FöÆ
(
dige°
, &
˘x
);

3832 
c⁄vîãr
 = ((*)(*,*))
cd
;

3833 
	`c⁄vîãr
(
dige°
, 
zBuf
);

3834 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, (*)0);

3835  
TCL_OK
;

3836 
	}
}

3842 
SQLITE_TCLAPI
 
	$md5fûe_cmd
(

3843 *
cd
,

3844 
T˛_I¡îp
 *
öãΩ
,

3845 
¨gc
,

3846 c⁄° **
¨gv


3848 
FILE
 *
ö
;

3849 
MD5C⁄ãxt
 
˘x
;

3850 (*
c⁄vîãr
)(*, *);

3851 
dige°
[16];

3852 
zBuf
[10240];

3854 if–
¨gc
!=2 ){

3855 
	`T˛_AµídResu…
(
öãΩ
,"wr⁄g #árgs: should bê\"", 
¨gv
[0],

3857  
TCL_ERROR
;

3859 
ö
 = 
	`f›í
(
¨gv
[1],"rb");

3860 if–
ö
==0 ){

3861 
	`T˛_AµídResu…
(
öãΩ
,"u«bÀÅÿ›í fûê\"", 
¨gv
[1],

3863  
TCL_ERROR
;

3865 
	`MD5Inô
(&
˘x
);

3867 
n
;

3868 
n
 = ()
	`‰ód
(
zBuf
, 1, (zBuf), 
ö
);

3869 if–
n
<=0 ) ;

3870 
	`MD5Upd©e
(&
˘x
, (*)
zBuf
, ()
n
);

3872 
	`f˛o£
(
ö
);

3873 
	`MD5FöÆ
(
dige°
, &
˘x
);

3874 
c⁄vîãr
 = ((*)(*,*))
cd
;

3875 
	`c⁄vîãr
(
dige°
, 
zBuf
);

3876 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, (*)0);

3877  
TCL_OK
;

3878 
	}
}

3884 
	$Md5_Inô
(
T˛_I¡îp
 *
öãΩ
){

3885 
	`T˛_Cª©eComm™d
(
öãΩ
, "md5", (
T˛_CmdProc
*)
md5_cmd
,

3886 
MD5Dige°ToBa£16
, 0);

3887 
	`T˛_Cª©eComm™d
(
öãΩ
, "md5-10x8", (
T˛_CmdProc
*)
md5_cmd
,

3888 
MD5Dige°ToBa£10x8
, 0);

3889 
	`T˛_Cª©eComm™d
(
öãΩ
, "md5fûe", (
T˛_CmdProc
*)
md5fûe_cmd
,

3890 
MD5Dige°ToBa£16
, 0);

3891 
	`T˛_Cª©eComm™d
(
öãΩ
, "md5fûe-10x8", (
T˛_CmdProc
*)
md5fûe_cmd
,

3892 
MD5Dige°ToBa£10x8
, 0);

3893  
TCL_OK
;

3894 
	}
}

3897 #i‡
deföed
(
SQLITE_TEST
)

3902 
	$md5°ï
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
, 
¨gc
, 
sqlôe3_vÆue
 **
¨gv
){

3903 
MD5C⁄ãxt
 *
p
;

3904 
i
;

3905 if–
¨gc
<1 ) ;

3906 
p
 = 
	`sqlôe3_aggªg©e_c⁄ãxt
(
c⁄ãxt
, (*p));

3907 if–
p
==0 ) ;

3908 if–!
p
->
isInô
 ){

3909 
	`MD5Inô
(
p
);

3911 
i
=0; i<
¨gc
; i++){

3912 c⁄° *
zD©a
 = (*)
	`sqlôe3_vÆue_ãxt
(
¨gv
[
i
]);

3913 if–
zD©a
 ){

3914 
	`MD5Upd©e
(
p
, (*)
zD©a
, ()
	`°æí
(zData));

3917 
	}
}

3918 
	$md5föÆize
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
){

3919 
MD5C⁄ãxt
 *
p
;

3920 
dige°
[16];

3921 
zBuf
[33];

3922 
p
 = 
	`sqlôe3_aggªg©e_c⁄ãxt
(
c⁄ãxt
, (*p));

3923 
	`MD5FöÆ
(
dige°
,
p
);

3924 
	`MD5Dige°ToBa£16
(
dige°
, 
zBuf
);

3925 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
zBuf
, -1, 
SQLITE_TRANSIENT
);

3926 
	}
}

3927 
	$Md5_Regi°î
(

3928 
sqlôe3
 *
db
,

3929 **
pzEºMsg
,

3930 c⁄° 
sqlôe3_≠i_routöes
 *
pThunk


3932 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "md5sum", -1, 
SQLITE_UTF8
, 0, 0,

3933 
md5°ï
, 
md5föÆize
);

3934 
	`sqlôe3_ovîlﬂd_fun˘i⁄
(
db
, "md5sum", -1);

3935  
rc
;

3936 
	}
}

3946 #i‡
TCLSH
==1

3947 c⁄° *
	$t˛sh_maö_lo›
(){

3948 c⁄° 
zMaölo›
[] =

3970  
zMaölo›
;

3971 
	}
}

3973 #i‡
TCLSH
==2

3974 c⁄° *
t˛sh_maö_lo›
();

3977 #ifde‡
SQLITE_TEST


3978 
öô_Æl
(
T˛_I¡îp
 *);

3979 
SQLITE_TCLAPI
 
	$öô_Æl_cmd
(

3980 
Clõ¡D©a
 
cd
,

3981 
T˛_I¡îp
 *
öãΩ
,

3982 
objc
,

3983 
T˛_Obj
 *
CONST
 
objv
[]

3986 
T˛_I¡îp
 *
¶ave
;

3987 if–
objc
!=2 ){

3988 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "SLAVE");

3989  
TCL_ERROR
;

3992 
¶ave
 = 
	`T˛_GëSœve
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]));

3993 if–!
¶ave
 ){

3994  
TCL_ERROR
;

3997 
	`öô_Æl
(
¶ave
);

3998  
TCL_OK
;

3999 
	}
}

4009 
SQLITE_TCLAPI
 
	$db_u£_Àgacy_¥ï¨e_cmd
(

4010 
Clõ¡D©a
 
cd
,

4011 
T˛_I¡îp
 *
öãΩ
,

4012 
objc
,

4013 
T˛_Obj
 *
CONST
 
objv
[]

4015 
T˛_CmdInfo
 
cmdInfo
;

4016 
SqlôeDb
 *
pDb
;

4017 
bPª∑ª
;

4019 if–
objc
!=3 ){

4020 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB BOOLEAN");

4021  
TCL_ERROR
;

4024 if–!
	`T˛_GëComm™dInfo
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
cmdInfo
) ){

4025 
	`T˛_AµídResu…
(
öãΩ
, "nÿsuch db: ", 
	`T˛_GëSåög
(
objv
[1]), (*)0);

4026  
TCL_ERROR
;

4028 
pDb
 = (
SqlôeDb
*)
cmdInfo
.
objClõ¡D©a
;

4029 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[2], &
bPª∑ª
) ){

4030  
TCL_ERROR
;

4033 
pDb
->
bLegacyPª∑ª
 = 
bPª∑ª
;

4035 
	`T˛_Re£tResu…
(
öãΩ
);

4036  
TCL_OK
;

4037 
	}
}

4046 
SQLITE_TCLAPI
 
	$db_œ°_°mt_±r
(

4047 
Clõ¡D©a
 
cd
,

4048 
T˛_I¡îp
 *
öãΩ
,

4049 
objc
,

4050 
T˛_Obj
 *
CONST
 
objv
[]

4052 
	`sqlôe3Te°MakePoöãrSå
(
T˛_I¡îp
*, *, *);

4053 
T˛_CmdInfo
 
cmdInfo
;

4054 
SqlôeDb
 *
pDb
;

4055 
sqlôe3_°mt
 *
pStmt
 = 0;

4056 
zBuf
[100];

4058 if–
objc
!=2 ){

4059 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB");

4060  
TCL_ERROR
;

4063 if–!
	`T˛_GëComm™dInfo
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
cmdInfo
) ){

4064 
	`T˛_AµídResu…
(
öãΩ
, "nÿsuch db: ", 
	`T˛_GëSåög
(
objv
[1]), (*)0);

4065  
TCL_ERROR
;

4067 
pDb
 = (
SqlôeDb
*)
cmdInfo
.
objClõ¡D©a
;

4069 if–
pDb
->
°mtLi°
 ) 
pStmt
 =ÖDb->stmtList->pStmt;

4070 if–
	`sqlôe3Te°MakePoöãrSå
(
öãΩ
, 
zBuf
, 
pStmt
) ){

4071  
TCL_ERROR
;

4073 
	`T˛_SëResu…
(
öãΩ
, 
zBuf
, 
TCL_VOLATILE
);

4075  
TCL_OK
;

4076 
	}
}

4090 
	$öô_Æl
(
T˛_I¡îp
 *
öãΩ
){

4091 
	`Sqlôe3_Inô
(
öãΩ
);

4093 #i‡
	`deföed
(
SQLITE_TEST
Ë|| deföed(
SQLITE_TCLMD5
)

4094 
	`Md5_Inô
(
öãΩ
);

4097 #ifde‡
SQLITE_TEST


4099 
	`Sqlôec⁄fig_Inô
(
T˛_I¡îp
*);

4100 
	`Sqlôëe°1_Inô
(
T˛_I¡îp
*);

4101 
	`Sqlôëe°2_Inô
(
T˛_I¡îp
*);

4102 
	`Sqlôëe°3_Inô
(
T˛_I¡îp
*);

4103 
	`Sqlôëe°4_Inô
(
T˛_I¡îp
*);

4104 
	`Sqlôëe°5_Inô
(
T˛_I¡îp
*);

4105 
	`Sqlôëe°6_Inô
(
T˛_I¡îp
*);

4106 
	`Sqlôëe°7_Inô
(
T˛_I¡îp
*);

4107 
	`Sqlôëe°8_Inô
(
T˛_I¡îp
*);

4108 
	`Sqlôëe°9_Inô
(
T˛_I¡îp
*);

4109 
	`Sqlôëe°async_Inô
(
T˛_I¡îp
*);

4110 
	`Sqlôëe°_aut€xt_Inô
(
T˛_I¡îp
*);

4111 
	`Sqlôëe°_blob_Inô
(
T˛_I¡îp
*);

4112 
	`Sqlôëe°_demovfs_Inô
(
T˛_I¡îp
 *);

4113 
	`Sqlôëe°_func_Inô
(
T˛_I¡îp
*);

4114 
	`Sqlôëe°_hexio_Inô
(
T˛_I¡îp
*);

4115 
	`Sqlôëe°_öô_Inô
(
T˛_I¡îp
*);

4116 
	`Sqlôëe°_mÆloc_Inô
(
T˛_I¡îp
*);

4117 
	`Sqlôëe°_muãx_Inô
(
T˛_I¡îp
*);

4118 
	`Sqlôëe°schema_Inô
(
T˛_I¡îp
*);

4119 
	`Sqlôëe°s£_Inô
(
T˛_I¡îp
*);

4120 
	`Sqlôëe°t˛v¨_Inô
(
T˛_I¡îp
*);

4121 
	`Sqlôëe°fs_Inô
(
T˛_I¡îp
*);

4122 
	`Sqlôëe°Thªad_Inô
(
T˛_I¡îp
*);

4123 
	`Sqlôëe°O√fûe_Inô
();

4124 
	`Sqlôëe°Osö°_Inô
(
T˛_I¡îp
*);

4125 
	`Sqlôëe°backup_Inô
(
T˛_I¡îp
*);

4126 
	`Sqlôëe°öèºay_Inô
(
T˛_I¡îp
*);

4127 
	`Sqlôëe°vfs_Inô
(
T˛_I¡îp
 *);

4128 
	`Sqlôëe°πªe_Inô
(
T˛_I¡îp
*);

4129 
	`SqlôequŸa_Inô
(
T˛_I¡îp
*);

4130 
	`Sqlôemu…ùÀx_Inô
(
T˛_I¡îp
*);

4131 
	`SqlôeSu≥æock_Inô
(
T˛_I¡îp
*);

4132 
	`Sqlôëe°SysˇŒ_Inô
(
T˛_I¡îp
*);

4133 #i‡
	`deföed
(
SQLITE_ENABLE_SESSION
Ë&& deföed(
SQLITE_ENABLE_PREUPDATE_HOOK
)

4134 
	`Te°Sessi⁄_Inô
(
T˛_I¡îp
*);

4136 
	`Fts5t˛_Inô
(
T˛_I¡îp
 *);

4137 
	`SqlôeRbu_Inô
(
T˛_I¡îp
*);

4138 
	`Sqlôëe°t˛_Inô
(
T˛_I¡îp
*);

4139 #i‡
	`deföed
(
SQLITE_ENABLE_FTS3
Ë|| deföed(
SQLITE_ENABLE_FTS4
)

4140 
	`Sqlôëe°·s3_Inô
(
T˛_I¡îp
 *
öãΩ
);

4143 #ifde‡
SQLITE_ENABLE_ZIPVFS


4144 
	`Zùvfs_Inô
(
T˛_I¡îp
*);

4145 
	`Zùvfs_Inô
(
öãΩ
);

4148 
	`Sqlôec⁄fig_Inô
(
öãΩ
);

4149 
	`Sqlôëe°1_Inô
(
öãΩ
);

4150 
	`Sqlôëe°2_Inô
(
öãΩ
);

4151 
	`Sqlôëe°3_Inô
(
öãΩ
);

4152 
	`Sqlôëe°4_Inô
(
öãΩ
);

4153 
	`Sqlôëe°5_Inô
(
öãΩ
);

4154 
	`Sqlôëe°6_Inô
(
öãΩ
);

4155 
	`Sqlôëe°7_Inô
(
öãΩ
);

4156 
	`Sqlôëe°8_Inô
(
öãΩ
);

4157 
	`Sqlôëe°9_Inô
(
öãΩ
);

4158 
	`Sqlôëe°async_Inô
(
öãΩ
);

4159 
	`Sqlôëe°_aut€xt_Inô
(
öãΩ
);

4160 
	`Sqlôëe°_blob_Inô
(
öãΩ
);

4161 
	`Sqlôëe°_demovfs_Inô
(
öãΩ
);

4162 
	`Sqlôëe°_func_Inô
(
öãΩ
);

4163 
	`Sqlôëe°_hexio_Inô
(
öãΩ
);

4164 
	`Sqlôëe°_öô_Inô
(
öãΩ
);

4165 
	`Sqlôëe°_mÆloc_Inô
(
öãΩ
);

4166 
	`Sqlôëe°_muãx_Inô
(
öãΩ
);

4167 
	`Sqlôëe°schema_Inô
(
öãΩ
);

4168 
	`Sqlôëe°t˛v¨_Inô
(
öãΩ
);

4169 
	`Sqlôëe°fs_Inô
(
öãΩ
);

4170 
	`Sqlôëe°Thªad_Inô
(
öãΩ
);

4171 
	`Sqlôëe°O√fûe_Inô
();

4172 
	`Sqlôëe°Osö°_Inô
(
öãΩ
);

4173 
	`Sqlôëe°backup_Inô
(
öãΩ
);

4174 
	`Sqlôëe°öèºay_Inô
(
öãΩ
);

4175 
	`Sqlôëe°vfs_Inô
(
öãΩ
);

4176 
	`Sqlôëe°πªe_Inô
(
öãΩ
);

4177 
	`SqlôequŸa_Inô
(
öãΩ
);

4178 
	`Sqlôemu…ùÀx_Inô
(
öãΩ
);

4179 
	`SqlôeSu≥æock_Inô
(
öãΩ
);

4180 
	`Sqlôëe°SysˇŒ_Inô
(
öãΩ
);

4181 #i‡
	`deföed
(
SQLITE_ENABLE_SESSION
Ë&& deföed(
SQLITE_ENABLE_PREUPDATE_HOOK
)

4182 
	`Te°Sessi⁄_Inô
(
öãΩ
);

4184 
	`Fts5t˛_Inô
(
öãΩ
);

4185 
	`SqlôeRbu_Inô
(
öãΩ
);

4186 
	`Sqlôëe°t˛_Inô
(
öãΩ
);

4188 #i‡
	`deföed
(
SQLITE_ENABLE_FTS3
Ë|| deföed(
SQLITE_ENABLE_FTS4
)

4189 
	`Sqlôëe°·s3_Inô
(
öãΩ
);

4192 
	`T˛_Cª©eObjComm™d
(

4193 
öãΩ
, "lﬂd_ã°fixtuª_exãnsi⁄s", 
öô_Æl_cmd
, 0, 0

4195 
	`T˛_Cª©eObjComm™d
(

4196 
öãΩ
, "db_u£_Àgacy_¥ï¨e", 
db_u£_Àgacy_¥ï¨e_cmd
, 0, 0

4198 
	`T˛_Cª©eObjComm™d
(

4199 
öãΩ
, "db_œ°_°mt_±r", 
db_œ°_°mt_±r
, 0, 0

4202 #ifde‡
SQLITE_SSE


4203 
	`Sqlôëe°s£_Inô
(
öãΩ
);

4207 
	}
}

4210 #i‡
deföed
(
unix
)

4211 
	~<sys/ªsour˚.h
>

4214 
	#TCLSH_MAIN
 
maö


	)

4215 
SQLITE_CDECL
 
	$TCLSH_MAIN
(
¨gc
, **
¨gv
){

4216 
T˛_I¡îp
 *
öãΩ
;

4218 #i‡!
	`deföed
(
_WIN32_WCE
)

4219 if–
	`gëív
("BREAK") ){

4220 
	`Ârötf
(
°dîr
,

4222 
	`GETPID
());

4223 
	`fgëc
(
°dö
);

4229 #i‡
	`deföed
(
SQLITE_TEST
Ë&& deföed(
unix
)

4230 { 
æimô
 
x
;

4231 
	`gëæimô
(
RLIMIT_CORE
, &
x
);

4232 
x
.
æim_cur
 = x.
æim_max
;

4233 
	`£ålimô
(
RLIMIT_CORE
, &
x
);

4241 
	`sqlôe3_shutdown
();

4243 
	`T˛_FödExecuèbÀ
(
¨gv
[0]);

4244 
	`T˛_SëSy°emEncodög
(
NULL
, "utf-8");

4245 
öãΩ
 = 
	`T˛_Cª©eI¡îp
();

4247 #i‡
TCLSH
==2

4248 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_SINGLETHREAD
);

4251 
	`öô_Æl
(
öãΩ
);

4252 if–
¨gc
>=2 ){

4253 
i
;

4254 
zArgc
[32];

4255 
	`sqlôe3_¢¥ötf
((
zArgc
), zArgc, "%d", 
¨gc
-(3-
TCLSH
));

4256 
	`T˛_SëV¨
(
öãΩ
,"¨gc", 
zArgc
, 
TCL_GLOBAL_ONLY
);

4257 
	`T˛_SëV¨
(
öãΩ
,"¨gv0",
¨gv
[1],
TCL_GLOBAL_ONLY
);

4258 
	`T˛_SëV¨
(
öãΩ
,"¨gv", "", 
TCL_GLOBAL_ONLY
);

4259 
i
=3-
TCLSH
; i<
¨gc
; i++){

4260 
	`T˛_SëV¨
(
öãΩ
, "¨gv", 
¨gv
[
i
],

4261 
TCL_GLOBAL_ONLY
 | 
TCL_LIST_ELEMENT
 | 
TCL_APPEND_VALUE
);

4263 if–
TCLSH
==1 && 
	`T˛_EvÆFûe
(
öãΩ
, 
¨gv
[1])!=
TCL_OK
 ){

4264 c⁄° *
zInfo
 = 
	`T˛_GëV¨
(
öãΩ
, "îr‹Info", 
TCL_GLOBAL_ONLY
);

4265 if–
zInfo
==0 ) zInfÿ
	`T˛_GëSåögResu…
(
öãΩ
);

4266 
	`Ârötf
(
°dîr
,"%s: %s\n", *
¨gv
, 
zInfo
);

4270 if–
TCLSH
==2 || 
¨gc
<=1 ){

4271 
	`T˛_GlobÆEvÆ
(
öãΩ
, 
	`t˛sh_maö_lo›
());

4274 
	}
}

	@test1.c

16 
	~"sqlôeI¡.h
"

17 #i‡
SQLITE_OS_WIN


18 
	~"os_wö.h
"

21 
	~"vdbeI¡.h
"

22 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

23 
	~"sqlôe_t˛.h
"

25 
	~"t˛.h
"

27 
	~<°dlib.h
>

28 
	~<°rög.h
>

36 
	sSqlôeDb
 {

37 
sqlôe3
 *
	mdb
;

44 
	$ã°HexToI¡
(
h
){

45 if–
h
>='0' && h<='9' ){

46  
h
 - '0';

47 }if–
h
>='a' && h<='f' ){

48  
h
 - 'a' + 10;

50 
	`as£π
–
h
>='A' && h<='F' );

51  
h
 - 'A' + 10;

53 
	}
}

54 *
	$sqlôe3Te°TextToPå
(c⁄° *
z
){

55 *
p
;

56 
u64
 
v
;

57 
u32
 
v2
;

58 if–
z
[0]=='0' && z[1]=='x' ){

59 
z
 += 2;

61 
v
 = 0;

62  *
z
 ){

63 
v
 = (v<<4Ë+ 
	`ã°HexToI¡
(*
z
);

64 
z
++;

66 if–(
p
)==(
v
) ){

67 
	`mem˝y
(&
p
, &
v
, (p));

69 
	`as£π
–(
p
)==(
v2
) );

70 
v2
 = (
u32
)
v
;

71 
	`mem˝y
(&
p
, &
v2
, (p));

73  
p
;

74 
	}
}

82 
SQLITE_TCLAPI
 
	$gë_sqlôe_poöãr
(

83 * 
˛õ¡D©a
,

84 
T˛_I¡îp
 *
öãΩ
,

85 
objc
,

86 
T˛_Obj
 *
CONST
 
objv
[]

88 
SqlôeDb
 *
p
;

89 
T˛_CmdInfo
 
cmdInfo
;

90 
zBuf
[100];

91 if–
objc
!=2 ){

92 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "SQLITE-CONNECTION");

93  
TCL_ERROR
;

95 if–!
	`T˛_GëComm™dInfo
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
cmdInfo
) ){

96 
	`T˛_AµídResu…
(
öãΩ
, "commandÇot found: ",

97 
	`T˛_GëSåög
(
objv
[1]), (*)0);

98  
TCL_ERROR
;

100 
p
 = (
SqlôeDb
*)
cmdInfo
.
objClõ¡D©a
;

101 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%p", 
p
->
db
);

102 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

103  
TCL_OK
;

104 
	}
}

109 
	$gëDbPoöãr
(
T˛_I¡îp
 *
öãΩ
, c⁄° *
zA
, 
sqlôe3
 **
µDb
){

110 
SqlôeDb
 *
p
;

111 
T˛_CmdInfo
 
cmdInfo
;

112 if–
	`T˛_GëComm™dInfo
(
öãΩ
, 
zA
, &
cmdInfo
) ){

113 
p
 = (
SqlôeDb
*)
cmdInfo
.
objClõ¡D©a
;

114 *
µDb
 = 
p
->
db
;

116 *
µDb
 = (
sqlôe3
*)
	`sqlôe3Te°TextToPå
(
zA
);

118  
TCL_OK
;

119 
	}
}

121 #i‡
SQLITE_OS_WIN


125 
	$gëWö32H™dÀ
(
T˛_I¡îp
 *
öãΩ
, c⁄° *
zA
, 
LPHANDLE
 
phFûe
){

126 *
phFûe
 = (
HANDLE
)
	`sqlôe3Te°TextToPå
(
zA
);

127  
TCL_OK
;

128 
	}
}

131 c⁄° *
sqlôe3EºName
();

132 
	#t1Eº‹Name
 
sqlôe3EºName


	)

138 
	#StmtToDb
(
X
Ë
	`sqlôe3_db_h™dÀ
(X)

	)

144 
	$sqlôe3Te°EºCode
(
T˛_I¡îp
 *
öãΩ
, 
sqlôe3
 *
db
, 
rc
){

145 if–
	`sqlôe3_thªadß„
()==0 && 
rc
!=
SQLITE_MISUSE
 &&Ñc!=
SQLITE_OK


146 && 
	`sqlôe3_îrcode
(
db
)!=
rc
 ){

147 
zBuf
[200];

148 
r2
 = 
	`sqlôe3_îrcode
(
db
);

149 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf,

151 
	`t1Eº‹Name
(
rc
),Ñc,Å1Eº‹Name(
r2
),Ñ2);

152 
	`T˛_Re£tResu…
(
öãΩ
);

153 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

157 
	}
}

162 
	$gëStmtPoöãr
(

163 
T˛_I¡îp
 *
öãΩ
,

164 c⁄° *
zArg
,

165 
sqlôe3_°mt
 **
µStmt


167 *
µStmt
 = (
sqlôe3_°mt
*)
	`sqlôe3Te°TextToPå
(
zArg
);

168  
TCL_OK
;

169 
	}
}

184 
	$sqlôe3Te°MakePoöãrSå
(
T˛_I¡îp
 *
öãΩ
, *
zPå
, *
p
){

185 
	`sqlôe3_¢¥ötf
(100, 
zPå
, "%p", 
p
);

186  
TCL_OK
;

187 
	}
}

192 
	$exec_¥ötf_cb
(*
pArg
, 
¨gc
, **
¨gv
, **
«me
){

193 
T˛_DSåög
 *
°r
 = (T˛_DSåög*)
pArg
;

194 
i
;

196 if–
	`T˛_DSåögLígth
(
°r
)==0 ){

197 
i
=0; i<
¨gc
; i++){

198 
	`T˛_DSåögAµídEÀmít
(
°r
, 
«me
[
i
] ?Çame[i] : "NULL");

201 
i
=0; i<
¨gc
; i++){

202 
	`T˛_DSåögAµídEÀmít
(
°r
, 
¨gv
[
i
] ?árgv[i] : "NULL");

205 
	}
}

210 #i‡!
deföed
(
SQLITE_OMIT_TRACE
Ë&& deföed(
SQLITE_ENABLE_IOTRACE
)

211 
FILE
 *
	giŸø˚_fûe
 = 0;

212 
	$io_åa˚_ˇŒback
(c⁄° *
zF‹m©
, ...){

213 
va_li°
 
≠
;

214 
	`va_°¨t
(
≠
, 
zF‹m©
);

215 
	`vÂrötf
(
iŸø˚_fûe
, 
zF‹m©
, 
≠
);

216 
	`va_íd
(
≠
);

217 
	`fÊush
(
iŸø˚_fûe
);

218 
	}
}

228 
SQLITE_TCLAPI
 
	$ã°_io_åa˚
(

229 *
NŸU£d
,

230 
T˛_I¡îp
 *
öãΩ
,

231 
¨gc
,

232 **
¨gv


234 #i‡!
	`deföed
(
SQLITE_OMIT_TRACE
Ë&& deföed(
SQLITE_ENABLE_IOTRACE
)

235 if–
¨gc
!=2 ){

236 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

238  
TCL_ERROR
;

240 if–
iŸø˚_fûe
 ){

241 if–
iŸø˚_fûe
!=
°dout
 && iŸø˚_fûe!=
°dîr
 ){

242 
	`f˛o£
(
iŸø˚_fûe
);

244 
iŸø˚_fûe
 = 0;

245 
sqlôe3IoTø˚
 = 0;

247 if–
¨gv
[1][0] ){

248 if–
	`°rcmp
(
¨gv
[1],"stdout")==0 ){

249 
iŸø˚_fûe
 = 
°dout
;

250 }if–
	`°rcmp
(
¨gv
[1],"stderr")==0 ){

251 
iŸø˚_fûe
 = 
°dîr
;

253 
iŸø˚_fûe
 = 
	`f›í
(
¨gv
[1], "w");

255 
sqlôe3IoTø˚
 = 
io_åa˚_ˇŒback
;

258  
TCL_OK
;

259 
	}
}

269 
SQLITE_TCLAPI
 
	$˛™g_ßnôize_addªss
(

270 *
NŸU£d
,

271 
T˛_I¡îp
 *
öãΩ
,

272 
¨gc
,

273 **
¨gv


275 
ªs
 = 0;

276 #i‡
	`deföed
(
__has_„©uª
)

277 #i‡
	`__has_„©uª
(
addªss_ßnôizî
)

278 
ªs
 = 1;

281 #ifde‡
__SANITIZE_ADDRESS__


282 
ªs
 = 1;

284 if–
ªs
==0 && 
	`gëív
("OMIT_MISUSE")!=0 )Ñes = 1;

285 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
ªs
));

286  
TCL_OK
;

287 
	}
}

296 
SQLITE_TCLAPI
 
	$ã°_exec_¥ötf
(

297 *
NŸU£d
,

298 
T˛_I¡îp
 *
öãΩ
,

299 
¨gc
,

300 **
¨gv


302 
sqlôe3
 *
db
;

303 
T˛_DSåög
 
°r
;

304 
rc
;

305 *
zEº
 = 0;

306 *
zSql
;

307 
zBuf
[30];

308 if–
¨gc
!=4 ){

309 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

311  
TCL_ERROR
;

313 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

314 
	`T˛_DSåögInô
(&
°r
);

315 
zSql
 = 
	`sqlôe3_m¥ötf
(
¨gv
[2],árgv[3]);

316 
rc
 = 
	`sqlôe3_exec
(
db
, 
zSql
, 
exec_¥ötf_cb
, &
°r
, &
zEº
);

317 
	`sqlôe3_‰ì
(
zSql
);

318 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%d", 
rc
);

319 
	`T˛_AµídEÀmít
(
öãΩ
, 
zBuf
);

320 
	`T˛_AµídEÀmít
(
öãΩ
, 
rc
==
SQLITE_OK
 ? 
	`T˛_DSåögVÆue
(&
°r
Ë: 
zEº
);

321 
	`T˛_DSåögFªe
(&
°r
);

322 if–
zEº
 ) 
	`sqlôe3_‰ì
(zErr);

323 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
db
, 
rc
ËË 
TCL_ERROR
;

324  
TCL_OK
;

325 
	}
}

334 
SQLITE_TCLAPI
 
	$ã°_exec_hex
(

335 *
NŸU£d
,

336 
T˛_I¡îp
 *
öãΩ
,

337 
¨gc
,

338 **
¨gv


340 
sqlôe3
 *
db
;

341 
T˛_DSåög
 
°r
;

342 
rc
, 
i
, 
j
;

343 *
zEº
 = 0;

344 *
zHex
;

345 
zSql
[501];

346 
zBuf
[30];

347 if–
¨gc
!=3 ){

348 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

350  
TCL_ERROR
;

352 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

353 
zHex
 = 
¨gv
[2];

354 
i
=
j
=0; i<((
zSql
)-1Ë&& 
zHex
[j]; i++, j++){

355 if–
zHex
[
j
]=='%' && zHex[j+2] && zHex[j+2] ){

356 
zSql
[
i
] = (
	`ã°HexToI¡
(
zHex
[
j
+1])<<4) +ÅestHexToInt(zHex[j+2]);

357 
j
 += 2;

359 
zSql
[
i
] = 
zHex
[
j
];

362 
zSql
[
i
] = 0;

363 
	`T˛_DSåögInô
(&
°r
);

364 
rc
 = 
	`sqlôe3_exec
(
db
, 
zSql
, 
exec_¥ötf_cb
, &
°r
, &
zEº
);

365 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%d", 
rc
);

366 
	`T˛_AµídEÀmít
(
öãΩ
, 
zBuf
);

367 
	`T˛_AµídEÀmít
(
öãΩ
, 
rc
==
SQLITE_OK
 ? 
	`T˛_DSåögVÆue
(&
°r
Ë: 
zEº
);

368 
	`T˛_DSåögFªe
(&
°r
);

369 if–
zEº
 ) 
	`sqlôe3_‰ì
(zErr);

370 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
db
, 
rc
ËË 
TCL_ERROR
;

371  
TCL_OK
;

372 
	}
}

380 
SQLITE_TCLAPI
 
	$db_íãr
(

381 *
NŸU£d
,

382 
T˛_I¡îp
 *
öãΩ
,

383 
¨gc
,

384 **
¨gv


386 
sqlôe3
 *
db
;

387 if–
¨gc
!=2 ){

388 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

390  
TCL_ERROR
;

392 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

393 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

394  
TCL_OK
;

395 
	}
}

396 
SQLITE_TCLAPI
 
	$db_Àave
(

397 *
NŸU£d
,

398 
T˛_I¡îp
 *
öãΩ
,

399 
¨gc
,

400 **
¨gv


402 
sqlôe3
 *
db
;

403 if–
¨gc
!=2 ){

404 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

406  
TCL_ERROR
;

408 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

409 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

410  
TCL_OK
;

411 
	}
}

418 
SQLITE_TCLAPI
 
	$ã°_exec
(

419 *
NŸU£d
,

420 
T˛_I¡îp
 *
öãΩ
,

421 
¨gc
,

422 **
¨gv


424 
sqlôe3
 *
db
;

425 
T˛_DSåög
 
°r
;

426 
rc
;

427 *
zEº
 = 0;

428 *
zSql
;

429 
i
, 
j
;

430 
zBuf
[30];

431 if–
¨gc
!=3 ){

432 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

434  
TCL_ERROR
;

436 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

437 
	`T˛_DSåögInô
(&
°r
);

438 
zSql
 = 
	`sqlôe3_m¥ötf
("%s", 
¨gv
[2]);

439 
i
=
j
=0; 
zSql
[i];){

440 if–
zSql
[
i
]=='%' ){

441 
zSql
[
j
++] = (
	`ã°HexToI¡
(zSql[
i
+1])<<4) +ÅestHexToInt(zSql[i+2]);

442 
i
 += 3;

444 
zSql
[
j
++] = zSql[
i
++];

447 
zSql
[
j
] = 0;

448 
rc
 = 
	`sqlôe3_exec
(
db
, 
zSql
, 
exec_¥ötf_cb
, &
°r
, &
zEº
);

449 
	`sqlôe3_‰ì
(
zSql
);

450 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%d", 
rc
);

451 
	`T˛_AµídEÀmít
(
öãΩ
, 
zBuf
);

452 
	`T˛_AµídEÀmít
(
öãΩ
, 
rc
==
SQLITE_OK
 ? 
	`T˛_DSåögVÆue
(&
°r
Ë: 
zEº
);

453 
	`T˛_DSåögFªe
(&
°r
);

454 if–
zEº
 ) 
	`sqlôe3_‰ì
(zErr);

455 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
db
, 
rc
ËË 
TCL_ERROR
;

456  
TCL_OK
;

457 
	}
}

465 
SQLITE_TCLAPI
 
	$ã°_exec_ƒ
(

466 *
NŸU£d
,

467 
T˛_I¡îp
 *
öãΩ
,

468 
¨gc
,

469 **
¨gv


471 
sqlôe3
 *
db
;

472 
rc
;

473 *
zEº
 = 0;

474 if–
¨gc
!=3 ){

475 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

477  
TCL_ERROR
;

479 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

480 
rc
 = 
	`sqlôe3_exec
(
db
, 
¨gv
[2], 0, 0, &
zEº
);

481 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
db
, 
rc
ËË 
TCL_ERROR
;

482  
TCL_OK
;

483 
	}
}

492 
SQLITE_TCLAPI
 
	$ã°_m¥ötf_z
(

493 *
NŸU£d
,

494 
T˛_I¡îp
 *
öãΩ
,

495 
¨gc
,

496 **
¨gv


498 *
zResu…
 = 0;

499 
i
;

501 
i
=2; i<
¨gc
 && (i==2 || 
zResu…
); i++){

502 
zResu…
 = 
	`sqlôe3_m¥ötf
("%z%s%s", zResu…, 
¨gv
[1],árgv[
i
]);

504 
	`T˛_AµídResu…
(
öãΩ
, 
zResu…
, 0);

505 
	`sqlôe3_‰ì
(
zResu…
);

506  
TCL_OK
;

507 
	}
}

515 
SQLITE_TCLAPI
 
	$ã°_m¥ötf_n
(

516 *
NŸU£d
,

517 
T˛_I¡îp
 *
öãΩ
,

518 
¨gc
,

519 **
¨gv


521 *
zSå
;

522 
n
 = 0;

523 
zSå
 = 
	`sqlôe3_m¥ötf
("%s%n", 
¨gv
[1], &
n
);

524 
	`sqlôe3_‰ì
(
zSå
);

525 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
n
));

526  
TCL_OK
;

527 
	}
}

539 
SQLITE_TCLAPI
 
	$ã°_¢¥ötf_öt
(

540 *
NŸU£d
,

541 
T˛_I¡îp
 *
öãΩ
,

542 
¨gc
,

543 **
¨gv


545 
zSå
[100];

546 
n
 = 
	`©oi
(
¨gv
[1]);

547 c⁄° *
zF‹m©
 = 
¨gv
[2];

548 
a1
 = 
	`©oi
(
¨gv
[3]);

549 if–
n
>(
zSå
) )Ç = (zStr);

550 
	`sqlôe3_¢¥ötf
((
zSå
), zStr, "abcdefghijklmnopqrstuvwxyz");

551 
	`sqlôe3_¢¥ötf
(
n
, 
zSå
, 
zF‹m©
, 
a1
);

552 
	`T˛_AµídResu…
(
öãΩ
, 
zSå
, 0);

553  
TCL_OK
;

554 
	}
}

556 #i‚de‡
SQLITE_OMIT_GET_TABLE


565 
SQLITE_TCLAPI
 
	$ã°_gë_èbÀ_¥ötf
(

566 *
NŸU£d
,

567 
T˛_I¡îp
 *
öãΩ
,

568 
¨gc
,

569 **
¨gv


571 
sqlôe3
 *
db
;

572 
T˛_DSåög
 
°r
;

573 
rc
;

574 *
zEº
 = 0;

575 
nRow
 = 0, 
nCﬁ
 = 0;

576 **
aResu…
;

577 
i
;

578 
zBuf
[30];

579 *
zSql
;

580 
ªsCou¡
 = -1;

581 if–
¨gc
==5 ){

582 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[4], &
ªsCou¡
ËË 
TCL_ERROR
;

584 if–
¨gc
!=4 &&árgc!=5 ){

585 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

587  
TCL_ERROR
;

589 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

590 
	`T˛_DSåögInô
(&
°r
);

591 
zSql
 = 
	`sqlôe3_m¥ötf
(
¨gv
[2],argv[3]);

592 if–
¨gc
==5 ){

593 
rc
 = 
	`sqlôe3_gë_èbÀ
(
db
, 
zSql
, &
aResu…
, 0, 0, &
zEº
);

595 
rc
 = 
	`sqlôe3_gë_èbÀ
(
db
, 
zSql
, &
aResu…
, &
nRow
, &
nCﬁ
, &
zEº
);

596 
ªsCou¡
 = (
nRow
+1)*
nCﬁ
;

598 
	`sqlôe3_‰ì
(
zSql
);

599 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%d", 
rc
);

600 
	`T˛_AµídEÀmít
(
öãΩ
, 
zBuf
);

601 if–
rc
==
SQLITE_OK
 ){

602 if–
¨gc
==4 ){

603 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%d", 
nRow
);

604 
	`T˛_AµídEÀmít
(
öãΩ
, 
zBuf
);

605 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%d", 
nCﬁ
);

606 
	`T˛_AµídEÀmít
(
öãΩ
, 
zBuf
);

608 
i
=0; i<
ªsCou¡
; i++){

609 
	`T˛_AµídEÀmít
(
öãΩ
, 
aResu…
[
i
] ?áResult[i] : "NULL");

612 
	`T˛_AµídEÀmít
(
öãΩ
, 
zEº
);

614 
	`sqlôe3_‰ì_èbÀ
(
aResu…
);

615 if–
zEº
 ) 
	`sqlôe3_‰ì
(zErr);

616 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
db
, 
rc
ËË 
TCL_ERROR
;

617  
TCL_OK
;

618 
	}
}

628 
SQLITE_TCLAPI
 
	$ã°_œ°_rowid
(

629 *
NŸU£d
,

630 
T˛_I¡îp
 *
öãΩ
,

631 
¨gc
,

632 **
¨gv


634 
sqlôe3
 *
db
;

635 
zBuf
[30];

637 if–
¨gc
!=2 ){

638 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0], " DB\"", 0);

639  
TCL_ERROR
;

641 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

642 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%Œd", 
	`sqlôe3_œ°_ö£π_rowid
(
db
));

643 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

644  
SQLITE_OK
;

645 
	}
}

652 
SQLITE_TCLAPI
 
	$ã°_key
(

653 *
NŸU£d
,

654 
T˛_I¡îp
 *
öãΩ
,

655 
¨gc
,

656 **
¨gv


658 #i‡
	`deföed
(
SQLITE_HAS_CODEC
Ë&& !deföed(
SQLITE_OMIT_CODEC_FROM_TCL
)

659 
sqlôe3
 *
db
;

660 c⁄° *
zKey
;

661 
nKey
;

662 if–
¨gc
!=3 ){

663 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

665  
TCL_ERROR
;

667 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

668 
zKey
 = 
¨gv
[2];

669 
nKey
 = 
	`°æí
(
zKey
);

670 
	`sqlôe3_key
(
db
, 
zKey
, 
nKey
);

672  
TCL_OK
;

673 
	}
}

680 
SQLITE_TCLAPI
 
	$ã°_ªkey
(

681 *
NŸU£d
,

682 
T˛_I¡îp
 *
öãΩ
,

683 
¨gc
,

684 **
¨gv


686 #ifde‡
SQLITE_HAS_CODEC


687 
sqlôe3
 *
db
;

688 c⁄° *
zKey
;

689 
nKey
;

690 if–
¨gc
!=3 ){

691 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

693  
TCL_ERROR
;

695 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

696 
zKey
 = 
¨gv
[2];

697 
nKey
 = 
	`°æí
(
zKey
);

698 
	`sqlôe3_ªkey
(
db
, 
zKey
, 
nKey
);

700  
TCL_OK
;

701 
	}
}

708 
SQLITE_TCLAPI
 
	$sqlôe_ã°_˛o£
(

709 *
NŸU£d
,

710 
T˛_I¡îp
 *
öãΩ
,

711 
¨gc
,

712 **
¨gv


714 
sqlôe3
 *
db
;

715 
rc
;

716 if–
¨gc
!=2 ){

717 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

719  
TCL_ERROR
;

721 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

722 
rc
 = 
	`sqlôe3_˛o£
(
db
);

723 
	`T˛_SëResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 
TCL_STATIC
);

724  
TCL_OK
;

725 
	}
}

732 
SQLITE_TCLAPI
 
	$sqlôe_ã°_˛o£_v2
(

733 *
NŸU£d
,

734 
T˛_I¡îp
 *
öãΩ
,

735 
¨gc
,

736 **
¨gv


738 
sqlôe3
 *
db
;

739 
rc
;

740 if–
¨gc
!=2 ){

741 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

743  
TCL_ERROR
;

745 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

746 
rc
 = 
	`sqlôe3_˛o£_v2
(
db
);

747 
	`T˛_SëResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 
TCL_STATIC
);

748  
TCL_OK
;

749 
	}
}

755 
	$t1_i‚uŒFunc
(

756 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

757 
¨gc
,

758 
sqlôe3_vÆue
 **
¨gv


760 
i
;

761 
i
=0; i<
¨gc
; i++){

762 if–
SQLITE_NULL
!=
	`sqlôe3_vÆue_ty≥
(
¨gv
[
i
]) ){

763 
n
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[
i
]);

764 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, (*)
	`sqlôe3_vÆue_ãxt
(
¨gv
[
i
]),

765 
n
, 
SQLITE_TRANSIENT
);

769 
	}
}

776 
	$hex8Func
(
sqlôe3_c⁄ãxt
 *
p
, 
¨gc
, 
sqlôe3_vÆue
 **
¨gv
){

777 c⁄° *
z
;

778 
i
;

779 
zBuf
[200];

780 
z
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

781 
i
=0; i<(
zBuf
)/2 - 2 && 
z
[i]; i++){

782 
	`sqlôe3_¢¥ötf
((
zBuf
)-
i
*2, &zBuf[i*2], "%02x", 
z
[i]);

784 
zBuf
[
i
*2] = 0;

785 
	`sqlôe3_ªsu…_ãxt
(
p
, (*)
zBuf
, -1, 
SQLITE_TRANSIENT
);

786 
	}
}

787 #i‚de‡
SQLITE_OMIT_UTF16


788 
	$hex16Func
(
sqlôe3_c⁄ãxt
 *
p
, 
¨gc
, 
sqlôe3_vÆue
 **
¨gv
){

789 c⁄° *
z
;

790 
i
;

791 
zBuf
[400];

792 
z
 = 
	`sqlôe3_vÆue_ãxt16
(
¨gv
[0]);

793 
i
=0; i<(
zBuf
)/4 - 4 && 
z
[i]; i++){

794 
	`sqlôe3_¢¥ötf
((
zBuf
)-
i
*4, &zBuf[i*4],"%04x", 
z
[i]&0xff);

796 
zBuf
[
i
*4] = 0;

797 
	`sqlôe3_ªsu…_ãxt
(
p
, (*)
zBuf
, -1, 
SQLITE_TRANSIENT
);

798 
	}
}

804 
	sd°r
 {

805 
	mnAŒoc
;

806 
	mnU£d
;

807 *
	mz
;

813 
	$d°rAµíd
(
d°r
 *
p
, c⁄° *
z
, 
dividî
){

814 
n
 = ()
	`°æí
(
z
);

815 if–
p
->
nU£d
 + 
n
 + 2 >Ö->
nAŒoc
 ){

816 *
zNew
;

817 
p
->
nAŒoc
 =Ö->nAŒoc*2 + 
n
 + 200;

818 
zNew
 = 
	`sqlôe3_ªÆloc
(
p
->
z
,Ö->
nAŒoc
);

819 if–
zNew
==0 ){

820 
	`sqlôe3_‰ì
(
p
->
z
);

821 
	`mem£t
(
p
, 0, (*p));

824 
p
->
z
 = 
zNew
;

826 if–
dividî
 && 
p
->
nU£d
>0 ){

827 
p
->
z
[p->
nU£d
++] = 
dividî
;

829 
	`mem˝y
(&
p
->
z
[p->
nU£d
], z, 
n
+1);

830 
p
->
nU£d
 +
n
;

831 
	}
}

836 
	$execFuncCÆlback
(*
pD©a
, 
¨gc
, **
¨gv
, **
NŸU£d
){

837 
d°r
 *
p
 = (d°r*)
pD©a
;

838 
i
;

839 
i
=0; i<
¨gc
; i++){

840 if–
¨gv
[
i
]==0 ){

841 
	`d°rAµíd
(
p
, "NULL", ' ');

843 
	`d°rAµíd
(
p
, 
¨gv
[
i
], ' ');

847 
	}
}

860 
	$sqlôe3ExecFunc
(

861 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

862 
¨gc
,

863 
sqlôe3_vÆue
 **
¨gv


865 
d°r
 
x
;

866 
	`mem£t
(&
x
, 0, (x));

867 ()
	`sqlôe3_exec
((
sqlôe3
*)
	`sqlôe3_u£r_d©a
(
c⁄ãxt
),

868 (*)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]),

869 
execFuncCÆlback
, &
x
, 0);

870 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
x
.
z
, x.
nU£d
, 
SQLITE_TRANSIENT
);

871 
	`sqlôe3_‰ì
(
x
.
z
);

872 
	}
}

890 
	$tkt2213Fun˘i⁄
(

891 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

892 
¨gc
,

893 
sqlôe3_vÆue
 **
¨gv


895 
nText
;

896 c⁄° *
zText1
;

897 c⁄° *
zText2
;

898 c⁄° *
zText3
;

900 
nText
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[0]);

901 
zText1
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

902 
zText2
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

903 
zText3
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

905 if–
zText1
!=
zText2
 || zText2!=
zText3
 ){

906 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
, "tkt2213 isÇot fixed", -1);

908 *
zC›y
 = (*)
	`sqlôe3_mÆloc
(
nText
);

909 
	`mem˝y
(
zC›y
, 
zText1
, 
nText
);

910 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
zC›y
, 
nText
, 
sqlôe3_‰ì
);

912 
	}
}

938 
	$±rChngFun˘i⁄
(

939 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

940 
¨gc
,

941 
sqlôe3_vÆue
 **
¨gv


943 c⁄° *
p1
, *
p2
;

944 c⁄° *
zCmd
;

945 if–
¨gc
!=4 ) ;

946 
zCmd
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[1]);

947 if–
zCmd
==0 ) ;

948 if–
	`°rcmp
(
zCmd
,"text")==0 ){

949 
p1
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

950 #i‚de‡
SQLITE_OMIT_UTF16


951 }if–
	`°rcmp
(
zCmd
, "text16")==0 ){

952 
p1
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt16
(
¨gv
[0]);

954 }if–
	`°rcmp
(
zCmd
, "blob")==0 ){

955 
p1
 = (c⁄° *)
	`sqlôe3_vÆue_blob
(
¨gv
[0]);

959 
zCmd
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[2]);

960 if–
zCmd
==0 ) ;

961 if–
	`°rcmp
(
zCmd
,"bytes")==0 ){

962 
	`sqlôe3_vÆue_byãs
(
¨gv
[0]);

963 #i‚de‡
SQLITE_OMIT_UTF16


964 }if–
	`°rcmp
(
zCmd
, "bytes16")==0 ){

965 
	`sqlôe3_vÆue_byãs16
(
¨gv
[0]);

967 }if–
	`°rcmp
(
zCmd
, "noop")==0 ){

972 
zCmd
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[3]);

973 if–
zCmd
==0 ) ;

974 if–
	`°rcmp
(
zCmd
,"text")==0 ){

975 
p2
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

976 #i‚de‡
SQLITE_OMIT_UTF16


977 }if–
	`°rcmp
(
zCmd
, "text16")==0 ){

978 
p2
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt16
(
¨gv
[0]);

980 }if–
	`°rcmp
(
zCmd
, "blob")==0 ){

981 
p2
 = (c⁄° *)
	`sqlôe3_vÆue_blob
(
¨gv
[0]);

985 
	`sqlôe3_ªsu…_öt
(
c⁄ãxt
, 
p1
!=
p2
);

986 
	}
}

992 
	$n⁄dëîmöi°icFun˘i⁄
(

993 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

994 
¨gc
,

995 
sqlôe3_vÆue
 **
¨gv


997 
˙t
 = 0;

998 
	`sqlôe3_ªsu…_öt
(
c⁄ãxt
, 
˙t
++);

999 
	}
}

1016 
SQLITE_TCLAPI
 
	$ã°_¸óã_fun˘i⁄
(

1017 *
NŸU£d
,

1018 
T˛_I¡îp
 *
öãΩ
,

1019 
¨gc
,

1020 **
¨gv


1022 
rc
;

1023 
sqlôe3
 *
db
;

1025 if–
¨gc
!=2 ){

1026 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

1028  
TCL_ERROR
;

1030 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

1031 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "x_cﬂÀs˚", -1, 
SQLITE_UTF8
, 0,

1032 
t1_i‚uŒFunc
, 0, 0);

1033 if–
rc
==
SQLITE_OK
 ){

1034 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "hex8", 1, 
SQLITE_UTF8
 | 
SQLITE_DETERMINISTIC
,

1035 0, 
hex8Func
, 0, 0);

1037 #i‚de‡
SQLITE_OMIT_UTF16


1038 if–
rc
==
SQLITE_OK
 ){

1039 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "hex16", 1, 
SQLITE_UTF16
 | 
SQLITE_DETERMINISTIC
,

1040 0, 
hex16Func
, 0, 0);

1043 if–
rc
==
SQLITE_OK
 ){

1044 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "tkt2213func", 1, 
SQLITE_ANY
, 0,

1045 
tkt2213Fun˘i⁄
, 0, 0);

1047 if–
rc
==
SQLITE_OK
 ){

1048 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "poöãr_ch™ge", 4, 
SQLITE_ANY
, 0,

1049 
±rChngFun˘i⁄
, 0, 0);

1056 if–
rc
==
SQLITE_OK
 ){

1057 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "cou¡î1", -1, 
SQLITE_UTF8
,

1058 0, 
n⁄dëîmöi°icFun˘i⁄
, 0, 0);

1060 if–
rc
==
SQLITE_OK
 ){

1061 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "cou¡î2", -1, 
SQLITE_UTF8
|
SQLITE_DETERMINISTIC
,

1062 0, 
n⁄dëîmöi°icFun˘i⁄
, 0, 0);

1065 #i‚de‡
SQLITE_OMIT_UTF16


1068 if–
rc
==
SQLITE_OK
 ){

1069 c⁄° *
zUtf16
;

1070 
sqlôe3_vÆue
 *
pVÆ
;

1071 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

1072 
pVÆ
 = 
	`sqlôe3VÆueNew
(
db
);

1073 
	`sqlôe3VÆueSëSå
(
pVÆ
, -1, "x_sqlôe_exec", 
SQLITE_UTF8
, 
SQLITE_STATIC
);

1074 
zUtf16
 = 
	`sqlôe3VÆueText
(
pVÆ
, 
SQLITE_UTF16NATIVE
);

1075 if–
db
->
mÆlocFaûed
 ){

1076 
rc
 = 
SQLITE_NOMEM
;

1078 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄16
(
db
, 
zUtf16
,

1079 1, 
SQLITE_UTF16
, 
db
, 
sqlôe3ExecFunc
, 0, 0);

1081 
	`sqlôe3VÆueFªe
(
pVÆ
);

1082 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

1086 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
db
, 
rc
ËË 
TCL_ERROR
;

1087 
	`T˛_SëResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 0);

1088  
TCL_OK
;

1089 
	}
}

1102 
t1Cou¡Ctx
 
	tt1Cou¡Ctx
;

1103 
	st1Cou¡Ctx
 {

1104 
	mn
;

1106 
	$t1Cou¡Sãp
(

1107 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

1108 
¨gc
,

1109 
sqlôe3_vÆue
 **
¨gv


1111 
t1Cou¡Ctx
 *
p
;

1112 
p
 = 
	`sqlôe3_aggªg©e_c⁄ãxt
(
c⁄ãxt
, (*p));

1113 if–(
¨gc
==0 || 
SQLITE_NULL
!=
	`sqlôe3_vÆue_ty≥
(
¨gv
[0]ËË&& 
p
 ){

1114 
p
->
n
++;

1116 if–
¨gc
>0 ){

1117 
v
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[0]);

1118 if–
v
==40 ){

1119 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
, "value of 40 handedÅo x_count", -1);

1120 #i‚de‡
SQLITE_OMIT_UTF16


1121 }if–
v
==41 ){

1122 c⁄° 
zUtf16EºMsg
[] = { 0, 0x61, 0, 0x62, 0, 0x63, 0, 0, 0};

1123 
	`sqlôe3_ªsu…_îr‹16
(
c⁄ãxt
, &
zUtf16EºMsg
[1-
SQLITE_BIGENDIAN
], -1);

1127 
	}
}

1128 
	$t1Cou¡FöÆize
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
){

1129 
t1Cou¡Ctx
 *
p
;

1130 
p
 = 
	`sqlôe3_aggªg©e_c⁄ãxt
(
c⁄ãxt
, (*p));

1131 if–
p
 ){

1132 if–
p
->
n
==42 ){

1133 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
, "x_countÅotalsÅo 42", -1);

1135 
	`sqlôe3_ªsu…_öt
(
c⁄ãxt
, 
p
 ?Ö->
n
 : 0);

1138 
	}
}

1140 #i‚de‡
SQLITE_OMIT_DEPRECATED


1141 
	$ÀgacyCou¡Sãp
(

1142 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

1143 
¨gc
,

1144 
sqlôe3_vÆue
 **
¨gv


1147 
	}
}

1149 
	$ÀgacyCou¡FöÆize
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
){

1150 
	`sqlôe3_ªsu…_öt
(
c⁄ãxt
, 
	`sqlôe3_aggªg©e_cou¡
(context));

1151 
	}
}

1173 
SQLITE_TCLAPI
 
	$ã°_¸óã_aggªg©e
(

1174 *
NŸU£d
,

1175 
T˛_I¡îp
 *
öãΩ
,

1176 
¨gc
,

1177 **
¨gv


1179 
sqlôe3
 *
db
;

1180 
rc
;

1181 if–
¨gc
!=2 ){

1182 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

1184  
TCL_ERROR
;

1186 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

1187 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "x_cou¡", 0, 
SQLITE_UTF8
, 0, 0,

1188 
t1Cou¡Sãp
,
t1Cou¡FöÆize
);

1189 if–
rc
==
SQLITE_OK
 ){

1190 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "x_cou¡", 1, 
SQLITE_UTF8
, 0, 0,

1191 
t1Cou¡Sãp
,
t1Cou¡FöÆize
);

1193 #i‚de‡
SQLITE_OMIT_DEPRECATED


1194 if–
rc
==
SQLITE_OK
 ){

1195 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "Àgacy_cou¡", 0, 
SQLITE_ANY
, 0, 0,

1196 
ÀgacyCou¡Sãp
, 
ÀgacyCou¡FöÆize


1200 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
db
, 
rc
ËË 
TCL_ERROR
;

1201 
	`T˛_SëResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 0);

1202  
TCL_OK
;

1203 
	}
}

1214 
SQLITE_TCLAPI
 
	$ã°_¥ötf
(

1215 *
NŸU£d
,

1216 
T˛_I¡îp
 *
öãΩ
,

1217 
¨gc
,

1218 **
¨gv


1220 if–
¨gc
!=2 ){

1221 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

1223  
TCL_ERROR
;

1225 
	`¥ötf
("%s\n", 
¨gv
[1]);

1226  
TCL_OK
;

1227 
	}
}

1236 
SQLITE_TCLAPI
 
	$sqlôe3_m¥ötf_öt
(

1237 *
NŸU£d
,

1238 
T˛_I¡îp
 *
öãΩ
,

1239 
¨gc
,

1240 **
¨gv


1242 
a
[3], 
i
;

1243 *
z
;

1244 if–
¨gc
!=5 ){

1245 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

1247  
TCL_ERROR
;

1249 
i
=2; i<5; i++){

1250 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[
i
], &
a
[i-2]ËË 
TCL_ERROR
;

1252 
z
 = 
	`sqlôe3_m¥ötf
(
¨gv
[1], 
a
[0],á[1],á[2]);

1253 
	`T˛_AµídResu…
(
öãΩ
, 
z
, 0);

1254 
	`sqlôe3_‰ì
(
z
);

1255  
TCL_OK
;

1256 
	}
}

1263 
SQLITE_TCLAPI
 
	$sqlôe3_m¥ötf_öt64
(

1264 *
NŸU£d
,

1265 
T˛_I¡îp
 *
öãΩ
,

1266 
¨gc
,

1267 **
¨gv


1269 
i
;

1270 
sqlôe_öt64
 
a
[3];

1271 *
z
;

1272 if–
¨gc
!=5 ){

1273 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

1275  
TCL_ERROR
;

1277 
i
=2; i<5; i++){

1278 if–
	`sqlôe3Atoi64
(
¨gv
[
i
], &
a
[i-2], 
	`sqlôe3SåÀn30
◊rgv[i]), 
SQLITE_UTF8
) ){

1279 
	`T˛_AµídResu…
(
öãΩ
, "argument isÇotá valid 64-bit integer", 0);

1280  
TCL_ERROR
;

1283 
z
 = 
	`sqlôe3_m¥ötf
(
¨gv
[1], 
a
[0],á[1],á[2]);

1284 
	`T˛_AµídResu…
(
öãΩ
, 
z
, 0);

1285 
	`sqlôe3_‰ì
(
z
);

1286  
TCL_OK
;

1287 
	}
}

1296 
SQLITE_TCLAPI
 
	$sqlôe3_m¥ötf_l⁄g
(

1297 *
NŸU£d
,

1298 
T˛_I¡îp
 *
öãΩ
,

1299 
¨gc
,

1300 **
¨gv


1302 
i
;

1303 
a
[3];

1304 
b
[3];

1305 *
z
;

1306 if–
¨gc
!=5 ){

1307 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

1309  
TCL_ERROR
;

1311 
i
=2; i<5; i++){

1312 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[
i
], &
b
[i-2]ËË 
TCL_ERROR
;

1313 
a
[
i
-2] = ()
b
[i-2];

1314 
a
[
i
-2] &(((
u64
)1)<<(()*8))-1;

1316 
z
 = 
	`sqlôe3_m¥ötf
(
¨gv
[1], 
a
[0],á[1],á[2]);

1317 
	`T˛_AµídResu…
(
öãΩ
, 
z
, 0);

1318 
	`sqlôe3_‰ì
(
z
);

1319  
TCL_OK
;

1320 
	}
}

1327 
SQLITE_TCLAPI
 
	$sqlôe3_m¥ötf_°r
(

1328 *
NŸU£d
,

1329 
T˛_I¡îp
 *
öãΩ
,

1330 
¨gc
,

1331 **
¨gv


1333 
a
[3], 
i
;

1334 *
z
;

1335 if–
¨gc
<4 ||árgc>5 ){

1336 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

1338  
TCL_ERROR
;

1340 
i
=2; i<4; i++){

1341 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[
i
], &
a
[i-2]ËË 
TCL_ERROR
;

1343 
z
 = 
	`sqlôe3_m¥ötf
(
¨gv
[1], 
a
[0],á[1], 
¨gc
>4 ?árgv[4] : 
NULL
);

1344 
	`T˛_AµídResu…
(
öãΩ
, 
z
, 0);

1345 
	`sqlôe3_‰ì
(
z
);

1346  
TCL_OK
;

1347 
	}
}

1354 
SQLITE_TCLAPI
 
	$sqlôe3_¢¥ötf_°r
(

1355 *
NŸU£d
,

1356 
T˛_I¡îp
 *
öãΩ
,

1357 
¨gc
,

1358 **
¨gv


1360 
a
[3], 
i
;

1361 
n
;

1362 *
z
;

1363 if–
¨gc
<5 ||árgc>6 ){

1364 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

1366  
TCL_ERROR
;

1368 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[1], &
n
ËË 
TCL_ERROR
;

1369 if–
n
<0 ){

1370 
	`T˛_AµídResu…
(
öãΩ
, "N must beÇon-negative", 0);

1371  
TCL_ERROR
;

1373 
i
=3; i<5; i++){

1374 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[
i
], &
a
[i-3]ËË 
TCL_ERROR
;

1376 
z
 = 
	`sqlôe3_mÆloc
–
n
+1 );

1377 
	`sqlôe3_¢¥ötf
(
n
, 
z
, 
¨gv
[2], 
a
[0],á[1], 
¨gc
>4 ?árgv[5] : 
NULL
);

1378 
	`T˛_AµídResu…
(
öãΩ
, 
z
, 0);

1379 
	`sqlôe3_‰ì
(
z
);

1380  
TCL_OK
;

1381 
	}
}

1388 
SQLITE_TCLAPI
 
	$sqlôe3_m¥ötf_doubÀ
(

1389 *
NŸU£d
,

1390 
T˛_I¡îp
 *
öãΩ
,

1391 
¨gc
,

1392 **
¨gv


1394 
a
[3], 
i
;

1395 
r
;

1396 *
z
;

1397 if–
¨gc
!=5 ){

1398 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

1400  
TCL_ERROR
;

1402 
i
=2; i<4; i++){

1403 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[
i
], &
a
[i-2]ËË 
TCL_ERROR
;

1405 if–
	`T˛_GëDoubÀ
(
öãΩ
, 
¨gv
[4], &
r
ËË 
TCL_ERROR
;

1406 
z
 = 
	`sqlôe3_m¥ötf
(
¨gv
[1], 
a
[0],á[1], 
r
);

1407 
	`T˛_AµídResu…
(
öãΩ
, 
z
, 0);

1408 
	`sqlôe3_‰ì
(
z
);

1409  
TCL_OK
;

1410 
	}
}

1419 
SQLITE_TCLAPI
 
	$sqlôe3_m¥ötf_sˇÀd
(

1420 *
NŸU£d
,

1421 
T˛_I¡îp
 *
öãΩ
,

1422 
¨gc
,

1423 **
¨gv


1425 
i
;

1426 
r
[2];

1427 *
z
;

1428 if–
¨gc
!=4 ){

1429 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

1431  
TCL_ERROR
;

1433 
i
=2; i<4; i++){

1434 if–
	`T˛_GëDoubÀ
(
öãΩ
, 
¨gv
[
i
], &
r
[i-2]ËË 
TCL_ERROR
;

1436 
z
 = 
	`sqlôe3_m¥ötf
(
¨gv
[1], 
r
[0]*r[1]);

1437 
	`T˛_AµídResu…
(
öãΩ
, 
z
, 0);

1438 
	`sqlôe3_‰ì
(
z
);

1439  
TCL_OK
;

1440 
	}
}

1449 
SQLITE_TCLAPI
 
	$sqlôe3_m¥ötf_°r⁄ly
(

1450 *
NŸU£d
,

1451 
T˛_I¡îp
 *
öãΩ
,

1452 
¨gc
,

1453 **
¨gv


1455 *
z
;

1456 if–
¨gc
!=3 ){

1457 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

1459  
TCL_ERROR
;

1461 
z
 = 
	`sqlôe3_m¥ötf
(
¨gv
[1],árgv[2]);

1462 
	`T˛_AµídResu…
(
öãΩ
, 
z
, 0);

1463 
	`sqlôe3_‰ì
(
z
);

1464  
TCL_OK
;

1465 
	}
}

1473 
SQLITE_TCLAPI
 
	$sqlôe3_m¥ötf_hexdoubÀ
(

1474 *
NŸU£d
,

1475 
T˛_I¡îp
 *
öãΩ
,

1476 
¨gc
,

1477 **
¨gv


1479 *
z
;

1480 
r
;

1481 
x1
, 
x2
;

1482 
sqlôe_uöt64
 
d
;

1483 if–
¨gc
!=3 ){

1484 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

1486  
TCL_ERROR
;

1488 if–
	`ssˇnf
(
¨gv
[2], "%08x%08x", &
x2
, &
x1
)!=2 ){

1489 
	`T˛_AµídResu…
(
öãΩ
, "2ndárgument should be 16-characters of hex", 0);

1490  
TCL_ERROR
;

1492 
d
 = 
x2
;

1493 
d
 = (d<<32Ë+ 
x1
;

1494 
	`mem˝y
(&
r
, &
d
, (r));

1495 
z
 = 
	`sqlôe3_m¥ötf
(
¨gv
[1], 
r
);

1496 
	`T˛_AµídResu…
(
öãΩ
, 
z
, 0);

1497 
	`sqlôe3_‰ì
(
z
);

1498  
TCL_OK
;

1499 
	}
}

1505 #i‡!
deföed
(
SQLITE_OMIT_SHARED_CACHE
)

1506 
SQLITE_TCLAPI
 
	$ã°_íabÀ_sh¨ed
(

1507 
Clõ¡D©a
 
˛õ¡D©a
,

1508 
T˛_I¡îp
 *
öãΩ
,

1509 
objc
,

1510 
T˛_Obj
 *
CONST
 
objv
[]

1512 
rc
;

1513 
íabÀ
;

1514 
ªt
 = 0;

1516 if–
objc
!=2 && objc!=1 ){

1517 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "?BOOLEAN?");

1518  
TCL_ERROR
;

1520 
ªt
 = 
sqlôe3GlobÆC⁄fig
.
sh¨edCacheE«bÀd
;

1522 if–
objc
==2 ){

1523 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[1], &
íabÀ
) ){

1524  
TCL_ERROR
;

1526 
rc
 = 
	`sqlôe3_íabÀ_sh¨ed_ˇche
(
íabÀ
);

1527 if–
rc
!=
SQLITE_OK
 ){

1528 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºSå
(
rc
), 
TCL_STATIC
);

1529  
TCL_ERROR
;

1532 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewBoﬁónObj
(
ªt
));

1533  
TCL_OK
;

1534 
	}
}

1543 
SQLITE_TCLAPI
 
	$ã°_exãnded_ªsu…_codes
(

1544 
Clõ¡D©a
 
˛õ¡D©a
,

1545 
T˛_I¡îp
 *
öãΩ
,

1546 
objc
,

1547 
T˛_Obj
 *
CONST
 
objv
[]

1549 
íabÀ
;

1550 
sqlôe3
 *
db
;

1552 if–
objc
!=3 ){

1553 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB BOOLEAN");

1554  
TCL_ERROR
;

1556 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

1557 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[2], &
íabÀ
ËË 
TCL_ERROR
;

1558 
	`sqlôe3_exãnded_ªsu…_codes
(
db
, 
íabÀ
);

1559  
TCL_OK
;

1560 
	}
}

1566 
SQLITE_TCLAPI
 
	$ã°_libvîsi⁄_numbî
(

1567 
Clõ¡D©a
 
˛õ¡D©a
,

1568 
T˛_I¡îp
 *
öãΩ
,

1569 
objc
,

1570 
T˛_Obj
 *
CONST
 
objv
[]

1572 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
	`sqlôe3_libvîsi⁄_numbî
()));

1573  
TCL_OK
;

1574 
	}
}

1580 
SQLITE_TCLAPI
 
	$ã°_èbÀ_cﬁumn_mëad©a
(

1581 
Clõ¡D©a
 
˛õ¡D©a
,

1582 
T˛_I¡îp
 *
öãΩ
,

1583 
objc
,

1584 
T˛_Obj
 *
CONST
 
objv
[]

1586 
sqlôe3
 *
db
;

1587 c⁄° *
zDb
;

1588 c⁄° *
zTbl
;

1589 c⁄° *
zCﬁ
;

1590 
rc
;

1591 
T˛_Obj
 *
pRë
;

1593 c⁄° *
zD©©y≥
;

1594 c⁄° *
zCﬁl£q
;

1595 
nŸnuŒ
;

1596 
¥im¨ykey
;

1597 
autoö¸emít
;

1599 if–
objc
!=5 && objc!=4 ){

1600 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB dbnameÅblname colname");

1601  
TCL_ERROR
;

1603 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

1604 
zDb
 = 
	`T˛_GëSåög
(
objv
[2]);

1605 
zTbl
 = 
	`T˛_GëSåög
(
objv
[3]);

1606 
zCﬁ
 = 
objc
==5 ? 
	`T˛_GëSåög
(
objv
[4]) : 0;

1608 if–
	`°æí
(
zDb
)==0 ) zDb = 0;

1610 
rc
 = 
	`sqlôe3_èbÀ_cﬁumn_mëad©a
(
db
, 
zDb
, 
zTbl
, 
zCﬁ
,

1611 &
zD©©y≥
, &
zCﬁl£q
, &
nŸnuŒ
, &
¥im¨ykey
, &
autoö¸emít
);

1613 if–
rc
!=
SQLITE_OK
 ){

1614 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3_îrmsg
(
db
), 0);

1615  
TCL_ERROR
;

1618 
pRë
 = 
	`T˛_NewObj
();

1619 
	`T˛_Li°ObjAµídEÀmít
(0, 
pRë
, 
	`T˛_NewSåögObj
(
zD©©y≥
, -1));

1620 
	`T˛_Li°ObjAµídEÀmít
(0, 
pRë
, 
	`T˛_NewSåögObj
(
zCﬁl£q
, -1));

1621 
	`T˛_Li°ObjAµídEÀmít
(0, 
pRë
, 
	`T˛_NewI¡Obj
(
nŸnuŒ
));

1622 
	`T˛_Li°ObjAµídEÀmít
(0, 
pRë
, 
	`T˛_NewI¡Obj
(
¥im¨ykey
));

1623 
	`T˛_Li°ObjAµídEÀmít
(0, 
pRë
, 
	`T˛_NewI¡Obj
(
autoö¸emít
));

1624 
	`T˛_SëObjResu…
(
öãΩ
, 
pRë
);

1626  
TCL_OK
;

1627 
	}
}

1629 #i‚de‡
SQLITE_OMIT_INCRBLOB


1631 
SQLITE_TCLAPI
 
	$blobH™dÀFromObj
(

1632 
T˛_I¡îp
 *
öãΩ
,

1633 
T˛_Obj
 *
pObj
,

1634 
sqlôe3_blob
 **
µBlob


1636 *
z
;

1637 
n
;

1639 
z
 = 
	`T˛_GëSåögFromObj
(
pObj
, &
n
);

1640 if–
n
==0 ){

1641 *
µBlob
 = 0;

1643 
nŸU£d
;

1644 
T˛_Ch™√l
 
ch™√l
;

1645 
Clõ¡D©a
 
ö°™˚D©a
;

1647 
ch™√l
 = 
	`T˛_GëCh™√l
(
öãΩ
, 
z
, &
nŸU£d
);

1648 if–!
ch™√l
 )  
TCL_ERROR
;

1650 
	`T˛_Flush
(
ch™√l
);

1651 
	`T˛_Sìk
(
ch™√l
, 0, 
SEEK_SET
);

1653 
ö°™˚D©a
 = 
	`T˛_GëCh™√lIn°™˚D©a
(
ch™√l
);

1654 *
µBlob
 = *((
sqlôe3_blob
 **)
ö°™˚D©a
);

1657  
TCL_OK
;

1658 
	}
}

1660 
SQLITE_TCLAPI
 
	$ã°_blob_ª›í
(

1661 
Clõ¡D©a
 
˛õ¡D©a
,

1662 
T˛_I¡îp
 *
öãΩ
,

1663 
objc
,

1664 
T˛_Obj
 *
CONST
 
objv
[]

1666 
T˛_WideI¡
 
iRowid
;

1667 
sqlôe3_blob
 *
pBlob
;

1668 
rc
;

1670 if–
objc
!=3 ){

1671 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "CHANNEL ROWID");

1672  
TCL_ERROR
;

1675 if–
	`blobH™dÀFromObj
(
öãΩ
, 
objv
[1], &
pBlob
ËË 
TCL_ERROR
;

1676 if–
	`T˛_GëWideI¡FromObj
(
öãΩ
, 
objv
[2], &
iRowid
ËË 
TCL_ERROR
;

1678 
rc
 = 
	`sqlôe3_blob_ª›í
(
pBlob
, 
iRowid
);

1679 if–
rc
!=
SQLITE_OK
 ){

1680 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_VOLATILE
);

1683  (
rc
==
SQLITE_OK
 ? 
TCL_OK
 : 
TCL_ERROR
);

1684 
	}
}

1694 
	sTe°Cﬁœti⁄X
 {

1695 
T˛_I¡îp
 *
	möãΩ
;

1696 
T˛_Obj
 *
	mpCmp
;

1697 
T˛_Obj
 *
	mpDñ
;

1699 
Te°Cﬁœti⁄X
 
	tTe°Cﬁœti⁄X
;

1700 
	$ã°Cª©eCﬁœti⁄Dñ
(*
pCtx
){

1701 
Te°Cﬁœti⁄X
 *
p
 = (Te°Cﬁœti⁄X *)
pCtx
;

1703 
rc
 = 
	`T˛_EvÆObjEx
(
p
->
öãΩ
,Ö->
pDñ
, 
TCL_EVAL_DIRECT
|
TCL_EVAL_GLOBAL
);

1704 if–
rc
!=
TCL_OK
 ){

1705 
	`T˛_BackgroundEº‹
(
p
->
öãΩ
);

1708 
	`T˛_De¸RefCou¡
(
p
->
pCmp
);

1709 
	`T˛_De¸RefCou¡
(
p
->
pDñ
);

1710 
	`sqlôe3_‰ì
((*)
p
);

1711 
	}
}

1712 
	$ã°Cª©eCﬁœti⁄Cmp
(

1713 *
pCtx
,

1714 
nLe·
,

1715 c⁄° *
zLe·
,

1716 
nRight
,

1717 c⁄° *
zRight


1719 
Te°Cﬁœti⁄X
 *
p
 = (Te°Cﬁœti⁄X *)
pCtx
;

1720 
T˛_Obj
 *
pS¸ùt
 = 
	`T˛_Du∂iˇãObj
(
p
->
pCmp
);

1721 
iRes
 = 0;

1723 
	`T˛_In¸RefCou¡
(
pS¸ùt
);

1724 
	`T˛_Li°ObjAµídEÀmít
(0, 
pS¸ùt
, 
	`T˛_NewSåögObj
((*)
zLe·
, 
nLe·
));

1725 
	`T˛_Li°ObjAµídEÀmít
(0, 
pS¸ùt
, 
	`T˛_NewSåögObj
((*)
zRight
,
nRight
));

1727 if–
TCL_OK
!=
	`T˛_EvÆObjEx
(
p
->
öãΩ
, 
pS¸ùt
, 
TCL_EVAL_DIRECT
|
TCL_EVAL_GLOBAL
)

1728 || 
TCL_OK
!=
	`T˛_GëI¡FromObj
(
p
->
öãΩ
, 
	`T˛_GëObjResu…
’->öãΩ), &
iRes
)

1730 
	`T˛_BackgroundEº‹
(
p
->
öãΩ
);

1732 
	`T˛_De¸RefCou¡
(
pS¸ùt
);

1734  
iRes
;

1735 
	}
}

1736 
SQLITE_TCLAPI
 
	$ã°_¸óã_cﬁœti⁄_v2
(

1737 
Clõ¡D©a
 
˛õ¡D©a
,

1738 
T˛_I¡îp
 *
öãΩ
,

1739 
objc
,

1740 
T˛_Obj
 *
CONST
 
objv
[]

1742 
Te°Cﬁœti⁄X
 *
p
;

1743 
sqlôe3
 *
db
;

1744 
rc
;

1746 if–
objc
!=5 ){

1747 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB-HANDLE NAME CMP-PROC DEL-PROC");

1748  
TCL_ERROR
;

1750 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

1752 
p
 = (
Te°Cﬁœti⁄X
 *)
	`sqlôe3_mÆloc
((TestCollationX));

1753 
p
->
pCmp
 = 
objv
[3];

1754 
p
->
pDñ
 = 
objv
[4];

1755 
p
->
öãΩ
 = interp;

1756 
	`T˛_In¸RefCou¡
(
p
->
pCmp
);

1757 
	`T˛_In¸RefCou¡
(
p
->
pDñ
);

1759 
rc
 = 
	`sqlôe3_¸óã_cﬁœti⁄_v2
(
db
, 
	`T˛_GëSåög
(
objv
[2]), 16,

1760 (*)
p
, 
ã°Cª©eCﬁœti⁄Cmp
, 
ã°Cª©eCﬁœti⁄Dñ


1762 if–
rc
!=
SQLITE_MISUSE
 ){

1763 
	`T˛_AµídResu…
(
öãΩ
, "sqlite3_create_collate_v2() failedÅo detect "

1765  
TCL_ERROR
;

1767 
rc
 = 
	`sqlôe3_¸óã_cﬁœti⁄_v2
(
db
, 
	`T˛_GëSåög
(
objv
[2]), 
SQLITE_UTF8
,

1768 (*)
p
, 
ã°Cª©eCﬁœti⁄Cmp
, 
ã°Cª©eCﬁœti⁄Dñ


1770  
TCL_OK
;

1771 
	}
}

1783 
Cª©eFun˘i⁄V2
 
	tCª©eFun˘i⁄V2
;

1784 
	sCª©eFun˘i⁄V2
 {

1785 
T˛_I¡îp
 *
	möãΩ
;

1786 
T˛_Obj
 *
	mpFunc
;

1787 
T˛_Obj
 *
	mpSãp
;

1788 
T˛_Obj
 *
	mpFöÆ
;

1789 
T˛_Obj
 *
	mpDe°roy
;

1791 
	$cf2Func
(
sqlôe3_c⁄ãxt
 *
˘x
, 
nArg
, 
sqlôe3_vÆue
 **
aArg
){

1792 
	}
}

1793 
	$cf2Sãp
(
sqlôe3_c⁄ãxt
 *
˘x
, 
nArg
, 
sqlôe3_vÆue
 **
aArg
){

1794 
	}
}

1795 
	$cf2FöÆ
(
sqlôe3_c⁄ãxt
 *
˘x
){

1796 
	}
}

1797 
	$cf2De°roy
(*
pU£r
){

1798 
Cª©eFun˘i⁄V2
 *
p
 = (Cª©eFun˘i⁄V2 *)
pU£r
;

1800 if–
p
->
öãΩ
 &&Ö->
pDe°roy
 ){

1801 
rc
 = 
	`T˛_EvÆObjEx
(
p
->
öãΩ
,Ö->
pDe°roy
, 0);

1802 if–
rc
!=
TCL_OK
 ) 
	`T˛_BackgroundEº‹
(
p
->
öãΩ
);

1805 if–
p
->
pFunc
 ) 
	`T˛_De¸RefCou¡
(p->pFunc);

1806 if–
p
->
pSãp
 ) 
	`T˛_De¸RefCou¡
(p->pStep);

1807 if–
p
->
pFöÆ
 ) 
	`T˛_De¸RefCou¡
(p->pFinal);

1808 if–
p
->
pDe°roy
 ) 
	`T˛_De¸RefCou¡
(p->pDestroy);

1809 
	`sqlôe3_‰ì
(
p
);

1810 
	}
}

1811 
SQLITE_TCLAPI
 
	$ã°_¸óã_fun˘i⁄_v2
(

1812 
Clõ¡D©a
 
˛õ¡D©a
,

1813 
T˛_I¡îp
 *
öãΩ
,

1814 
objc
,

1815 
T˛_Obj
 *
CONST
 
objv
[]

1817 
sqlôe3
 *
db
;

1818 c⁄° *
zFunc
;

1819 
nArg
;

1820 
íc
;

1821 
Cª©eFun˘i⁄V2
 *
p
;

1822 
i
;

1823 
rc
;

1825 
	sEncTabÀ
 {

1826 c⁄° *
zEnc
;

1827 
íc
;

1828 } 
aEnc
[] = {

1829 {"utf8", 
SQLITE_UTF8
 },

1830 {"utf16", 
SQLITE_UTF16
 },

1831 {"utf16À", 
SQLITE_UTF16LE
 },

1832 {"utf16be", 
SQLITE_UTF16BE
 },

1833 {"™y", 
SQLITE_ANY
 },

1837 if–
objc
<5 || (objc%2)==0 ){

1838 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB NAME NARG ENC SWITCHES...");

1839  
TCL_ERROR
;

1842 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

1843 
zFunc
 = 
	`T˛_GëSåög
(
objv
[2]);

1844 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
nArg
ËË 
TCL_ERROR
;

1845 if–
	`T˛_GëIndexFromObjSåu˘
(
öãΩ
, 
objv
[4], 
aEnc
, (aEnc[0]),

1846 "ícodög", 0, &
íc
)

1848  
TCL_ERROR
;

1850 
íc
 = 
aEnc
[enc].enc;

1852 
p
 = 
	`sqlôe3_mÆloc
((
Cª©eFun˘i⁄V2
));

1853 
	`as£π
–
p
 );

1854 
	`mem£t
(
p
, 0, (
Cª©eFun˘i⁄V2
));

1855 
p
->
öãΩ
 = interp;

1857 
i
=5; i<
objc
; i+=2){

1858 
iSwôch
;

1859 c⁄° *
azSwôch
[] = {"-func", "-step", "-final", "-destroy", 0};

1860 if–
	`T˛_GëIndexFromObj
(
öãΩ
, 
objv
[
i
], 
azSwôch
, "swôch", 0, &
iSwôch
) ){

1861 
	`sqlôe3_‰ì
(
p
);

1862  
TCL_ERROR
;

1865  
iSwôch
 ){

1866 0: 
p
->
pFunc
 = 
objv
[
i
+1]; ;

1867 1: 
p
->
pSãp
 = 
objv
[
i
+1]; ;

1868 2: 
p
->
pFöÆ
 = 
objv
[
i
+1]; ;

1869 3: 
p
->
pDe°roy
 = 
objv
[
i
+1]; ;

1872 if–
p
->
pFunc
 )Ö->pFun¯
	`T˛_Du∂iˇãObj
(p->pFunc);

1873 if–
p
->
pSãp
 )Ö->pSã∞
	`T˛_Du∂iˇãObj
(p->pStep);

1874 if–
p
->
pFöÆ
 )Ö->pFöÆ = 
	`T˛_Du∂iˇãObj
(p->pFinal);

1875 if–
p
->
pDe°roy
 )Ö->pDe°roy = 
	`T˛_Du∂iˇãObj
(p->pDestroy);

1877 if–
p
->
pFunc
 ) 
	`T˛_In¸RefCou¡
(p->pFunc);

1878 if–
p
->
pSãp
 ) 
	`T˛_In¸RefCou¡
(p->pStep);

1879 if–
p
->
pFöÆ
 ) 
	`T˛_In¸RefCou¡
(p->pFinal);

1880 if–
p
->
pDe°roy
 ) 
	`T˛_In¸RefCou¡
(p->pDestroy);

1882 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄_v2
(
db
, 
zFunc
, 
nArg
, 
íc
, (*)
p
,

1883 (
p
->
pFunc
 ? 
cf2Func
 : 0),

1884 (
p
->
pSãp
 ? 
cf2Sãp
 : 0),

1885 (
p
->
pFöÆ
 ? 
cf2FöÆ
 : 0),

1886 
cf2De°roy


1888 if–
rc
!=
SQLITE_OK
 ){

1889 
	`T˛_Re£tResu…
(
öãΩ
);

1890 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

1891  
TCL_ERROR
;

1893  
TCL_OK
;

1894 
	}
}

1899 
SQLITE_TCLAPI
 
	$ã°_lﬂd_exãnsi⁄
(

1900 
Clõ¡D©a
 
˛õ¡D©a
,

1901 
T˛_I¡îp
 *
öãΩ
,

1902 
objc
,

1903 
T˛_Obj
 *
CONST
 
objv
[]

1905 
T˛_CmdInfo
 
cmdInfo
;

1906 
sqlôe3
 *
db
;

1907 
rc
;

1908 *
zDb
;

1909 *
zFûe
;

1910 *
zProc
 = 0;

1911 *
zEº
 = 0;

1913 if–
objc
!=4 && objc!=3 ){

1914 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB-HANDLE FILE ?PROC?");

1915  
TCL_ERROR
;

1917 
zDb
 = 
	`T˛_GëSåög
(
objv
[1]);

1918 
zFûe
 = 
	`T˛_GëSåög
(
objv
[2]);

1919 if–
objc
==4 ){

1920 
zProc
 = 
	`T˛_GëSåög
(
objv
[3]);

1924 if–!
	`T˛_GëComm™dInfo
(
öãΩ
, 
zDb
, &
cmdInfo
) ){

1925 
	`T˛_AµídResu…
(
öãΩ
, "comm™dÇŸ found: ", 
zDb
, (*)0);

1926  
TCL_ERROR
;

1928 
db
 = ((
SqlôeDb
*)
cmdInfo
.
objClõ¡D©a
)->db;

1929 
	`as£π
(
db
);

1935 #ifde‡
SQLITE_OMIT_LOAD_EXTENSION


1936 
rc
 = 
SQLITE_ERROR
;

1937 
zEº
 = 
	`sqlôe3_m¥ötf
("this build omits sqlite3_load_extension()");

1938 ()
zProc
;

1939 ()
zFûe
;

1941 
rc
 = 
	`sqlôe3_lﬂd_exãnsi⁄
(
db
, 
zFûe
, 
zProc
, &
zEº
);

1943 if–
rc
!=
SQLITE_OK
 ){

1944 
	`T˛_SëResu…
(
öãΩ
, 
zEº
 ? zEº : "", 
TCL_VOLATILE
);

1945 
rc
 = 
TCL_ERROR
;

1947 
rc
 = 
TCL_OK
;

1949 
	`sqlôe3_‰ì
(
zEº
);

1951  
rc
;

1952 
	}
}

1957 
SQLITE_TCLAPI
 
	$ã°_íabÀ_lﬂd
(

1958 
Clõ¡D©a
 
˛õ¡D©a
,

1959 
T˛_I¡îp
 *
öãΩ
,

1960 
objc
,

1961 
T˛_Obj
 *
CONST
 
objv
[]

1963 
T˛_CmdInfo
 
cmdInfo
;

1964 
sqlôe3
 *
db
;

1965 *
zDb
;

1966 
⁄off
;

1968 if–
objc
!=3 ){

1969 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB-HANDLE ONOFF");

1970  
TCL_ERROR
;

1972 
zDb
 = 
	`T˛_GëSåög
(
objv
[1]);

1975 if–!
	`T˛_GëComm™dInfo
(
öãΩ
, 
zDb
, &
cmdInfo
) ){

1976 
	`T˛_AµídResu…
(
öãΩ
, "comm™dÇŸ found: ", 
zDb
, (*)0);

1977  
TCL_ERROR
;

1979 
db
 = ((
SqlôeDb
*)
cmdInfo
.
objClõ¡D©a
)->db;

1980 
	`as£π
(
db
);

1983 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[2], &
⁄off
) ){

1984  
TCL_ERROR
;

1987 #ifde‡
SQLITE_OMIT_LOAD_EXTENSION


1988 
	`T˛_AµídResu…
(
öãΩ
, "this build omits sqlite3_load_extension()");

1989  
TCL_ERROR
;

1991 
	`sqlôe3_íabÀ_lﬂd_exãnsi⁄
(
db
, 
⁄off
);

1992  
TCL_OK
;

1994 
	}
}

2003 
SQLITE_TCLAPI
 
	$sqlôe_ab‹t
(

2004 *
NŸU£d
,

2005 
T˛_I¡îp
 *
öãΩ
,

2006 
¨gc
,

2007 **
¨gv


2009 #i‡
	`deföed
(
_MSC_VER
)

2013 
	`_£t_ab‹t_behavi‹
–0, 
_CALL_REPORTFAULT
 );

2015 
	`exô
(255);

2016 
	`as£π
–
öãΩ
==0 );

2017  
TCL_OK
;

2018 
	}
}

2024 
	$ã°Func
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
, 
¨gc
, 
sqlôe3_vÆue
 **
¨gv
){

2025  
¨gc
>=2 ){

2026 c⁄° *
zArg0
 = (*)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

2027 if–
zArg0
 ){

2028 if–0==
	`sqlôe3SåICmp
(
zArg0
, "int") ){

2029 
	`sqlôe3_ªsu…_öt
(
c⁄ãxt
, 
	`sqlôe3_vÆue_öt
(
¨gv
[1]));

2030 }if–
	`sqlôe3SåICmp
(
zArg0
,"int64")==0 ){

2031 
	`sqlôe3_ªsu…_öt64
(
c⁄ãxt
, 
	`sqlôe3_vÆue_öt64
(
¨gv
[1]));

2032 }if–
	`sqlôe3SåICmp
(
zArg0
,"string")==0 ){

2033 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, (*)
	`sqlôe3_vÆue_ãxt
(
¨gv
[1]), -1,

2034 
SQLITE_TRANSIENT
);

2035 }if–
	`sqlôe3SåICmp
(
zArg0
,"double")==0 ){

2036 
	`sqlôe3_ªsu…_doubÀ
(
c⁄ãxt
, 
	`sqlôe3_vÆue_doubÀ
(
¨gv
[1]));

2037 }if–
	`sqlôe3SåICmp
(
zArg0
,"null")==0 ){

2038 
	`sqlôe3_ªsu…_nuŒ
(
c⁄ãxt
);

2039 }if–
	`sqlôe3SåICmp
(
zArg0
,"value")==0 ){

2040 
	`sqlôe3_ªsu…_vÆue
(
c⁄ãxt
, 
¨gv
[
	`sqlôe3_vÆue_öt
(argv[1])]);

2042 
îr‹_out
;

2045 
îr‹_out
;

2047 
¨gc
 -= 2;

2048 
¨gv
 += 2;

2052 
îr‹_out
:

2053 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
,"firstárgument should be one of: "

2055 
	}
}

2062 
SQLITE_TCLAPI
 
	$ã°_ªgi°î_func
(

2063 *
NŸU£d
,

2064 
T˛_I¡îp
 *
öãΩ
,

2065 
¨gc
,

2066 **
¨gv


2068 
sqlôe3
 *
db
;

2069 
rc
;

2070 if–
¨gc
!=3 ){

2071 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

2073  
TCL_ERROR
;

2075 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

2076 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, 
¨gv
[2], -1, 
SQLITE_UTF8
, 0,

2077 
ã°Func
, 0, 0);

2078 if–
rc
!=0 ){

2079 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºSå
(
rc
), 0);

2080  
TCL_ERROR
;

2082 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
db
, 
rc
ËË 
TCL_ERROR
;

2083  
TCL_OK
;

2084 
	}
}

2091 
SQLITE_TCLAPI
 
	$ã°_föÆize
(

2092 * 
˛õ¡D©a
,

2093 
T˛_I¡îp
 *
öãΩ
,

2094 
objc
,

2095 
T˛_Obj
 *
CONST
 
objv
[]

2097 
sqlôe3_°mt
 *
pStmt
;

2098 
rc
;

2099 
sqlôe3
 *
db
 = 0;

2101 if–
objc
!=2 ){

2102 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

2103 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " <STMT>", 0);

2104  
TCL_ERROR
;

2107 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

2109 if–
pStmt
 ){

2110 
db
 = 
	`StmtToDb
(
pStmt
);

2112 
rc
 = 
	`sqlôe3_föÆize
(
pStmt
);

2113 
	`T˛_SëResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 
TCL_STATIC
);

2114 if–
db
 && 
	`sqlôe3Te°EºCode
(
öãΩ
, db, 
rc
ËË 
TCL_ERROR
;

2115  
TCL_OK
;

2116 
	}
}

2123 
SQLITE_TCLAPI
 
	$ã°_°mt_°©us
(

2124 * 
˛õ¡D©a
,

2125 
T˛_I¡îp
 *
öãΩ
,

2126 
objc
,

2127 
T˛_Obj
 *
CONST
 
objv
[]

2129 
iVÆue
;

2130 
i
, 
›
 = 0, 
ª£tFœg
;

2131 c⁄° *
zOpName
;

2132 
sqlôe3_°mt
 *
pStmt
;

2135 c⁄° *
zName
;

2136 
›
;

2137 } 
aOp
[] = {

2138 { "SQLITE_STMTSTATUS_FULLSCAN_STEP", 
SQLITE_STMTSTATUS_FULLSCAN_STEP
 },

2139 { "SQLITE_STMTSTATUS_SORT", 
SQLITE_STMTSTATUS_SORT
 },

2140 { "SQLITE_STMTSTATUS_AUTOINDEX", 
SQLITE_STMTSTATUS_AUTOINDEX
 },

2141 { "SQLITE_STMTSTATUS_VM_STEP", 
SQLITE_STMTSTATUS_VM_STEP
 },

2143 if–
objc
!=4 ){

2144 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "STMT PARAMETER RESETFLAG");

2145  
TCL_ERROR
;

2147 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

2148 
zOpName
 = 
	`T˛_GëSåög
(
objv
[2]);

2149 
i
=0; i<
	`AºaySize
(
aOp
); i++){

2150 if–
	`°rcmp
(
aOp
[
i
].
zName
, 
zOpName
)==0 ){

2151 
›
 = 
aOp
[
i
].op;

2155 if–
i
>=
	`AºaySize
(
aOp
) ){

2156 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
›
ËË 
TCL_ERROR
;

2158 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[3], &
ª£tFœg
ËË 
TCL_ERROR
;

2159 
iVÆue
 = 
	`sqlôe3_°mt_°©us
(
pStmt
, 
›
, 
ª£tFœg
);

2160 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
iVÆue
));

2161  
TCL_OK
;

2162 
	}
}

2164 #ifde‡
SQLITE_ENABLE_STMT_SCANSTATUS


2168 
SQLITE_TCLAPI
 
	$ã°_°mt_sˇn°©us
(

2169 * 
˛õ¡D©a
,

2170 
T˛_I¡îp
 *
öãΩ
,

2171 
objc
,

2172 
T˛_Obj
 *
CONST
 
objv
[]

2174 
sqlôe3_°mt
 *
pStmt
;

2175 
idx
;

2177 c⁄° *
zName
;

2178 c⁄° *
zEx∂aö
;

2179 
sqlôe3_öt64
 
nLo›
;

2180 
sqlôe3_öt64
 
nVisô
;

2181 
rE°
;

2182 
ªs
;

2184 if–
objc
!=3 ){

2185 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "STMT IDX");

2186  
TCL_ERROR
;

2188 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

2189 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
idx
ËË 
TCL_ERROR
;

2191 
ªs
 = 
	`sqlôe3_°mt_sˇn°©us
(
pStmt
, 
idx
, 
SQLITE_SCANSTAT_NLOOP
, (*)&
nLo›
);

2192 if–
ªs
==0 ){

2193 
T˛_Obj
 *
pRë
 = 
	`T˛_NewObj
();

2194 
	`T˛_Li°ObjAµídEÀmít
(0, 
pRë
, 
	`T˛_NewSåögObj
("nLoop", -1));

2195 
	`T˛_Li°ObjAµídEÀmít
(0, 
pRë
, 
	`T˛_NewWideI¡Obj
(
nLo›
));

2196 
	`sqlôe3_°mt_sˇn°©us
(
pStmt
, 
idx
, 
SQLITE_SCANSTAT_NVISIT
, (*)&
nVisô
);

2197 
	`T˛_Li°ObjAµídEÀmít
(0, 
pRë
, 
	`T˛_NewSåögObj
("nVisit", -1));

2198 
	`T˛_Li°ObjAµídEÀmít
(0, 
pRë
, 
	`T˛_NewWideI¡Obj
(
nVisô
));

2199 
	`sqlôe3_°mt_sˇn°©us
(
pStmt
, 
idx
, 
SQLITE_SCANSTAT_EST
, (*)&
rE°
);

2200 
	`T˛_Li°ObjAµídEÀmít
(0, 
pRë
, 
	`T˛_NewSåögObj
("nEst", -1));

2201 
	`T˛_Li°ObjAµídEÀmít
(0, 
pRë
, 
	`T˛_NewDoubÀObj
(
rE°
));

2202 
	`sqlôe3_°mt_sˇn°©us
(
pStmt
, 
idx
, 
SQLITE_SCANSTAT_NAME
, (*)&
zName
);

2203 
	`T˛_Li°ObjAµídEÀmít
(0, 
pRë
, 
	`T˛_NewSåögObj
("zName", -1));

2204 
	`T˛_Li°ObjAµídEÀmít
(0, 
pRë
, 
	`T˛_NewSåögObj
(
zName
, -1));

2205 
	`sqlôe3_°mt_sˇn°©us
(
pStmt
, 
idx
, 
SQLITE_SCANSTAT_EXPLAIN
, (*)&
zEx∂aö
);

2206 
	`T˛_Li°ObjAµídEÀmít
(0, 
pRë
, 
	`T˛_NewSåögObj
("zExplain", -1));

2207 
	`T˛_Li°ObjAµídEÀmít
(0, 
pRë
, 
	`T˛_NewSåögObj
(
zEx∂aö
, -1));

2208 
	`T˛_SëObjResu…
(
öãΩ
, 
pRë
);

2210 
	`T˛_Re£tResu…
(
öãΩ
);

2212  
TCL_OK
;

2213 
	}
}

2218 
SQLITE_TCLAPI
 
	$ã°_°mt_sˇn°©us_ª£t
(

2219 * 
˛õ¡D©a
,

2220 
T˛_I¡îp
 *
öãΩ
,

2221 
objc
,

2222 
T˛_Obj
 *
CONST
 
objv
[]

2224 
sqlôe3_°mt
 *
pStmt
;

2225 if–
objc
!=2 ){

2226 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "STMT");

2227  
TCL_ERROR
;

2229 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

2230 
	`sqlôe3_°mt_sˇn°©us_ª£t
(
pStmt
);

2231  
TCL_OK
;

2232 
	}
}

2235 #ifde‡
SQLITE_ENABLE_SQLLOG


2241 
SQLITE_TCLAPI
 
	$ã°_c⁄fig_sqŒog
(

2242 * 
˛õ¡D©a
,

2243 
T˛_I¡îp
 *
öãΩ
,

2244 
objc
,

2245 
T˛_Obj
 *
CONST
 
objv
[]

2247 if–
objc
!=1 ){

2248 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

2249  
TCL_ERROR
;

2251 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_SQLLOG
, 0, 0);

2252  
TCL_OK
;

2253 
	}
}

2261 
SQLITE_TCLAPI
 
	$vfsCuºítTimeI¡64
(

2262 * 
˛õ¡D©a
,

2263 
T˛_I¡îp
 *
öãΩ
,

2264 
objc
,

2265 
T˛_Obj
 *
CONST
 
objv
[]

2267 
i64
 
t
;

2268 
sqlôe3_vfs
 *
pVfs
 = 
	`sqlôe3_vfs_föd
(0);

2269 if–
objc
!=1 ){

2270 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

2271  
TCL_ERROR
;

2273 
pVfs
->
	`xCuºítTimeI¡64
’Vfs, &
t
);

2274 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
(
t
));

2275  
TCL_OK
;

2276 
	}
}

2278 #ifde‡
SQLITE_ENABLE_SNAPSHOT


2282 
SQLITE_TCLAPI
 
	$ã°_¢≠shŸ_gë
(

2283 * 
˛õ¡D©a
,

2284 
T˛_I¡îp
 *
öãΩ
,

2285 
objc
,

2286 
T˛_Obj
 *
CONST
 
objv
[]

2288 
rc
;

2289 
sqlôe3
 *
db
;

2290 *
zName
;

2291 
sqlôe3_¢≠shŸ
 *
pS«pshŸ
 = 0;

2293 if–
objc
!=3 ){

2294 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB DBNAME");

2295  
TCL_ERROR
;

2297 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

2298 
zName
 = 
	`T˛_GëSåög
(
objv
[2]);

2300 
rc
 = 
	`sqlôe3_¢≠shŸ_gë
(
db
, 
zName
, &
pS«pshŸ
);

2301 if–
rc
!=
SQLITE_OK
 ){

2302 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
(
	`sqlôe3EºName
(
rc
), -1));

2303  
TCL_ERROR
;

2305 
zBuf
[100];

2306 if–
	`sqlôe3Te°MakePoöãrSå
(
öãΩ
, 
zBuf
, 
pS«pshŸ
ËË 
TCL_ERROR
;

2307 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
(
zBuf
, -1));

2309  
TCL_OK
;

2310 
	}
}

2313 #ifde‡
SQLITE_ENABLE_SNAPSHOT


2317 
SQLITE_TCLAPI
 
	$ã°_¢≠shŸ_ªcovî
(

2318 * 
˛õ¡D©a
,

2319 
T˛_I¡îp
 *
öãΩ
,

2320 
objc
,

2321 
T˛_Obj
 *
CONST
 
objv
[]

2323 
rc
;

2324 
sqlôe3
 *
db
;

2325 *
zName
;

2327 if–
objc
!=3 ){

2328 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB DBNAME");

2329  
TCL_ERROR
;

2331 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

2332 
zName
 = 
	`T˛_GëSåög
(
objv
[2]);

2334 
rc
 = 
	`sqlôe3_¢≠shŸ_ªcovî
(
db
, 
zName
);

2335 if–
rc
!=
SQLITE_OK
 ){

2336 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
(
	`sqlôe3EºName
(
rc
), -1));

2337  
TCL_ERROR
;

2339 
	`T˛_Re£tResu…
(
öãΩ
);

2341  
TCL_OK
;

2342 
	}
}

2345 #ifde‡
SQLITE_ENABLE_SNAPSHOT


2349 
SQLITE_TCLAPI
 
	$ã°_¢≠shŸ_›í
(

2350 * 
˛õ¡D©a
,

2351 
T˛_I¡îp
 *
öãΩ
,

2352 
objc
,

2353 
T˛_Obj
 *
CONST
 
objv
[]

2355 
rc
;

2356 
sqlôe3
 *
db
;

2357 *
zName
;

2358 
sqlôe3_¢≠shŸ
 *
pS«pshŸ
;

2360 if–
objc
!=4 ){

2361 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB DBNAME SNAPSHOT");

2362  
TCL_ERROR
;

2364 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

2365 
zName
 = 
	`T˛_GëSåög
(
objv
[2]);

2366 
pS«pshŸ
 = (
sqlôe3_¢≠shŸ
*)
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[3]));

2368 
rc
 = 
	`sqlôe3_¢≠shŸ_›í
(
db
, 
zName
, 
pS«pshŸ
);

2369 if–
rc
!=
SQLITE_OK
 ){

2370 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
(
	`sqlôe3EºName
(
rc
), -1));

2371  
TCL_ERROR
;

2373  
TCL_OK
;

2374 
	}
}

2377 #ifde‡
SQLITE_ENABLE_SNAPSHOT


2381 
SQLITE_TCLAPI
 
	$ã°_¢≠shŸ_‰ì
(

2382 * 
˛õ¡D©a
,

2383 
T˛_I¡îp
 *
öãΩ
,

2384 
objc
,

2385 
T˛_Obj
 *
CONST
 
objv
[]

2387 
sqlôe3_¢≠shŸ
 *
pS«pshŸ
;

2388 if–
objc
!=2 ){

2389 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "SNAPSHOT");

2390  
TCL_ERROR
;

2392 
pS«pshŸ
 = (
sqlôe3_¢≠shŸ
*)
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[1]));

2393 
	`sqlôe3_¢≠shŸ_‰ì
(
pS«pshŸ
);

2394  
TCL_OK
;

2395 
	}
}

2398 #ifde‡
SQLITE_ENABLE_SNAPSHOT


2402 
SQLITE_TCLAPI
 
	$ã°_¢≠shŸ_cmp
(

2403 * 
˛õ¡D©a
,

2404 
T˛_I¡îp
 *
öãΩ
,

2405 
objc
,

2406 
T˛_Obj
 *
CONST
 
objv
[]

2408 
ªs
;

2409 
sqlôe3_¢≠shŸ
 *
p1
;

2410 
sqlôe3_¢≠shŸ
 *
p2
;

2411 if–
objc
!=3 ){

2412 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "SNAPSHOT1 SNAPSHOT2");

2413  
TCL_ERROR
;

2415 
p1
 = (
sqlôe3_¢≠shŸ
*)
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[1]));

2416 
p2
 = (
sqlôe3_¢≠shŸ
*)
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[2]));

2417 
ªs
 = 
	`sqlôe3_¢≠shŸ_cmp
(
p1
, 
p2
);

2418 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
ªs
));

2419  
TCL_OK
;

2420 
	}
}

2423 #ifde‡
SQLITE_ENABLE_SNAPSHOT


2427 
SQLITE_TCLAPI
 
	$ã°_¢≠shŸ_gë_blob
(

2428 * 
˛õ¡D©a
,

2429 
T˛_I¡îp
 *
öãΩ
,

2430 
objc
,

2431 
T˛_Obj
 *
CONST
 
objv
[]

2433 
rc
;

2434 
sqlôe3
 *
db
;

2435 *
zName
;

2436 
sqlôe3_¢≠shŸ
 *
pS«pshŸ
 = 0;

2438 if–
objc
!=3 ){

2439 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB DBNAME");

2440  
TCL_ERROR
;

2442 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

2443 
zName
 = 
	`T˛_GëSåög
(
objv
[2]);

2445 
rc
 = 
	`sqlôe3_¢≠shŸ_gë
(
db
, 
zName
, &
pS«pshŸ
);

2446 if–
rc
!=
SQLITE_OK
 ){

2447 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
(
	`sqlôe3EºName
(
rc
), -1));

2448  
TCL_ERROR
;

2450 
	`T˛_SëObjResu…
(
öãΩ
,

2451 
	`T˛_NewByãAºayObj
((*)
pS«pshŸ
, (
sqlôe3_¢≠shŸ
))

2453 
	`sqlôe3_¢≠shŸ_‰ì
(
pS«pshŸ
);

2455  
TCL_OK
;

2456 
	}
}

2459 #ifde‡
SQLITE_ENABLE_SNAPSHOT


2463 
SQLITE_TCLAPI
 
	$ã°_¢≠shŸ_›í_blob
(

2464 * 
˛õ¡D©a
,

2465 
T˛_I¡îp
 *
öãΩ
,

2466 
objc
,

2467 
T˛_Obj
 *
CONST
 
objv
[]

2469 
rc
;

2470 
sqlôe3
 *
db
;

2471 *
zName
;

2472 *
pBlob
;

2473 
nBlob
;

2475 if–
objc
!=4 ){

2476 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB DBNAME SNAPSHOT");

2477  
TCL_ERROR
;

2479 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

2480 
zName
 = 
	`T˛_GëSåög
(
objv
[2]);

2481 
pBlob
 = 
	`T˛_GëByãAºayFromObj
(
objv
[3], &
nBlob
);

2482 if–
nBlob
!=(
sqlôe3_¢≠shŸ
) ){

2483 
	`T˛_AµídResu…
(
öãΩ
, "bad SNAPSHOT", 0);

2484  
TCL_ERROR
;

2486 
rc
 = 
	`sqlôe3_¢≠shŸ_›í
(
db
, 
zName
, (
sqlôe3_¢≠shŸ
*)
pBlob
);

2487 if–
rc
!=
SQLITE_OK
 ){

2488 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
(
	`sqlôe3EºName
(
rc
), -1));

2489  
TCL_ERROR
;

2491  
TCL_OK
;

2492 
	}
}

2495 #ifde‡
SQLITE_ENABLE_SNAPSHOT


2499 
SQLITE_TCLAPI
 
	$ã°_¢≠shŸ_cmp_blob
(

2500 * 
˛õ¡D©a
,

2501 
T˛_I¡îp
 *
öãΩ
,

2502 
objc
,

2503 
T˛_Obj
 *
CONST
 
objv
[]

2505 
ªs
;

2506 *
p1
;

2507 *
p2
;

2508 
n1
;

2509 
n2
;

2511 if–
objc
!=3 ){

2512 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "SNAPSHOT1 SNAPSHOT2");

2513  
TCL_ERROR
;

2516 
p1
 = 
	`T˛_GëByãAºayFromObj
(
objv
[1], &
n1
);

2517 
p2
 = 
	`T˛_GëByãAºayFromObj
(
objv
[2], &
n2
);

2519 if–
n1
!=(
sqlôe3_¢≠shŸ
Ë||Ç1!=
n2
 ){

2520 
	`T˛_AµídResu…
(
öãΩ
, "bad SNAPSHOT", 0);

2521  
TCL_ERROR
;

2524 
ªs
 = 
	`sqlôe3_¢≠shŸ_cmp
((
sqlôe3_¢≠shŸ
*)
p1
, (sqlôe3_¢≠shŸ*)
p2
);

2525 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
ªs
));

2526  
TCL_OK
;

2527 
	}
}

2533 
sqlôe3_dñëe_d©aba£
(const *);

2534 
SQLITE_TCLAPI
 
	$ã°_dñëe_d©aba£
(

2535 * 
˛õ¡D©a
,

2536 
T˛_I¡îp
 *
öãΩ
,

2537 
objc
,

2538 
T˛_Obj
 *
CONST
 
objv
[]

2540 
rc
;

2541 c⁄° *
zFûe
;

2542 if–
objc
!=2 ){

2543 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "FILE");

2544  
TCL_ERROR
;

2546 
zFûe
 = (c⁄° *)
	`T˛_GëSåög
(
objv
[1]);

2547 
rc
 = 
	`sqlôe3_dñëe_d©aba£
(
zFûe
);

2549 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
(
	`sqlôe3EºName
(
rc
), -1));

2550  
TCL_OK
;

2551 
	}
}

2558 
SQLITE_TCLAPI
 
	$ã°_√xt_°mt
(

2559 * 
˛õ¡D©a
,

2560 
T˛_I¡îp
 *
öãΩ
,

2561 
objc
,

2562 
T˛_Obj
 *
CONST
 
objv
[]

2564 
sqlôe3_°mt
 *
pStmt
;

2565 
sqlôe3
 *
db
 = 0;

2566 
zBuf
[50];

2568 if–
objc
!=3 ){

2569 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

2570 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " DB STMT", 0);

2571  
TCL_ERROR
;

2574 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

2575 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[2]), &
pStmt
ËË 
TCL_ERROR
;

2576 
pStmt
 = 
	`sqlôe3_√xt_°mt
(
db
,ÖStmt);

2577 if–
pStmt
 ){

2578 if–
	`sqlôe3Te°MakePoöãrSå
(
öãΩ
, 
zBuf
, 
pStmt
ËË 
TCL_ERROR
;

2579 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

2581  
TCL_OK
;

2582 
	}
}

2590 
SQLITE_TCLAPI
 
	$ã°_°mt_ªad⁄ly
(

2591 * 
˛õ¡D©a
,

2592 
T˛_I¡îp
 *
öãΩ
,

2593 
objc
,

2594 
T˛_Obj
 *
CONST
 
objv
[]

2596 
sqlôe3_°mt
 *
pStmt
;

2597 
rc
;

2599 if–
objc
!=2 ){

2600 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

2601 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " STMT", 0);

2602  
TCL_ERROR
;

2605 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

2606 
rc
 = 
	`sqlôe3_°mt_ªad⁄ly
(
pStmt
);

2607 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewBoﬁónObj
(
rc
));

2608  
TCL_OK
;

2609 
	}
}

2617 
SQLITE_TCLAPI
 
	$ã°_°mt_busy
(

2618 * 
˛õ¡D©a
,

2619 
T˛_I¡îp
 *
öãΩ
,

2620 
objc
,

2621 
T˛_Obj
 *
CONST
 
objv
[]

2623 
sqlôe3_°mt
 *
pStmt
;

2624 
rc
;

2626 if–
objc
!=2 ){

2627 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

2628 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " STMT", 0);

2629  
TCL_ERROR
;

2632 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

2633 
rc
 = 
	`sqlôe3_°mt_busy
(
pStmt
);

2634 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewBoﬁónObj
(
rc
));

2635  
TCL_OK
;

2636 
	}
}

2643 
SQLITE_TCLAPI
 
	$u£s_°mt_jou∫Æ
(

2644 * 
˛õ¡D©a
,

2645 
T˛_I¡îp
 *
öãΩ
,

2646 
objc
,

2647 
T˛_Obj
 *
CONST
 
objv
[]

2649 
sqlôe3_°mt
 *
pStmt
;

2651 if–
objc
!=2 ){

2652 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

2653 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " STMT", 0);

2654  
TCL_ERROR
;

2657 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

2658 
	`sqlôe3_°mt_ªad⁄ly
(
pStmt
);

2659 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewBoﬁónObj
(((
Vdbe
 *)
pStmt
)->
u£sStmtJou∫Æ
));

2660  
TCL_OK
;

2661 
	}
}

2669 
SQLITE_TCLAPI
 
	$ã°_ª£t
(

2670 * 
˛õ¡D©a
,

2671 
T˛_I¡îp
 *
öãΩ
,

2672 
objc
,

2673 
T˛_Obj
 *
CONST
 
objv
[]

2675 
sqlôe3_°mt
 *
pStmt
;

2676 
rc
;

2678 if–
objc
!=2 ){

2679 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

2680 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " <STMT>", 0);

2681  
TCL_ERROR
;

2684 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

2686 
rc
 = 
	`sqlôe3_ª£t
(
pStmt
);

2687 if–
pStmt
 && 
	`sqlôe3Te°EºCode
(
öãΩ
, 
	`StmtToDb
’Stmt), 
rc
) ){

2688  
TCL_ERROR
;

2690 
	`T˛_SëResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 
TCL_STATIC
);

2696  
TCL_OK
;

2697 
	}
}

2704 
SQLITE_TCLAPI
 
	$ã°_expúed
(

2705 * 
˛õ¡D©a
,

2706 
T˛_I¡îp
 *
öãΩ
,

2707 
objc
,

2708 
T˛_Obj
 *
CONST
 
objv
[]

2710 #i‚de‡
SQLITE_OMIT_DEPRECATED


2711 
sqlôe3_°mt
 *
pStmt
;

2712 if–
objc
!=2 ){

2713 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

2714 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " <STMT>", 0);

2715  
TCL_ERROR
;

2717 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

2718 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewBoﬁónObj
(
	`sqlôe3_expúed
(
pStmt
)));

2720  
TCL_OK
;

2721 
	}
}

2728 
SQLITE_TCLAPI
 
	$ã°_å™s„r_böd
(

2729 * 
˛õ¡D©a
,

2730 
T˛_I¡îp
 *
öãΩ
,

2731 
objc
,

2732 
T˛_Obj
 *
CONST
 
objv
[]

2734 #i‚de‡
SQLITE_OMIT_DEPRECATED


2735 
sqlôe3_°mt
 *
pStmt1
, *
pStmt2
;

2736 if–
objc
!=3 ){

2737 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

2738 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " FROM-STMT TO-STMT", 0);

2739  
TCL_ERROR
;

2741 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt1
)Ë 
TCL_ERROR
;

2742 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[2]), &
pStmt2
)Ë 
TCL_ERROR
;

2743 
	`T˛_SëObjResu…
(
öãΩ
,

2744 
	`T˛_NewI¡Obj
(
	`sqlôe3_å™s„r_bödögs
(
pStmt1
,
pStmt2
)));

2746  
TCL_OK
;

2747 
	}
}

2755 
SQLITE_TCLAPI
 
	$ã°_ch™ges
(

2756 * 
˛õ¡D©a
,

2757 
T˛_I¡îp
 *
öãΩ
,

2758 
objc
,

2759 
T˛_Obj
 *
CONST
 
objv
[]

2761 
sqlôe3
 *
db
;

2762 if–
objc
!=2 ){

2763 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

2764 
	`T˛_GëSåög
(
objv
[0]), " DB", 0);

2765  
TCL_ERROR
;

2767 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

2768 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
	`sqlôe3_ch™ges
(
db
)));

2769  
TCL_OK
;

2770 
	}
}

2776 *
	gsqlôe_°©ic_böd_vÆue
 = 0;

2777 
	gsqlôe_°©ic_böd_nbyã
 = 0;

2790 
SQLITE_TCLAPI
 
	$ã°_böd
(

2791 *
NŸU£d
,

2792 
T˛_I¡îp
 *
öãΩ
,

2793 
¨gc
,

2794 **
¨gv


2796 
sqlôe3_°mt
 *
pStmt
;

2797 
rc
;

2798 
idx
;

2799 if–
¨gc
!=5 ){

2800 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

2802  
TCL_ERROR
;

2804 if–
	`gëStmtPoöãr
(
öãΩ
, 
¨gv
[1], &
pStmt
ËË 
TCL_ERROR
;

2805 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[2], &
idx
ËË 
TCL_ERROR
;

2806 if–
	`°rcmp
(
¨gv
[4],"null")==0 ){

2807 
rc
 = 
	`sqlôe3_böd_nuŒ
(
pStmt
, 
idx
);

2808 }if–
	`°rcmp
(
¨gv
[4],"static")==0 ){

2809 
rc
 = 
	`sqlôe3_böd_ãxt
(
pStmt
, 
idx
, 
sqlôe_°©ic_böd_vÆue
, -1, 0);

2810 }if–
	`°rcmp
(
¨gv
[4],"static-nbytes")==0 ){

2811 
rc
 = 
	`sqlôe3_böd_ãxt
(
pStmt
, 
idx
, 
sqlôe_°©ic_böd_vÆue
,

2812 
sqlôe_°©ic_böd_nbyã
, 0);

2813 }if–
	`°rcmp
(
¨gv
[4],"normal")==0 ){

2814 
rc
 = 
	`sqlôe3_böd_ãxt
(
pStmt
, 
idx
, 
¨gv
[3], -1, 
SQLITE_TRANSIENT
);

2815 }if–
	`°rcmp
(
¨gv
[4],"blob10")==0 ){

2816 
rc
 = 
	`sqlôe3_böd_ãxt
(
pStmt
, 
idx
, "abc\000xyz\000pq", 10, 
SQLITE_STATIC
);

2818 
	`T˛_AµídResu…
(
öãΩ
, "4thárgument should be "

2820  
TCL_ERROR
;

2822 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
	`StmtToDb
(
pStmt
), 
rc
ËË 
TCL_ERROR
;

2823 if–
rc
 ){

2824 
zBuf
[50];

2825 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "(%dË", 
rc
);

2826 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 
	`sqlôe3EºSå
(
rc
), 0);

2827  
TCL_ERROR
;

2829  
TCL_OK
;

2830 
	}
}

2832 #i‚de‡
SQLITE_OMIT_UTF16


2861 
T˛_I¡îp
* 
	gpTe°CﬁœãI¡îp
;

2862 
	$ã°_cﬁœã_func
(

2863 *
pCtx
,

2864 
nA
, c⁄° *
zA
,

2865 
nB
, c⁄° *
zB


2867 
T˛_I¡îp
 *
i
 = 
pTe°CﬁœãI¡îp
;

2868 
ícö
 = 
	`SQLITE_PTR_TO_INT
(
pCtx
);

2869 
ªs
;

2870 
n
;

2872 
sqlôe3_vÆue
 *
pVÆ
;

2873 
T˛_Obj
 *
pX
;

2875 
pX
 = 
	`T˛_NewSåögObj
("test_collate", -1);

2876 
	`T˛_In¸RefCou¡
(
pX
);

2878  
ícö
 ){

2879 
SQLITE_UTF8
:

2880 
	`T˛_Li°ObjAµídEÀmít
(
i
,
pX
,
	`T˛_NewSåögObj
("UTF-8",-1));

2882 
SQLITE_UTF16LE
:

2883 
	`T˛_Li°ObjAµídEÀmít
(
i
,
pX
,
	`T˛_NewSåögObj
("UTF-16LE",-1));

2885 
SQLITE_UTF16BE
:

2886 
	`T˛_Li°ObjAµídEÀmít
(
i
,
pX
,
	`T˛_NewSåögObj
("UTF-16BE",-1));

2889 
	`as£π
(0);

2892 
	`sqlôe3BegöBíignMÆloc
();

2893 
pVÆ
 = 
	`sqlôe3VÆueNew
(0);

2894 if–
pVÆ
 ){

2895 
	`sqlôe3VÆueSëSå
(
pVÆ
, 
nA
, 
zA
, 
ícö
, 
SQLITE_STATIC
);

2896 
n
 = 
	`sqlôe3_vÆue_byãs
(
pVÆ
);

2897 
	`T˛_Li°ObjAµídEÀmít
(
i
,
pX
,

2898 
	`T˛_NewSåögObj
((*)
	`sqlôe3_vÆue_ãxt
(
pVÆ
),
n
));

2899 
	`sqlôe3VÆueSëSå
(
pVÆ
, 
nB
, 
zB
, 
ícö
, 
SQLITE_STATIC
);

2900 
n
 = 
	`sqlôe3_vÆue_byãs
(
pVÆ
);

2901 
	`T˛_Li°ObjAµídEÀmít
(
i
,
pX
,

2902 
	`T˛_NewSåögObj
((*)
	`sqlôe3_vÆue_ãxt
(
pVÆ
),
n
));

2903 
	`sqlôe3VÆueFªe
(
pVÆ
);

2905 
	`sqlôe3EndBíignMÆloc
();

2907 
	`T˛_EvÆObjEx
(
i
, 
pX
, 0);

2908 
	`T˛_De¸RefCou¡
(
pX
);

2909 
	`T˛_GëI¡FromObj
(
i
, 
	`T˛_GëObjResu…
(i), &
ªs
);

2910  
ªs
;

2911 
	}
}

2912 
SQLITE_TCLAPI
 
	$ã°_cﬁœã
(

2913 * 
˛õ¡D©a
,

2914 
T˛_I¡îp
 *
öãΩ
,

2915 
objc
,

2916 
T˛_Obj
 *
CONST
 
objv
[]

2918 
sqlôe3
 *
db
;

2919 
vÆ
;

2920 
sqlôe3_vÆue
 *
pVÆ
;

2921 
rc
;

2923 if–
objc
!=5 ) 
bad_¨gs
;

2924 
pTe°CﬁœãI¡îp
 = 
öãΩ
;

2925 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

2927 if–
TCL_OK
!=
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[2], &
vÆ
ËË 
TCL_ERROR
;

2928 
rc
 = 
	`sqlôe3_¸óã_cﬁœti⁄
(
db
, "ã°_cﬁœã", 
SQLITE_UTF8
,

2929 (*)
SQLITE_UTF8
, 
vÆ
?
ã°_cﬁœã_func
:0);

2930 if–
rc
==
SQLITE_OK
 ){

2931 c⁄° *
zUtf16
;

2932 if–
TCL_OK
!=
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[3], &
vÆ
ËË 
TCL_ERROR
;

2933 
rc
 = 
	`sqlôe3_¸óã_cﬁœti⁄
(
db
, "ã°_cﬁœã", 
SQLITE_UTF16LE
,

2934 (*)
SQLITE_UTF16LE
, 
vÆ
?
ã°_cﬁœã_func
:0);

2935 if–
TCL_OK
!=
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[4], &
vÆ
ËË 
TCL_ERROR
;

2938 if–
sqlôe3_iMÆlocFaû
>0 ){

2939 
sqlôe3_iMÆlocFaû
++;

2942 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

2943 
pVÆ
 = 
	`sqlôe3VÆueNew
(
db
);

2944 
	`sqlôe3VÆueSëSå
(
pVÆ
, -1, "ã°_cﬁœã", 
SQLITE_UTF8
, 
SQLITE_STATIC
);

2945 
zUtf16
 = 
	`sqlôe3VÆueText
(
pVÆ
, 
SQLITE_UTF16NATIVE
);

2946 if–
db
->
mÆlocFaûed
 ){

2947 
rc
 = 
SQLITE_NOMEM
;

2949 
rc
 = 
	`sqlôe3_¸óã_cﬁœti⁄16
(
db
, 
zUtf16
, 
SQLITE_UTF16BE
,

2950 (*)
SQLITE_UTF16BE
, 
vÆ
?
ã°_cﬁœã_func
:0);

2952 
	`sqlôe3VÆueFªe
(
pVÆ
);

2953 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

2955 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
db
, 
rc
ËË 
TCL_ERROR
;

2957 if–
rc
!=
SQLITE_OK
 ){

2958 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

2959  
TCL_ERROR
;

2961  
TCL_OK
;

2963 
bad_¨gs
:

2964 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

2965 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " <DB> <utf8> <utf16le> <utf16be>", 0);

2966  
TCL_ERROR
;

2967 
	}
}

2976 
	$ã°_utf16bö_cﬁœã_func
(

2977 *
pCtx
,

2978 
nA
, c⁄° *
zA
,

2979 
nB
, c⁄° *
zB


2981 
nCmp
 = (
nA
>
nB
 ?ÇB :ÇA);

2982 
ªs
 = 
	`memcmp
(
zA
, 
zB
, 
nCmp
);

2983 if–
ªs
==0 )Ñe†
nA
 - 
nB
;

2984  
ªs
;

2985 
	}
}

2986 
SQLITE_TCLAPI
 
	$ã°_utf16bö_cﬁœã
(

2987 * 
˛õ¡D©a
,

2988 
T˛_I¡îp
 *
öãΩ
,

2989 
objc
,

2990 
T˛_Obj
 *
CONST
 
objv
[]

2992 
sqlôe3
 *
db
;

2993 
rc
;

2995 if–
objc
!=2 ) 
bad_¨gs
;

2996 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

2998 
rc
 = 
	`sqlôe3_¸óã_cﬁœti⁄
(
db
, "utf16bö", 
SQLITE_UTF16
, 0,

2999 
ã°_utf16bö_cﬁœã_func


3001 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
db
, 
rc
ËË 
TCL_ERROR
;

3002  
TCL_OK
;

3004 
bad_¨gs
:

3005 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB");

3006  
TCL_ERROR
;

3007 
	}
}

3015 
	gzNìdedCﬁœti⁄
[200];

3016 *
	gpzNìdedCﬁœti⁄
 = 
zNìdedCﬁœti⁄
;

3023 
	$ã°_cﬁœã_√eded_cb
(

3024 *
pCtx
,

3025 
sqlôe3
 *
db
,

3026 
eTextRï
,

3027 c⁄° *
pName


3029 
íc
 = 
	`ENC
(
db
);

3030 
i
;

3031 *
z
;

3032 
z
 = (*)
pName
, 
i
=0; *z || z[1]; z++){

3033 if–*
z
 ) 
zNìdedCﬁœti⁄
[
i
++] = *z;

3035 
zNìdedCﬁœti⁄
[
i
] = 0;

3036 
	`sqlôe3_¸óã_cﬁœti⁄
(

3037 
db
, "ã°_cﬁœã", 
	`ENC
(db), 
	`SQLITE_INT_TO_PTR
(
íc
), 
ã°_cﬁœã_func
);

3038 
	}
}

3043 
SQLITE_TCLAPI
 
	$ã°_cﬁœã_√eded
(

3044 * 
˛õ¡D©a
,

3045 
T˛_I¡îp
 *
öãΩ
,

3046 
objc
,

3047 
T˛_Obj
 *
CONST
 
objv
[]

3049 
sqlôe3
 *
db
;

3050 
rc
;

3052 if–
objc
!=2 ) 
bad_¨gs
;

3053 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

3054 
rc
 = 
	`sqlôe3_cﬁœti⁄_√eded16
(
db
, 0, 
ã°_cﬁœã_√eded_cb
);

3055 
zNìdedCﬁœti⁄
[0] = 0;

3056 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
db
, 
rc
ËË 
TCL_ERROR
;

3057  
TCL_OK
;

3059 
bad_¨gs
:

3060 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB");

3061  
TCL_ERROR
;

3062 
	}
}

3078 
	gu«lig√d_°rög_cou¡î
 = 0;

3079 
	$ÆignmítCﬁlFunc
(

3080 *
NŸU£d
,

3081 
nKey1
, c⁄° *
pKey1
,

3082 
nKey2
, c⁄° *
pKey2


3084 
rc
, 
n
;

3085 
n
 = 
nKey1
<
nKey2
 ?ÇKey1 :ÇKey2;

3086 if–
nKey1
>0 && 1==(1&(
	`SQLITE_PTR_TO_INT
(
pKey1
))ËË
u«lig√d_°rög_cou¡î
++;

3087 if–
nKey2
>0 && 1==(1&(
	`SQLITE_PTR_TO_INT
(
pKey2
))ËË
u«lig√d_°rög_cou¡î
++;

3088 
rc
 = 
	`memcmp
(
pKey1
, 
pKey2
, 
n
);

3089 if–
rc
==0 ){

3090 
rc
 = 
nKey1
 - 
nKey2
;

3092  
rc
;

3093 
	}
}

3094 
SQLITE_TCLAPI
 
	$add_Æignmít_ã°_cﬁœti⁄s
(

3095 * 
˛õ¡D©a
,

3096 
T˛_I¡îp
 *
öãΩ
,

3097 
objc
,

3098 
T˛_Obj
 *
CONST
 
objv
[]

3100 
sqlôe3
 *
db
;

3101 if–
objc
>=2 ){

3102 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

3103 
	`sqlôe3_¸óã_cﬁœti⁄
(
db
, "utf16_u«lig√d", 
SQLITE_UTF16
,

3104 0, 
ÆignmítCﬁlFunc
);

3105 
	`sqlôe3_¸óã_cﬁœti⁄
(
db
, "utf16_Æig√d", 
SQLITE_UTF16_ALIGNED
,

3106 0, 
ÆignmítCﬁlFunc
);

3108  
SQLITE_OK
;

3109 
	}
}

3137 #i‚de‡
SQLITE_OMIT_UTF16


3138 
	$ã°_fun˘i⁄_utf8
(

3139 
sqlôe3_c⁄ãxt
 *
pCtx
,

3140 
nArg
,

3141 
sqlôe3_vÆue
 **
¨gv


3143 
T˛_I¡îp
 *
öãΩ
;

3144 
T˛_Obj
 *
pX
;

3145 
sqlôe3_vÆue
 *
pVÆ
;

3146 
öãΩ
 = (
T˛_I¡îp
 *)
	`sqlôe3_u£r_d©a
(
pCtx
);

3147 
pX
 = 
	`T˛_NewSåögObj
("test_function", -1);

3148 
	`T˛_In¸RefCou¡
(
pX
);

3149 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pX
, 
	`T˛_NewSåögObj
("UTF-8", -1));

3150 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pX
,

3151 
	`T˛_NewSåögObj
((*)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]), -1));

3152 
	`T˛_EvÆObjEx
(
öãΩ
, 
pX
, 0);

3153 
	`T˛_De¸RefCou¡
(
pX
);

3154 
	`sqlôe3_ªsu…_ãxt
(
pCtx
, 
	`T˛_GëSåögResu…
(
öãΩ
), -1, 
SQLITE_TRANSIENT
);

3155 
pVÆ
 = 
	`sqlôe3VÆueNew
(0);

3156 
	`sqlôe3VÆueSëSå
(
pVÆ
, -1, 
	`T˛_GëSåögResu…
(
öãΩ
),

3157 
SQLITE_UTF8
, 
SQLITE_STATIC
);

3158 
	`sqlôe3_ªsu…_ãxt16be
(
pCtx
, 
	`sqlôe3_vÆue_ãxt16be
(
pVÆ
),

3159 -1, 
SQLITE_TRANSIENT
);

3160 
	`sqlôe3VÆueFªe
(
pVÆ
);

3161 
	}
}

3162 
	$ã°_fun˘i⁄_utf16À
(

3163 
sqlôe3_c⁄ãxt
 *
pCtx
,

3164 
nArg
,

3165 
sqlôe3_vÆue
 **
¨gv


3167 
T˛_I¡îp
 *
öãΩ
;

3168 
T˛_Obj
 *
pX
;

3169 
sqlôe3_vÆue
 *
pVÆ
;

3170 
öãΩ
 = (
T˛_I¡îp
 *)
	`sqlôe3_u£r_d©a
(
pCtx
);

3171 
pX
 = 
	`T˛_NewSåögObj
("test_function", -1);

3172 
	`T˛_In¸RefCou¡
(
pX
);

3173 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pX
, 
	`T˛_NewSåögObj
("UTF-16LE", -1));

3174 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pX
,

3175 
	`T˛_NewSåögObj
((*)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]), -1));

3176 
	`T˛_EvÆObjEx
(
öãΩ
, 
pX
, 0);

3177 
	`T˛_De¸RefCou¡
(
pX
);

3178 
pVÆ
 = 
	`sqlôe3VÆueNew
(0);

3179 
	`sqlôe3VÆueSëSå
(
pVÆ
, -1, 
	`T˛_GëSåögResu…
(
öãΩ
),

3180 
SQLITE_UTF8
, 
SQLITE_STATIC
);

3181 
	`sqlôe3_ªsu…_ãxt
(
pCtx
,(*)
	`sqlôe3_vÆue_ãxt
(
pVÆ
),-1,
SQLITE_TRANSIENT
);

3182 
	`sqlôe3VÆueFªe
(
pVÆ
);

3183 
	}
}

3184 
	$ã°_fun˘i⁄_utf16be
(

3185 
sqlôe3_c⁄ãxt
 *
pCtx
,

3186 
nArg
,

3187 
sqlôe3_vÆue
 **
¨gv


3189 
T˛_I¡îp
 *
öãΩ
;

3190 
T˛_Obj
 *
pX
;

3191 
sqlôe3_vÆue
 *
pVÆ
;

3192 
öãΩ
 = (
T˛_I¡îp
 *)
	`sqlôe3_u£r_d©a
(
pCtx
);

3193 
pX
 = 
	`T˛_NewSåögObj
("test_function", -1);

3194 
	`T˛_In¸RefCou¡
(
pX
);

3195 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pX
, 
	`T˛_NewSåögObj
("UTF-16BE", -1));

3196 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pX
,

3197 
	`T˛_NewSåögObj
((*)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]), -1));

3198 
	`T˛_EvÆObjEx
(
öãΩ
, 
pX
, 0);

3199 
	`T˛_De¸RefCou¡
(
pX
);

3200 
pVÆ
 = 
	`sqlôe3VÆueNew
(0);

3201 
	`sqlôe3VÆueSëSå
(
pVÆ
, -1, 
	`T˛_GëSåögResu…
(
öãΩ
),

3202 
SQLITE_UTF8
, 
SQLITE_STATIC
);

3203 
	`sqlôe3_ªsu…_ãxt16
(
pCtx
, 
	`sqlôe3_vÆue_ãxt16À
(
pVÆ
),

3204 -1, 
SQLITE_TRANSIENT
);

3205 
	`sqlôe3_ªsu…_ãxt16be
(
pCtx
, 
	`sqlôe3_vÆue_ãxt16À
(
pVÆ
),

3206 -1, 
SQLITE_TRANSIENT
);

3207 
	`sqlôe3_ªsu…_ãxt16À
(
pCtx
, 
	`sqlôe3_vÆue_ãxt16À
(
pVÆ
),

3208 -1, 
SQLITE_TRANSIENT
);

3209 
	`sqlôe3VÆueFªe
(
pVÆ
);

3210 
	}
}

3212 
SQLITE_TCLAPI
 
	$ã°_fun˘i⁄
(

3213 * 
˛õ¡D©a
,

3214 
T˛_I¡îp
 *
öãΩ
,

3215 
objc
,

3216 
T˛_Obj
 *
CONST
 
objv
[]

3218 #i‚de‡
SQLITE_OMIT_UTF16


3219 
sqlôe3
 *
db
;

3220 
vÆ
;

3222 if–
objc
!=5 ) 
bad_¨gs
;

3223 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

3225 if–
TCL_OK
!=
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[2], &
vÆ
ËË 
TCL_ERROR
;

3226 if–
vÆ
 ){

3227 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "ã°_fun˘i⁄", 1, 
SQLITE_UTF8
,

3228 
öãΩ
, 
ã°_fun˘i⁄_utf8
, 0, 0);

3230 if–
TCL_OK
!=
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[3], &
vÆ
ËË 
TCL_ERROR
;

3231 if–
vÆ
 ){

3232 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "ã°_fun˘i⁄", 1, 
SQLITE_UTF16LE
,

3233 
öãΩ
, 
ã°_fun˘i⁄_utf16À
, 0, 0);

3235 if–
TCL_OK
!=
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[4], &
vÆ
ËË 
TCL_ERROR
;

3236 if–
vÆ
 ){

3237 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "ã°_fun˘i⁄", 1, 
SQLITE_UTF16BE
,

3238 
öãΩ
, 
ã°_fun˘i⁄_utf16be
, 0, 0);

3241  
TCL_OK
;

3242 
bad_¨gs
:

3243 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

3244 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " <DB> <utf8> <utf16le> <utf16be>", 0);

3246  
TCL_ERROR
;

3247 
	}
}

3257 
SQLITE_TCLAPI
 
	$ã°_îr°r
(

3258 * 
˛õ¡D©a
,

3259 
T˛_I¡îp
 *
öãΩ
,

3260 
objc
,

3261 
T˛_Obj
 *
CONST
 
objv
[]

3263 *
zCode
;

3264 
i
;

3265 if–
objc
!=1 ){

3266 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "<error code>");

3269 
zCode
 = 
	`T˛_GëSåög
(
objv
[1]);

3270 
i
=0; i<200; i++){

3271 if–0==
	`°rcmp
(
	`t1Eº‹Name
(
i
), 
zCode
) ) ;

3273 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºSå
(
i
), 0);

3274  
TCL_OK
;

3275 
	}
}

3290 
SQLITE_TCLAPI
 
	$ã°_bªakpoöt
(

3291 *
NŸU£d
,

3292 
T˛_I¡îp
 *
öãΩ
,

3293 
¨gc
,

3294 **
¨gv


3296  
TCL_OK
;

3297 
	}
}

3306 
SQLITE_TCLAPI
 
	$ã°_böd_zîoblob
(

3307 * 
˛õ¡D©a
,

3308 
T˛_I¡îp
 *
öãΩ
,

3309 
objc
,

3310 
T˛_Obj
 *
CONST
 
objv
[]

3312 
sqlôe3_°mt
 *
pStmt
;

3313 
idx
;

3314 
n
;

3315 
rc
;

3317 if–
objc
!=4 ){

3318 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "STMT IDX N");

3319  
TCL_ERROR
;

3322 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

3323 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
idx
ËË 
TCL_ERROR
;

3324 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
n
ËË 
TCL_ERROR
;

3326 
rc
 = 
	`sqlôe3_böd_zîoblob
(
pStmt
, 
idx
, 
n
);

3327 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
	`StmtToDb
(
pStmt
), 
rc
ËË 
TCL_ERROR
;

3328 if–
rc
!=
SQLITE_OK
 ){

3329  
TCL_ERROR
;

3332  
TCL_OK
;

3333 
	}
}

3342 
SQLITE_TCLAPI
 
	$ã°_böd_zîoblob64
(

3343 * 
˛õ¡D©a
,

3344 
T˛_I¡îp
 *
öãΩ
,

3345 
objc
,

3346 
T˛_Obj
 *
CONST
 
objv
[]

3348 
sqlôe3_°mt
 *
pStmt
;

3349 
idx
;

3350 
T˛_WideI¡
 
n
;

3351 
rc
;

3353 if–
objc
!=4 ){

3354 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "STMT IDX N");

3355  
TCL_ERROR
;

3358 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

3359 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
idx
ËË 
TCL_ERROR
;

3360 if–
	`T˛_GëWideI¡FromObj
(
öãΩ
, 
objv
[3], &
n
ËË 
TCL_ERROR
;

3362 
rc
 = 
	`sqlôe3_böd_zîoblob64
(
pStmt
, 
idx
, 
n
);

3363 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
	`StmtToDb
(
pStmt
), 
rc
ËË 
TCL_ERROR
;

3364 if–
rc
!=
SQLITE_OK
 ){

3365 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

3366  
TCL_ERROR
;

3369  
TCL_OK
;

3370 
	}
}

3379 
SQLITE_TCLAPI
 
	$ã°_böd_öt
(

3380 * 
˛õ¡D©a
,

3381 
T˛_I¡îp
 *
öãΩ
,

3382 
objc
,

3383 
T˛_Obj
 *
CONST
 
objv
[]

3385 
sqlôe3_°mt
 *
pStmt
;

3386 
idx
;

3387 
vÆue
;

3388 
rc
;

3390 if–
objc
!=4 ){

3391 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

3392 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " STMT N VALUE", 0);

3393  
TCL_ERROR
;

3396 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

3397 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
idx
ËË 
TCL_ERROR
;

3398 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
vÆue
ËË 
TCL_ERROR
;

3400 
rc
 = 
	`sqlôe3_böd_öt
(
pStmt
, 
idx
, 
vÆue
);

3401 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
	`StmtToDb
(
pStmt
), 
rc
ËË 
TCL_ERROR
;

3402 if–
rc
!=
SQLITE_OK
 ){

3403  
TCL_ERROR
;

3406  
TCL_OK
;

3407 
	}
}

3419 
SQLITE_TCLAPI
 
	$ã°_öèºay_addr
(

3420 * 
˛õ¡D©a
,

3421 
T˛_I¡îp
 *
öãΩ
,

3422 
objc
,

3423 
T˛_Obj
 *
CONST
 
objv
[]

3425 
i
;

3426 *
p
 = 0;

3428 
	`sqlôe3_‰ì
(
p
);

3429 
p
 = 0;

3430 if–
objc
>1 ){

3431 
p
 = 
	`sqlôe3_mÆloc
–’[0])*(
objc
-1) );

3432 if–
p
==0 )  
TCL_ERROR
;

3433 
i
=0; i<
objc
-1; i++){

3434 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[1+
i
], &
p
[i]) ){

3435 
	`sqlôe3_‰ì
(
p
);

3436 
p
 = 0;

3437  
TCL_ERROR
;

3441 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
((
sqlôe3_öt64
)
p
));

3442  
TCL_OK
;

3443 
	}
}

3453 
SQLITE_TCLAPI
 
	$ã°_öt64¨øy_addr
(

3454 * 
˛õ¡D©a
,

3455 
T˛_I¡îp
 *
öãΩ
,

3456 
objc
,

3457 
T˛_Obj
 *
CONST
 
objv
[]

3459 
i
;

3460 
sqlôe3_öt64
 *
p
 = 0;

3462 
	`sqlôe3_‰ì
(
p
);

3463 
p
 = 0;

3464 if–
objc
>1 ){

3465 
p
 = 
	`sqlôe3_mÆloc
–’[0])*(
objc
-1) );

3466 if–
p
==0 )  
TCL_ERROR
;

3467 
i
=0; i<
objc
-1; i++){

3468 
T˛_WideI¡
 
v
;

3469 if–
	`T˛_GëWideI¡FromObj
(
öãΩ
, 
objv
[1+
i
], &
v
) ){

3470 
	`sqlôe3_‰ì
(
p
);

3471 
p
 = 0;

3472  
TCL_ERROR
;

3474 
p
[
i
] = 
v
;

3477 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
((
sqlôe3_öt64
)
p
));

3478  
TCL_OK
;

3479 
	}
}

3489 
SQLITE_TCLAPI
 
	$ã°_doubÀ¨øy_addr
(

3490 * 
˛õ¡D©a
,

3491 
T˛_I¡îp
 *
öãΩ
,

3492 
objc
,

3493 
T˛_Obj
 *
CONST
 
objv
[]

3495 
i
;

3496 *
p
 = 0;

3498 
	`sqlôe3_‰ì
(
p
);

3499 
p
 = 0;

3500 if–
objc
>1 ){

3501 
p
 = 
	`sqlôe3_mÆloc
–’[0])*(
objc
-1) );

3502 if–
p
==0 )  
TCL_ERROR
;

3503 
i
=0; i<
objc
-1; i++){

3504 if–
	`T˛_GëDoubÀFromObj
(
öãΩ
, 
objv
[1+
i
], &
p
[i]) ){

3505 
	`sqlôe3_‰ì
(
p
);

3506 
p
 = 0;

3507  
TCL_ERROR
;

3511 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
((
sqlôe3_öt64
)
p
));

3512  
TCL_OK
;

3513 
	}
}

3523 
SQLITE_TCLAPI
 
	$ã°_ãxèºay_addr
(

3524 * 
˛õ¡D©a
,

3525 
T˛_I¡îp
 *
öãΩ
,

3526 
objc
,

3527 
T˛_Obj
 *
CONST
 
objv
[]

3529 
i
;

3530 
n
 = 0;

3531 **
p
 = 0;

3533 
i
=0; i<
n
; i++Ë
	`sqlôe3_‰ì
(
p
[i]);

3534 
	`sqlôe3_‰ì
(
p
);

3535 
p
 = 0;

3536 if–
objc
>1 ){

3537 
p
 = 
	`sqlôe3_mÆloc
–’[0])*(
objc
-1) );

3538 if–
p
==0 )  
TCL_ERROR
;

3539 
i
=0; i<
objc
-1; i++){

3540 
p
[
i
] = 
	`sqlôe3_m¥ötf
("%s", 
	`T˛_GëSåög
(
objv
[1+i]));

3543 
n
 = 
objc
-1;

3544 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
((
sqlôe3_öt64
)
p
));

3545  
TCL_OK
;

3546 
	}
}

3556 
SQLITE_TCLAPI
 
	$ã°_böd_öt64
(

3557 * 
˛õ¡D©a
,

3558 
T˛_I¡îp
 *
öãΩ
,

3559 
objc
,

3560 
T˛_Obj
 *
CONST
 
objv
[]

3562 
sqlôe3_°mt
 *
pStmt
;

3563 
idx
;

3564 
T˛_WideI¡
 
vÆue
;

3565 
rc
;

3567 if–
objc
!=4 ){

3568 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

3569 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " STMT N VALUE", 0);

3570  
TCL_ERROR
;

3573 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

3574 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
idx
ËË 
TCL_ERROR
;

3575 if–
	`T˛_GëWideI¡FromObj
(
öãΩ
, 
objv
[3], &
vÆue
ËË 
TCL_ERROR
;

3577 
rc
 = 
	`sqlôe3_böd_öt64
(
pStmt
, 
idx
, 
vÆue
);

3578 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
	`StmtToDb
(
pStmt
), 
rc
ËË 
TCL_ERROR
;

3579 if–
rc
!=
SQLITE_OK
 ){

3580  
TCL_ERROR
;

3583  
TCL_OK
;

3584 
	}
}

3594 
SQLITE_TCLAPI
 
	$ã°_böd_doubÀ
(

3595 * 
˛õ¡D©a
,

3596 
T˛_I¡îp
 *
öãΩ
,

3597 
objc
,

3598 
T˛_Obj
 *
CONST
 
objv
[]

3600 
sqlôe3_°mt
 *
pStmt
;

3601 
idx
;

3602 
vÆue
 = 0;

3603 
rc
;

3604 c⁄° *
zVÆ
;

3605 
i
;

3607 c⁄° *
zName
;

3608 
iUµî
;

3609 
iLowî
;

3610 } 
aS≥cülFp
[] = {

3623 if–
objc
!=4 ){

3624 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

3625 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " STMT N VALUE", 0);

3626  
TCL_ERROR
;

3629 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

3630 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
idx
ËË 
TCL_ERROR
;

3637 
zVÆ
 = 
	`T˛_GëSåög
(
objv
[3]);

3638 
i
=0; i<(
aS≥cülFp
)/(aSpecialFp[0]); i++){

3639 if–
	`°rcmp
(
aS≥cülFp
[
i
].
zName
, 
zVÆ
)==0 ){

3640 
sqlôe3_uöt64
 
x
;

3641 
x
 = 
aS≥cülFp
[
i
].
iUµî
;

3642 
x
 <<= 32;

3643 
x
 |
aS≥cülFp
[
i
].
iLowî
;

3644 
	`as£π
–(
vÆue
)==8 );

3645 
	`as£π
–(
x
)==8 );

3646 
	`mem˝y
(&
vÆue
, &
x
, 8);

3650 if–
i
>=(
aS≥cülFp
)/(aSpecialFp[0]) &&

3651 
	`T˛_GëDoubÀFromObj
(
öãΩ
, 
objv
[3], &
vÆue
) ){

3652  
TCL_ERROR
;

3654 
rc
 = 
	`sqlôe3_böd_doubÀ
(
pStmt
, 
idx
, 
vÆue
);

3655 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
	`StmtToDb
(
pStmt
), 
rc
ËË 
TCL_ERROR
;

3656 if–
rc
!=
SQLITE_OK
 ){

3657  
TCL_ERROR
;

3660  
TCL_OK
;

3661 
	}
}

3670 
SQLITE_TCLAPI
 
	$ã°_böd_nuŒ
(

3671 * 
˛õ¡D©a
,

3672 
T˛_I¡îp
 *
öãΩ
,

3673 
objc
,

3674 
T˛_Obj
 *
CONST
 
objv
[]

3676 
sqlôe3_°mt
 *
pStmt
;

3677 
idx
;

3678 
rc
;

3680 if–
objc
!=3 ){

3681 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

3682 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " STMT N", 0);

3683  
TCL_ERROR
;

3686 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

3687 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
idx
ËË 
TCL_ERROR
;

3689 
rc
 = 
	`sqlôe3_böd_nuŒ
(
pStmt
, 
idx
);

3690 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
	`StmtToDb
(
pStmt
), 
rc
ËË 
TCL_ERROR
;

3691 if–
rc
!=
SQLITE_OK
 ){

3692  
TCL_ERROR
;

3695  
TCL_OK
;

3696 
	}
}

3706 
SQLITE_TCLAPI
 
	$ã°_böd_ãxt
(

3707 * 
˛õ¡D©a
,

3708 
T˛_I¡îp
 *
öãΩ
,

3709 
objc
,

3710 
T˛_Obj
 *
CONST
 
objv
[]

3712 
sqlôe3_°mt
 *
pStmt
;

3713 
idx
;

3714 
byãs
;

3715 *
vÆue
;

3716 
rc
;

3718 if–
objc
!=5 ){

3719 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

3720 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " STMT N VALUE BYTES", 0);

3721  
TCL_ERROR
;

3724 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

3725 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
idx
ËË 
TCL_ERROR
;

3726 
vÆue
 = (*)
	`T˛_GëByãAºayFromObj
(
objv
[3], &
byãs
);

3727 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[4], &
byãs
ËË 
TCL_ERROR
;

3729 
rc
 = 
	`sqlôe3_böd_ãxt
(
pStmt
, 
idx
, 
vÆue
, 
byãs
, 
SQLITE_TRANSIENT
);

3730 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
	`StmtToDb
(
pStmt
), 
rc
ËË 
TCL_ERROR
;

3731 if–
rc
!=
SQLITE_OK
 ){

3732 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

3733  
TCL_ERROR
;

3736  
TCL_OK
;

3737 
	}
}

3747 
SQLITE_TCLAPI
 
	$ã°_böd_ãxt16
(

3748 * 
˛õ¡D©a
,

3749 
T˛_I¡îp
 *
öãΩ
,

3750 
objc
,

3751 
T˛_Obj
 *
CONST
 
objv
[]

3753 #i‚de‡
SQLITE_OMIT_UTF16


3754 
sqlôe3_°mt
 *
pStmt
;

3755 
idx
;

3756 
byãs
;

3757 *
vÆue
;

3758 
rc
;

3760 (*
xDñ
)(*Ë(
objc
==6?
SQLITE_STATIC
:
SQLITE_TRANSIENT
);

3761 
T˛_Obj
 *
oStmt
 = 
objv
[
objc
-4];

3762 
T˛_Obj
 *
oN
 = 
objv
[
objc
-3];

3763 
T˛_Obj
 *
oSåög
 = 
objv
[
objc
-2];

3764 
T˛_Obj
 *
oByãs
 = 
objv
[
objc
-1];

3766 if–
objc
!=5 && objc!=6){

3767 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

3768 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " STMT N VALUE BYTES", 0);

3769  
TCL_ERROR
;

3772 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
oStmt
), &
pStmt
ËË 
TCL_ERROR
;

3773 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
oN
, &
idx
ËË 
TCL_ERROR
;

3774 
vÆue
 = (*)
	`T˛_GëByãAºayFromObj
(
oSåög
, 0);

3775 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
oByãs
, &
byãs
ËË 
TCL_ERROR
;

3777 
rc
 = 
	`sqlôe3_böd_ãxt16
(
pStmt
, 
idx
, (*)
vÆue
, 
byãs
, 
xDñ
);

3778 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
	`StmtToDb
(
pStmt
), 
rc
ËË 
TCL_ERROR
;

3779 if–
rc
!=
SQLITE_OK
 ){

3780 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

3781  
TCL_ERROR
;

3785  
TCL_OK
;

3786 
	}
}

3795 
SQLITE_TCLAPI
 
	$ã°_böd_blob
(

3796 * 
˛õ¡D©a
,

3797 
T˛_I¡îp
 *
öãΩ
,

3798 
objc
,

3799 
T˛_Obj
 *
CONST
 
objv
[]

3801 
sqlôe3_°mt
 *
pStmt
;

3802 
Àn
, 
idx
;

3803 
byãs
;

3804 *
vÆue
;

3805 
rc
;

3806 
sqlôe3_de°ru˘‹_ty≥
 
xDe°ru˘‹
 = 
SQLITE_TRANSIENT
;

3808 if–
objc
!=5 && objc!=6 ){

3809 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

3810 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " STMT N DATA BYTES", 0);

3811  
TCL_ERROR
;

3814 if–
objc
==6 ){

3815 
xDe°ru˘‹
 = 
SQLITE_STATIC
;

3816 
objv
++;

3819 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

3820 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
idx
ËË 
TCL_ERROR
;

3822 
vÆue
 = (*)
	`T˛_GëByãAºayFromObj
(
objv
[3], &
Àn
);

3823 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[4], &
byãs
ËË 
TCL_ERROR
;

3825 if–
byãs
>
Àn
 ){

3826 
zBuf
[200];

3827 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf,

3828 "ˇ¬Ÿ u£ %d blob byãs, havê%d", 
byãs
, 
Àn
);

3829 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, -1);

3830  
TCL_ERROR
;

3833 
rc
 = 
	`sqlôe3_böd_blob
(
pStmt
, 
idx
, 
vÆue
, 
byãs
, 
xDe°ru˘‹
);

3834 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
	`StmtToDb
(
pStmt
), 
rc
ËË 
TCL_ERROR
;

3835 if–
rc
!=
SQLITE_OK
 ){

3836  
TCL_ERROR
;

3839  
TCL_OK
;

3840 
	}
}

3847 
SQLITE_TCLAPI
 
	$ã°_böd_∑ømëî_cou¡
(

3848 * 
˛õ¡D©a
,

3849 
T˛_I¡îp
 *
öãΩ
,

3850 
objc
,

3851 
T˛_Obj
 *
CONST
 
objv
[]

3853 
sqlôe3_°mt
 *
pStmt
;

3855 if–
objc
!=2 ){

3856 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "STMT");

3857  
TCL_ERROR
;

3859 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

3860 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
	`sqlôe3_böd_∑ømëî_cou¡
(
pStmt
)));

3861  
TCL_OK
;

3862 
	}
}

3871 
SQLITE_TCLAPI
 
	$ã°_böd_∑ømëî_«me
(

3872 * 
˛õ¡D©a
,

3873 
T˛_I¡îp
 *
öãΩ
,

3874 
objc
,

3875 
T˛_Obj
 *
CONST
 
objv
[]

3877 
sqlôe3_°mt
 *
pStmt
;

3878 
i
;

3880 if–
objc
!=3 ){

3881 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "STMT N");

3882  
TCL_ERROR
;

3884 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

3885 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
i
ËË 
TCL_ERROR
;

3886 
	`T˛_SëObjResu…
(
öãΩ
,

3887 
	`T˛_NewSåögObj
(
	`sqlôe3_böd_∑ømëî_«me
(
pStmt
,
i
),-1)

3889  
TCL_OK
;

3890 
	}
}

3898 
SQLITE_TCLAPI
 
	$ã°_böd_∑ømëî_ödex
(

3899 * 
˛õ¡D©a
,

3900 
T˛_I¡îp
 *
öãΩ
,

3901 
objc
,

3902 
T˛_Obj
 *
CONST
 
objv
[]

3904 
sqlôe3_°mt
 *
pStmt
;

3906 if–
objc
!=3 ){

3907 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "STMT NAME");

3908  
TCL_ERROR
;

3910 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

3911 
	`T˛_SëObjResu…
(
öãΩ
,

3912 
	`T˛_NewI¡Obj
(

3913 
	`sqlôe3_böd_∑ømëî_ödex
(
pStmt
,
	`T˛_GëSåög
(
objv
[2]))

3916  
TCL_OK
;

3917 
	}
}

3923 
SQLITE_TCLAPI
 
	$ã°_˛ór_bödögs
(

3924 * 
˛õ¡D©a
,

3925 
T˛_I¡îp
 *
öãΩ
,

3926 
objc
,

3927 
T˛_Obj
 *
CONST
 
objv
[]

3929 
sqlôe3_°mt
 *
pStmt
;

3931 if–
objc
!=2 ){

3932 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "STMT");

3933  
TCL_ERROR
;

3935 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

3936 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
	`sqlôe3_˛ór_bödögs
(
pStmt
)));

3937  
TCL_OK
;

3938 
	}
}

3943 
SQLITE_TCLAPI
 
	$ã°_¶ìp
(

3944 * 
˛õ¡D©a
,

3945 
T˛_I¡îp
 *
öãΩ
,

3946 
objc
,

3947 
T˛_Obj
 *
CONST
 
objv
[]

3949 
ms
;

3951 if–
objc
!=2 ){

3952 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "MILLISECONDS");

3953  
TCL_ERROR
;

3955 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[1], &
ms
) ){

3956  
TCL_ERROR
;

3958 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
	`sqlôe3_¶ìp
(
ms
)));

3959  
TCL_OK
;

3960 
	}
}

3968 
SQLITE_TCLAPI
 
	$ã°_ex_îrcode
(

3969 * 
˛õ¡D©a
,

3970 
T˛_I¡îp
 *
öãΩ
,

3971 
objc
,

3972 
T˛_Obj
 *
CONST
 
objv
[]

3974 
sqlôe3
 *
db
;

3975 
rc
;

3977 if–
objc
!=2 ){

3978 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

3979 
	`T˛_GëSåög
(
objv
[0]), " DB", 0);

3980  
TCL_ERROR
;

3982 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

3983 
rc
 = 
	`sqlôe3_exãnded_îrcode
(
db
);

3984 
	`T˛_AµídResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 0);

3985  
TCL_OK
;

3986 
	}
}

3995 
SQLITE_TCLAPI
 
	$ã°_îrcode
(

3996 * 
˛õ¡D©a
,

3997 
T˛_I¡îp
 *
öãΩ
,

3998 
objc
,

3999 
T˛_Obj
 *
CONST
 
objv
[]

4001 
sqlôe3
 *
db
;

4002 
rc
;

4004 if–
objc
!=2 ){

4005 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

4006 
	`T˛_GëSåög
(
objv
[0]), " DB", 0);

4007  
TCL_ERROR
;

4009 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

4010 
rc
 = 
	`sqlôe3_îrcode
(
db
);

4011 
	`T˛_AµídResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 0);

4012  
TCL_OK
;

4013 
	}
}

4021 
SQLITE_TCLAPI
 
	$ã°_îrmsg
(

4022 * 
˛õ¡D©a
,

4023 
T˛_I¡îp
 *
öãΩ
,

4024 
objc
,

4025 
T˛_Obj
 *
CONST
 
objv
[]

4027 
sqlôe3
 *
db
;

4028 c⁄° *
zEº
;

4030 if–
objc
!=2 ){

4031 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

4032 
	`T˛_GëSåög
(
objv
[0]), " DB", 0);

4033  
TCL_ERROR
;

4035 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

4037 
zEº
 = 
	`sqlôe3_îrmsg
(
db
);

4038 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
(
zEº
, -1));

4039  
TCL_OK
;

4040 
	}
}

4050 
SQLITE_TCLAPI
 
	$ã°_îrmsg16
(

4051 * 
˛õ¡D©a
,

4052 
T˛_I¡îp
 *
öãΩ
,

4053 
objc
,

4054 
T˛_Obj
 *
CONST
 
objv
[]

4056 #i‚de‡
SQLITE_OMIT_UTF16


4057 
sqlôe3
 *
db
;

4058 c⁄° *
zEº
;

4059 c⁄° *
z
;

4060 
byãs
 = 0;

4062 if–
objc
!=2 ){

4063 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

4064 
	`T˛_GëSåög
(
objv
[0]), " DB", 0);

4065  
TCL_ERROR
;

4067 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

4069 
zEº
 = 
	`sqlôe3_îrmsg16
(
db
);

4070 if–
zEº
 ){

4071 
z
 = 
zEº
;

4072 
byãs
=0; 
z
[bytes] || z[bytes+1]; bytes+=2){}

4074 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewByãAºayObj
(
zEº
, 
byãs
));

4076  
TCL_OK
;

4077 
	}
}

4087 
SQLITE_TCLAPI
 
	$ã°_¥ï¨e
(

4088 * 
˛õ¡D©a
,

4089 
T˛_I¡îp
 *
öãΩ
,

4090 
objc
,

4091 
T˛_Obj
 *
CONST
 
objv
[]

4093 
sqlôe3
 *
db
;

4094 c⁄° *
zSql
;

4095 
byãs
;

4096 c⁄° *
zTaû
 = 0;

4097 
sqlôe3_°mt
 *
pStmt
 = 0;

4098 
zBuf
[50];

4099 
rc
;

4101 if–
objc
!=5 && objc!=4 ){

4102 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

4103 
	`T˛_GëSåög
(
objv
[0]), " DB sql bytes ?tailvar?", 0);

4104  
TCL_ERROR
;

4106 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

4107 
zSql
 = 
	`T˛_GëSåög
(
objv
[2]);

4108 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
byãs
ËË 
TCL_ERROR
;

4110 
rc
 = 
	`sqlôe3_¥ï¨e
(
db
, 
zSql
, 
byãs
, &
pStmt
, 
objc
>=5 ? &
zTaû
 : 0);

4111 
	`T˛_Re£tResu…
(
öãΩ
);

4112 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
db
, 
rc
ËË 
TCL_ERROR
;

4113 if–
zTaû
 && 
objc
>=5 ){

4114 if–
byãs
>=0 ){

4115 
byãs
 = byã†- ()(
zTaû
-
zSql
);

4117 if–()
	`°æí
(
zTaû
)<
byãs
 ){

4118 
byãs
 = ()
	`°æí
(
zTaû
);

4120 
	`T˛_ObjSëV¨2
(
öãΩ
, 
objv
[4], 0, 
	`T˛_NewSåögObj
(
zTaû
, 
byãs
), 0);

4122 if–
rc
!=
SQLITE_OK
 ){

4123 
	`as£π
–
pStmt
==0 );

4124 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "(%dË", 
rc
);

4125 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 
	`sqlôe3_îrmsg
(
db
), 0);

4126  
TCL_ERROR
;

4129 if–
pStmt
 ){

4130 if–
	`sqlôe3Te°MakePoöãrSå
(
öãΩ
, 
zBuf
, 
pStmt
ËË 
TCL_ERROR
;

4131 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

4133  
TCL_OK
;

4134 
	}
}

4144 
SQLITE_TCLAPI
 
	$ã°_¥ï¨e_v2
(

4145 * 
˛õ¡D©a
,

4146 
T˛_I¡îp
 *
öãΩ
,

4147 
objc
,

4148 
T˛_Obj
 *
CONST
 
objv
[]

4150 
sqlôe3
 *
db
;

4151 c⁄° *
zSql
;

4152 *
zC›y
 = 0;

4153 
byãs
;

4154 c⁄° *
zTaû
 = 0;

4155 
sqlôe3_°mt
 *
pStmt
 = 0;

4156 
zBuf
[50];

4157 
rc
;

4159 if–
objc
!=5 && objc!=4 ){

4160 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

4161 
	`T˛_GëSåög
(
objv
[0]), " DB sql bytesÅailvar", 0);

4162  
TCL_ERROR
;

4164 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

4165 
zSql
 = 
	`T˛_GëSåög
(
objv
[2]);

4166 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
byãs
ËË 
TCL_ERROR
;

4171 if–
byãs
>=0 ){

4172 
zC›y
 = 
	`mÆloc
(
byãs
);

4173 
	`mem˝y
(
zC›y
, 
zSql
, 
byãs
);

4175 
n
 = ()
	`°æí
(
zSql
) + 1;

4176 
zC›y
 = 
	`mÆloc
(
n
);

4177 
	`mem˝y
(
zC›y
, 
zSql
, 
n
);

4179 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
db
, 
zC›y
, 
byãs
, &
pStmt
, 
objc
>=5 ? &
zTaû
 : 0);

4180 
	`‰ì
(
zC›y
);

4181 
zTaû
 = &
zSql
[(zTaû - 
zC›y
)];

4183 
	`as£π
(
rc
==
SQLITE_OK
 || 
pStmt
==0);

4184 
	`T˛_Re£tResu…
(
öãΩ
);

4185 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
db
, 
rc
ËË 
TCL_ERROR
;

4186 if–
rc
==
SQLITE_OK
 && 
zTaû
 && 
objc
>=5 ){

4187 if–
byãs
>=0 ){

4188 
byãs
 = byã†- ()(
zTaû
-
zSql
);

4190 
	`T˛_ObjSëV¨2
(
öãΩ
, 
objv
[4], 0, 
	`T˛_NewSåögObj
(
zTaû
, 
byãs
), 0);

4192 if–
rc
!=
SQLITE_OK
 ){

4193 
	`as£π
–
pStmt
==0 );

4194 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "(%dË", 
rc
);

4195 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 
	`sqlôe3_îrmsg
(
db
), 0);

4196  
TCL_ERROR
;

4199 if–
pStmt
 ){

4200 if–
	`sqlôe3Te°MakePoöãrSå
(
öãΩ
, 
zBuf
, 
pStmt
ËË 
TCL_ERROR
;

4201 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

4203  
TCL_OK
;

4204 
	}
}

4212 
SQLITE_TCLAPI
 
	$ã°_¥ï¨e_tkt3134
(

4213 * 
˛õ¡D©a
,

4214 
T˛_I¡îp
 *
öãΩ
,

4215 
objc
,

4216 
T˛_Obj
 *
CONST
 
objv
[]

4218 
sqlôe3
 *
db
;

4219 c⁄° 
zSql
[] = "\000SELECT 1";

4220 
sqlôe3_°mt
 *
pStmt
 = 0;

4221 
zBuf
[50];

4222 
rc
;

4224 if–
objc
!=2 ){

4225 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

4226 
	`T˛_GëSåög
(
objv
[0]), " DB sql bytesÅailvar", 0);

4227  
TCL_ERROR
;

4229 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

4230 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
db
, &
zSql
[1], 0, &
pStmt
, 0);

4231 
	`as£π
(
rc
==
SQLITE_OK
 || 
pStmt
==0);

4232 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
db
, 
rc
ËË 
TCL_ERROR
;

4233 if–
rc
!=
SQLITE_OK
 ){

4234 
	`as£π
–
pStmt
==0 );

4235 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "(%dË", 
rc
);

4236 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 
	`sqlôe3_îrmsg
(
db
), 0);

4237  
TCL_ERROR
;

4240 if–
pStmt
 ){

4241 if–
	`sqlôe3Te°MakePoöãrSå
(
öãΩ
, 
zBuf
, 
pStmt
ËË 
TCL_ERROR
;

4242 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

4244  
TCL_OK
;

4245 
	}
}

4255 
SQLITE_TCLAPI
 
	$ã°_¥ï¨e16
(

4256 * 
˛õ¡D©a
,

4257 
T˛_I¡îp
 *
öãΩ
,

4258 
objc
,

4259 
T˛_Obj
 *
CONST
 
objv
[]

4261 #i‚de‡
SQLITE_OMIT_UTF16


4262 
sqlôe3
 *
db
;

4263 c⁄° *
zSql
;

4264 c⁄° *
zTaû
 = 0;

4265 
T˛_Obj
 *
pTaû
 = 0;

4266 
sqlôe3_°mt
 *
pStmt
 = 0;

4267 
zBuf
[50];

4268 
rc
;

4269 
byãs
;

4270 
objÀn
;

4272 if–
objc
!=5 && objc!=4 ){

4273 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

4274 
	`T˛_GëSåög
(
objv
[0]), " DB sql bytes ?tailvar?", 0);

4275  
TCL_ERROR
;

4277 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

4278 
zSql
 = 
	`T˛_GëByãAºayFromObj
(
objv
[2], &
objÀn
);

4279 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
byãs
ËË 
TCL_ERROR
;

4281 
rc
 = 
	`sqlôe3_¥ï¨e16
(
db
, 
zSql
, 
byãs
, &
pStmt
, 
objc
>=5 ? &
zTaû
 : 0);

4282 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
db
, 
rc
ËË 
TCL_ERROR
;

4283 if–
rc
 ){

4284  
TCL_ERROR
;

4287 if–
objc
>=5 ){

4288 if–
zTaû
 ){

4289 
objÀn
 = objÀ¿- ()((
u8
 *)
zTaû
-(u8 *)
zSql
);

4291 
objÀn
 = 0;

4293 
pTaû
 = 
	`T˛_NewByãAºayObj
((
u8
 *)
zTaû
, 
objÀn
);

4294 
	`T˛_In¸RefCou¡
(
pTaû
);

4295 
	`T˛_ObjSëV¨2
(
öãΩ
, 
objv
[4], 0, 
pTaû
, 0);

4296 
	`T˛_De¸RefCou¡
(
pTaû
);

4299 if–
pStmt
 ){

4300 if–
	`sqlôe3Te°MakePoöãrSå
(
öãΩ
, 
zBuf
, 
pStmt
ËË 
TCL_ERROR
;

4302 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

4304  
TCL_OK
;

4305 
	}
}

4315 
SQLITE_TCLAPI
 
	$ã°_¥ï¨e16_v2
(

4316 * 
˛õ¡D©a
,

4317 
T˛_I¡îp
 *
öãΩ
,

4318 
objc
,

4319 
T˛_Obj
 *
CONST
 
objv
[]

4321 #i‚de‡
SQLITE_OMIT_UTF16


4322 
sqlôe3
 *
db
;

4323 c⁄° *
zSql
;

4324 c⁄° *
zTaû
 = 0;

4325 
T˛_Obj
 *
pTaû
 = 0;

4326 
sqlôe3_°mt
 *
pStmt
 = 0;

4327 
zBuf
[50];

4328 
rc
;

4329 
byãs
;

4330 
objÀn
;

4332 if–
objc
!=5 && objc!=4 ){

4333 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

4334 
	`T˛_GëSåög
(
objv
[0]), " DB sql bytes ?tailvar?", 0);

4335  
TCL_ERROR
;

4337 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

4338 
zSql
 = 
	`T˛_GëByãAºayFromObj
(
objv
[2], &
objÀn
);

4339 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
byãs
ËË 
TCL_ERROR
;

4341 
rc
 = 
	`sqlôe3_¥ï¨e16_v2
(
db
, 
zSql
, 
byãs
, &
pStmt
, 
objc
>=5 ? &
zTaû
 : 0);

4342 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
db
, 
rc
ËË 
TCL_ERROR
;

4343 if–
rc
 ){

4344  
TCL_ERROR
;

4347 if–
objc
>=5 ){

4348 if–
zTaû
 ){

4349 
objÀn
 = objÀ¿- ()((
u8
 *)
zTaû
-(u8 *)
zSql
);

4351 
objÀn
 = 0;

4353 
pTaû
 = 
	`T˛_NewByãAºayObj
((
u8
 *)
zTaû
, 
objÀn
);

4354 
	`T˛_In¸RefCou¡
(
pTaû
);

4355 
	`T˛_ObjSëV¨2
(
öãΩ
, 
objv
[4], 0, 
pTaû
, 0);

4356 
	`T˛_De¸RefCou¡
(
pTaû
);

4359 if–
pStmt
 ){

4360 if–
	`sqlôe3Te°MakePoöãrSå
(
öãΩ
, 
zBuf
, 
pStmt
ËË 
TCL_ERROR
;

4362 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

4364  
TCL_OK
;

4365 
	}
}

4370 
SQLITE_TCLAPI
 
	$ã°_›í
(

4371 * 
˛õ¡D©a
,

4372 
T˛_I¡îp
 *
öãΩ
,

4373 
objc
,

4374 
T˛_Obj
 *
CONST
 
objv
[]

4376 c⁄° *
zFûíame
;

4377 
sqlôe3
 *
db
;

4378 
zBuf
[100];

4380 if–
objc
!=3 && objc!=2 && objc!=1 ){

4381 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

4382 
	`T˛_GëSåög
(
objv
[0]), " filename options-list", 0);

4383  
TCL_ERROR
;

4386 
zFûíame
 = 
objc
>1 ? 
	`T˛_GëSåög
(
objv
[1]) : 0;

4387 
	`sqlôe3_›í
(
zFûíame
, &
db
);

4389 if–
	`sqlôe3Te°MakePoöãrSå
(
öãΩ
, 
zBuf
, 
db
ËË 
TCL_ERROR
;

4390 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

4391  
TCL_OK
;

4392 
	}
}

4397 
SQLITE_TCLAPI
 
	$ã°_›í_v2
(

4398 * 
˛õ¡D©a
,

4399 
T˛_I¡îp
 *
öãΩ
,

4400 
objc
,

4401 
T˛_Obj
 *
CONST
 
objv
[]

4403 c⁄° *
zFûíame
;

4404 c⁄° *
zVfs
;

4405 
Êags
 = 0;

4406 
sqlôe3
 *
db
;

4407 
rc
;

4408 
zBuf
[100];

4410 
nFœg
;

4411 
T˛_Obj
 **
≠Fœg
;

4412 
i
;

4414 if–
objc
!=4 ){

4415 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "FILENAME FLAGS VFS");

4416  
TCL_ERROR
;

4418 
zFûíame
 = 
	`T˛_GëSåög
(
objv
[1]);

4419 
zVfs
 = 
	`T˛_GëSåög
(
objv
[3]);

4420 if–
zVfs
[0]==0x00 ) zVfs = 0;

4422 
rc
 = 
	`T˛_Li°ObjGëEÀmíts
(
öãΩ
, 
objv
[2], &
nFœg
, &
≠Fœg
);

4423 if–
rc
!=
TCL_OK
 ) Ñc;

4424 
i
=0; i<
nFœg
; i++){

4425 
iFœg
;

4426 
	sO≥nFœg
 {

4427 c⁄° *
zFœg
;

4428 
Êag
;

4429 } 
aFœg
[] = {

4430 { "SQLITE_OPEN_READONLY", 
SQLITE_OPEN_READONLY
 },

4431 { "SQLITE_OPEN_READWRITE", 
SQLITE_OPEN_READWRITE
 },

4432 { "SQLITE_OPEN_CREATE", 
SQLITE_OPEN_CREATE
 },

4433 { "SQLITE_OPEN_DELETEONCLOSE", 
SQLITE_OPEN_DELETEONCLOSE
 },

4434 { "SQLITE_OPEN_EXCLUSIVE", 
SQLITE_OPEN_EXCLUSIVE
 },

4435 { "SQLITE_OPEN_AUTOPROXY", 
SQLITE_OPEN_AUTOPROXY
 },

4436 { "SQLITE_OPEN_MAIN_DB", 
SQLITE_OPEN_MAIN_DB
 },

4437 { "SQLITE_OPEN_TEMP_DB", 
SQLITE_OPEN_TEMP_DB
 },

4438 { "SQLITE_OPEN_TRANSIENT_DB", 
SQLITE_OPEN_TRANSIENT_DB
 },

4439 { "SQLITE_OPEN_MAIN_JOURNAL", 
SQLITE_OPEN_MAIN_JOURNAL
 },

4440 { "SQLITE_OPEN_TEMP_JOURNAL", 
SQLITE_OPEN_TEMP_JOURNAL
 },

4441 { "SQLITE_OPEN_SUBJOURNAL", 
SQLITE_OPEN_SUBJOURNAL
 },

4442 { "SQLITE_OPEN_MASTER_JOURNAL", 
SQLITE_OPEN_MASTER_JOURNAL
 },

4443 { "SQLITE_OPEN_NOMUTEX", 
SQLITE_OPEN_NOMUTEX
 },

4444 { "SQLITE_OPEN_FULLMUTEX", 
SQLITE_OPEN_FULLMUTEX
 },

4445 { "SQLITE_OPEN_SHAREDCACHE", 
SQLITE_OPEN_SHAREDCACHE
 },

4446 { "SQLITE_OPEN_PRIVATECACHE", 
SQLITE_OPEN_PRIVATECACHE
 },

4447 { "SQLITE_OPEN_WAL", 
SQLITE_OPEN_WAL
 },

4448 { "SQLITE_OPEN_URI", 
SQLITE_OPEN_URI
 },

4451 
rc
 = 
	`T˛_GëIndexFromObjSåu˘
(
öãΩ
, 
≠Fœg
[
i
], 
aFœg
, (aFlag[0]),

4452 "Êag", 0, &
iFœg


4454 if–
rc
!=
TCL_OK
 ) Ñc;

4455 
Êags
 |
aFœg
[
iFœg
].
Êag
;

4458 
rc
 = 
	`sqlôe3_›í_v2
(
zFûíame
, &
db
, 
Êags
, 
zVfs
);

4459 if–
	`sqlôe3Te°MakePoöãrSå
(
öãΩ
, 
zBuf
, 
db
ËË 
TCL_ERROR
;

4460 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

4461  
TCL_OK
;

4462 
	}
}

4467 
SQLITE_TCLAPI
 
	$ã°_›í16
(

4468 * 
˛õ¡D©a
,

4469 
T˛_I¡îp
 *
öãΩ
,

4470 
objc
,

4471 
T˛_Obj
 *
CONST
 
objv
[]

4473 #i‚de‡
SQLITE_OMIT_UTF16


4474 c⁄° *
zFûíame
;

4475 
sqlôe3
 *
db
;

4476 
zBuf
[100];

4478 if–
objc
!=3 ){

4479 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

4480 
	`T˛_GëSåög
(
objv
[0]), " filename options-list", 0);

4481  
TCL_ERROR
;

4484 
zFûíame
 = 
	`T˛_GëByãAºayFromObj
(
objv
[1], 0);

4485 
	`sqlôe3_›í16
(
zFûíame
, &
db
);

4487 if–
	`sqlôe3Te°MakePoöãrSå
(
öãΩ
, 
zBuf
, 
db
ËË 
TCL_ERROR
;

4488 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

4490  
TCL_OK
;

4491 
	}
}

4499 
SQLITE_TCLAPI
 
	$ã°_com∂ëe16
(

4500 * 
˛õ¡D©a
,

4501 
T˛_I¡îp
 *
öãΩ
,

4502 
objc
,

4503 
T˛_Obj
 *
CONST
 
objv
[]

4505 #i‡!
	`deföed
(
SQLITE_OMIT_COMPLETE
Ë&& !deföed(
SQLITE_OMIT_UTF16
)

4506 *
zBuf
;

4508 if–
objc
!=2 ){

4509 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "<utf-16 sql>");

4510  
TCL_ERROR
;

4513 
zBuf
 = (*)
	`T˛_GëByãAºayFromObj
(
objv
[1], 0);

4514 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
	`sqlôe3_com∂ëe16
(
zBuf
)));

4516  
TCL_OK
;

4517 
	}
}

4524 
SQLITE_TCLAPI
 
	$ã°_°ï
(

4525 * 
˛õ¡D©a
,

4526 
T˛_I¡îp
 *
öãΩ
,

4527 
objc
,

4528 
T˛_Obj
 *
CONST
 
objv
[]

4530 
sqlôe3_°mt
 *
pStmt
;

4531 
rc
;

4533 if–
objc
!=2 ){

4534 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

4535 
	`T˛_GëSåög
(
objv
[0]), " STMT", 0);

4536  
TCL_ERROR
;

4539 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

4540 
rc
 = 
	`sqlôe3_°ï
(
pStmt
);

4543 
	`T˛_SëResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 0);

4544  
TCL_OK
;

4545 
	}
}

4547 
SQLITE_TCLAPI
 
	$ã°_sql
(

4548 * 
˛õ¡D©a
,

4549 
T˛_I¡îp
 *
öãΩ
,

4550 
objc
,

4551 
T˛_Obj
 *
CONST
 
objv
[]

4553 
sqlôe3_°mt
 *
pStmt
;

4555 if–
objc
!=2 ){

4556 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "STMT");

4557  
TCL_ERROR
;

4560 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

4561 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3_sql
(
pStmt
), 
TCL_VOLATILE
);

4562  
TCL_OK
;

4563 
	}
}

4564 
SQLITE_TCLAPI
 
	$ã°_ex_sql
(

4565 * 
˛õ¡D©a
,

4566 
T˛_I¡îp
 *
öãΩ
,

4567 
objc
,

4568 
T˛_Obj
 *
CONST
 
objv
[]

4570 
sqlôe3_°mt
 *
pStmt
;

4571 *
z
;

4573 if–
objc
!=2 ){

4574 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "STMT");

4575  
TCL_ERROR
;

4578 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

4579 
z
 = 
	`sqlôe3_ex∑nded_sql
(
pStmt
);

4580 
	`T˛_SëResu…
(
öãΩ
, 
z
, 
TCL_VOLATILE
);

4581 
	`sqlôe3_‰ì
(
z
);

4582  
TCL_OK
;

4583 
	}
}

4590 
SQLITE_TCLAPI
 
	$ã°_cﬁumn_cou¡
(

4591 * 
˛õ¡D©a
,

4592 
T˛_I¡îp
 *
öãΩ
,

4593 
objc
,

4594 
T˛_Obj
 *
CONST
 
objv
[]

4596 
sqlôe3_°mt
 *
pStmt
;

4598 if–
objc
!=2 ){

4599 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

4600 
	`T˛_GëSåög
(
objv
[0]), " STMT column", 0);

4601  
TCL_ERROR
;

4604 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

4606 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
	`sqlôe3_cﬁumn_cou¡
(
pStmt
)));

4607  
TCL_OK
;

4608 
	}
}

4615 
SQLITE_TCLAPI
 
	$ã°_cﬁumn_ty≥
(

4616 * 
˛õ¡D©a
,

4617 
T˛_I¡îp
 *
öãΩ
,

4618 
objc
,

4619 
T˛_Obj
 *
CONST
 
objv
[]

4621 
sqlôe3_°mt
 *
pStmt
;

4622 
cﬁ
;

4623 
ç
;

4625 if–
objc
!=3 ){

4626 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

4627 
	`T˛_GëSåög
(
objv
[0]), " STMT column", 0);

4628  
TCL_ERROR
;

4631 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

4632 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
cﬁ
ËË 
TCL_ERROR
;

4634 
ç
 = 
	`sqlôe3_cﬁumn_ty≥
(
pStmt
, 
cﬁ
);

4635  
ç
 ){

4636 
SQLITE_INTEGER
:

4637 
	`T˛_SëResu…
(
öãΩ
, "INTEGER", 
TCL_STATIC
);

4639 
SQLITE_NULL
:

4640 
	`T˛_SëResu…
(
öãΩ
, "NULL", 
TCL_STATIC
);

4642 
SQLITE_FLOAT
:

4643 
	`T˛_SëResu…
(
öãΩ
, "FLOAT", 
TCL_STATIC
);

4645 
SQLITE_TEXT
:

4646 
	`T˛_SëResu…
(
öãΩ
, "TEXT", 
TCL_STATIC
);

4648 
SQLITE_BLOB
:

4649 
	`T˛_SëResu…
(
öãΩ
, "BLOB", 
TCL_STATIC
);

4652 
	`as£π
(0);

4655  
TCL_OK
;

4656 
	}
}

4664 
SQLITE_TCLAPI
 
	$ã°_cﬁumn_öt64
(

4665 * 
˛õ¡D©a
,

4666 
T˛_I¡îp
 *
öãΩ
,

4667 
objc
,

4668 
T˛_Obj
 *
CONST
 
objv
[]

4670 
sqlôe3_°mt
 *
pStmt
;

4671 
cﬁ
;

4672 
i64
 
iVÆ
;

4674 if–
objc
!=3 ){

4675 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

4676 
	`T˛_GëSåög
(
objv
[0]), " STMT column", 0);

4677  
TCL_ERROR
;

4680 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

4681 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
cﬁ
ËË 
TCL_ERROR
;

4683 
iVÆ
 = 
	`sqlôe3_cﬁumn_öt64
(
pStmt
, 
cﬁ
);

4684 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
(
iVÆ
));

4685  
TCL_OK
;

4686 
	}
}

4691 
SQLITE_TCLAPI
 
	$ã°_cﬁumn_blob
(

4692 * 
˛õ¡D©a
,

4693 
T˛_I¡îp
 *
öãΩ
,

4694 
objc
,

4695 
T˛_Obj
 *
CONST
 
objv
[]

4697 
sqlôe3_°mt
 *
pStmt
;

4698 
cﬁ
;

4700 
Àn
;

4701 c⁄° *
pBlob
;

4703 if–
objc
!=3 ){

4704 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

4705 
	`T˛_GëSåög
(
objv
[0]), " STMT column", 0);

4706  
TCL_ERROR
;

4709 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

4710 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
cﬁ
ËË 
TCL_ERROR
;

4712 
Àn
 = 
	`sqlôe3_cﬁumn_byãs
(
pStmt
, 
cﬁ
);

4713 
pBlob
 = 
	`sqlôe3_cﬁumn_blob
(
pStmt
, 
cﬁ
);

4714 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewByãAºayObj
(
pBlob
, 
Àn
));

4715  
TCL_OK
;

4716 
	}
}

4723 
SQLITE_TCLAPI
 
	$ã°_cﬁumn_doubÀ
(

4724 * 
˛õ¡D©a
,

4725 
T˛_I¡îp
 *
öãΩ
,

4726 
objc
,

4727 
T˛_Obj
 *
CONST
 
objv
[]

4729 
sqlôe3_°mt
 *
pStmt
;

4730 
cﬁ
;

4731 
rVÆ
;

4733 if–
objc
!=3 ){

4734 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

4735 
	`T˛_GëSåög
(
objv
[0]), " STMT column", 0);

4736  
TCL_ERROR
;

4739 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

4740 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
cﬁ
ËË 
TCL_ERROR
;

4742 
rVÆ
 = 
	`sqlôe3_cﬁumn_doubÀ
(
pStmt
, 
cﬁ
);

4743 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewDoubÀObj
(
rVÆ
));

4744  
TCL_OK
;

4745 
	}
}

4752 
SQLITE_TCLAPI
 
	$ã°_d©a_cou¡
(

4753 * 
˛õ¡D©a
,

4754 
T˛_I¡îp
 *
öãΩ
,

4755 
objc
,

4756 
T˛_Obj
 *
CONST
 
objv
[]

4758 
sqlôe3_°mt
 *
pStmt
;

4760 if–
objc
!=2 ){

4761 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

4762 
	`T˛_GëSåög
(
objv
[0]), " STMT column", 0);

4763  
TCL_ERROR
;

4766 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

4768 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
	`sqlôe3_d©a_cou¡
(
pStmt
)));

4769  
TCL_OK
;

4770 
	}
}

4779 
SQLITE_TCLAPI
 
	$ã°_°mt_utf8
(

4780 * 
˛õ¡D©a
,

4781 
T˛_I¡îp
 *
öãΩ
,

4782 
objc
,

4783 
T˛_Obj
 *
CONST
 
objv
[]

4785 
sqlôe3_°mt
 *
pStmt
;

4786 
cﬁ
;

4787 c⁄° *(*
xFunc
)(
sqlôe3_°mt
*, );

4788 c⁄° *
zRë
;

4790 
xFunc
 = (c⁄° *(*)(
sqlôe3_°mt
*, ))
˛õ¡D©a
;

4791 if–
objc
!=3 ){

4792 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

4793 
	`T˛_GëSåög
(
objv
[0]), " STMT column", 0);

4794  
TCL_ERROR
;

4797 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

4798 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
cﬁ
ËË 
TCL_ERROR
;

4799 
zRë
 = 
	`xFunc
(
pStmt
, 
cﬁ
);

4800 if–
zRë
 ){

4801 
	`T˛_SëResu…
(
öãΩ
, (*)
zRë
, 0);

4803  
TCL_OK
;

4804 
	}
}

4806 
SQLITE_TCLAPI
 
	$ã°_globÆ_ªcovî
(

4807 * 
˛õ¡D©a
,

4808 
T˛_I¡îp
 *
öãΩ
,

4809 
objc
,

4810 
T˛_Obj
 *
CONST
 
objv
[]

4812 #i‚de‡
SQLITE_OMIT_DEPRECATED


4813 
rc
;

4814 if–
objc
!=1 ){

4815 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

4816  
TCL_ERROR
;

4818 
rc
 = 
	`sqlôe3_globÆ_ªcovî
();

4819 
	`T˛_SëResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 
TCL_STATIC
);

4821  
TCL_OK
;

4822 
	}
}

4831 
SQLITE_TCLAPI
 
	$ã°_°mt_utf16
(

4832 * 
˛õ¡D©a
,

4833 
T˛_I¡îp
 *
öãΩ
,

4834 
objc
,

4835 
T˛_Obj
 *
CONST
 
objv
[]

4837 #i‚de‡
SQLITE_OMIT_UTF16


4838 
sqlôe3_°mt
 *
pStmt
;

4839 
cﬁ
;

4840 
T˛_Obj
 *
pRë
;

4841 c⁄° *
zName16
;

4842 c⁄° *(*
xFunc
)(
sqlôe3_°mt
*, );

4844 
xFunc
 = (c⁄° *(*)(
sqlôe3_°mt
*, ))
˛õ¡D©a
;

4845 if–
objc
!=3 ){

4846 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

4847 
	`T˛_GëSåög
(
objv
[0]), " STMT column", 0);

4848  
TCL_ERROR
;

4851 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

4852 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
cﬁ
ËË 
TCL_ERROR
;

4854 
zName16
 = 
	`xFunc
(
pStmt
, 
cﬁ
);

4855 if–
zName16
 ){

4856 
n
;

4857 c⁄° *
z
 = 
zName16
;

4858 
n
=0; 
z
[n] || z[n+1];Ç+=2){}

4859 
pRë
 = 
	`T˛_NewByãAºayObj
(
zName16
, 
n
+2);

4860 
	`T˛_SëObjResu…
(
öãΩ
, 
pRë
);

4864  
TCL_OK
;

4865 
	}
}

4875 
SQLITE_TCLAPI
 
	$ã°_°mt_öt
(

4876 * 
˛õ¡D©a
,

4877 
T˛_I¡îp
 *
öãΩ
,

4878 
objc
,

4879 
T˛_Obj
 *
CONST
 
objv
[]

4881 
sqlôe3_°mt
 *
pStmt
;

4882 
cﬁ
;

4883 (*
xFunc
)(
sqlôe3_°mt
*, );

4885 
xFunc
 = ((*)(
sqlôe3_°mt
*, ))
˛õ¡D©a
;

4886 if–
objc
!=3 ){

4887 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

4888 
	`T˛_GëSåög
(
objv
[0]), " STMT column", 0);

4889  
TCL_ERROR
;

4892 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

4893 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
cﬁ
ËË 
TCL_ERROR
;

4895 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
	`xFunc
(
pStmt
, 
cﬁ
)));

4896  
TCL_OK
;

4897 
	}
}

4904 
SQLITE_TCLAPI
 
	$sqlôe_£t_magic
(

4905 * 
˛õ¡D©a
,

4906 
T˛_I¡îp
 *
öãΩ
,

4907 
¨gc
,

4908 **
¨gv


4910 
sqlôe3
 *
db
;

4911 if–
¨gc
!=3 ){

4912 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

4914  
TCL_ERROR
;

4916 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

4917 if–
	`°rcmp
(
¨gv
[2], "SQLITE_MAGIC_OPEN")==0 ){

4918 
db
->
magic
 = 
SQLITE_MAGIC_OPEN
;

4919 }if–
	`°rcmp
(
¨gv
[2], "SQLITE_MAGIC_CLOSED")==0 ){

4920 
db
->
magic
 = 
SQLITE_MAGIC_CLOSED
;

4921 }if–
	`°rcmp
(
¨gv
[2], "SQLITE_MAGIC_BUSY")==0 ){

4922 
db
->
magic
 = 
SQLITE_MAGIC_BUSY
;

4923 }if–
	`°rcmp
(
¨gv
[2], "SQLITE_MAGIC_ERROR")==0 ){

4924 
db
->
magic
 = 
SQLITE_MAGIC_ERROR
;

4925 }if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[2], (*)&
db
->
magic
) ){

4926  
TCL_ERROR
;

4928  
TCL_OK
;

4929 
	}
}

4936 
SQLITE_TCLAPI
 
	$ã°_öãºu±
(

4937 * 
˛õ¡D©a
,

4938 
T˛_I¡îp
 *
öãΩ
,

4939 
¨gc
,

4940 **
¨gv


4942 
sqlôe3
 *
db
;

4943 if–
¨gc
!=2 ){

4944 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0], " DB", 0);

4945  
TCL_ERROR
;

4947 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

4948 
	`sqlôe3_öãºu±
(
db
);

4949  
TCL_OK
;

4950 
	}
}

4952 
u8
 *
	gsqlôe3_°ack_ba£löe
 = 0;

4957 
	$¥ïSèck
(){

4958 
i
;

4959 
u32
 
bigBuf
[65536];

4960 
i
=0; i<(
bigBuf
)/(bigBuf[0]); i++) bigBuf[i] = 0xdeadbeef;

4961 
sqlôe3_°ack_ba£löe
 = (
u8
*)&
bigBuf
[65536];

4962 
	}
}

4967 
u64
 
	$sqlôe3SèckDïth
(){

4968 
u8
 
x
;

4969  (
u64
)(
sqlôe3_°ack_ba£löe
 - &
x
);

4970 
	}
}

4977 
SQLITE_TCLAPI
 
	$ã°_°ack_u£d
(

4978 * 
˛õ¡D©a
,

4979 
T˛_I¡îp
 *
öãΩ
,

4980 
¨gc
,

4981 **
¨gv


4983 
sqlôe3
 *
db
;

4984 
i
;

4985 if–
¨gc
!=3 ){

4986 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

4988  
TCL_ERROR
;

4990 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

4991 
	`¥ïSèck
();

4992 ()
	`sqlôe3_exec
(
db
, 
¨gv
[2], 0, 0, 0);

4993 
i
=65535; i>=0 && ((
u32
*)
sqlôe3_°ack_ba£löe
)[-i]==0xdeadbeef; i--){}

4994 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
i
*4));

4995  
TCL_OK
;

4996 
	}
}

5005 
SQLITE_TCLAPI
 
	$dñëe_fun˘i⁄
(

5006 * 
˛õ¡D©a
,

5007 
T˛_I¡îp
 *
öãΩ
,

5008 
¨gc
,

5009 **
¨gv


5011 
rc
;

5012 
sqlôe3
 *
db
;

5013 if–
¨gc
!=3 ){

5014 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

5016  
TCL_ERROR
;

5018 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

5019 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, 
¨gv
[2], -1, 
SQLITE_UTF8
, 0, 0, 0, 0);

5020 
	`T˛_SëResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 
TCL_STATIC
);

5021  
TCL_OK
;

5022 
	}
}

5031 
SQLITE_TCLAPI
 
	$dñëe_cﬁœti⁄
(

5032 * 
˛õ¡D©a
,

5033 
T˛_I¡îp
 *
öãΩ
,

5034 
¨gc
,

5035 **
¨gv


5037 
rc
;

5038 
sqlôe3
 *
db
;

5039 if–
¨gc
!=3 ){

5040 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

5042  
TCL_ERROR
;

5044 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

5045 
rc
 = 
	`sqlôe3_¸óã_cﬁœti⁄
(
db
, 
¨gv
[2], 
SQLITE_UTF8
, 0, 0);

5046 
	`T˛_SëResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 
TCL_STATIC
);

5047  
TCL_OK
;

5048 
	}
}

5056 
SQLITE_TCLAPI
 
	$gë_autocommô
(

5057 * 
˛õ¡D©a
,

5058 
T˛_I¡îp
 *
öãΩ
,

5059 
¨gc
,

5060 **
¨gv


5062 
zBuf
[30];

5063 
sqlôe3
 *
db
;

5064 if–
¨gc
!=2 ){

5065 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

5067  
TCL_ERROR
;

5069 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

5070 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%d", 
	`sqlôe3_gë_autocommô
(
db
));

5071 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

5072  
TCL_OK
;

5073 
	}
}

5082 
SQLITE_TCLAPI
 
	$ã°_busy_timeout
(

5083 * 
˛õ¡D©a
,

5084 
T˛_I¡îp
 *
öãΩ
,

5085 
¨gc
,

5086 **
¨gv


5088 
rc
, 
ms
;

5089 
sqlôe3
 *
db
;

5090 if–
¨gc
!=3 ){

5091 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

5093  
TCL_ERROR
;

5095 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

5096 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[2], &
ms
ËË 
TCL_ERROR
;

5097 
rc
 = 
	`sqlôe3_busy_timeout
(
db
, 
ms
);

5098 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

5099  
TCL_OK
;

5100 
	}
}

5108 
SQLITE_TCLAPI
 
	$t˛_v¨übÀ_ty≥
(

5109 * 
˛õ¡D©a
,

5110 
T˛_I¡îp
 *
öãΩ
,

5111 
objc
,

5112 
T˛_Obj
 *
CONST
 
objv
[]

5114 
T˛_Obj
 *
pV¨
;

5115 if–
objc
!=2 ){

5116 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "VARIABLE");

5117  
TCL_ERROR
;

5119 
pV¨
 = 
	`T˛_GëV¨2Ex
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), 0, 
TCL_LEAVE_ERR_MSG
);

5120 if–
pV¨
==0 )  
TCL_ERROR
;

5121 if–
pV¨
->
ty≥På
 ){

5122 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
(
pV¨
->
ty≥På
->
«me
, -1));

5124  
TCL_OK
;

5125 
	}
}

5134 
SQLITE_TCLAPI
 
	$ã°_ªÀa£_mem‹y
(

5135 * 
˛õ¡D©a
,

5136 
T˛_I¡îp
 *
öãΩ
,

5137 
objc
,

5138 
T˛_Obj
 *
CONST
 
objv
[]

5140 #i‡
	`deföed
(
SQLITE_ENABLE_MEMORY_MANAGEMENT
Ë&& !deföed(
SQLITE_OMIT_DISKIO
)

5141 
N
;

5142 
amt
;

5143 if–
objc
!=1 && objc!=2 ){

5144 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "?N?");

5145  
TCL_ERROR
;

5147 if–
objc
==2 ){

5148 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[1], &
N
ËË 
TCL_ERROR
;

5150 
N
 = -1;

5152 
amt
 = 
	`sqlôe3_ªÀa£_mem‹y
(
N
);

5153 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
amt
));

5155  
TCL_OK
;

5156 
	}
}

5165 
SQLITE_TCLAPI
 
	$ã°_db_ªÀa£_mem‹y
(

5166 * 
˛õ¡D©a
,

5167 
T˛_I¡îp
 *
öãΩ
,

5168 
objc
,

5169 
T˛_Obj
 *
CONST
 
objv
[]

5171 
sqlôe3
 *
db
;

5172 
rc
;

5173 if–
objc
!=2 ){

5174 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB");

5175  
TCL_ERROR
;

5177 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

5178 
rc
 = 
	`sqlôe3_db_ªÀa£_mem‹y
(
db
);

5179 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

5180  
TCL_OK
;

5181 
	}
}

5188 
SQLITE_TCLAPI
 
	$ã°_db_ˇcheÊush
(

5189 * 
˛õ¡D©a
,

5190 
T˛_I¡îp
 *
öãΩ
,

5191 
objc
,

5192 
T˛_Obj
 *
CONST
 
objv
[]

5194 
sqlôe3
 *
db
;

5195 
rc
;

5196 if–
objc
!=2 ){

5197 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB");

5198  
TCL_ERROR
;

5200 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

5201 
rc
 = 
	`sqlôe3_db_ˇcheÊush
(
db
);

5202 if–
rc
 ){

5203 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºSå
(
rc
), 
TCL_STATIC
);

5204  
TCL_ERROR
;

5207 
	`T˛_Re£tResu…
(
öãΩ
);

5208  
TCL_OK
;

5209 
	}
}

5216 
SQLITE_TCLAPI
 
	$ã°_sy°em_î∫o
(

5217 * 
˛õ¡D©a
,

5218 
T˛_I¡îp
 *
öãΩ
,

5219 
objc
,

5220 
T˛_Obj
 *
CONST
 
objv
[]

5222 
sqlôe3
 *
db
;

5223 
iEºno
;

5224 if–
objc
!=2 ){

5225 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB");

5226  
TCL_ERROR
;

5228 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

5229 
iEºno
 = 
	`sqlôe3_sy°em_î∫o
(
db
);

5230 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
iEºno
));

5231  
TCL_OK
;

5232 
	}
}

5239 
SQLITE_TCLAPI
 
	$ã°_db_fûíame
(

5240 * 
˛õ¡D©a
,

5241 
T˛_I¡îp
 *
öãΩ
,

5242 
objc
,

5243 
T˛_Obj
 *
CONST
 
objv
[]

5245 
sqlôe3
 *
db
;

5246 c⁄° *
zDbName
;

5247 if–
objc
!=3 ){

5248 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB DBNAME");

5249  
TCL_ERROR
;

5251 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

5252 
zDbName
 = 
	`T˛_GëSåög
(
objv
[2]);

5253 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3_db_fûíame
(
db
, 
zDbName
), (*)0);

5254  
TCL_OK
;

5255 
	}
}

5263 
SQLITE_TCLAPI
 
	$ã°_db_ªad⁄ly
(

5264 * 
˛õ¡D©a
,

5265 
T˛_I¡îp
 *
öãΩ
,

5266 
objc
,

5267 
T˛_Obj
 *
CONST
 
objv
[]

5269 
sqlôe3
 *
db
;

5270 c⁄° *
zDbName
;

5271 if–
objc
!=3 ){

5272 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB DBNAME");

5273  
TCL_ERROR
;

5275 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

5276 
zDbName
 = 
	`T˛_GëSåög
(
objv
[2]);

5277 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
	`sqlôe3_db_ªad⁄ly
(
db
, 
zDbName
)));

5278  
TCL_OK
;

5279 
	}
}

5288 
SQLITE_TCLAPI
 
	$ã°_so·_hóp_limô
(

5289 * 
˛õ¡D©a
,

5290 
T˛_I¡îp
 *
öãΩ
,

5291 
objc
,

5292 
T˛_Obj
 *
CONST
 
objv
[]

5294 
sqlôe3_öt64
 
amt
;

5295 
T˛_WideI¡
 
N
 = -1;

5296 if–
objc
!=1 && objc!=2 ){

5297 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "?N?");

5298  
TCL_ERROR
;

5300 if–
objc
==2 ){

5301 if–
	`T˛_GëWideI¡FromObj
(
öãΩ
, 
objv
[1], &
N
ËË 
TCL_ERROR
;

5303 
amt
 = 
	`sqlôe3_so·_hóp_limô64
(
N
);

5304 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
(
amt
));

5305  
TCL_OK
;

5306 
	}
}

5313 
SQLITE_TCLAPI
 
	$ã°_thªad_˛ónup
(

5314 * 
˛õ¡D©a
,

5315 
T˛_I¡îp
 *
öãΩ
,

5316 
objc
,

5317 
T˛_Obj
 *
CONST
 
objv
[]

5319 #i‚de‡
SQLITE_OMIT_DEPRECATED


5320 
	`sqlôe3_thªad_˛ónup
();

5322  
TCL_OK
;

5323 
	}
}

5331 
SQLITE_TCLAPI
 
	$ã°_∑gî_ªfcou¡s
(

5332 * 
˛õ¡D©a
,

5333 
T˛_I¡îp
 *
öãΩ
,

5334 
objc
,

5335 
T˛_Obj
 *
CONST
 
objv
[]

5337 
sqlôe3
 *
db
;

5338 
i
;

5339 
v
, *
a
;

5340 
T˛_Obj
 *
pResu…
;

5342 if–
objc
!=2 ){

5343 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

5344 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " DB", 0);

5345  
TCL_ERROR
;

5347 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

5348 
pResu…
 = 
	`T˛_NewObj
();

5349 
i
=0; i<
db
->
nDb
; i++){

5350 if–
db
->
aDb
[
i
].
pBt
==0 ){

5351 
v
 = -1;

5353 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

5354 
a
 = 
	`sqlôe3PagîSèts
(
	`sqlôe3BåìPagî
(
db
->
aDb
[
i
].
pBt
));

5355 
v
 = 
a
[0];

5356 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

5358 
	`T˛_Li°ObjAµídEÀmít
(0, 
pResu…
, 
	`T˛_NewI¡Obj
(
v
));

5360 
	`T˛_SëObjResu…
(
öãΩ
, 
pResu…
);

5361  
TCL_OK
;

5362 
	}
}

5377 
SQLITE_TCLAPI
 
	$w‹kög_64bô_öt
(

5378 
Clõ¡D©a
 
˛õ¡D©a
,

5379 
T˛_I¡îp
 *
öãΩ
,

5380 
objc
,

5381 
T˛_Obj
 *
CONST
 
objv
[]

5383 
T˛_Obj
 *
pTe°Obj
;

5384 
w‹kög
 = 0;

5386 
pTe°Obj
 = 
	`T˛_NewWideI¡Obj
(1000000*(
i64
)1234567890);

5387 
w‹kög
 = 
	`°rcmp
(
	`T˛_GëSåög
(
pTe°Obj
), "1234567890000000")==0;

5388 
	`T˛_De¸RefCou¡
(
pTe°Obj
);

5389 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewBoﬁónObj
(
w‹kög
));

5390  
TCL_OK
;

5391 
	}
}

5402 
SQLITE_TCLAPI
 
	$vfs_u∆ök_ã°
(

5403 
Clõ¡D©a
 
˛õ¡D©a
,

5404 
T˛_I¡îp
 *
öãΩ
,

5405 
objc
,

5406 
T˛_Obj
 *
CONST
 
objv
[]

5408 
i
;

5409 
sqlôe3_vfs
 *
pMaö
;

5410 
sqlôe3_vfs
 *
≠Vfs
[20];

5411 
sqlôe3_vfs
 
⁄e
, 
two
;

5413 
	`sqlôe3_vfs_uƒegi°î
(0);

5414 
⁄e
.
zName
 = "__one";

5415 
two
.
zName
 = "__two";

5420 
pMaö
 = 
	`sqlôe3_vfs_föd
(0);

5421 
	`sqlôe3_vfs_ªgi°î
(&
⁄e
, 0);

5422 
	`as£π
–
pMaö
==0 ||ÖMaö==
	`sqlôe3_vfs_föd
(0) );

5423 
	`sqlôe3_vfs_ªgi°î
(&
two
, 0);

5424 
	`as£π
–
pMaö
==0 ||ÖMaö==
	`sqlôe3_vfs_föd
(0) );

5427 
	`as£π
–
	`sqlôe3_vfs_föd
("__⁄e")==&
⁄e
 );

5428 
	`as£π
–
	`sqlôe3_vfs_föd
("__two")==&
two
 );

5434 
	`sqlôe3_vfs_ªgi°î
(&
⁄e
, 1);

5435 
	`as£π
–
	`sqlôe3_vfs_föd
("__⁄e")==&
⁄e
 );

5436 
	`as£π
–
	`sqlôe3_vfs_föd
("__two")==&
two
 );

5437 
	`as£π
–
	`sqlôe3_vfs_föd
(0)==&
⁄e
 );

5438 
	`sqlôe3_vfs_ªgi°î
(&
two
, 1);

5439 
	`as£π
–
	`sqlôe3_vfs_föd
("__⁄e")==&
⁄e
 );

5440 
	`as£π
–
	`sqlôe3_vfs_föd
("__two")==&
two
 );

5441 
	`as£π
–
	`sqlôe3_vfs_föd
(0)==&
two
 );

5442 if–
pMaö
 ){

5443 
	`sqlôe3_vfs_ªgi°î
(
pMaö
, 1);

5444 
	`as£π
–
	`sqlôe3_vfs_föd
("__⁄e")==&
⁄e
 );

5445 
	`as£π
–
	`sqlôe3_vfs_föd
("__two")==&
two
 );

5446 
	`as£π
–
	`sqlôe3_vfs_föd
(0)==
pMaö
 );

5452 
i
=0; i<(
≠Vfs
)/(apVfs[0]); i++){

5453 
≠Vfs
[
i
] = 
	`sqlôe3_vfs_föd
(0);

5454 if–
≠Vfs
[
i
] ){

5455 
	`as£π
–
≠Vfs
[
i
]==
	`sqlôe3_vfs_föd
◊pVfs[i]->
zName
) );

5456 
	`sqlôe3_vfs_uƒegi°î
(
≠Vfs
[
i
]);

5457 
	`as£π
–0==
	`sqlôe3_vfs_föd
(
≠Vfs
[
i
]->
zName
) );

5460 
	`as£π
–0==
	`sqlôe3_vfs_föd
(0) );

5465 
	`sqlôe3_vfs_ªgi°î
(
pMaö
, 0);

5466 
	`as£π
–
	`sqlôe3_vfs_föd
(0)==
pMaö
 );

5469 
	`sqlôe3_vfs_uƒegi°î
(
pMaö
);

5470 
	`as£π
–0==
	`sqlôe3_vfs_föd
(0) );

5473 
i
=(
≠Vfs
)/(apVfs[0])-1; i>=0; i--){

5474 if–
≠Vfs
[
i
] ){

5475 
	`sqlôe3_vfs_ªgi°î
(
≠Vfs
[
i
], 1);

5476 
	`as£π
–
≠Vfs
[
i
]==
	`sqlôe3_vfs_föd
(0) );

5477 
	`as£π
–
≠Vfs
[
i
]==
	`sqlôe3_vfs_föd
◊pVfs[i]->
zName
) );

5482 
	`sqlôe3_vfs_uƒegi°î
(&
⁄e
);

5483 
	`sqlôe3_vfs_uƒegi°î
(&
two
);

5486 
	`sqlôe3_vfs_uƒegi°î
(&
⁄e
);

5487 
	`sqlôe3_vfs_uƒegi°î
(&
two
);

5488 
	`as£π
–
	`sqlôe3_vfs_föd
("__one")==0 );

5489 
	`as£π
–
	`sqlôe3_vfs_föd
("__two")==0 );

5493 
	`as£π
–
	`sqlôe3_vfs_föd
(0)==
pMaö
 );

5495  
TCL_OK
;

5496 
	}
}

5504 
SQLITE_TCLAPI
 
	$vfs_öôÁû_ã°
(

5505 
Clõ¡D©a
 
˛õ¡D©a
,

5506 
T˛_I¡îp
 *
öãΩ
,

5507 
objc
,

5508 
T˛_Obj
 *
CONST
 
objv
[]

5510 
sqlôe3_vfs
 
⁄e
;

5511 
⁄e
.
zName
 = "__one";

5513 if–
	`sqlôe3_vfs_föd
(0ËË 
TCL_ERROR
;

5514 
	`sqlôe3_vfs_ªgi°î
(&
⁄e
, 0);

5515 if–
	`sqlôe3_vfs_föd
(0ËË 
TCL_ERROR
;

5516 
	`sqlôe3_vfs_ªgi°î
(&
⁄e
, 1);

5517 if–
	`sqlôe3_vfs_föd
(0ËË 
TCL_ERROR
;

5518  
TCL_OK
;

5519 
	}
}

5524 
sqlôe3_vfs
 *
	g≠Vfs
[20];

5525 
	gnVfs
 = 0;

5532 
SQLITE_TCLAPI
 
	$vfs_uƒegi°î_Æl
(

5533 
Clõ¡D©a
 
˛õ¡D©a
,

5534 
T˛_I¡îp
 *
öãΩ
,

5535 
objc
,

5536 
T˛_Obj
 *
CONST
 
objv
[]

5538 
i
;

5539 
i
=0; i<
	`AºaySize
(
≠Vfs
); i++){

5540 
≠Vfs
[
i
] = 
	`sqlôe3_vfs_föd
(0);

5541 if–
≠Vfs
[
i
]==0 ) ;

5542 
	`sqlôe3_vfs_uƒegi°î
(
≠Vfs
[
i
]);

5544 
nVfs
 = 
i
;

5545  
TCL_OK
;

5546 
	}
}

5554 
SQLITE_TCLAPI
 
	$vfs_ªªgi°î_Æl
(

5555 
Clõ¡D©a
 
˛õ¡D©a
,

5556 
T˛_I¡îp
 *
öãΩ
,

5557 
objc
,

5558 
T˛_Obj
 *
CONST
 
objv
[]

5560 
i
;

5561 
i
=
nVfs
-1; i>=0; i--){

5562 
	`sqlôe3_vfs_ªgi°î
(
≠Vfs
[
i
], 1);

5564  
TCL_OK
;

5565 
	}
}

5574 
SQLITE_TCLAPI
 
	$fûe_c⁄åﬁ_ã°
(

5575 
Clõ¡D©a
 
˛õ¡D©a
,

5576 
T˛_I¡îp
 *
öãΩ
,

5577 
objc
,

5578 
T˛_Obj
 *
CONST
 
objv
[]

5580 
iArg
 = 0;

5581 
sqlôe3
 *
db
;

5582 
rc
;

5584 if–
objc
!=2 ){

5585 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

5586 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " DB", 0);

5587  
TCL_ERROR
;

5589 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

5590 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, 0, 0, &
iArg
);

5591 
	`as£π
–
rc
==
SQLITE_NOTFOUND
 );

5592 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, "nŸad©aba£", 
SQLITE_FCNTL_LOCKSTATE
, &
iArg
);

5593 
	`as£π
–
rc
==
SQLITE_ERROR
 );

5594 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, "maö", -1, &
iArg
);

5595 
	`as£π
–
rc
==
SQLITE_NOTFOUND
 );

5596 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, "ãmp", -1, &
iArg
);

5597 
	`as£π
–
rc
==
SQLITE_NOTFOUND
 ||Ñc==
SQLITE_ERROR
 );

5599  
TCL_OK
;

5600 
	}
}

5609 
SQLITE_TCLAPI
 
	$fûe_c⁄åﬁ_œ°î∫o_ã°
(

5610 
Clõ¡D©a
 
˛õ¡D©a
,

5611 
T˛_I¡îp
 *
öãΩ
,

5612 
objc
,

5613 
T˛_Obj
 *
CONST
 
objv
[]

5615 
iArg
 = 0;

5616 
sqlôe3
 *
db
;

5617 
rc
;

5619 if–
objc
!=2 ){

5620 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

5621 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " DB", 0);

5622  
TCL_ERROR
;

5624 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
) ){

5625  
TCL_ERROR
;

5627 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, 
NULL
, 
SQLITE_LAST_ERRNO
, &
iArg
);

5628 if–
rc
 ){

5629 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

5630  
TCL_ERROR
;

5632 if–
iArg
!=0 ) {

5633 
	`T˛_AµídResu…
(
öãΩ
, "UnexpectedÇon-zeroÉrrno: ",

5634 
	`T˛_GëSåögFromObj
(
	`T˛_NewI¡Obj
(
iArg
), 0), " ", 0);

5635  
TCL_ERROR
;

5637  
TCL_OK
;

5638 
	}
}

5647 
SQLITE_TCLAPI
 
	$fûe_c⁄åﬁ_chunksize_ã°
(

5648 
Clõ¡D©a
 
˛õ¡D©a
,

5649 
T˛_I¡îp
 *
öãΩ
,

5650 
objc
,

5651 
T˛_Obj
 *
CONST
 
objv
[]

5653 
nSize
;

5654 *
zDb
;

5655 
sqlôe3
 *
db
;

5656 
rc
;

5658 if–
objc
!=4 ){

5659 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB DBNAME SIZE");

5660  
TCL_ERROR
;

5662 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
)

5663 || 
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
nSize
)

5665  
TCL_ERROR
;

5667 
zDb
 = 
	`T˛_GëSåög
(
objv
[2]);

5668 if–
zDb
[0]=='\0' ) zDb = 
NULL
;

5670 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, 
zDb
, 
SQLITE_FCNTL_CHUNK_SIZE
, (*)&
nSize
);

5671 if–
rc
 ){

5672 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_STATIC
);

5673  
TCL_ERROR
;

5675  
TCL_OK
;

5676 
	}
}

5684 
SQLITE_TCLAPI
 
	$fûe_c⁄åﬁ_sizehöt_ã°
(

5685 
Clõ¡D©a
 
˛õ¡D©a
,

5686 
T˛_I¡îp
 *
öãΩ
,

5687 
objc
,

5688 
T˛_Obj
 *
CONST
 
objv
[]

5690 
T˛_WideI¡
 
nSize
;

5691 *
zDb
;

5692 
sqlôe3
 *
db
;

5693 
rc
;

5695 if–
objc
!=4 ){

5696 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB DBNAME SIZE");

5697  
TCL_ERROR
;

5699 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
)

5700 || 
	`T˛_GëWideI¡FromObj
(
öãΩ
, 
objv
[3], &
nSize
)

5702  
TCL_ERROR
;

5704 
zDb
 = 
	`T˛_GëSåög
(
objv
[2]);

5705 if–
zDb
[0]=='\0' ) zDb = 
NULL
;

5707 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, 
zDb
, 
SQLITE_FCNTL_SIZE_HINT
, (*)&
nSize
);

5708 if–
rc
 ){

5709 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_STATIC
);

5710  
TCL_ERROR
;

5712  
TCL_OK
;

5713 
	}
}

5722 
SQLITE_TCLAPI
 
	$fûe_c⁄åﬁ_lock¥oxy_ã°
(

5723 
Clõ¡D©a
 
˛õ¡D©a
,

5724 
T˛_I¡îp
 *
öãΩ
,

5725 
objc
,

5726 
T˛_Obj
 *
CONST
 
objv
[]

5728 
sqlôe3
 *
db
;

5730 if–
objc
!=3 ){

5731 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

5732 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " DB PWD", 0);

5733  
TCL_ERROR
;

5735 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
) ){

5736  
TCL_ERROR
;

5739 #i‡!
	`deföed
(
SQLITE_ENABLE_LOCKING_STYLE
)

5740 #i‡
	`deföed
(
__APPLE__
)

5741 
	#SQLITE_ENABLE_LOCKING_STYLE
 1

	)

5743 
	#SQLITE_ENABLE_LOCKING_STYLE
 0

	)

5746 #i‡
SQLITE_ENABLE_LOCKING_STYLE
 && 
	`deföed
(
__APPLE__
)

5748 *
ã°P©h
;

5749 
rc
;

5750 
nPwd
;

5751 c⁄° *
zPwd
;

5752 
¥oxyP©h
[400];

5754 
zPwd
 = 
	`T˛_GëSåögFromObj
(
objv
[2], &
nPwd
);

5755 if–(
¥oxyP©h
)<
nPwd
+20 ){

5756 
	`T˛_AµídResu…
(
öãΩ
, "PWDÅoo big", (*)0);

5757  
TCL_ERROR
;

5759 
	`sqlôe3_¢¥ötf
((
¥oxyP©h
),ÖroxyP©h, "%s/ã°.¥oxy", 
zPwd
);

5760 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, 
NULL
, 
SQLITE_SET_LOCKPROXYFILE
, 
¥oxyP©h
);

5761 if–
rc
 ){

5762 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

5763  
TCL_ERROR
;

5765 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, 
NULL
, 
SQLITE_GET_LOCKPROXYFILE
, &
ã°P©h
);

5766 if–
	`°∫cmp
(
¥oxyP©h
,
ã°P©h
,11) ){

5767 
	`T˛_AµídResu…
(
öãΩ
, "LockÖroxy file didÇot matchÅhe "

5769  
TCL_ERROR
;

5771 if–
rc
 ){

5772 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

5773  
TCL_ERROR
;

5775 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, 
NULL
, 
SQLITE_SET_LOCKPROXYFILE
, 
¥oxyP©h
);

5776 if–
rc
 ){

5777 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

5778  
TCL_ERROR
;

5782  
TCL_OK
;

5783 
	}
}

5785 #i‡
SQLITE_OS_WIN


5792 
SQLITE_TCLAPI
 
	$fûe_c⁄åﬁ_wö32_av_ªåy
(

5793 
Clõ¡D©a
 
˛õ¡D©a
,

5794 
T˛_I¡îp
 *
öãΩ
,

5795 
objc
,

5796 
T˛_Obj
 *
CONST
 
objv
[]

5798 
sqlôe3
 *
db
;

5799 
rc
;

5800 
a
[2];

5801 
z
[100];

5803 if–
objc
!=4 ){

5804 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

5805 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " DB NRETRY DELAY", 0);

5806  
TCL_ERROR
;

5808 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
) ){

5809  
TCL_ERROR
;

5811 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
a
[0]ËË 
TCL_ERROR
;

5812 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
a
[1]ËË 
TCL_ERROR
;

5813 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, 
NULL
, 
SQLITE_FCNTL_WIN32_AV_RETRY
, (*)
a
);

5814 
	`sqlôe3_¢¥ötf
((
z
), z, "%d %d %d", 
rc
, 
a
[0],á[1]);

5815 
	`T˛_AµídResu…
(
öãΩ
, 
z
, (*)0);

5816  
TCL_OK
;

5817 
	}
}

5825 
	$fûe_c⁄åﬁ_wö32_gë_h™dÀ
(

5826 
Clõ¡D©a
 
˛õ¡D©a
,

5827 
T˛_I¡îp
 *
öãΩ
,

5828 
objc
,

5829 
T˛_Obj
 *
CONST
 
objv
[]

5831 
sqlôe3
 *
db
;

5832 
rc
;

5833 
HANDLE
 
hFûe
 = 
NULL
;

5834 
z
[100];

5836 if–
objc
!=2 ){

5837 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

5838 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " DB", 0);

5839  
TCL_ERROR
;

5841 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
) ){

5842  
TCL_ERROR
;

5844 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, 
NULL
, 
SQLITE_FCNTL_WIN32_GET_HANDLE
,

5845 (*)&
hFûe
);

5846 
	`sqlôe3_¢¥ötf
((
z
), z, "%d %p", 
rc
, (*)
hFûe
);

5847 
	`T˛_AµídResu…
(
öãΩ
, 
z
, (*)0);

5848  
TCL_OK
;

5849 
	}
}

5857 
SQLITE_TCLAPI
 
	$fûe_c⁄åﬁ_wö32_£t_h™dÀ
(

5858 
Clõ¡D©a
 
˛õ¡D©a
,

5859 
T˛_I¡îp
 *
öãΩ
,

5860 
objc
,

5861 
T˛_Obj
 *
CONST
 
objv
[]

5863 
sqlôe3
 *
db
;

5864 
rc
;

5865 
HANDLE
 
hFûe
 = 
NULL
;

5866 
z
[100];

5868 if–
objc
!=3 ){

5869 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

5870 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " DB HANDLE", 0);

5871  
TCL_ERROR
;

5873 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
) ){

5874  
TCL_ERROR
;

5876 if–
	`gëWö32H™dÀ
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[2]), &
hFûe
) ){

5877  
TCL_ERROR
;

5879 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, 
NULL
, 
SQLITE_FCNTL_WIN32_SET_HANDLE
,

5880 (*)&
hFûe
);

5881 
	`sqlôe3_¢¥ötf
((
z
), z, "%d %p", 
rc
, (*)
hFûe
);

5882 
	`T˛_AµídResu…
(
öãΩ
, 
z
, (*)0);

5883  
TCL_OK
;

5884 
	}
}

5893 
SQLITE_TCLAPI
 
	$fûe_c⁄åﬁ_≥rsi°_wÆ
(

5894 
Clõ¡D©a
 
˛õ¡D©a
,

5895 
T˛_I¡îp
 *
öãΩ
,

5896 
objc
,

5897 
T˛_Obj
 *
CONST
 
objv
[]

5899 
sqlôe3
 *
db
;

5900 
rc
;

5901 
bPîsi°
;

5902 
z
[100];

5904 if–
objc
!=3 ){

5905 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

5906 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " DB FLAG", 0);

5907  
TCL_ERROR
;

5909 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
) ){

5910  
TCL_ERROR
;

5912 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
bPîsi°
ËË 
TCL_ERROR
;

5913 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, 
NULL
, 
SQLITE_FCNTL_PERSIST_WAL
, (*)&
bPîsi°
);

5914 
	`sqlôe3_¢¥ötf
((
z
), z, "%d %d", 
rc
, 
bPîsi°
);

5915 
	`T˛_AµídResu…
(
öãΩ
, 
z
, (*)0);

5916  
TCL_OK
;

5917 
	}
}

5925 
SQLITE_TCLAPI
 
	$fûe_c⁄åﬁ_powîß„_ovîwrôe
(

5926 
Clõ¡D©a
 
˛õ¡D©a
,

5927 
T˛_I¡îp
 *
öãΩ
,

5928 
objc
,

5929 
T˛_Obj
 *
CONST
 
objv
[]

5931 
sqlôe3
 *
db
;

5932 
rc
;

5933 
b
;

5934 
z
[100];

5936 if–
objc
!=3 ){

5937 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

5938 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " DB FLAG", 0);

5939  
TCL_ERROR
;

5941 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
) ){

5942  
TCL_ERROR
;

5944 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
b
ËË 
TCL_ERROR
;

5945 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
,
NULL
,
SQLITE_FCNTL_POWERSAFE_OVERWRITE
,(*)&
b
);

5946 
	`sqlôe3_¢¥ötf
((
z
), z, "%d %d", 
rc
, 
b
);

5947 
	`T˛_AµídResu…
(
öãΩ
, 
z
, (*)0);

5948  
TCL_OK
;

5949 
	}
}

5957 
SQLITE_TCLAPI
 
	$fûe_c⁄åﬁ_vf¢ame
(

5958 
Clõ¡D©a
 
˛õ¡D©a
,

5959 
T˛_I¡îp
 *
öãΩ
,

5960 
objc
,

5961 
T˛_Obj
 *
CONST
 
objv
[]

5963 
sqlôe3
 *
db
;

5964 c⁄° *
zDbName
 = "main";

5965 *
zVfsName
 = 0;

5967 if–
objc
!=2 && objc!=3 ){

5968 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

5969 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " DB ?AUXDB?", 0);

5970  
TCL_ERROR
;

5972 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
) ){

5973  
TCL_ERROR
;

5975 if–
objc
==3 ){

5976 
zDbName
 = 
	`T˛_GëSåög
(
objv
[2]);

5978 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, 
zDbName
, 
SQLITE_FCNTL_VFSNAME
,(*)&
zVfsName
);

5979 
	`T˛_AµídResu…
(
öãΩ
, 
zVfsName
, (*)0);

5980 
	`sqlôe3_‰ì
(
zVfsName
);

5981  
TCL_OK
;

5982 
	}
}

5989 
SQLITE_TCLAPI
 
	$fûe_c⁄åﬁ_ãmpfûíame
(

5990 
Clõ¡D©a
 
˛õ¡D©a
,

5991 
T˛_I¡îp
 *
öãΩ
,

5992 
objc
,

5993 
T˛_Obj
 *
CONST
 
objv
[]

5995 
sqlôe3
 *
db
;

5996 c⁄° *
zDbName
 = "main";

5997 *
zTName
 = 0;

5999 if–
objc
!=2 && objc!=3 ){

6000 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

6001 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " DB ?AUXDB?", 0);

6002  
TCL_ERROR
;

6004 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
) ){

6005  
TCL_ERROR
;

6007 if–
objc
==3 ){

6008 
zDbName
 = 
	`T˛_GëSåög
(
objv
[2]);

6010 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, 
zDbName
, 
SQLITE_FCNTL_TEMPFILENAME
, (*)&
zTName
);

6011 
	`T˛_AµídResu…
(
öãΩ
, 
zTName
, (*)0);

6012 
	`sqlôe3_‰ì
(
zTName
);

6013  
TCL_OK
;

6014 
	}
}

6022 
SQLITE_TCLAPI
 
	$vfs_li°
(

6023 
Clõ¡D©a
 
˛õ¡D©a
,

6024 
T˛_I¡îp
 *
öãΩ
,

6025 
objc
,

6026 
T˛_Obj
 *
CONST
 
objv
[]

6028 
sqlôe3_vfs
 *
pVfs
;

6029 
T˛_Obj
 *
pRë
 = 
	`T˛_NewObj
();

6030 if–
objc
!=1 ){

6031 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

6032  
TCL_ERROR
;

6034 
pVfs
=
	`sqlôe3_vfs_föd
(0);ÖVfs;ÖVfsıVfs->
pNext
){

6035 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewSåögObj
(
pVfs
->
zName
, -1));

6037 
	`T˛_SëObjResu…
(
öãΩ
, 
pRë
);

6038  
TCL_OK
;

6039 
	}
}

6047 
SQLITE_TCLAPI
 
	$ã°_limô
(

6048 
Clõ¡D©a
 
˛õ¡D©a
,

6049 
T˛_I¡îp
 *
öãΩ
,

6050 
objc
,

6051 
T˛_Obj
 *
CONST
 
objv
[]

6053 
sqlôe3
 *
db
;

6054 
rc
;

6056 *
zName
;

6057 
id
;

6058 } 
aId
[] = {

6059 { "SQLITE_LIMIT_LENGTH", 
SQLITE_LIMIT_LENGTH
 },

6060 { "SQLITE_LIMIT_SQL_LENGTH", 
SQLITE_LIMIT_SQL_LENGTH
 },

6061 { "SQLITE_LIMIT_COLUMN", 
SQLITE_LIMIT_COLUMN
 },

6062 { "SQLITE_LIMIT_EXPR_DEPTH", 
SQLITE_LIMIT_EXPR_DEPTH
 },

6063 { "SQLITE_LIMIT_COMPOUND_SELECT", 
SQLITE_LIMIT_COMPOUND_SELECT
 },

6064 { "SQLITE_LIMIT_VDBE_OP", 
SQLITE_LIMIT_VDBE_OP
 },

6065 { "SQLITE_LIMIT_FUNCTION_ARG", 
SQLITE_LIMIT_FUNCTION_ARG
 },

6066 { "SQLITE_LIMIT_ATTACHED", 
SQLITE_LIMIT_ATTACHED
 },

6067 { "SQLITE_LIMIT_LIKE_PATTERN_LENGTH", 
SQLITE_LIMIT_LIKE_PATTERN_LENGTH
 },

6068 { "SQLITE_LIMIT_VARIABLE_NUMBER", 
SQLITE_LIMIT_VARIABLE_NUMBER
 },

6069 { "SQLITE_LIMIT_TRIGGER_DEPTH", 
SQLITE_LIMIT_TRIGGER_DEPTH
 },

6070 { "SQLITE_LIMIT_WORKER_THREADS", 
SQLITE_LIMIT_WORKER_THREADS
 },

6074 { "SQLITE_LIMIT_TOOBIG", 
SQLITE_LIMIT_WORKER_THREADS
+1 },

6076 
i
, 
id
 = 0;

6077 
vÆ
;

6078 c⁄° *
zId
;

6080 if–
objc
!=4 ){

6081 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

6082 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " DB ID VALUE", 0);

6083  
TCL_ERROR
;

6085 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

6086 
zId
 = 
	`T˛_GëSåög
(
objv
[2]);

6087 
i
=0; i<(
aId
)/(aId[0]); i++){

6088 if–
	`°rcmp
(
zId
, 
aId
[
i
].
zName
)==0 ){

6089 
id
 = 
aId
[
i
].id;

6093 if–
i
>=(
aId
)/(aId[0]) ){

6094 
	`T˛_AµídResu…
(
öãΩ
, "unknow¿limôÅy≥: ", 
zId
, (*)0);

6095  
TCL_ERROR
;

6097 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
vÆ
ËË 
TCL_ERROR
;

6098 
rc
 = 
	`sqlôe3_limô
(
db
, 
id
, 
vÆ
);

6099 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

6100  
TCL_OK
;

6101 
	}
}

6110 
SQLITE_TCLAPI
 
	$ßve_¥ng_°©e
(

6111 
Clõ¡D©a
 
˛õ¡D©a
,

6112 
T˛_I¡îp
 *
öãΩ
,

6113 
objc
,

6114 
T˛_Obj
 *
CONST
 
objv
[]

6116 
rc
 = 
	`sqlôe3_ã°_c⁄åﬁ
(9999);

6117 
	`as£π
–
rc
==0 );

6118 
rc
 = 
	`sqlôe3_ã°_c⁄åﬁ
(-1);

6119 
	`as£π
–
rc
==0 );

6120 
	`sqlôe3_ã°_c⁄åﬁ
(
SQLITE_TESTCTRL_PRNG_SAVE
);

6121  
TCL_OK
;

6122 
	}
}

6126 
SQLITE_TCLAPI
 
	$ª°‹e_¥ng_°©e
(

6127 
Clõ¡D©a
 
˛õ¡D©a
,

6128 
T˛_I¡îp
 *
öãΩ
,

6129 
objc
,

6130 
T˛_Obj
 *
CONST
 
objv
[]

6132 
	`sqlôe3_ã°_c⁄åﬁ
(
SQLITE_TESTCTRL_PRNG_RESTORE
);

6133  
TCL_OK
;

6134 
	}
}

6138 
SQLITE_TCLAPI
 
	$ª£t_¥ng_°©e
(

6139 
Clõ¡D©a
 
˛õ¡D©a
,

6140 
T˛_I¡îp
 *
öãΩ
,

6141 
objc
,

6142 
T˛_Obj
 *
CONST
 
objv
[]

6144 
	`sqlôe3_ã°_c⁄åﬁ
(
SQLITE_TESTCTRL_PRNG_RESET
);

6145  
TCL_OK
;

6146 
	}
}

6154 
SQLITE_TCLAPI
 
	$d©aba£_may_be_c‹ru±
(

6155 
Clõ¡D©a
 
˛õ¡D©a
,

6156 
T˛_I¡îp
 *
öãΩ
,

6157 
objc
,

6158 
T˛_Obj
 *
CONST
 
objv
[]

6160 
	`sqlôe3_ã°_c⁄åﬁ
(
SQLITE_TESTCTRL_NEVER_CORRUPT
, 0);

6161  
TCL_OK
;

6162 
	}
}

6169 
SQLITE_TCLAPI
 
	$d©aba£_√vî_c‹ru±
(

6170 
Clõ¡D©a
 
˛õ¡D©a
,

6171 
T˛_I¡îp
 *
öãΩ
,

6172 
objc
,

6173 
T˛_Obj
 *
CONST
 
objv
[]

6175 
	`sqlôe3_ã°_c⁄åﬁ
(
SQLITE_TESTCTRL_NEVER_CORRUPT
, 1);

6176  
TCL_OK
;

6177 
	}
}

6182 
SQLITE_TCLAPI
 
	$ã°_pˇche_°©s
(

6183 
Clõ¡D©a
 
˛õ¡D©a
,

6184 
T˛_I¡îp
 *
öãΩ
,

6185 
objc
,

6186 
T˛_Obj
 *
CONST
 
objv
[]

6188 
nMö
;

6189 
nMax
;

6190 
nCuºít
;

6191 
nRecy˛abÀ
;

6192 
T˛_Obj
 *
pRë
;

6194 
	`sqlôe3PˇcheSèts
(&
nCuºít
, &
nMax
, &
nMö
, &
nRecy˛abÀ
);

6196 
pRë
 = 
	`T˛_NewObj
();

6197 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewSåögObj
("current", -1));

6198 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewI¡Obj
(
nCuºít
));

6199 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewSåögObj
("max", -1));

6200 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewI¡Obj
(
nMax
));

6201 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewSåögObj
("min", -1));

6202 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewI¡Obj
(
nMö
));

6203 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewSåögObj
("recyclable", -1));

6204 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewI¡Obj
(
nRecy˛abÀ
));

6206 
	`T˛_SëObjResu…
(
öãΩ
, 
pRë
);

6208  
TCL_OK
;

6209 
	}
}

6211 #ifde‡
SQLITE_ENABLE_UNLOCK_NOTIFY


6212 
	$ã°_u∆ock_nŸify_cb
(**
aArg
, 
nArg
){

6213 
ii
;

6214 
ii
=0; ii<
nArg
; ii++){

6215 
	`T˛_EvÆEx
((
T˛_I¡îp
 *)
aArg
[
ii
], "u∆ock_nŸify", -1, 
TCL_EVAL_GLOBAL
);

6217 
	}
}

6223 #ifde‡
SQLITE_ENABLE_UNLOCK_NOTIFY


6224 
SQLITE_TCLAPI
 
	$ã°_u∆ock_nŸify
(

6225 
Clõ¡D©a
 
˛õ¡D©a
,

6226 
T˛_I¡îp
 *
öãΩ
,

6227 
objc
,

6228 
T˛_Obj
 *
CONST
 
objv
[]

6230 
sqlôe3
 *
db
;

6231 
rc
;

6233 if–
objc
!=2 ){

6234 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB");

6235  
TCL_ERROR
;

6238 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
) ){

6239  
TCL_ERROR
;

6241 
rc
 = 
	`sqlôe3_u∆ock_nŸify
(
db
, 
ã°_u∆ock_nŸify_cb
, (*)
öãΩ
);

6242 
	`T˛_SëResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 
TCL_STATIC
);

6243  
TCL_OK
;

6244 
	}
}

6250 
SQLITE_TCLAPI
 
	$ã°_wÆ_checkpoöt
(

6251 
Clõ¡D©a
 
˛õ¡D©a
,

6252 
T˛_I¡îp
 *
öãΩ
,

6253 
objc
,

6254 
T˛_Obj
 *
CONST
 
objv
[]

6256 *
zDb
 = 0;

6257 
sqlôe3
 *
db
;

6258 
rc
;

6260 if–
objc
!=3 && objc!=2 ){

6261 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB ?NAME?");

6262  
TCL_ERROR
;

6265 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
) ){

6266  
TCL_ERROR
;

6268 if–
objc
==3 ){

6269 
zDb
 = 
	`T˛_GëSåög
(
objv
[2]);

6271 
rc
 = 
	`sqlôe3_wÆ_checkpoöt
(
db
, 
zDb
);

6272 
	`T˛_SëResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 
TCL_STATIC
);

6273  
TCL_OK
;

6274 
	}
}

6294 
SQLITE_TCLAPI
 
	$ã°_wÆ_checkpoöt_v2
(

6295 
Clõ¡D©a
 
˛õ¡D©a
,

6296 
T˛_I¡îp
 *
öãΩ
,

6297 
objc
,

6298 
T˛_Obj
 *
CONST
 
objv
[]

6300 *
zDb
 = 0;

6301 
sqlôe3
 *
db
;

6302 
rc
;

6304 
eMode
;

6305 
nLog
 = -555;

6306 
nCk±
 = -555;

6307 
T˛_Obj
 *
pRë
;

6309 c⁄° * 
aMode
[] = { "passive", "full", "restart", "truncate", 0 };

6310 
	`as£π
–
SQLITE_CHECKPOINT_PASSIVE
==0 );

6311 
	`as£π
–
SQLITE_CHECKPOINT_FULL
==1 );

6312 
	`as£π
–
SQLITE_CHECKPOINT_RESTART
==2 );

6313 
	`as£π
–
SQLITE_CHECKPOINT_TRUNCATE
==3 );

6315 if–
objc
!=3 && objc!=4 ){

6316 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB MODE ?NAME?");

6317  
TCL_ERROR
;

6320 if–
objc
==4 ){

6321 
zDb
 = 
	`T˛_GëSåög
(
objv
[3]);

6323 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
) || (

6324 
TCL_OK
!=
	`T˛_GëI¡FromObj
(0, 
objv
[2], &
eMode
)

6325 && 
TCL_OK
!=
	`T˛_GëIndexFromObj
(
öãΩ
, 
objv
[2], 
aMode
, "mode", 0, &
eMode
)

6327  
TCL_ERROR
;

6330 
rc
 = 
	`sqlôe3_wÆ_checkpoöt_v2
(
db
, 
zDb
, 
eMode
, &
nLog
, &
nCk±
);

6331 if–
rc
!=
SQLITE_OK
 &&Ñc!=
SQLITE_BUSY
 ){

6332 c⁄° *
zEºCode
 = 
	`sqlôe3EºName
(
rc
);

6333 
	`T˛_Re£tResu…
(
öãΩ
);

6334 
	`T˛_AµídResu…
(
öãΩ
, 
zEºCode
, " - ", (*)
	`sqlôe3_îrmsg
(
db
), 0);

6335  
TCL_ERROR
;

6338 
pRë
 = 
	`T˛_NewObj
();

6339 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewI¡Obj
(
rc
==
SQLITE_BUSY
?1:0));

6340 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewI¡Obj
(
nLog
));

6341 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewI¡Obj
(
nCk±
));

6342 
	`T˛_SëObjResu…
(
öãΩ
, 
pRë
);

6344  
TCL_OK
;

6345 
	}
}

6350 
SQLITE_TCLAPI
 
	$ã°_wÆ_autocheckpoöt
(

6351 
Clõ¡D©a
 
˛õ¡D©a
,

6352 
T˛_I¡îp
 *
öãΩ
,

6353 
objc
,

6354 
T˛_Obj
 *
CONST
 
objv
[]

6356 
sqlôe3
 *
db
;

6357 
rc
;

6358 
iVÆ
;

6361 if–
objc
!=3 ){

6362 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB VALUE");

6363  
TCL_ERROR
;

6366 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
)

6367 || 
	`T˛_GëI¡FromObj
(0, 
objv
[2], &
iVÆ
)

6369  
TCL_ERROR
;

6372 
rc
 = 
	`sqlôe3_wÆ_autocheckpoöt
(
db
, 
iVÆ
);

6373 
	`T˛_Re£tResu…
(
öãΩ
);

6374 if–
rc
!=
SQLITE_OK
 ){

6375 c⁄° *
zEºCode
 = 
	`sqlôe3EºName
(
rc
);

6376 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
(
zEºCode
, -1));

6377  
TCL_ERROR
;

6380  
TCL_OK
;

6381 
	}
}

6387 
	sLogCÆlback
 {

6388 
T˛_I¡îp
 *
	mpI¡îp
;

6389 
T˛_Obj
 *
	mpObj
;

6390 } 
	glogˇŒback
 = {0, 0};

6391 
	$xLogˇŒback
(*
unu£d
, 
îr
, *
zMsg
){

6392 
T˛_Obj
 *
pNew
 = 
	`T˛_Du∂iˇãObj
(
logˇŒback
.
pObj
);

6393 
	`T˛_In¸RefCou¡
(
pNew
);

6394 
	`T˛_Li°ObjAµídEÀmít
(

6395 0, 
pNew
, 
	`T˛_NewSåögObj
(
	`sqlôe3EºName
(
îr
), -1)

6397 
	`T˛_Li°ObjAµídEÀmít
(0, 
pNew
, 
	`T˛_NewSåögObj
(
zMsg
, -1));

6398 
	`T˛_EvÆObjEx
(
logˇŒback
.
pI¡îp
, 
pNew
, 
TCL_EVAL_GLOBAL
|
TCL_EVAL_DIRECT
);

6399 
	`T˛_De¸RefCou¡
(
pNew
);

6400 
	}
}

6401 
SQLITE_TCLAPI
 
	$ã°_sqlôe3_log
(

6402 
Clõ¡D©a
 
˛õ¡D©a
,

6403 
T˛_I¡îp
 *
öãΩ
,

6404 
objc
,

6405 
T˛_Obj
 *
CONST
 
objv
[]

6407 if–
objc
>2 ){

6408 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "SCRIPT");

6409  
TCL_ERROR
;

6411 if–
logˇŒback
.
pObj
 ){

6412 
	`T˛_De¸RefCou¡
(
logˇŒback
.
pObj
);

6413 
logˇŒback
.
pObj
 = 0;

6414 
logˇŒback
.
pI¡îp
 = 0;

6415 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_LOG
, (*)0, (*)0);

6417 if–
objc
>1 ){

6418 
logˇŒback
.
pObj
 = 
objv
[1];

6419 
	`T˛_In¸RefCou¡
(
logˇŒback
.
pObj
);

6420 
logˇŒback
.
pI¡îp
 = 
öãΩ
;

6421 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_LOG
, 
xLogˇŒback
, (*)0);

6423  
TCL_OK
;

6424 
	}
}

6432 
SQLITE_TCLAPI
 
	$runAsObjProc
(

6433 * 
˛õ¡D©a
,

6434 
T˛_I¡îp
 *
öãΩ
,

6435 
objc
,

6436 
T˛_Obj
 *
CONST
 
objv
[]

6438 
T˛_CmdInfo
 
cmdInfo
;

6439 if–
objc
<2 ){

6440 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "COMMAND ...");

6441  
TCL_ERROR
;

6443 if–!
	`T˛_GëComm™dInfo
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
cmdInfo
) ){

6444 
	`T˛_AµídResu…
(
öãΩ
, "commandÇot found: ",

6445 
	`T˛_GëSåög
(
objv
[1]), (*)0);

6446  
TCL_ERROR
;

6448 if–
cmdInfo
.
objProc
==0 ){

6449 
	`T˛_AµídResu…
(
öãΩ
, "command hasÇo objProc: ",

6450 
	`T˛_GëSåög
(
objv
[1]), (*)0);

6451  
TCL_ERROR
;

6453  
cmdInfo
.
	`objProc
(cmdInfo.
objClõ¡D©a
, 
öãΩ
, 
objc
-1, 
objv
+1);

6454 
	}
}

6456 #i‚de‡
SQLITE_OMIT_EXPLAIN


6467 
	$¥ötEx∂aöQuîyPœn
(
sqlôe3_°mt
 *
pStmt
){

6468 c⁄° *
zSql
;

6469 *
zEx∂aö
;

6470 
sqlôe3_°mt
 *
pEx∂aö
;

6471 
rc
;

6473 
zSql
 = 
	`sqlôe3_sql
(
pStmt
);

6474 if–
zSql
==0 )  
SQLITE_ERROR
;

6476 
zEx∂aö
 = 
	`sqlôe3_m¥ötf
("EXPLAIN QUERY PLAN %s", 
zSql
);

6477 if–
zEx∂aö
==0 )  
SQLITE_NOMEM
;

6479 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
	`sqlôe3_db_h™dÀ
(
pStmt
), 
zEx∂aö
, -1, &
pEx∂aö
, 0);

6480 
	`sqlôe3_‰ì
(
zEx∂aö
);

6481 if–
rc
!=
SQLITE_OK
 ) Ñc;

6483  
SQLITE_ROW
==
	`sqlôe3_°ï
(
pEx∂aö
) ){

6484 
iSñe˘id
 = 
	`sqlôe3_cﬁumn_öt
(
pEx∂aö
, 0);

6485 
iOrdî
 = 
	`sqlôe3_cﬁumn_öt
(
pEx∂aö
, 1);

6486 
iFrom
 = 
	`sqlôe3_cﬁumn_öt
(
pEx∂aö
, 2);

6487 c⁄° *
zDëaû
 = (c⁄° *)
	`sqlôe3_cﬁumn_ãxt
(
pEx∂aö
, 3);

6489 
	`¥ötf
("%d %d %d %s\n", 
iSñe˘id
, 
iOrdî
, 
iFrom
, 
zDëaû
);

6492  
	`sqlôe3_föÆize
(
pEx∂aö
);

6493 
	}
}

6495 
SQLITE_TCLAPI
 
	$ã°_¥öt_eqp
(

6496 * 
˛õ¡D©a
,

6497 
T˛_I¡îp
 *
öãΩ
,

6498 
objc
,

6499 
T˛_Obj
 *
CONST
 
objv
[]

6501 
rc
;

6502 
sqlôe3_°mt
 *
pStmt
;

6504 if–
objc
!=2 ){

6505 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "STMT");

6506  
TCL_ERROR
;

6508 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

6509 
rc
 = 
	`¥ötEx∂aöQuîyPœn
(
pStmt
);

6514 
	`fÊush
(
°dout
);

6515 
	`T˛_SëResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 0);

6516  
TCL_OK
;

6517 
	}
}

6523 
SQLITE_TCLAPI
 
	$ã°_ã°_c⁄åﬁ
(

6524 * 
˛õ¡D©a
,

6525 
T˛_I¡îp
 *
öãΩ
,

6526 
objc
,

6527 
T˛_Obj
 *
CONST
 
objv
[]

6529 
	sVîb
 {

6530 c⁄° *
zName
;

6531 
i
;

6532 } 
aVîb
[] = {

6533 { "SQLITE_TESTCTRL_LOCALTIME_FAULT", 
SQLITE_TESTCTRL_LOCALTIME_FAULT
 },

6534 { "SQLITE_TESTCTRL_SORTER_MMAP", 
SQLITE_TESTCTRL_SORTER_MMAP
 },

6535 { "SQLITE_TESTCTRL_IMPOSTER", 
SQLITE_TESTCTRL_IMPOSTER
 },

6537 
iVîb
;

6538 
iFœg
;

6539 
rc
;

6541 if–
objc
<2 ){

6542 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "VERB ARGS...");

6543  
TCL_ERROR
;

6546 
rc
 = 
	`T˛_GëIndexFromObjSåu˘
(

6547 
öãΩ
, 
objv
[1], 
aVîb
, ◊Vîb[0]), "VERB", 0, &
iVîb


6549 if–
rc
!=
TCL_OK
 ) Ñc;

6551 
iFœg
 = 
aVîb
[
iVîb
].
i
;

6552  
iFœg
 ){

6553 
SQLITE_TESTCTRL_LOCALTIME_FAULT
: {

6554 
vÆ
;

6555 if–
objc
!=3 ){

6556 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "ONOFF");

6557  
TCL_ERROR
;

6559 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[2], &
vÆ
ËË 
TCL_ERROR
;

6560 
	`sqlôe3_ã°_c⁄åﬁ
(
SQLITE_TESTCTRL_LOCALTIME_FAULT
, 
vÆ
);

6564 
SQLITE_TESTCTRL_SORTER_MMAP
: {

6565 
vÆ
;

6566 
sqlôe3
 *
db
;

6567 if–
objc
!=4 ){

6568 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "DB LIMIT");

6569  
TCL_ERROR
;

6571 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[2]), &
db
ËË 
TCL_ERROR
;

6572 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
vÆ
ËË 
TCL_ERROR
;

6573 
	`sqlôe3_ã°_c⁄åﬁ
(
SQLITE_TESTCTRL_SORTER_MMAP
, 
db
, 
vÆ
);

6577 
SQLITE_TESTCTRL_IMPOSTER
: {

6578 
⁄Off
, 
äum
;

6579 c⁄° *
zDbName
;

6580 
sqlôe3
 *
db
;

6581 if–
objc
!=6 ){

6582 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "DB dbName onOffÅnum");

6583  
TCL_ERROR
;

6585 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[2]), &
db
ËË 
TCL_ERROR
;

6586 
zDbName
 = 
	`T˛_GëSåög
(
objv
[3]);

6587 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[4], &
⁄Off
ËË 
TCL_ERROR
;

6588 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[5], &
äum
ËË 
TCL_ERROR
;

6589 
	`sqlôe3_ã°_c⁄åﬁ
(
SQLITE_TESTCTRL_IMPOSTER
, 
db
, 
zDbName
, 
⁄Off
, 
äum
);

6594 
	`T˛_Re£tResu…
(
öãΩ
);

6595  
TCL_OK
;

6596 
	}
}

6598 #i‡
SQLITE_OS_UNIX


6599 
	~<sys/time.h
>

6600 
	~<sys/ªsour˚.h
>

6602 
SQLITE_TCLAPI
 
	$ã°_gërußge
(

6603 * 
˛õ¡D©a
,

6604 
T˛_I¡îp
 *
öãΩ
,

6605 
objc
,

6606 
T˛_Obj
 *
CONST
 
objv
[]

6608 
buf
[1024];

6609 
rußge
 
r
;

6610 
	`mem£t
(&
r
, 0, (r));

6611 
	`gërußge
(
RUSAGE_SELF
, &
r
);

6613 
	`sqlôe3_¢¥ötf
((
buf
), buf,

6615 ()
r
.
ru_utime
.
tv_£c
, (Ï.ru_utime.
tv_u£c
,

6616 ()
r
.
ru_°ime
.
tv_£c
, (Ï.ru_°ime.
tv_u£c
,

6617 ()
r
.
ru_möÊt
, (Ï.
ru_majÊt


6619 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
(
buf
, -1));

6620  
TCL_OK
;

6621 
	}
}

6624 #i‡
SQLITE_OS_WIN


6629 
	swö32FûeLockî
 {

6630 *
	mevName
;

6631 
HANDLE
 
	mh
;

6632 
	mdñay1
;

6633 
	mdñay2
;

6634 
	mok
;

6635 
	mîr
;

6640 #i‡
SQLITE_OS_WIN


6641 
	~<¥o˚ss.h
>

6645 
SQLITE_CDECL
 
	$wö32_fûe_lockî
(*
pAµD©a
){

6646 
wö32FûeLockî
 *
p
 = (wö32FûeLockî*)
pAµD©a
;

6647 if–
p
->
evName
 ){

6648 
HANDLE
 
ev
 = 
	`O≥nEvít
(
EVENT_MODIFY_STATE
, 
FALSE
, 
p
->
evName
);

6649 i‡–
ev
 ){

6650 
	`SëEvít
(
ev
);

6651 
	`Clo£H™dÀ
(
ev
);

6654 if–
p
->
dñay1
 ) 
	`SÀï
(p->delay1);

6655 if–
	`LockFûe
(
p
->
h
, 0, 0, 100000000, 0) ){

6656 
	`SÀï
(
p
->
dñay2
);

6657 
	`U∆ockFûe
(
p
->
h
, 0, 0, 100000000, 0);

6658 
p
->
ok
 = 1;

6660 
p
->
îr
 = 1;

6662 
	`Clo£H™dÀ
(
p
->
h
);

6663 
p
->
h
 = 0;

6664 
p
->
dñay1
 = 0;

6665 
p
->
dñay2
 = 0;

6666 
	}
}

6669 #i‡
SQLITE_OS_WIN


6676 
SQLITE_TCLAPI
 
	$wö32_fûe_lock
(

6677 * 
˛õ¡D©a
,

6678 
T˛_I¡îp
 *
öãΩ
,

6679 
objc
,

6680 
T˛_Obj
 *
CONST
 
objv
[]

6682 
wö32FûeLockî
 
x
 = { "win32_file_lock", 0, 0, 0, 0, 0 };

6683 c⁄° *
zFûíame
;

6684 
zBuf
[200];

6685 
ªåy
 = 0;

6686 
HANDLE
 
ev
;

6687 
DWORD
 
wResu…
;

6689 if–
objc
!=4 && objc!=1 ){

6690 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "FILENAME DELAY1 DELAY2");

6691  
TCL_ERROR
;

6693 if–
objc
==1 ){

6694 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%d %d %d %d %d",

6695 
x
.
ok
, x.
îr
, x.
dñay1
, x.
dñay2
, x.
h
);

6696 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, (*)0);

6697  
TCL_OK
;

6699  
x
.
h
 && 
ªåy
<30 ){

6700 
ªåy
++;

6701 
	`SÀï
(100);

6703 if–
x
.
h
 ){

6704 
	`T˛_AµídResu…
(
öãΩ
, "busy", (*)0);

6705  
TCL_ERROR
;

6707 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
x
.
dñay1
ËË 
TCL_ERROR
;

6708 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
x
.
dñay2
ËË 
TCL_ERROR
;

6709 
zFûíame
 = 
	`T˛_GëSåög
(
objv
[1]);

6710 
x
.
h
 = 
	`Cª©eFûe
(
zFûíame
, 
GENERIC_READ
|
GENERIC_WRITE
,

6711 
FILE_SHARE_READ
|
FILE_SHARE_WRITE
, 0, 
OPEN_ALWAYS
,

6712 
FILE_ATTRIBUTE_NORMAL
, 0);

6713 if–!
x
.
h
 ){

6714 
	`T˛_AµídResu…
(
öãΩ
, "ˇ¬Ÿ o≥¿fûe: ", 
zFûíame
, (*)0);

6715  
TCL_ERROR
;

6717 
ev
 = 
	`Cª©eEvít
(
NULL
, 
TRUE
, 
FALSE
, 
x
.
evName
);

6718 i‡–!
ev
 ){

6719 
	`T˛_AµídResu…
(
öãΩ
, "ˇ¬Ÿ cª©êevít: ", 
x
.
evName
, (*)0);

6720  
TCL_ERROR
;

6722 
	`_begöthªad
(
wö32_fûe_lockî
, 0, (*)&
x
);

6723 
	`SÀï
(0);

6724 i‡–(
wResu…
 = 
	`WaôF‹SögÀObje˘
(
ev
, 10000))!=
WAIT_OBJECT_0
 ){

6725 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "0x%x", 
wResu…
);

6726 
	`T˛_AµídResu…
(
öãΩ
, "waô faûed: ", 
zBuf
, (*)0);

6727 
	`Clo£H™dÀ
(
ev
);

6728  
TCL_ERROR
;

6730 
	`Clo£H™dÀ
(
ev
);

6731  
TCL_OK
;

6732 
	}
}

6740 
SQLITE_TCLAPI
 
	$wö32_exi°s_∑th
(

6741 *
˛õ¡D©a
,

6742 
T˛_I¡îp
 *
öãΩ
,

6743 
objc
,

6744 
T˛_Obj
 *
CONST
 
objv
[]

6746 if–
objc
!=2 ){

6747 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "PATH");

6748  
TCL_ERROR
;

6750 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewBoﬁónObj
(

6751 
	`GëFûeAâribuãsW
–
	`T˛_GëUnicode
(
objv
[1]))!=
INVALID_FILE_ATTRIBUTES
 ));

6752  
TCL_OK
;

6753 
	}
}

6762 
SQLITE_TCLAPI
 
	$wö32_föd_fûe
(

6763 *
˛õ¡D©a
,

6764 
T˛_I¡îp
 *
öãΩ
,

6765 
objc
,

6766 
T˛_Obj
 *
CONST
 
objv
[]

6768 
HANDLE
 
hFödFûe
 = 
INVALID_HANDLE_VALUE
;

6769 
WIN32_FIND_DATAW
 
födD©a
;

6770 
T˛_Obj
 *
li°Obj
;

6771 
DWORD
 
œ°Eºno
;

6772 if–
objc
!=2 ){

6773 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "PATTERN");

6774  
TCL_ERROR
;

6776 
hFödFûe
 = 
	`FödFú°FûeW
(
	`T˛_GëUnicode
(
objv
[1]), &
födD©a
);

6777 if–
hFödFûe
==
INVALID_HANDLE_VALUE
 ){

6778 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
(
	`GëLa°Eº‹
()));

6779  
TCL_ERROR
;

6781 
li°Obj
 = 
	`T˛_NewObj
();

6782 
	`T˛_In¸RefCou¡
(
li°Obj
);

6784 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
li°Obj
, 
	`T˛_NewUnicodeObj
(

6785 
födD©a
.
cFûeName
, -1));

6786 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
li°Obj
, 
	`T˛_NewWideI¡Obj
(

6787 
födD©a
.
dwFûeAâribuãs
));

6788 }  
	`FödNextFûeW
(
hFödFûe
, &
födD©a
) );

6789 
œ°Eºno
 = 
	`GëLa°Eº‹
();

6790 if–
œ°Eºno
!=
NO_ERROR
 &&Üa°Eºno!=
ERROR_NO_MORE_FILES
 ){

6791 
	`FödClo£
(
hFödFûe
);

6792 
	`T˛_De¸RefCou¡
(
li°Obj
);

6793 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
(
	`GëLa°Eº‹
()));

6794  
TCL_ERROR
;

6796 
	`FödClo£
(
hFödFûe
);

6797 
	`T˛_SëObjResu…
(
öãΩ
, 
li°Obj
);

6798  
TCL_OK
;

6799 
	}
}

6807 
SQLITE_TCLAPI
 
	$wö32_dñëe_fûe
(

6808 *
˛õ¡D©a
,

6809 
T˛_I¡îp
 *
öãΩ
,

6810 
objc
,

6811 
T˛_Obj
 *
CONST
 
objv
[]

6813 if–
objc
!=2 ){

6814 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "FILENAME");

6815  
TCL_ERROR
;

6817 if–!
	`DñëeFûeW
(
	`T˛_GëUnicode
(
objv
[1])) ){

6818 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
(
	`GëLa°Eº‹
()));

6819  
TCL_ERROR
;

6821 
	`T˛_Re£tResu…
(
öãΩ
);

6822  
TCL_OK
;

6823 
	}
}

6831 
SQLITE_TCLAPI
 
	$wö32_mkdú
(

6832 *
˛õ¡D©a
,

6833 
T˛_I¡îp
 *
öãΩ
,

6834 
objc
,

6835 
T˛_Obj
 *
CONST
 
objv
[]

6837 if–
objc
!=2 ){

6838 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DIRECTORY");

6839  
TCL_ERROR
;

6841 if–!
	`Cª©eDúe˘‹yW
(
	`T˛_GëUnicode
(
objv
[1]), 
NULL
) ){

6842 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
(
	`GëLa°Eº‹
()));

6843  
TCL_ERROR
;

6845 
	`T˛_Re£tResu…
(
öãΩ
);

6846  
TCL_OK
;

6847 
	}
}

6855 
SQLITE_TCLAPI
 
	$wö32_rmdú
(

6856 *
˛õ¡D©a
,

6857 
T˛_I¡îp
 *
öãΩ
,

6858 
objc
,

6859 
T˛_Obj
 *
CONST
 
objv
[]

6861 if–
objc
!=2 ){

6862 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DIRECTORY");

6863  
TCL_ERROR
;

6865 if–!
	`RemoveDúe˘‹yW
(
	`T˛_GëUnicode
(
objv
[1])) ){

6866 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
(
	`GëLa°Eº‹
()));

6867  
TCL_ERROR
;

6869 
	`T˛_Re£tResu…
(
öãΩ
);

6870  
TCL_OK
;

6871 
	}
}

6882 
SQLITE_TCLAPI
 
	$›timiz©i⁄_c⁄åﬁ
(

6883 * 
˛õ¡D©a
,

6884 
T˛_I¡îp
 *
öãΩ
,

6885 
objc
,

6886 
T˛_Obj
 *
CONST
 
objv
[]

6888 
i
;

6889 
sqlôe3
 *
db
;

6890 c⁄° *
zO±
;

6891 
⁄off
;

6892 
mask
 = 0;

6894 c⁄° *
zO±Name
;

6895 
mask
;

6896 } 
aO±
[] = {

6897 { "Æl", 
SQLITE_AŒO±s
 },

6899 { "quîy-Ê©ã√r", 
SQLITE_QuîyFœâíî
 },

6900 { "cﬁumn-ˇche", 
SQLITE_CﬁumnCache
 },

6901 { "groupby-‹dî", 
SQLITE_GroupByOrdî
 },

6902 { "Á˘‹-c⁄°™ts", 
SQLITE_Fa˘‹OutC⁄°
 },

6903 { "di°ö˘-›t", 
SQLITE_Di°ö˘O±
 },

6904 { "covî-idx-sˇn", 
SQLITE_CovîIdxSˇn
 },

6905 { "‹dî-by-idx-joö", 
SQLITE_OrdîByIdxJoö
 },

6906 { "å™sôive", 
SQLITE_Tønsôive
 },

6907 { "subquîy-c‹outöe", 
SQLITE_SubqC‹outöe
 },

6908 { "omô-no›-joö", 
SQLITE_OmôNo›Joö
 },

6909 { "°©3", 
SQLITE_Sèt34
 },

6910 { "°©4", 
SQLITE_Sèt34
 },

6913 if–
objc
!=4 ){

6914 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB OPT BOOLEAN");

6915  
TCL_ERROR
;

6917 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

6918 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[3], &
⁄off
ËË 
TCL_ERROR
;

6919 
zO±
 = 
	`T˛_GëSåög
(
objv
[2]);

6920 
i
=0; i<(
aO±
)/(aOpt[0]); i++){

6921 if–
	`°rcmp
(
zO±
, 
aO±
[
i
].
zO±Name
)==0 ){

6922 
mask
 = 
aO±
[
i
].mask;

6926 if–
⁄off
 ) 
mask
 = ~mask;

6927 if–
i
>=(
aO±
)/(aOpt[0]) ){

6928 
	`T˛_AµídResu…
(
öãΩ
, "unknown optimization - should be one of:",

6930 
i
=0; i<(
aO±
)/(aOpt[0]); i++){

6931 
	`T˛_AµídResu…
(
öãΩ
, " ", 
aO±
[
i
].
zO±Name
, (*)0);

6933  
TCL_ERROR
;

6935 
	`sqlôe3_ã°_c⁄åﬁ
(
SQLITE_TESTCTRL_OPTIMIZATIONS
, 
db
, 
mask
);

6936  
TCL_OK
;

6937 
	}
}

6944 
SQLITE_TCLAPI
 
	$t˛LﬂdSèticExãnsi⁄Cmd
(

6945 * 
˛õ¡D©a
,

6946 
T˛_I¡îp
 *
öãΩ
,

6947 
objc
,

6948 
T˛_Obj
 *
CONST
 
objv
[]

6950 
	`sqlôe3_am©ch_öô
(
sqlôe3
*,**,c⁄° 
sqlôe3_≠i_routöes
*);

6951 
	`sqlôe3_ˇºay_öô
(
sqlôe3
*,**,c⁄° 
sqlôe3_≠i_routöes
*);

6952 
	`sqlôe3_˛osuª_öô
(
sqlôe3
*,**,c⁄° 
sqlôe3_≠i_routöes
*);

6953 
	`sqlôe3_csv_öô
(
sqlôe3
*,**,c⁄° 
sqlôe3_≠i_routöes
*);

6954 
	`sqlôe3_evÆ_öô
(
sqlôe3
*,**,c⁄° 
sqlôe3_≠i_routöes
*);

6955 
	`sqlôe3_fûeio_öô
(
sqlôe3
*,**,c⁄° 
sqlôe3_≠i_routöes
*);

6956 
	`sqlôe3_fuzzî_öô
(
sqlôe3
*,**,c⁄° 
sqlôe3_≠i_routöes
*);

6957 
	`sqlôe3_õì_öô
(
sqlôe3
*,**,c⁄° 
sqlôe3_≠i_routöes
*);

6958 
	`sqlôe3_√xtch¨_öô
(
sqlôe3
*,**,c⁄° 
sqlôe3_≠i_routöes
*);

6959 
	`sqlôe3_≥r˚¡ûe_öô
(
sqlôe3
*,**,c⁄° 
sqlôe3_≠i_routöes
*);

6960 
	`sqlôe3_ªgexp_öô
(
sqlôe3
*,**,c⁄° 
sqlôe3_≠i_routöes
*);

6961 
	`sqlôe3_ªmembî_öô
(
sqlôe3
*,**,c⁄° 
sqlôe3_≠i_routöes
*);

6962 
	`sqlôe3_£rõs_öô
(
sqlôe3
*,**,c⁄° 
sqlôe3_≠i_routöes
*);

6963 
	`sqlôe3_•ñlfix_öô
(
sqlôe3
*,**,c⁄° 
sqlôe3_≠i_routöes
*);

6964 
	`sqlôe3_tŸy≥_öô
(
sqlôe3
*,**,c⁄° 
sqlôe3_≠i_routöes
*);

6965 
	`sqlôe3_whﬁíumbî_öô
(
sqlôe3
*,**,c⁄° 
sqlôe3_≠i_routöes
*);

6967 c⁄° *
zExtName
;

6968 (*
pInô
)(
sqlôe3
*,**,c⁄° 
sqlôe3_≠i_routöes
*);

6969 } 
aExãnsi⁄
[] = {

6970 { "am©ch", 
sqlôe3_am©ch_öô
 },

6971 { "ˇºay", 
sqlôe3_ˇºay_öô
 },

6972 { "˛osuª", 
sqlôe3_˛osuª_öô
 },

6973 { "csv", 
sqlôe3_csv_öô
 },

6974 { "evÆ", 
sqlôe3_evÆ_öô
 },

6975 { "fûeio", 
sqlôe3_fûeio_öô
 },

6976 { "fuzzî", 
sqlôe3_fuzzî_öô
 },

6977 { "õì754", 
sqlôe3_õì_öô
 },

6978 { "√xtch¨", 
sqlôe3_√xtch¨_öô
 },

6979 { "≥r˚¡ûe", 
sqlôe3_≥r˚¡ûe_öô
 },

6980 { "ªgexp", 
sqlôe3_ªgexp_öô
 },

6981 { "ªmembî", 
sqlôe3_ªmembî_öô
 },

6982 { "£rõs", 
sqlôe3_£rõs_öô
 },

6983 { "•ñlfix", 
sqlôe3_•ñlfix_öô
 },

6984 { "tŸy≥", 
sqlôe3_tŸy≥_öô
 },

6985 { "whﬁíumbî", 
sqlôe3_whﬁíumbî_öô
 },

6987 
sqlôe3
 *
db
;

6988 c⁄° *
zName
;

6989 
i
, 
j
, 
rc
;

6990 *
zEºMsg
 = 0;

6991 if–
objc
<3 ){

6992 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB NAME ...");

6993  
TCL_ERROR
;

6995 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

6996 
j
=2; j<
objc
; j++){

6997 
zName
 = 
	`T˛_GëSåög
(
objv
[
j
]);

6998 
i
=0; i<
	`AºaySize
(
aExãnsi⁄
); i++){

6999 if–
	`°rcmp
(
zName
, 
aExãnsi⁄
[
i
].
zExtName
)==0 ) ;

7001 if–
i
>=
	`AºaySize
(
aExãnsi⁄
) ){

7002 
	`T˛_AµídResu…
(
öãΩ
, "nÿsuchÉxãnsi⁄: ", 
zName
, (*)0);

7003  
TCL_ERROR
;

7005 if–
aExãnsi⁄
[
i
].
pInô
 ){

7006 
rc
 = 
aExãnsi⁄
[
i
].
	`pInô
(
db
, &
zEºMsg
, 0);

7008 
rc
 = 
SQLITE_OK
;

7010 if–
rc
!=
SQLITE_OK
 || 
zEºMsg
 ){

7011 
	`T˛_AµídResu…
(
öãΩ
, "öôüliz©i⁄ o‡", 
zName
, " faûed: ", 
zEºMsg
,

7013 
	`sqlôe3_‰ì
(
zEºMsg
);

7014  
TCL_ERROR
;

7017  
TCL_OK
;

7018 
	}
}

7024 
SQLITE_TCLAPI
 
	$s‹ãr_ã°_Ákehóp
(

7025 * 
˛õ¡D©a
,

7026 
T˛_I¡îp
 *
öãΩ
,

7027 
objc
,

7028 
T˛_Obj
 *
CONST
 
objv
[]

7030 
bArg
;

7031 if–
objc
!=2 ){

7032 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "BOOL");

7033  
TCL_ERROR
;

7036 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[1], &
bArg
) ){

7037  
TCL_ERROR
;

7040 if–
bArg
 ){

7041 if–
sqlôe3GlobÆC⁄fig
.
pHóp
==0 ){

7042 
sqlôe3GlobÆC⁄fig
.
pHóp
 = 
	`SQLITE_INT_TO_PTR
(-1);

7045 if–
sqlôe3GlobÆC⁄fig
.
pHóp
==
	`SQLITE_INT_TO_PTR
(-1) ){

7046 
sqlôe3GlobÆC⁄fig
.
pHóp
 = 0;

7050 
	`T˛_Re£tResu…
(
öãΩ
);

7051  
TCL_OK
;

7052 
	}
}

7064 
SQLITE_TCLAPI
 
	$s‹ãr_ã°_s‹t4_hñ≥r
(

7065 * 
˛õ¡D©a
,

7066 
T˛_I¡îp
 *
öãΩ
,

7067 
objc
,

7068 
T˛_Obj
 *
CONST
 
objv
[]

7070 c⁄° *
zSql1
;

7071 c⁄° *
zSql2
;

7072 
nSãp
;

7073 
iSãp
;

7074 
iCksum1
 = 0;

7075 
iCksum2
 = 0;

7076 
rc
;

7077 
iB
;

7078 
sqlôe3
 *
db
;

7079 
sqlôe3_°mt
 *
pStmt
;

7081 if–
objc
!=5 ){

7082 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB SQL1 NSTEP SQL2");

7083  
TCL_ERROR
;

7086 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

7087 
zSql1
 = 
	`T˛_GëSåög
(
objv
[2]);

7088 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
nSãp
ËË 
TCL_ERROR
;

7089 
zSql2
 = 
	`T˛_GëSåög
(
objv
[4]);

7091 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
db
, 
zSql1
, -1, &
pStmt
, 0);

7092 if–
rc
!=
SQLITE_OK
 ) 
sql_îr‹
;

7094 
iB
 = 
	`sqlôe3_cﬁumn_cou¡
(
pStmt
)-1;

7095 
iSãp
=0; iSãp<
nSãp
 && 
SQLITE_ROW
==
	`sqlôe3_°ï
(
pStmt
); iStep++){

7096 
a
 = 
	`sqlôe3_cﬁumn_öt
(
pStmt
, 0);

7097 if–
a
!=
	`sqlôe3_cﬁumn_öt
(
pStmt
, 
iB
) ){

7098 
	`T˛_AµídResu…
(
öãΩ
, "dataÉrror: (a!=b)", 0);

7099  
TCL_ERROR
;

7102 
iCksum1
 +(iCksum1 << 3Ë+ ()
a
;

7104 
rc
 = 
	`sqlôe3_föÆize
(
pStmt
);

7105 if–
rc
!=
SQLITE_OK
 ) 
sql_îr‹
;

7107 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
db
, 
zSql2
, -1, &
pStmt
, 0);

7108 if–
rc
!=
SQLITE_OK
 ) 
sql_îr‹
;

7109 
iSãp
=0; 
SQLITE_ROW
==
	`sqlôe3_°ï
(
pStmt
); iStep++){

7110 
a
 = 
	`sqlôe3_cﬁumn_öt
(
pStmt
, 0);

7111 
iCksum2
 +(iCksum2 << 3Ë+ ()
a
;

7113 
rc
 = 
	`sqlôe3_föÆize
(
pStmt
);

7114 if–
rc
!=
SQLITE_OK
 ) 
sql_îr‹
;

7116 if–
iCksum1
!=
iCksum2
 ){

7117 
	`T˛_AµídResu…
(
öãΩ
, "checksum mismatch", 0);

7118  
TCL_ERROR
;

7121  
TCL_OK
;

7122 
sql_îr‹
:

7123 
	`T˛_AµídResu…
(
öãΩ
, "sq»îr‹: ", 
	`sqlôe3_îrmsg
(
db
), 0);

7124  
TCL_ERROR
;

7125 
	}
}

7128 #ifde‡
SQLITE_USER_AUTHENTICATION


7129 
	~"sqlôe3u£øuth.h
"

7133 
SQLITE_TCLAPI
 
	$ã°_u£r_authítiˇã
(

7134 
Clõ¡D©a
 
˛õ¡D©a
,

7135 
T˛_I¡îp
 *
öãΩ
,

7136 
objc
,

7137 
T˛_Obj
 *
CONST
 
objv
[]

7139 *
zU£r
 = 0;

7140 *
zPasswd
 = 0;

7141 
nPasswd
 = 0;

7142 
sqlôe3
 *
db
;

7143 
rc
;

7145 if–
objc
!=4 ){

7146 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB USERNAME PASSWORD");

7147  
TCL_ERROR
;

7149 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
) ){

7150  
TCL_ERROR
;

7152 
zU£r
 = 
	`T˛_GëSåög
(
objv
[2]);

7153 
zPasswd
 = 
	`T˛_GëSåögFromObj
(
objv
[3], &
nPasswd
);

7154 
rc
 = 
	`sqlôe3_u£r_authítiˇã
(
db
, 
zU£r
, 
zPasswd
, 
nPasswd
);

7155 
	`T˛_SëResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 
TCL_STATIC
);

7156  
TCL_OK
;

7157 
	}
}

7160 #ifde‡
SQLITE_USER_AUTHENTICATION


7164 
SQLITE_TCLAPI
 
	$ã°_u£r_add
(

7165 
Clõ¡D©a
 
˛õ¡D©a
,

7166 
T˛_I¡îp
 *
öãΩ
,

7167 
objc
,

7168 
T˛_Obj
 *
CONST
 
objv
[]

7170 *
zU£r
 = 0;

7171 *
zPasswd
 = 0;

7172 
nPasswd
 = 0;

7173 
isAdmö
 = 0;

7174 
sqlôe3
 *
db
;

7175 
rc
;

7177 if–
objc
!=5 ){

7178 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB USERNAME PASSWORD ISADMIN");

7179  
TCL_ERROR
;

7181 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
) ){

7182  
TCL_ERROR
;

7184 
zU£r
 = 
	`T˛_GëSåög
(
objv
[2]);

7185 
zPasswd
 = 
	`T˛_GëSåögFromObj
(
objv
[3], &
nPasswd
);

7186 
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[4], &
isAdmö
);

7187 
rc
 = 
	`sqlôe3_u£r_add
(
db
, 
zU£r
, 
zPasswd
, 
nPasswd
, 
isAdmö
);

7188 
	`T˛_SëResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 
TCL_STATIC
);

7189  
TCL_OK
;

7190 
	}
}

7193 #ifde‡
SQLITE_USER_AUTHENTICATION


7197 
SQLITE_TCLAPI
 
	$ã°_u£r_ch™ge
(

7198 
Clõ¡D©a
 
˛õ¡D©a
,

7199 
T˛_I¡îp
 *
öãΩ
,

7200 
objc
,

7201 
T˛_Obj
 *
CONST
 
objv
[]

7203 *
zU£r
 = 0;

7204 *
zPasswd
 = 0;

7205 
nPasswd
 = 0;

7206 
isAdmö
 = 0;

7207 
sqlôe3
 *
db
;

7208 
rc
;

7210 if–
objc
!=5 ){

7211 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB USERNAME PASSWORD ISADMIN");

7212  
TCL_ERROR
;

7214 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
) ){

7215  
TCL_ERROR
;

7217 
zU£r
 = 
	`T˛_GëSåög
(
objv
[2]);

7218 
zPasswd
 = 
	`T˛_GëSåögFromObj
(
objv
[3], &
nPasswd
);

7219 
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[4], &
isAdmö
);

7220 
rc
 = 
	`sqlôe3_u£r_ch™ge
(
db
, 
zU£r
, 
zPasswd
, 
nPasswd
, 
isAdmö
);

7221 
	`T˛_SëResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 
TCL_STATIC
);

7222  
TCL_OK
;

7223 
	}
}

7226 #ifde‡
SQLITE_USER_AUTHENTICATION


7230 
SQLITE_TCLAPI
 
	$ã°_u£r_dñëe
(

7231 
Clõ¡D©a
 
˛õ¡D©a
,

7232 
T˛_I¡îp
 *
öãΩ
,

7233 
objc
,

7234 
T˛_Obj
 *
CONST
 
objv
[]

7236 *
zU£r
 = 0;

7237 
sqlôe3
 *
db
;

7238 
rc
;

7240 if–
objc
!=3 ){

7241 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB USERNAME");

7242  
TCL_ERROR
;

7244 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
) ){

7245  
TCL_ERROR
;

7247 
zU£r
 = 
	`T˛_GëSåög
(
objv
[2]);

7248 
rc
 = 
	`sqlôe3_u£r_dñëe
(
db
, 
zU£r
);

7249 
	`T˛_SëResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 
TCL_STATIC
);

7250  
TCL_OK
;

7251 
	}
}

7267 
SQLITE_TCLAPI
 
	$ã°_bad_behavi‹
(

7268 
Clõ¡D©a
 
˛õ¡D©a
,

7269 
T˛_I¡îp
 *
öãΩ
,

7270 
objc
,

7271 
T˛_Obj
 *
CONST
 
objv
[]

7273 
iTy≥
;

7274 
xyz
;

7275 
i
 = *(*)
˛õ¡D©a
;

7276 
j
;

7277 
w
[10];

7278 *
a
;

7279 if–
objc
!=2 ){

7280 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "TYPE");

7281  
TCL_ERROR
;

7283 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[1], &
iTy≥
ËË 
TCL_ERROR
;

7284  
iTy≥
 ){

7286 
xyz
 = 0x7fffff00 - 
i
;

7287 
xyz
 += 0x100;

7288 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
xyz
));

7292 
w
[1] = 5;

7293 if–
w
[
i
]>0 ) w[1]++;

7294 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
w
[1]));

7298 
a
 = 
	`mÆloc
( ()*10 );

7299 
j
=0; j<10; j++Ë
a
[j] = j;

7300 
	`‰ì
(
a
);

7301 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
a
[
i
]));

7305 
	`T˛_P™ic
("DeliberateÖanic");

7309  
TCL_OK
;

7310 
	}
}

7317 
SQLITE_TCLAPI
 
	$ã°_ªgi°î_db°©_vèb
(

7318 *
˛õ¡D©a
,

7319 
T˛_I¡îp
 *
öãΩ
,

7320 
objc
,

7321 
T˛_Obj
 *
CONST
 
objv
[]

7323 #ifde‡
SQLITE_OMIT_VIRTUALTABLE


7324 
	`T˛_AµídResu…
(
öãΩ
, "dbstatÇotávailable because of "

7326  
TCL_ERROR
;

7328 
	sSqlôeDb
 { 
sqlôe3
 *
db
; };

7329 *
zDb
;

7330 
T˛_CmdInfo
 
cmdInfo
;

7332 if–
objc
!=2 ){

7333 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB");

7334  
TCL_ERROR
;

7337 
zDb
 = 
	`T˛_GëSåög
(
objv
[1]);

7338 if–
	`T˛_GëComm™dInfo
(
öãΩ
, 
zDb
, &
cmdInfo
) ){

7339 
sqlôe3
* 
db
 = ((
SqlôeDb
*)
cmdInfo
.
objClõ¡D©a
)->db;

7340 
	`sqlôe3Db°©Regi°î
(
db
);

7342  
TCL_OK
;

7344 
	}
}

7351 
SQLITE_TCLAPI
 
	$ã°_sqlôe3_db_c⁄fig
(

7352 *
˛õ¡D©a
,

7353 
T˛_I¡îp
 *
öãΩ
,

7354 
objc
,

7355 
T˛_Obj
 *
CONST
 
objv
[]

7358 c⁄° *
zName
;

7359 
eVÆ
;

7360 } 
aSëtög
[] = {

7361 { "FKEY", 
SQLITE_DBCONFIG_ENABLE_FKEY
 },

7362 { "TRIGGER", 
SQLITE_DBCONFIG_ENABLE_TRIGGER
 },

7363 { "FTS3_TOKENIZER", 
SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER
 },

7364 { "LOAD_EXTENSION", 
SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION
 },

7365 { "NO_CKPT_ON_CLOSE",
SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE
 },

7367 
i
;

7368 
v
;

7369 c⁄° *
zSëtög
;

7370 
sqlôe3
 *
db
;

7372 if–
objc
!=4 ){

7373 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB SETTING VALUE");

7374  
TCL_ERROR
;

7376 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

7377 
zSëtög
 = 
	`T˛_GëSåög
(
objv
[2]);

7378 if–
	`sqlôe3_°rglob
("SQLITE_*", 
zSëtög
)==0 ) zSetting += 7;

7379 if–
	`sqlôe3_°rglob
("DBCONFIG_*", 
zSëtög
)==0 ) zSetting += 9;

7380 if–
	`sqlôe3_°rglob
("ENABLE_*", 
zSëtög
)==0 ) zSetting += 7;

7381 
i
=0; i<
	`AºaySize
(
aSëtög
); i++){

7382 if–
	`°rcmp
(
zSëtög
, 
aSëtög
[
i
].
zName
)==0 ) ;

7384 if–
i
>=
	`AºaySize
(
aSëtög
) ){

7385 
	`T˛_SëObjResu…
(
öãΩ
,

7386 
	`T˛_NewSåögObj
("unknown sqlite3_db_config setting", -1));

7387  
TCL_ERROR
;

7389 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
v
ËË 
TCL_ERROR
;

7390 
	`sqlôe3_db_c⁄fig
(
db
, 
aSëtög
[
i
].
eVÆ
, 
v
, &v);

7391 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
v
));

7392  
TCL_OK
;

7393 
	}
}

7398 
SQLITE_TCLAPI
 
	$ã°_dbc⁄fig_maödb«me_i˚cube
(

7399 * 
˛õ¡D©a
,

7400 
T˛_I¡îp
 *
öãΩ
,

7401 
objc
,

7402 
T˛_Obj
 *
CONST
 
objv
[]

7404 
rc
;

7405 
sqlôe3
 *
db
;

7406 
	`gëDbPoöãr
(
T˛_I¡îp
*, c⁄° *, 
sqlôe3
**);

7407 if–
objc
!=2 ){

7408 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB");

7409  
TCL_ERROR
;

7411 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

7412 
rc
 = 
	`sqlôe3_db_c⁄fig
(
db
, 
SQLITE_DBCONFIG_MAINDBNAME
, "icecube");

7413 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

7414  
TCL_OK
;

7416 
	}
}

7421 
	$Sqlôëe°1_Inô
(
T˛_I¡îp
 *
öãΩ
){

7422 
sqlôe3_£¨ch_cou¡
;

7423 
sqlôe3_found_cou¡
;

7424 
sqlôe3_öãºu±_cou¡
;

7425 
sqlôe3_›í_fûe_cou¡
;

7426 
sqlôe3_s‹t_cou¡
;

7427 
sqlôe3_cuºít_time
;

7428 #i‡
SQLITE_OS_UNIX
 && 
	`deföed
(
__APPLE__
Ë&& 
SQLITE_ENABLE_LOCKING_STYLE


7429 
sqlôe3_ho°id_num
;

7431 
sqlôe3_max_blobsize
;

7432 
SQLITE_TCLAPI
 
	`sqlôe3BåìSh¨edCacheRï‹t
(*,

7433 
T˛_I¡îp
*,,
T˛_Obj
*
CONST
*);

7434 
iZîo
 = 0;

7436 *
zName
;

7437 
T˛_CmdProc
 *
xProc
;

7438 } 
aCmd
[] = {

7439 { "db_íãr", (
T˛_CmdProc
*)
db_íãr
 },

7440 { "db_Àave", (
T˛_CmdProc
*)
db_Àave
 },

7441 { "sqlôe3_m¥ötf_öt", (
T˛_CmdProc
*)
sqlôe3_m¥ötf_öt
 },

7442 { "sqlôe3_m¥ötf_öt64", (
T˛_CmdProc
*)
sqlôe3_m¥ötf_öt64
 },

7443 { "sqlôe3_m¥ötf_l⁄g", (
T˛_CmdProc
*)
sqlôe3_m¥ötf_l⁄g
 },

7444 { "sqlôe3_m¥ötf_°r", (
T˛_CmdProc
*)
sqlôe3_m¥ötf_°r
 },

7445 { "sqlôe3_¢¥ötf_°r", (
T˛_CmdProc
*)
sqlôe3_¢¥ötf_°r
 },

7446 { "sqlôe3_m¥ötf_°r⁄ly", (
T˛_CmdProc
*)
sqlôe3_m¥ötf_°r⁄ly
},

7447 { "sqlôe3_m¥ötf_doubÀ", (
T˛_CmdProc
*)
sqlôe3_m¥ötf_doubÀ
 },

7448 { "sqlôe3_m¥ötf_sˇÀd", (
T˛_CmdProc
*)
sqlôe3_m¥ötf_sˇÀd
 },

7449 { "sqlôe3_m¥ötf_hexdoubÀ", (
T˛_CmdProc
*)
sqlôe3_m¥ötf_hexdoubÀ
},

7450 { "sqlôe3_m¥ötf_z_ã°", (
T˛_CmdProc
*)
ã°_m¥ötf_z
 },

7451 { "sqlôe3_m¥ötf_n_ã°", (
T˛_CmdProc
*)
ã°_m¥ötf_n
 },

7452 { "sqlôe3_¢¥ötf_öt", (
T˛_CmdProc
*)
ã°_¢¥ötf_öt
 },

7453 { "sqlôe3_œ°_ö£π_rowid", (
T˛_CmdProc
*)
ã°_œ°_rowid
 },

7454 { "sqlôe3_exec_¥ötf", (
T˛_CmdProc
*)
ã°_exec_¥ötf
 },

7455 { "sqlôe3_exec_hex", (
T˛_CmdProc
*)
ã°_exec_hex
 },

7456 { "sqlôe3_exec", (
T˛_CmdProc
*)
ã°_exec
 },

7457 { "sqlôe3_exec_ƒ", (
T˛_CmdProc
*)
ã°_exec_ƒ
 },

7458 #i‚de‡
SQLITE_OMIT_GET_TABLE


7459 { "sqlôe3_gë_èbÀ_¥ötf", (
T˛_CmdProc
*)
ã°_gë_èbÀ_¥ötf
 },

7461 { "sqlôe3_˛o£", (
T˛_CmdProc
*)
sqlôe_ã°_˛o£
 },

7462 { "sqlôe3_˛o£_v2", (
T˛_CmdProc
*)
sqlôe_ã°_˛o£_v2
 },

7463 { "sqlôe3_¸óã_fun˘i⁄", (
T˛_CmdProc
*)
ã°_¸óã_fun˘i⁄
 },

7464 { "sqlôe3_¸óã_aggªg©e", (
T˛_CmdProc
*)
ã°_¸óã_aggªg©e
 },

7465 { "sqlôe_ªgi°î_ã°_fun˘i⁄", (
T˛_CmdProc
*)
ã°_ªgi°î_func
 },

7466 { "sqlôe_ab‹t", (
T˛_CmdProc
*)
sqlôe_ab‹t
 },

7467 { "sqlôe_böd", (
T˛_CmdProc
*)
ã°_böd
 },

7468 { "bªakpoöt", (
T˛_CmdProc
*)
ã°_bªakpoöt
 },

7469 { "sqlôe3_key", (
T˛_CmdProc
*)
ã°_key
 },

7470 { "sqlôe3_ªkey", (
T˛_CmdProc
*)
ã°_ªkey
 },

7471 { "sqlôe_£t_magic", (
T˛_CmdProc
*)
sqlôe_£t_magic
 },

7472 { "sqlôe3_öãºu±", (
T˛_CmdProc
*)
ã°_öãºu±
 },

7473 { "sqlôe_dñëe_fun˘i⁄", (
T˛_CmdProc
*)
dñëe_fun˘i⁄
 },

7474 { "sqlôe_dñëe_cﬁœti⁄", (
T˛_CmdProc
*)
dñëe_cﬁœti⁄
 },

7475 { "sqlôe3_gë_autocommô", (
T˛_CmdProc
*)
gë_autocommô
 },

7476 { "sqlôe3_°ack_u£d", (
T˛_CmdProc
*)
ã°_°ack_u£d
 },

7477 { "sqlôe3_busy_timeout", (
T˛_CmdProc
*)
ã°_busy_timeout
 },

7478 { "¥ötf", (
T˛_CmdProc
*)
ã°_¥ötf
 },

7479 { "sqlôe3IoTø˚", (
T˛_CmdProc
*)
ã°_io_åa˚
 },

7480 { "˛™g_ßnôize_addªss", (
T˛_CmdProc
*)
˛™g_ßnôize_addªss
 },

7483 *
zName
;

7484 
T˛_ObjCmdProc
 *
xProc
;

7485 *
˛õ¡D©a
;

7486 } 
aObjCmd
[] = {

7487 { "sqlôe3_db_c⁄fig", 
ã°_sqlôe3_db_c⁄fig
, 0 },

7488 { "bad_behavi‹", 
ã°_bad_behavi‹
, (*)&
iZîo
 },

7489 { "ªgi°î_db°©_vèb", 
ã°_ªgi°î_db°©_vèb
 },

7490 { "sqlôe3_c⁄√˘i⁄_poöãr", 
gë_sqlôe_poöãr
, 0 },

7491 { "öèºay_addr", 
ã°_öèºay_addr
, 0 },

7492 { "öt64¨øy_addr", 
ã°_öt64¨øy_addr
, 0 },

7493 { "doubÀ¨øy_addr", 
ã°_doubÀ¨øy_addr
, 0 },

7494 { "ãxèºay_addr", 
ã°_ãxèºay_addr
, 0 },

7495 { "sqlôe3_böd_öt", 
ã°_böd_öt
, 0 },

7496 { "sqlôe3_böd_zîoblob", 
ã°_böd_zîoblob
, 0 },

7497 { "sqlôe3_böd_zîoblob64", 
ã°_böd_zîoblob64
, 0 },

7498 { "sqlôe3_böd_öt64", 
ã°_böd_öt64
, 0 },

7499 { "sqlôe3_böd_doubÀ", 
ã°_böd_doubÀ
, 0 },

7500 { "sqlôe3_böd_nuŒ", 
ã°_böd_nuŒ
 ,0 },

7501 { "sqlôe3_böd_ãxt", 
ã°_böd_ãxt
 ,0 },

7502 { "sqlôe3_böd_ãxt16", 
ã°_böd_ãxt16
 ,0 },

7503 { "sqlôe3_böd_blob", 
ã°_böd_blob
 ,0 },

7504 { "sqlôe3_böd_∑ømëî_cou¡", 
ã°_böd_∑ømëî_cou¡
, 0},

7505 { "sqlôe3_böd_∑ømëî_«me", 
ã°_böd_∑ømëî_«me
, 0},

7506 { "sqlôe3_böd_∑ømëî_ödex", 
ã°_böd_∑ømëî_ödex
, 0},

7507 { "sqlôe3_˛ór_bödögs", 
ã°_˛ór_bödögs
, 0},

7508 { "sqlôe3_¶ìp", 
ã°_¶ìp
, 0},

7509 { "sqlôe3_îrcode", 
ã°_îrcode
 ,0 },

7510 { "sqlôe3_exãnded_îrcode", 
ã°_ex_îrcode
 ,0 },

7511 { "sqlôe3_îrmsg", 
ã°_îrmsg
 ,0 },

7512 { "sqlôe3_îrmsg16", 
ã°_îrmsg16
 ,0 },

7513 { "sqlôe3_›í", 
ã°_›í
 ,0 },

7514 { "sqlôe3_›í16", 
ã°_›í16
 ,0 },

7515 { "sqlôe3_›í_v2", 
ã°_›í_v2
 ,0 },

7516 { "sqlôe3_com∂ëe16", 
ã°_com∂ëe16
 ,0 },

7518 { "sqlôe3_¥ï¨e", 
ã°_¥ï¨e
 ,0 },

7519 { "sqlôe3_¥ï¨e16", 
ã°_¥ï¨e16
 ,0 },

7520 { "sqlôe3_¥ï¨e_v2", 
ã°_¥ï¨e_v2
 ,0 },

7521 { "sqlôe3_¥ï¨e_tkt3134", 
ã°_¥ï¨e_tkt3134
, 0},

7522 { "sqlôe3_¥ï¨e16_v2", 
ã°_¥ï¨e16_v2
 ,0 },

7523 { "sqlôe3_föÆize", 
ã°_föÆize
 ,0 },

7524 { "sqlôe3_°mt_°©us", 
ã°_°mt_°©us
 ,0 },

7525 { "sqlôe3_ª£t", 
ã°_ª£t
 ,0 },

7526 { "sqlôe3_expúed", 
ã°_expúed
 ,0 },

7527 { "sqlôe3_å™s„r_bödögs", 
ã°_å™s„r_böd
 ,0 },

7528 { "sqlôe3_ch™ges", 
ã°_ch™ges
 ,0 },

7529 { "sqlôe3_°ï", 
ã°_°ï
 ,0 },

7530 { "sqlôe3_sql", 
ã°_sql
 ,0 },

7531 { "sqlôe3_ex∑nded_sql", 
ã°_ex_sql
 ,0 },

7532 { "sqlôe3_√xt_°mt", 
ã°_√xt_°mt
 ,0 },

7533 { "sqlôe3_°mt_ªad⁄ly", 
ã°_°mt_ªad⁄ly
 ,0 },

7534 { "sqlôe3_°mt_busy", 
ã°_°mt_busy
 ,0 },

7535 { "u£s_°mt_jou∫Æ", 
u£s_°mt_jou∫Æ
 ,0 },

7537 { "sqlôe3_ªÀa£_mem‹y", 
ã°_ªÀa£_mem‹y
, 0},

7538 { "sqlôe3_db_ªÀa£_mem‹y", 
ã°_db_ªÀa£_mem‹y
, 0},

7539 { "sqlôe3_db_ˇcheÊush", 
ã°_db_ˇcheÊush
, 0},

7540 { "sqlôe3_sy°em_î∫o", 
ã°_sy°em_î∫o
, 0},

7541 { "sqlôe3_db_fûíame", 
ã°_db_fûíame
, 0},

7542 { "sqlôe3_db_ªad⁄ly", 
ã°_db_ªad⁄ly
, 0},

7543 { "sqlôe3_so·_hóp_limô", 
ã°_so·_hóp_limô
, 0},

7544 { "sqlôe3_thªad_˛ónup", 
ã°_thªad_˛ónup
, 0},

7545 { "sqlôe3_∑gî_ªfcou¡s", 
ã°_∑gî_ªfcou¡s
, 0},

7547 { "sqlôe3_lﬂd_exãnsi⁄", 
ã°_lﬂd_exãnsi⁄
, 0},

7548 { "sqlôe3_íabÀ_lﬂd_exãnsi⁄", 
ã°_íabÀ_lﬂd
, 0},

7549 { "sqlôe3_exãnded_ªsu…_codes", 
ã°_exãnded_ªsu…_codes
, 0},

7550 { "sqlôe3_limô", 
ã°_limô
, 0},

7551 { "dbc⁄fig_maödb«me_i˚cube", 
ã°_dbc⁄fig_maödb«me_i˚cube
 },

7553 { "ßve_¥ng_°©e", 
ßve_¥ng_°©e
, 0 },

7554 { "ª°‹e_¥ng_°©e", 
ª°‹e_¥ng_°©e
, 0 },

7555 { "ª£t_¥ng_°©e", 
ª£t_¥ng_°©e
, 0 },

7556 { "d©aba£_√vî_c‹ru±", 
d©aba£_√vî_c‹ru±
, 0},

7557 { "d©aba£_may_be_c‹ru±", 
d©aba£_may_be_c‹ru±
, 0},

7558 { "›timiz©i⁄_c⁄åﬁ", 
›timiz©i⁄_c⁄åﬁ
,0},

7559 #i‡
SQLITE_OS_WIN


7560 { "lock_wö32_fûe", 
wö32_fûe_lock
, 0 },

7561 { "exi°s_wö32_∑th", 
wö32_exi°s_∑th
, 0 },

7562 { "föd_wö32_fûe", 
wö32_föd_fûe
, 0 },

7563 { "dñëe_wö32_fûe", 
wö32_dñëe_fûe
, 0 },

7564 { "make_wö32_dú", 
wö32_mkdú
, 0 },

7565 { "ªmove_wö32_dú", 
wö32_rmdú
, 0 },

7567 { "t˛_obj¥oc", 
runAsObjProc
, 0 },

7570 { "sqlôe3_cﬁumn_cou¡", 
ã°_cﬁumn_cou¡
 ,0 },

7571 { "sqlôe3_d©a_cou¡", 
ã°_d©a_cou¡
 ,0 },

7572 { "sqlôe3_cﬁumn_ty≥", 
ã°_cﬁumn_ty≥
 ,0 },

7573 { "sqlôe3_cﬁumn_blob", 
ã°_cﬁumn_blob
 ,0 },

7574 { "sqlôe3_cﬁumn_doubÀ", 
ã°_cﬁumn_doubÀ
 ,0 },

7575 { "sqlôe3_cﬁumn_öt64", 
ã°_cﬁumn_öt64
 ,0 },

7576 { "sqlôe3_cﬁumn_ãxt", 
ã°_°mt_utf8
, (*)
sqlôe3_cﬁumn_ãxt
 },

7577 { "sqlôe3_cﬁumn_«me", 
ã°_°mt_utf8
, (*)
sqlôe3_cﬁumn_«me
 },

7578 { "sqlôe3_cﬁumn_öt", 
ã°_°mt_öt
, (*)
sqlôe3_cﬁumn_öt
 },

7579 { "sqlôe3_cﬁumn_byãs", 
ã°_°mt_öt
, (*)
sqlôe3_cﬁumn_byãs
},

7580 #i‚de‡
SQLITE_OMIT_DECLTYPE


7581 { "sqlôe3_cﬁumn_de˛ty≥",
ã°_°mt_utf8
,(*)
sqlôe3_cﬁumn_de˛ty≥
},

7583 #ifde‡
SQLITE_ENABLE_COLUMN_METADATA


7584 { "sqlôe3_cﬁumn_d©aba£_«me",
ã°_°mt_utf8
,(*)
sqlôe3_cﬁumn_d©aba£_«me
},

7585 { "sqlôe3_cﬁumn_èbÀ_«me",
ã°_°mt_utf8
,(*)
sqlôe3_cﬁumn_èbÀ_«me
},

7586 { "sqlôe3_cﬁumn_‹igö_«me",
ã°_°mt_utf8
,(*)
sqlôe3_cﬁumn_‹igö_«me
},

7589 #i‚de‡
SQLITE_OMIT_UTF16


7590 { "sqlôe3_cﬁumn_byãs16", 
ã°_°mt_öt
, (*)
sqlôe3_cﬁumn_byãs16
 },

7591 { "sqlôe3_cﬁumn_ãxt16", 
ã°_°mt_utf16
, (*)
sqlôe3_cﬁumn_ãxt16
},

7592 { "sqlôe3_cﬁumn_«me16", 
ã°_°mt_utf16
, (*)
sqlôe3_cﬁumn_«me16
},

7593 { "add_Æignmít_ã°_cﬁœti⁄s", 
add_Æignmít_ã°_cﬁœti⁄s
, 0 },

7594 #i‚de‡
SQLITE_OMIT_DECLTYPE


7595 { "sqlôe3_cﬁumn_de˛ty≥16",
ã°_°mt_utf16
,(*)
sqlôe3_cﬁumn_de˛ty≥16
},

7597 #ifde‡
SQLITE_ENABLE_COLUMN_METADATA


7599 
ã°_°mt_utf16
, (*)
sqlôe3_cﬁumn_d©aba£_«me16
},

7600 {"sqlôe3_cﬁumn_èbÀ_«me16", 
ã°_°mt_utf16
, (*)
sqlôe3_cﬁumn_èbÀ_«me16
},

7601 {"sqlôe3_cﬁumn_‹igö_«me16", 
ã°_°mt_utf16
, (*)
sqlôe3_cﬁumn_‹igö_«me16
},

7604 { "sqlôe3_¸óã_cﬁœti⁄_v2", 
ã°_¸óã_cﬁœti⁄_v2
, 0 },

7605 { "sqlôe3_globÆ_ªcovî", 
ã°_globÆ_ªcovî
, 0 },

7606 { "w‹kög_64bô_öt", 
w‹kög_64bô_öt
, 0 },

7607 { "vfs_u∆ök_ã°", 
vfs_u∆ök_ã°
, 0 },

7608 { "vfs_öôÁû_ã°", 
vfs_öôÁû_ã°
, 0 },

7609 { "vfs_uƒegi°î_Æl", 
vfs_uƒegi°î_Æl
, 0 },

7610 { "vfs_ªªgi°î_Æl", 
vfs_ªªgi°î_Æl
, 0 },

7611 { "fûe_c⁄åﬁ_ã°", 
fûe_c⁄åﬁ_ã°
, 0 },

7612 { "fûe_c⁄åﬁ_œ°î∫o_ã°", 
fûe_c⁄åﬁ_œ°î∫o_ã°
, 0 },

7613 { "fûe_c⁄åﬁ_lock¥oxy_ã°", 
fûe_c⁄åﬁ_lock¥oxy_ã°
, 0 },

7614 { "fûe_c⁄åﬁ_chunksize_ã°", 
fûe_c⁄åﬁ_chunksize_ã°
, 0 },

7615 { "fûe_c⁄åﬁ_sizehöt_ã°", 
fûe_c⁄åﬁ_sizehöt_ã°
, 0 },

7616 #i‡
SQLITE_OS_WIN


7617 { "fûe_c⁄åﬁ_wö32_av_ªåy", 
fûe_c⁄åﬁ_wö32_av_ªåy
, 0 },

7618 { "fûe_c⁄åﬁ_wö32_gë_h™dÀ", 
fûe_c⁄åﬁ_wö32_gë_h™dÀ
, 0 },

7619 { "fûe_c⁄åﬁ_wö32_£t_h™dÀ", 
fûe_c⁄åﬁ_wö32_£t_h™dÀ
, 0 },

7621 { "fûe_c⁄åﬁ_≥rsi°_wÆ", 
fûe_c⁄åﬁ_≥rsi°_wÆ
, 0 },

7622 { "fûe_c⁄åﬁ_powîß„_ovîwrôe",
fûe_c⁄åﬁ_powîß„_ovîwrôe
,0},

7623 { "fûe_c⁄åﬁ_vf¢ame", 
fûe_c⁄åﬁ_vf¢ame
, 0 },

7624 { "fûe_c⁄åﬁ_ãmpfûíame", 
fûe_c⁄åﬁ_ãmpfûíame
, 0 },

7625 { "sqlôe3_vfs_li°", 
vfs_li°
, 0 },

7626 { "sqlôe3_¸óã_fun˘i⁄_v2", 
ã°_¸óã_fun˘i⁄_v2
, 0 },

7629 #i‚de‡
SQLITE_OMIT_UTF16


7630 { "add_ã°_cﬁœã", 
ã°_cﬁœã
, 0 },

7631 { "add_ã°_cﬁœã_√eded", 
ã°_cﬁœã_√eded
, 0 },

7632 { "add_ã°_fun˘i⁄", 
ã°_fun˘i⁄
, 0 },

7633 { "add_ã°_utf16bö_cﬁœã", 
ã°_utf16bö_cﬁœã
, 0 },

7635 { "sqlôe3_ã°_îr°r", 
ã°_îr°r
, 0 },

7636 { "t˛_v¨übÀ_ty≥", 
t˛_v¨übÀ_ty≥
, 0 },

7637 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


7638 { "sqlôe3_íabÀ_sh¨ed_ˇche", 
ã°_íabÀ_sh¨ed
, 0 },

7639 { "sqlôe3_sh¨ed_ˇche_ªp‹t", 
sqlôe3BåìSh¨edCacheRï‹t
, 0},

7641 { "sqlôe3_libvîsi⁄_numbî", 
ã°_libvîsi⁄_numbî
, 0 },

7642 { "sqlôe3_èbÀ_cﬁumn_mëad©a", 
ã°_èbÀ_cﬁumn_mëad©a
, 0 },

7643 #i‚de‡
SQLITE_OMIT_INCRBLOB


7644 { "sqlôe3_blob_ª›í", 
ã°_blob_ª›í
, 0 },

7646 { "pˇche_°©s", 
ã°_pˇche_°©s
, 0 },

7647 #ifde‡
SQLITE_ENABLE_UNLOCK_NOTIFY


7648 { "sqlôe3_u∆ock_nŸify", 
ã°_u∆ock_nŸify
, 0 },

7650 { "sqlôe3_wÆ_checkpoöt", 
ã°_wÆ_checkpoöt
, 0 },

7651 { "sqlôe3_wÆ_checkpoöt_v2",
ã°_wÆ_checkpoöt_v2
, 0 },

7652 { "sqlôe3_wÆ_autocheckpoöt",
ã°_wÆ_autocheckpoöt
, 0 },

7653 { "ã°_sqlôe3_log", 
ã°_sqlôe3_log
, 0 },

7654 #i‚de‡
SQLITE_OMIT_EXPLAIN


7655 { "¥öt_ex∂aö_quîy_∂™", 
ã°_¥öt_eqp
, 0 },

7657 { "sqlôe3_ã°_c⁄åﬁ", 
ã°_ã°_c⁄åﬁ
 },

7658 #i‡
SQLITE_OS_UNIX


7659 { "gërußge", 
ã°_gërußge
 },

7661 { "lﬂd_°©ic_exãnsi⁄", 
t˛LﬂdSèticExãnsi⁄Cmd
 },

7662 { "s‹ãr_ã°_Ákehóp", 
s‹ãr_ã°_Ákehóp
 },

7663 { "s‹ãr_ã°_s‹t4_hñ≥r", 
s‹ãr_ã°_s‹t4_hñ≥r
 },

7664 #ifde‡
SQLITE_USER_AUTHENTICATION


7665 { "sqlôe3_u£r_authítiˇã", 
ã°_u£r_authítiˇã
, 0 },

7666 { "sqlôe3_u£r_add", 
ã°_u£r_add
, 0 },

7667 { "sqlôe3_u£r_ch™ge", 
ã°_u£r_ch™ge
, 0 },

7668 { "sqlôe3_u£r_dñëe", 
ã°_u£r_dñëe
, 0 },

7670 #ifde‡
SQLITE_ENABLE_STMT_SCANSTATUS


7671 { "sqlôe3_°mt_sˇn°©us", 
ã°_°mt_sˇn°©us
, 0 },

7672 { "sqlôe3_°mt_sˇn°©us_ª£t", 
ã°_°mt_sˇn°©us_ª£t
, 0 },

7674 #ifde‡
SQLITE_ENABLE_SQLLOG


7675 { "sqlôe3_c⁄fig_sqŒog", 
ã°_c⁄fig_sqŒog
, 0 },

7677 { "vfs_cuºít_time_öt64", 
vfsCuºítTimeI¡64
, 0 },

7678 #ifde‡
SQLITE_ENABLE_SNAPSHOT


7679 { "sqlôe3_¢≠shŸ_gë", 
ã°_¢≠shŸ_gë
, 0 },

7680 { "sqlôe3_¢≠shŸ_›í", 
ã°_¢≠shŸ_›í
, 0 },

7681 { "sqlôe3_¢≠shŸ_‰ì", 
ã°_¢≠shŸ_‰ì
, 0 },

7682 { "sqlôe3_¢≠shŸ_cmp", 
ã°_¢≠shŸ_cmp
, 0 },

7683 { "sqlôe3_¢≠shŸ_ªcovî", 
ã°_¢≠shŸ_ªcovî
, 0 },

7684 { "sqlôe3_¢≠shŸ_gë_blob", 
ã°_¢≠shŸ_gë_blob
, 0 },

7685 { "sqlôe3_¢≠shŸ_›í_blob", 
ã°_¢≠shŸ_›í_blob
, 0 },

7686 { "sqlôe3_¢≠shŸ_cmp_blob", 
ã°_¢≠shŸ_cmp_blob
, 0 },

7688 { "sqlôe3_dñëe_d©aba£", 
ã°_dñëe_d©aba£
, 0 },

7690 
bômask_size
 = (
Bômask
)*8;

7691 
l⁄gdoubÀ_size
 = (
LONGDOUBLE_TYPE
);

7692 
i
;

7693 
sqlôe3_sync_cou¡
, 
sqlôe3_fuŒsync_cou¡
;

7694 
sqlôe3_›íãmp_cou¡
;

7695 
sqlôe3_like_cou¡
;

7696 
sqlôe3_x„r›t_cou¡
;

7697 
sqlôe3_∑gî_ªaddb_cou¡
;

7698 
sqlôe3_∑gî_wrôedb_cou¡
;

7699 
sqlôe3_∑gî_wrôej_cou¡
;

7700 #i‡
SQLITE_OS_WIN


7701 
LONG
 vﬁ©ûê
sqlôe3_os_ty≥
;

7703 #ifde‡
SQLITE_DEBUG


7704 
sqlôe3WhîeTø˚
;

7705 
sqlôe3OSTø˚
;

7706 
sqlôe3WÆTø˚
;

7708 #ifde‡
SQLITE_TEST


7709 #ifde‡
SQLITE_ENABLE_FTS3


7710 
sqlôe3_·s3_íabÀ_∑ª¡he£s
;

7714 
i
=0; i<(
aCmd
)/(aCmd[0]); i++){

7715 
	`T˛_Cª©eComm™d
(
öãΩ
, 
aCmd
[
i
].
zName
,áCmd[i].
xProc
, 0, 0);

7717 
i
=0; i<(
aObjCmd
)/(aObjCmd[0]); i++){

7718 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
aObjCmd
[
i
].
zName
,

7719 
aObjCmd
[
i
].
xProc
,áObjCmd[i].
˛õ¡D©a
, 0);

7721 
	`T˛_LökV¨
(
öãΩ
, "sqlite_search_count",

7722 (*)&
sqlôe3_£¨ch_cou¡
, 
TCL_LINK_INT
);

7723 
	`T˛_LökV¨
(
öãΩ
, "sqlite_found_count",

7724 (*)&
sqlôe3_found_cou¡
, 
TCL_LINK_INT
);

7725 
	`T˛_LökV¨
(
öãΩ
, "sqlite_sort_count",

7726 (*)&
sqlôe3_s‹t_cou¡
, 
TCL_LINK_INT
);

7727 
	`T˛_LökV¨
(
öãΩ
, "sqlite3_max_blobsize",

7728 (*)&
sqlôe3_max_blobsize
, 
TCL_LINK_INT
);

7729 
	`T˛_LökV¨
(
öãΩ
, "sqlite_like_count",

7730 (*)&
sqlôe3_like_cou¡
, 
TCL_LINK_INT
);

7731 
	`T˛_LökV¨
(
öãΩ
, "sqlite_interrupt_count",

7732 (*)&
sqlôe3_öãºu±_cou¡
, 
TCL_LINK_INT
);

7733 
	`T˛_LökV¨
(
öãΩ
, "sqlite_open_file_count",

7734 (*)&
sqlôe3_›í_fûe_cou¡
, 
TCL_LINK_INT
);

7735 
	`T˛_LökV¨
(
öãΩ
, "sqlite_current_time",

7736 (*)&
sqlôe3_cuºít_time
, 
TCL_LINK_INT
);

7737 #i‡
SQLITE_OS_UNIX
 && 
	`deföed
(
__APPLE__
Ë&& 
SQLITE_ENABLE_LOCKING_STYLE


7738 
	`T˛_LökV¨
(
öãΩ
, "sqlite_hostid_num",

7739 (*)&
sqlôe3_ho°id_num
, 
TCL_LINK_INT
);

7741 
	`T˛_LökV¨
(
öãΩ
, "sqlite3_xferopt_count",

7742 (*)&
sqlôe3_x„r›t_cou¡
, 
TCL_LINK_INT
);

7743 
	`T˛_LökV¨
(
öãΩ
, "sqlite3_pager_readdb_count",

7744 (*)&
sqlôe3_∑gî_ªaddb_cou¡
, 
TCL_LINK_INT
);

7745 
	`T˛_LökV¨
(
öãΩ
, "sqlite3_pager_writedb_count",

7746 (*)&
sqlôe3_∑gî_wrôedb_cou¡
, 
TCL_LINK_INT
);

7747 
	`T˛_LökV¨
(
öãΩ
, "sqlite3_pager_writej_count",

7748 (*)&
sqlôe3_∑gî_wrôej_cou¡
, 
TCL_LINK_INT
);

7749 #i‚de‡
SQLITE_OMIT_UTF16


7750 
	`T˛_LökV¨
(
öãΩ
, "unaligned_string_counter",

7751 (*)&
u«lig√d_°rög_cou¡î
, 
TCL_LINK_INT
);

7753 #i‚de‡
SQLITE_OMIT_UTF16


7754 
	`T˛_LökV¨
(
öãΩ
, "sqlite_last_needed_collation",

7755 (*)&
pzNìdedCﬁœti⁄
, 
TCL_LINK_STRING
|
TCL_LINK_READ_ONLY
);

7757 #i‡
SQLITE_OS_WIN


7758 
	`T˛_LökV¨
(
öãΩ
, "sqlite_os_type",

7759 (*)&
sqlôe3_os_ty≥
, 
TCL_LINK_LONG
);

7761 #ifde‡
SQLITE_TEST


7763 c⁄° *
quîy_∂™
 = "*** OBSOLETE VARIABLE ***";

7764 
	`T˛_LökV¨
(
öãΩ
, "sqlite_query_plan",

7765 (*)&
quîy_∂™
, 
TCL_LINK_STRING
|
TCL_LINK_READ_ONLY
);

7768 #ifde‡
SQLITE_DEBUG


7769 
	`T˛_LökV¨
(
öãΩ
, "sqlite_where_trace",

7770 (*)&
sqlôe3WhîeTø˚
, 
TCL_LINK_INT
);

7771 
	`T˛_LökV¨
(
öãΩ
, "sqlite_os_trace",

7772 (*)&
sqlôe3OSTø˚
, 
TCL_LINK_INT
);

7773 #i‚de‡
SQLITE_OMIT_WAL


7774 
	`T˛_LökV¨
(
öãΩ
, "sqlite_wal_trace",

7775 (*)&
sqlôe3WÆTø˚
, 
TCL_LINK_INT
);

7778 #i‚de‡
SQLITE_OMIT_DISKIO


7779 
	`T˛_LökV¨
(
öãΩ
, "sqlite_opentemp_count",

7780 (*)&
sqlôe3_›íãmp_cou¡
, 
TCL_LINK_INT
);

7782 
	`T˛_LökV¨
(
öãΩ
, "sqlite_static_bind_value",

7783 (*)&
sqlôe_°©ic_böd_vÆue
, 
TCL_LINK_STRING
);

7784 
	`T˛_LökV¨
(
öãΩ
, "sqlite_static_bind_nbyte",

7785 (*)&
sqlôe_°©ic_böd_nbyã
, 
TCL_LINK_INT
);

7786 
	`T˛_LökV¨
(
öãΩ
, "sqlite_temp_directory",

7787 (*)&
sqlôe3_ãmp_dúe˘‹y
, 
TCL_LINK_STRING
);

7788 
	`T˛_LökV¨
(
öãΩ
, "sqlite_data_directory",

7789 (*)&
sqlôe3_d©a_dúe˘‹y
, 
TCL_LINK_STRING
);

7790 
	`T˛_LökV¨
(
öãΩ
, "bitmask_size",

7791 (*)&
bômask_size
, 
TCL_LINK_INT
|
TCL_LINK_READ_ONLY
);

7792 
	`T˛_LökV¨
(
öãΩ
, "longdouble_size",

7793 (*)&
l⁄gdoubÀ_size
, 
TCL_LINK_INT
|
TCL_LINK_READ_ONLY
);

7794 
	`T˛_LökV¨
(
öãΩ
, "sqlite_sync_count",

7795 (*)&
sqlôe3_sync_cou¡
, 
TCL_LINK_INT
);

7796 
	`T˛_LökV¨
(
öãΩ
, "sqlite_fullsync_count",

7797 (*)&
sqlôe3_fuŒsync_cou¡
, 
TCL_LINK_INT
);

7798 #i‡
	`deföed
(
SQLITE_ENABLE_FTS3
Ë&& deföed(
SQLITE_TEST
)

7799 
	`T˛_LökV¨
(
öãΩ
, "sqlite_fts3_enable_parentheses",

7800 (*)&
sqlôe3_·s3_íabÀ_∑ª¡he£s
, 
TCL_LINK_INT
);

7802  
TCL_OK
;

7803 
	}
}

	@test2.c

16 
	~"sqlôeI¡.h
"

17 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

18 
	~"sqlôe_t˛.h
"

20 
	~"t˛.h
"

22 
	~<°dlib.h
>

23 
	~<°rög.h
>

24 
	~<˘y≥.h
>

26 c⁄° *
sqlôe3EºName
();

31 
	gã°_∑gesize
 = 1024;

36 
	$∑gî_ã°_ªöôî
(
DbPage
 *
pNŸU£d
){

38 
	}
}

45 
SQLITE_TCLAPI
 
	$∑gî_›í
(

46 *
NŸU£d
,

47 
T˛_I¡îp
 *
öãΩ
,

48 
¨gc
,

49 c⁄° **
¨gv


51 
u32
 
∑geSize
;

52 
Pagî
 *
pPagî
;

53 
nPage
;

54 
rc
;

55 
zBuf
[100];

56 if–
¨gc
!=3 ){

57 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

59  
TCL_ERROR
;

61 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[2], &
nPage
ËË 
TCL_ERROR
;

62 
rc
 = 
	`sqlôe3PagîO≥n
(
	`sqlôe3_vfs_föd
(0), &
pPagî
, 
¨gv
[1], 0, 0,

63 
SQLITE_OPEN_READWRITE
 | 
SQLITE_OPEN_CREATE
 | 
SQLITE_OPEN_MAIN_DB
,

64 
∑gî_ã°_ªöôî
);

65 if–
rc
!=
SQLITE_OK
 ){

66 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

67  
TCL_ERROR
;

69 
	`sqlôe3PagîSëCachesize
(
pPagî
, 
nPage
);

70 
∑geSize
 = 
ã°_∑gesize
;

71 
	`sqlôe3PagîSëPagesize
(
pPagî
, &
∑geSize
, -1);

72 
	`sqlôe3_¢¥ötf
((
zBuf
),zBuf,"%p",
pPagî
);

73 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

74  
TCL_OK
;

75 
	}
}

82 
SQLITE_TCLAPI
 
	$∑gî_˛o£
(

83 *
NŸU£d
,

84 
T˛_I¡îp
 *
öãΩ
,

85 
¨gc
,

86 c⁄° **
¨gv


88 
Pagî
 *
pPagî
;

89 
rc
;

90 if–
¨gc
!=2 ){

91 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

93  
TCL_ERROR
;

95 
pPagî
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

96 
rc
 = 
	`sqlôe3PagîClo£
(
pPagî
, 0);

97 if–
rc
!=
SQLITE_OK
 ){

98 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

99  
TCL_ERROR
;

101  
TCL_OK
;

102 
	}
}

109 
SQLITE_TCLAPI
 
	$∑gî_rﬁlback
(

110 *
NŸU£d
,

111 
T˛_I¡îp
 *
öãΩ
,

112 
¨gc
,

113 c⁄° **
¨gv


115 
Pagî
 *
pPagî
;

116 
rc
;

117 if–
¨gc
!=2 ){

118 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

120  
TCL_ERROR
;

122 
pPagî
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

123 
rc
 = 
	`sqlôe3PagîRﬁlback
(
pPagî
);

124 if–
rc
!=
SQLITE_OK
 ){

125 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

126  
TCL_ERROR
;

128  
TCL_OK
;

129 
	}
}

136 
SQLITE_TCLAPI
 
	$∑gî_commô
(

137 *
NŸU£d
,

138 
T˛_I¡îp
 *
öãΩ
,

139 
¨gc
,

140 c⁄° **
¨gv


142 
Pagî
 *
pPagî
;

143 
rc
;

144 if–
¨gc
!=2 ){

145 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

147  
TCL_ERROR
;

149 
pPagî
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

150 
rc
 = 
	`sqlôe3PagîCommôPha£O√
(
pPagî
, 0, 0);

151 if–
rc
!=
SQLITE_OK
 ){

152 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

153  
TCL_ERROR
;

155 
rc
 = 
	`sqlôe3PagîCommôPha£Two
(
pPagî
);

156 if–
rc
!=
SQLITE_OK
 ){

157 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

158  
TCL_ERROR
;

160  
TCL_OK
;

161 
	}
}

168 
SQLITE_TCLAPI
 
	$∑gî_°mt_begö
(

169 *
NŸU£d
,

170 
T˛_I¡îp
 *
öãΩ
,

171 
¨gc
,

172 c⁄° **
¨gv


174 
Pagî
 *
pPagî
;

175 
rc
;

176 if–
¨gc
!=2 ){

177 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

179  
TCL_ERROR
;

181 
pPagî
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

182 
rc
 = 
	`sqlôe3PagîO≥nSavïoöt
(
pPagî
, 1);

183 if–
rc
!=
SQLITE_OK
 ){

184 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

185  
TCL_ERROR
;

187  
TCL_OK
;

188 
	}
}

195 
SQLITE_TCLAPI
 
	$∑gî_°mt_rﬁlback
(

196 *
NŸU£d
,

197 
T˛_I¡îp
 *
öãΩ
,

198 
¨gc
,

199 c⁄° **
¨gv


201 
Pagî
 *
pPagî
;

202 
rc
;

203 if–
¨gc
!=2 ){

204 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

206  
TCL_ERROR
;

208 
pPagî
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

209 
rc
 = 
	`sqlôe3PagîSavïoöt
(
pPagî
, 
SAVEPOINT_ROLLBACK
, 0);

210 
	`sqlôe3PagîSavïoöt
(
pPagî
, 
SAVEPOINT_RELEASE
, 0);

211 if–
rc
!=
SQLITE_OK
 ){

212 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

213  
TCL_ERROR
;

215  
TCL_OK
;

216 
	}
}

223 
SQLITE_TCLAPI
 
	$∑gî_°mt_commô
(

224 *
NŸU£d
,

225 
T˛_I¡îp
 *
öãΩ
,

226 
¨gc
,

227 c⁄° **
¨gv


229 
Pagî
 *
pPagî
;

230 
rc
;

231 if–
¨gc
!=2 ){

232 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

234  
TCL_ERROR
;

236 
pPagî
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

237 
rc
 = 
	`sqlôe3PagîSavïoöt
(
pPagî
, 
SAVEPOINT_RELEASE
, 0);

238 if–
rc
!=
SQLITE_OK
 ){

239 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

240  
TCL_ERROR
;

242  
TCL_OK
;

243 
	}
}

250 
SQLITE_TCLAPI
 
	$∑gî_°©s
(

251 *
NŸU£d
,

252 
T˛_I¡îp
 *
öãΩ
,

253 
¨gc
,

254 c⁄° **
¨gv


256 
Pagî
 *
pPagî
;

257 
i
, *
a
;

258 if–
¨gc
!=2 ){

259 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

261  
TCL_ERROR
;

263 
pPagî
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

264 
a
 = 
	`sqlôe3PagîSèts
(
pPagî
);

265 
i
=0; i<9; i++){

266 *
zName
[] = {

270 
zBuf
[100];

271 
	`T˛_AµídEÀmít
(
öãΩ
, 
zName
[
i
]);

272 
	`sqlôe3_¢¥ötf
((
zBuf
),zBuf,"%d",
a
[
i
]);

273 
	`T˛_AµídEÀmít
(
öãΩ
, 
zBuf
);

275  
TCL_OK
;

276 
	}
}

283 
SQLITE_TCLAPI
 
	$∑gî_∑gecou¡
(

284 *
NŸU£d
,

285 
T˛_I¡îp
 *
öãΩ
,

286 
¨gc
,

287 c⁄° **
¨gv


289 
Pagî
 *
pPagî
;

290 
zBuf
[100];

291 
nPage
;

292 if–
¨gc
!=2 ){

293 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

295  
TCL_ERROR
;

297 
pPagî
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

298 
	`sqlôe3PagîPagecou¡
(
pPagî
, &
nPage
);

299 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%d", 
nPage
);

300 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

301  
TCL_OK
;

302 
	}
}

309 
SQLITE_TCLAPI
 
	$∑ge_gë
(

310 *
NŸU£d
,

311 
T˛_I¡îp
 *
öãΩ
,

312 
¨gc
,

313 c⁄° **
¨gv


315 
Pagî
 *
pPagî
;

316 
zBuf
[100];

317 
DbPage
 *
pPage
 = 0;

318 
pgno
;

319 
rc
;

320 if–
¨gc
!=3 ){

321 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

323  
TCL_ERROR
;

325 
pPagî
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

326 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[2], &
pgno
ËË 
TCL_ERROR
;

327 
rc
 = 
	`sqlôe3PagîSh¨edLock
(
pPagî
);

328 if–
rc
==
SQLITE_OK
 ){

329 
rc
 = 
	`sqlôe3PagîGë
(
pPagî
, 
pgno
, &
pPage
, 0);

331 if–
rc
!=
SQLITE_OK
 ){

332 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

333  
TCL_ERROR
;

335 
	`sqlôe3_¢¥ötf
((
zBuf
),zBuf,"%p",
pPage
);

336 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

337  
TCL_OK
;

338 
	}
}

346 
SQLITE_TCLAPI
 
	$∑ge_lookup
(

347 *
NŸU£d
,

348 
T˛_I¡îp
 *
öãΩ
,

349 
¨gc
,

350 c⁄° **
¨gv


352 
Pagî
 *
pPagî
;

353 
zBuf
[100];

354 
DbPage
 *
pPage
;

355 
pgno
;

356 if–
¨gc
!=3 ){

357 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

359  
TCL_ERROR
;

361 
pPagî
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

362 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[2], &
pgno
ËË 
TCL_ERROR
;

363 
pPage
 = 
	`sqlôe3PagîLookup
(
pPagî
, 
pgno
);

364 if–
pPage
 ){

365 
	`sqlôe3_¢¥ötf
((
zBuf
),zBuf,"%p",
pPage
);

366 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

368  
TCL_OK
;

369 
	}
}

374 
SQLITE_TCLAPI
 
	$∑gî_åunˇã
(

375 *
NŸU£d
,

376 
T˛_I¡îp
 *
öãΩ
,

377 
¨gc
,

378 c⁄° **
¨gv


380 
Pagî
 *
pPagî
;

381 
pgno
;

382 if–
¨gc
!=3 ){

383 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

385  
TCL_ERROR
;

387 
pPagî
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

388 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[2], &
pgno
ËË 
TCL_ERROR
;

389 
	`sqlôe3PagîTrunˇãImage
(
pPagî
, 
pgno
);

390  
TCL_OK
;

391 
	}
}

399 
SQLITE_TCLAPI
 
	$∑ge_uƒef
(

400 *
NŸU£d
,

401 
T˛_I¡îp
 *
öãΩ
,

402 
¨gc
,

403 c⁄° **
¨gv


405 
DbPage
 *
pPage
;

406 if–
¨gc
!=2 ){

407 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

409  
TCL_ERROR
;

411 
pPage
 = (
DbPage
 *)
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

412 
	`sqlôe3PagîUƒef
(
pPage
);

413  
TCL_OK
;

414 
	}
}

421 
SQLITE_TCLAPI
 
	$∑ge_ªad
(

422 *
NŸU£d
,

423 
T˛_I¡îp
 *
öãΩ
,

424 
¨gc
,

425 c⁄° **
¨gv


427 
zBuf
[100];

428 
DbPage
 *
pPage
;

429 if–
¨gc
!=2 ){

430 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

432  
TCL_ERROR
;

434 
pPage
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

435 
	`mem˝y
(
zBuf
, 
	`sqlôe3PagîGëD©a
(
pPage
), (zBuf));

436 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

437  
TCL_OK
;

438 
	}
}

445 
SQLITE_TCLAPI
 
	$∑ge_numbî
(

446 *
NŸU£d
,

447 
T˛_I¡îp
 *
öãΩ
,

448 
¨gc
,

449 c⁄° **
¨gv


451 
zBuf
[100];

452 
DbPage
 *
pPage
;

453 if–
¨gc
!=2 ){

454 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

456  
TCL_ERROR
;

458 
pPage
 = (
DbPage
 *)
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

459 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%d", 
	`sqlôe3PagîPagíumbî
(
pPage
));

460 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

461  
TCL_OK
;

462 
	}
}

469 
SQLITE_TCLAPI
 
	$∑ge_wrôe
(

470 *
NŸU£d
,

471 
T˛_I¡îp
 *
öãΩ
,

472 
¨gc
,

473 c⁄° **
¨gv


475 
DbPage
 *
pPage
;

476 *
pD©a
;

477 
rc
;

478 if–
¨gc
!=3 ){

479 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

481  
TCL_ERROR
;

483 
pPage
 = (
DbPage
 *)
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

484 
rc
 = 
	`sqlôe3PagîWrôe
(
pPage
);

485 if–
rc
!=
SQLITE_OK
 ){

486 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

487  
TCL_ERROR
;

489 
pD©a
 = 
	`sqlôe3PagîGëD©a
(
pPage
);

490 
	`°∫˝y
(
pD©a
, 
¨gv
[2], 
ã°_∑gesize
-1);

491 
pD©a
[
ã°_∑gesize
-1] = 0;

492  
TCL_OK
;

493 
	}
}

495 #i‚de‡
SQLITE_OMIT_DISKIO


505 
SQLITE_TCLAPI
 
	$Áke_big_fûe
(

506 *
NŸU£d
,

507 
T˛_I¡îp
 *
öãΩ
,

508 
¨gc
,

509 c⁄° **
¨gv


511 
sqlôe3_vfs
 *
pVfs
;

512 
sqlôe3_fûe
 *
fd
 = 0;

513 
rc
;

514 
n
;

515 
i64
 
off£t
;

516 *
zFûe
;

517 
nFûe
;

518 if–
¨gc
!=3 ){

519 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

521  
TCL_ERROR
;

523 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[1], &
n
ËË 
TCL_ERROR
;

525 
pVfs
 = 
	`sqlôe3_vfs_föd
(0);

526 
nFûe
 = ()
	`°æí
(
¨gv
[2]);

527 
zFûe
 = 
	`sqlôe3_mÆloc
–
nFûe
+2 );

528 if–
zFûe
==0 )  
TCL_ERROR
;

529 
	`mem˝y
(
zFûe
, 
¨gv
[2], 
nFûe
+1);

530 
zFûe
[
nFûe
+1] = 0;

531 
rc
 = 
	`sqlôe3OsO≥nMÆloc
(
pVfs
, 
zFûe
, &
fd
,

532 (
SQLITE_OPEN_CREATE
|
SQLITE_OPEN_READWRITE
|
SQLITE_OPEN_MAIN_DB
), 0

534 if–
rc
 ){

535 
	`T˛_AµídResu…
(
öãΩ
, "›í faûed: ", 
	`sqlôe3EºName
(
rc
), 0);

536 
	`sqlôe3_‰ì
(
zFûe
);

537  
TCL_ERROR
;

539 
off£t
 = 
n
;

540 
off£t
 *= 1024*1024;

541 
rc
 = 
	`sqlôe3OsWrôe
(
fd
, "Hñlo, W‹ld!", 14, 
off£t
);

542 
	`sqlôe3OsClo£Fªe
(
fd
);

543 
	`sqlôe3_‰ì
(
zFûe
);

544 if–
rc
 ){

545 
	`T˛_AµídResu…
(
öãΩ
, "wrôêÁûed: ", 
	`sqlôe3EºName
(
rc
), 0);

546  
TCL_ERROR
;

548  
TCL_OK
;

549 
	}
}

558 
SQLITE_TCLAPI
 
	$ã°PídögByã
(

559 *
NŸU£d
,

560 
T˛_I¡îp
 *
öãΩ
,

561 
¨gc
,

562 c⁄° **
¨gv


564 
pbyã
;

565 
rc
;

566 if–
¨gc
!=2 ){

567 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

569  
TCL_ERROR
;

571 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[1], &
pbyã
ËË 
TCL_ERROR
;

572 
rc
 = 
	`sqlôe3_ã°_c⁄åﬁ
(
SQLITE_TESTCTRL_PENDING_BYTE
, 
pbyã
);

573 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

574  
TCL_OK
;

575 
	}
}

580 
T˛_I¡îp
 *
	gÁu…SimI¡îp
 = 0;

581 
	gÁu…SimS¸ùtSize
 = 0;

582 *
	gÁu…SimS¸ùt
;

583 
	$Áu…SimCÆlback
(
x
){

584 
zI¡
[30];

585 
i
;

586 
isNeg
;

587 
rc
;

588 if–
x
==0 ){

589 
	`mem˝y
(
Áu…SimS¸ùt
+
Áu…SimS¸ùtSize
, "0", 2);

592 if–
x
<0 ){

593 
isNeg
 = 1;

594 
x
 = -x;

596 
isNeg
 = 0;

598 
zI¡
[(zInt)-1] = 0;

599 
i
=(
zI¡
)-2; i>0 && 
x
>0; i--, x /= 10){

600 
zI¡
[
i
] = (
x
%10) + '0';

602 if–
isNeg
 ) 
zI¡
[
i
--] = '-';

603 
	`mem˝y
(
Áu…SimS¸ùt
+
Áu…SimS¸ùtSize
, 
zI¡
+
i
+1, (zInt)-i);

605 
rc
 = 
	`T˛_EvÆ
(
Áu…SimI¡îp
, 
Áu…SimS¸ùt
);

606 if–
rc
 ){

607 
	`Ârötf
(
°dîr
, "Áu… simuœt‹ s¸ùàÁûed: [%s]", 
Áu…SimS¸ùt
);

608 
rc
 = 
SQLITE_ERROR
;

610 
rc
 = 
	`©oi
(
	`T˛_GëSåögResu…
(
Áu…SimI¡îp
));

612 
	`T˛_Re£tResu…
(
Áu…SimI¡îp
);

613  
rc
;

614 
	}
}

623 
SQLITE_TCLAPI
 
	$Áu…In°ÆlCmd
(

624 *
NŸU£d
,

625 
T˛_I¡îp
 *
öãΩ
,

626 
¨gc
,

627 c⁄° **
¨gv


629 c⁄° *
zS¸ùt
;

630 
nS¸ùt
;

631 
rc
;

632 if–
¨gc
!=1 &&árgc!=2 ){

633 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

636 
zS¸ùt
 = 
¨gc
==2 ? 
¨gv
[1] : "";

637 
nS¸ùt
 = ()
	`°æí
(
zS¸ùt
);

638 if–
Áu…SimS¸ùt
 ){

639 
	`‰ì
(
Áu…SimS¸ùt
);

640 
Áu…SimS¸ùt
 = 0;

642 if–
nS¸ùt
==0 ){

643 
rc
 = 
	`sqlôe3_ã°_c⁄åﬁ
(
SQLITE_TESTCTRL_FAULT_INSTALL
, 0);

645 
Áu…SimS¸ùt
 = 
	`mÆloc
–
nS¸ùt
+100 );

646 if–
Áu…SimS¸ùt
==0 ){

647 
	`T˛_AµídResu…
(
öãΩ
, "out of memory", (*)0);

648  
SQLITE_ERROR
;

650 
	`mem˝y
(
Áu…SimS¸ùt
, 
zS¸ùt
, 
nS¸ùt
);

651 
Áu…SimS¸ùt
[
nS¸ùt
] = ' ';

652 
Áu…SimS¸ùtSize
 = 
nS¸ùt
+1;

653 
Áu…SimI¡îp
 = 
öãΩ
;

654 
rc
 = 
	`sqlôe3_ã°_c⁄åﬁ
(
SQLITE_TESTCTRL_FAULT_INSTALL
, 
Áu…SimCÆlback
);

656 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

657  
SQLITE_OK
;

658 
	}
}

666 
SQLITE_TCLAPI
 
	$ã°BôvecBuûtöTe°
(

667 *
NŸU£d
,

668 
T˛_I¡îp
 *
öãΩ
,

669 
¨gc
,

670 c⁄° **
¨gv


672 
sz
, 
rc
;

673 
nProg
 = 0;

674 
aProg
[100];

675 c⁄° *
z
;

676 if–
¨gc
!=3 ){

677 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

680 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[1], &
sz
ËË 
TCL_ERROR
;

681 
z
 = 
¨gv
[2];

682  
nProg
<99 && *
z
 ){

683  *
z
 && !
	`sqlôe3Isdigô
(*z) ){ z++; }

684 if–*
z
==0 ) ;

685 
aProg
[
nProg
++] = 
	`©oi
(
z
);

686  
	`sqlôe3Isdigô
(*
z
) ){ z++; }

688 
aProg
[
nProg
] = 0;

689 
rc
 = 
	`sqlôe3_ã°_c⁄åﬁ
(
SQLITE_TESTCTRL_BITVEC_TEST
, 
sz
, 
aProg
);

690 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

691  
TCL_OK
;

692 
	}
}

697 
	$Sqlôëe°2_Inô
(
T˛_I¡îp
 *
öãΩ
){

698 
sqlôe3_io_îr‹_≥rsi°
;

699 
sqlôe3_io_îr‹_≥ndög
;

700 
sqlôe3_io_îr‹_hô
;

701 
sqlôe3_io_îr‹_h¨dhô
;

702 
sqlôe3_diskfuŒ_≥ndög
;

703 
sqlôe3_diskfuŒ
;

705 *
zName
;

706 
T˛_CmdProc
 *
xProc
;

707 } 
aCmd
[] = {

708 { "∑gî_›í", (
T˛_CmdProc
*)
∑gî_›í
 },

709 { "∑gî_˛o£", (
T˛_CmdProc
*)
∑gî_˛o£
 },

710 { "∑gî_commô", (
T˛_CmdProc
*)
∑gî_commô
 },

711 { "∑gî_rﬁlback", (
T˛_CmdProc
*)
∑gî_rﬁlback
 },

712 { "∑gî_°mt_begö", (
T˛_CmdProc
*)
∑gî_°mt_begö
 },

713 { "∑gî_°mt_commô", (
T˛_CmdProc
*)
∑gî_°mt_commô
 },

714 { "∑gî_°mt_rﬁlback", (
T˛_CmdProc
*)
∑gî_°mt_rﬁlback
 },

715 { "∑gî_°©s", (
T˛_CmdProc
*)
∑gî_°©s
 },

716 { "∑gî_∑gecou¡", (
T˛_CmdProc
*)
∑gî_∑gecou¡
 },

717 { "∑ge_gë", (
T˛_CmdProc
*)
∑ge_gë
 },

718 { "∑ge_lookup", (
T˛_CmdProc
*)
∑ge_lookup
 },

719 { "∑ge_uƒef", (
T˛_CmdProc
*)
∑ge_uƒef
 },

720 { "∑ge_ªad", (
T˛_CmdProc
*)
∑ge_ªad
 },

721 { "∑ge_wrôe", (
T˛_CmdProc
*)
∑ge_wrôe
 },

722 { "∑ge_numbî", (
T˛_CmdProc
*)
∑ge_numbî
 },

723 { "∑gî_åunˇã", (
T˛_CmdProc
*)
∑gî_åunˇã
 },

724 #i‚de‡
SQLITE_OMIT_DISKIO


725 { "Áke_big_fûe", (
T˛_CmdProc
*)
Áke_big_fûe
 },

727 { "sqlôe3BôvecBuûtöTe°",(
T˛_CmdProc
*)
ã°BôvecBuûtöTe°
 },

728 { "sqlôe3_ã°_c⁄åﬁ_≥ndög_byã", (
T˛_CmdProc
*)
ã°PídögByã
 },

729 { "sqlôe3_ã°_c⁄åﬁ_Áu…_ö°Æl", (
T˛_CmdProc
*)
Áu…In°ÆlCmd
 },

731 
i
;

732 
i
=0; i<(
aCmd
)/(aCmd[0]); i++){

733 
	`T˛_Cª©eComm™d
(
öãΩ
, 
aCmd
[
i
].
zName
,áCmd[i].
xProc
, 0, 0);

735 
	`T˛_LökV¨
(
öãΩ
, "sqlite_io_error_pending",

736 (*)&
sqlôe3_io_îr‹_≥ndög
, 
TCL_LINK_INT
);

737 
	`T˛_LökV¨
(
öãΩ
, "sqlite_io_error_persist",

738 (*)&
sqlôe3_io_îr‹_≥rsi°
, 
TCL_LINK_INT
);

739 
	`T˛_LökV¨
(
öãΩ
, "sqlite_io_error_hit",

740 (*)&
sqlôe3_io_îr‹_hô
, 
TCL_LINK_INT
);

741 
	`T˛_LökV¨
(
öãΩ
, "sqlite_io_error_hardhit",

742 (*)&
sqlôe3_io_îr‹_h¨dhô
, 
TCL_LINK_INT
);

743 
	`T˛_LökV¨
(
öãΩ
, "sqlite_diskfull_pending",

744 (*)&
sqlôe3_diskfuŒ_≥ndög
, 
TCL_LINK_INT
);

745 
	`T˛_LökV¨
(
öãΩ
, "sqlite_diskfull",

746 (*)&
sqlôe3_diskfuŒ
, 
TCL_LINK_INT
);

747 #i‚de‡
SQLITE_OMIT_WSD


748 
	`T˛_LökV¨
(
öãΩ
, "sqlite_pending_byte",

749 (*)&
sqlôe3PídögByã
, 
TCL_LINK_INT
 | 
TCL_LINK_READ_ONLY
);

751  
TCL_OK
;

752 
	}
}

	@test3.c

16 
	~"sqlôeI¡.h
"

17 
	~"båìI¡.h
"

18 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

19 
	~"sqlôe_t˛.h
"

21 
	~"t˛.h
"

23 
	~<°dlib.h
>

24 
	~<°rög.h
>

26 c⁄° *
sqlôe3EºName
();

32 
sqlôe3
 
	gsDb
;

33 
	gnRefSqlôe3
 = 0;

40 
SQLITE_TCLAPI
 
	$båì_›í
(

41 *
NŸU£d
,

42 
T˛_I¡îp
 *
öãΩ
,

43 
¨gc
,

44 c⁄° **
¨gv


46 
Båì
 *
pBt
;

47 
rc
, 
nCache
;

48 
zBuf
[100];

49 
n
;

50 *
zFûíame
;

51 if–
¨gc
!=3 ){

52 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

54  
TCL_ERROR
;

56 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[2], &
nCache
ËË 
TCL_ERROR
;

57 
nRefSqlôe3
++;

58 if–
nRefSqlôe3
==1 ){

59 
sDb
.
pVfs
 = 
	`sqlôe3_vfs_föd
(0);

60 
sDb
.
muãx
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_RECURSIVE
);

61 
	`sqlôe3_muãx_íãr
(
sDb
.
muãx
);

63 
n
 = ()
	`°æí
(
¨gv
[1]);

64 
zFûíame
 = 
	`sqlôe3_mÆloc
–
n
+2 );

65 if–
zFûíame
==0 )  
TCL_ERROR
;

66 
	`mem˝y
(
zFûíame
, 
¨gv
[1], 
n
+1);

67 
zFûíame
[
n
+1] = 0;

68 
rc
 = 
	`sqlôe3BåìO≥n
(
sDb
.
pVfs
, 
zFûíame
, &sDb, &
pBt
, 0,

69 
SQLITE_OPEN_READWRITE
 | 
SQLITE_OPEN_CREATE
 | 
SQLITE_OPEN_MAIN_DB
);

70 
	`sqlôe3_‰ì
(
zFûíame
);

71 if–
rc
!=
SQLITE_OK
 ){

72 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

73  
TCL_ERROR
;

75 
	`sqlôe3BåìSëCacheSize
(
pBt
, 
nCache
);

76 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf,"%p", 
pBt
);

77 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

78  
TCL_OK
;

79 
	}
}

86 
SQLITE_TCLAPI
 
	$båì_˛o£
(

87 *
NŸU£d
,

88 
T˛_I¡îp
 *
öãΩ
,

89 
¨gc
,

90 c⁄° **
¨gv


92 
Båì
 *
pBt
;

93 
rc
;

94 if–
¨gc
!=2 ){

95 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

97  
TCL_ERROR
;

99 
pBt
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

100 
rc
 = 
	`sqlôe3BåìClo£
(
pBt
);

101 if–
rc
!=
SQLITE_OK
 ){

102 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

103  
TCL_ERROR
;

105 
nRefSqlôe3
--;

106 if–
nRefSqlôe3
==0 ){

107 
	`sqlôe3_muãx_Àave
(
sDb
.
muãx
);

108 
	`sqlôe3_muãx_‰ì
(
sDb
.
muãx
);

109 
sDb
.
muãx
 = 0;

110 
sDb
.
pVfs
 = 0;

112  
TCL_OK
;

113 
	}
}

121 
SQLITE_TCLAPI
 
	$båì_begö_å™ß˘i⁄
(

122 *
NŸU£d
,

123 
T˛_I¡îp
 *
öãΩ
,

124 
¨gc
,

125 c⁄° **
¨gv


127 
Båì
 *
pBt
;

128 
rc
;

129 if–
¨gc
!=2 ){

130 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

132  
TCL_ERROR
;

134 
pBt
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

135 
	`sqlôe3BåìE¡î
(
pBt
);

136 
rc
 = 
	`sqlôe3BåìBegöTøns
(
pBt
, 1);

137 
	`sqlôe3BåìLóve
(
pBt
);

138 if–
rc
!=
SQLITE_OK
 ){

139 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

140  
TCL_ERROR
;

142  
TCL_OK
;

143 
	}
}

150 
SQLITE_TCLAPI
 
	$båì_∑gî_°©s
(

151 *
NŸU£d
,

152 
T˛_I¡îp
 *
öãΩ
,

153 
¨gc
,

154 c⁄° **
¨gv


156 
Båì
 *
pBt
;

157 
i
;

158 *
a
;

160 if–
¨gc
!=2 ){

161 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

163  
TCL_ERROR
;

165 
pBt
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

174 
	`sqlôe3_muãx_íãr
(
pBt
->
db
->
muãx
);

176 
	`sqlôe3BåìE¡î
(
pBt
);

177 
a
 = 
	`sqlôe3PagîSèts
(
	`sqlôe3BåìPagî
(
pBt
));

178 
i
=0; i<11; i++){

179 *
zName
[] = {

183 
zBuf
[100];

184 
	`T˛_AµídEÀmít
(
öãΩ
, 
zName
[
i
]);

185 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf,"%d",
a
[
i
]);

186 
	`T˛_AµídEÀmít
(
öãΩ
, 
zBuf
);

188 
	`sqlôe3BåìLóve
(
pBt
);

191 
	`sqlôe3_muãx_Àave
(
pBt
->
db
->
muãx
);

192  
TCL_OK
;

193 
	}
}

200 
SQLITE_TCLAPI
 
	$båì_curs‹
(

201 *
NŸU£d
,

202 
T˛_I¡îp
 *
öãΩ
,

203 
¨gc
,

204 c⁄° **
¨gv


206 
Båì
 *
pBt
;

207 
iTabÀ
;

208 
BtCurs‹
 *
pCur
;

209 
rc
 = 
SQLITE_OK
;

210 
wrFœg
;

211 
zBuf
[30];

213 if–
¨gc
!=4 ){

214 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

216  
TCL_ERROR
;

218 
pBt
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

219 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[2], &
iTabÀ
ËË 
TCL_ERROR
;

220 if–
	`T˛_GëBoﬁón
(
öãΩ
, 
¨gv
[3], &
wrFœg
ËË 
TCL_ERROR
;

221 if–
wrFœg
 ) wrFœg = 
BTREE_WRCSR
;

222 
pCur
 = (
BtCurs‹
 *)
	`ckÆloc
(
	`sqlôe3BåìCurs‹Size
());

223 
	`mem£t
(
pCur
, 0, 
	`sqlôe3BåìCurs‹Size
());

224 
	`sqlôe3_muãx_íãr
(
pBt
->
db
->
muãx
);

225 
	`sqlôe3BåìE¡î
(
pBt
);

226 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


227 
rc
 = 
	`sqlôe3BåìLockTabÀ
(
pBt
, 
iTabÀ
, !!
wrFœg
);

229 if–
rc
==
SQLITE_OK
 ){

230 
rc
 = 
	`sqlôe3BåìCurs‹
(
pBt
, 
iTabÀ
, 
wrFœg
, 0, 
pCur
);

232 
	`sqlôe3BåìLóve
(
pBt
);

233 
	`sqlôe3_muãx_Àave
(
pBt
->
db
->
muãx
);

234 if–
rc
 ){

235 
	`ck‰ì
((*)
pCur
);

236 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

237  
TCL_ERROR
;

239 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf,"%p", 
pCur
);

240 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

241  
SQLITE_OK
;

242 
	}
}

249 
SQLITE_TCLAPI
 
	$båì_˛o£_curs‹
(

250 *
NŸU£d
,

251 
T˛_I¡îp
 *
öãΩ
,

252 
¨gc
,

253 c⁄° **
¨gv


255 
BtCurs‹
 *
pCur
;

256 
rc
;

258 if–
¨gc
!=2 ){

259 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

261  
TCL_ERROR
;

263 
pCur
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

264 #i‡
SQLITE_THREADSAFE
>0

266 
Båì
 *
pBt
 = 
pCur
->
pBåì
;

267 
	`sqlôe3_muãx_íãr
(
pBt
->
db
->
muãx
);

268 
	`sqlôe3BåìE¡î
(
pBt
);

269 
rc
 = 
	`sqlôe3BåìClo£Curs‹
(
pCur
);

270 
	`sqlôe3BåìLóve
(
pBt
);

271 
	`sqlôe3_muãx_Àave
(
pBt
->
db
->
muãx
);

274 
rc
 = 
	`sqlôe3BåìClo£Curs‹
(
pCur
);

276 
	`ck‰ì
((*)
pCur
);

277 if–
rc
 ){

278 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

279  
TCL_ERROR
;

281  
SQLITE_OK
;

282 
	}
}

291 
SQLITE_TCLAPI
 
	$båì_√xt
(

292 *
NŸU£d
,

293 
T˛_I¡îp
 *
öãΩ
,

294 
¨gc
,

295 c⁄° **
¨gv


297 
BtCurs‹
 *
pCur
;

298 
rc
;

299 
ªs
 = 0;

300 
zBuf
[100];

302 if–
¨gc
!=2 ){

303 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

305  
TCL_ERROR
;

307 
pCur
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

308 
	`sqlôe3BåìE¡î
(
pCur
->
pBåì
);

309 
rc
 = 
	`sqlôe3BåìNext
(
pCur
, &
ªs
);

310 
	`sqlôe3BåìLóve
(
pCur
->
pBåì
);

311 if–
rc
 ){

312 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

313  
TCL_ERROR
;

315 
	`sqlôe3_¢¥ötf
((
zBuf
),zBuf,"%d",
ªs
);

316 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

317  
SQLITE_OK
;

318 
	}
}

326 
SQLITE_TCLAPI
 
	$båì_fú°
(

327 *
NŸU£d
,

328 
T˛_I¡îp
 *
öãΩ
,

329 
¨gc
,

330 c⁄° **
¨gv


332 
BtCurs‹
 *
pCur
;

333 
rc
;

334 
ªs
 = 0;

335 
zBuf
[100];

337 if–
¨gc
!=2 ){

338 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

340  
TCL_ERROR
;

342 
pCur
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

343 
	`sqlôe3BåìE¡î
(
pCur
->
pBåì
);

344 
rc
 = 
	`sqlôe3BåìFú°
(
pCur
, &
ªs
);

345 
	`sqlôe3BåìLóve
(
pCur
->
pBåì
);

346 if–
rc
 ){

347 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

348  
TCL_ERROR
;

350 
	`sqlôe3_¢¥ötf
((
zBuf
),zBuf,"%d",
ªs
);

351 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

352  
SQLITE_OK
;

353 
	}
}

361 
SQLITE_TCLAPI
 
	$båì_eof
(

362 *
NŸU£d
,

363 
T˛_I¡îp
 *
öãΩ
,

364 
¨gc
,

365 c⁄° **
¨gv


367 
BtCurs‹
 *
pCur
;

368 
rc
;

369 
zBuf
[50];

371 if–
¨gc
!=2 ){

372 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

374  
TCL_ERROR
;

376 
pCur
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

377 
	`sqlôe3BåìE¡î
(
pCur
->
pBåì
);

378 
rc
 = 
	`sqlôe3BåìEof
(
pCur
);

379 
	`sqlôe3BåìLóve
(
pCur
->
pBåì
);

380 
	`sqlôe3_¢¥ötf
((
zBuf
),zBuf, "%d", 
rc
);

381 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

382  
SQLITE_OK
;

383 
	}
}

390 
SQLITE_TCLAPI
 
	$båì_∑ylﬂd_size
(

391 *
NŸU£d
,

392 
T˛_I¡îp
 *
öãΩ
,

393 
¨gc
,

394 c⁄° **
¨gv


396 
BtCurs‹
 *
pCur
;

397 
u32
 
n
;

398 
zBuf
[50];

400 if–
¨gc
!=2 ){

401 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

403  
TCL_ERROR
;

405 
pCur
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

406 
	`sqlôe3BåìE¡î
(
pCur
->
pBåì
);

407 
n
 = 
	`sqlôe3BåìPaylﬂdSize
(
pCur
);

408 
	`sqlôe3BåìLóve
(
pCur
->
pBåì
);

409 
	`sqlôe3_¢¥ötf
((
zBuf
),zBuf, "%u", 
n
);

410 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

411  
SQLITE_OK
;

412 
	}
}

428 
SQLITE_TCLAPI
 
	$båì_v¨öt_ã°
(

429 *
NŸU£d
,

430 
T˛_I¡îp
 *
öãΩ
,

431 
¨gc
,

432 c⁄° **
¨gv


434 
u32
 
°¨t
, 
mu…
, 
cou¡
, 
ö¸
;

435 
u64
 
ö
, 
out
;

436 
n1
, 
n2
, 
i
, 
j
;

437 
zBuf
[100];

438 if–
¨gc
!=5 ){

439 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

441  
TCL_ERROR
;

443 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[1], (*)&
°¨t
ËË 
TCL_ERROR
;

444 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[2], (*)&
mu…
ËË 
TCL_ERROR
;

445 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[3], (*)&
cou¡
ËË 
TCL_ERROR
;

446 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[4], (*)&
ö¸
ËË 
TCL_ERROR
;

447 
ö
 = 
°¨t
;

448 
ö
 *
mu…
;

449 
i
=0; i<()
cou¡
; i++){

450 
zEº
[200];

451 
n1
 = 
	`putV¨öt
(
zBuf
, 
ö
);

452 if–
n1
>9 ||Ç1<1 ){

453 
	`sqlôe3_¢¥ötf
((
zEº
), zErr,

454 "putV¨öàªtu∫ed %d - should bêbëwì¿1ánd 9", 
n1
);

455 
	`T˛_AµídResu…
(
öãΩ
, 
zEº
, 0);

456  
TCL_ERROR
;

458 
n2
 = 
	`gëV¨öt
(
zBuf
, &
out
);

459 if–
n1
!=
n2
 ){

460 
	`sqlôe3_¢¥ötf
((
zEº
), zErr,

461 "putV¨öàªtu∫ed %dánd gëV¨öàªtu∫ed %d", 
n1
, 
n2
);

462 
	`T˛_AµídResu…
(
öãΩ
, 
zEº
, 0);

463  
TCL_ERROR
;

465 if–
ö
!=
out
 ){

466 
	`sqlôe3_¢¥ötf
((
zEº
), zErr,

467 "WrŸê0x%016Œxánd gŸ back 0x%016Œx", 
ö
, 
out
);

468 
	`T˛_AµídResu…
(
öãΩ
, 
zEº
, 0);

469  
TCL_ERROR
;

471 if–(
ö
 & 0xffffffff)==in ){

472 
u32
 
out32
;

473 
n2
 = 
	`gëV¨öt32
(
zBuf
, 
out32
);

474 
out
 = 
out32
;

475 if–
n1
!=
n2
 ){

476 
	`sqlôe3_¢¥ötf
((
zEº
), zErr,

478 
n1
, 
n2
);

479 
	`T˛_AµídResu…
(
öãΩ
, 
zEº
, 0);

480  
TCL_ERROR
;

482 if–
ö
!=
out
 ){

483 
	`sqlôe3_¢¥ötf
((
zEº
), zErr,

485 
ö
, 
out
);

486 
	`T˛_AµídResu…
(
öãΩ
, 
zEº
, 0);

487  
TCL_ERROR
;

495 
j
=0; j<19; j++){

496 
	`gëV¨öt
(
zBuf
, &
out
);

498 
ö
 +
ö¸
;

500  
TCL_OK
;

501 
	}
}

512 
SQLITE_TCLAPI
 
	$båì_‰om_db
(

513 *
NŸU£d
,

514 
T˛_I¡îp
 *
öãΩ
,

515 
¨gc
,

516 c⁄° **
¨gv


518 
zBuf
[100];

519 
T˛_CmdInfo
 
öfo
;

520 
sqlôe3
 *
db
;

521 
Båì
 *
pBt
;

522 
iDb
 = 0;

524 if–
¨gc
!=2 &&árgc!=3 ){

525 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

527  
TCL_ERROR
;

530 if–1!=
	`T˛_GëComm™dInfo
(
öãΩ
, 
¨gv
[1], &
öfo
) ){

531 
	`T˛_AµídResu…
(
öãΩ
, "Nÿsuch db-h™dÀ: \"", 
¨gv
[1], "\"", 0);

532  
TCL_ERROR
;

534 if–
¨gc
==3 ){

535 
iDb
 = 
	`©oi
(
¨gv
[2]);

538 
db
 = *((
sqlôe3
 **)
öfo
.
objClõ¡D©a
);

539 
	`as£π
–
db
 );

541 
pBt
 = 
db
->
aDb
[
iDb
].pBt;

542 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%p", 
pBt
);

543 
	`T˛_SëResu…
(
öãΩ
, 
zBuf
, 
TCL_VOLATILE
);

544  
TCL_OK
;

545 
	}
}

552 
SQLITE_TCLAPI
 
	$båì_ismemdb
(

553 *
NŸU£d
,

554 
T˛_I¡îp
 *
öãΩ
,

555 
¨gc
,

556 c⁄° **
¨gv


558 
Båì
 *
pBt
;

559 
ªs
;

560 
sqlôe3_fûe
 *
pFûe
;

562 if–
¨gc
!=2 ){

563 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

565  
TCL_ERROR
;

567 
pBt
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

568 
	`sqlôe3_muãx_íãr
(
pBt
->
db
->
muãx
);

569 
	`sqlôe3BåìE¡î
(
pBt
);

570 
pFûe
 = 
	`sqlôe3PagîFûe
(
	`sqlôe3BåìPagî
(
pBt
));

571 
ªs
 = (
pFûe
->
pMëhods
==0);

572 
	`sqlôe3BåìLóve
(
pBt
);

573 
	`sqlôe3_muãx_Àave
(
pBt
->
db
->
muãx
);

574 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewBoﬁónObj
(
ªs
));

575  
SQLITE_OK
;

576 
	}
}

583 
SQLITE_TCLAPI
 
	$båì_£t_ˇche_size
(

584 *
NŸU£d
,

585 
T˛_I¡îp
 *
öãΩ
,

586 
¨gc
,

587 c⁄° **
¨gv


589 
nCache
;

590 
Båì
 *
pBt
;

592 if–
¨gc
!=3 ){

593 
	`T˛_AµídResu…
(

594 
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0], " BT NCACHE\"", 0);

595  
TCL_ERROR
;

597 
pBt
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

598 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[2], &
nCache
ËË 
TCL_ERROR
;

600 
	`sqlôe3_muãx_íãr
(
pBt
->
db
->
muãx
);

601 
	`sqlôe3BåìE¡î
(
pBt
);

602 
	`sqlôe3BåìSëCacheSize
(
pBt
, 
nCache
);

603 
	`sqlôe3BåìLóve
(
pBt
);

604 
	`sqlôe3_muãx_Àave
(
pBt
->
db
->
muãx
);

605  
TCL_OK
;

606 
	}
}

613 
SQLITE_TCLAPI
 
	$båì_ö£π
(

614 
Clõ¡D©a
 
˛õ¡D©a
,

615 
T˛_I¡îp
 *
öãΩ
,

616 
objc
,

617 
T˛_Obj
 *c⁄° 
objv
[]

619 
BtCurs‹
 *
pCur
;

620 
rc
;

621 
BåìPaylﬂd
 
x
;

623 if–
objc
!=4 && objc!=3 ){

624 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "?-intkey? CSR KEY VALUE");

625  
TCL_ERROR
;

628 
	`mem£t
(&
x
, 0, (x));

629 if–
objc
==4 ){

630 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
rc
ËË 
TCL_ERROR
;

631 
x
.
nKey
 = 
rc
;

632 
x
.
pD©a
 = (*)
	`T˛_GëByãAºayFromObj
(
objv
[3], &x.
nD©a
);

634 
x
.
pKey
 = (*)
	`T˛_GëByãAºayFromObj
(
objv
[2], &
rc
);

635 
x
.
nKey
 = 
rc
;

637 
pCur
 = (
BtCurs‹
*)
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[1]));

639 
	`sqlôe3_muãx_íãr
(
pCur
->
pBåì
->
db
->
muãx
);

640 
	`sqlôe3BåìE¡î
(
pCur
->
pBåì
);

641 
rc
 = 
	`sqlôe3BåìIn£π
(
pCur
, &
x
, 0, 0);

642 
	`sqlôe3BåìLóve
(
pCur
->
pBåì
);

643 
	`sqlôe3_muãx_Àave
(
pCur
->
pBåì
->
db
->
muãx
);

645 
	`T˛_Re£tResu…
(
öãΩ
);

646 if–
rc
 ){

647 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

648  
TCL_ERROR
;

650  
TCL_OK
;

651 
	}
}

657 
	$Sqlôëe°3_Inô
(
T˛_I¡îp
 *
öãΩ
){

659 *
zName
;

660 
T˛_CmdProc
 *
xProc
;

661 } 
aCmd
[] = {

662 { "båì_›í", (
T˛_CmdProc
*)
båì_›í
 },

663 { "båì_˛o£", (
T˛_CmdProc
*)
båì_˛o£
 },

664 { "båì_begö_å™ß˘i⁄", (
T˛_CmdProc
*)
båì_begö_å™ß˘i⁄
 },

665 { "båì_∑gî_°©s", (
T˛_CmdProc
*)
båì_∑gî_°©s
 },

666 { "båì_curs‹", (
T˛_CmdProc
*)
båì_curs‹
 },

667 { "båì_˛o£_curs‹", (
T˛_CmdProc
*)
båì_˛o£_curs‹
 },

668 { "båì_√xt", (
T˛_CmdProc
*)
båì_√xt
 },

669 { "båì_eof", (
T˛_CmdProc
*)
båì_eof
 },

670 { "båì_∑ylﬂd_size", (
T˛_CmdProc
*)
båì_∑ylﬂd_size
 },

671 { "båì_fú°", (
T˛_CmdProc
*)
båì_fú°
 },

672 { "båì_v¨öt_ã°", (
T˛_CmdProc
*)
båì_v¨öt_ã°
 },

673 { "båì_‰om_db", (
T˛_CmdProc
*)
båì_‰om_db
 },

674 { "båì_ismemdb", (
T˛_CmdProc
*)
båì_ismemdb
 },

675 { "båì_£t_ˇche_size", (
T˛_CmdProc
*)
båì_£t_ˇche_size
 }

677 
i
;

679 
i
=0; i<(
aCmd
)/(aCmd[0]); i++){

680 
	`T˛_Cª©eComm™d
(
öãΩ
, 
aCmd
[
i
].
zName
,áCmd[i].
xProc
, 0, 0);

683 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "båì_ö£π", 
båì_ö£π
, 0, 0);

685  
TCL_OK
;

686 
	}
}

	@test4.c

14 
	~"sqlôeI¡.h
"

15 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

16 
	~"sqlôe_t˛.h
"

18 
	~"t˛.h
"

20 #i‡
SQLITE_OS_UNIX
 && 
SQLITE_THREADSAFE


21 
	~<°dlib.h
>

22 
	~<°rög.h
>

23 
	~<±hªad.h
>

24 
	~<sched.h
>

25 
	~<˘y≥.h
>

27 c⁄° *
sqlôe3EºName
();

33 
Thªad
 
	tThªad
;

34 
	sThªad
 {

37 *
	mzFûíame
;

38 (*
	mxOp
)(
	mThªad
*);

39 *
	mzArg
;

40 
	m›num
;

41 
	mbusy
;

45 
	mcom∂ëed
;

46 
sqlôe3
 *
	mdb
;

47 
sqlôe3_°mt
 *
	mpStmt
;

48 *
	mzEº
;

49 *
	mzSèticEº
;

50 
	mrc
;

51 
	m¨gc
;

52 c⁄° *
	m¨gv
[100];

53 c⁄° *
	mcﬁv
[100];

60 
	#N_THREAD
 26

	)

61 
Thªad
 
	gthªad£t
[
N_THREAD
];

67 *
	$thªad_maö
(*
pArg
){

68 
Thªad
 *
p
 = (Thªad*)
pArg
;

69 if–
p
->
db
 ){

70 
	`sqlôe3_˛o£
(
p
->
db
);

72 
	`sqlôe3_›í
(
p
->
zFûíame
, &p->
db
);

73 if–
SQLITE_OK
!=
	`sqlôe3_îrcode
(
p
->
db
) ){

74 
p
->
zEº
 = 
	`°rdup
(
	`sqlôe3_îrmsg
’->
db
));

75 
	`sqlôe3_˛o£
(
p
->
db
);

76 
p
->
db
 = 0;

78 
p
->
pStmt
 = 0;

79 
p
->
com∂ëed
 = 1;

80  
p
->
›num
<ı->
com∂ëed
 ) 
	`sched_yõld
();

81  
p
->
xOp
 ){

82 if–
p
->
zEº
 &&Ö->zEº!ı->
zSèticEº
 ){

83 
	`sqlôe3_‰ì
(
p
->
zEº
);

84 
p
->
zEº
 = 0;

86 (*
p
->
xOp
)(p);

87 
p
->
com∂ëed
++;

88  
p
->
›num
<ı->
com∂ëed
 ) 
	`sched_yõld
();

90 if–
p
->
pStmt
 ){

91 
	`sqlôe3_föÆize
(
p
->
pStmt
);

92 
p
->
pStmt
 = 0;

94 if–
p
->
db
 ){

95 
	`sqlôe3_˛o£
(
p
->
db
);

96 
p
->
db
 = 0;

98 if–
p
->
zEº
 &&Ö->zEº!ı->
zSèticEº
 ){

99 
	`sqlôe3_‰ì
(
p
->
zEº
);

100 
p
->
zEº
 = 0;

102 
p
->
com∂ëed
++;

103 #i‚de‡
SQLITE_OMIT_DEPRECATED


104 
	`sqlôe3_thªad_˛ónup
();

107 
	}
}

114 
	$∑r£_thªad_id
(
T˛_I¡îp
 *
öãΩ
, c⁄° *
zArg
){

115 if–
zArg
==0 || zArg[0]==0 || zArg[1]!=0 || !
	`isuµî
(()zArg[0]) ){

116 
	`T˛_AµídResu…
(
öãΩ
, "thread ID must beán upper caseÜetter", 0);

119  
zArg
[0] - 'A';

120 
	}
}

128 
SQLITE_TCLAPI
 
	$t˛_thªad_¸óã
(

129 *
NŸU£d
,

130 
T˛_I¡îp
 *
öãΩ
,

131 
¨gc
,

132 c⁄° **
¨gv


134 
i
;

135 
±hªad_t
 
x
;

136 
rc
;

138 if–
¨gc
!=3 ){

139 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

141  
TCL_ERROR
;

143 
i
 = 
	`∑r£_thªad_id
(
öãΩ
, 
¨gv
[1]);

144 if–
i
<0 )  
TCL_ERROR
;

145 if–
thªad£t
[
i
].
busy
 ){

146 
	`T˛_AµídResu…
(
öãΩ
, "thªad ", 
¨gv
[1], " isálreadyÑunning", 0);

147  
TCL_ERROR
;

149 
thªad£t
[
i
].
busy
 = 1;

150 
	`sqlôe3_‰ì
(
thªad£t
[
i
].
zFûíame
);

151 
thªad£t
[
i
].
zFûíame
 = 
	`sqlôe3_m¥ötf
("%s", 
¨gv
[2]);

152 
thªad£t
[
i
].
›num
 = 1;

153 
thªad£t
[
i
].
com∂ëed
 = 0;

154 
rc
 = 
	`±hªad_¸óã
(&
x
, 0, 
thªad_maö
, &
thªad£t
[
i
]);

155 if–
rc
 ){

156 
	`T˛_AµídResu…
(
öãΩ
, "failedÅo createÅheÅhread", 0);

157 
	`sqlôe3_‰ì
(
thªad£t
[
i
].
zFûíame
);

158 
thªad£t
[
i
].
busy
 = 0;

159  
TCL_ERROR
;

161 
	`±hªad_dëach
(
x
);

162  
TCL_OK
;

163 
	}
}

168 
	$thªad_waô
(
Thªad
 *
p
){

169  
p
->
›num
>p->
com∂ëed
 ) 
	`sched_yõld
();

170 
	}
}

177 
SQLITE_TCLAPI
 
	$t˛_thªad_waô
(

178 *
NŸU£d
,

179 
T˛_I¡îp
 *
öãΩ
,

180 
¨gc
,

181 c⁄° **
¨gv


183 
i
;

185 if–
¨gc
!=2 ){

186 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

188  
TCL_ERROR
;

190 
i
 = 
	`∑r£_thªad_id
(
öãΩ
, 
¨gv
[1]);

191 if–
i
<0 )  
TCL_ERROR
;

192 if–!
thªad£t
[
i
].
busy
 ){

193 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

194  
TCL_ERROR
;

196 
	`thªad_waô
(&
thªad£t
[
i
]);

197  
TCL_OK
;

198 
	}
}

203 
	$°›_thªad
(
Thªad
 *
p
){

204 
	`thªad_waô
(
p
);

205 
p
->
xOp
 = 0;

206 
p
->
›num
++;

207 
	`thªad_waô
(
p
);

208 
	`sqlôe3_‰ì
(
p
->
zArg
);

209 
p
->
zArg
 = 0;

210 
	`sqlôe3_‰ì
(
p
->
zFûíame
);

211 
p
->
zFûíame
 = 0;

212 
p
->
busy
 = 0;

213 
	}
}

221 
SQLITE_TCLAPI
 
	$t˛_thªad_hÆt
(

222 *
NŸU£d
,

223 
T˛_I¡îp
 *
öãΩ
,

224 
¨gc
,

225 c⁄° **
¨gv


227 
i
;

229 if–
¨gc
!=2 ){

230 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

232  
TCL_ERROR
;

234 if–
¨gv
[1][0]=='*' &&árgv[1][1]==0 ){

235 
i
=0; i<
N_THREAD
; i++){

236 if–
thªad£t
[
i
].
busy
 ) 
	`°›_thªad
(&threadset[i]);

239 
i
 = 
	`∑r£_thªad_id
(
öãΩ
, 
¨gv
[1]);

240 if–
i
<0 )  
TCL_ERROR
;

241 if–!
thªad£t
[
i
].
busy
 ){

242 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

243  
TCL_ERROR
;

245 
	`°›_thªad
(&
thªad£t
[
i
]);

247  
TCL_OK
;

248 
	}
}

256 
SQLITE_TCLAPI
 
	$t˛_thªad_¨gc
(

257 *
NŸU£d
,

258 
T˛_I¡îp
 *
öãΩ
,

259 
¨gc
,

260 c⁄° **
¨gv


262 
i
;

263 
zBuf
[100];

265 if–
¨gc
!=2 ){

266 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

268  
TCL_ERROR
;

270 
i
 = 
	`∑r£_thªad_id
(
öãΩ
, 
¨gv
[1]);

271 if–
i
<0 )  
TCL_ERROR
;

272 if–!
thªad£t
[
i
].
busy
 ){

273 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

274  
TCL_ERROR
;

276 
	`thªad_waô
(&
thªad£t
[
i
]);

277 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%d", 
thªad£t
[
i
].
¨gc
);

278 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

279  
TCL_OK
;

280 
	}
}

288 
SQLITE_TCLAPI
 
	$t˛_thªad_¨gv
(

289 *
NŸU£d
,

290 
T˛_I¡îp
 *
öãΩ
,

291 
¨gc
,

292 c⁄° **
¨gv


294 
i
;

295 
n
;

297 if–
¨gc
!=3 ){

298 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

300  
TCL_ERROR
;

302 
i
 = 
	`∑r£_thªad_id
(
öãΩ
, 
¨gv
[1]);

303 if–
i
<0 )  
TCL_ERROR
;

304 if–!
thªad£t
[
i
].
busy
 ){

305 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

306  
TCL_ERROR
;

308 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[2], &
n
ËË 
TCL_ERROR
;

309 
	`thªad_waô
(&
thªad£t
[
i
]);

310 if–
n
<0 ||Ç>=
thªad£t
[
i
].
¨gc
 ){

311 
	`T˛_AµídResu…
(
öãΩ
, "columnÇumber out ofÑange", 0);

312  
TCL_ERROR
;

314 
	`T˛_AµídResu…
(
öãΩ
, 
thªad£t
[
i
].
¨gv
[
n
], 0);

315  
TCL_OK
;

316 
	}
}

324 
SQLITE_TCLAPI
 
	$t˛_thªad_cﬁ«me
(

325 *
NŸU£d
,

326 
T˛_I¡îp
 *
öãΩ
,

327 
¨gc
,

328 c⁄° **
¨gv


330 
i
;

331 
n
;

333 if–
¨gc
!=3 ){

334 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

336  
TCL_ERROR
;

338 
i
 = 
	`∑r£_thªad_id
(
öãΩ
, 
¨gv
[1]);

339 if–
i
<0 )  
TCL_ERROR
;

340 if–!
thªad£t
[
i
].
busy
 ){

341 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

342  
TCL_ERROR
;

344 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[2], &
n
ËË 
TCL_ERROR
;

345 
	`thªad_waô
(&
thªad£t
[
i
]);

346 if–
n
<0 ||Ç>=
thªad£t
[
i
].
¨gc
 ){

347 
	`T˛_AµídResu…
(
öãΩ
, "columnÇumber out ofÑange", 0);

348  
TCL_ERROR
;

350 
	`T˛_AµídResu…
(
öãΩ
, 
thªad£t
[
i
].
cﬁv
[
n
], 0);

351  
TCL_OK
;

352 
	}
}

360 
SQLITE_TCLAPI
 
	$t˛_thªad_ªsu…
(

361 *
NŸU£d
,

362 
T˛_I¡îp
 *
öãΩ
,

363 
¨gc
,

364 c⁄° **
¨gv


366 
i
;

367 c⁄° *
zName
;

369 if–
¨gc
!=2 ){

370 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

372  
TCL_ERROR
;

374 
i
 = 
	`∑r£_thªad_id
(
öãΩ
, 
¨gv
[1]);

375 if–
i
<0 )  
TCL_ERROR
;

376 if–!
thªad£t
[
i
].
busy
 ){

377 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

378  
TCL_ERROR
;

380 
	`thªad_waô
(&
thªad£t
[
i
]);

381 
zName
 = 
	`sqlôe3EºName
(
thªad£t
[
i
].
rc
);

382 
	`T˛_AµídResu…
(
öãΩ
, 
zName
, 0);

383  
TCL_OK
;

384 
	}
}

392 
SQLITE_TCLAPI
 
	$t˛_thªad_îr‹
(

393 *
NŸU£d
,

394 
T˛_I¡îp
 *
öãΩ
,

395 
¨gc
,

396 c⁄° **
¨gv


398 
i
;

400 if–
¨gc
!=2 ){

401 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

403  
TCL_ERROR
;

405 
i
 = 
	`∑r£_thªad_id
(
öãΩ
, 
¨gv
[1]);

406 if–
i
<0 )  
TCL_ERROR
;

407 if–!
thªad£t
[
i
].
busy
 ){

408 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

409  
TCL_ERROR
;

411 
	`thªad_waô
(&
thªad£t
[
i
]);

412 
	`T˛_AµídResu…
(
öãΩ
, 
thªad£t
[
i
].
zEº
, 0);

413  
TCL_OK
;

414 
	}
}

419 
	$do_compûe
(
Thªad
 *
p
){

420 if–
p
->
db
==0 ){

421 
p
->
zEº
 =Ö->
zSèticEº
 = "no database is open";

422 
p
->
rc
 = 
SQLITE_ERROR
;

425 if–
p
->
pStmt
 ){

426 
	`sqlôe3_föÆize
(
p
->
pStmt
);

427 
p
->
pStmt
 = 0;

429 
p
->
rc
 = 
	`sqlôe3_¥ï¨e
’->
db
,Ö->
zArg
, -1, &p->
pStmt
, 0);

430 
	}
}

437 
SQLITE_TCLAPI
 
	$t˛_thªad_compûe
(

438 *
NŸU£d
,

439 
T˛_I¡îp
 *
öãΩ
,

440 
¨gc
,

441 c⁄° **
¨gv


443 
i
;

444 if–
¨gc
!=3 ){

445 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

447  
TCL_ERROR
;

449 
i
 = 
	`∑r£_thªad_id
(
öãΩ
, 
¨gv
[1]);

450 if–
i
<0 )  
TCL_ERROR
;

451 if–!
thªad£t
[
i
].
busy
 ){

452 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

453  
TCL_ERROR
;

455 
	`thªad_waô
(&
thªad£t
[
i
]);

456 
thªad£t
[
i
].
xOp
 = 
do_compûe
;

457 
	`sqlôe3_‰ì
(
thªad£t
[
i
].
zArg
);

458 
thªad£t
[
i
].
zArg
 = 
	`sqlôe3_m¥ötf
("%s", 
¨gv
[2]);

459 
thªad£t
[
i
].
›num
++;

460  
TCL_OK
;

461 
	}
}

466 
	$do_°ï
(
Thªad
 *
p
){

467 
i
;

468 if–
p
->
pStmt
==0 ){

469 
p
->
zEº
 =Ö->
zSèticEº
 = "no virtual machineávailable";

470 
p
->
rc
 = 
SQLITE_ERROR
;

473 
p
->
rc
 = 
	`sqlôe3_°ï
’->
pStmt
);

474 if–
p
->
rc
==
SQLITE_ROW
 ){

475 
p
->
¨gc
 = 
	`sqlôe3_cﬁumn_cou¡
’->
pStmt
);

476 
i
=0; i<
	`sqlôe3_d©a_cou¡
(
p
->
pStmt
); i++){

477 
p
->
¨gv
[
i
] = (*)
	`sqlôe3_cﬁumn_ãxt
’->
pStmt
, i);

479 
i
=0; i<
p
->
¨gc
; i++){

480 
p
->
cﬁv
[
i
] = 
	`sqlôe3_cﬁumn_«me
’->
pStmt
, i);

483 
	}
}

490 
SQLITE_TCLAPI
 
	$t˛_thªad_°ï
(

491 *
NŸU£d
,

492 
T˛_I¡îp
 *
öãΩ
,

493 
¨gc
,

494 c⁄° **
¨gv


496 
i
;

497 if–
¨gc
!=2 ){

498 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

500  
TCL_ERROR
;

502 
i
 = 
	`∑r£_thªad_id
(
öãΩ
, 
¨gv
[1]);

503 if–
i
<0 )  
TCL_ERROR
;

504 if–!
thªad£t
[
i
].
busy
 ){

505 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

506  
TCL_ERROR
;

508 
	`thªad_waô
(&
thªad£t
[
i
]);

509 
thªad£t
[
i
].
xOp
 = 
do_°ï
;

510 
thªad£t
[
i
].
›num
++;

511  
TCL_OK
;

512 
	}
}

517 
	$do_föÆize
(
Thªad
 *
p
){

518 if–
p
->
pStmt
==0 ){

519 
p
->
zEº
 =Ö->
zSèticEº
 = "no virtual machineávailable";

520 
p
->
rc
 = 
SQLITE_ERROR
;

523 
p
->
rc
 = 
	`sqlôe3_föÆize
’->
pStmt
);

524 
p
->
pStmt
 = 0;

525 
	}
}

532 
SQLITE_TCLAPI
 
	$t˛_thªad_föÆize
(

533 *
NŸU£d
,

534 
T˛_I¡îp
 *
öãΩ
,

535 
¨gc
,

536 c⁄° **
¨gv


538 
i
;

539 if–
¨gc
!=2 ){

540 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

542  
TCL_ERROR
;

544 
i
 = 
	`∑r£_thªad_id
(
öãΩ
, 
¨gv
[1]);

545 if–
i
<0 )  
TCL_ERROR
;

546 if–!
thªad£t
[
i
].
busy
 ){

547 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

548  
TCL_ERROR
;

550 
	`thªad_waô
(&
thªad£t
[
i
]);

551 
thªad£t
[
i
].
xOp
 = 
do_föÆize
;

552 
	`sqlôe3_‰ì
(
thªad£t
[
i
].
zArg
);

553 
thªad£t
[
i
].
zArg
 = 0;

554 
thªad£t
[
i
].
›num
++;

555  
TCL_OK
;

556 
	}
}

563 
SQLITE_TCLAPI
 
	$t˛_thªad_sw≠
(

564 *
NŸU£d
,

565 
T˛_I¡îp
 *
öãΩ
,

566 
¨gc
,

567 c⁄° **
¨gv


569 
i
, 
j
;

570 
sqlôe3
 *
ãmp
;

571 if–
¨gc
!=3 ){

572 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

574  
TCL_ERROR
;

576 
i
 = 
	`∑r£_thªad_id
(
öãΩ
, 
¨gv
[1]);

577 if–
i
<0 )  
TCL_ERROR
;

578 if–!
thªad£t
[
i
].
busy
 ){

579 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

580  
TCL_ERROR
;

582 
	`thªad_waô
(&
thªad£t
[
i
]);

583 
j
 = 
	`∑r£_thªad_id
(
öãΩ
, 
¨gv
[2]);

584 if–
j
<0 )  
TCL_ERROR
;

585 if–!
thªad£t
[
j
].
busy
 ){

586 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

587  
TCL_ERROR
;

589 
	`thªad_waô
(&
thªad£t
[
j
]);

590 
ãmp
 = 
thªad£t
[
i
].
db
;

591 
thªad£t
[
i
].
db
 =Åhªad£t[
j
].db;

592 
thªad£t
[
j
].
db
 = 
ãmp
;

593  
TCL_OK
;

594 
	}
}

603 
SQLITE_TCLAPI
 
	$t˛_thªad_db_gë
(

604 *
NŸU£d
,

605 
T˛_I¡îp
 *
öãΩ
,

606 
¨gc
,

607 c⁄° **
¨gv


609 
i
;

610 
zBuf
[100];

611 
	`sqlôe3Te°MakePoöãrSå
(
T˛_I¡îp
*, *, *);

612 if–
¨gc
!=2 ){

613 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

615  
TCL_ERROR
;

617 
i
 = 
	`∑r£_thªad_id
(
öãΩ
, 
¨gv
[1]);

618 if–
i
<0 )  
TCL_ERROR
;

619 if–!
thªad£t
[
i
].
busy
 ){

620 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

621  
TCL_ERROR
;

623 
	`thªad_waô
(&
thªad£t
[
i
]);

624 
	`sqlôe3Te°MakePoöãrSå
(
öãΩ
, 
zBuf
, 
thªad£t
[
i
].
db
);

625 
thªad£t
[
i
].
db
 = 0;

626 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, (*)0);

627  
TCL_OK
;

628 
	}
}

634 
SQLITE_TCLAPI
 
	$t˛_thªad_db_put
(

635 *
NŸU£d
,

636 
T˛_I¡îp
 *
öãΩ
,

637 
¨gc
,

638 c⁄° **
¨gv


640 
i
;

641 
	`sqlôe3Te°MakePoöãrSå
(
T˛_I¡îp
*, *, *);

642 *
	`sqlôe3Te°TextToPå
(const *);

643 if–
¨gc
!=3 ){

644 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

646  
TCL_ERROR
;

648 
i
 = 
	`∑r£_thªad_id
(
öãΩ
, 
¨gv
[1]);

649 if–
i
<0 )  
TCL_ERROR
;

650 if–!
thªad£t
[
i
].
busy
 ){

651 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

652  
TCL_ERROR
;

654 
	`thªad_waô
(&
thªad£t
[
i
]);

655 
	`as£π
–!
thªad£t
[
i
].
db
 );

656 
thªad£t
[
i
].
db
 = (
sqlôe3
*)
	`sqlôe3Te°TextToPå
(
¨gv
[2]);

657  
TCL_OK
;

658 
	}
}

666 
SQLITE_TCLAPI
 
	$t˛_thªad_°mt_gë
(

667 *
NŸU£d
,

668 
T˛_I¡îp
 *
öãΩ
,

669 
¨gc
,

670 c⁄° **
¨gv


672 
i
;

673 
zBuf
[100];

674 
	`sqlôe3Te°MakePoöãrSå
(
T˛_I¡îp
*, *, *);

675 if–
¨gc
!=2 ){

676 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

678  
TCL_ERROR
;

680 
i
 = 
	`∑r£_thªad_id
(
öãΩ
, 
¨gv
[1]);

681 if–
i
<0 )  
TCL_ERROR
;

682 if–!
thªad£t
[
i
].
busy
 ){

683 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

684  
TCL_ERROR
;

686 
	`thªad_waô
(&
thªad£t
[
i
]);

687 
	`sqlôe3Te°MakePoöãrSå
(
öãΩ
, 
zBuf
, 
thªad£t
[
i
].
pStmt
);

688 
thªad£t
[
i
].
pStmt
 = 0;

689 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, (*)0);

690  
TCL_OK
;

691 
	}
}

696 
	$Sqlôëe°4_Inô
(
T˛_I¡îp
 *
öãΩ
){

698 *
zName
;

699 
T˛_CmdProc
 *
xProc
;

700 } 
aCmd
[] = {

701 { "thªad_¸óã", (
T˛_CmdProc
*)
t˛_thªad_¸óã
 },

702 { "thªad_waô", (
T˛_CmdProc
*)
t˛_thªad_waô
 },

703 { "thªad_hÆt", (
T˛_CmdProc
*)
t˛_thªad_hÆt
 },

704 { "thªad_¨gc", (
T˛_CmdProc
*)
t˛_thªad_¨gc
 },

705 { "thªad_¨gv", (
T˛_CmdProc
*)
t˛_thªad_¨gv
 },

706 { "thªad_cﬁ«me", (
T˛_CmdProc
*)
t˛_thªad_cﬁ«me
 },

707 { "thªad_ªsu…", (
T˛_CmdProc
*)
t˛_thªad_ªsu…
 },

708 { "thªad_îr‹", (
T˛_CmdProc
*)
t˛_thªad_îr‹
 },

709 { "thªad_compûe", (
T˛_CmdProc
*)
t˛_thªad_compûe
 },

710 { "thªad_°ï", (
T˛_CmdProc
*)
t˛_thªad_°ï
 },

711 { "thªad_föÆize", (
T˛_CmdProc
*)
t˛_thªad_föÆize
 },

712 { "thªad_sw≠", (
T˛_CmdProc
*)
t˛_thªad_sw≠
 },

713 { "thªad_db_gë", (
T˛_CmdProc
*)
t˛_thªad_db_gë
 },

714 { "thªad_db_put", (
T˛_CmdProc
*)
t˛_thªad_db_put
 },

715 { "thªad_°mt_gë", (
T˛_CmdProc
*)
t˛_thªad_°mt_gë
 },

717 
i
;

719 
i
=0; i<(
aCmd
)/(aCmd[0]); i++){

720 
	`T˛_Cª©eComm™d
(
öãΩ
, 
aCmd
[
i
].
zName
,áCmd[i].
xProc
, 0, 0);

722  
TCL_OK
;

723 
	}
}

725 
	$Sqlôëe°4_Inô
(
T˛_I¡îp
 *
öãΩ
){  
TCL_OK
; 
	}
}

	@test5.c

18 
	~"sqlôeI¡.h
"

19 
	~"vdbeI¡.h
"

20 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

21 
	~"sqlôe_t˛.h
"

23 
	~"t˛.h
"

25 
	~<°dlib.h
>

26 
	~<°rög.h
>

33 
SQLITE_TCLAPI
 
	$bö¨ize
(

34 * 
˛õ¡D©a
,

35 
T˛_I¡îp
 *
öãΩ
,

36 
objc
,

37 
T˛_Obj
 *
CONST
 
objv
[]

39 
Àn
;

40 *
byãs
;

41 
T˛_Obj
 *
pRë
;

42 
	`as£π
(
objc
==2);

44 
byãs
 = 
	`T˛_GëSåögFromObj
(
objv
[1], &
Àn
);

45 
pRë
 = 
	`T˛_NewByãAºayObj
((
u8
*)
byãs
, 
Àn
+1);

46 
	`T˛_SëObjResu…
(
öãΩ
, 
pRë
);

47  
TCL_OK
;

48 
	}
}

61 
SQLITE_TCLAPI
 
	$ã°_vÆue_ovîhód
(

62 * 
˛õ¡D©a
,

63 
T˛_I¡îp
 *
öãΩ
,

64 
objc
,

65 
T˛_Obj
 *
CONST
 
objv
[]

67 
do_ˇŒs
;

68 
ª≥©_cou¡
;

69 
i
;

70 
Mem
 
vÆ
;

72 if–
objc
!=3 ){

73 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

74 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " <repeat-count> <do-calls>", 0);

75  
TCL_ERROR
;

78 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[1], &
ª≥©_cou¡
ËË 
TCL_ERROR
;

79 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
do_ˇŒs
ËË 
TCL_ERROR
;

81 
vÆ
.
Êags
 = 
MEM_Så
|
MEM_Tîm
|
MEM_Sètic
;

82 
vÆ
.
z
 = "hello world";

83 
vÆ
.
íc
 = 
SQLITE_UTF8
;

85 
i
=0; i<
ª≥©_cou¡
; i++){

86 if–
do_ˇŒs
 ){

87 
	`sqlôe3_vÆue_ãxt
(&
vÆ
);

91  
TCL_OK
;

92 
	}
}

94 
u8
 
	$«me_to_íc
(
T˛_I¡îp
 *
öãΩ
, 
T˛_Obj
 *
pObj
){

95 
	sEncName
 {

96 *
zName
;

97 
u8
 
íc
;

98 } 
í˙ames
[] = {

99 { "UTF8", 
SQLITE_UTF8
 },

100 { "UTF16LE", 
SQLITE_UTF16LE
 },

101 { "UTF16BE", 
SQLITE_UTF16BE
 },

102 { "UTF16", 
SQLITE_UTF16
 },

105 
EncName
 *
pEnc
;

106 *
z
 = 
	`T˛_GëSåög
(
pObj
);

107 
pEnc
=&
í˙ames
[0];ÖEnc->
zName
;ÖEnc++){

108 if–0==
	`sqlôe3SåICmp
(
z
, 
pEnc
->
zName
) ){

112 if–!
pEnc
->
íc
 ){

113 
	`T˛_AµídResu…
(
öãΩ
, "NÿsuchÉncodög: ", 
z
, 0);

115 if–
pEnc
->
íc
==
SQLITE_UTF16
 ){

116  
SQLITE_UTF16NATIVE
;

118  
pEnc
->
íc
;

119 
	}
}

125 
SQLITE_TCLAPI
 
	$ã°_å™¶©e
(

126 * 
˛õ¡D©a
,

127 
T˛_I¡îp
 *
öãΩ
,

128 
objc
,

129 
T˛_Obj
 *
CONST
 
objv
[]

131 
u8
 
íc_‰om
;

132 
u8
 
íc_to
;

133 
sqlôe3_vÆue
 *
pVÆ
;

135 *
z
;

136 
Àn
;

137 (*
xDñ
)(*
p
Ë
SQLITE_STATIC
;

139 if–
objc
!=4 && objc!=5 ){

140 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

141 
	`T˛_GëSåögFromObj
(
objv
[0], 0),

144  
TCL_ERROR
;

146 if–
objc
==5 ){

147 
xDñ
 = 
sqlôe3_‰ì
;

150 
íc_‰om
 = 
	`«me_to_íc
(
öãΩ
, 
objv
[2]);

151 if–!
íc_‰om
 )  
TCL_ERROR
;

152 
íc_to
 = 
	`«me_to_íc
(
öãΩ
, 
objv
[3]);

153 if–!
íc_to
 )  
TCL_ERROR
;

155 
pVÆ
 = 
	`sqlôe3VÆueNew
(0);

157 if–
íc_‰om
==
SQLITE_UTF8
 ){

158 
z
 = 
	`T˛_GëSåög
(
objv
[1]);

159 if–
objc
==5 ){

160 
z
 = 
	`sqlôe3_m¥ötf
("%s", z);

162 
	`sqlôe3VÆueSëSå
(
pVÆ
, -1, 
z
, 
íc_‰om
, 
xDñ
);

164 
z
 = (*)
	`T˛_GëByãAºayFromObj
(
objv
[1], &
Àn
);

165 if–
objc
==5 ){

166 *
zTmp
 = 
z
;

167 
z
 = 
	`sqlôe3_mÆloc
(
Àn
);

168 
	`mem˝y
(
z
, 
zTmp
, 
Àn
);

170 
	`sqlôe3VÆueSëSå
(
pVÆ
, -1, 
z
, 
íc_‰om
, 
xDñ
);

173 
z
 = (*)
	`sqlôe3VÆueText
(
pVÆ
, 
íc_to
);

174 
Àn
 = 
	`sqlôe3VÆueByãs
(
pVÆ
, 
íc_to
Ë+ (íc_to==
SQLITE_UTF8
?1:2);

175 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewByãAºayObj
((
u8
*)
z
, 
Àn
));

177 
	`sqlôe3VÆueFªe
(
pVÆ
);

179  
TCL_OK
;

180 
	}
}

188 
sqlôe3UtfSñfTe°
();

189 
SQLITE_TCLAPI
 
	$ã°_å™¶©e_£l·e°
(

190 * 
˛õ¡D©a
,

191 
T˛_I¡îp
 *
öãΩ
,

192 
objc
,

193 
T˛_Obj
 *
CONST
 
objv
[]

195 #i‚de‡
SQLITE_OMIT_UTF16


196 
	`sqlôe3UtfSñfTe°
();

198  
SQLITE_OK
;

199 
	}
}

205 
	$Sqlôëe°5_Inô
(
T˛_I¡îp
 *
öãΩ
){

207 *
zName
;

208 
T˛_ObjCmdProc
 *
xProc
;

209 } 
aCmd
[] = {

210 { "bö¨ize", (
T˛_ObjCmdProc
*)
bö¨ize
 },

211 { "ã°_vÆue_ovîhód", (
T˛_ObjCmdProc
*)
ã°_vÆue_ovîhód
 },

212 { "ã°_å™¶©e", (
T˛_ObjCmdProc
*)
ã°_å™¶©e
 },

213 { "å™¶©e_£l·e°", (
T˛_ObjCmdProc
*)
ã°_å™¶©e_£l·e°
},

215 
i
;

216 
i
=0; i<(
aCmd
)/(aCmd[0]); i++){

217 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
aCmd
[
i
].
zName
,áCmd[i].
xProc
, 0, 0);

219  
SQLITE_OK
;

220 
	}
}

	@test6.c

17 #i‡
SQLITE_TEST


18 
	~"sqlôeI¡.h
"

19 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

20 
	~"sqlôe_t˛.h
"

22 
	~"t˛.h
"

25 #i‚de‡
SQLITE_OMIT_DISKIO


29 
CøshFûe
 
	tCøshFûe
;

30 
CøshGlobÆ
 
	tCøshGlobÆ
;

31 
WrôeBuf„r
 
	tWrôeBuf„r
;

121 
	sWrôeBuf„r
 {

122 
i64
 
	miOff£t
;

123 
	mnBuf
;

124 
u8
 *
	mzBuf
;

125 
CøshFûe
 *
	mpFûe
;

127 
WrôeBuf„r
 *
	mpNext
;

130 
	sCøshFûe
 {

131 c⁄° 
sqlôe3_io_mëhods
 *
	mpMëhod
;

132 
sqlôe3_fûe
 *
	mpRólFûe
;

133 *
	mzName
;

134 
	mÊags
;

140 
u8
 *
	mzD©a
;

141 
	mnD©a
;

142 
i64
 
	miSize
;

145 
	sCøshGlobÆ
 {

146 
WrôeBuf„r
 *
	mpWrôeLi°
;

147 
WrôeBuf„r
 *
	mpWrôeLi°End
;

149 
	miSe˘‹Size
;

150 
	miDevi˚Ch¨a˘îi°ics
;

152 
	miCøsh
;

153 
	mzCøshFûe
[500];

156 
CøshGlobÆ
 
	gg
 = {0, 0, 
SQLITE_DEFAULT_SECTOR_SIZE
, 0, 0};

161 
	gsqlôe3CøshTe°E«bÀ
 = 0;

163 *
	$¸ash_mÆloc
(
nByã
){

164  (*)
	`T˛_AŒoc
((
size_t
)
nByã
);

165 
	}
}

166 
	$¸ash_‰ì
(*
p
){

167 
	`T˛_Fªe
(
p
);

168 
	}
}

169 *
	$¸ash_ªÆloc
(*
p
, 
n
){

170  (*)
	`T˛_RóŒoc
(
p
, (
size_t
)
n
);

171 
	}
}

177 
	$wrôeDbFûe
(
CøshFûe
 *
p
, 
u8
 *
z
, 
i64
 
iAmt
, i64 
iOff
){

178 
rc
 = 
SQLITE_OK
;

179 
iSkù
 = 0;

180 if–(
iAmt
-
iSkù
)>0 ){

181 
rc
 = 
	`sqlôe3OsWrôe
(
p
->
pRólFûe
, &
z
[
iSkù
], ()(
iAmt
-iSkù), 
iOff
+iSkip);

183  
rc
;

184 
	}
}

190 
	$wrôeLi°Sync
(
CøshFûe
 *
pFûe
, 
isCøsh
){

191 
rc
 = 
SQLITE_OK
;

192 
iDc
 = 
g
.
iDevi˚Ch¨a˘îi°ics
;

194 
WrôeBuf„r
 *
pWrôe
;

195 
WrôeBuf„r
 **
µPå
;

204 
WrôeBuf„r
 *
pFöÆ
 = 0;

205 if–!
isCøsh
 ){

206 
pWrôe
=
g
.
pWrôeLi°
;ÖWrôe;ÖWrôeıWrôe->
pNext
){

207 if–
pWrôe
->
pFûe
==pFile ){

208 
pFöÆ
 = 
pWrôe
;

211 }if–
iDc
&(
SQLITE_IOCAP_SEQUENTIAL
|
SQLITE_IOCAP_SAFE_APPEND
) ){

212 
nWrôe
 = 0;

213 
iFöÆ
;

214 
pWrôe
=
g
.
pWrôeLi°
;ÖWrôe;ÖWrôeıWrôe->
pNext
Ë
nWrôe
++;

215 
	`sqlôe3_øndom√ss
((), &
iFöÆ
);

216 
iFöÆ
 = ((iFöÆ<0)?-1*iFöÆ:iFöÆ)%
nWrôe
;

217 
pWrôe
=
g
.
pWrôeLi°
; 
iFöÆ
>0;ÖWrôeıWrôe->
pNext
) iFinal--;

218 
pFöÆ
 = 
pWrôe
;

221 #ifde‡
TRACE_CRASHTEST


222 if–
pFûe
 ){

223 
	`¥ötf
("Syn¯%†(i†%†¸ash)\n", 
pFûe
->
zName
, (
isCøsh
?"a":"notá"));

227 
µPå
 = &
g
.
pWrôeLi°
;

228 
pWrôe
=*
µPå
; 
rc
==
SQLITE_OK
 &&ÖWrite;ÖWrite=*ppPtr){

229 
sqlôe3_fûe
 *
pRólFûe
 = 
pWrôe
->
pFûe
->pRealFile;

235 
eA˘i⁄
 = 0;

236 if–!
isCøsh
 ){

237 
eA˘i⁄
 = 2;

238 if–(
pWrôe
->
pFûe
=ıFûê|| 
iDc
&
SQLITE_IOCAP_SEQUENTIAL
) ){

239 
eA˘i⁄
 = 1;

242 
øndom
;

243 
	`sqlôe3_øndom√ss
(1, &
øndom
);

248 if–(
iDc
&
SQLITE_IOCAP_ATOMIC
Ë|| (
pWrôe
->
zBuf
==0) ){

249 
øndom
 &= 0x01;

256 if–(
iDc
&
SQLITE_IOCAP_SEQUENTIAL
 && 
pWrôe
!=
pFöÆ
) ){

257 
øndom
 = 0;

264 if–
iDc
&
SQLITE_IOCAP_SAFE_APPEND
 && 
pWrôe
->
zBuf
 ){

265 
i64
 
iSize
;

266 
	`sqlôe3OsFûeSize
(
pRólFûe
, &
iSize
);

267 if–
iSize
==
pWrôe
->
iOff£t
 ){

268 
øndom
 = 0;

272 if–(
øndom
&0x06)==0x06 ){

273 
eA˘i⁄
 = 3;

275 
eA˘i⁄
 = ((
øndom
&0x01)?2:1);

279  
eA˘i⁄
 ){

281 if–
pWrôe
->
zBuf
 ){

282 
rc
 = 
	`wrôeDbFûe
(

283 
pWrôe
->
pFûe
,ÖWrôe->
zBuf
,ÖWrôe->
nBuf
,ÖWrôe->
iOff£t


286 
rc
 = 
	`sqlôe3OsTrunˇã
(
pRólFûe
, 
pWrôe
->
iOff£t
);

288 *
µPå
 = 
pWrôe
->
pNext
;

289 #ifde‡
TRACE_CRASHTEST


290 if–
isCøsh
 ){

291 
	`¥ötf
("Writing %d bytes @ %d (%s)\n",

292 
pWrôe
->
nBuf
, (ÌWrôe->
iOff£t
,ÖWrôe->
pFûe
->
zName


296 
	`¸ash_‰ì
(
pWrôe
);

300 
µPå
 = &
pWrôe
->
pNext
;

301 #ifde‡
TRACE_CRASHTEST


302 if–
isCøsh
 ){

303 
	`¥ötf
("Omiting %d bytes @ %d (%s)\n",

304 
pWrôe
->
nBuf
, (ÌWrôe->
iOff£t
,ÖWrôe->
pFûe
->
zName


311 
u8
 *
zG¨bage
;

312 
iFú°
 = ()(
pWrôe
->
iOff£t
/
g
.
iSe˘‹Size
);

313 
iLa°
 = ()((
pWrôe
->
iOff£t
+pWrôe->
nBuf
-1)/
g
.
iSe˘‹Size
);

315 
	`as£π
(
pWrôe
->
zBuf
);

317 #ifde‡
TRACE_CRASHTEST


318 
	`¥ötf
("Trashing %d sectors @ %lld (sector %d) (%s)\n",

319 1+
iLa°
-
iFú°
, 
pWrôe
->
iOff£t
, iFú°,ÖWrôe->
pFûe
->
zName


323 
zG¨bage
 = 
	`¸ash_mÆloc
(
g
.
iSe˘‹Size
);

324 if–
zG¨bage
 ){

325 
sqlôe3_öt64
 
i
;

326 
i
=
iFú°
; 
rc
==
SQLITE_OK
 && i<=
iLa°
; i++){

327 
	`sqlôe3_øndom√ss
(
g
.
iSe˘‹Size
, 
zG¨bage
);

328 
rc
 = 
	`wrôeDbFûe
(

329 
pWrôe
->
pFûe
, 
zG¨bage
, 
g
.
iSe˘‹Size
, 
i
*g.iSectorSize

332 
	`¸ash_‰ì
(
zG¨bage
);

334 
rc
 = 
SQLITE_NOMEM
;

337 
µPå
 = &
pWrôe
->
pNext
;

342 
	`as£π
(!"Cannot happen");

345 if–
pWrôe
==
pFöÆ
 ) ;

348 if–
rc
==
SQLITE_OK
 && 
isCøsh
 ){

349 
	`exô
(-1);

352 
pWrôe
=
g
.
pWrôeLi°
;ÖWrôê&&ÖWrôe->
pNext
;ÖWrite=pWrite->pNext);

353 
g
.
pWrôeLi°End
 = 
pWrôe
;

355  
rc
;

356 
	}
}

361 
	$wrôeLi°Aµíd
(

362 
sqlôe3_fûe
 *
pFûe
,

363 
sqlôe3_öt64
 
iOff£t
,

364 c⁄° 
u8
 *
zBuf
,

365 
nBuf


367 
WrôeBuf„r
 *
pNew
;

369 
	`as£π
((
zBuf
 && 
nBuf
) || (!nBuf && !zBuf));

371 
pNew
 = (
WrôeBuf„r
 *)
	`¸ash_mÆloc
((WrôeBuf„rË+ 
nBuf
);

372 if–
pNew
==0 ){

373 
	`Ârötf
(
°dîr
, "out of memory inÅhe crash simulator\n");

375 
	`mem£t
(
pNew
, 0, (
WrôeBuf„r
)+
nBuf
);

376 
pNew
->
iOff£t
 = iOffset;

377 
pNew
->
nBuf
 =ÇBuf;

378 
pNew
->
pFûe
 = (
CøshFûe
 *)pFile;

379 if–
zBuf
 ){

380 
pNew
->
zBuf
 = (
u8
 *)&pNew[1];

381 
	`mem˝y
(
pNew
->
zBuf
, zBuf, 
nBuf
);

384 if–
g
.
pWrôeLi°
 ){

385 
	`as£π
(
g
.
pWrôeLi°End
);

386 
g
.
pWrôeLi°End
->
pNext
 = 
pNew
;

388 
g
.
pWrôeLi°
 = 
pNew
;

390 
g
.
pWrôeLi°End
 = 
pNew
;

392  
SQLITE_OK
;

393 
	}
}

398 
	$cfClo£
(
sqlôe3_fûe
 *
pFûe
){

399 
CøshFûe
 *
pCøsh
 = (CøshFûê*)
pFûe
;

400 
	`wrôeLi°Sync
(
pCøsh
, 0);

401 
	`sqlôe3OsClo£
(
pCøsh
->
pRólFûe
);

402  
SQLITE_OK
;

403 
	}
}

408 
	$cfRód
(

409 
sqlôe3_fûe
 *
pFûe
,

410 *
zBuf
,

411 
iAmt
,

412 
sqlôe_öt64
 
iOf°


414 
CøshFûe
 *
pCøsh
 = (CøshFûê*)
pFûe
;

415 
nC›y
 = ()
	`MIN
((
i64
)
iAmt
, (
pCøsh
->
iSize
 - 
iOf°
));

417 if–
nC›y
>0 ){

418 
	`mem˝y
(
zBuf
, &
pCøsh
->
zD©a
[
iOf°
], 
nC›y
);

422 if–
nC›y
<
iAmt
 ){

423  
SQLITE_IOERR_SHORT_READ
;

426  
SQLITE_OK
;

427 
	}
}

432 
	$cfWrôe
(

433 
sqlôe3_fûe
 *
pFûe
,

434 c⁄° *
zBuf
,

435 
iAmt
,

436 
sqlôe_öt64
 
iOf°


438 
CøshFûe
 *
pCøsh
 = (CøshFûê*)
pFûe
;

439 if–
iAmt
+
iOf°
>
pCøsh
->
iSize
 ){

440 
pCøsh
->
iSize
 = ()(
iAmt
+
iOf°
);

442  
pCøsh
->
iSize
>pCøsh->
nD©a
 ){

443 
u8
 *
zNew
;

444 
nNew
 = (
pCøsh
->
nD©a
*2) + 4096;

445 
zNew
 = 
	`¸ash_ªÆloc
(
pCøsh
->
zD©a
, 
nNew
);

446 if–!
zNew
 ){

447  
SQLITE_NOMEM
;

449 
	`mem£t
(&
zNew
[
pCøsh
->
nD©a
], 0, 
nNew
-pCrash->nData);

450 
pCøsh
->
nD©a
 = 
nNew
;

451 
pCøsh
->
zD©a
 = 
zNew
;

453 
	`mem˝y
(&
pCøsh
->
zD©a
[
iOf°
], 
zBuf
, 
iAmt
);

454  
	`wrôeLi°Aµíd
(
pFûe
, 
iOf°
, 
zBuf
, 
iAmt
);

455 
	}
}

460 
	$cfTrunˇã
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe_öt64
 
size
){

461 
CøshFûe
 *
pCøsh
 = (CøshFûê*)
pFûe
;

462 
	`as£π
(
size
>=0);

463 if–
pCøsh
->
iSize
>
size
 ){

464 
pCøsh
->
iSize
 = ()
size
;

466  
	`wrôeLi°Aµíd
(
pFûe
, 
size
, 0, 0);

467 
	}
}

472 
	$cfSync
(
sqlôe3_fûe
 *
pFûe
, 
Êags
){

473 
CøshFûe
 *
pCøsh
 = (CøshFûê*)
pFûe
;

474 
isCøsh
 = 0;

476 c⁄° *
zName
 = 
pCøsh
->zName;

477 c⁄° *
zCøshFûe
 = 
g
.zCrashFile;

478 
nName
 = ()
	`°æí
(
zName
);

479 
nCøshFûe
 = ()
	`°æí
(
zCøshFûe
);

481 if–
nCøshFûe
>0 && 
zCøshFûe
[nCrashFile-1]=='*' ){

482 
nCøshFûe
--;

483 if–
nName
>
nCøshFûe
 )ÇName =ÇCrashFile;

486 #ifde‡
TRACE_CRASHTEST


487 
	`¥ötf
("cfSync():ÇName = %d,ÇCrashFile = %d, zName = %s, zCrashFile = %s\n",

488 
nName
, 
nCøshFûe
, 
zName
, 
zCøshFûe
);

491 if–
nName
==
nCøshFûe
 && 0==
	`memcmp
(
zName
, 
zCøshFûe
,ÇName) ){

492 #ifde‡
TRACE_CRASHTEST


493 
	`¥ötf
("cfSync():Çamêm©ched, g.iCøsh = %d\n", 
g
.
iCøsh
);

495 if–(--
g
.
iCøsh
)==0 ) 
isCøsh
 = 1;

498  
	`wrôeLi°Sync
(
pCøsh
, 
isCøsh
);

499 
	}
}

504 
	$cfFûeSize
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe_öt64
 *
pSize
){

505 
CøshFûe
 *
pCøsh
 = (CøshFûê*)
pFûe
;

506 *
pSize
 = (
i64
)
pCøsh
->
iSize
;

507  
SQLITE_OK
;

508 
	}
}

513 
	$cfLock
(
sqlôe3_fûe
 *
pFûe
, 
eLock
){

514  
	`sqlôe3OsLock
(((
CøshFûe
 *)
pFûe
)->
pRólFûe
, 
eLock
);

515 
	}
}

516 
	$cfU∆ock
(
sqlôe3_fûe
 *
pFûe
, 
eLock
){

517  
	`sqlôe3OsU∆ock
(((
CøshFûe
 *)
pFûe
)->
pRólFûe
, 
eLock
);

518 
	}
}

519 
	$cfCheckRe£rvedLock
(
sqlôe3_fûe
 *
pFûe
, *
pResOut
){

520  
	`sqlôe3OsCheckRe£rvedLock
(((
CøshFûe
 *)
pFûe
)->
pRólFûe
, 
pResOut
);

521 
	}
}

522 
	$cfFûeC⁄åﬁ
(
sqlôe3_fûe
 *
pFûe
, 
›
, *
pArg
){

523 if–
›
==
SQLITE_FCNTL_SIZE_HINT
 ){

524 
CøshFûe
 *
pCøsh
 = (CøshFûê*)
pFûe
;

525 
i64
 
nByã
 = *(i64 *)
pArg
;

526 if–
nByã
>
pCøsh
->
iSize
 ){

527 if–
SQLITE_OK
==
	`wrôeLi°Aµíd
(
pFûe
, 
nByã
, 0, 0) ){

528 
pCøsh
->
iSize
 = ()
nByã
;

531  
SQLITE_OK
;

533  
	`sqlôe3OsFûeC⁄åﬁ
(((
CøshFûe
 *)
pFûe
)->
pRólFûe
, 
›
, 
pArg
);

534 
	}
}

541 
	$cfSe˘‹Size
(
sqlôe3_fûe
 *
pFûe
){

542  
g
.
iSe˘‹Size
;

543 
	}
}

544 
	$cfDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
 *
pFûe
){

545  
g
.
iDevi˚Ch¨a˘îi°ics
;

546 
	}
}

551 
	$cfShmLock
(
sqlôe3_fûe
 *
pFûe
, 
of°
, 
n
, 
Êags
){

552  
	`sqlôe3OsShmLock
(((
CøshFûe
*)
pFûe
)->
pRólFûe
, 
of°
, 
n
, 
Êags
);

553 
	}
}

554 
	$cfShmB¨rõr
(
sqlôe3_fûe
 *
pFûe
){

555 
	`sqlôe3OsShmB¨rõr
(((
CøshFûe
*)
pFûe
)->
pRólFûe
);

556 
	}
}

557 
	$cfShmUnm≠
(
sqlôe3_fûe
 *
pFûe
, 
dñFœg
){

558  
	`sqlôe3OsShmUnm≠
(((
CøshFûe
*)
pFûe
)->
pRólFûe
, 
dñFœg
);

559 
	}
}

560 
	$cfShmM≠
(

561 
sqlôe3_fûe
 *
pFûe
,

562 
iRegi⁄
,

563 
sz
,

564 
w
,

565 vﬁ©ûê**
µ


567  
	`sqlôe3OsShmM≠
(((
CøshFûe
*)
pFûe
)->
pRólFûe
, 
iRegi⁄
, 
sz
, 
w
, 
µ
);

568 
	}
}

570 c⁄° 
sqlôe3_io_mëhods
 
	gCøshFûeVèb
 = {

572 
cfClo£
,

573 
cfRód
,

574 
cfWrôe
,

575 
cfTrunˇã
,

576 
cfSync
,

577 
cfFûeSize
,

578 
cfLock
,

579 
cfU∆ock
,

580 
cfCheckRe£rvedLock
,

581 
cfFûeC⁄åﬁ
,

582 
cfSe˘‹Size
,

583 
cfDevi˚Ch¨a˘îi°ics
,

584 
cfShmM≠
,

585 
cfShmLock
,

586 
cfShmB¨rõr
,

587 
cfShmUnm≠


593 
	s¸ashAµD©a
 {

594 
sqlôe3_vfs
 *
	mpOrig
;

606 
	$cfO≥n
(

607 
sqlôe3_vfs
 *
pCfVfs
,

608 c⁄° *
zName
,

609 
sqlôe3_fûe
 *
pFûe
,

610 
Êags
,

611 *
pOutFœgs


613 
sqlôe3_vfs
 *
pVfs
 = (sqlôe3_vf†*)
pCfVfs
->
pAµD©a
;

614 
rc
;

615 
CøshFûe
 *
pWøµî
 = (CøshFûê*)
pFûe
;

616 
sqlôe3_fûe
 *
pRól
 = (sqlôe3_fûe*)&
pWøµî
[1];

618 
	`mem£t
(
pWøµî
, 0, (
CøshFûe
));

619 
rc
 = 
	`sqlôe3OsO≥n
(
pVfs
, 
zName
, 
pRól
, 
Êags
, 
pOutFœgs
);

621 if–
rc
==
SQLITE_OK
 ){

622 
i64
 
iSize
;

623 
pWøµî
->
pMëhod
 = &
CøshFûeVèb
;

624 
pWøµî
->
zName
 = (*)zName;

625 
pWøµî
->
pRólFûe
 = 
pRól
;

626 
rc
 = 
	`sqlôe3OsFûeSize
(
pRól
, &
iSize
);

627 
pWøµî
->
iSize
 = ()iSize;

628 
pWøµî
->
Êags
 = flags;

630 if–
rc
==
SQLITE_OK
 ){

631 
pWøµî
->
nD©a
 = ()(4096 +ÖWøµî->
iSize
);

632 
pWøµî
->
zD©a
 = 
	`¸ash_mÆloc
’Wøµî->
nD©a
);

633 if–
pWøµî
->
zD©a
 ){

642 
i64
 
iOff
;

644 
	`mem£t
(
pWøµî
->
zD©a
, 0,ÖWøµî->
nD©a
);

645 
iOff
=0; iOff<
pWøµî
->
iSize
; iOff += 512){

646 
nRód
 = ()(
pWøµî
->
iSize
 - 
iOff
);

647 if–
nRód
>512 )ÇRead = 512;

648 
rc
 = 
	`sqlôe3OsRód
(
pRól
, &
pWøµî
->
zD©a
[
iOff
], 
nRód
, iOff);

651 
rc
 = 
SQLITE_NOMEM
;

654 if–
rc
!=
SQLITE_OK
 && 
pWøµî
->
pMëhod
 ){

655 
	`sqlôe3OsClo£
(
pFûe
);

657  
rc
;

658 
	}
}

660 
	$cfDñëe
(
sqlôe3_vfs
 *
pCfVfs
, c⁄° *
zP©h
, 
dúSync
){

661 
sqlôe3_vfs
 *
pVfs
 = (sqlôe3_vf†*)
pCfVfs
->
pAµD©a
;

662  
pVfs
->
	`xDñëe
’Vfs, 
zP©h
, 
dúSync
);

663 
	}
}

664 
	$cfAc˚ss
(

665 
sqlôe3_vfs
 *
pCfVfs
,

666 c⁄° *
zP©h
,

667 
Êags
,

668 *
pResOut


670 
sqlôe3_vfs
 *
pVfs
 = (sqlôe3_vf†*)
pCfVfs
->
pAµD©a
;

671  
pVfs
->
	`xAc˚ss
’Vfs, 
zP©h
, 
Êags
, 
pResOut
);

672 
	}
}

673 
	$cfFuŒP©h«me
(

674 
sqlôe3_vfs
 *
pCfVfs
,

675 c⁄° *
zP©h
,

676 
nP©hOut
,

677 *
zP©hOut


679 
sqlôe3_vfs
 *
pVfs
 = (sqlôe3_vf†*)
pCfVfs
->
pAµD©a
;

680  
pVfs
->
	`xFuŒP©h«me
’Vfs, 
zP©h
, 
nP©hOut
, 
zP©hOut
);

681 
	}
}

682 *
	$cfDlO≥n
(
sqlôe3_vfs
 *
pCfVfs
, c⁄° *
zP©h
){

683 
sqlôe3_vfs
 *
pVfs
 = (sqlôe3_vf†*)
pCfVfs
->
pAµD©a
;

684  
pVfs
->
	`xDlO≥n
’Vfs, 
zP©h
);

685 
	}
}

686 
	$cfDlEº‹
(
sqlôe3_vfs
 *
pCfVfs
, 
nByã
, *
zEºMsg
){

687 
sqlôe3_vfs
 *
pVfs
 = (sqlôe3_vf†*)
pCfVfs
->
pAµD©a
;

688 
pVfs
->
	`xDlEº‹
’Vfs, 
nByã
, 
zEºMsg
);

689 
	}
}

690 (*
	$cfDlSym
(
sqlôe3_vfs
 *
pCfVfs
, *
pH
, c⁄° *
zSym
))(){

691 
sqlôe3_vfs
 *
pVfs
 = (sqlôe3_vf†*)
pCfVfs
->
pAµD©a
;

692  
pVfs
->
	`xDlSym
’Vfs, 
pH
, 
zSym
);

693 
	}
}

694 
	$cfDlClo£
(
sqlôe3_vfs
 *
pCfVfs
, *
pH™dÀ
){

695 
sqlôe3_vfs
 *
pVfs
 = (sqlôe3_vf†*)
pCfVfs
->
pAµD©a
;

696 
pVfs
->
	`xDlClo£
’Vfs, 
pH™dÀ
);

697 
	}
}

698 
	$cfR™dom√ss
(
sqlôe3_vfs
 *
pCfVfs
, 
nByã
, *
zBufOut
){

699 
sqlôe3_vfs
 *
pVfs
 = (sqlôe3_vf†*)
pCfVfs
->
pAµD©a
;

700  
pVfs
->
	`xR™dom√ss
’Vfs, 
nByã
, 
zBufOut
);

701 
	}
}

702 
	$cfSÀï
(
sqlôe3_vfs
 *
pCfVfs
, 
nMi¸o
){

703 
sqlôe3_vfs
 *
pVfs
 = (sqlôe3_vf†*)
pCfVfs
->
pAµD©a
;

704  
pVfs
->
	`xSÀï
’Vfs, 
nMi¸o
);

705 
	}
}

706 
	$cfCuºítTime
(
sqlôe3_vfs
 *
pCfVfs
, *
pTimeOut
){

707 
sqlôe3_vfs
 *
pVfs
 = (sqlôe3_vf†*)
pCfVfs
->
pAµD©a
;

708  
pVfs
->
	`xCuºítTime
’Vfs, 
pTimeOut
);

709 
	}
}

710 
	$cfGëLa°Eº‹
(
sqlôe3_vfs
 *
pCfVfs
, 
n
, *
z
){

711 
sqlôe3_vfs
 *
pVfs
 = (sqlôe3_vf†*)
pCfVfs
->
pAµD©a
;

712  
pVfs
->
	`xGëLa°Eº‹
’Vfs, 
n
, 
z
);

713 
	}
}

715 
	$¥o˚ssDevSymArgs
(

716 
T˛_I¡îp
 *
öãΩ
,

717 
objc
,

718 
T˛_Obj
 *
CONST
 
objv
[],

719 *
piDevi˚Ch¨
,

720 *
piSe˘‹Size


722 
	sDevi˚Fœg
 {

723 *
zName
;

724 
iVÆue
;

725 } 
aFœg
[] = {

726 { "©omic", 
SQLITE_IOCAP_ATOMIC
 },

727 { "©omic512", 
SQLITE_IOCAP_ATOMIC512
 },

728 { "©omic1k", 
SQLITE_IOCAP_ATOMIC1K
 },

729 { "©omic2k", 
SQLITE_IOCAP_ATOMIC2K
 },

730 { "©omic4k", 
SQLITE_IOCAP_ATOMIC4K
 },

731 { "©omic8k", 
SQLITE_IOCAP_ATOMIC8K
 },

732 { "©omic16k", 
SQLITE_IOCAP_ATOMIC16K
 },

733 { "©omic32k", 
SQLITE_IOCAP_ATOMIC32K
 },

734 { "©omic64k", 
SQLITE_IOCAP_ATOMIC64K
 },

735 { "£quítül", 
SQLITE_IOCAP_SEQUENTIAL
 },

736 { "ß„_≠≥nd", 
SQLITE_IOCAP_SAFE_APPEND
 },

737 { "powîß„_ovîwrôe", 
SQLITE_IOCAP_POWERSAFE_OVERWRITE
 },

741 
i
;

742 
iDc
 = 0;

743 
iSe˘‹Size
 = 0;

744 
£tSe˘‹size
 = 0;

745 
£tDevi˚Ch¨
 = 0;

747 
i
=0; i<
objc
; i+=2){

748 
nO±
;

749 *
zO±
 = 
	`T˛_GëSåögFromObj
(
objv
[
i
], &
nO±
);

751 if–(
nO±
>11 ||ÇO±<2 || 
	`°∫cmp
("-£˘‹size", 
zO±
,ÇOpt))

752 && (
nO±
>16 ||ÇO±<2 || 
	`°∫cmp
("-ch¨a˘îi°ics", 
zO±
,ÇOpt))

754 
	`T˛_AµídResu…
(
öãΩ
,

755 "Bad o±i⁄: \"", 
zO±
,

758  
TCL_ERROR
;

760 if–
i
==
objc
-1 ){

761 
	`T˛_AµídResu…
(
öãΩ
, "O±i⁄Ñequúe†™árgumít: \"", 
zO±
, "\"",0);

762  
TCL_ERROR
;

765 if–
zO±
[1]=='s' ){

766 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[
i
+1], &
iSe˘‹Size
) ){

767  
TCL_ERROR
;

769 
£tSe˘‹size
 = 1;

771 
j
;

772 
T˛_Obj
 **
≠Obj
;

773 
nObj
;

774 if–
	`T˛_Li°ObjGëEÀmíts
(
öãΩ
, 
objv
[
i
+1], &
nObj
, &
≠Obj
) ){

775  
TCL_ERROR
;

777 
j
=0; j<
nObj
; j++){

778 
rc
;

779 
iChoi˚
;

780 
T˛_Obj
 *
pFœg
 = 
	`T˛_Du∂iˇãObj
(
≠Obj
[
j
]);

781 
	`T˛_In¸RefCou¡
(
pFœg
);

782 
	`T˛_UtfToLowî
(
	`T˛_GëSåög
(
pFœg
));

784 
rc
 = 
	`T˛_GëIndexFromObjSåu˘
(

785 
öãΩ
, 
pFœg
, 
aFœg
, ◊Fœg[0]), "nÿsuch fœg", 0, &
iChoi˚


787 
	`T˛_De¸RefCou¡
(
pFœg
);

788 if–
rc
 ){

789  
TCL_ERROR
;

792 
iDc
 |
aFœg
[
iChoi˚
].
iVÆue
;

794 
£tDevi˚Ch¨
 = 1;

798 if–
£tDevi˚Ch¨
 ){

799 *
piDevi˚Ch¨
 = 
iDc
;

801 if–
£tSe˘‹size
 ){

802 *
piSe˘‹Size
 = 
iSe˘‹Size
;

805  
TCL_OK
;

806 
	}
}

814 
SQLITE_TCLAPI
 
	$¸ashNowCmd
(

815 * 
˛õ¡D©a
,

816 
T˛_I¡îp
 *
öãΩ
,

817 
objc
,

818 
T˛_Obj
 *
CONST
 
objv
[]

820 if–
objc
!=1 ){

821 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

822  
TCL_ERROR
;

824 
	`wrôeLi°Sync
(0, 1);

825 
	`as£π
( 0 );

826  
TCL_OK
;

827 
	}
}

835 
SQLITE_TCLAPI
 
	$¸ashE«bÀCmd
(

836 * 
˛õ¡D©a
,

837 
T˛_I¡îp
 *
öãΩ
,

838 
objc
,

839 
T˛_Obj
 *
CONST
 
objv
[]

841 
isE«bÀ
;

842 
sqlôe3_vfs
 
¸ashVfs
 = {

850 
cfO≥n
,

851 
cfDñëe
,

852 
cfAc˚ss
,

853 
cfFuŒP©h«me
,

854 
cfDlO≥n
,

855 
cfDlEº‹
,

856 
cfDlSym
,

857 
cfDlClo£
,

858 
cfR™dom√ss
,

859 
cfSÀï
,

860 
cfCuºítTime
,

861 
cfGëLa°Eº‹
,

865 if–
objc
!=2 ){

866 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "ENABLE");

867  
TCL_ERROR
;

870 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[1], &
isE«bÀ
) ){

871  
TCL_ERROR
;

874 if–(
isE«bÀ
 && 
¸ashVfs
.
pAµD©a
) || (!isEnable && !crashVfs.pAppData) ){

875  
TCL_OK
;

878 if–
¸ashVfs
.
pAµD©a
==0 ){

879 
sqlôe3_vfs
 *
pOrigöÆVfs
 = 
	`sqlôe3_vfs_föd
(0);

880 
¸ashVfs
.
mxP©h«me
 = 
pOrigöÆVfs
->mxPathname;

881 
¸ashVfs
.
pAµD©a
 = (*)
pOrigöÆVfs
;

882 
¸ashVfs
.
szOsFûe
 = (
CøshFûe
Ë+ 
pOrigöÆVfs
->szOsFile;

883 
	`sqlôe3_vfs_ªgi°î
(&
¸ashVfs
, 0);

885 
¸ashVfs
.
pAµD©a
 = 0;

886 
	`sqlôe3_vfs_uƒegi°î
(&
¸ashVfs
);

889  
TCL_OK
;

890 
	}
}

910 
SQLITE_TCLAPI
 
	$¸ashP¨amsObjCmd
(

911 * 
˛õ¡D©a
,

912 
T˛_I¡îp
 *
öãΩ
,

913 
objc
,

914 
T˛_Obj
 *
CONST
 
objv
[]

916 
iDñay
;

917 c⁄° *
zCøshFûe
;

918 
nCøshFûe
, 
iDc
, 
iSe˘‹Size
;

920 
iDc
 = -1;

921 
iSe˘‹Size
 = -1;

923 if–
objc
<3 ){

924 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "?OPTIONS? DELAY CRASHFILE");

925 
îr‹
;

928 
zCøshFûe
 = 
	`T˛_GëSåögFromObj
(
objv
[
objc
-1], &
nCøshFûe
);

929 if–
nCøshFûe
>=(
g
.
zCøshFûe
) ){

930 
	`T˛_AµídResu…
(
öãΩ
, "Fûíamêi†toÿl⁄g: \"", 
zCøshFûe
, "\"", 0);

931 
îr‹
;

933 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[
objc
-2], &
iDñay
) ){

934 
îr‹
;

937 if–
	`¥o˚ssDevSymArgs
(
öãΩ
, 
objc
-3, &
objv
[1], &
iDc
, &
iSe˘‹Size
) ){

938  
TCL_ERROR
;

941 if–
iDc
>=0 ){

942 
g
.
iDevi˚Ch¨a˘îi°ics
 = 
iDc
;

944 if–
iSe˘‹Size
>=0 ){

945 
g
.
iSe˘‹Size
 = iSectorSize;

948 
g
.
iCøsh
 = 
iDñay
;

949 
	`mem˝y
(
g
.
zCøshFûe
, zCøshFûe, 
nCøshFûe
+1);

950 
sqlôe3CøshTe°E«bÀ
 = 1;

951  
TCL_OK
;

953 
îr‹
:

954  
TCL_ERROR
;

955 
	}
}

957 
SQLITE_TCLAPI
 
	$devSymObjCmd
(

958 * 
˛õ¡D©a
,

959 
T˛_I¡îp
 *
öãΩ
,

960 
objc
,

961 
T˛_Obj
 *
CONST
 
objv
[]

963 
	`devsym_ªgi°î
(
iDevi˚Ch¨
, 
iSe˘‹Size
);

965 
iDc
 = -1;

966 
iSe˘‹Size
 = -1;

968 if–
	`¥o˚ssDevSymArgs
(
öãΩ
, 
objc
-1, &
objv
[1], &
iDc
, &
iSe˘‹Size
) ){

969  
TCL_ERROR
;

971 
	`devsym_ªgi°î
(
iDc
, 
iSe˘‹Size
);

973  
TCL_OK
;

975 
	}
}

980 
SQLITE_TCLAPI
 
	$dsUƒegi°îObjCmd
(

981 * 
˛õ¡D©a
,

982 
T˛_I¡îp
 *
öãΩ
,

983 
objc
,

984 
T˛_Obj
 *
CONST
 
objv
[]

986 
	`devsym_uƒegi°î
();

988 if–
objc
!=1 ){

989 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

990  
TCL_ERROR
;

993 
	`devsym_uƒegi°î
();

994  
TCL_OK
;

995 
	}
}

1000 
SQLITE_TCLAPI
 
	$jtObjCmd
(

1001 * 
˛õ¡D©a
,

1002 
T˛_I¡îp
 *
öãΩ
,

1003 
objc
,

1004 
T˛_Obj
 *
CONST
 
objv
[]

1006 
	`jt_ªgi°î
(*, );

1007 *
zP¨ít
 = 0;

1009 if–
objc
!=2 && objc!=3 ){

1010 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "?-default? PARENT-VFS");

1011  
TCL_ERROR
;

1013 
zP¨ít
 = 
	`T˛_GëSåög
(
objv
[1]);

1014 if–
objc
==3 ){

1015 if–
	`°rcmp
(
zP¨ít
, "-default") ){

1016 
	`T˛_AµídResu…
(
öãΩ
,

1017 "bad o±i⁄ \"", 
zP¨ít
, "\": must be -default", 0

1019  
TCL_ERROR
;

1021 
zP¨ít
 = 
	`T˛_GëSåög
(
objv
[2]);

1024 if–!(*
zP¨ít
) ){

1025 
zP¨ít
 = 0;

1027 if–
	`jt_ªgi°î
(
zP¨ít
, 
objc
==3) ){

1028 
	`T˛_AµídResu…
(
öãΩ
, "Error in jt_register", 0);

1029  
TCL_ERROR
;

1032  
TCL_OK
;

1033 
	}
}

1038 
SQLITE_TCLAPI
 
	$jtUƒegi°îObjCmd
(

1039 * 
˛õ¡D©a
,

1040 
T˛_I¡îp
 *
öãΩ
,

1041 
objc
,

1042 
T˛_Obj
 *
CONST
 
objv
[]

1044 
	`jt_uƒegi°î
();

1046 if–
objc
!=1 ){

1047 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

1048  
TCL_ERROR
;

1051 
	`jt_uƒegi°î
();

1052  
TCL_OK
;

1053 
	}
}

1060 
	$Sqlôëe°6_Inô
(
T˛_I¡îp
 *
öãΩ
){

1061 #i‚de‡
SQLITE_OMIT_DISKIO


1062 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sqlôe3_¸ash_íabÀ", 
¸ashE«bÀCmd
, 0, 0);

1063 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sqlôe3_¸ash∑øms", 
¸ashP¨amsObjCmd
, 0, 0);

1064 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sqlôe3_¸ash_now", 
¸ashNowCmd
, 0, 0);

1065 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sqlôe3_simuœã_devi˚", 
devSymObjCmd
, 0, 0);

1066 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "uƒegi°î_devsim", 
dsUƒegi°îObjCmd
, 0, 0);

1067 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "ªgi°î_jt_vfs", 
jtObjCmd
, 0, 0);

1068 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "uƒegi°î_jt_vfs", 
jtUƒegi°îObjCmd
, 0, 0);

1070  
TCL_OK
;

1071 
	}
}

	@test7.c

15 
	~"sqlôeI¡.h
"

16 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

17 
	~"sqlôe_t˛.h
"

19 
	~"t˛.h
"

26 #i‡
deföed
(
SQLITE_SERVER
Ë&& !deföed(
SQLITE_OMIT_SHARED_CACHE
) && \

27 
	gSQLITE_OS_UNIX
 && 
	gSQLITE_THREADSAFE


29 
	~<°dlib.h
>

30 
	~<°rög.h
>

31 
	~<±hªad.h
>

32 
	~<sched.h
>

33 
	~<˘y≥.h
>

38 
sqlôe3_˛õ¡_›í
(c⁄° *, 
sqlôe3
**);

39 
sqlôe3_˛õ¡_¥ï¨e
(
sqlôe3
*,const *,,

40 
sqlôe3_°mt
**,const **);

41 
sqlôe3_˛õ¡_°ï
(
sqlôe3_°mt
*);

42 
sqlôe3_˛õ¡_ª£t
(
sqlôe3_°mt
*);

43 
sqlôe3_˛õ¡_föÆize
(
sqlôe3_°mt
*);

44 
sqlôe3_˛õ¡_˛o£
(
sqlôe3
*);

45 
sqlôe3_£rvî_°¨t
();

46 
sqlôe3_£rvî_°›
();

47 
sqlôe3_£rvî_°¨t2
(*
≤De¸
);

53 
Thªad
 
	tThªad
;

54 
	sThªad
 {

58 *
	mzFûíame
;

59 (*
	mxOp
)(
	mThªad
*);

60 *
	mzArg
;

61 vﬁ©ûê
	m›num
;

62 vﬁ©ûê
	mbusy
;

67 vﬁ©ûê
	mcom∂ëed
;

68 
sqlôe3
 *
	mdb
;

69 
sqlôe3_°mt
 *
	mpStmt
;

70 *
	mzEº
;

71 *
	mzSèticEº
;

72 
	mrc
;

73 
	m¨gc
;

74 c⁄° *
	m¨gv
[100];

75 c⁄° *
	mcﬁv
[100];

82 
	mnSîvî
;

89 
	#N_THREAD
 26

	)

90 
Thªad
 
	gthªad£t
[
N_THREAD
];

95 *
	$˛õ¡_maö
(*
pArg
){

96 
Thªad
 *
p
 = (Thªad*)
pArg
;

97 if–
p
->
db
 ){

98 
	`sqlôe3_˛õ¡_˛o£
(
p
->
db
);

100 
	`sqlôe3_˛õ¡_›í
(
p
->
zFûíame
, &p->
db
);

101 if–
SQLITE_OK
!=
	`sqlôe3_îrcode
(
p
->
db
) ){

102 
p
->
zEº
 = 
	`°rdup
(
	`sqlôe3_îrmsg
’->
db
));

103 
	`sqlôe3_˛õ¡_˛o£
(
p
->
db
);

104 
p
->
db
 = 0;

106 
p
->
pStmt
 = 0;

107 
p
->
com∂ëed
 = 1;

108  
p
->
›num
<ı->
com∂ëed
 ) 
	`sched_yõld
();

109  
p
->
xOp
 ){

110 if–
p
->
zEº
 &&Ö->zEº!ı->
zSèticEº
 ){

111 
	`sqlôe3_‰ì
(
p
->
zEº
);

112 
p
->
zEº
 = 0;

114 (*
p
->
xOp
)(p);

115 
p
->
com∂ëed
++;

116  
p
->
›num
<ı->
com∂ëed
 ) 
	`sched_yõld
();

118 if–
p
->
pStmt
 ){

119 
	`sqlôe3_˛õ¡_föÆize
(
p
->
pStmt
);

120 
p
->
pStmt
 = 0;

122 if–
p
->
db
 ){

123 
	`sqlôe3_˛õ¡_˛o£
(
p
->
db
);

124 
p
->
db
 = 0;

126 if–
p
->
zEº
 &&Ö->zEº!ı->
zSèticEº
 ){

127 
	`sqlôe3_‰ì
(
p
->
zEº
);

128 
p
->
zEº
 = 0;

130 
p
->
com∂ëed
++;

131 #i‚de‡
SQLITE_OMIT_DEPRECATED


132 
	`sqlôe3_thªad_˛ónup
();

135 
	}
}

142 
	$∑r£_˛õ¡_id
(
T˛_I¡îp
 *
öãΩ
, c⁄° *
zArg
){

143 if–
zArg
==0 || zArg[0]==0 || zArg[1]!=0 || !
	`isuµî
(()zArg[0]) ){

144 
	`T˛_AµídResu…
(
öãΩ
, "thread ID must beán upper caseÜetter", 0);

147  
zArg
[0] - 'A';

148 
	}
}

156 
SQLITE_TCLAPI
 
	$t˛_˛õ¡_¸óã
(

157 *
NŸU£d
,

158 
T˛_I¡îp
 *
öãΩ
,

159 
¨gc
,

160 c⁄° **
¨gv


162 
i
;

163 
±hªad_t
 
x
;

164 
rc
;

166 if–
¨gc
!=3 ){

167 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

169  
TCL_ERROR
;

171 
i
 = 
	`∑r£_˛õ¡_id
(
öãΩ
, 
¨gv
[1]);

172 if–
i
<0 )  
TCL_ERROR
;

173 if–
thªad£t
[
i
].
busy
 ){

174 
	`T˛_AµídResu…
(
öãΩ
, "thªad ", 
¨gv
[1], " isálreadyÑunning", 0);

175  
TCL_ERROR
;

177 
thªad£t
[
i
].
busy
 = 1;

178 
	`sqlôe3_‰ì
(
thªad£t
[
i
].
zFûíame
);

179 
thªad£t
[
i
].
zFûíame
 = 
	`sqlôe3_m¥ötf
("%s", 
¨gv
[2]);

180 
thªad£t
[
i
].
›num
 = 1;

181 
thªad£t
[
i
].
com∂ëed
 = 0;

182 
rc
 = 
	`±hªad_¸óã
(&
x
, 0, 
˛õ¡_maö
, &
thªad£t
[
i
]);

183 if–
rc
 ){

184 
	`T˛_AµídResu…
(
öãΩ
, "failedÅo createÅheÅhread", 0);

185 
	`sqlôe3_‰ì
(
thªad£t
[
i
].
zFûíame
);

186 
thªad£t
[
i
].
busy
 = 0;

187  
TCL_ERROR
;

189 
	`±hªad_dëach
(
x
);

190 if–
thªad£t
[
i
].
nSîvî
==0 ){

191 
thªad£t
[
i
].
nSîvî
 = 1;

192 
	`sqlôe3_£rvî_°¨t2
(&
thªad£t
[
i
].
nSîvî
);

194  
TCL_OK
;

195 
	}
}

200 
	$˛õ¡_waô
(
Thªad
 *
p
){

201  
p
->
›num
>p->
com∂ëed
 ) 
	`sched_yõld
();

202 
	}
}

209 
SQLITE_TCLAPI
 
	$t˛_˛õ¡_waô
(

210 *
NŸU£d
,

211 
T˛_I¡îp
 *
öãΩ
,

212 
¨gc
,

213 c⁄° **
¨gv


215 
i
;

217 if–
¨gc
!=2 ){

218 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

220  
TCL_ERROR
;

222 
i
 = 
	`∑r£_˛õ¡_id
(
öãΩ
, 
¨gv
[1]);

223 if–
i
<0 )  
TCL_ERROR
;

224 if–!
thªad£t
[
i
].
busy
 ){

225 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

226  
TCL_ERROR
;

228 
	`˛õ¡_waô
(&
thªad£t
[
i
]);

229  
TCL_OK
;

230 
	}
}

235 
	$°›_thªad
(
Thªad
 *
p
){

236 
	`˛õ¡_waô
(
p
);

237 
p
->
xOp
 = 0;

238 
p
->
›num
++;

239 
	`˛õ¡_waô
(
p
);

240 
	`sqlôe3_‰ì
(
p
->
zArg
);

241 
p
->
zArg
 = 0;

242 
	`sqlôe3_‰ì
(
p
->
zFûíame
);

243 
p
->
zFûíame
 = 0;

244 
p
->
busy
 = 0;

245 
	}
}

253 
SQLITE_TCLAPI
 
	$t˛_˛õ¡_hÆt
(

254 *
NŸU£d
,

255 
T˛_I¡îp
 *
öãΩ
,

256 
¨gc
,

257 c⁄° **
¨gv


259 
i
;

261 if–
¨gc
!=2 ){

262 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

264  
TCL_ERROR
;

266 if–
¨gv
[1][0]=='*' &&árgv[1][1]==0 ){

267 
i
=0; i<
N_THREAD
; i++){

268 if–
thªad£t
[
i
].
busy
 ){

269 
	`°›_thªad
(&
thªad£t
[
i
]);

273 
i
 = 
	`∑r£_˛õ¡_id
(
öãΩ
, 
¨gv
[1]);

274 if–
i
<0 )  
TCL_ERROR
;

275 if–!
thªad£t
[
i
].
busy
 ){

276 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

277  
TCL_ERROR
;

279 
	`°›_thªad
(&
thªad£t
[
i
]);

283 
i
=0; i<
N_THREAD
 && 
thªad£t
[i].
busy
==0; i++){}

284 if–
i
>=
N_THREAD
 ){

285 
	`sqlôe3_£rvî_°›
();

287 
i
=0; i<
N_THREAD
 && 
thªad£t
[i].
nSîvî
==0; i++);

288 if–
i
==
N_THREAD
 ) ;

289 
	`sched_yõld
();

292  
TCL_OK
;

293 
	}
}

301 
SQLITE_TCLAPI
 
	$t˛_˛õ¡_¨gc
(

302 *
NŸU£d
,

303 
T˛_I¡îp
 *
öãΩ
,

304 
¨gc
,

305 c⁄° **
¨gv


307 
i
;

308 
zBuf
[100];

310 if–
¨gc
!=2 ){

311 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

313  
TCL_ERROR
;

315 
i
 = 
	`∑r£_˛õ¡_id
(
öãΩ
, 
¨gv
[1]);

316 if–
i
<0 )  
TCL_ERROR
;

317 if–!
thªad£t
[
i
].
busy
 ){

318 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

319  
TCL_ERROR
;

321 
	`˛õ¡_waô
(&
thªad£t
[
i
]);

322 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%d", 
thªad£t
[
i
].
¨gc
);

323 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

324  
TCL_OK
;

325 
	}
}

333 
SQLITE_TCLAPI
 
	$t˛_˛õ¡_¨gv
(

334 *
NŸU£d
,

335 
T˛_I¡îp
 *
öãΩ
,

336 
¨gc
,

337 c⁄° **
¨gv


339 
i
;

340 
n
;

342 if–
¨gc
!=3 ){

343 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

345  
TCL_ERROR
;

347 
i
 = 
	`∑r£_˛õ¡_id
(
öãΩ
, 
¨gv
[1]);

348 if–
i
<0 )  
TCL_ERROR
;

349 if–!
thªad£t
[
i
].
busy
 ){

350 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

351  
TCL_ERROR
;

353 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[2], &
n
ËË 
TCL_ERROR
;

354 
	`˛õ¡_waô
(&
thªad£t
[
i
]);

355 if–
n
<0 ||Ç>=
thªad£t
[
i
].
¨gc
 ){

356 
	`T˛_AµídResu…
(
öãΩ
, "columnÇumber out ofÑange", 0);

357  
TCL_ERROR
;

359 
	`T˛_AµídResu…
(
öãΩ
, 
thªad£t
[
i
].
¨gv
[
n
], 0);

360  
TCL_OK
;

361 
	}
}

369 
SQLITE_TCLAPI
 
	$t˛_˛õ¡_cﬁ«me
(

370 *
NŸU£d
,

371 
T˛_I¡îp
 *
öãΩ
,

372 
¨gc
,

373 c⁄° **
¨gv


375 
i
;

376 
n
;

378 if–
¨gc
!=3 ){

379 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

381  
TCL_ERROR
;

383 
i
 = 
	`∑r£_˛õ¡_id
(
öãΩ
, 
¨gv
[1]);

384 if–
i
<0 )  
TCL_ERROR
;

385 if–!
thªad£t
[
i
].
busy
 ){

386 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

387  
TCL_ERROR
;

389 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[2], &
n
ËË 
TCL_ERROR
;

390 
	`˛õ¡_waô
(&
thªad£t
[
i
]);

391 if–
n
<0 ||Ç>=
thªad£t
[
i
].
¨gc
 ){

392 
	`T˛_AµídResu…
(
öãΩ
, "columnÇumber out ofÑange", 0);

393  
TCL_ERROR
;

395 
	`T˛_AµídResu…
(
öãΩ
, 
thªad£t
[
i
].
cﬁv
[
n
], 0);

396  
TCL_OK
;

397 
	}
}

399 c⁄° *
sqlôe3EºName
();

407 
SQLITE_TCLAPI
 
	$t˛_˛õ¡_ªsu…
(

408 *
NŸU£d
,

409 
T˛_I¡îp
 *
öãΩ
,

410 
¨gc
,

411 c⁄° **
¨gv


413 
i
;

414 c⁄° *
zName
;

416 if–
¨gc
!=2 ){

417 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

419  
TCL_ERROR
;

421 
i
 = 
	`∑r£_˛õ¡_id
(
öãΩ
, 
¨gv
[1]);

422 if–
i
<0 )  
TCL_ERROR
;

423 if–!
thªad£t
[
i
].
busy
 ){

424 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

425  
TCL_ERROR
;

427 
	`˛õ¡_waô
(&
thªad£t
[
i
]);

428 
zName
 = 
	`sqlôe3EºName
(
thªad£t
[
i
].
rc
);

429 
	`T˛_AµídResu…
(
öãΩ
, 
zName
, 0);

430  
TCL_OK
;

431 
	}
}

439 
SQLITE_TCLAPI
 
	$t˛_˛õ¡_îr‹
(

440 *
NŸU£d
,

441 
T˛_I¡îp
 *
öãΩ
,

442 
¨gc
,

443 c⁄° **
¨gv


445 
i
;

447 if–
¨gc
!=2 ){

448 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

450  
TCL_ERROR
;

452 
i
 = 
	`∑r£_˛õ¡_id
(
öãΩ
, 
¨gv
[1]);

453 if–
i
<0 )  
TCL_ERROR
;

454 if–!
thªad£t
[
i
].
busy
 ){

455 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

456  
TCL_ERROR
;

458 
	`˛õ¡_waô
(&
thªad£t
[
i
]);

459 
	`T˛_AµídResu…
(
öãΩ
, 
thªad£t
[
i
].
zEº
, 0);

460  
TCL_OK
;

461 
	}
}

466 
	$do_compûe
(
Thªad
 *
p
){

467 if–
p
->
db
==0 ){

468 
p
->
zEº
 =Ö->
zSèticEº
 = "no database is open";

469 
p
->
rc
 = 
SQLITE_ERROR
;

472 if–
p
->
pStmt
 ){

473 
	`sqlôe3_˛õ¡_föÆize
(
p
->
pStmt
);

474 
p
->
pStmt
 = 0;

476 
p
->
rc
 = 
	`sqlôe3_˛õ¡_¥ï¨e
’->
db
,Ö->
zArg
, -1, &p->
pStmt
, 0);

477 
	}
}

484 
SQLITE_TCLAPI
 
	$t˛_˛õ¡_compûe
(

485 *
NŸU£d
,

486 
T˛_I¡îp
 *
öãΩ
,

487 
¨gc
,

488 c⁄° **
¨gv


490 
i
;

491 if–
¨gc
!=3 ){

492 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

494  
TCL_ERROR
;

496 
i
 = 
	`∑r£_˛õ¡_id
(
öãΩ
, 
¨gv
[1]);

497 if–
i
<0 )  
TCL_ERROR
;

498 if–!
thªad£t
[
i
].
busy
 ){

499 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

500  
TCL_ERROR
;

502 
	`˛õ¡_waô
(&
thªad£t
[
i
]);

503 
thªad£t
[
i
].
xOp
 = 
do_compûe
;

504 
	`sqlôe3_‰ì
(
thªad£t
[
i
].
zArg
);

505 
thªad£t
[
i
].
zArg
 = 
	`sqlôe3_m¥ötf
("%s", 
¨gv
[2]);

506 
thªad£t
[
i
].
›num
++;

507  
TCL_OK
;

508 
	}
}

513 
	$do_°ï
(
Thªad
 *
p
){

514 
i
;

515 if–
p
->
pStmt
==0 ){

516 
p
->
zEº
 =Ö->
zSèticEº
 = "no virtual machineávailable";

517 
p
->
rc
 = 
SQLITE_ERROR
;

520 
p
->
rc
 = 
	`sqlôe3_˛õ¡_°ï
’->
pStmt
);

521 if–
p
->
rc
==
SQLITE_ROW
 ){

522 
p
->
¨gc
 = 
	`sqlôe3_cﬁumn_cou¡
’->
pStmt
);

523 
i
=0; i<
	`sqlôe3_d©a_cou¡
(
p
->
pStmt
); i++){

524 
p
->
¨gv
[
i
] = (*)
	`sqlôe3_cﬁumn_ãxt
’->
pStmt
, i);

526 
i
=0; i<
p
->
¨gc
; i++){

527 
p
->
cﬁv
[
i
] = 
	`sqlôe3_cﬁumn_«me
’->
pStmt
, i);

530 
	}
}

537 
SQLITE_TCLAPI
 
	$t˛_˛õ¡_°ï
(

538 *
NŸU£d
,

539 
T˛_I¡îp
 *
öãΩ
,

540 
¨gc
,

541 c⁄° **
¨gv


543 
i
;

544 if–
¨gc
!=2 ){

545 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

547  
TCL_ERROR
;

549 
i
 = 
	`∑r£_˛õ¡_id
(
öãΩ
, 
¨gv
[1]);

550 if–
i
<0 )  
TCL_ERROR
;

551 if–!
thªad£t
[
i
].
busy
 ){

552 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

553  
TCL_ERROR
;

555 
	`˛õ¡_waô
(&
thªad£t
[
i
]);

556 
thªad£t
[
i
].
xOp
 = 
do_°ï
;

557 
thªad£t
[
i
].
›num
++;

558  
TCL_OK
;

559 
	}
}

564 
	$do_föÆize
(
Thªad
 *
p
){

565 if–
p
->
pStmt
==0 ){

566 
p
->
zEº
 =Ö->
zSèticEº
 = "no virtual machineávailable";

567 
p
->
rc
 = 
SQLITE_ERROR
;

570 
p
->
rc
 = 
	`sqlôe3_˛õ¡_föÆize
’->
pStmt
);

571 
p
->
pStmt
 = 0;

572 
	}
}

579 
SQLITE_TCLAPI
 
	$t˛_˛õ¡_föÆize
(

580 *
NŸU£d
,

581 
T˛_I¡îp
 *
öãΩ
,

582 
¨gc
,

583 c⁄° **
¨gv


585 
i
;

586 if–
¨gc
!=2 ){

587 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

589  
TCL_ERROR
;

591 
i
 = 
	`∑r£_˛õ¡_id
(
öãΩ
, 
¨gv
[1]);

592 if–
i
<0 )  
TCL_ERROR
;

593 if–!
thªad£t
[
i
].
busy
 ){

594 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

595  
TCL_ERROR
;

597 
	`˛õ¡_waô
(&
thªad£t
[
i
]);

598 
thªad£t
[
i
].
xOp
 = 
do_föÆize
;

599 
	`sqlôe3_‰ì
(
thªad£t
[
i
].
zArg
);

600 
thªad£t
[
i
].
zArg
 = 0;

601 
thªad£t
[
i
].
›num
++;

602  
TCL_OK
;

603 
	}
}

608 
	$do_ª£t
(
Thªad
 *
p
){

609 if–
p
->
pStmt
==0 ){

610 
p
->
zEº
 =Ö->
zSèticEº
 = "no virtual machineávailable";

611 
p
->
rc
 = 
SQLITE_ERROR
;

614 
p
->
rc
 = 
	`sqlôe3_˛õ¡_ª£t
’->
pStmt
);

615 
p
->
pStmt
 = 0;

616 
	}
}

623 
SQLITE_TCLAPI
 
	$t˛_˛õ¡_ª£t
(

624 *
NŸU£d
,

625 
T˛_I¡îp
 *
öãΩ
,

626 
¨gc
,

627 c⁄° **
¨gv


629 
i
;

630 if–
¨gc
!=2 ){

631 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

633  
TCL_ERROR
;

635 
i
 = 
	`∑r£_˛õ¡_id
(
öãΩ
, 
¨gv
[1]);

636 if–
i
<0 )  
TCL_ERROR
;

637 if–!
thªad£t
[
i
].
busy
 ){

638 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

639  
TCL_ERROR
;

641 
	`˛õ¡_waô
(&
thªad£t
[
i
]);

642 
thªad£t
[
i
].
xOp
 = 
do_ª£t
;

643 
	`sqlôe3_‰ì
(
thªad£t
[
i
].
zArg
);

644 
thªad£t
[
i
].
zArg
 = 0;

645 
thªad£t
[
i
].
›num
++;

646  
TCL_OK
;

647 
	}
}

654 
SQLITE_TCLAPI
 
	$t˛_˛õ¡_sw≠
(

655 *
NŸU£d
,

656 
T˛_I¡îp
 *
öãΩ
,

657 
¨gc
,

658 c⁄° **
¨gv


660 
i
, 
j
;

661 
sqlôe3
 *
ãmp
;

662 if–
¨gc
!=3 ){

663 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

665  
TCL_ERROR
;

667 
i
 = 
	`∑r£_˛õ¡_id
(
öãΩ
, 
¨gv
[1]);

668 if–
i
<0 )  
TCL_ERROR
;

669 if–!
thªad£t
[
i
].
busy
 ){

670 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

671  
TCL_ERROR
;

673 
	`˛õ¡_waô
(&
thªad£t
[
i
]);

674 
j
 = 
	`∑r£_˛õ¡_id
(
öãΩ
, 
¨gv
[2]);

675 if–
j
<0 )  
TCL_ERROR
;

676 if–!
thªad£t
[
j
].
busy
 ){

677 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

678  
TCL_ERROR
;

680 
	`˛õ¡_waô
(&
thªad£t
[
j
]);

681 
ãmp
 = 
thªad£t
[
i
].
db
;

682 
thªad£t
[
i
].
db
 =Åhªad£t[
j
].db;

683 
thªad£t
[
j
].
db
 = 
ãmp
;

684  
TCL_OK
;

685 
	}
}

690 
	$Sqlôëe°7_Inô
(
T˛_I¡îp
 *
öãΩ
){

692 *
zName
;

693 
T˛_CmdProc
 *
xProc
;

694 } 
aCmd
[] = {

695 { "˛õ¡_¸óã", (
T˛_CmdProc
*)
t˛_˛õ¡_¸óã
 },

696 { "˛õ¡_waô", (
T˛_CmdProc
*)
t˛_˛õ¡_waô
 },

697 { "˛õ¡_hÆt", (
T˛_CmdProc
*)
t˛_˛õ¡_hÆt
 },

698 { "˛õ¡_¨gc", (
T˛_CmdProc
*)
t˛_˛õ¡_¨gc
 },

699 { "˛õ¡_¨gv", (
T˛_CmdProc
*)
t˛_˛õ¡_¨gv
 },

700 { "˛õ¡_cﬁ«me", (
T˛_CmdProc
*)
t˛_˛õ¡_cﬁ«me
 },

701 { "˛õ¡_ªsu…", (
T˛_CmdProc
*)
t˛_˛õ¡_ªsu…
 },

702 { "˛õ¡_îr‹", (
T˛_CmdProc
*)
t˛_˛õ¡_îr‹
 },

703 { "˛õ¡_compûe", (
T˛_CmdProc
*)
t˛_˛õ¡_compûe
 },

704 { "˛õ¡_°ï", (
T˛_CmdProc
*)
t˛_˛õ¡_°ï
 },

705 { "˛õ¡_ª£t", (
T˛_CmdProc
*)
t˛_˛õ¡_ª£t
 },

706 { "˛õ¡_föÆize", (
T˛_CmdProc
*)
t˛_˛õ¡_föÆize
 },

707 { "˛õ¡_sw≠", (
T˛_CmdProc
*)
t˛_˛õ¡_sw≠
 },

709 
i
;

711 
i
=0; i<(
aCmd
)/(aCmd[0]); i++){

712 
	`T˛_Cª©eComm™d
(
öãΩ
, 
aCmd
[
i
].
zName
,áCmd[i].
xProc
, 0, 0);

714  
TCL_OK
;

715 
	}
}

717 
	$Sqlôëe°7_Inô
(
T˛_I¡îp
 *
öãΩ
){  
TCL_OK
; 
	}
}

	@test8.c

16 
	~"sqlôeI¡.h
"

17 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

18 
	~"sqlôe_t˛.h
"

20 
	~"t˛.h
"

22 
	~<°dlib.h
>

23 
	~<°rög.h
>

25 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


27 
echo_vèb
 
	techo_vèb
;

28 
echo_curs‹
 
	techo_curs‹
;

76 
	secho_vèb
 {

77 
sqlôe3_vèb
 
	mba£
;

78 
T˛_I¡îp
 *
	möãΩ
;

79 
sqlôe3
 *
	mdb
;

81 
	misP©ã∫
;

82 
	möTønß˘i⁄
;

83 *
	mzThis
;

84 *
	mzTabÀName
;

85 *
	mzLogName
;

86 
	mnCﬁ
;

87 *
	maIndex
;

88 **
	maCﬁ
;

92 
	secho_curs‹
 {

93 
sqlôe3_vèb_curs‹
 
	mba£
;

94 
sqlôe3_°mt
 *
	mpStmt
;

97 
	$simuœãVèbEº‹
(
echo_vèb
 *
p
, c⁄° *
zMëhod
){

98 c⁄° *
zEº
;

99 
zV¨«me
[128];

100 
zV¨«me
[127] = '\0';

101 
	`sqlôe3_¢¥ötf
(127, 
zV¨«me
, "echo_moduÀ_Áû(%s,%s)", 
zMëhod
, 
p
->
zTabÀName
);

102 
zEº
 = 
	`T˛_GëV¨
(
p
->
öãΩ
, 
zV¨«me
, 
TCL_GLOBAL_ONLY
);

103 if–
zEº
 ){

104 
p
->
ba£
.
zEºMsg
 = 
	`sqlôe3_m¥ötf
("echo-vèb-îr‹: %s", 
zEº
);

106  (
zEº
!=0);

107 
	}
}

122 
	$dequŸeSåög
(*
z
){

123 
quŸe
;

124 
i
, 
j
;

125 if–
z
==0 ) ;

126 
quŸe
 = 
z
[0];

127  
quŸe
 ){

131 '[': 
quŸe
 = ']'; ;

134 
i
=1, 
j
=0; 
z
[i]; i++){

135 if–
z
[
i
]==
quŸe
 ){

136 if–
z
[
i
+1]==
quŸe
 ){

137 
z
[
j
++] = 
quŸe
;

138 
i
++;

140 
z
[
j
++] = 0;

144 
z
[
j
++] = z[
i
];

147 
	}
}

159 
	$gëCﬁumnNames
(

160 
sqlôe3
 *
db
,

161 c⁄° *
zTab
,

162 ***
∑Cﬁ
,

163 *
≤Cﬁ


165 **
aCﬁ
 = 0;

166 *
zSql
;

167 
sqlôe3_°mt
 *
pStmt
 = 0;

168 
rc
 = 
SQLITE_OK
;

169 
nCﬁ
 = 0;

175 
zSql
 = 
	`sqlôe3_m¥ötf
("SELECT * FROM %Q", 
zTab
);

176 if–!
zSql
 ){

177 
rc
 = 
SQLITE_NOMEM
;

178 
out
;

180 
rc
 = 
	`sqlôe3_¥ï¨e
(
db
, 
zSql
, -1, &
pStmt
, 0);

181 
	`sqlôe3_‰ì
(
zSql
);

183 if–
rc
==
SQLITE_OK
 ){

184 
ii
;

185 
nByãs
;

186 *
zS∑˚
;

187 
nCﬁ
 = 
	`sqlôe3_cﬁumn_cou¡
(
pStmt
);

192 
nByãs
 = (*Ë* 
nCﬁ
;

193 
ii
=0; ii<
nCﬁ
; ii++){

194 c⁄° *
zName
 = 
	`sqlôe3_cﬁumn_«me
(
pStmt
, 
ii
);

195 if–!
zName
 ){

196 
rc
 = 
SQLITE_NOMEM
;

197 
out
;

199 
nByãs
 +()
	`°æí
(
zName
)+1;

201 
aCﬁ
 = (**)
	`sqlôe3MÆlocZîo
(
nByãs
);

202 if–!
aCﬁ
 ){

203 
rc
 = 
SQLITE_NOMEM
;

204 
out
;

210 
zS∑˚
 = (*)(&
aCﬁ
[
nCﬁ
]);

211 
ii
=0; ii<
nCﬁ
; ii++){

212 
aCﬁ
[
ii
] = 
zS∑˚
;

213 
	`sqlôe3_¢¥ötf
(
nByãs
, 
zS∑˚
, "%s", 
	`sqlôe3_cﬁumn_«me
(
pStmt
,
ii
));

214 
zS∑˚
 +()
	`°æí
(zSpace) + 1;

216 
	`as£π
–(
zS∑˚
-
nByãs
)==(*)
aCﬁ
 );

219 *
∑Cﬁ
 = 
aCﬁ
;

220 *
≤Cﬁ
 = 
nCﬁ
;

222 
out
:

223 
	`sqlôe3_föÆize
(
pStmt
);

224  
rc
;

225 
	}
}

239 
	$gëIndexAºay
(

240 
sqlôe3
 *
db
,

241 c⁄° *
zTab
,

242 
nCﬁ
,

243 **
∑Index


245 
sqlôe3_°mt
 *
pStmt
 = 0;

246 *
aIndex
 = 0;

247 
rc
;

248 *
zSql
;

251 
aIndex
 = (*)
	`sqlôe3MÆlocZîo
((Ë* 
nCﬁ
);

252 if–!
aIndex
 ){

253 
rc
 = 
SQLITE_NOMEM
;

254 
gë_ödex_¨øy_out
;

258 
zSql
 = 
	`sqlôe3_m¥ötf
("PRAGMA index_li°(%s)", 
zTab
);

259 if–!
zSql
 ){

260 
rc
 = 
SQLITE_NOMEM
;

261 
gë_ödex_¨øy_out
;

263 
rc
 = 
	`sqlôe3_¥ï¨e
(
db
, 
zSql
, -1, &
pStmt
, 0);

264 
	`sqlôe3_‰ì
(
zSql
);

269  
pStmt
 && 
	`sqlôe3_°ï
’Stmt)==
SQLITE_ROW
 ){

270 c⁄° *
zIdx
 = (c⁄° *)
	`sqlôe3_cﬁumn_ãxt
(
pStmt
, 1);

271 
sqlôe3_°mt
 *
pStmt2
 = 0;

272 if–
zIdx
==0 ) ;

273 
zSql
 = 
	`sqlôe3_m¥ötf
("PRAGMA index_öfo(%s)", 
zIdx
);

274 if–!
zSql
 ){

275 
rc
 = 
SQLITE_NOMEM
;

276 
gë_ödex_¨øy_out
;

278 
rc
 = 
	`sqlôe3_¥ï¨e
(
db
, 
zSql
, -1, &
pStmt2
, 0);

279 
	`sqlôe3_‰ì
(
zSql
);

280 if–
pStmt2
 && 
	`sqlôe3_°ï
’Stmt2)==
SQLITE_ROW
 ){

281 
cid
 = 
	`sqlôe3_cﬁumn_öt
(
pStmt2
, 1);

282 
	`as£π
–
cid
>=0 && cid<
nCﬁ
 );

283 
aIndex
[
cid
] = 1;

285 if–
pStmt2
 ){

286 
rc
 = 
	`sqlôe3_föÆize
(
pStmt2
);

288 if–
rc
!=
SQLITE_OK
 ){

289 
gë_ödex_¨øy_out
;

294 
gë_ödex_¨øy_out
:

295 if–
pStmt
 ){

296 
rc2
 = 
	`sqlôe3_föÆize
(
pStmt
);

297 if–
rc
==
SQLITE_OK
 ){

298 
rc
 = 
rc2
;

301 if–
rc
!=
SQLITE_OK
 ){

302 
	`sqlôe3_‰ì
(
aIndex
);

303 
aIndex
 = 0;

305 *
∑Index
 = 
aIndex
;

306  
rc
;

307 
	}
}

313 
	$≠≥ndToEchoModuÀ
(
T˛_I¡îp
 *
öãΩ
, c⁄° *
zArg
){

314 
Êags
 = (
TCL_APPEND_VALUE
 | 
TCL_LIST_ELEMENT
 | 
TCL_GLOBAL_ONLY
);

315 
	`T˛_SëV¨
(
öãΩ
, "echo_moduÀ", (
zArg
?zArg:""), 
Êags
);

316 
	}
}

335 
	$echoDe˛¨eVèb
(

336 
echo_vèb
 *
pVèb
,

337 
sqlôe3
 *
db


339 
rc
 = 
SQLITE_OK
;

341 if–
pVèb
->
zTabÀName
 ){

342 
sqlôe3_°mt
 *
pStmt
 = 0;

343 
rc
 = 
	`sqlôe3_¥ï¨e
(
db
,

345 -1, &
pStmt
, 0);

346 if–
rc
==
SQLITE_OK
 ){

347 
	`sqlôe3_böd_ãxt
(
pStmt
, 1, 
pVèb
->
zTabÀName
, -1, 0);

348 if–
	`sqlôe3_°ï
(
pStmt
)==
SQLITE_ROW
 ){

349 
rc2
;

350 c⁄° *
zCª©eTabÀ
 = (c⁄° *)
	`sqlôe3_cﬁumn_ãxt
(
pStmt
, 0);

351 
rc
 = 
	`sqlôe3_de˛¨e_vèb
(
db
, 
zCª©eTabÀ
);

352 
rc2
 = 
	`sqlôe3_föÆize
(
pStmt
);

353 if–
rc
==
SQLITE_OK
 ){

354 
rc
 = 
rc2
;

357 
rc
 = 
	`sqlôe3_föÆize
(
pStmt
);

358 if–
rc
==
SQLITE_OK
 ){

359 
rc
 = 
SQLITE_ERROR
;

362 if–
rc
==
SQLITE_OK
 ){

363 
rc
 = 
	`gëCﬁumnNames
(
db
, 
pVèb
->
zTabÀName
, &pVèb->
aCﬁ
, &pVèb->
nCﬁ
);

365 if–
rc
==
SQLITE_OK
 ){

366 
rc
 = 
	`gëIndexAºay
(
db
, 
pVèb
->
zTabÀName
,ÖVèb->
nCﬁ
, &pVèb->
aIndex
);

371  
rc
;

372 
	}
}

378 
	$echoDe°ru˘‹
(
sqlôe3_vèb
 *
pVèb
){

379 
echo_vèb
 *
p
 = (echo_vèb*)
pVèb
;

380 
	`sqlôe3_‰ì
(
p
->
aIndex
);

381 
	`sqlôe3_‰ì
(
p
->
aCﬁ
);

382 
	`sqlôe3_‰ì
(
p
->
zThis
);

383 
	`sqlôe3_‰ì
(
p
->
zTabÀName
);

384 
	`sqlôe3_‰ì
(
p
->
zLogName
);

385 
	`sqlôe3_‰ì
(
p
);

387 
	}
}

389 
EchoModuÀ
 
	tEchoModuÀ
;

390 
	sEchoModuÀ
 {

391 
T˛_I¡îp
 *
	möãΩ
;

399 
	$echoC⁄°ru˘‹
(

400 
sqlôe3
 *
db
,

401 *
pAux
,

402 
¨gc
, c⁄° *c⁄°*
¨gv
,

403 
sqlôe3_vèb
 **
µVèb
,

404 **
pzEº


406 
rc
;

407 
i
;

408 
echo_vèb
 *
pVèb
;

411 
pVèb
 = 
	`sqlôe3MÆlocZîo
( (*pVtab) );

412 if–!
pVèb
 ){

413  
SQLITE_NOMEM
;

415 
pVèb
->
öãΩ
 = ((
EchoModuÀ
 *)
pAux
)->interp;

416 
pVèb
->
db
 = db;

419 
pVèb
->
zThis
 = 
	`sqlôe3_m¥ötf
("%s", 
¨gv
[2]);

420 if–!
pVèb
->
zThis
 ){

421 
	`echoDe°ru˘‹
((
sqlôe3_vèb
 *)
pVèb
);

422  
SQLITE_NOMEM
;

426 if–
¨gc
>3 ){

427 
pVèb
->
zTabÀName
 = 
	`sqlôe3_m¥ötf
("%s", 
¨gv
[3]);

428 
	`dequŸeSåög
(
pVèb
->
zTabÀName
);

429 if–
pVèb
->
zTabÀName
 &&ÖVtab->zTableName[0]=='*' ){

430 *
z
 = 
	`sqlôe3_m¥ötf
("%s%s", 
¨gv
[2], &(
pVèb
->
zTabÀName
[1]));

431 
	`sqlôe3_‰ì
(
pVèb
->
zTabÀName
);

432 
pVèb
->
zTabÀName
 = 
z
;

433 
pVèb
->
isP©ã∫
 = 1;

435 if–!
pVèb
->
zTabÀName
 ){

436 
	`echoDe°ru˘‹
((
sqlôe3_vèb
 *)
pVèb
);

437  
SQLITE_NOMEM
;

442 
i
=0; i<
¨gc
; i++){

443 
	`≠≥ndToEchoModuÀ
(
pVèb
->
öãΩ
, 
¨gv
[
i
]);

450 
rc
 = 
	`echoDe˛¨eVèb
(
pVèb
, 
db
);

451 if–
rc
!=
SQLITE_OK
 ){

452 
	`echoDe°ru˘‹
((
sqlôe3_vèb
 *)
pVèb
);

453  
rc
;

457 *
µVèb
 = &
pVèb
->
ba£
;

458  
SQLITE_OK
;

459 
	}
}

464 
	$echoCª©e
(

465 
sqlôe3
 *
db
,

466 *
pAux
,

467 
¨gc
, c⁄° *c⁄°*
¨gv
,

468 
sqlôe3_vèb
 **
µVèb
,

469 **
pzEº


471 
rc
 = 
SQLITE_OK
;

472 
	`≠≥ndToEchoModuÀ
(((
EchoModuÀ
 *)
pAux
)->
öãΩ
, "xCreate");

473 
rc
 = 
	`echoC⁄°ru˘‹
(
db
, 
pAux
, 
¨gc
, 
¨gv
, 
µVèb
, 
pzEº
);

485 if–
rc
==
SQLITE_OK
 && 
¨gc
==5 ){

486 *
zSql
;

487 
echo_vèb
 *
pVèb
 = *”cho_vèb **)
µVèb
;

488 
pVèb
->
zLogName
 = 
	`sqlôe3_m¥ötf
("%s", 
¨gv
[4]);

489 
zSql
 = 
	`sqlôe3_m¥ötf
("CREATE TABLE %Q÷ogmsg)", 
pVèb
->
zLogName
);

490 
rc
 = 
	`sqlôe3_exec
(
db
, 
zSql
, 0, 0, 0);

491 
	`sqlôe3_‰ì
(
zSql
);

492 if–
rc
!=
SQLITE_OK
 ){

493 *
pzEº
 = 
	`sqlôe3_m¥ötf
("%s", 
	`sqlôe3_îrmsg
(
db
));

497 if–*
µVèb
 && 
rc
!=
SQLITE_OK
 ){

498 
	`echoDe°ru˘‹
(*
µVèb
);

499 *
µVèb
 = 0;

502 if–
rc
==
SQLITE_OK
 ){

503 (*(
echo_vèb
**)
µVèb
)->
öTønß˘i⁄
 = 1;

506  
rc
;

507 
	}
}

512 
	$echoC⁄√˘
(

513 
sqlôe3
 *
db
,

514 *
pAux
,

515 
¨gc
, c⁄° *c⁄°*
¨gv
,

516 
sqlôe3_vèb
 **
µVèb
,

517 **
pzEº


519 
	`≠≥ndToEchoModuÀ
(((
EchoModuÀ
 *)
pAux
)->
öãΩ
, "xConnect");

520  
	`echoC⁄°ru˘‹
(
db
, 
pAux
, 
¨gc
, 
¨gv
, 
µVèb
, 
pzEº
);

521 
	}
}

526 
	$echoDisc⁄√˘
(
sqlôe3_vèb
 *
pVèb
){

527 
	`≠≥ndToEchoModuÀ
(((
echo_vèb
 *)
pVèb
)->
öãΩ
, "xDisconnect");

528  
	`echoDe°ru˘‹
(
pVèb
);

529 
	}
}

534 
	$echoDe°roy
(
sqlôe3_vèb
 *
pVèb
){

535 
rc
 = 
SQLITE_OK
;

536 
echo_vèb
 *
p
 = (echo_vèb *)
pVèb
;

537 
	`≠≥ndToEchoModuÀ
(((
echo_vèb
 *)
pVèb
)->
öãΩ
, "xDestroy");

540 if–
p
 &&Ö->
zLogName
 ){

541 *
zSql
;

542 
zSql
 = 
	`sqlôe3_m¥ötf
("DROP TABLE %Q", 
p
->
zLogName
);

543 
rc
 = 
	`sqlôe3_exec
(
p
->
db
, 
zSql
, 0, 0, 0);

544 
	`sqlôe3_‰ì
(
zSql
);

547 if–
rc
==
SQLITE_OK
 ){

548 
rc
 = 
	`echoDe°ru˘‹
(
pVèb
);

550  
rc
;

551 
	}
}

556 
	$echoO≥n
(
sqlôe3_vèb
 *
pVTab
, 
sqlôe3_vèb_curs‹
 **
µCurs‹
){

557 
echo_curs‹
 *
pCur
;

558 if–
	`simuœãVèbEº‹
((
echo_vèb
 *)
pVTab
, "xOpen") ){

559  
SQLITE_ERROR
;

561 
pCur
 = 
	`sqlôe3MÆlocZîo
((
echo_curs‹
));

562 *
µCurs‹
 = (
sqlôe3_vèb_curs‹
 *)
pCur
;

563  (
pCur
 ? 
SQLITE_OK
 : 
SQLITE_NOMEM
);

564 
	}
}

569 
	$echoClo£
(
sqlôe3_vèb_curs‹
 *
cur
){

570 
rc
;

571 
echo_curs‹
 *
pCur
 = (echo_curs‹ *)
cur
;

572 
sqlôe3_°mt
 *
pStmt
 = 
pCur
->pStmt;

573 
pCur
->
pStmt
 = 0;

574 
	`sqlôe3_‰ì
(
pCur
);

575 
rc
 = 
	`sqlôe3_föÆize
(
pStmt
);

576  
rc
;

577 
	}
}

583 
	$echoEof
(
sqlôe3_vèb_curs‹
 *
cur
){

584  (((
echo_curs‹
 *)
cur
)->
pStmt
 ? 0 : 1);

585 
	}
}

590 
	$echoNext
(
sqlôe3_vèb_curs‹
 *
cur
){

591 
rc
 = 
SQLITE_OK
;

592 
echo_curs‹
 *
pCur
 = (echo_curs‹ *)
cur
;

594 if–
	`simuœãVèbEº‹
((
echo_vèb
 *)(
cur
->
pVèb
), "xNext") ){

595  
SQLITE_ERROR
;

598 if–
pCur
->
pStmt
 ){

599 
rc
 = 
	`sqlôe3_°ï
(
pCur
->
pStmt
);

600 if–
rc
==
SQLITE_ROW
 ){

601 
rc
 = 
SQLITE_OK
;

603 
rc
 = 
	`sqlôe3_föÆize
(
pCur
->
pStmt
);

604 
pCur
->
pStmt
 = 0;

608  
rc
;

609 
	}
}

614 
	$echoCﬁumn
(
sqlôe3_vèb_curs‹
 *
cur
, 
sqlôe3_c⁄ãxt
 *
˘x
, 
i
){

615 
iCﬁ
 = 
i
 + 1;

616 
sqlôe3_°mt
 *
pStmt
 = ((
echo_curs‹
 *)
cur
)->pStmt;

618 if–
	`simuœãVèbEº‹
((
echo_vèb
 *)(
cur
->
pVèb
), "xColumn") ){

619  
SQLITE_ERROR
;

622 if–!
pStmt
 ){

623 
	`sqlôe3_ªsu…_nuŒ
(
˘x
);

625 
	`as£π
–
	`sqlôe3_d©a_cou¡
(
pStmt
)>
iCﬁ
 );

626 
	`sqlôe3_ªsu…_vÆue
(
˘x
, 
	`sqlôe3_cﬁumn_vÆue
(
pStmt
, 
iCﬁ
));

628  
SQLITE_OK
;

629 
	}
}

634 
	$echoRowid
(
sqlôe3_vèb_curs‹
 *
cur
, 
sqlôe_öt64
 *
pRowid
){

635 
sqlôe3_°mt
 *
pStmt
 = ((
echo_curs‹
 *)
cur
)->pStmt;

637 if–
	`simuœãVèbEº‹
((
echo_vèb
 *)(
cur
->
pVèb
), "xRowid") ){

638  
SQLITE_ERROR
;

641 *
pRowid
 = 
	`sqlôe3_cﬁumn_öt64
(
pStmt
, 0);

642  
SQLITE_OK
;

643 
	}
}

654 
	$hashSåög
(c⁄° *
zSåög
){

655 
u32
 
vÆ
 = 0;

656 
ii
;

657 
ii
=0; 
zSåög
[ii]; ii++){

658 
vÆ
 = (vÆ << 3Ë+ ()
zSåög
[
ii
];

660  ()(
vÆ
&0x7fffffff);

661 
	}
}

666 
	$echoFûãr
(

667 
sqlôe3_vèb_curs‹
 *
pVèbCurs‹
,

668 
idxNum
, c⁄° *
idxSå
,

669 
¨gc
, 
sqlôe3_vÆue
 **
¨gv


671 
rc
;

672 
i
;

674 
echo_curs‹
 *
pCur
 = (echo_curs‹ *)
pVèbCurs‹
;

675 
echo_vèb
 *
pVèb
 = (echo_vèb *)
pVèbCurs‹
->pVtab;

676 
sqlôe3
 *
db
 = 
pVèb
->db;

678 if–
	`simuœãVèbEº‹
(
pVèb
, "xFilter") ){

679  
SQLITE_ERROR
;

683 
	`as£π
–
idxNum
==
	`hashSåög
(
idxSå
) );

686 
	`≠≥ndToEchoModuÀ
(
pVèb
->
öãΩ
, "xFilter");

687 
	`≠≥ndToEchoModuÀ
(
pVèb
->
öãΩ
, 
idxSå
);

688 
i
=0; i<
¨gc
; i++){

689 
	`≠≥ndToEchoModuÀ
(
pVèb
->
öãΩ
, (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[
i
]));

692 
	`sqlôe3_föÆize
(
pCur
->
pStmt
);

693 
pCur
->
pStmt
 = 0;

698 
rc
 = 
	`sqlôe3_¥ï¨e
(
db
, 
idxSå
, -1, &
pCur
->
pStmt
, 0);

699 
	`as£π
–
pCur
->
pStmt
 || 
rc
!=
SQLITE_OK
 );

700 
i
=0; 
rc
==
SQLITE_OK
 && i<
¨gc
; i++){

701 
rc
 = 
	`sqlôe3_böd_vÆue
(
pCur
->
pStmt
, 
i
+1, 
¨gv
[i]);

705 if–
rc
==
SQLITE_OK
 ){

706 
rc
 = 
	`echoNext
(
pVèbCurs‹
);

709  
rc
;

710 
	}
}

726 
	$°rög_c⁄ˇt
(**
pzSå
, *
zAµíd
, 
doFªe
, *
pRc
){

727 *
zIn
 = *
pzSå
;

728 if–!
zAµíd
 && 
doFªe
 && *
pRc
==
SQLITE_OK
 ){

729 *
pRc
 = 
SQLITE_NOMEM
;

731 if–*
pRc
!=
SQLITE_OK
 ){

732 
	`sqlôe3_‰ì
(
zIn
);

733 
zIn
 = 0;

735 if–
zIn
 ){

736 *
zTemp
 = 
zIn
;

737 
zIn
 = 
	`sqlôe3_m¥ötf
("%s%s", zIn, 
zAµíd
);

738 
	`sqlôe3_‰ì
(
zTemp
);

740 
zIn
 = 
	`sqlôe3_m¥ötf
("%s", 
zAµíd
);

742 if–!
zIn
 ){

743 *
pRc
 = 
SQLITE_NOMEM
;

746 *
pzSå
 = 
zIn
;

747 if–
doFªe
 ){

748 
	`sqlôe3_‰ì
(
zAµíd
);

750 
	}
}

762 *
	$echoSñe˘Li°
(
echo_vèb
 *
pTab
, 
sqlôe3_ödex_öfo
 *
pIdxInfo
){

763 *
zRë
 = 0;

764 if–
	`sqlôe3_libvîsi⁄_numbî
()<3010000 ){

765 
zRë
 = 
	`sqlôe3_m¥ötf
(", *");

767 
i
;

768 
i
=0; i<
pTab
->
nCﬁ
; i++){

769 if–
pIdxInfo
->
cﬁU£d
 & ((
sqlôe3_uöt64
)1 << (
i
>=63 ? 63 : i)) ){

770 
zRë
 = 
	`sqlôe3_m¥ötf
("%z, %s", zRë, 
pTab
->
aCﬁ
[
i
]);

772 
zRë
 = 
	`sqlôe3_m¥ötf
("%z, NULL", zRet);

774 if–!
zRë
 ) ;

777  
zRë
;

778 
	}
}

802 
	$echoBe°Index
(
sqlôe3_vèb
 *
èb
, 
sqlôe3_ödex_öfo
 *
pIdxInfo
){

803 
ii
;

804 *
zQuîy
 = 0;

805 *
zCﬁ
 = 0;

806 *
zNew
;

807 
nArg
 = 0;

808 c⁄° *
zSï
 = "WHERE";

809 
echo_vèb
 *
pVèb
 = (echo_vèb *)
èb
;

810 
sqlôe3_°mt
 *
pStmt
 = 0;

811 
T˛_I¡îp
 *
öãΩ
 = 
pVèb
->interp;

813 
nRow
 = 0;

814 
u£Idx
 = 0;

815 
rc
 = 
SQLITE_OK
;

816 
u£Co°
 = 0;

817 
co°
 = 0;

818 
isIgn‹eUßbÀ
 = 0;

819 if–
	`T˛_GëV¨
(
öãΩ
, "echo_moduÀ_ign‹e_ußbÀ", 
TCL_GLOBAL_ONLY
) ){

820 
isIgn‹eUßbÀ
 = 1;

823 if–
	`simuœãVèbEº‹
(
pVèb
, "xBestIndex") ){

824  
SQLITE_ERROR
;

832 if–
	`T˛_GëV¨
(
öãΩ
, "echo_moduÀ_co°", 
TCL_GLOBAL_ONLY
) ){

833 
co°
 = 
	`©of
(
	`T˛_GëV¨
(
öãΩ
, "echo_moduÀ_co°", 
TCL_GLOBAL_ONLY
));

834 
u£Co°
 = 1;

836 
zQuîy
 = 
	`sqlôe3_m¥ötf
("SELECT cou¡(*ËFROM %Q", 
pVèb
->
zTabÀName
);

837 if–!
zQuîy
 ){

838  
SQLITE_NOMEM
;

840 
rc
 = 
	`sqlôe3_¥ï¨e
(
pVèb
->
db
, 
zQuîy
, -1, &
pStmt
, 0);

841 
	`sqlôe3_‰ì
(
zQuîy
);

842 if–
rc
!=
SQLITE_OK
 ){

843  
rc
;

845 
	`sqlôe3_°ï
(
pStmt
);

846 
nRow
 = 
	`sqlôe3_cﬁumn_öt
(
pStmt
, 0);

847 
rc
 = 
	`sqlôe3_föÆize
(
pStmt
);

848 if–
rc
!=
SQLITE_OK
 ){

849  
rc
;

853 
zCﬁ
 = 
	`echoSñe˘Li°
(
pVèb
, 
pIdxInfo
);

854 if–!
zCﬁ
 )  
SQLITE_NOMEM
;

855 
zQuîy
 = 
	`sqlôe3_m¥ötf
("SELECTÑowid%z FROM %Q", 
zCﬁ
, 
pVèb
->
zTabÀName
);

856 if–!
zQuîy
 )  
SQLITE_NOMEM
;

858 
ii
=0; ii<
pIdxInfo
->
nC⁄°øöt
; ii++){

859 c⁄° 
sqlôe3_ödex_c⁄°øöt
 *
pC⁄°øöt
;

860 
sqlôe3_ödex_c⁄°øöt_ußge
 *
pUßge
;

861 
iCﬁ
;

863 
pC⁄°øöt
 = &
pIdxInfo
->
aC⁄°øöt
[
ii
];

864 
pUßge
 = &
pIdxInfo
->
aC⁄°øötUßge
[
ii
];

866 if–!
isIgn‹eUßbÀ
 && !
pC⁄°øöt
->
ußbÀ
 ) ;

868 
iCﬁ
 = 
pC⁄°øöt
->
iCﬁumn
;

869 if–
iCﬁ
<0 || 
pVèb
->
aIndex
[iCol] ){

870 *
zNewCﬁ
 = 
iCﬁ
>=0 ? 
pVèb
->
aCﬁ
[iCol] : "rowid";

871 *
zOp
 = 0;

872 
u£Idx
 = 1;

873  
pC⁄°øöt
->
›
 ){

874 
SQLITE_INDEX_CONSTRAINT_EQ
:

875 
zOp
 = "="; ;

876 
SQLITE_INDEX_CONSTRAINT_LT
:

877 
zOp
 = "<"; ;

878 
SQLITE_INDEX_CONSTRAINT_GT
:

879 
zOp
 = ">"; ;

880 
SQLITE_INDEX_CONSTRAINT_LE
:

881 
zOp
 = "<="; ;

882 
SQLITE_INDEX_CONSTRAINT_GE
:

883 
zOp
 = ">="; ;

884 
SQLITE_INDEX_CONSTRAINT_MATCH
:

892 
zOp
 = "LIKE"; ;

893 
SQLITE_INDEX_CONSTRAINT_LIKE
:

894 
zOp
 = "like"; ;

895 
SQLITE_INDEX_CONSTRAINT_GLOB
:

896 
zOp
 = "glob"; ;

897 
SQLITE_INDEX_CONSTRAINT_REGEXP
:

898 
zOp
 = "regexp"; ;

900 if–
zOp
[0]=='L' ){

901 
zNew
 = 
	`sqlôe3_m¥ötf
(" %s %s LIKE (SELECT '%%'||?||'%%')",

902 
zSï
, 
zNewCﬁ
);

904 
zNew
 = 
	`sqlôe3_m¥ötf
(" %†%†%†?", 
zSï
, 
zNewCﬁ
, 
zOp
);

906 
	`°rög_c⁄ˇt
(&
zQuîy
, 
zNew
, 1, &
rc
);

908 
zSï
 = "AND";

909 
pUßge
->
¨gvIndex
 = ++
nArg
;

910 
pUßge
->
omô
 = 1;

918 if–
pIdxInfo
->
nOrdîBy
==1 && (

919 
pIdxInfo
->
aOrdîBy
->
iCﬁumn
<0 ||

920 
pVèb
->
aIndex
[
pIdxInfo
->
aOrdîBy
->
iCﬁumn
]) ){

921 
iCﬁ
 = 
pIdxInfo
->
aOrdîBy
->
iCﬁumn
;

922 *
zNewCﬁ
 = 
iCﬁ
>=0 ? 
pVèb
->
aCﬁ
[iCol] : "rowid";

923 *
zDú
 = 
pIdxInfo
->
aOrdîBy
->
desc
?"DESC":"ASC";

924 
zNew
 = 
	`sqlôe3_m¥ötf
(" ORDER BY %†%s", 
zNewCﬁ
, 
zDú
);

925 
	`°rög_c⁄ˇt
(&
zQuîy
, 
zNew
, 1, &
rc
);

926 
pIdxInfo
->
‹dîByC⁄sumed
 = 1;

929 
	`≠≥ndToEchoModuÀ
(
pVèb
->
öãΩ
, "xBestIndex");;

930 
	`≠≥ndToEchoModuÀ
(
pVèb
->
öãΩ
, 
zQuîy
);

932 if–!
zQuîy
 ){

933  
rc
;

935 
pIdxInfo
->
idxNum
 = 
	`hashSåög
(
zQuîy
);

936 
pIdxInfo
->
idxSå
 = 
zQuîy
;

937 
pIdxInfo
->
√edToFªeIdxSå
 = 1;

938 if–
u£Co°
 ){

939 
pIdxInfo
->
e°im©edCo°
 = 
co°
;

940 }if–
u£Idx
 ){

942  
ii
=0; ii<(()*8)-1; ii++ ){

943 if–
nRow
 & (1<<
ii
) ){

944 
pIdxInfo
->
e°im©edCo°
 = ()
ii
;

948 
pIdxInfo
->
e°im©edCo°
 = ()
nRow
;

950  
rc
;

951 
	}
}

967 
	$echoUpd©e
(

968 
sqlôe3_vèb
 *
èb
,

969 
nD©a
,

970 
sqlôe3_vÆue
 **
≠D©a
,

971 
sqlôe_öt64
 *
pRowid


973 
echo_vèb
 *
pVèb
 = (echo_vèb *)
èb
;

974 
sqlôe3
 *
db
 = 
pVèb
->db;

975 
rc
 = 
SQLITE_OK
;

977 
sqlôe3_°mt
 *
pStmt
 = 0;

978 *
z
 = 0;

979 
bödArgZîo
 = 0;

980 
bödArgO√
 = 0;

981 
i
;

983 
	`as£π
–
nD©a
==
pVèb
->
nCﬁ
+2 ||ÇData==1 );

987 
	`as£π
–
pVèb
->
öTønß˘i⁄
 );

989 if–
	`simuœãVèbEº‹
(
pVèb
, "xUpdate") ){

990  
SQLITE_ERROR
;

994 if–
nD©a
>1 && 
	`sqlôe3_vÆue_ty≥
(
≠D©a
[0])==
SQLITE_INTEGER
 ){

995 *
zSï
 = " SET";

996 
z
 = 
	`sqlôe3_m¥ötf
("UPDATE %Q", 
pVèb
->
zTabÀName
);

997 if–!
z
 ){

998 
rc
 = 
SQLITE_NOMEM
;

1001 
bödArgO√
 = (
≠D©a
[1] && 
	`sqlôe3_vÆue_ty≥
◊pD©a[1])==
SQLITE_INTEGER
);

1002 
bödArgZîo
 = 1;

1004 if–
bödArgO√
 ){

1005 
	`°rög_c⁄ˇt
(&
z
, " SETÑowid=?1 ", 0, &
rc
);

1006 
zSï
 = ",";

1008 
i
=2; i<
nD©a
; i++){

1009 if–
≠D©a
[
i
]==0 ) ;

1010 
	`°rög_c⁄ˇt
(&
z
, 
	`sqlôe3_m¥ötf
(

1011 "%†%Q=?%d", 
zSï
, 
pVèb
->
aCﬁ
[
i
-2], i), 1, &
rc
);

1012 
zSï
 = ",";

1014 
	`°rög_c⁄ˇt
(&
z
, 
	`sqlôe3_m¥ötf
(" WHEREÑowid=?%d", 
nD©a
), 1, &
rc
);

1018 if–
nD©a
==1 && 
	`sqlôe3_vÆue_ty≥
(
≠D©a
[0])==
SQLITE_INTEGER
 ){

1019 
z
 = 
	`sqlôe3_m¥ötf
("DELETE FROM %Q WHEREÑowid = ?1", 
pVèb
->
zTabÀName
);

1020 if–!
z
 ){

1021 
rc
 = 
SQLITE_NOMEM
;

1023 
bödArgZîo
 = 1;

1027 if–
nD©a
>2 && 
	`sqlôe3_vÆue_ty≥
(
≠D©a
[0])==
SQLITE_NULL
 ){

1028 
ii
;

1029 *
zIn£π
 = 0;

1030 *
zVÆues
 = 0;

1032 
zIn£π
 = 
	`sqlôe3_m¥ötf
("INSERT INTO %Q (", 
pVèb
->
zTabÀName
);

1033 if–!
zIn£π
 ){

1034 
rc
 = 
SQLITE_NOMEM
;

1036 if–
	`sqlôe3_vÆue_ty≥
(
≠D©a
[1])==
SQLITE_INTEGER
 ){

1037 
bödArgO√
 = 1;

1038 
zVÆues
 = 
	`sqlôe3_m¥ötf
("?");

1039 
	`°rög_c⁄ˇt
(&
zIn£π
, "rowid", 0, &
rc
);

1042 
	`as£π
((
pVèb
->
nCﬁ
+2)==
nD©a
);

1043 
ii
=2; ii<
nD©a
; ii++){

1044 
	`°rög_c⁄ˇt
(&
zIn£π
,

1045 
	`sqlôe3_m¥ötf
("%s%Q", 
zVÆues
?", ":"", 
pVèb
->
aCﬁ
[
ii
-2]), 1, &
rc
);

1046 
	`°rög_c⁄ˇt
(&
zVÆues
,

1047 
	`sqlôe3_m¥ötf
("%s?%d", 
zVÆues
?", ":"", 
ii
), 1, &
rc
);

1050 
	`°rög_c⁄ˇt
(&
z
, 
zIn£π
, 1, &
rc
);

1051 
	`°rög_c⁄ˇt
(&
z
, "ËVALUES(", 0, &
rc
);

1052 
	`°rög_c⁄ˇt
(&
z
, 
zVÆues
, 1, &
rc
);

1053 
	`°rög_c⁄ˇt
(&
z
, ")", 0, &
rc
);

1058 
	`as£π
(0);

1059  
SQLITE_ERROR
;

1062 if–
rc
==
SQLITE_OK
 ){

1063 
rc
 = 
	`sqlôe3_¥ï¨e
(
db
, 
z
, -1, &
pStmt
, 0);

1065 
	`as£π
–
rc
!=
SQLITE_OK
 || 
pStmt
 );

1066 
	`sqlôe3_‰ì
(
z
);

1067 if–
rc
==
SQLITE_OK
 ) {

1068 if–
bödArgZîo
 ){

1069 
	`sqlôe3_böd_vÆue
(
pStmt
, 
nD©a
, 
≠D©a
[0]);

1071 if–
bödArgO√
 ){

1072 
	`sqlôe3_böd_vÆue
(
pStmt
, 1, 
≠D©a
[1]);

1074 
i
=2; i<
nD©a
 && 
rc
==
SQLITE_OK
; i++){

1075 if–
≠D©a
[
i
] ) 
rc
 = 
	`sqlôe3_böd_vÆue
(
pStmt
, i,ápData[i]);

1077 if–
rc
==
SQLITE_OK
 ){

1078 
	`sqlôe3_°ï
(
pStmt
);

1079 
rc
 = 
	`sqlôe3_föÆize
(
pStmt
);

1081 
	`sqlôe3_föÆize
(
pStmt
);

1085 if–
pRowid
 && 
rc
==
SQLITE_OK
 ){

1086 *
pRowid
 = 
	`sqlôe3_œ°_ö£π_rowid
(
db
);

1088 if–
rc
!=
SQLITE_OK
 ){

1089 
èb
->
zEºMsg
 = 
	`sqlôe3_m¥ötf
("echo-vèb-îr‹: %s", 
	`sqlôe3_îrmsg
(
db
));

1092  
rc
;

1093 
	}
}

1100 
	$echoTønß˘i⁄CÆl
(
sqlôe3_vèb
 *
èb
, c⁄° *
zCÆl
){

1101 *
z
;

1102 
echo_vèb
 *
pVèb
 = (echo_vèb *)
èb
;

1103 
z
 = 
	`sqlôe3_m¥ötf
("echo(%s)", 
pVèb
->
zTabÀName
);

1104 if–
z
==0 )  
SQLITE_NOMEM
;

1105 
	`≠≥ndToEchoModuÀ
(
pVèb
->
öãΩ
, 
zCÆl
);

1106 
	`≠≥ndToEchoModuÀ
(
pVèb
->
öãΩ
, 
z
);

1107 
	`sqlôe3_‰ì
(
z
);

1108  
SQLITE_OK
;

1109 
	}
}

1110 
	$echoBegö
(
sqlôe3_vèb
 *
èb
){

1111 
rc
;

1112 
echo_vèb
 *
pVèb
 = (echo_vèb *)
èb
;

1113 
T˛_I¡îp
 *
öãΩ
 = 
pVèb
->interp;

1114 c⁄° *
zVÆ
;

1118 
	`as£π
–!
pVèb
->
öTønß˘i⁄
 );

1120 if–
	`simuœãVèbEº‹
(
pVèb
, "xBegin") ){

1121  
SQLITE_ERROR
;

1124 
rc
 = 
	`echoTønß˘i⁄CÆl
(
èb
, "xBegin");

1126 if–
rc
==
SQLITE_OK
 ){

1131 
zVÆ
 = 
	`T˛_GëV¨
(
öãΩ
, "echo_moduÀ_begö_Áû", 
TCL_GLOBAL_ONLY
);

1132 if–
zVÆ
 && 0==
	`°rcmp
(zVÆ, 
pVèb
->
zTabÀName
) ){

1133 
rc
 = 
SQLITE_ERROR
;

1136 if–
rc
==
SQLITE_OK
 ){

1137 
pVèb
->
öTønß˘i⁄
 = 1;

1139  
rc
;

1140 
	}
}

1141 
	$echoSync
(
sqlôe3_vèb
 *
èb
){

1142 
rc
;

1143 
echo_vèb
 *
pVèb
 = (echo_vèb *)
èb
;

1144 
T˛_I¡îp
 *
öãΩ
 = 
pVèb
->interp;

1145 c⁄° *
zVÆ
;

1149 
	`as£π
–
pVèb
->
öTønß˘i⁄
 );

1151 if–
	`simuœãVèbEº‹
(
pVèb
, "xSync") ){

1152  
SQLITE_ERROR
;

1155 
rc
 = 
	`echoTønß˘i⁄CÆl
(
èb
, "xSync");

1157 if–
rc
==
SQLITE_OK
 ){

1162 
zVÆ
 = 
	`T˛_GëV¨
(
öãΩ
, "echo_moduÀ_sync_Áû", 
TCL_GLOBAL_ONLY
);

1163 if–
zVÆ
 && 0==
	`°rcmp
(zVÆ, 
pVèb
->
zTabÀName
) ){

1164 
rc
 = -1;

1167  
rc
;

1168 
	}
}

1169 
	$echoCommô
(
sqlôe3_vèb
 *
èb
){

1170 
echo_vèb
 *
pVèb
 = (echo_vèb*)
èb
;

1171 
rc
;

1175 
	`as£π
–
pVèb
->
öTønß˘i⁄
 );

1177 if–
	`simuœãVèbEº‹
(
pVèb
, "xCommit") ){

1178  
SQLITE_ERROR
;

1181 
	`sqlôe3BegöBíignMÆloc
();

1182 
rc
 = 
	`echoTønß˘i⁄CÆl
(
èb
, "xCommit");

1183 
	`sqlôe3EndBíignMÆloc
();

1184 
pVèb
->
öTønß˘i⁄
 = 0;

1185  
rc
;

1186 
	}
}

1187 
	$echoRﬁlback
(
sqlôe3_vèb
 *
èb
){

1188 
rc
;

1189 
echo_vèb
 *
pVèb
 = (echo_vèb*)
èb
;

1193 
	`as£π
–
pVèb
->
öTønß˘i⁄
 );

1195 
rc
 = 
	`echoTønß˘i⁄CÆl
(
èb
, "xRollback");

1196 
pVèb
->
öTønß˘i⁄
 = 0;

1197  
rc
;

1198 
	}
}

1205 
	$ovîlﬂdedGlobFun˘i⁄
(

1206 
sqlôe3_c⁄ãxt
 *
pC⁄ãxt
,

1207 
nArg
,

1208 
sqlôe3_vÆue
 **
≠Arg


1210 
T˛_I¡îp
 *
öãΩ
 = 
	`sqlôe3_u£r_d©a
(
pC⁄ãxt
);

1211 
T˛_DSåög
 
°r
;

1212 
i
;

1213 
rc
;

1214 
	`T˛_DSåögInô
(&
°r
);

1215 
	`T˛_DSåögAµídEÀmít
(&
°r
, "::echo_glob_overload");

1216 
i
=0; i<
nArg
; i++){

1217 
	`T˛_DSåögAµídEÀmít
(&
°r
, (*)
	`sqlôe3_vÆue_ãxt
(
≠Arg
[
i
]));

1219 
rc
 = 
	`T˛_EvÆ
(
öãΩ
, 
	`T˛_DSåögVÆue
(&
°r
));

1220 
	`T˛_DSåögFªe
(&
°r
);

1221 if–
rc
 ){

1222 
	`sqlôe3_ªsu…_îr‹
(
pC⁄ãxt
, 
	`T˛_GëSåögResu…
(
öãΩ
), -1);

1224 
	`sqlôe3_ªsu…_ãxt
(
pC⁄ãxt
, 
	`T˛_GëSåögResu…
(
öãΩ
),

1225 -1, 
SQLITE_TRANSIENT
);

1227 
	`T˛_Re£tResu…
(
öãΩ
);

1228 
	}
}

1238 
echoFödFun˘i⁄
(

1239 
sqlôe3_vèb
 *
vèb
,

1240 
nArg
,

1241 c⁄° *
zFuncName
,

1242 (**
pxFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

1243 **
µArg


1245 
echo_vèb
 *
pVèb
 = (echo_vèb *)
vèb
;

1246 
T˛_I¡îp
 *
öãΩ
 = 
pVèb
->interp;

1247 
T˛_CmdInfo
 
öfo
;

1248 if–
	`°rcmp
(
zFuncName
,"glob")!=0 ){

1251 if–
	`T˛_GëComm™dInfo
(
öãΩ
, "::echo_glob_ovîlﬂd", &
öfo
)==0 ){

1254 *
pxFunc
 = 
ovîlﬂdedGlobFun˘i⁄
;

1255 *
µArg
 = 
öãΩ
;

1257 
	}
}

1259 
	$echoRíame
(
sqlôe3_vèb
 *
vèb
, c⁄° *
zNewName
){

1260 
rc
 = 
SQLITE_OK
;

1261 
echo_vèb
 *
p
 = (echo_vèb *)
vèb
;

1263 if–
	`simuœãVèbEº‹
(
p
, "xRename") ){

1264  
SQLITE_ERROR
;

1267 if–
p
->
isP©ã∫
 ){

1268 
nThis
 = ()
	`°æí
(
p
->
zThis
);

1269 *
zSql
 = 
	`sqlôe3_m¥ötf
("ALTER TABLE %s RENAME TO %s%s",

1270 
p
->
zTabÀName
, 
zNewName
, &p->zTabÀName[
nThis
]

1272 
rc
 = 
	`sqlôe3_exec
(
p
->
db
, 
zSql
, 0, 0, 0);

1273 
	`sqlôe3_‰ì
(
zSql
);

1276  
rc
;

1277 
	}
}

1279 
	$echoSavïoöt
(
sqlôe3_vèb
 *
pVTab
, 
iSavïoöt
){

1280 
	`as£π
–
pVTab
 );

1281  
SQLITE_OK
;

1282 
	}
}

1284 
	$echoRñó£
(
sqlôe3_vèb
 *
pVTab
, 
iSavïoöt
){

1285 
	`as£π
–
pVTab
 );

1286  
SQLITE_OK
;

1287 
	}
}

1289 
	$echoRﬁlbackTo
(
sqlôe3_vèb
 *
pVTab
, 
iSavïoöt
){

1290 
	`as£π
–
pVTab
 );

1291  
SQLITE_OK
;

1292 
	}
}

1298 
sqlôe3_moduÀ
 
	gechoModuÀ
 = {

1300 
echoCª©e
,

1301 
echoC⁄√˘
,

1302 
echoBe°Index
,

1303 
echoDisc⁄√˘
,

1304 
echoDe°roy
,

1305 
echoO≥n
,

1306 
echoClo£
,

1307 
echoFûãr
,

1308 
echoNext
,

1309 
echoEof
,

1310 
echoCﬁumn
,

1311 
echoRowid
,

1312 
echoUpd©e
,

1313 
echoBegö
,

1314 
echoSync
,

1315 
echoCommô
,

1316 
echoRﬁlback
,

1317 
echoFödFun˘i⁄
,

1318 
echoRíame


1321 
sqlôe3_moduÀ
 
	gechoModuÀV2
 = {

1323 
echoCª©e
,

1324 
echoC⁄√˘
,

1325 
echoBe°Index
,

1326 
echoDisc⁄√˘
,

1327 
echoDe°roy
,

1328 
echoO≥n
,

1329 
echoClo£
,

1330 
echoFûãr
,

1331 
echoNext
,

1332 
echoEof
,

1333 
echoCﬁumn
,

1334 
echoRowid
,

1335 
echoUpd©e
,

1336 
echoBegö
,

1337 
echoSync
,

1338 
echoCommô
,

1339 
echoRﬁlback
,

1340 
echoFödFun˘i⁄
,

1341 
echoRíame
,

1342 
echoSavïoöt
,

1343 
echoRñó£
,

1344 
echoRﬁlbackTo


1350 
gëDbPoöãr
(
T˛_I¡îp
 *
öãΩ
, c⁄° *
zA
, 
sqlôe3
 **
µDb
);

1351 c⁄° *
sqlôe3EºName
();

1353 
	$moduÀDe°roy
(*
p
){

1354 
	`sqlôe3_‰ì
(
p
);

1355 
	}
}

1360 
SQLITE_TCLAPI
 
	$ªgi°î_echo_moduÀ
(

1361 
Clõ¡D©a
 
˛õ¡D©a
,

1362 
T˛_I¡îp
 *
öãΩ
,

1363 
objc
,

1364 
T˛_Obj
 *
CONST
 
objv
[]

1366 
rc
;

1367 
sqlôe3
 *
db
;

1368 
EchoModuÀ
 *
pMod
;

1369 if–
objc
!=2 ){

1370 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB");

1371  
TCL_ERROR
;

1373 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

1376 
pMod
 = 
	`sqlôe3_mÆloc
((
EchoModuÀ
));

1377 
pMod
->
öãΩ
 = interp;

1378 
rc
 = 
	`sqlôe3_¸óã_moduÀ_v2
(

1379 
db
, "echo", &
echoModuÀ
, (*)
pMod
, 
moduÀDe°roy


1383 if–
rc
==
SQLITE_OK
 ){

1384 
pMod
 = 
	`sqlôe3_mÆloc
((
EchoModuÀ
));

1385 
pMod
->
öãΩ
 = interp;

1386 
rc
 = 
	`sqlôe3_¸óã_moduÀ_v2
(
db
, "echo_v2",

1387 &
echoModuÀV2
, (*)
pMod
, 
moduÀDe°roy


1391 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_STATIC
);

1392  
TCL_OK
;

1393 
	}
}

1400 
SQLITE_TCLAPI
 
	$de˛¨e_vèb
(

1401 
Clõ¡D©a
 
˛õ¡D©a
,

1402 
T˛_I¡îp
 *
öãΩ
,

1403 
objc
,

1404 
T˛_Obj
 *
CONST
 
objv
[]

1406 
sqlôe3
 *
db
;

1407 
rc
;

1408 if–
objc
!=3 ){

1409 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB SQL");

1410  
TCL_ERROR
;

1412 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

1413 
rc
 = 
	`sqlôe3_de˛¨e_vèb
(
db
, 
	`T˛_GëSåög
(
objv
[2]));

1414 if–
rc
!=
SQLITE_OK
 ){

1415 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3_îrmsg
(
db
), 
TCL_VOLATILE
);

1416  
TCL_ERROR
;

1418  
TCL_OK
;

1419 
	}
}

1426 
	$Sqlôëe°8_Inô
(
T˛_I¡îp
 *
öãΩ
){

1427 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


1429 *
zName
;

1430 
T˛_ObjCmdProc
 *
xProc
;

1431 *
˛õ¡D©a
;

1432 } 
aObjCmd
[] = {

1433 { "ªgi°î_echo_moduÀ", 
ªgi°î_echo_moduÀ
, 0 },

1434 { "sqlôe3_de˛¨e_vèb", 
de˛¨e_vèb
, 0 },

1436 
i
;

1437 
i
=0; i<(
aObjCmd
)/(aObjCmd[0]); i++){

1438 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
aObjCmd
[
i
].
zName
,

1439 
aObjCmd
[
i
].
xProc
,áObjCmd[i].
˛õ¡D©a
, 0);

1442  
TCL_OK
;

1443 
	}
}

	@test9.c

17 
	~"sqlôeI¡.h
"

18 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

19 
	~"sqlôe_t˛.h
"

21 
	~"t˛.h
"

23 
	~<°dlib.h
>

24 
	~<°rög.h
>

29 
SQLITE_TCLAPI
 
	$c_cﬁœti⁄_ã°
(

30 
Clõ¡D©a
 
˛õ¡D©a
,

31 
T˛_I¡îp
 *
öãΩ
,

32 
objc
,

33 
T˛_Obj
 *
CONST
 
objv
[]

35 c⁄° *
zEºFun˘i⁄
 = "N/A";

36 
sqlôe3
 *
db
;

38 
rc
;

39 if–
objc
!=1 ){

40 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

41  
TCL_ERROR
;

45 
rc
 = 
	`sqlôe3_›í
(":mem‹y:", &
db
);

46 if–
rc
!=
SQLITE_OK
 ){

47 
zEºFun˘i⁄
 = "sqlite3_open";

48 
îr‹_out
;

51 
rc
 = 
	`sqlôe3_¸óã_cﬁœti⁄
(
db
, "collate", 456, 0, 0);

52 if–
rc
!=
SQLITE_MISUSE
 ){

53 
	`sqlôe3_˛o£
(
db
);

54 
zEºFun˘i⁄
 = "sqlite3_create_collation";

55 
îr‹_out
;

58 
	`sqlôe3_˛o£
(
db
);

59  
TCL_OK
;

61 
îr‹_out
:

62 
	`T˛_Re£tResu…
(
öãΩ
);

63 
	`T˛_AµídResu…
(
öãΩ
, "Eº‹Åe°ög fun˘i⁄: ", 
zEºFun˘i⁄
, 0);

64  
TCL_ERROR
;

65 
	}
}

70 
SQLITE_TCLAPI
 
	$c_ªÆloc_ã°
(

71 
Clõ¡D©a
 
˛õ¡D©a
,

72 
T˛_I¡îp
 *
öãΩ
,

73 
objc
,

74 
T˛_Obj
 *
CONST
 
objv
[]

76 *
p
;

77 c⁄° *
zEºFun˘i⁄
 = "N/A";

79 if–
objc
!=1 ){

80 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

81  
TCL_ERROR
;

84 
p
 = 
	`sqlôe3_mÆloc
(5);

85 if–!
p
 ){

86 
zEºFun˘i⁄
 = "sqlite3_malloc";

87 
îr‹_out
;

93 
p
 = 
	`sqlôe3_ªÆloc
(p, -1);

94 if–
p
 ){

95 
zEºFun˘i⁄
 = "sqlite3_realloc";

96 
îr‹_out
;

99  
TCL_OK
;

101 
îr‹_out
:

102 
	`T˛_Re£tResu…
(
öãΩ
);

103 
	`T˛_AµídResu…
(
öãΩ
, "Eº‹Åe°ög fun˘i⁄: ", 
zEºFun˘i⁄
, 0);

104  
TCL_ERROR
;

105 
	}
}

111 
SQLITE_TCLAPI
 
	$c_misu£_ã°
(

112 
Clõ¡D©a
 
˛õ¡D©a
,

113 
T˛_I¡îp
 *
öãΩ
,

114 
objc
,

115 
T˛_Obj
 *
CONST
 
objv
[]

117 c⁄° *
zEºFun˘i⁄
 = "N/A";

118 
sqlôe3
 *
db
 = 0;

119 
sqlôe3_°mt
 *
pStmt
;

120 
rc
;

122 if–
objc
!=1 ){

123 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

124  
TCL_ERROR
;

130 
rc
 = 
	`sqlôe3_›í
(":mem‹y:", &
db
);

131 if–
rc
!=
SQLITE_OK
 ){

132 
zEºFun˘i⁄
 = "sqlite3_open";

133 
îr‹_out
;

135 
	`sqlôe3_˛o£
(
db
);

138 
rc
 = 
	`sqlôe3_îrcode
(
db
);

139 if–
rc
!=
SQLITE_MISUSE
 ){

140 
zEºFun˘i⁄
 = "sqlite3_errcode";

141 
îr‹_out
;

144 
pStmt
 = (
sqlôe3_°mt
*)1234;

145 
rc
 = 
	`sqlôe3_¥ï¨e
(
db
, 0, 0, &
pStmt
, 0);

146 if–
rc
!=
SQLITE_MISUSE
 ){

147 
zEºFun˘i⁄
 = "sqlite3_prepare";

148 
îr‹_out
;

150 
	`as£π
–
pStmt
==0 );

152 
pStmt
 = (
sqlôe3_°mt
*)1234;

153 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
db
, 0, 0, &
pStmt
, 0);

154 if–
rc
!=
SQLITE_MISUSE
 ){

155 
zEºFun˘i⁄
 = "sqlite3_prepare_v2";

156 
îr‹_out
;

158 
	`as£π
–
pStmt
==0 );

160 #i‚de‡
SQLITE_OMIT_UTF16


161 
pStmt
 = (
sqlôe3_°mt
*)1234;

162 
rc
 = 
	`sqlôe3_¥ï¨e16
(
db
, 0, 0, &
pStmt
, 0);

163 if–
rc
!=
SQLITE_MISUSE
 ){

164 
zEºFun˘i⁄
 = "sqlite3_prepare16";

165 
îr‹_out
;

167 
	`as£π
–
pStmt
==0 );

168 
pStmt
 = (
sqlôe3_°mt
*)1234;

169 
rc
 = 
	`sqlôe3_¥ï¨e16_v2
(
db
, 0, 0, &
pStmt
, 0);

170 if–
rc
!=
SQLITE_MISUSE
 ){

171 
zEºFun˘i⁄
 = "sqlite3_prepare16_v2";

172 
îr‹_out
;

174 
	`as£π
–
pStmt
==0 );

177  
TCL_OK
;

179 
îr‹_out
:

180 
	`T˛_Re£tResu…
(
öãΩ
);

181 
	`T˛_AµídResu…
(
öãΩ
, "Eº‹Åe°ög fun˘i⁄: ", 
zEºFun˘i⁄
, 0);

182  
TCL_ERROR
;

183 
	}
}

188 
	$Sqlôëe°9_Inô
(
T˛_I¡îp
 *
öãΩ
){

190 *
zName
;

191 
T˛_ObjCmdProc
 *
xProc
;

192 *
˛õ¡D©a
;

193 } 
aObjCmd
[] = {

194 { "c_misu£_ã°", 
c_misu£_ã°
, 0 },

195 { "c_ªÆloc_ã°", 
c_ªÆloc_ã°
, 0 },

196 { "c_cﬁœti⁄_ã°", 
c_cﬁœti⁄_ã°
, 0 },

198 
i
;

199 
i
=0; i<(
aObjCmd
)/(aObjCmd[0]); i++){

200 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
aObjCmd
[
i
].
zName
,

201 
aObjCmd
[
i
].
xProc
,áObjCmd[i].
˛õ¡D©a
, 0);

203  
TCL_OK
;

204 
	}
}

	@test_async.c

17 
	#TCL_THREADS


	)

18 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

19 
	~"sqlôe_t˛.h
"

21 
	~"t˛.h
"

22 #i‚de‡
SQLITE_TCLAPI


23 
	#SQLITE_TCLAPI


	)

27 #ifde‡
SQLITE_ENABLE_ASYNCIO


29 
	~"sqlôe3async.h
"

30 
	~"sqlôe3.h
"

31 
	~<as£π.h
>

34 c⁄° *
sqlôe3EºName
();

37 
	sTe°AsyncGlobÆ
 {

38 
	misIn°ÆÀd
;

39 } 
	gã°async_g
 = { 0 };

41 
TCL_DECLARE_MUTEX
(
ã°async_g_wrôîMuãx
);

46 
SQLITE_TCLAPI
 
	$ã°AsyncInô
(

47 * 
˛õ¡D©a
,

48 
T˛_I¡îp
 *
öãΩ
,

49 
objc
,

50 
T˛_Obj
 *
CONST
 
objv
[]

52 c⁄° *
zP¨ít
;

53 
isDeÁu…
;

54 
rc
;

56 if–
objc
!=3 ){

57 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "PARENT-VFS ISDEFAULT");

58  
TCL_ERROR
;

60 
zP¨ít
 = 
	`T˛_GëSåög
(
objv
[1]);

61 if–!*
zP¨ít
 ) {

62 
zP¨ít
 = 0;

64 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[2], &
isDeÁu…
) ){

65  
TCL_ERROR
;

68 
rc
 = 
	`sqlôe3async_öôülize
(
zP¨ít
, 
isDeÁu…
);

69 if–
rc
!=
SQLITE_OK
 ){

70 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
(
	`sqlôe3EºName
(
rc
), -1));

71  
TCL_ERROR
;

73  
TCL_OK
;

74 
	}
}

79 
SQLITE_TCLAPI
 
	$ã°AsyncShutdown
(

80 * 
˛õ¡D©a
,

81 
T˛_I¡îp
 *
öãΩ
,

82 
objc
,

83 
T˛_Obj
 *
CONST
 
objv
[]

85 
	`sqlôe3async_shutdown
();

86  
TCL_OK
;

87 
	}
}

89 
T˛_ThªadCª©eTy≥
 
	$t˛WrôîThªad
(
Clõ¡D©a
 
pIsSèπed
){

90 
	`T˛_MuãxLock
(&
ã°async_g_wrôîMuãx
);

91 *((*)
pIsSèπed
) = 1;

92 
	`sqlôe3async_run
();

93 
	`T˛_MuãxU∆ock
(&
ã°async_g_wrôîMuãx
);

94 
	`T˛_ExôThªad
(0);

95 
TCL_THREAD_CREATE_RETURN
;

96 
	}
}

103 
SQLITE_TCLAPI
 
	$ã°AsyncSèπ
(

104 * 
˛õ¡D©a
,

105 
T˛_I¡îp
 *
öãΩ
,

106 
objc
,

107 
T˛_Obj
 *
CONST
 
objv
[]

109 vﬁ©ûê
isSèπed
 = 0;

110 
Clõ¡D©a
 
thªadD©a
 = (Clõ¡D©a)&
isSèπed
;

112 
T˛_ThªadId
 
x
;

113 c⁄° 
nSèck
 = 
TCL_THREAD_STACK_DEFAULT
;

114 c⁄° 
Êags
 = 
TCL_THREAD_NOFLAGS
;

115 
rc
;

117 
rc
 = 
	`T˛_Cª©eThªad
(&
x
, 
t˛WrôîThªad
, 
thªadD©a
, 
nSèck
, 
Êags
);

118 if–
rc
!=
TCL_OK
 ){

119 
	`T˛_AµídResu…
(
öãΩ
, "Tcl_CreateThread() failed", 0);

120  
TCL_ERROR
;

123  
isSèπed
==0 ) { }

124  
TCL_OK
;

125 
	}
}

135 
SQLITE_TCLAPI
 
	$ã°AsyncWaô
(

136 * 
˛õ¡D©a
,

137 
T˛_I¡îp
 *
öãΩ
,

138 
objc
,

139 
T˛_Obj
 *
CONST
 
objv
[]

141 
eC⁄d
;

142 if–
objc
!=1 ){

143 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

144  
TCL_ERROR
;

147 
	`sqlôe3async_c⁄åﬁ
(
SQLITEASYNC_GET_HALT
, &
eC⁄d
);

148 if–
eC⁄d
==
SQLITEASYNC_HALT_NEVER
 ){

149 
	`T˛_AµídResu…
(
öãΩ
, "would block forever", (*)0);

150  
TCL_ERROR
;

153 
	`T˛_MuãxLock
(&
ã°async_g_wrôîMuãx
);

154 
	`T˛_MuãxU∆ock
(&
ã°async_g_wrôîMuãx
);

155  
TCL_OK
;

156 
	}
}

161 
SQLITE_TCLAPI
 
	$ã°AsyncC⁄åﬁ
(

162 * 
˛õ¡D©a
,

163 
T˛_I¡îp
 *
öãΩ
,

164 
objc
,

165 
T˛_Obj
 *
CONST
 
objv
[]

167 
rc
 = 
SQLITE_OK
;

168 
´O±
[] = { 
SQLITEASYNC_HALT
, 
SQLITEASYNC_DELAY
, 
SQLITEASYNC_LOCKFILES
 };

169 c⁄° *
azO±
[] = { "halt", "delay", "lockfiles", 0 };

170 c⁄° *
az
[] = { "never", "now", "idle", 0 };

171 
iVÆ
;

172 
eO±
;

174 if–
objc
!=2 && objc!=3 ){

175 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "OPTION ?VALUE?");

176  
TCL_ERROR
;

178 if–
	`T˛_GëIndexFromObj
(
öãΩ
, 
objv
[1], 
azO±
, "›ti⁄", 0, &
eO±
) ){

179  
TCL_ERROR
;

181 
eO±
 = 
´O±
[eOpt];

183 if–
objc
==3 ){

184  
eO±
 ){

185 
SQLITEASYNC_HALT
: {

186 
	`as£π
–
SQLITEASYNC_HALT_NEVER
==0 );

187 
	`as£π
–
SQLITEASYNC_HALT_NOW
==1 );

188 
	`as£π
–
SQLITEASYNC_HALT_IDLE
==2 );

189 if–
	`T˛_GëIndexFromObj
(
öãΩ
, 
objv
[2], 
az
, "vÆue", 0, &
iVÆ
) ){

190  
TCL_ERROR
;

194 
SQLITEASYNC_DELAY
:

195 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
iVÆ
) ){

196  
TCL_ERROR
;

200 
SQLITEASYNC_LOCKFILES
:

201 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[2], &
iVÆ
) ){

202  
TCL_ERROR
;

207 
rc
 = 
	`sqlôe3async_c⁄åﬁ
(
eO±
, 
iVÆ
);

210 if–
rc
==
SQLITE_OK
 ){

211 
rc
 = 
	`sqlôe3async_c⁄åﬁ
(

212 
eO±
==
SQLITEASYNC_HALT
 ? 
SQLITEASYNC_GET_HALT
 :

213 
eO±
==
SQLITEASYNC_DELAY
 ? 
SQLITEASYNC_GET_DELAY
 :

214 
SQLITEASYNC_GET_LOCKFILES
, &
iVÆ
);

217 if–
rc
!=
SQLITE_OK
 ){

218 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
(
	`sqlôe3EºName
(
rc
), -1));

219  
TCL_ERROR
;

222 if–
eO±
==
SQLITEASYNC_HALT
 ){

223 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
(
az
[
iVÆ
], -1));

225 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
iVÆ
));

228  
TCL_OK
;

229 
	}
}

238 
	$Sqlôëe°async_Inô
(
T˛_I¡îp
 *
öãΩ
){

239 #ifde‡
SQLITE_ENABLE_ASYNCIO


240 
	`T˛_Cª©eObjComm™d
(
öãΩ
,"sqlôe3async_°¨t",
ã°AsyncSèπ
,0,0);

241 
	`T˛_Cª©eObjComm™d
(
öãΩ
,"sqlôe3async_waô",
ã°AsyncWaô
,0,0);

243 
	`T˛_Cª©eObjComm™d
(
öãΩ
,"sqlôe3async_c⁄åﬁ",
ã°AsyncC⁄åﬁ
,0,0);

244 
	`T˛_Cª©eObjComm™d
(
öãΩ
,"sqlôe3async_öôülize",
ã°AsyncInô
,0,0);

245 
	`T˛_Cª©eObjComm™d
(
öãΩ
,"sqlôe3async_shutdown",
ã°AsyncShutdown
,0,0);

247  
TCL_OK
;

248 
	}
}

	@test_autoext.c

14 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

15 
	~"sqlôe_t˛.h
"

17 
	~"t˛.h
"

18 #i‚de‡
SQLITE_TCLAPI


19 
	#SQLITE_TCLAPI


	)

22 
	~"sqlôe3ext.h
"

24 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


25 
SQLITE_EXTENSION_INIT1


30 
	$sqrFunc
(

31 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

32 
¨gc
,

33 
sqlôe3_vÆue
 **
¨gv


35 
r
 = 
	`sqlôe3_vÆue_doubÀ
(
¨gv
[0]);

36 
	`sqlôe3_ªsu…_doubÀ
(
c⁄ãxt
, 
r
*r);

37 
	}
}

42 
	$sqr_öô
(

43 
sqlôe3
 *
db
,

44 **
pzEºMsg
,

45 c⁄° 
sqlôe3_≠i_routöes
 *
pApi


47 
	`SQLITE_EXTENSION_INIT2
(
pApi
);

48 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "sqr", 1, 
SQLITE_ANY
, 0, 
sqrFunc
, 0, 0);

50 
	}
}

55 
	$cubeFunc
(

56 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

57 
¨gc
,

58 
sqlôe3_vÆue
 **
¨gv


60 
r
 = 
	`sqlôe3_vÆue_doubÀ
(
¨gv
[0]);

61 
	`sqlôe3_ªsu…_doubÀ
(
c⁄ãxt
, 
r
*r*r);

62 
	}
}

67 
	$cube_öô
(

68 
sqlôe3
 *
db
,

69 **
pzEºMsg
,

70 c⁄° 
sqlôe3_≠i_routöes
 *
pApi


72 
	`SQLITE_EXTENSION_INIT2
(
pApi
);

73 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "cube", 1, 
SQLITE_ANY
, 0, 
cubeFunc
, 0, 0);

75 
	}
}

80 
	$brokí_öô
(

81 
sqlôe3
 *
db
,

82 **
pzEºMsg
,

83 c⁄° 
sqlôe3_≠i_routöes
 *
pApi


85 *
zEº
;

86 
	`SQLITE_EXTENSION_INIT2
(
pApi
);

87 
zEº
 = 
	`sqlôe3_m¥ötf
("brokenáutoext!");

88 *
pzEºMsg
 = 
zEº
;

90 
	}
}

97 
SQLITE_TCLAPI
 
	$autoExtSqrObjCmd
(

98 * 
˛õ¡D©a
,

99 
T˛_I¡îp
 *
öãΩ
,

100 
objc
,

101 
T˛_Obj
 *
CONST
 
objv
[]

103 
rc
 = 
	`sqlôe3_auto_exãnsi⁄
(((*)())
sqr_öô
);

104 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

105  
SQLITE_OK
;

106 
	}
}

113 
SQLITE_TCLAPI
 
	$ˇn˚lAutoExtSqrObjCmd
(

114 * 
˛õ¡D©a
,

115 
T˛_I¡îp
 *
öãΩ
,

116 
objc
,

117 
T˛_Obj
 *
CONST
 
objv
[]

119 
rc
 = 
	`sqlôe3_ˇn˚l_auto_exãnsi⁄
(((*)())
sqr_öô
);

120 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

121  
SQLITE_OK
;

122 
	}
}

129 
SQLITE_TCLAPI
 
	$autoExtCubeObjCmd
(

130 * 
˛õ¡D©a
,

131 
T˛_I¡îp
 *
öãΩ
,

132 
objc
,

133 
T˛_Obj
 *
CONST
 
objv
[]

135 
rc
 = 
	`sqlôe3_auto_exãnsi⁄
(((*)())
cube_öô
);

136 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

137  
SQLITE_OK
;

138 
	}
}

145 
SQLITE_TCLAPI
 
	$ˇn˚lAutoExtCubeObjCmd
(

146 * 
˛õ¡D©a
,

147 
T˛_I¡îp
 *
öãΩ
,

148 
objc
,

149 
T˛_Obj
 *
CONST
 
objv
[]

151 
rc
 = 
	`sqlôe3_ˇn˚l_auto_exãnsi⁄
(((*)())
cube_öô
);

152 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

153  
SQLITE_OK
;

154 
	}
}

161 
SQLITE_TCLAPI
 
	$autoExtBrokíObjCmd
(

162 * 
˛õ¡D©a
,

163 
T˛_I¡îp
 *
öãΩ
,

164 
objc
,

165 
T˛_Obj
 *
CONST
 
objv
[]

167 
rc
 = 
	`sqlôe3_auto_exãnsi⁄
(((*)())
brokí_öô
);

168 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

169  
SQLITE_OK
;

170 
	}
}

177 
SQLITE_TCLAPI
 
	$ˇn˚lAutoExtBrokíObjCmd
(

178 * 
˛õ¡D©a
,

179 
T˛_I¡îp
 *
öãΩ
,

180 
objc
,

181 
T˛_Obj
 *
CONST
 
objv
[]

183 
rc
 = 
	`sqlôe3_ˇn˚l_auto_exãnsi⁄
(((*)())
brokí_öô
);

184 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

185  
SQLITE_OK
;

186 
	}
}

196 
SQLITE_TCLAPI
 
	$ª£tAutoExtObjCmd
(

197 * 
˛õ¡D©a
,

198 
T˛_I¡îp
 *
öãΩ
,

199 
objc
,

200 
T˛_Obj
 *
CONST
 
objv
[]

202 
	`sqlôe3_ª£t_auto_exãnsi⁄
();

203  
SQLITE_OK
;

204 
	}
}

210 
	$Sqlôëe°_aut€xt_Inô
(
T˛_I¡îp
 *
öãΩ
){

211 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


212 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sqlite3_auto_extension_sqr",

213 
autoExtSqrObjCmd
, 0, 0);

214 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sqlite3_auto_extension_cube",

215 
autoExtCubeObjCmd
, 0, 0);

216 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sqlite3_auto_extension_broken",

217 
autoExtBrokíObjCmd
, 0, 0);

218 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sqlite3_cancel_auto_extension_sqr",

219 
ˇn˚lAutoExtSqrObjCmd
, 0, 0);

220 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sqlite3_cancel_auto_extension_cube",

221 
ˇn˚lAutoExtCubeObjCmd
, 0, 0);

222 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sqlite3_cancel_auto_extension_broken",

223 
ˇn˚lAutoExtBrokíObjCmd
, 0, 0);

225 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sqlite3_reset_auto_extension",

226 
ª£tAutoExtObjCmd
, 0, 0);

227  
TCL_OK
;

228 
	}
}

	@test_backup.c

16 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

17 
	~"sqlôe_t˛.h
"

19 
	~"t˛.h
"

20 #i‚de‡
SQLITE_TCLAPI


21 
	#SQLITE_TCLAPI


	)

24 
	~"sqlôe3.h
"

25 
	~<as£π.h
>

28 c⁄° *
sqlôe3EºName
();

31 
gëDbPoöãr
(
T˛_I¡îp
 *, c⁄° *, 
sqlôe3
 **);

33 
SQLITE_TCLAPI
 
	$backupTe°Cmd
(

34 
Clõ¡D©a
 
˛õ¡D©a
,

35 
T˛_I¡îp
 *
öãΩ
,

36 
objc
,

37 
T˛_Obj
 *c⁄°*
objv


39 
	eBackupSubComm™dEnum
 {

40 
BACKUP_STEP
, 
BACKUP_FINISH
, 
BACKUP_REMAINING
, 
BACKUP_PAGECOUNT


42 
	sBackupSubComm™d
 {

43 c⁄° *
zCmd
;

44 
BackupSubComm™dEnum
 
eCmd
;

45 
nArg
;

46 c⁄° *
zArg
;

47 } 
aSub
[] = {

48 {"°ï", 
BACKUP_STEP
 , 1, "npage" },

49 {"föish", 
BACKUP_FINISH
 , 0, "" },

50 {"ªmaöög", 
BACKUP_REMAINING
 , 0, "" },

51 {"∑gecou¡", 
BACKUP_PAGECOUNT
 , 0, "" },

55 
sqlôe3_backup
 *
p
 = (sqlôe3_backu∞*)
˛õ¡D©a
;

56 
iCmd
;

57 
rc
;

59 
rc
 = 
	`T˛_GëIndexFromObjSåu˘
(

60 
öãΩ
, 
objv
[1], 
aSub
, ◊Sub[0]), "›ti⁄", 0, &
iCmd


62 if–
rc
!=
TCL_OK
 ){

63  
rc
;

65 if–
objc
!=(2 + 
aSub
[
iCmd
].
nArg
) ){

66 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, 
aSub
[
iCmd
].
zArg
);

67  
TCL_ERROR
;

70  
aSub
[
iCmd
].
eCmd
 ){

72 
BACKUP_FINISH
: {

73 c⁄° *
zCmdName
;

74 
T˛_CmdInfo
 
cmdInfo
;

75 
zCmdName
 = 
	`T˛_GëSåög
(
objv
[0]);

76 
	`T˛_GëComm™dInfo
(
öãΩ
, 
zCmdName
, &
cmdInfo
);

77 
cmdInfo
.
dñëeProc
 = 0;

78 
	`T˛_SëComm™dInfo
(
öãΩ
, 
zCmdName
, &
cmdInfo
);

79 
	`T˛_DñëeComm™d
(
öãΩ
, 
zCmdName
);

81 
rc
 = 
	`sqlôe3_backup_föish
(
p
);

82 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_STATIC
);

86 
BACKUP_STEP
: {

87 
nPage
;

88 if–
TCL_OK
!=
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
nPage
) ){

89  
TCL_ERROR
;

91 
rc
 = 
	`sqlôe3_backup_°ï
(
p
, 
nPage
);

92 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_STATIC
);

96 
BACKUP_REMAINING
:

97 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
	`sqlôe3_backup_ªmaöög
(
p
)));

100 
BACKUP_PAGECOUNT
:

101 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
	`sqlôe3_backup_∑gecou¡
(
p
)));

105  
TCL_OK
;

106 
	}
}

108 
SQLITE_TCLAPI
 
	$backupTe°Föish
(
Clõ¡D©a
 
˛õ¡D©a
){

109 
sqlôe3_backup
 *
pBackup
 = (sqlôe3_backu∞*)
˛õ¡D©a
;

110 
	`sqlôe3_backup_föish
(
pBackup
);

111 
	}
}

117 
SQLITE_TCLAPI
 
	$backupTe°Inô
(

118 
Clõ¡D©a
 
˛õ¡D©a
,

119 
T˛_I¡îp
 *
öãΩ
,

120 
objc
,

121 
T˛_Obj
 *c⁄°*
objv


123 
sqlôe3_backup
 *
pBackup
;

124 
sqlôe3
 *
pDe°Db
;

125 
sqlôe3
 *
pSrcDb
;

126 c⁄° *
zDe°Name
;

127 c⁄° *
zSrcName
;

128 c⁄° *
zCmd
;

130 if–
objc
!=6 ){

131 
	`T˛_Wr⁄gNumArgs
(

132 
öãΩ
, 1, 
objv
, "CMDNAME DESTHANDLE DESTNAME SRCHANDLE SRCNAME"

134  
TCL_ERROR
;

137 
zCmd
 = 
	`T˛_GëSåög
(
objv
[1]);

138 
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[2]), &
pDe°Db
);

139 
zDe°Name
 = 
	`T˛_GëSåög
(
objv
[3]);

140 
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[4]), &
pSrcDb
);

141 
zSrcName
 = 
	`T˛_GëSåög
(
objv
[5]);

143 
pBackup
 = 
	`sqlôe3_backup_öô
(
pDe°Db
, 
zDe°Name
, 
pSrcDb
, 
zSrcName
);

144 if–!
pBackup
 ){

145 
	`T˛_AµídResu…
(
öãΩ
, "sqlite3_backup_init() failed", 0);

146  
TCL_ERROR
;

149 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
zCmd
, 
backupTe°Cmd
, 
pBackup
, 
backupTe°Föish
);

150 
	`T˛_SëObjResu…
(
öãΩ
, 
objv
[1]);

151  
TCL_OK
;

152 
	}
}

154 
	$Sqlôëe°backup_Inô
(
T˛_I¡îp
 *
öãΩ
){

155 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sqlôe3_backup", 
backupTe°Inô
, 0, 0);

156  
TCL_OK
;

157 
	}
}

	@test_bestindex.c

95 
	~"sqlôeI¡.h
"

96 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

97 
	~"sqlôe_t˛.h
"

99 
	~"t˛.h
"

102 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


104 
t˛_vèb
 
	tt˛_vèb
;

105 
t˛_curs‹
 
	tt˛_curs‹
;

110 
	st˛_vèb
 {

111 
sqlôe3_vèb
 
	mba£
;

112 
T˛_I¡îp
 *
	möãΩ
;

113 
T˛_Obj
 *
	mpCmd
;

114 
sqlôe3
 *
	mdb
;

118 
	st˛_curs‹
 {

119 
sqlôe3_vèb_curs‹
 
	mba£
;

120 
sqlôe3_°mt
 *
	mpStmt
;

126 
	$t˛DequŸe
(*
z
){

127 
q
 = 
z
[0];

130 if–
q
=='[' || q=='\'' || q=='"' || q=='`' ){

131 
iIn
 = 1;

132 
iOut
 = 0;

133 if–
q
=='[' ) q = ']';

135  
	`ALWAYS
(
z
[
iIn
]) ){

136 if–
z
[
iIn
]==
q
 ){

137 if–
z
[
iIn
+1]!=
q
 ){

139 
iIn
++;

145 
iIn
 += 2;

146 
z
[
iOut
++] = 
q
;

149 
z
[
iOut
++] = z[
iIn
++];

153 
z
[
iOut
] = '\0';

155 
	}
}

168 
	$t˛C⁄√˘
(

169 
sqlôe3
 *
db
,

170 *
pAux
,

171 
¨gc
, c⁄° *c⁄°*
¨gv
,

172 
sqlôe3_vèb
 **
µVèb
,

173 **
pzEº


175 
T˛_I¡îp
 *
öãΩ
 = (T˛_I¡îp*)
pAux
;

176 
t˛_vèb
 *
pTab
 = 0;

177 *
zCmd
 = 0;

178 
T˛_Obj
 *
pS¸ùt
 = 0;

179 
rc
 = 
SQLITE_OK
;

181 if–
¨gc
!=4 ){

182 *
pzEº
 = 
	`sqlôe3_m¥ötf
("wrongÇumber ofárguments");

183  
SQLITE_ERROR
;

186 
zCmd
 = 
	`sqlôe3_mÆloc64
(
	`°æí
(
¨gv
[3])+1);

187 
pTab
 = (
t˛_vèb
*)
	`sqlôe3_mÆloc64
((tcl_vtab));

188 if–
zCmd
 && 
pTab
 ){

189 
	`mem˝y
(
zCmd
, 
¨gv
[3], 
	`°æí
(argv[3])+1);

190 
	`t˛DequŸe
(
zCmd
);

191 
	`mem£t
(
pTab
, 0, (
t˛_vèb
));

193 
pTab
->
pCmd
 = 
	`T˛_NewSåögObj
(
zCmd
, -1);

194 
pTab
->
öãΩ
 = interp;

195 
pTab
->
db
 = db;

196 
	`T˛_In¸RefCou¡
(
pTab
->
pCmd
);

198 
pS¸ùt
 = 
	`T˛_Du∂iˇãObj
(
pTab
->
pCmd
);

199 
	`T˛_In¸RefCou¡
(
pS¸ùt
);

200 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pS¸ùt
, 
	`T˛_NewSåögObj
("xConnect", -1));

202 
rc
 = 
	`T˛_EvÆObjEx
(
öãΩ
, 
pS¸ùt
, 
TCL_EVAL_GLOBAL
);

203 if–
rc
!=
TCL_OK
 ){

204 *
pzEº
 = 
	`sqlôe3_m¥ötf
("%s", 
	`T˛_GëSåögResu…
(
öãΩ
));

205 
rc
 = 
SQLITE_ERROR
;

207 
rc
 = 
	`sqlôe3_de˛¨e_vèb
(
db
, 
	`T˛_GëSåögResu…
(
öãΩ
));

210 if–
rc
!=
SQLITE_OK
 ){

211 
	`sqlôe3_‰ì
(
pTab
);

212 
pTab
 = 0;

215 
rc
 = 
SQLITE_NOMEM
;

218 
	`sqlôe3_‰ì
(
zCmd
);

219 *
µVèb
 = &
pTab
->
ba£
;

220  
rc
;

221 
	}
}

224 
	$t˛Disc⁄√˘
(
sqlôe3_vèb
 *
pVèb
){

225 
t˛_vèb
 *
pTab
 = (t˛_vèb*)
pVèb
;

226 
	`T˛_De¸RefCou¡
(
pTab
->
pCmd
);

227 
	`sqlôe3_‰ì
(
pTab
);

228  
SQLITE_OK
;

229 
	}
}

234 
	$t˛O≥n
(
sqlôe3_vèb
 *
pVTab
, 
sqlôe3_vèb_curs‹
 **
µCurs‹
){

235 
t˛_curs‹
 *
pCur
;

236 
pCur
 = 
	`sqlôe3_mÆloc
((
t˛_curs‹
));

237 if–
pCur
==0 )  
SQLITE_NOMEM
;

238 
	`mem£t
(
pCur
, 0, (
t˛_curs‹
));

239 *
µCurs‹
 = &
pCur
->
ba£
;

240  
SQLITE_OK
;

241 
	}
}

246 
	$t˛Clo£
(
sqlôe3_vèb_curs‹
 *
cur
){

247 
t˛_curs‹
 *
pCur
 = (t˛_curs‹ *)
cur
;

248 if–
pCur
 ){

249 
	`sqlôe3_föÆize
(
pCur
->
pStmt
);

250 
	`sqlôe3_‰ì
(
pCur
);

252  
SQLITE_OK
;

253 
	}
}

255 
	$t˛Next
(
sqlôe3_vèb_curs‹
 *
pVèbCurs‹
){

256 
t˛_curs‹
 *
pC§
 = (t˛_curs‹*)
pVèbCurs‹
;

257 if–
pC§
->
pStmt
 ){

258 
t˛_vèb
 *
pTab
 = (t˛_vèb*)(
pVèbCurs‹
->
pVèb
);

259 
rc
 = 
	`sqlôe3_°ï
(
pC§
->
pStmt
);

260 if–
rc
!=
SQLITE_ROW
 ){

261 c⁄° *
zEº
;

262 
rc
 = 
	`sqlôe3_föÆize
(
pC§
->
pStmt
);

263 
pC§
->
pStmt
 = 0;

264 if–
rc
!=
SQLITE_OK
 ){

265 
zEº
 = 
	`sqlôe3_îrmsg
(
pTab
->
db
);

266 
pTab
->
ba£
.
zEºMsg
 = 
	`sqlôe3_m¥ötf
("%s", 
zEº
);

270  
SQLITE_OK
;

271 
	}
}

273 
	$t˛Fûãr
(

274 
sqlôe3_vèb_curs‹
 *
pVèbCurs‹
,

275 
idxNum
, c⁄° *
idxSå
,

276 
¨gc
, 
sqlôe3_vÆue
 **
¨gv


278 
t˛_curs‹
 *
pC§
 = (t˛_curs‹*)
pVèbCurs‹
;

279 
t˛_vèb
 *
pTab
 = (t˛_vèb*)(
pVèbCurs‹
->
pVèb
);

280 
T˛_I¡îp
 *
öãΩ
 = 
pTab
->interp;

281 
T˛_Obj
 *
pS¸ùt
;

282 
T˛_Obj
 *
pArg
;

283 
ii
;

284 
rc
;

286 
pS¸ùt
 = 
	`T˛_Du∂iˇãObj
(
pTab
->
pCmd
);

287 
	`T˛_In¸RefCou¡
(
pS¸ùt
);

288 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pS¸ùt
, 
	`T˛_NewSåögObj
("xFilter", -1));

289 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pS¸ùt
, 
	`T˛_NewI¡Obj
(
idxNum
));

290 if–
idxSå
 ){

291 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pS¸ùt
, 
	`T˛_NewSåögObj
(
idxSå
, -1));

293 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pS¸ùt
, 
	`T˛_NewSåögObj
("", -1));

296 
pArg
 = 
	`T˛_NewObj
();

297 
	`T˛_In¸RefCou¡
(
pArg
);

298 
ii
=0; ii<
¨gc
; ii++){

299 c⁄° *
zVÆ
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[
ii
]);

300 
T˛_Obj
 *
pVÆ
;

301 if–
zVÆ
==0 ){

302 
pVÆ
 = 
	`T˛_NewObj
();

304 
pVÆ
 = 
	`T˛_NewSåögObj
(
zVÆ
, -1);

306 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pArg
, 
pVÆ
);

308 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pS¸ùt
, 
pArg
);

309 
	`T˛_De¸RefCou¡
(
pArg
);

311 
rc
 = 
	`T˛_EvÆObjEx
(
öãΩ
, 
pS¸ùt
, 
TCL_EVAL_GLOBAL
);

312 if–
rc
!=
TCL_OK
 ){

313 c⁄° *
zEº
 = 
	`T˛_GëSåögResu…
(
öãΩ
);

314 
rc
 = 
SQLITE_ERROR
;

315 
pTab
->
ba£
.
zEºMsg
 = 
	`sqlôe3_m¥ötf
("%s", 
zEº
);

323 
T˛_Obj
 *
pRes
 = 
	`T˛_GëObjResu…
(
öãΩ
);

324 
T˛_Obj
 **
≠EÀm
 = 0;

325 
nEÀm
;

326 
rc
 = 
	`T˛_Li°ObjGëEÀmíts
(
öãΩ
, 
pRes
, &
nEÀm
, &
≠EÀm
);

327 if–
rc
!=
TCL_OK
 ){

328 c⁄° *
zEº
 = 
	`T˛_GëSåögResu…
(
öãΩ
);

329 
rc
 = 
SQLITE_ERROR
;

330 
pTab
->
ba£
.
zEºMsg
 = 
	`sqlôe3_m¥ötf
("%s", 
zEº
);

332 
ii
=0; 
rc
==
SQLITE_OK
 && ii<
nEÀm
; ii+=2){

333 c⁄° *
zCmd
 = 
	`T˛_GëSåög
(
≠EÀm
[
ii
]);

334 
T˛_Obj
 *
p
 = 
≠EÀm
[
ii
+1];

335 if–
	`sqlôe3_°ricmp
("sql", 
zCmd
)==0 ){

336 c⁄° *
zSql
 = 
	`T˛_GëSåög
(
p
);

337 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
pTab
->
db
, 
zSql
, -1, &
pC§
->
pStmt
, 0);

338 if–
rc
!=
SQLITE_OK
 ){

339 c⁄° *
zEº
 = 
	`sqlôe3_îrmsg
(
pTab
->
db
);

340 
pTab
->
ba£
.
zEºMsg
 = 
	`sqlôe3_m¥ötf
("u√x≥˘ed: %s", 
zEº
);

343 
rc
 = 
SQLITE_ERROR
;

344 
pTab
->
ba£
.
zEºMsg
 = 
	`sqlôe3_m¥ötf
("u√x≥˘ed: %s", 
zCmd
);

350 if–
rc
==
SQLITE_OK
 ){

351 
rc
 = 
	`t˛Next
(
pVèbCurs‹
);

353  
rc
;

354 
	}
}

356 
	$t˛Cﬁumn
(

357 
sqlôe3_vèb_curs‹
 *
pVèbCurs‹
,

358 
sqlôe3_c⁄ãxt
 *
˘x
,

359 
i


361 
t˛_curs‹
 *
pC§
 = (t˛_curs‹*)
pVèbCurs‹
;

362 
	`sqlôe3_ªsu…_vÆue
(
˘x
, 
	`sqlôe3_cﬁumn_vÆue
(
pC§
->
pStmt
, 
i
+1));

363  
SQLITE_OK
;

364 
	}
}

366 
	$t˛Rowid
(
sqlôe3_vèb_curs‹
 *
pVèbCurs‹
, 
sqlôe_öt64
 *
pRowid
){

367 
t˛_curs‹
 *
pC§
 = (t˛_curs‹*)
pVèbCurs‹
;

368 *
pRowid
 = 
	`sqlôe3_cﬁumn_öt64
(
pC§
->
pStmt
, 0);

369  
SQLITE_OK
;

370 
	}
}

372 
	$t˛Eof
(
sqlôe3_vèb_curs‹
 *
pVèbCurs‹
){

373 
t˛_curs‹
 *
pC§
 = (t˛_curs‹*)
pVèbCurs‹
;

374  (
pC§
->
pStmt
==0);

375 
	}
}

377 
	$t˛Be°Index
(
sqlôe3_vèb
 *
èb
, 
sqlôe3_ödex_öfo
 *
pIdxInfo
){

378 
t˛_vèb
 *
pTab
 = (t˛_vèb*)
èb
;

379 
T˛_I¡îp
 *
öãΩ
 = 
pTab
->interp;

380 
T˛_Obj
 *
pArg
;

381 
T˛_Obj
 *
pS¸ùt
;

382 
ii
;

383 
rc
 = 
SQLITE_OK
;

385 
pS¸ùt
 = 
	`T˛_Du∂iˇãObj
(
pTab
->
pCmd
);

386 
	`T˛_In¸RefCou¡
(
pS¸ùt
);

387 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pS¸ùt
, 
	`T˛_NewSåögObj
("xBestIndex", -1));

389 
pArg
 = 
	`T˛_NewObj
();

390 
	`T˛_In¸RefCou¡
(
pArg
);

391 
ii
=0; ii<
pIdxInfo
->
nC⁄°øöt
; ii++){

392 
sqlôe3_ödex_c⁄°øöt
 c⁄° *
pC⁄s
 = &
pIdxInfo
->
aC⁄°øöt
[
ii
];

393 
T˛_Obj
 *
pEÀm
 = 
	`T˛_NewObj
();

394 c⁄° *
zOp
 = "?";

396 
	`T˛_In¸RefCou¡
(
pEÀm
);

398  
pC⁄s
->
›
 ){

399 
SQLITE_INDEX_CONSTRAINT_EQ
:

400 
zOp
 = "eq"; ;

401 
SQLITE_INDEX_CONSTRAINT_GT
:

402 
zOp
 = "gt"; ;

403 
SQLITE_INDEX_CONSTRAINT_LE
:

404 
zOp
 = "le"; ;

405 
SQLITE_INDEX_CONSTRAINT_LT
:

406 
zOp
 = "lt"; ;

407 
SQLITE_INDEX_CONSTRAINT_GE
:

408 
zOp
 = "ge"; ;

409 
SQLITE_INDEX_CONSTRAINT_MATCH
:

410 
zOp
 = "match"; ;

411 
SQLITE_INDEX_CONSTRAINT_LIKE
:

412 
zOp
 = "like"; ;

413 
SQLITE_INDEX_CONSTRAINT_GLOB
:

414 
zOp
 = "glob"; ;

415 
SQLITE_INDEX_CONSTRAINT_REGEXP
:

416 
zOp
 = "regexp"; ;

419 
	`T˛_Li°ObjAµídEÀmít
(0, 
pEÀm
, 
	`T˛_NewSåögObj
("op", -1));

420 
	`T˛_Li°ObjAµídEÀmít
(0, 
pEÀm
, 
	`T˛_NewSåögObj
(
zOp
, -1));

421 
	`T˛_Li°ObjAµídEÀmít
(0, 
pEÀm
, 
	`T˛_NewSåögObj
("column", -1));

422 
	`T˛_Li°ObjAµídEÀmít
(0, 
pEÀm
, 
	`T˛_NewI¡Obj
(
pC⁄s
->
iCﬁumn
));

423 
	`T˛_Li°ObjAµídEÀmít
(0, 
pEÀm
, 
	`T˛_NewSåögObj
("usable", -1));

424 
	`T˛_Li°ObjAµídEÀmít
(0, 
pEÀm
, 
	`T˛_NewI¡Obj
(
pC⁄s
->
ußbÀ
));

426 
	`T˛_Li°ObjAµídEÀmít
(0, 
pArg
, 
pEÀm
);

427 
	`T˛_De¸RefCou¡
(
pEÀm
);

430 
	`T˛_Li°ObjAµídEÀmít
(0, 
pS¸ùt
, 
pArg
);

431 
	`T˛_De¸RefCou¡
(
pArg
);

433 
pArg
 = 
	`T˛_NewObj
();

434 
	`T˛_In¸RefCou¡
(
pArg
);

435 
ii
=0; ii<
pIdxInfo
->
nOrdîBy
; ii++){

436 
sqlôe3_ödex_‹dîby
 c⁄° *
pOrdî
 = &
pIdxInfo
->
aOrdîBy
[
ii
];

437 
T˛_Obj
 *
pEÀm
 = 
	`T˛_NewObj
();

438 
	`T˛_In¸RefCou¡
(
pEÀm
);

440 
	`T˛_Li°ObjAµídEÀmít
(0, 
pEÀm
, 
	`T˛_NewSåögObj
("column", -1));

441 
	`T˛_Li°ObjAµídEÀmít
(0, 
pEÀm
, 
	`T˛_NewI¡Obj
(
pOrdî
->
iCﬁumn
));

442 
	`T˛_Li°ObjAµídEÀmít
(0, 
pEÀm
, 
	`T˛_NewSåögObj
("desc", -1));

443 
	`T˛_Li°ObjAµídEÀmít
(0, 
pEÀm
, 
	`T˛_NewI¡Obj
(
pOrdî
->
desc
));

445 
	`T˛_Li°ObjAµídEÀmít
(0, 
pArg
, 
pEÀm
);

446 
	`T˛_De¸RefCou¡
(
pEÀm
);

449 
	`T˛_Li°ObjAµídEÀmít
(0, 
pS¸ùt
, 
pArg
);

450 
	`T˛_De¸RefCou¡
(
pArg
);

452 
	`T˛_Li°ObjAµídEÀmít
(0, 
pS¸ùt
, 
	`T˛_NewWideI¡Obj
(
pIdxInfo
->
cﬁU£d
));

454 
rc
 = 
	`T˛_EvÆObjEx
(
öãΩ
, 
pS¸ùt
, 
TCL_EVAL_GLOBAL
);

455 
	`T˛_De¸RefCou¡
(
pS¸ùt
);

456 if–
rc
!=
TCL_OK
 ){

457 c⁄° *
zEº
 = 
	`T˛_GëSåögResu…
(
öãΩ
);

458 
rc
 = 
SQLITE_ERROR
;

459 
pTab
->
ba£
.
zEºMsg
 = 
	`sqlôe3_m¥ötf
("%s", 
zEº
);

473 
T˛_Obj
 *
pRes
 = 
	`T˛_GëObjResu…
(
öãΩ
);

474 
T˛_Obj
 **
≠EÀm
 = 0;

475 
nEÀm
;

476 
rc
 = 
	`T˛_Li°ObjGëEÀmíts
(
öãΩ
, 
pRes
, &
nEÀm
, &
≠EÀm
);

477 if–
rc
!=
TCL_OK
 ){

478 c⁄° *
zEº
 = 
	`T˛_GëSåögResu…
(
öãΩ
);

479 
rc
 = 
SQLITE_ERROR
;

480 
pTab
->
ba£
.
zEºMsg
 = 
	`sqlôe3_m¥ötf
("%s", 
zEº
);

482 
iArgv
 = 1;

483 
ii
=0; 
rc
==
SQLITE_OK
 && ii<
nEÀm
; ii+=2){

484 c⁄° *
zCmd
 = 
	`T˛_GëSåög
(
≠EÀm
[
ii
]);

485 
T˛_Obj
 *
p
 = 
≠EÀm
[
ii
+1];

486 if–
	`sqlôe3_°ricmp
("co°", 
zCmd
)==0 ){

487 
rc
 = 
	`T˛_GëDoubÀFromObj
(
öãΩ
, 
p
, &
pIdxInfo
->
e°im©edCo°
);

489 if–
	`sqlôe3_°ricmp
("‹dîby", 
zCmd
)==0 ){

490 
rc
 = 
	`T˛_GëI¡FromObj
(
öãΩ
, 
p
, &
pIdxInfo
->
‹dîByC⁄sumed
);

492 if–
	`sqlôe3_°ricmp
("idxnum", 
zCmd
)==0 ){

493 
rc
 = 
	`T˛_GëI¡FromObj
(
öãΩ
, 
p
, &
pIdxInfo
->
idxNum
);

495 if–
	`sqlôe3_°ricmp
("idx°r", 
zCmd
)==0 ){

496 
	`sqlôe3_‰ì
(
pIdxInfo
->
idxSå
);

497 
pIdxInfo
->
idxSå
 = 
	`sqlôe3_m¥ötf
("%s", 
	`T˛_GëSåög
(
p
));

498 
pIdxInfo
->
√edToFªeIdxSå
 = 1;

500 if–
	`sqlôe3_°ricmp
("rows", 
zCmd
)==0 ){

501 
T˛_WideI¡
 
x
 = 0;

502 
rc
 = 
	`T˛_GëWideI¡FromObj
(
öãΩ
, 
p
, &
x
);

503 
pIdxInfo
->
e°im©edRows
 = (
tRow˙t
)
x
;

505 if–
	`sqlôe3_°ricmp
("u£", 
zCmd
)==0

506 || 
	`sqlôe3_°ricmp
("omô", 
zCmd
)==0

508 
iC⁄s
;

509 
rc
 = 
	`T˛_GëI¡FromObj
(
öãΩ
, 
p
, &
iC⁄s
);

510 if–
rc
==
SQLITE_OK
 ){

511 if–
iC⁄s
<0 || iC⁄s>=
pIdxInfo
->
nC⁄°øöt
 ){

512 
rc
 = 
SQLITE_ERROR
;

513 
pTab
->
ba£
.
zEºMsg
 = 
	`sqlôe3_m¥ötf
("u√x≥˘ed: %d", 
iC⁄s
);

515 
bOmô
 = (
zCmd
[0]=='o' || zCmd[0]=='O');

516 
pIdxInfo
->
aC⁄°øötUßge
[
iC⁄s
].
¨gvIndex
 = 
iArgv
++;

517 
pIdxInfo
->
aC⁄°øötUßge
[
iC⁄s
].
omô
 = 
bOmô
;

521 
rc
 = 
SQLITE_ERROR
;

522 
pTab
->
ba£
.
zEºMsg
 = 
	`sqlôe3_m¥ötf
("u√x≥˘ed: %s", 
zCmd
);

524 if–
rc
!=
SQLITE_OK
 && 
pTab
->
ba£
.
zEºMsg
==0 ){

525 c⁄° *
zEº
 = 
	`T˛_GëSåögResu…
(
öãΩ
);

526 
pTab
->
ba£
.
zEºMsg
 = 
	`sqlôe3_m¥ötf
("%s", 
zEº
);

532  
rc
;

533 
	}
}

539 
sqlôe3_moduÀ
 
	gt˛ModuÀ
 = {

541 
t˛C⁄√˘
,

542 
t˛C⁄√˘
,

543 
t˛Be°Index
,

544 
t˛Disc⁄√˘
,

545 
t˛Disc⁄√˘
,

546 
t˛O≥n
,

547 
t˛Clo£
,

548 
t˛Fûãr
,

549 
t˛Next
,

550 
t˛Eof
,

551 
t˛Cﬁumn
,

552 
t˛Rowid
,

565 
gëDbPoöãr
(
T˛_I¡îp
 *
öãΩ
, c⁄° *
zA
, 
sqlôe3
 **
µDb
);

570 
SQLITE_TCLAPI
 
	$ªgi°î_t˛_moduÀ
(

571 
Clõ¡D©a
 
˛õ¡D©a
,

572 
T˛_I¡îp
 *
öãΩ
,

573 
objc
,

574 
T˛_Obj
 *
CONST
 
objv
[]

576 
sqlôe3
 *
db
;

577 if–
objc
!=2 ){

578 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB");

579  
TCL_ERROR
;

581 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

582 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


583 
	`sqlôe3_¸óã_moduÀ
(
db
, "t˛", &
t˛ModuÀ
, (*)
öãΩ
);

585  
TCL_OK
;

586 
	}
}

594 
	$Sqlôëe°t˛_Inô
(
T˛_I¡îp
 *
öãΩ
){

595 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


597 *
zName
;

598 
T˛_ObjCmdProc
 *
xProc
;

599 *
˛õ¡D©a
;

600 } 
aObjCmd
[] = {

601 { "ªgi°î_t˛_moduÀ", 
ªgi°î_t˛_moduÀ
, 0 },

603 
i
;

604 
i
=0; i<(
aObjCmd
)/(aObjCmd[0]); i++){

605 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
aObjCmd
[
i
].
zName
,

606 
aObjCmd
[
i
].
xProc
,áObjCmd[i].
˛õ¡D©a
, 0);

609  
TCL_OK
;

610 
	}
}

	@test_blob.c

14 
	~"sqlôeI¡.h
"

15 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

16 
	~"sqlôe_t˛.h
"

18 
	~"t˛.h
"

20 
	~<°dlib.h
>

21 
	~<°rög.h
>

22 
	~<as£π.h
>

23 #i‚de‡
SQLITE_OMIT_INCRBLOB


26 c⁄° *
sqlôe3EºName
();

29 
gëDbPoöãr
(
T˛_I¡îp
 *
öãΩ
, c⁄° *
zA
, 
sqlôe3
 **
µDb
);

30 *
sqlôe3Te°TextToPå
(c⁄° *
z
);

37 *
	$±rToText
(*
p
){

38 
buf
[100];

39 
	`sqlôe3_¢¥ötf
((
buf
)-1, buf, "%p", 
p
);

40  
buf
;

41 
	}
}

55 
	$blobH™dÀFromObj
(

56 
T˛_I¡îp
 *
öãΩ
,

57 
T˛_Obj
 *
pObj
,

58 
sqlôe3_blob
 **
µBlob


60 *
z
;

61 
n
;

63 
z
 = 
	`T˛_GëSåögFromObj
(
pObj
, &
n
);

64 if–
n
==0 ){

65 *
µBlob
 = 0;

66 }if–
n
>9 && 0==
	`memcmp
("ö¸blob_", 
z
, 9) ){

67 
nŸU£d
;

68 
T˛_Ch™√l
 
ch™√l
;

69 
Clõ¡D©a
 
ö°™˚D©a
;

71 
ch™√l
 = 
	`T˛_GëCh™√l
(
öãΩ
, 
z
, &
nŸU£d
);

72 if–!
ch™√l
 )  
TCL_ERROR
;

74 
	`T˛_Flush
(
ch™√l
);

75 
	`T˛_Sìk
(
ch™√l
, 0, 
SEEK_SET
);

77 
ö°™˚D©a
 = 
	`T˛_GëCh™√lIn°™˚D©a
(
ch™√l
);

78 *
µBlob
 = *((
sqlôe3_blob
 **)
ö°™˚D©a
);

80 *
µBlob
 = (
sqlôe3_blob
*)
	`sqlôe3Te°TextToPå
(
z
);

83  
TCL_OK
;

84 
	}
}

90 *
	$blobSåögFromObj
(
T˛_Obj
 *
pObj
){

91 
n
;

92 *
z
;

93 
z
 = 
	`T˛_GëSåögFromObj
(
pObj
, &
n
);

94  (
n
 ? 
z
 : 0);

95 
	}
}

102 
SQLITE_TCLAPI
 
	$ã°_blob_›í
(

103 
Clõ¡D©a
 
˛õ¡D©a
,

104 
T˛_I¡îp
 *
öãΩ
,

105 
objc
,

106 
T˛_Obj
 *
CONST
 
objv
[]

108 
sqlôe3
 *
db
;

109 c⁄° *
zDb
;

110 c⁄° *
zTabÀ
;

111 c⁄° *
zCﬁumn
;

112 
T˛_WideI¡
 
iRowid
;

113 
Êags
;

114 c⁄° *
zV¨«me
;

115 
nV¨«me
;

117 
sqlôe3_blob
 *
pBlob
 = (sqlôe3_blob*)&
Êags
;

118 
rc
;

120 if–
objc
!=8 ){

121 c⁄° *
zUßge
 = "DB DATABASE TABLE COLUMN ROWID FLAGS VARNAME";

122 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, 
zUßge
);

123  
TCL_ERROR
;

125 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

126 
zDb
 = 
	`T˛_GëSåög
(
objv
[2]);

127 
zTabÀ
 = 
	`blobSåögFromObj
(
objv
[3]);

128 
zCﬁumn
 = 
	`T˛_GëSåög
(
objv
[4]);

129 if–
	`T˛_GëWideI¡FromObj
(
öãΩ
, 
objv
[5], &
iRowid
ËË 
TCL_ERROR
;

130 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[6], &
Êags
ËË 
TCL_ERROR
;

131 
zV¨«me
 = 
	`T˛_GëSåögFromObj
(
objv
[7], &
nV¨«me
);

133 if–
nV¨«me
>0 ){

134 
rc
 = 
	`sqlôe3_blob_›í
(
db
, 
zDb
, 
zTabÀ
, 
zCﬁumn
, 
iRowid
, 
Êags
, &
pBlob
);

135 
	`T˛_SëV¨
(
öãΩ
, 
zV¨«me
, 
	`±rToText
(
pBlob
), 0);

137 
rc
 = 
	`sqlôe3_blob_›í
(
db
, 
zDb
, 
zTabÀ
, 
zCﬁumn
, 
iRowid
, 
Êags
, 0);

140 if–
rc
==
SQLITE_OK
 ){

141 
	`T˛_Re£tResu…
(
öãΩ
);

143 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_VOLATILE
);

144  
TCL_ERROR
;

146  
TCL_OK
;

147 
	}
}

153 
SQLITE_TCLAPI
 
	$ã°_blob_˛o£
(

154 
Clõ¡D©a
 
˛õ¡D©a
,

155 
T˛_I¡îp
 *
öãΩ
,

156 
objc
,

157 
T˛_Obj
 *
CONST
 
objv
[]

159 
sqlôe3_blob
 *
pBlob
;

160 
rc
;

162 if–
objc
!=2 ){

163 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HANDLE");

164  
TCL_ERROR
;

167 if–
	`blobH™dÀFromObj
(
öãΩ
, 
objv
[1], &
pBlob
ËË 
TCL_ERROR
;

168 
rc
 = 
	`sqlôe3_blob_˛o£
(
pBlob
);

170 if–
rc
 ){

171 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_VOLATILE
);

173 
	`T˛_Re£tResu…
(
öãΩ
);

175  
TCL_OK
;

176 
	}
}

181 
SQLITE_TCLAPI
 
	$ã°_blob_byãs
(

182 
Clõ¡D©a
 
˛õ¡D©a
,

183 
T˛_I¡îp
 *
öãΩ
,

184 
objc
,

185 
T˛_Obj
 *
CONST
 
objv
[]

187 
sqlôe3_blob
 *
pBlob
;

188 
nByã
;

190 if–
objc
!=2 ){

191 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HANDLE");

192  
TCL_ERROR
;

195 if–
	`blobH™dÀFromObj
(
öãΩ
, 
objv
[1], &
pBlob
ËË 
TCL_ERROR
;

196 
nByã
 = 
	`sqlôe3_blob_byãs
(
pBlob
);

197 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
nByã
));

199  
TCL_OK
;

200 
	}
}

217 
SQLITE_TCLAPI
 
	$ã°_blob_ªad
(

218 
Clõ¡D©a
 
˛õ¡D©a
,

219 
T˛_I¡îp
 *
öãΩ
,

220 
objc
,

221 
T˛_Obj
 *
CONST
 
objv
[]

223 
sqlôe3_blob
 *
pBlob
;

224 
nByã
;

225 
iOff£t
;

226 *
zBuf
 = 0;

227 
rc
;

229 if–
objc
!=4 ){

230 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "CHANNEL OFFSET N");

231  
TCL_ERROR
;

234 if–
	`blobH™dÀFromObj
(
öãΩ
, 
objv
[1], &
pBlob
ËË 
TCL_ERROR
;

235 if–
TCL_OK
!=
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
iOff£t
)

236 || 
TCL_OK
!=
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
nByã
)

238  
TCL_ERROR
;

241 if–
nByã
>0 ){

242 
zBuf
 = (*)
	`T˛_AŒoc
(
nByã
);

244 
rc
 = 
	`sqlôe3_blob_ªad
(
pBlob
, 
zBuf
, 
nByã
, 
iOff£t
);

245 if–
rc
==
SQLITE_OK
 ){

246 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewByãAºayObj
(
zBuf
, 
nByã
));

248 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_VOLATILE
);

250 
	`T˛_Fªe
((*)
zBuf
);

252  (
rc
==
SQLITE_OK
 ? 
TCL_OK
 : 
TCL_ERROR
);

253 
	}
}

269 
SQLITE_TCLAPI
 
	$ã°_blob_wrôe
(

270 
Clõ¡D©a
 
˛õ¡D©a
,

271 
T˛_I¡îp
 *
öãΩ
,

272 
objc
,

273 
T˛_Obj
 *
CONST
 
objv
[]

275 
sqlôe3_blob
 *
pBlob
;

276 
iOff£t
;

277 
rc
;

279 *
zBuf
;

280 
nBuf
;

282 if–
objc
!=4 && objc!=5 ){

283 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HANDLE OFFSET DATA ?NDATA?");

284  
TCL_ERROR
;

287 if–
	`blobH™dÀFromObj
(
öãΩ
, 
objv
[1], &
pBlob
ËË 
TCL_ERROR
;

288 if–
TCL_OK
!=
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
iOff£t
) ){

289  
TCL_ERROR
;

292 
zBuf
 = 
	`T˛_GëByãAºayFromObj
(
objv
[3], &
nBuf
);

293 if–
objc
==5 && 
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[4], &
nBuf
) ){

294  
TCL_ERROR
;

296 
rc
 = 
	`sqlôe3_blob_wrôe
(
pBlob
, 
zBuf
, 
nBuf
, 
iOff£t
);

297 if–
rc
!=
SQLITE_OK
 ){

298 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_VOLATILE
);

301  (
rc
==
SQLITE_OK
 ? 
TCL_OK
 : 
TCL_ERROR
);

302 
	}
}

308 
	$Sqlôëe°_blob_Inô
(
T˛_I¡îp
 *
öãΩ
){

309 #i‚de‡
SQLITE_OMIT_INCRBLOB


311 *
zName
;

312 
T˛_ObjCmdProc
 *
xProc
;

313 } 
aObjCmd
[] = {

314 { "sqlôe3_blob_›í", 
ã°_blob_›í
 },

315 { "sqlôe3_blob_˛o£", 
ã°_blob_˛o£
 },

316 { "sqlôe3_blob_byãs", 
ã°_blob_byãs
 },

317 { "sqlôe3_blob_ªad", 
ã°_blob_ªad
 },

318 { "sqlôe3_blob_wrôe", 
ã°_blob_wrôe
 },

320 
i
;

321 
i
=0; i<(
aObjCmd
)/(aObjCmd[0]); i++){

322 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
aObjCmd
[
i
].
zName
,áObjCmd[i].
xProc
, 0, 0);

325  
TCL_OK
;

326 
	}
}

	@test_btree.c

16 
	~"båìI¡.h
"

17 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

18 
	~"sqlôe_t˛.h
"

20 
	~"t˛.h
"

29 
SQLITE_TCLAPI
 
	$sqlôe3BåìSh¨edCacheRï‹t
(

30 * 
˛õ¡D©a
,

31 
T˛_I¡îp
 *
öãΩ
,

32 
objc
,

33 
T˛_Obj
 *
CONST
 
objv
[]

35 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


36 
BtSh¨ed
 *
sqlôe3Sh¨edCacheLi°
;

37 
BtSh¨ed
 *
pBt
;

38 
T˛_Obj
 *
pRë
 = 
	`T˛_NewObj
();

39 
pBt
=
	`GLOBAL
(
BtSh¨ed
*,
sqlôe3Sh¨edCacheLi°
);ÖBt;ÖBtıBt->
pNext
){

40 c⁄° *
zFûe
 = 
	`sqlôe3PagîFûíame
(
pBt
->
pPagî
, 1);

41 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewSåögObj
(
zFûe
, -1));

42 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewI¡Obj
(
pBt
->
nRef
));

44 
	`T˛_SëObjResu…
(
öãΩ
, 
pRë
);

46  
TCL_OK
;

47 
	}
}

52 
	$sqlôe3BåìCurs‹Li°
(
Båì
 *
p
){

53 #ifde‡
SQLITE_DEBUG


54 
BtCurs‹
 *
pCur
;

55 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

56 
pCur
=
pBt
->
pCurs‹
;ÖCur;ÖCurıCur->
pNext
){

57 
MemPage
 *
pPage
 = 
pCur
->
≠Page
[pCur->
iPage
];

58 *
zMode
 = (
pCur
->
curFœgs
 & 
BTCF_WrôeFœg
) ? "rw" : "ro";

59 
	`sqlôe3DebugPrötf
("CURSOR %pÑootedát %4d(%s) currentlyát %d.%d%s\n",

60 
pCur
,ÖCur->
pgnoRoŸ
, 
zMode
,

61 
pPage
 ?ÖPage->
pgno
 : 0, 
pCur
->
aiIdx
[pCur->
iPage
],

62 (
pCur
->
eSèã
==
CURSOR_VALID
) ? "" : "Éof"

66 
	}
}

	@test_config.c

20 
	~"sqlôeLimô.h
"

22 
	~"sqlôeI¡.h
"

23 #i‡
SQLITE_OS_WIN


24 
	~"os_wö.h
"

27 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

28 
	~"sqlôe_t˛.h
"

30 
	~"t˛.h
"

32 
	~<°dlib.h
>

33 
	~<°rög.h
>

39 
	#STRINGVALUE2
(
x
Ë#x

	)

40 
	#STRINGVALUE
(
x
Ë
	`STRINGVALUE2
(x)

	)

47 
	$£t_›ti⁄s
(
T˛_I¡îp
 *
öãΩ
){

48 #i‡
HAVE_MALLOC_USABLE_SIZE


49 
	`T˛_SëV¨2
(
öãΩ
, "sqlite_options", "malloc_usable_size", "1",

50 
TCL_GLOBAL_ONLY
);

52 
	`T˛_SëV¨2
(
öãΩ
, "sqlite_options", "malloc_usable_size", "0",

53 
TCL_GLOBAL_ONLY
);

56 #ifde‡
SQLITE_32BIT_ROWID


57 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "rowid32", "1", 
TCL_GLOBAL_ONLY
);

59 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "rowid32", "0", 
TCL_GLOBAL_ONLY
);

62 #ifde‡
SQLITE_CASE_SENSITIVE_LIKE


63 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s","ˇ££nsôivñike","1",
TCL_GLOBAL_ONLY
);

65 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s","ˇ££nsôivñike","0",
TCL_GLOBAL_ONLY
);

68 #i‡!
SQLITE_OS_WINCE
 && !
SQLITE_OS_WINRT


69 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "curdú", "1", 
TCL_GLOBAL_ONLY
);

71 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "curdú", "0", 
TCL_GLOBAL_ONLY
);

74 #ifde‡
SQLITE_WIN32_MALLOC


75 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "wö32mÆloc", "1", 
TCL_GLOBAL_ONLY
);

77 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "wö32mÆloc", "0", 
TCL_GLOBAL_ONLY
);

80 #ifde‡
SQLITE_DEBUG


81 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "debug", "1", 
TCL_GLOBAL_ONLY
);

83 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "debug", "0", 
TCL_GLOBAL_ONLY
);

86 #ifde‡
SQLITE_DEFAULT_CKPTFULLFSYNC


87 
	`T˛_SëV¨2
(
öãΩ
, "sqlite_options", "default_ckptfullfsync",

88 
SQLITE_DEFAULT_CKPTFULLFSYNC
 ? "1" : "0", 
TCL_GLOBAL_ONLY
);

90 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "deÁu…_ck±fuŒfsync", "0", 
TCL_GLOBAL_ONLY
);

93 #ifde‡
SQLITE_DIRECT_OVERFLOW_READ


94 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "dúe˘_ªad", "1", 
TCL_GLOBAL_ONLY
);

96 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "dúe˘_ªad", "0", 
TCL_GLOBAL_ONLY
);

99 #ifde‡
SQLITE_DISABLE_DIRSYNC


100 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "dúsync", "0", 
TCL_GLOBAL_ONLY
);

102 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "dúsync", "1", 
TCL_GLOBAL_ONLY
);

105 #ifde‡
SQLITE_DISABLE_LFS


106 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "lfs", "0", 
TCL_GLOBAL_ONLY
);

108 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "lfs", "1", 
TCL_GLOBAL_ONLY
);

111 #ifde‡
SQLITE_DISABLE_PAGECACHE_OVERFLOW_STATS


112 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "∑geˇche_ovîÊow_°©s","0",
TCL_GLOBAL_ONLY
);

114 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "∑geˇche_ovîÊow_°©s","1",
TCL_GLOBAL_ONLY
);

117 #i‡
SQLITE_MAX_MMAP_SIZE
>0

118 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "mm≠", "1", 
TCL_GLOBAL_ONLY
);

120 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "mm≠", "0", 
TCL_GLOBAL_ONLY
);

123 
	`T˛_SëV¨2
(
öãΩ
, "sqlite_options", "worker_threads",

124 
	`STRINGVALUE
(
SQLITE_MAX_WORKER_THREADS
), 
TCL_GLOBAL_ONLY


128 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "memdebug", "1", 
TCL_GLOBAL_ONLY
);

130 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "memdebug", "0", 
TCL_GLOBAL_ONLY
);

133 #ifde‡
SQLITE_ENABLE_8_3_NAMES


134 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "8_3_«mes", "1", 
TCL_GLOBAL_ONLY
);

136 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "8_3_«mes", "0", 
TCL_GLOBAL_ONLY
);

139 #ifde‡
SQLITE_ENABLE_CURSOR_HINTS


140 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "curs‹höts", "1", 
TCL_GLOBAL_ONLY
);

142 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "curs‹höts", "0", 
TCL_GLOBAL_ONLY
);

145 #ifde‡
SQLITE_ENABLE_HIDDEN_COLUMNS


146 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "hiddícﬁumns", "1", 
TCL_GLOBAL_ONLY
);

148 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "hiddícﬁumns", "0", 
TCL_GLOBAL_ONLY
);

151 #ifde‡
SQLITE_ENABLE_MEMSYS3


152 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "mem3", "1", 
TCL_GLOBAL_ONLY
);

154 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "mem3", "0", 
TCL_GLOBAL_ONLY
);

157 #ifde‡
SQLITE_ENABLE_MEMSYS5


158 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "mem5", "1", 
TCL_GLOBAL_ONLY
);

160 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "mem5", "0", 
TCL_GLOBAL_ONLY
);

163 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


164 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "¥eupd©e", "1", 
TCL_GLOBAL_ONLY
);

166 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "¥eupd©e", "0", 
TCL_GLOBAL_ONLY
);

169 #ifde‡
SQLITE_ENABLE_SNAPSHOT


170 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "¢≠shŸ", "1", 
TCL_GLOBAL_ONLY
);

172 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "¢≠shŸ", "0", 
TCL_GLOBAL_ONLY
);

175 #ifde‡
SQLITE_MUTEX_OMIT


176 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "muãx", "0", 
TCL_GLOBAL_ONLY
);

178 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "muãx", "1", 
TCL_GLOBAL_ONLY
);

181 #ifde‡
SQLITE_MUTEX_NOOP


182 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "muãx_no›", "1", 
TCL_GLOBAL_ONLY
);

184 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "muãx_no›", "0", 
TCL_GLOBAL_ONLY
);

187 #ifde‡
SQLITE_OMIT_ALTERTABLE


188 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "ÆãπabÀ", "0", 
TCL_GLOBAL_ONLY
);

190 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "ÆãπabÀ", "1", 
TCL_GLOBAL_ONLY
);

193 #ifde‡
SQLITE_OMIT_ANALYZE


194 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "™Æyze", "0", 
TCL_GLOBAL_ONLY
);

196 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "™Æyze", "1", 
TCL_GLOBAL_ONLY
);

199 #ifde‡
SQLITE_ENABLE_API_ARMOR


200 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "≠i_¨m‹", "1", 
TCL_GLOBAL_ONLY
);

202 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "≠i_¨m‹", "0", 
TCL_GLOBAL_ONLY
);

205 #ifde‡
SQLITE_ENABLE_ATOMIC_WRITE


206 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "©omicwrôe", "1", 
TCL_GLOBAL_ONLY
);

208 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "©omicwrôe", "0", 
TCL_GLOBAL_ONLY
);

211 #ifde‡
SQLITE_ENABLE_JSON1


212 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "js⁄1", "1", 
TCL_GLOBAL_ONLY
);

214 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "js⁄1", "0", 
TCL_GLOBAL_ONLY
);

217 #ifde‡
SQLITE_LIKE_DOESNT_MATCH_BLOBS


218 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "like_m©ch_blobs", "0", 
TCL_GLOBAL_ONLY
);

220 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "like_m©ch_blobs", "1", 
TCL_GLOBAL_ONLY
);

223 #ifde‡
SQLITE_OMIT_ATTACH


224 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "©èch", "0", 
TCL_GLOBAL_ONLY
);

226 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "©èch", "1", 
TCL_GLOBAL_ONLY
);

229 #ifde‡
SQLITE_OMIT_AUTHORIZATION


230 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "auth", "0", 
TCL_GLOBAL_ONLY
);

232 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "auth", "1", 
TCL_GLOBAL_ONLY
);

235 #ifde‡
SQLITE_OMIT_AUTOINCREMENT


236 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "autoöc", "0", 
TCL_GLOBAL_ONLY
);

238 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "autoöc", "1", 
TCL_GLOBAL_ONLY
);

241 #ifde‡
SQLITE_OMIT_AUTOMATIC_INDEX


242 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "autoödex", "0", 
TCL_GLOBAL_ONLY
);

244 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "autoödex", "1", 
TCL_GLOBAL_ONLY
);

247 #ifde‡
SQLITE_OMIT_AUTORESET


248 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "aut‹e£t", "0", 
TCL_GLOBAL_ONLY
);

250 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "aut‹e£t", "1", 
TCL_GLOBAL_ONLY
);

253 #ifde‡
SQLITE_OMIT_AUTOVACUUM


254 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "autovacuum", "0", 
TCL_GLOBAL_ONLY
);

256 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "autovacuum", "1", 
TCL_GLOBAL_ONLY
);

258 #i‡!
	`deföed
(
SQLITE_DEFAULT_AUTOVACUUM
)

259 
	`T˛_SëV¨2
(
öãΩ
,"sqlôe_›ti⁄s","deÁu…_autovacuum","0",
TCL_GLOBAL_ONLY
);

261 
	`T˛_SëV¨2
(
öãΩ
, "sqlite_options", "default_autovacuum",

262 
	`STRINGVALUE
(
SQLITE_DEFAULT_AUTOVACUUM
), 
TCL_GLOBAL_ONLY
);

265 #ifde‡
SQLITE_OMIT_BETWEEN_OPTIMIZATION


266 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "bëwìn_›t", "0", 
TCL_GLOBAL_ONLY
);

268 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "bëwìn_›t", "1", 
TCL_GLOBAL_ONLY
);

271 #ifde‡
SQLITE_UNTESTABLE


272 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "buûtö_ã°", "0", 
TCL_GLOBAL_ONLY
);

274 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "buûtö_ã°", "1", 
TCL_GLOBAL_ONLY
);

277 #ifde‡
SQLITE_OMIT_BLOB_LITERAL


278 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "bloblô", "0", 
TCL_GLOBAL_ONLY
);

280 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "bloblô", "1", 
TCL_GLOBAL_ONLY
);

283 #ifde‡
SQLITE_OMIT_CAST


284 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "ˇ°", "0", 
TCL_GLOBAL_ONLY
);

286 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "ˇ°", "1", 
TCL_GLOBAL_ONLY
);

289 #ifde‡
SQLITE_OMIT_CHECK


290 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "check", "0", 
TCL_GLOBAL_ONLY
);

292 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "check", "1", 
TCL_GLOBAL_ONLY
);

295 #ifde‡
SQLITE_OMIT_CTE


296 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "˘e", "0", 
TCL_GLOBAL_ONLY
);

298 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "˘e", "1", 
TCL_GLOBAL_ONLY
);

301 #ifde‡
SQLITE_ENABLE_COLUMN_METADATA


302 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "cﬁumnmëad©a", "1", 
TCL_GLOBAL_ONLY
);

304 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "cﬁumnmëad©a", "0", 
TCL_GLOBAL_ONLY
);

307 #ifde‡
SQLITE_ENABLE_OVERSIZE_CELL_CHECK


308 
	`T˛_SëV¨2
(
öãΩ
, "sqlite_options", "oversize_cell_check", "1",

309 
TCL_GLOBAL_ONLY
);

311 
	`T˛_SëV¨2
(
öãΩ
, "sqlite_options", "oversize_cell_check", "0",

312 
TCL_GLOBAL_ONLY
);

315 #ifde‡
SQLITE_OMIT_COMPILEOPTION_DIAGS


316 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "compûe›ti⁄_dügs", "0", 
TCL_GLOBAL_ONLY
);

318 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "compûe›ti⁄_dügs", "1", 
TCL_GLOBAL_ONLY
);

321 #ifde‡
SQLITE_OMIT_COMPLETE


322 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "com∂ëe", "0", 
TCL_GLOBAL_ONLY
);

324 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "com∂ëe", "1", 
TCL_GLOBAL_ONLY
);

327 #ifde‡
SQLITE_OMIT_COMPOUND_SELECT


328 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "compound", "0", 
TCL_GLOBAL_ONLY
);

330 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "compound", "1", 
TCL_GLOBAL_ONLY
);

333 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "c⁄Êi˘", "1", 
TCL_GLOBAL_ONLY
);

334 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "¸ashã°", "1", 
TCL_GLOBAL_ONLY
);

336 #ifde‡
SQLITE_OMIT_DATETIME_FUNCS


337 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "d©ëime", "0", 
TCL_GLOBAL_ONLY
);

339 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "d©ëime", "1", 
TCL_GLOBAL_ONLY
);

342 #ifde‡
SQLITE_OMIT_DECLTYPE


343 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "de˛ty≥", "0", 
TCL_GLOBAL_ONLY
);

345 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "de˛ty≥", "1", 
TCL_GLOBAL_ONLY
);

348 #ifde‡
SQLITE_OMIT_DEPRECATED


349 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "dïªˇãd", "0", 
TCL_GLOBAL_ONLY
);

351 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "dïªˇãd", "1", 
TCL_GLOBAL_ONLY
);

354 #ifde‡
SQLITE_OMIT_DISKIO


355 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "diskio", "0", 
TCL_GLOBAL_ONLY
);

357 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "diskio", "1", 
TCL_GLOBAL_ONLY
);

360 #ifde‡
SQLITE_OMIT_EXPLAIN


361 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "ex∂aö", "0", 
TCL_GLOBAL_ONLY
);

363 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "ex∂aö", "1", 
TCL_GLOBAL_ONLY
);

366 #ifde‡
SQLITE_OMIT_FLOATING_POINT


367 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "Êﬂtögpoöt", "0", 
TCL_GLOBAL_ONLY
);

369 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "Êﬂtögpoöt", "1", 
TCL_GLOBAL_ONLY
);

372 #ifde‡
SQLITE_OMIT_FOREIGN_KEY


373 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "f‹eignkey", "0", 
TCL_GLOBAL_ONLY
);

375 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "f‹eignkey", "1", 
TCL_GLOBAL_ONLY
);

378 #ifde‡
SQLITE_ENABLE_FTS1


379 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "·s1", "1", 
TCL_GLOBAL_ONLY
);

381 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "·s1", "0", 
TCL_GLOBAL_ONLY
);

384 #ifde‡
SQLITE_ENABLE_FTS2


385 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "·s2", "1", 
TCL_GLOBAL_ONLY
);

387 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "·s2", "0", 
TCL_GLOBAL_ONLY
);

390 #ifde‡
SQLITE_ENABLE_FTS3


391 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "·s3", "1", 
TCL_GLOBAL_ONLY
);

393 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "·s3", "0", 
TCL_GLOBAL_ONLY
);

396 #ifde‡
SQLITE_ENABLE_FTS5


397 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "·s5", "1", 
TCL_GLOBAL_ONLY
);

399 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "·s5", "0", 
TCL_GLOBAL_ONLY
);

402 #i‡
	`deföed
(
SQLITE_ENABLE_FTS3
Ë&& !deföed(
SQLITE_DISABLE_FTS3_UNICODE
)

403 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "·s3_unicode", "1", 
TCL_GLOBAL_ONLY
);

405 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "·s3_unicode", "0", 
TCL_GLOBAL_ONLY
);

408 #ifde‡
SQLITE_DISABLE_FTS4_DEFERRED


409 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "·s4_de„ºed", "0", 
TCL_GLOBAL_ONLY
);

411 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "·s4_de„ºed", "1", 
TCL_GLOBAL_ONLY
);

414 #ifde‡
SQLITE_OMIT_GET_TABLE


415 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "gëèbÀ", "0", 
TCL_GLOBAL_ONLY
);

417 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "gëèbÀ", "1", 
TCL_GLOBAL_ONLY
);

420 #ifde‡
SQLITE_ENABLE_ICU


421 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "icu", "1", 
TCL_GLOBAL_ONLY
);

423 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "icu", "0", 
TCL_GLOBAL_ONLY
);

426 #ifde‡
SQLITE_OMIT_INCRBLOB


427 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "ö¸blob", "0", 
TCL_GLOBAL_ONLY
);

429 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "ö¸blob", "1", 
TCL_GLOBAL_ONLY
);

432 #ifde‡
SQLITE_OMIT_INTEGRITY_CHECK


433 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "öãgrôyck", "0", 
TCL_GLOBAL_ONLY
);

435 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "öãgrôyck", "1", 
TCL_GLOBAL_ONLY
);

438 #i‡
	`deföed
(
SQLITE_DEFAULT_FILE_FORMAT
) && SQLITE_DEFAULT_FILE_FORMAT==1

439 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "Àgacyf‹m©", "1", 
TCL_GLOBAL_ONLY
);

441 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "Àgacyf‹m©", "0", 
TCL_GLOBAL_ONLY
);

444 #ifde‡
SQLITE_OMIT_LIKE_OPTIMIZATION


445 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "like_›t", "0", 
TCL_GLOBAL_ONLY
);

447 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "like_›t", "1", 
TCL_GLOBAL_ONLY
);

450 #ifde‡
SQLITE_OMIT_LOAD_EXTENSION


451 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "lﬂd_ext", "0", 
TCL_GLOBAL_ONLY
);

453 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "lﬂd_ext", "1", 
TCL_GLOBAL_ONLY
);

456 #ifde‡
SQLITE_OMIT_LOCALTIME


457 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "loˇ…ime", "0", 
TCL_GLOBAL_ONLY
);

459 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "loˇ…ime", "1", 
TCL_GLOBAL_ONLY
);

462 #ifde‡
SQLITE_OMIT_LOOKASIDE


463 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "lookaside", "0", 
TCL_GLOBAL_ONLY
);

465 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "lookaside", "1", 
TCL_GLOBAL_ONLY
);

468 
	`T˛_SëV¨2
(
öãΩ
, "sqlite_options", "long_double",

469 (
LONGDOUBLE_TYPE
)>() ? "1" : "0",

470 
TCL_GLOBAL_ONLY
);

472 #ifde‡
SQLITE_OMIT_MEMORYDB


473 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "mem‹ydb", "0", 
TCL_GLOBAL_ONLY
);

475 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "mem‹ydb", "1", 
TCL_GLOBAL_ONLY
);

478 #ifde‡
SQLITE_ENABLE_MEMORY_MANAGEMENT


479 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "mem‹ym™age", "1", 
TCL_GLOBAL_ONLY
);

481 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "mem‹ym™age", "0", 
TCL_GLOBAL_ONLY
);

484 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "mîges‹t", "1", 
TCL_GLOBAL_ONLY
);

486 #ifde‡
SQLITE_OMIT_OR_OPTIMIZATION


487 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "‹_›t", "0", 
TCL_GLOBAL_ONLY
);

489 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "‹_›t", "1", 
TCL_GLOBAL_ONLY
);

492 #ifde‡
SQLITE_ENABLE_RBU


493 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "rbu", "1", 
TCL_GLOBAL_ONLY
);

495 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "rbu", "0", 
TCL_GLOBAL_ONLY
);

498 #ifde‡
SQLITE_OMIT_PAGER_PRAGMAS


499 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "∑gî_¥agmas", "0", 
TCL_GLOBAL_ONLY
);

501 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "∑gî_¥agmas", "1", 
TCL_GLOBAL_ONLY
);

504 #i‡
	`deföed
(
SQLITE_OMIT_PRAGMA
Ë|| deföed(
SQLITE_OMIT_FLAG_PRAGMAS
)

505 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "¥agma", "0", 
TCL_GLOBAL_ONLY
);

506 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "öãgrôyck", "0", 
TCL_GLOBAL_ONLY
);

508 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "¥agma", "1", 
TCL_GLOBAL_ONLY
);

511 #ifde‡
SQLITE_OMIT_PROGRESS_CALLBACK


512 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "¥ogªss", "0", 
TCL_GLOBAL_ONLY
);

514 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "¥ogªss", "1", 
TCL_GLOBAL_ONLY
);

517 #ifde‡
SQLITE_OMIT_REINDEX


518 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "ªödex", "0", 
TCL_GLOBAL_ONLY
);

520 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "ªödex", "1", 
TCL_GLOBAL_ONLY
);

523 #ifde‡
SQLITE_ENABLE_RTREE


524 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "πªe", "1", 
TCL_GLOBAL_ONLY
);

526 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "πªe", "0", 
TCL_GLOBAL_ONLY
);

529 #ifde‡
SQLITE_RTREE_INT_ONLY


530 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "πªe_öt_⁄ly", "1", 
TCL_GLOBAL_ONLY
);

532 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "πªe_öt_⁄ly", "0", 
TCL_GLOBAL_ONLY
);

535 #ifde‡
SQLITE_OMIT_SCHEMA_PRAGMAS


536 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "schema_¥agmas", "0", 
TCL_GLOBAL_ONLY
);

538 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "schema_¥agmas", "1", 
TCL_GLOBAL_ONLY
);

541 #ifde‡
SQLITE_OMIT_SCHEMA_VERSION_PRAGMAS


542 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "schema_vîsi⁄", "0", 
TCL_GLOBAL_ONLY
);

544 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "schema_vîsi⁄", "1", 
TCL_GLOBAL_ONLY
);

547 #ifde‡
SQLITE_ENABLE_SESSION


548 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "£ssi⁄", "1", 
TCL_GLOBAL_ONLY
);

550 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "£ssi⁄", "0", 
TCL_GLOBAL_ONLY
);

553 #ifde‡
SQLITE_ENABLE_STAT4


554 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "°©4", "1", 
TCL_GLOBAL_ONLY
);

556 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "°©4", "0", 
TCL_GLOBAL_ONLY
);

558 #i‡
	`deföed
(
SQLITE_ENABLE_STAT3
Ë&& !deföed(
SQLITE_ENABLE_STAT4
)

559 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "°©3", "1", 
TCL_GLOBAL_ONLY
);

561 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "°©3", "0", 
TCL_GLOBAL_ONLY
);

564 #ifde‡
SQLITE_ENABLE_STMT_SCANSTATUS


565 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "sˇn°©us", "1", 
TCL_GLOBAL_ONLY
);

567 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "sˇn°©us", "0", 
TCL_GLOBAL_ONLY
);

570 #i‡!
	`deföed
(
SQLITE_ENABLE_LOCKING_STYLE
)

571 #i‡
	`deföed
(
__APPLE__
)

572 
	#SQLITE_ENABLE_LOCKING_STYLE
 1

	)

574 
	#SQLITE_ENABLE_LOCKING_STYLE
 0

	)

577 #i‡
SQLITE_ENABLE_LOCKING_STYLE
 && 
	`deföed
(
__APPLE__
)

578 
	`T˛_SëV¨2
(
öãΩ
,"sqlôe_›ti⁄s","lock_¥oxy_¥agmas","1",
TCL_GLOBAL_ONLY
);

580 
	`T˛_SëV¨2
(
öãΩ
,"sqlôe_›ti⁄s","lock_¥oxy_¥agmas","0",
TCL_GLOBAL_ONLY
);

582 #i‡
	`deföed
(
SQLITE_PREFER_PROXY_LOCKING
Ë&& deföed(
__APPLE__
)

583 
	`T˛_SëV¨2
(
öãΩ
,"sqlôe_›ti⁄s","¥e„r_¥oxy_lockög","1",
TCL_GLOBAL_ONLY
);

585 
	`T˛_SëV¨2
(
öãΩ
,"sqlôe_›ti⁄s","¥e„r_¥oxy_lockög","0",
TCL_GLOBAL_ONLY
);

589 #ifde‡
SQLITE_OMIT_SHARED_CACHE


590 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "sh¨ed_ˇche", "0", 
TCL_GLOBAL_ONLY
);

592 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "sh¨ed_ˇche", "1", 
TCL_GLOBAL_ONLY
);

595 #ifde‡
SQLITE_OMIT_SUBQUERY


596 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "subquîy", "0", 
TCL_GLOBAL_ONLY
);

598 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "subquîy", "1", 
TCL_GLOBAL_ONLY
);

601 #ifde‡
SQLITE_OMIT_TCL_VARIABLE


602 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "t˛v¨", "0", 
TCL_GLOBAL_ONLY
);

604 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "t˛v¨", "1", 
TCL_GLOBAL_ONLY
);

607 
	`T˛_SëV¨2
(
öãΩ
, "sqlite_options", "threadsafe",

608 
SQLITE_THREADSAFE
 ? "1" : "0", 
TCL_GLOBAL_ONLY
);

609 
	`T˛_SëV¨2
(
öãΩ
, "sqlite_options", "threadsafe1",

610 
SQLITE_THREADSAFE
==1 ? "1" : "0", 
TCL_GLOBAL_ONLY
);

611 
	`T˛_SëV¨2
(
öãΩ
, "sqlite_options", "threadsafe2",

612 
SQLITE_THREADSAFE
==2 ? "1" : "0", 
TCL_GLOBAL_ONLY
);

613 
	`as£π
–
	`sqlôe3_thªadß„
()==
SQLITE_THREADSAFE
 );

615 #ifde‡
SQLITE_OMIT_TEMPDB


616 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "ãmpdb", "0", 
TCL_GLOBAL_ONLY
);

618 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "ãmpdb", "1", 
TCL_GLOBAL_ONLY
);

621 #ifde‡
SQLITE_OMIT_TRACE


622 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "åa˚", "0", 
TCL_GLOBAL_ONLY
);

624 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "åa˚", "1", 
TCL_GLOBAL_ONLY
);

627 #ifde‡
SQLITE_OMIT_TRIGGER


628 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "åiggî", "0", 
TCL_GLOBAL_ONLY
);

630 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "åiggî", "1", 
TCL_GLOBAL_ONLY
);

633 #ifde‡
SQLITE_OMIT_TRUNCATE_OPTIMIZATION


634 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "åunˇã_›t", "0", 
TCL_GLOBAL_ONLY
);

636 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "åunˇã_›t", "1", 
TCL_GLOBAL_ONLY
);

639 #ifde‡
SQLITE_OMIT_UTF16


640 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "utf16", "0", 
TCL_GLOBAL_ONLY
);

642 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "utf16", "1", 
TCL_GLOBAL_ONLY
);

645 #i‡
	`deföed
(
SQLITE_OMIT_VACUUM
Ë|| deföed(
SQLITE_OMIT_ATTACH
)

646 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "vacuum", "0", 
TCL_GLOBAL_ONLY
);

648 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "vacuum", "1", 
TCL_GLOBAL_ONLY
);

651 #ifde‡
SQLITE_OMIT_VIEW


652 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "võw", "0", 
TCL_GLOBAL_ONLY
);

654 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "võw", "1", 
TCL_GLOBAL_ONLY
);

657 #ifde‡
SQLITE_OMIT_VIRTUALTABLE


658 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "vèb", "0", 
TCL_GLOBAL_ONLY
);

660 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "vèb", "1", 
TCL_GLOBAL_ONLY
);

663 #ifde‡
SQLITE_OMIT_WAL


664 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "wÆ", "0", 
TCL_GLOBAL_ONLY
);

666 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "wÆ", "1", 
TCL_GLOBAL_ONLY
);

669 #ifde‡
SQLITE_OMIT_WSD


670 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "wsd", "0", 
TCL_GLOBAL_ONLY
);

672 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "wsd", "1", 
TCL_GLOBAL_ONLY
);

675 #i‡
	`deföed
(
SQLITE_ENABLE_UPDATE_DELETE_LIMIT
Ë&& !deföed(
SQLITE_OMIT_SUBQUERY
)

676 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "upd©e_dñëe_limô", "1", 
TCL_GLOBAL_ONLY
);

678 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "upd©e_dñëe_limô", "0", 
TCL_GLOBAL_ONLY
);

681 #i‡
	`deföed
(
SQLITE_ENABLE_UNLOCK_NOTIFY
)

682 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "u∆ock_nŸify", "1", 
TCL_GLOBAL_ONLY
);

684 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "u∆ock_nŸify", "0", 
TCL_GLOBAL_ONLY
);

687 #ifde‡
SQLITE_SECURE_DELETE


688 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "£cuª_dñëe", "1", 
TCL_GLOBAL_ONLY
);

690 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "£cuª_dñëe", "0", 
TCL_GLOBAL_ONLY
);

693 #ifde‡
SQLITE_USER_AUTHENTICATION


694 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "u£øuth", "1", 
TCL_GLOBAL_ONLY
);

696 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "u£øuth", "0", 
TCL_GLOBAL_ONLY
);

699 #ifde‡
SQLITE_MULTIPLEX_EXT_OVWR


700 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "mu…ùÀx_ext_ovîwrôe", "1", 
TCL_GLOBAL_ONLY
);

702 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "mu…ùÀx_ext_ovîwrôe", "0", 
TCL_GLOBAL_ONLY
);

705 #ifde‡
YYTRACKMAXSTACKDEPTH


706 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "yyåackmax°ackdïth", "1", 
TCL_GLOBAL_ONLY
);

708 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "yyåackmax°ackdïth", "0", 
TCL_GLOBAL_ONLY
);

711 #ifde‡
SQLITE_ENABLE_SQLLOG


712 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "sqŒog", "1", 
TCL_GLOBAL_ONLY
);

714 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "sqŒog", "0", 
TCL_GLOBAL_ONLY
);

717 #ifde‡
SQLITE_ENABLE_URI_00_ERROR


718 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "uri_00_îr‹", "1", 
TCL_GLOBAL_ONLY
);

720 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "uri_00_îr‹", "0", 
TCL_GLOBAL_ONLY
);

723 
	#LINKVAR
(
x
) { \

724 c⁄° 
cv_
 ## 
x
 = 
SQLITE_
 ## x; \

725 
	`T˛_LökV¨
(
öãΩ
, "SQLITE_" #x, (*)&(
cv_
 ## 
x
), \

726 
TCL_LINK_INT
 | 
TCL_LINK_READ_ONLY
); }

	)

728 
	`LINKVAR
–
MAX_LENGTH
 );

729 
	`LINKVAR
–
MAX_COLUMN
 );

730 
	`LINKVAR
–
MAX_SQL_LENGTH
 );

731 
	`LINKVAR
–
MAX_EXPR_DEPTH
 );

732 
	`LINKVAR
–
MAX_COMPOUND_SELECT
 );

733 
	`LINKVAR
–
MAX_VDBE_OP
 );

734 
	`LINKVAR
–
MAX_FUNCTION_ARG
 );

735 
	`LINKVAR
–
MAX_VARIABLE_NUMBER
 );

736 
	`LINKVAR
–
MAX_PAGE_SIZE
 );

737 
	`LINKVAR
–
MAX_PAGE_COUNT
 );

738 
	`LINKVAR
–
MAX_LIKE_PATTERN_LENGTH
 );

739 
	`LINKVAR
–
MAX_TRIGGER_DEPTH
 );

740 
	`LINKVAR
–
DEFAULT_CACHE_SIZE
 );

741 
	`LINKVAR
–
DEFAULT_PAGE_SIZE
 );

742 
	`LINKVAR
–
DEFAULT_FILE_FORMAT
 );

743 
	`LINKVAR
–
MAX_ATTACHED
 );

744 
	`LINKVAR
–
MAX_DEFAULT_PAGE_SIZE
 );

745 
	`LINKVAR
–
MAX_WORKER_THREADS
 );

748 c⁄° 
cv_TEMP_STORE
 = 
SQLITE_TEMP_STORE
;

749 
	`T˛_LökV¨
(
öãΩ
, "TEMP_STORE", (*)&(
cv_TEMP_STORE
),

750 
TCL_LINK_INT
 | 
TCL_LINK_READ_ONLY
);

753 #ifde‡
_MSC_VER


755 c⁄° 
cv__MSC_VER
 = 1;

756 
	`T˛_LökV¨
(
öãΩ
, "_MSC_VER", (*)&(
cv__MSC_VER
),

757 
TCL_LINK_INT
 | 
TCL_LINK_READ_ONLY
);

760 #ifde‡
__GNUC__


762 c⁄° 
cv___GNUC__
 = 1;

763 
	`T˛_LökV¨
(
öãΩ
, "__GNUC__", (*)&(
cv___GNUC__
),

764 
TCL_LINK_INT
 | 
TCL_LINK_READ_ONLY
);

767 
	}
}

773 
	$Sqlôec⁄fig_Inô
(
T˛_I¡îp
 *
öãΩ
){

774 
	`£t_›ti⁄s
(
öãΩ
);

775  
TCL_OK
;

776 
	}
}

	@test_delete.c

22 #i‡
SQLITE_OS_WIN


23 
	~<io.h
>

24 
	#F_OK
 0

	)

26 
	~<uni°d.h
>

28 
	~<°rög.h
>

29 
	~<î∫o.h
>

30 
	~"sqlôe3.h
"

33 #i‚de‡
MX_CHUNK_NUMBER


34 
	#MX_CHUNK_NUMBER
 299

	)

36 #i‚de‡
SQLITE_MULTIPLEX_JOURNAL_8_3_OFFSET


37 
	#SQLITE_MULTIPLEX_JOURNAL_8_3_OFFSET
 400

	)

39 #i‚de‡
SQLITE_MULTIPLEX_WAL_8_3_OFFSET


40 
	#SQLITE_MULTIPLEX_WAL_8_3_OFFSET
 700

	)

48 
	$sqlôe3Dñëe83Name
(*
z
){

49 
i
, 
sz
;

50 
sz
 = ()
	`°æí
(
z
);

51 
i
=
sz
-1; i>0 && 
z
[i]!='/' && z[i]!='.'; i--){}

52 if–
z
[
i
]=='.' && (
sz
>i+4ËË
	`memmove
(&z[i+1], &z[sz-3], 4);

53 
	}
}

63 
	$sqlôe3DñëeU∆ökIfExi°s
(c⁄° *
zFûe
, *
pbExi°s
){

64 
rc
;

65 
rc
 = 
	`ac˚ss
(
zFûe
, 
F_OK
);

66 if–
rc
 ){

67 if–
î∫o
==
ENOENT
 ){

68 if–
pbExi°s
 ) *pbExists = 0;

71  
î∫o
;

73 if–
pbExi°s
 ) *pbExists = 1;

74 
rc
 = 
	`u∆ök
(
zFûe
);

75 if–
rc
 )  
î∫o
;

77 
	}
}

83 
	$sqlôe3_dñëe_d©aba£
(

84 c⁄° *
zFûe


86 *
zBuf
;

87 
nBuf
;

88 
rc
 = 0;

89 
i
;

91 c⁄° *
azFmt
[] = { "%s", "%s-journal", "%s-wal", "%s-shm" };

93 
	sMFûe
 {

94 c⁄° *
zFmt
;

95 
iOff£t
;

96 
b83
;

97 } 
aMFûe
[] = {

102 { "%s-jou∫Æ%03d", 
SQLITE_MULTIPLEX_JOURNAL_8_3_OFFSET
, 1 },

103 { "%s-wÆ%03d", 
SQLITE_MULTIPLEX_WAL_8_3_OFFSET
, 1 },

108 
nBuf
 = ()
	`°æí
(
zFûe
) + 100;

109 
zBuf
 = (*)
	`sqlôe3_mÆloc
(
nBuf
);

110 if–
zBuf
==0 )  
SQLITE_NOMEM
;

114 
i
=0; 
rc
==0 && i<(
azFmt
)/(azFmt[0]); i++){

115 
	`sqlôe3_¢¥ötf
(
nBuf
, 
zBuf
, 
azFmt
[
i
], 
zFûe
);

116 
rc
 = 
	`sqlôe3DñëeU∆ökIfExi°s
(
zBuf
, 0);

117 if–
rc
==0 && 
i
!=0 ){

118 
	`sqlôe3Dñëe83Name
(
zBuf
);

119 
rc
 = 
	`sqlôe3DñëeU∆ökIfExi°s
(
zBuf
, 0);

124 
i
=0; 
rc
==0 && i<(
aMFûe
)/(aMFile[0]); i++){

125 
MFûe
 *
p
 = &
aMFûe
[
i
];

126 
iChunk
;

127 
iChunk
=1; iChunk<=
MX_CHUNK_NUMBER
; iChunk++){

128 
bExi°s
;

129 
	`sqlôe3_¢¥ötf
(
nBuf
, 
zBuf
, 
p
->
zFmt
, 
zFûe
, 
iChunk
+p->
iOff£t
);

130 if–
p
->
b83
 ) 
	`sqlôe3Dñëe83Name
(
zBuf
);

131 
rc
 = 
	`sqlôe3DñëeU∆ökIfExi°s
(
zBuf
, &
bExi°s
);

132 if–
bExi°s
==0 || 
rc
!=0 ) ;

136 
	`sqlôe3_‰ì
(
zBuf
);

137  (
rc
 ? 
SQLITE_ERROR
 : 
SQLITE_OK
);

138 
	}
}

	@test_demovfs.c

116 #i‡!
deföed
(
SQLITE_TEST
Ë|| 
SQLITE_OS_UNIX


118 
	~"sqlôe3.h
"

120 
	~<as£π.h
>

121 
	~<°rög.h
>

122 
	~<sys/ty≥s.h
>

123 
	~<sys/°©.h
>

124 
	~<sys/fûe.h
>

125 
	~<sys/∑øm.h
>

126 
	~<uni°d.h
>

127 
	~<time.h
>

128 
	~<î∫o.h
>

129 
	~<f˙é.h
>

134 #i‚de‡
SQLITE_DEMOVFS_BUFFERSZ


135 
	#SQLITE_DEMOVFS_BUFFERSZ
 8192

	)

141 
	#MAXPATHNAME
 512

	)

147 
DemoFûe
 
	tDemoFûe
;

148 
	sDemoFûe
 {

149 
sqlôe3_fûe
 
	mba£
;

150 
	mfd
;

152 *
	maBuf„r
;

153 
	mnBuf„r
;

154 
sqlôe3_öt64
 
	miBuf„rOf°
;

161 
	$demoDúe˘Wrôe
(

162 
DemoFûe
 *
p
,

163 c⁄° *
zBuf
,

164 
iAmt
,

165 
sqlôe_öt64
 
iOf°


167 
off_t
 
of°
;

168 
size_t
 
nWrôe
;

170 
of°
 = 
	`l£ek
(
p
->
fd
, 
iOf°
, 
SEEK_SET
);

171 if–
of°
!=
iOf°
 ){

172  
SQLITE_IOERR_WRITE
;

175 
nWrôe
 = 
	`wrôe
(
p
->
fd
, 
zBuf
, 
iAmt
);

176 if–
nWrôe
!=
iAmt
 ){

177  
SQLITE_IOERR_WRITE
;

180  
SQLITE_OK
;

181 
	}
}

188 
	$demoFlushBuf„r
(
DemoFûe
 *
p
){

189 
rc
 = 
SQLITE_OK
;

190 if–
p
->
nBuf„r
 ){

191 
rc
 = 
	`demoDúe˘Wrôe
(
p
,Ö->
aBuf„r
,Ö->
nBuf„r
,Ö->
iBuf„rOf°
);

192 
p
->
nBuf„r
 = 0;

194  
rc
;

195 
	}
}

200 
	$demoClo£
(
sqlôe3_fûe
 *
pFûe
){

201 
rc
;

202 
DemoFûe
 *
p
 = (DemoFûe*)
pFûe
;

203 
rc
 = 
	`demoFlushBuf„r
(
p
);

204 
	`sqlôe3_‰ì
(
p
->
aBuf„r
);

205 
	`˛o£
(
p
->
fd
);

206  
rc
;

207 
	}
}

212 
	$demoRód
(

213 
sqlôe3_fûe
 *
pFûe
,

214 *
zBuf
,

215 
iAmt
,

216 
sqlôe_öt64
 
iOf°


218 
DemoFûe
 *
p
 = (DemoFûe*)
pFûe
;

219 
off_t
 
of°
;

220 
nRód
;

221 
rc
;

229 
rc
 = 
	`demoFlushBuf„r
(
p
);

230 if–
rc
!=
SQLITE_OK
 ){

231  
rc
;

234 
of°
 = 
	`l£ek
(
p
->
fd
, 
iOf°
, 
SEEK_SET
);

235 if–
of°
!=
iOf°
 ){

236  
SQLITE_IOERR_READ
;

238 
nRód
 = 
	`ªad
(
p
->
fd
, 
zBuf
, 
iAmt
);

240 if–
nRód
==
iAmt
 ){

241  
SQLITE_OK
;

242 }if–
nRód
>=0 ){

243  
SQLITE_IOERR_SHORT_READ
;

246  
SQLITE_IOERR_READ
;

247 
	}
}

252 
	$demoWrôe
(

253 
sqlôe3_fûe
 *
pFûe
,

254 c⁄° *
zBuf
,

255 
iAmt
,

256 
sqlôe_öt64
 
iOf°


258 
DemoFûe
 *
p
 = (DemoFûe*)
pFûe
;

260 if–
p
->
aBuf„r
 ){

261 *
z
 = (*)
zBuf
;

262 
n
 = 
iAmt
;

263 
sqlôe3_öt64
 
i
 = 
iOf°
;

265  
n
>0 ){

266 
nC›y
;

272 if–
p
->
nBuf„r
==
SQLITE_DEMOVFS_BUFFERSZ
 ||Ö->
iBuf„rOf°
+p->nBuf„r!=
i
 ){

273 
rc
 = 
	`demoFlushBuf„r
(
p
);

274 if–
rc
!=
SQLITE_OK
 ){

275  
rc
;

278 
	`as£π
–
p
->
nBuf„r
==0 ||Ö->
iBuf„rOf°
+p->nBuf„r==
i
 );

279 
p
->
iBuf„rOf°
 = 
i
 -Ö->
nBuf„r
;

282 
nC›y
 = 
SQLITE_DEMOVFS_BUFFERSZ
 - 
p
->
nBuf„r
;

283 if–
nC›y
>
n
 ){

284 
nC›y
 = 
n
;

286 
	`mem˝y
(&
p
->
aBuf„r
[p->
nBuf„r
], 
z
, 
nC›y
);

287 
p
->
nBuf„r
 +
nC›y
;

289 
n
 -
nC›y
;

290 
i
 +
nC›y
;

291 
z
 +
nC›y
;

294  
	`demoDúe˘Wrôe
(
p
, 
zBuf
, 
iAmt
, 
iOf°
);

297  
SQLITE_OK
;

298 
	}
}

304 
	$demoTrunˇã
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe_öt64
 
size
){

306 if–
	`·runˇã
(((
DemoFûe
 *)
pFûe
)->
fd
, 
size
ËË 
SQLITE_IOERR_TRUNCATE
;

308  
SQLITE_OK
;

309 
	}
}

314 
	$demoSync
(
sqlôe3_fûe
 *
pFûe
, 
Êags
){

315 
DemoFûe
 *
p
 = (DemoFûe*)
pFûe
;

316 
rc
;

318 
rc
 = 
	`demoFlushBuf„r
(
p
);

319 if–
rc
!=
SQLITE_OK
 ){

320  
rc
;

323 
rc
 = 
	`fsync
(
p
->
fd
);

324  (
rc
==0 ? 
SQLITE_OK
 : 
SQLITE_IOERR_FSYNC
);

325 
	}
}

330 
	$demoFûeSize
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe_öt64
 *
pSize
){

331 
DemoFûe
 *
p
 = (DemoFûe*)
pFûe
;

332 
rc
;

333 
°©
 
sSèt
;

340 
rc
 = 
	`demoFlushBuf„r
(
p
);

341 if–
rc
!=
SQLITE_OK
 ){

342  
rc
;

345 
rc
 = 
	`f°©
(
p
->
fd
, &
sSèt
);

346 if–
rc
!=0 )  
SQLITE_IOERR_FSTAT
;

347 *
pSize
 = 
sSèt
.
°_size
;

348  
SQLITE_OK
;

349 
	}
}

357 
	$demoLock
(
sqlôe3_fûe
 *
pFûe
, 
eLock
){

358  
SQLITE_OK
;

359 
	}
}

360 
	$demoU∆ock
(
sqlôe3_fûe
 *
pFûe
, 
eLock
){

361  
SQLITE_OK
;

362 
	}
}

363 
	$demoCheckRe£rvedLock
(
sqlôe3_fûe
 *
pFûe
, *
pResOut
){

364 *
pResOut
 = 0;

365  
SQLITE_OK
;

366 
	}
}

371 
	$demoFûeC⁄åﬁ
(
sqlôe3_fûe
 *
pFûe
, 
›
, *
pArg
){

372  
SQLITE_OK
;

373 
	}
}

380 
	$demoSe˘‹Size
(
sqlôe3_fûe
 *
pFûe
){

382 
	}
}

383 
	$demoDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
 *
pFûe
){

385 
	}
}

390 
	$demoO≥n
(

391 
sqlôe3_vfs
 *
pVfs
,

392 c⁄° *
zName
,

393 
sqlôe3_fûe
 *
pFûe
,

394 
Êags
,

395 *
pOutFœgs


397 c⁄° 
sqlôe3_io_mëhods
 
demoio
 = {

399 
demoClo£
,

400 
demoRód
,

401 
demoWrôe
,

402 
demoTrunˇã
,

403 
demoSync
,

404 
demoFûeSize
,

405 
demoLock
,

406 
demoU∆ock
,

407 
demoCheckRe£rvedLock
,

408 
demoFûeC⁄åﬁ
,

409 
demoSe˘‹Size
,

410 
demoDevi˚Ch¨a˘îi°ics


413 
DemoFûe
 *
p
 = (DemoFûe*)
pFûe
;

414 
oÊags
 = 0;

415 *
aBuf
 = 0;

417 if–
zName
==0 ){

418  
SQLITE_IOERR
;

421 if–
Êags
&
SQLITE_OPEN_MAIN_JOURNAL
 ){

422 
aBuf
 = (*)
	`sqlôe3_mÆloc
(
SQLITE_DEMOVFS_BUFFERSZ
);

423 if–!
aBuf
 ){

424  
SQLITE_NOMEM
;

428 if–
Êags
&
SQLITE_OPEN_EXCLUSIVE
 ) 
oÊags
 |
O_EXCL
;

429 if–
Êags
&
SQLITE_OPEN_CREATE
 ) 
oÊags
 |
O_CREAT
;

430 if–
Êags
&
SQLITE_OPEN_READONLY
 ) 
oÊags
 |
O_RDONLY
;

431 if–
Êags
&
SQLITE_OPEN_READWRITE
 ) 
oÊags
 |
O_RDWR
;

433 
	`mem£t
(
p
, 0, (
DemoFûe
));

434 
p
->
fd
 = 
	`›í
(
zName
, 
oÊags
, 0600);

435 if–
p
->
fd
<0 ){

436 
	`sqlôe3_‰ì
(
aBuf
);

437  
SQLITE_CANTOPEN
;

439 
p
->
aBuf„r
 = 
aBuf
;

441 if–
pOutFœgs
 ){

442 *
pOutFœgs
 = 
Êags
;

444 
p
->
ba£
.
pMëhods
 = &
demoio
;

445  
SQLITE_OK
;

446 
	}
}

453 
	$demoDñëe
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zP©h
, 
dúSync
){

454 
rc
;

456 
rc
 = 
	`u∆ök
(
zP©h
);

457 if–
rc
!=0 && 
î∫o
==
ENOENT
 )  
SQLITE_OK
;

459 if–
rc
==0 && 
dúSync
 ){

460 
dfd
;

461 
i
;

462 
zDú
[
MAXPATHNAME
+1];

465 
	`sqlôe3_¢¥ötf
(
MAXPATHNAME
, 
zDú
, "%s", 
zP©h
);

466 
zDú
[
MAXPATHNAME
] = '\0';

467 
i
=
	`°æí
(
zDú
); i>1 && zDir[i]!='/'; i++);

468 
zDú
[
i
] = '\0';

471 
dfd
 = 
	`›í
(
zDú
, 
O_RDONLY
, 0);

472 if–
dfd
<0 ){

473 
rc
 = -1;

475 
rc
 = 
	`fsync
(
dfd
);

476 
	`˛o£
(
dfd
);

479  (
rc
==0 ? 
SQLITE_OK
 : 
SQLITE_IOERR_DELETE
);

480 
	}
}

482 #i‚de‡
F_OK


483 
	#F_OK
 0

	)

485 #i‚de‡
R_OK


486 
	#R_OK
 4

	)

488 #i‚de‡
W_OK


489 
	#W_OK
 2

	)

496 
	$demoAc˚ss
(

497 
sqlôe3_vfs
 *
pVfs
,

498 c⁄° *
zP©h
,

499 
Êags
,

500 *
pResOut


502 
rc
;

503 
eAc˚ss
 = 
F_OK
;

505 
	`as£π
–
Êags
==
SQLITE_ACCESS_EXISTS


506 || 
Êags
==
SQLITE_ACCESS_READ


507 || 
Êags
==
SQLITE_ACCESS_READWRITE


510 if–
Êags
==
SQLITE_ACCESS_READWRITE
 ) 
eAc˚ss
 = 
R_OK
|
W_OK
;

511 if–
Êags
==
SQLITE_ACCESS_READ
 ) 
eAc˚ss
 = 
R_OK
;

513 
rc
 = 
	`ac˚ss
(
zP©h
, 
eAc˚ss
);

514 *
pResOut
 = (
rc
==0);

515  
SQLITE_OK
;

516 
	}
}

529 
	$demoFuŒP©h«me
(

530 
sqlôe3_vfs
 *
pVfs
,

531 c⁄° *
zP©h
,

532 
nP©hOut
,

533 *
zP©hOut


535 
zDú
[
MAXPATHNAME
+1];

536 if–
zP©h
[0]=='/' ){

537 
zDú
[0] = '\0';

539 if–
	`gëcwd
(
zDú
, (zDú))==0 )  
SQLITE_IOERR
;

541 
zDú
[
MAXPATHNAME
] = '\0';

543 
	`sqlôe3_¢¥ötf
(
nP©hOut
, 
zP©hOut
, "%s/%s", 
zDú
, 
zP©h
);

544 
zP©hOut
[
nP©hOut
-1] = '\0';

546  
SQLITE_OK
;

547 
	}
}

561 *
	$demoDlO≥n
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zP©h
){

563 
	}
}

564 
	$demoDlEº‹
(
sqlôe3_vfs
 *
pVfs
, 
nByã
, *
zEºMsg
){

565 
	`sqlôe3_¢¥ötf
(
nByã
, 
zEºMsg
, "LoadableÉxtensionsáreÇot supported");

566 
zEºMsg
[
nByã
-1] = '\0';

567 
	}
}

568 (*
	$demoDlSym
(
sqlôe3_vfs
 *
pVfs
, *
pH
, c⁄° *
z
))(){

570 
	}
}

571 
	$demoDlClo£
(
sqlôe3_vfs
 *
pVfs
, *
pH™dÀ
){

573 
	}
}

579 
	$demoR™dom√ss
(
sqlôe3_vfs
 *
pVfs
, 
nByã
, *
zByã
){

580  
SQLITE_OK
;

581 
	}
}

587 
	$demoSÀï
(
sqlôe3_vfs
 *
pVfs
, 
nMi¸o
){

588 
	`¶ìp
(
nMi¸o
 / 1000000);

589 
	`u¶ìp
(
nMi¸o
 % 1000000);

590  
nMi¸o
;

591 
	}
}

604 
	$demoCuºítTime
(
sqlôe3_vfs
 *
pVfs
, *
pTime
){

605 
time_t
 
t
 = 
	`time
(0);

606 *
pTime
 = 
t
/86400.0 + 2440587.5;

607  
SQLITE_OK
;

608 
	}
}

616 
sqlôe3_vfs
 *
	$sqlôe3_demovfs
(){

617 
sqlôe3_vfs
 
demovfs
 = {

619 (
DemoFûe
),

620 
MAXPATHNAME
,

624 
demoO≥n
,

625 
demoDñëe
,

626 
demoAc˚ss
,

627 
demoFuŒP©h«me
,

628 
demoDlO≥n
,

629 
demoDlEº‹
,

630 
demoDlSym
,

631 
demoDlClo£
,

632 
demoR™dom√ss
,

633 
demoSÀï
,

634 
demoCuºítTime
,

636  &
demovfs
;

637 
	}
}

642 #ifde‡
SQLITE_TEST


644 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

645 
	~"sqlôe_t˛.h
"

647 
	~"t˛.h
"

648 #i‚de‡
SQLITE_TCLAPI


649 
	#SQLITE_TCLAPI


	)

653 #i‡
SQLITE_OS_UNIX


654 
SQLITE_TCLAPI
 
	$ªgi°î_demovfs
(

655 
Clõ¡D©a
 
˛õ¡D©a
,

656 
T˛_I¡îp
 *
öãΩ
,

657 
objc
,

658 
T˛_Obj
 *
CONST
 
objv
[]

660 
	`sqlôe3_vfs_ªgi°î
(
	`sqlôe3_demovfs
(), 1);

661  
TCL_OK
;

662 
	}
}

663 
SQLITE_TCLAPI
 
	$uƒegi°î_demovfs
(

664 
Clõ¡D©a
 
˛õ¡D©a
,

665 
T˛_I¡îp
 *
öãΩ
,

666 
objc
,

667 
T˛_Obj
 *
CONST
 
objv
[]

669 
	`sqlôe3_vfs_uƒegi°î
(
	`sqlôe3_demovfs
());

670  
TCL_OK
;

671 
	}
}

676 
	$Sqlôëe°_demovfs_Inô
(
T˛_I¡îp
 *
öãΩ
){

677 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "ªgi°î_demovfs", 
ªgi°î_demovfs
, 0, 0);

678 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "uƒegi°î_demovfs", 
uƒegi°î_demovfs
, 0, 0);

679  
TCL_OK
;

680 
	}
}

683 
	$Sqlôëe°_demovfs_Inô
(
T˛_I¡îp
 *
öãΩ
){  
TCL_OK
; 
	}
}

	@test_devsym.c

17 #i‡
SQLITE_TEST


19 
	~"sqlôe3.h
"

20 
	~"sqlôeI¡.h
"

25 
	#DEVSYM_MAX_PATHNAME
 512

	)

30 
	#DEVSYM_VFS_NAME
 "devsym"

	)

32 
devsym_fûe
 
	tdevsym_fûe
;

33 
	sdevsym_fûe
 {

34 
sqlôe3_fûe
 
	mba£
;

35 
sqlôe3_fûe
 *
	mpRól
;

41 
devsymClo£
(
sqlôe3_fûe
*);

42 
devsymRód
(
sqlôe3_fûe
*, *, 
iAmt
, 
sqlôe3_öt64
 
iOf°
);

43 
devsymWrôe
(
sqlôe3_fûe
*,c⁄° *,
iAmt
, 
sqlôe3_öt64
 
iOf°
);

44 
devsymTrunˇã
(
sqlôe3_fûe
*, 
sqlôe3_öt64
 
size
);

45 
devsymSync
(
sqlôe3_fûe
*, 
Êags
);

46 
devsymFûeSize
(
sqlôe3_fûe
*, 
sqlôe3_öt64
 *
pSize
);

47 
devsymLock
(
sqlôe3_fûe
*, );

48 
devsymU∆ock
(
sqlôe3_fûe
*, );

49 
devsymCheckRe£rvedLock
(
sqlôe3_fûe
*, *);

50 
devsymFûeC⁄åﬁ
(
sqlôe3_fûe
*, 
›
, *
pArg
);

51 
devsymSe˘‹Size
(
sqlôe3_fûe
*);

52 
devsymDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
*);

53 
devsymShmLock
(
sqlôe3_fûe
*,,,);

54 
devsymShmM≠
(
sqlôe3_fûe
*,,,, volatile **);

55 
devsymShmB¨rõr
(
sqlôe3_fûe
*);

56 
devsymShmUnm≠
(
sqlôe3_fûe
*,);

61 
devsymO≥n
(
sqlôe3_vfs
*, c⁄° *, 
sqlôe3_fûe
*, , *);

62 
devsymDñëe
(
sqlôe3_vfs
*, c⁄° *
zName
, 
syncDú
);

63 
devsymAc˚ss
(
sqlôe3_vfs
*, c⁄° *
zName
, 
Êags
, *);

64 
devsymFuŒP©h«me
(
sqlôe3_vfs
*, c⁄° *
zName
, , *
zOut
);

65 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


66 *
devsymDlO≥n
(
sqlôe3_vfs
*, c⁄° *
zFûíame
);

67 
devsymDlEº‹
(
sqlôe3_vfs
*, 
nByã
, *
zEºMsg
);

68 (*
	$devsymDlSym
(
sqlôe3_vfs
*,*, c⁄° *
zSymbﬁ
))();

69 
	`devsymDlClo£
(
sqlôe3_vfs
*, *);

71 
	`devsymR™dom√ss
(
sqlôe3_vfs
*, 
nByã
, *
zOut
);

72 
	`devsymSÀï
(
sqlôe3_vfs
*, 
mi¸o£c⁄ds
);

73 
	`devsymCuºítTime
(
sqlôe3_vfs
*, *);

75 
sqlôe3_vfs
 
devsym_vfs
 = {

77 (
devsym_fûe
),

78 
DEVSYM_MAX_PATHNAME
,

80 
DEVSYM_VFS_NAME
,

82 
devsymO≥n
,

83 
devsymDñëe
,

84 
devsymAc˚ss
,

85 
devsymFuŒP©h«me
,

86 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


87 
devsymDlO≥n
,

88 
devsymDlEº‹
,

89 
devsymDlSym
,

90 
devsymDlClo£
,

97 
devsymR™dom√ss
,

98 
devsymSÀï
,

99 
devsymCuºítTime
,

102 
	}
};

104 
sqlôe3_io_mëhods
 
	gdevsym_io_mëhods
 = {

106 
devsymClo£
,

107 
devsymRód
,

108 
devsymWrôe
,

109 
devsymTrunˇã
,

110 
devsymSync
,

111 
devsymFûeSize
,

112 
devsymLock
,

113 
devsymU∆ock
,

114 
devsymCheckRe£rvedLock
,

115 
devsymFûeC⁄åﬁ
,

116 
devsymSe˘‹Size
,

117 
devsymDevi˚Ch¨a˘îi°ics
,

118 
devsymShmM≠
,

119 
devsymShmLock
,

120 
devsymShmB¨rõr
,

121 
devsymShmUnm≠


124 
	sDevsymGlobÆ
 {

125 
sqlôe3_vfs
 *
	mpVfs
;

126 
	miDevi˚Ch¨
;

127 
	miSe˘‹Size
;

129 
DevsymGlobÆ
 
	gg
 = {0, 0, 512};

134 
	$devsymClo£
(
sqlôe3_fûe
 *
pFûe
){

135 
devsym_fûe
 *
p
 = (devsym_fûê*)
pFûe
;

136 
	`sqlôe3OsClo£
(
p
->
pRól
);

137  
SQLITE_OK
;

138 
	}
}

143 
	$devsymRód
(

144 
sqlôe3_fûe
 *
pFûe
,

145 *
zBuf
,

146 
iAmt
,

147 
sqlôe_öt64
 
iOf°


149 
devsym_fûe
 *
p
 = (devsym_fûê*)
pFûe
;

150  
	`sqlôe3OsRód
(
p
->
pRól
, 
zBuf
, 
iAmt
, 
iOf°
);

151 
	}
}

156 
	$devsymWrôe
(

157 
sqlôe3_fûe
 *
pFûe
,

158 c⁄° *
zBuf
,

159 
iAmt
,

160 
sqlôe_öt64
 
iOf°


162 
devsym_fûe
 *
p
 = (devsym_fûê*)
pFûe
;

163  
	`sqlôe3OsWrôe
(
p
->
pRól
, 
zBuf
, 
iAmt
, 
iOf°
);

164 
	}
}

169 
	$devsymTrunˇã
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe_öt64
 
size
){

170 
devsym_fûe
 *
p
 = (devsym_fûê*)
pFûe
;

171  
	`sqlôe3OsTrunˇã
(
p
->
pRól
, 
size
);

172 
	}
}

177 
	$devsymSync
(
sqlôe3_fûe
 *
pFûe
, 
Êags
){

178 
devsym_fûe
 *
p
 = (devsym_fûê*)
pFûe
;

179  
	`sqlôe3OsSync
(
p
->
pRól
, 
Êags
);

180 
	}
}

185 
	$devsymFûeSize
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe_öt64
 *
pSize
){

186 
devsym_fûe
 *
p
 = (devsym_fûê*)
pFûe
;

187  
	`sqlôe3OsFûeSize
(
p
->
pRól
, 
pSize
);

188 
	}
}

193 
	$devsymLock
(
sqlôe3_fûe
 *
pFûe
, 
eLock
){

194 
devsym_fûe
 *
p
 = (devsym_fûê*)
pFûe
;

195  
	`sqlôe3OsLock
(
p
->
pRól
, 
eLock
);

196 
	}
}

201 
	$devsymU∆ock
(
sqlôe3_fûe
 *
pFûe
, 
eLock
){

202 
devsym_fûe
 *
p
 = (devsym_fûê*)
pFûe
;

203  
	`sqlôe3OsU∆ock
(
p
->
pRól
, 
eLock
);

204 
	}
}

209 
	$devsymCheckRe£rvedLock
(
sqlôe3_fûe
 *
pFûe
, *
pResOut
){

210 
devsym_fûe
 *
p
 = (devsym_fûê*)
pFûe
;

211  
	`sqlôe3OsCheckRe£rvedLock
(
p
->
pRól
, 
pResOut
);

212 
	}
}

217 
	$devsymFûeC⁄åﬁ
(
sqlôe3_fûe
 *
pFûe
, 
›
, *
pArg
){

218 
devsym_fûe
 *
p
 = (devsym_fûê*)
pFûe
;

219  
	`sqlôe3OsFûeC⁄åﬁ
(
p
->
pRól
, 
›
, 
pArg
);

220 
	}
}

225 
	$devsymSe˘‹Size
(
sqlôe3_fûe
 *
pFûe
){

226  
g
.
iSe˘‹Size
;

227 
	}
}

232 
	$devsymDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
 *
pFûe
){

233  
g
.
iDevi˚Ch¨
;

234 
	}
}

239 
	$devsymShmLock
(
sqlôe3_fûe
 *
pFûe
, 
of°
, 
n
, 
Êags
){

240 
devsym_fûe
 *
p
 = (devsym_fûê*)
pFûe
;

241  
	`sqlôe3OsShmLock
(
p
->
pRól
, 
of°
, 
n
, 
Êags
);

242 
	}
}

243 
	$devsymShmM≠
(

244 
sqlôe3_fûe
 *
pFûe
,

245 
iRegi⁄
,

246 
szRegi⁄
,

247 
isWrôe
,

248 vﬁ©ûê**
µ


250 
devsym_fûe
 *
p
 = (devsym_fûê*)
pFûe
;

251  
	`sqlôe3OsShmM≠
(
p
->
pRól
, 
iRegi⁄
, 
szRegi⁄
, 
isWrôe
, 
µ
);

252 
	}
}

253 
	$devsymShmB¨rõr
(
sqlôe3_fûe
 *
pFûe
){

254 
devsym_fûe
 *
p
 = (devsym_fûê*)
pFûe
;

255 
	`sqlôe3OsShmB¨rõr
(
p
->
pRól
);

256 
	}
}

257 
	$devsymShmUnm≠
(
sqlôe3_fûe
 *
pFûe
, 
dñFœg
){

258 
devsym_fûe
 *
p
 = (devsym_fûê*)
pFûe
;

259  
	`sqlôe3OsShmUnm≠
(
p
->
pRól
, 
dñFœg
);

260 
	}
}

267 
	$devsymO≥n
(

268 
sqlôe3_vfs
 *
pVfs
,

269 c⁄° *
zName
,

270 
sqlôe3_fûe
 *
pFûe
,

271 
Êags
,

272 *
pOutFœgs


274 
rc
;

275 
devsym_fûe
 *
p
 = (devsym_fûê*)
pFûe
;

276 
p
->
pRól
 = (
sqlôe3_fûe
 *)&p[1];

277 
rc
 = 
	`sqlôe3OsO≥n
(
g
.
pVfs
, 
zName
, 
p
->
pRól
, 
Êags
, 
pOutFœgs
);

278 if–
p
->
pRól
->
pMëhods
 ){

279 
pFûe
->
pMëhods
 = &
devsym_io_mëhods
;

281  
rc
;

282 
	}
}

289 
	$devsymDñëe
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zP©h
, 
dúSync
){

290  
	`sqlôe3OsDñëe
(
g
.
pVfs
, 
zP©h
, 
dúSync
);

291 
	}
}

297 
	$devsymAc˚ss
(

298 
sqlôe3_vfs
 *
pVfs
,

299 c⁄° *
zP©h
,

300 
Êags
,

301 *
pResOut


303  
	`sqlôe3OsAc˚ss
(
g
.
pVfs
, 
zP©h
, 
Êags
, 
pResOut
);

304 
	}
}

311 
	$devsymFuŒP©h«me
(

312 
sqlôe3_vfs
 *
pVfs
,

313 c⁄° *
zP©h
,

314 
nOut
,

315 *
zOut


317  
	`sqlôe3OsFuŒP©h«me
(
g
.
pVfs
, 
zP©h
, 
nOut
, 
zOut
);

318 
	}
}

320 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


324 *
	$devsymDlO≥n
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zP©h
){

325  
	`sqlôe3OsDlO≥n
(
g
.
pVfs
, 
zP©h
);

326 
	}
}

333 
	$devsymDlEº‹
(
sqlôe3_vfs
 *
pVfs
, 
nByã
, *
zEºMsg
){

334 
	`sqlôe3OsDlEº‹
(
g
.
pVfs
, 
nByã
, 
zEºMsg
);

335 
	}
}

340 (*
	$devsymDlSym
(
sqlôe3_vfs
 *
pVfs
, *
p
, c⁄° *
zSym
))(){

341  
	`sqlôe3OsDlSym
(
g
.
pVfs
, 
p
, 
zSym
);

342 
	}
}

347 
	$devsymDlClo£
(
sqlôe3_vfs
 *
pVfs
, *
pH™dÀ
){

348 
	`sqlôe3OsDlClo£
(
g
.
pVfs
, 
pH™dÀ
);

349 
	}
}

356 
	$devsymR™dom√ss
(
sqlôe3_vfs
 *
pVfs
, 
nByã
, *
zBufOut
){

357  
	`sqlôe3OsR™dom√ss
(
g
.
pVfs
, 
nByã
, 
zBufOut
);

358 
	}
}

364 
	$devsymSÀï
(
sqlôe3_vfs
 *
pVfs
, 
nMi¸o
){

365  
	`sqlôe3OsSÀï
(
g
.
pVfs
, 
nMi¸o
);

366 
	}
}

371 
	$devsymCuºítTime
(
sqlôe3_vfs
 *
pVfs
, *
pTimeOut
){

372  
g
.
pVfs
->
	`xCuºítTime
(g.pVfs, 
pTimeOut
);

373 
	}
}

381 
	$devsym_ªgi°î
(
iDevi˚Ch¨
, 
iSe˘‹Size
){

382 if–
g
.
pVfs
==0 ){

383 
g
.
pVfs
 = 
	`sqlôe3_vfs_föd
(0);

384 
devsym_vfs
.
szOsFûe
 +
g
.
pVfs
->szOsFile;

385 
	`sqlôe3_vfs_ªgi°î
(&
devsym_vfs
, 0);

387 if–
iDevi˚Ch¨
>=0 ){

388 
g
.
iDevi˚Ch¨
 = iDeviceChar;

390 
g
.
iDevi˚Ch¨
 = 0;

392 if–
iSe˘‹Size
>=0 ){

393 
g
.
iSe˘‹Size
 = iSectorSize;

395 
g
.
iSe˘‹Size
 = 512;

397 
	}
}

399 
	$devsym_uƒegi°î
(){

400 
	`sqlôe3_vfs_uƒegi°î
(&
devsym_vfs
);

401 
g
.
pVfs
 = 0;

402 
g
.
iDevi˚Ch¨
 = 0;

403 
g
.
iSe˘‹Size
 = 0;

404 
	}
}

	@test_fs.c

64 
	~"sqlôeI¡.h
"

65 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

66 
	~"sqlôe_t˛.h
"

68 
	~"t˛.h
"

71 
	~<°dlib.h
>

72 
	~<°rög.h
>

73 
	~<sys/ty≥s.h
>

74 
	~<sys/°©.h
>

75 
	~<f˙é.h
>

77 #i‡
SQLITE_OS_UNIX
 || 
deföed
(
__MINGW_H
)

78 
	~<uni°d.h
>

79 
	~<dúít.h
>

80 #i‚de‡
DIRENT


81 
	#DIRENT
 
dúít


	)

84 #i‡
SQLITE_OS_WIN


85 
	~<io.h
>

86 #i‡!
deföed
(
__MINGW_H
)

87 
	~"ã°_wödúít.h
"

89 #i‚de‡
S_ISREG


90 
	#S_ISREG
(
mode
Ë(((modeË& 
S_IFMT
Ë=
S_IFREG
)

	)

94 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


96 
fs_vèb
 
	tfs_vèb
;

97 
fs_curs‹
 
	tfs_curs‹
;

102 
	sfs_vèb
 {

103 
sqlôe3_vèb
 
	mba£
;

104 
sqlôe3
 *
	mdb
;

105 *
	mzDb
;

106 *
	mzTbl
;

110 
	sfs_curs‹
 {

111 
sqlôe3_vèb_curs‹
 
	mba£
;

112 
sqlôe3_°mt
 *
	mpStmt
;

113 *
	mzBuf
;

114 
	mnBuf
;

115 
	mnAŒoc
;

121 
FsdúVèb
 
	tFsdúVèb
;

122 
FsdúC§
 
	tFsdúC§
;

123 
	sFsdúVèb
 {

124 
sqlôe3_vèb
 
	mba£
;

127 
	sFsdúC§
 {

128 
sqlôe3_vèb_curs‹
 
	mba£
;

129 *
	mzDú
;

130 
DIR
 *
	mpDú
;

131 
sqlôe3_öt64
 
	miRowid
;

132 
DIRENT
 
	míåy
;

146 
	$fsdúC⁄√˘
(

147 
sqlôe3
 *
db
,

148 *
pAux
,

149 
¨gc
, c⁄° *c⁄°*
¨gv
,

150 
sqlôe3_vèb
 **
µVèb
,

151 **
pzEº


153 
FsdúVèb
 *
pTab
;

155 if–
¨gc
!=3 ){

156 *
pzEº
 = 
	`sqlôe3_m¥ötf
("wrongÇumber ofárguments");

157  
SQLITE_ERROR
;

160 
pTab
 = (
FsdúVèb
 *)
	`sqlôe3_mÆloc
((FsdirVtab));

161 if–!
pTab
 )  
SQLITE_NOMEM
;

162 
	`mem£t
(
pTab
, 0, (
FsdúVèb
));

164 *
µVèb
 = &
pTab
->
ba£
;

165 
	`sqlôe3_de˛¨e_vèb
(
db
, "CREATE TABLE xyz(dir,Çame);");

167  
SQLITE_OK
;

168 
	}
}

173 
	$fsdúDisc⁄√˘
(
sqlôe3_vèb
 *
pVèb
){

174 
	`sqlôe3_‰ì
(
pVèb
);

175  
SQLITE_OK
;

176 
	}
}

183 
	$fsdúBe°Index
(
sqlôe3_vèb
 *
èb
, 
sqlôe3_ödex_öfo
 *
pIdxInfo
){

184 
ii
;

186 
pIdxInfo
->
e°im©edCo°
 = 1000000000.0;

188 
ii
=0; ii<
pIdxInfo
->
nC⁄°øöt
; ii++){

189 
sqlôe3_ödex_c⁄°øöt
 c⁄° *
p
 = &
pIdxInfo
->
aC⁄°øöt
[
ii
];

190 if–
p
->
iCﬁumn
==0 &&Ö->
ußbÀ
 &&Ö->
›
==
SQLITE_INDEX_CONSTRAINT_EQ
 ){

191 
sqlôe3_ödex_c⁄°øöt_ußge
 *
pUßge
;

192 
pUßge
 = &
pIdxInfo
->
aC⁄°øötUßge
[
ii
];

193 
pUßge
->
omô
 = 1;

194 
pUßge
->
¨gvIndex
 = 1;

195 
pIdxInfo
->
idxNum
 = 1;

196 
pIdxInfo
->
e°im©edCo°
 = 1.0;

201  
SQLITE_OK
;

202 
	}
}

209 
	$fsdúO≥n
(
sqlôe3_vèb
 *
pVTab
, 
sqlôe3_vèb_curs‹
 **
µCurs‹
){

210 
FsdúC§
 *
pCur
;

214 
pCur
 = (
FsdúC§
*)
	`sqlôe3_mÆloc
((FsdirCsr)+256);

215 if–
pCur
==0 )  
SQLITE_NOMEM
;

216 
	`mem£t
(
pCur
, 0, (
FsdúC§
));

217 *
µCurs‹
 = &
pCur
->
ba£
;

218  
SQLITE_OK
;

219 
	}
}

224 
	$fsdúClo£
(
sqlôe3_vèb_curs‹
 *
cur
){

225 
FsdúC§
 *
pCur
 = (FsdúC§*)
cur
;

226 if–
pCur
->
pDú
 ) 
	`˛o£dú
(pCur->pDir);

227 
	`sqlôe3_‰ì
(
pCur
->
zDú
);

228 
	`sqlôe3_‰ì
(
pCur
);

229  
SQLITE_OK
;

230 
	}
}

235 
	$fsdúNext
(
sqlôe3_vèb_curs‹
 *
cur
){

236 
FsdúC§
 *
pC§
 = (FsdúC§*)
cur
;

238 if–
pC§
->
pDú
 ){

239 
DIRENT
 *
pRes
 = 0;

240 #i‡
	`deföed
(
__MINGW_H
)

241 
pRes
 = 
	`ªaddú
(
pC§
->
pDú
);

242 if–
pRes
!=0 ){

243 
	`mem˝y
(&
pC§
->
íåy
, 
pRes
, (
DIRENT
));

246 
	`ªaddú_r
(
pC§
->
pDú
, &pC§->
íåy
, &
pRes
);

248 if–
pRes
==0 ){

249 
	`˛o£dú
(
pC§
->
pDú
);

250 
pC§
->
pDú
 = 0;

252 
pC§
->
iRowid
++;

255  
SQLITE_OK
;

256 
	}
}

261 
	$fsdúFûãr
(

262 
sqlôe3_vèb_curs‹
 *
pVèbCurs‹
,

263 
idxNum
, c⁄° *
idxSå
,

264 
¨gc
, 
sqlôe3_vÆue
 **
¨gv


266 
FsdúC§
 *
pC§
 = (FsdúC§*)
pVèbCurs‹
;

267 c⁄° *
zDú
;

268 
nDú
;

271 if–
idxNum
!=1 || 
¨gc
!=1 ){

272  
SQLITE_ERROR
;

275 
pC§
->
iRowid
 = 0;

276 
	`sqlôe3_‰ì
(
pC§
->
zDú
);

277 if–
pC§
->
pDú
 ){

278 
	`˛o£dú
(
pC§
->
pDú
);

279 
pC§
->
pDú
 = 0;

282 
zDú
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

283 
nDú
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[0]);

284 
pC§
->
zDú
 = 
	`sqlôe3_mÆloc
(
nDú
+1);

285 if–
pC§
->
zDú
==0 )  
SQLITE_NOMEM
;

286 
	`mem˝y
(
pC§
->
zDú
, zDú, 
nDú
+1);

288 
pC§
->
pDú
 = 
	`›ídú
’C§->
zDú
);

289  
	`fsdúNext
(
pVèbCurs‹
);

290 
	}
}

295 
	$fsdúEof
(
sqlôe3_vèb_curs‹
 *
cur
){

296 
FsdúC§
 *
pC§
 = (FsdúC§*)
cur
;

297  
pC§
->
pDú
==0;

298 
	}
}

303 
	$fsdúCﬁumn
(
sqlôe3_vèb_curs‹
 *
cur
, 
sqlôe3_c⁄ãxt
 *
˘x
, 
i
){

304 
FsdúC§
 *
pC§
 = (FsdúC§*)
cur
;

305  
i
 ){

307 
	`sqlôe3_ªsu…_ãxt
(
˘x
, 
pC§
->
zDú
, -1, 
SQLITE_STATIC
);

311 
	`sqlôe3_ªsu…_ãxt
(
˘x
, 
pC§
->
íåy
.
d_«me
, -1, 
SQLITE_TRANSIENT
);

315 
	`as£π
( 0 );

318  
SQLITE_OK
;

319 
	}
}

324 
	$fsdúRowid
(
sqlôe3_vèb_curs‹
 *
cur
, 
sqlôe_öt64
 *
pRowid
){

325 
FsdúC§
 *
pC§
 = (FsdúC§*)
cur
;

326 *
pRowid
 = 
pC§
->
iRowid
;

327  
SQLITE_OK
;

328 
	}
}

336 
F°ªeVèb
 
	tF°ªeVèb
;

337 
F°ªeC§
 
	tF°ªeC§
;

338 
	sF°ªeVèb
 {

339 
sqlôe3_vèb
 
	mba£
;

340 
sqlôe3
 *
	mdb
;

343 
	sF°ªeC§
 {

344 
sqlôe3_vèb_curs‹
 
	mba£
;

345 
sqlôe3_°mt
 *
	mpStmt
;

346 
	mfd
;

360 
	$f°ªeC⁄√˘
(

361 
sqlôe3
 *
db
,

362 *
pAux
,

363 
¨gc
, c⁄° *c⁄°*
¨gv
,

364 
sqlôe3_vèb
 **
µVèb
,

365 **
pzEº


367 
F°ªeVèb
 *
pTab
;

369 if–
¨gc
!=3 ){

370 *
pzEº
 = 
	`sqlôe3_m¥ötf
("wrongÇumber ofárguments");

371  
SQLITE_ERROR
;

374 
pTab
 = (
F°ªeVèb
 *)
	`sqlôe3_mÆloc
((FstreeVtab));

375 if–!
pTab
 )  
SQLITE_NOMEM
;

376 
	`mem£t
(
pTab
, 0, (
F°ªeVèb
));

377 
pTab
->
db
 = db;

379 *
µVèb
 = &
pTab
->
ba£
;

380 
	`sqlôe3_de˛¨e_vèb
(
db
, "CREATE TABLE xyz(path, size, data);");

382  
SQLITE_OK
;

383 
	}
}

388 
	$f°ªeDisc⁄√˘
(
sqlôe3_vèb
 *
pVèb
){

389 
	`sqlôe3_‰ì
(
pVèb
);

390  
SQLITE_OK
;

391 
	}
}

398 
	$f°ªeBe°Index
(
sqlôe3_vèb
 *
èb
, 
sqlôe3_ödex_öfo
 *
pIdxInfo
){

399 
ii
;

401 
ii
=0; ii<
pIdxInfo
->
nC⁄°øöt
; ii++){

402 
sqlôe3_ödex_c⁄°øöt
 c⁄° *
p
 = &
pIdxInfo
->
aC⁄°øöt
[
ii
];

403 if–
p
->
iCﬁumn
==0 &&Ö->
ußbÀ
 && (

404 
p
->
›
==
SQLITE_INDEX_CONSTRAINT_GLOB


405 || 
p
->
›
==
SQLITE_INDEX_CONSTRAINT_LIKE


406 || 
p
->
›
==
SQLITE_INDEX_CONSTRAINT_EQ


408 
sqlôe3_ödex_c⁄°øöt_ußge
 *
pUßge
;

409 
pUßge
 = &
pIdxInfo
->
aC⁄°øötUßge
[
ii
];

410 
pIdxInfo
->
idxNum
 = 
p
->
›
;

411 
pUßge
->
¨gvIndex
 = 1;

412 
pIdxInfo
->
e°im©edCo°
 = 100000.0;

413  
SQLITE_OK
;

417 
pIdxInfo
->
e°im©edCo°
 = 1000000000.0;

418  
SQLITE_OK
;

419 
	}
}

426 
	$f°ªeO≥n
(
sqlôe3_vèb
 *
pVTab
, 
sqlôe3_vèb_curs‹
 **
µCurs‹
){

427 
F°ªeC§
 *
pCur
;

428 
pCur
 = (
F°ªeC§
*)
	`sqlôe3_mÆloc
((FstreeCsr));

429 if–
pCur
==0 )  
SQLITE_NOMEM
;

430 
	`mem£t
(
pCur
, 0, (
F°ªeC§
));

431 
pCur
->
fd
 = -1;

432 *
µCurs‹
 = &
pCur
->
ba£
;

433  
SQLITE_OK
;

434 
	}
}

436 
	$f°ªeClo£Fd
(
F°ªeC§
 *
pC§
){

437 if–
pC§
->
fd
>=0 ){

438 
	`˛o£
(
pC§
->
fd
);

439 
pC§
->
fd
 = -1;

441 
	}
}

446 
	$f°ªeClo£
(
sqlôe3_vèb_curs‹
 *
cur
){

447 
F°ªeC§
 *
pC§
 = (F°ªeC§*)
cur
;

448 
	`sqlôe3_föÆize
(
pC§
->
pStmt
);

449 
	`f°ªeClo£Fd
(
pC§
);

450 
	`sqlôe3_‰ì
(
pC§
);

451  
SQLITE_OK
;

452 
	}
}

457 
	$f°ªeNext
(
sqlôe3_vèb_curs‹
 *
cur
){

458 
F°ªeC§
 *
pC§
 = (F°ªeC§*)
cur
;

459 
rc
;

461 
	`f°ªeClo£Fd
(
pC§
);

462 
rc
 = 
	`sqlôe3_°ï
(
pC§
->
pStmt
);

463 if–
rc
!=
SQLITE_ROW
 ){

464 
rc
 = 
	`sqlôe3_föÆize
(
pC§
->
pStmt
);

465 
pC§
->
pStmt
 = 0;

467 
rc
 = 
SQLITE_OK
;

468 
pC§
->
fd
 = 
	`›í
((c⁄° *)
	`sqlôe3_cﬁumn_ãxt
’C§->
pStmt
, 0), 
O_RDONLY
);

471  
rc
;

472 
	}
}

477 
	$f°ªeFûãr
(

478 
sqlôe3_vèb_curs‹
 *
pVèbCurs‹
,

479 
idxNum
, c⁄° *
idxSå
,

480 
¨gc
, 
sqlôe3_vÆue
 **
¨gv


482 
F°ªeC§
 *
pC§
 = (F°ªeC§*)
pVèbCurs‹
;

483 
F°ªeVèb
 *
pTab
 = (F°ªeVèb*)(
pC§
->
ba£
.
pVèb
);

484 
rc
;

485 c⁄° *
zSql
 =

493 *
zRoŸ
;

494 
nRoŸ
;

495 *
zPªfix
;

496 
nPªfix
;

497 c⁄° *
zDú
;

498 
nDú
;

499 
aWûd
[2] = { '\0', '\0' };

501 #i‡
SQLITE_OS_WIN


502 c⁄° *
zDrive
 = 
	`wödúít_gëív
("fstreeDrive");

503 if–
zDrive
==0 ){

504 
zDrive
 = 
	`wödúít_gëív
("SystemDrive");

506 
zRoŸ
 = 
	`sqlôe3_m¥ötf
("%s%c", 
zDrive
, '/');

507 
nRoŸ
 = 
	`sqlôe3SåÀn30
(
zRoŸ
);

508 
zPªfix
 = 
	`sqlôe3_m¥ötf
("%s", 
zDrive
);

509 
nPªfix
 = 
	`sqlôe3SåÀn30
(
zPªfix
);

511 
zRoŸ
 = "/";

512 
nRoŸ
 = 1;

513 
zPªfix
 = "";

514 
nPªfix
 = 0;

517 
zDú
 = 
zRoŸ
;

518 
nDú
 = 
nRoŸ
;

520 
	`f°ªeClo£Fd
(
pC§
);

521 
	`sqlôe3_föÆize
(
pC§
->
pStmt
);

522 
pC§
->
pStmt
 = 0;

523 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
pTab
->
db
, 
zSql
, -1, &
pC§
->
pStmt
, 0);

524 if–
rc
!=
SQLITE_OK
 ) Ñc;

526 if–
idxNum
 ){

527 c⁄° *
zQuîy
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

528  
idxNum
 ){

529 
SQLITE_INDEX_CONSTRAINT_GLOB
:

530 
aWûd
[0] = '*';

531 
aWûd
[1] = '?';

533 
SQLITE_INDEX_CONSTRAINT_LIKE
:

534 
aWûd
[0] = '_';

535 
aWûd
[1] = '%';

539 if–
	`sqlôe3_°∫icmp
(
zQuîy
, 
zPªfix
, 
nPªfix
)==0 ){

540 
i
;

541 
i
=
nPªfix
; 
zQuîy
[i]; i++){

542 if–
zQuîy
[
i
]==
aWûd
[0] || zQuery[i]==aWild[1] ) ;

543 if–
zQuîy
[
i
]=='/' ) 
nDú
 = i;

545 
zDú
 = 
zQuîy
;

549 
	`sqlôe3_böd_ãxt
(
pC§
->
pStmt
, 1, 
zDú
, 
nDú
, 
SQLITE_TRANSIENT
);

550 
	`sqlôe3_böd_ãxt
(
pC§
->
pStmt
, 2, 
zRoŸ
, 
nRoŸ
, 
SQLITE_TRANSIENT
);

551 
	`sqlôe3_böd_ãxt
(
pC§
->
pStmt
, 3, 
zPªfix
, 
nPªfix
, 
SQLITE_TRANSIENT
);

553 #i‡
SQLITE_OS_WIN


554 
	`sqlôe3_‰ì
(
zPªfix
);

555 
	`sqlôe3_‰ì
(
zRoŸ
);

558  
	`f°ªeNext
(
pVèbCurs‹
);

559 
	}
}

564 
	$f°ªeEof
(
sqlôe3_vèb_curs‹
 *
cur
){

565 
F°ªeC§
 *
pC§
 = (F°ªeC§*)
cur
;

566  
pC§
->
pStmt
==0;

567 
	}
}

572 
	$f°ªeCﬁumn
(
sqlôe3_vèb_curs‹
 *
cur
, 
sqlôe3_c⁄ãxt
 *
˘x
, 
i
){

573 
F°ªeC§
 *
pC§
 = (F°ªeC§*)
cur
;

574 if–
i
==0 ){

575 
	`sqlôe3_ªsu…_vÆue
(
˘x
, 
	`sqlôe3_cﬁumn_vÆue
(
pC§
->
pStmt
, 0));

577 
°©
 
sBuf
;

578 
	`f°©
(
pC§
->
fd
, &
sBuf
);

580 if–
	`S_ISREG
(
sBuf
.
°_mode
) ){

581 if–
i
==1 ){

582 
	`sqlôe3_ªsu…_öt64
(
˘x
, 
sBuf
.
°_size
);

584 
nRód
;

585 *
aBuf
 = 
	`sqlôe3_mÆloc
(
sBuf
.
°_mode
+1);

586 if–!
aBuf
 )  
SQLITE_NOMEM
;

587 
nRód
 = 
	`ªad
(
pC§
->
fd
, 
aBuf
, 
sBuf
.
°_mode
);

588 if–
nRód
!=
sBuf
.
°_mode
 ){

589  
SQLITE_IOERR
;

591 
	`sqlôe3_ªsu…_blob
(
˘x
, 
aBuf
, 
nRód
, 
SQLITE_TRANSIENT
);

592 
	`sqlôe3_‰ì
(
aBuf
);

597  
SQLITE_OK
;

598 
	}
}

603 
	$f°ªeRowid
(
sqlôe3_vèb_curs‹
 *
cur
, 
sqlôe_öt64
 *
pRowid
){

604 *
pRowid
 = 0;

605  
SQLITE_OK
;

606 
	}
}

625 
	$fsC⁄√˘
(

626 
sqlôe3
 *
db
,

627 *
pAux
,

628 
¨gc
, c⁄° *c⁄°*
¨gv
,

629 
sqlôe3_vèb
 **
µVèb
,

630 **
pzEº


632 
fs_vèb
 *
pVèb
;

633 
nByã
;

634 c⁄° *
zTbl
;

635 c⁄° *
zDb
 = 
¨gv
[1];

637 if–
¨gc
!=4 ){

638 *
pzEº
 = 
	`sqlôe3_m¥ötf
("wrongÇumber ofárguments");

639  
SQLITE_ERROR
;

641 
zTbl
 = 
¨gv
[3];

643 
nByã
 = (
fs_vèb
Ë+ ()
	`°æí
(
zTbl
Ë+ 1 + ()°æí(
zDb
) + 1;

644 
pVèb
 = (
fs_vèb
 *)
	`sqlôe3MÆlocZîo
–
nByã
 );

645 if–!
pVèb
 )  
SQLITE_NOMEM
;

647 
pVèb
->
zTbl
 = (*)&pVtab[1];

648 
pVèb
->
zDb
 = &pVèb->
zTbl
[
	`°æí
(zTbl)+1];

649 
pVèb
->
db
 = db;

650 
	`mem˝y
(
pVèb
->
zTbl
, zTbl, 
	`°æí
(zTbl));

651 
	`mem˝y
(
pVèb
->
zDb
, zDb, 
	`°æí
(zDb));

652 *
µVèb
 = &
pVèb
->
ba£
;

653 
	`sqlôe3_de˛¨e_vèb
(
db
, "CREATE TABLE x(path TEXT, data TEXT)");

655  
SQLITE_OK
;

656 
	}
}

660 
	$fsDisc⁄√˘
(
sqlôe3_vèb
 *
pVèb
){

661 
	`sqlôe3_‰ì
(
pVèb
);

662  
SQLITE_OK
;

663 
	}
}

669 
	$fsO≥n
(
sqlôe3_vèb
 *
pVTab
, 
sqlôe3_vèb_curs‹
 **
µCurs‹
){

670 
fs_curs‹
 *
pCur
;

671 
pCur
 = 
	`sqlôe3MÆlocZîo
((
fs_curs‹
));

672 *
µCurs‹
 = &
pCur
->
ba£
;

673  
SQLITE_OK
;

674 
	}
}

679 
	$fsClo£
(
sqlôe3_vèb_curs‹
 *
cur
){

680 
fs_curs‹
 *
pCur
 = (fs_curs‹ *)
cur
;

681 
	`sqlôe3_föÆize
(
pCur
->
pStmt
);

682 
	`sqlôe3_‰ì
(
pCur
->
zBuf
);

683 
	`sqlôe3_‰ì
(
pCur
);

684  
SQLITE_OK
;

685 
	}
}

687 
	$fsNext
(
sqlôe3_vèb_curs‹
 *
cur
){

688 
fs_curs‹
 *
pCur
 = (fs_curs‹ *)
cur
;

689 
rc
;

691 
rc
 = 
	`sqlôe3_°ï
(
pCur
->
pStmt
);

692 if–
rc
==
SQLITE_ROW
 ||Ñc==
SQLITE_DONE
 )Ñ¯
SQLITE_OK
;

694  
rc
;

695 
	}
}

697 
	$fsFûãr
(

698 
sqlôe3_vèb_curs‹
 *
pVèbCurs‹
,

699 
idxNum
, c⁄° *
idxSå
,

700 
¨gc
, 
sqlôe3_vÆue
 **
¨gv


702 
rc
;

703 
fs_curs‹
 *
pCur
 = (fs_curs‹ *)
pVèbCurs‹
;

704 
fs_vèb
 *
p
 = (fs_vèb *)(
pVèbCurs‹
->
pVèb
);

706 
	`as£π
–(
idxNum
==0 && 
¨gc
==0) || (idxNum==1 &&árgc==1) );

707 if–
idxNum
==1 ){

708 *
zStmt
 = 
	`sqlôe3_m¥ötf
(

709 "SELECT * FROM %Q.%Q WHEREÑowid=?", 
p
->
zDb
,Ö->
zTbl
);

710 if–!
zStmt
 )  
SQLITE_NOMEM
;

711 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
p
->
db
, 
zStmt
, -1, &
pCur
->
pStmt
, 0);

712 
	`sqlôe3_‰ì
(
zStmt
);

713 if–
rc
==
SQLITE_OK
 ){

714 
	`sqlôe3_böd_vÆue
(
pCur
->
pStmt
, 1, 
¨gv
[0]);

717 *
zStmt
 = 
	`sqlôe3_m¥ötf
("SELECT * FROM %Q.%Q", 
p
->
zDb
,Ö->
zTbl
);

718 if–!
zStmt
 )  
SQLITE_NOMEM
;

719 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
p
->
db
, 
zStmt
, -1, &
pCur
->
pStmt
, 0);

720 
	`sqlôe3_‰ì
(
zStmt
);

723 if–
rc
==
SQLITE_OK
 ){

724 
rc
 = 
	`fsNext
(
pVèbCurs‹
);

726  
rc
;

727 
	}
}

729 
	$fsCﬁumn
(
sqlôe3_vèb_curs‹
 *
cur
, 
sqlôe3_c⁄ãxt
 *
˘x
, 
i
){

730 
fs_curs‹
 *
pCur
 = (fs_curs‹*)
cur
;

732 
	`as£π
–
i
==0 || i==1 || i==2 );

733 if–
i
==0 ){

734 
	`sqlôe3_ªsu…_vÆue
(
˘x
, 
	`sqlôe3_cﬁumn_vÆue
(
pCur
->
pStmt
, 0));

736 c⁄° *
zFûe
 = (c⁄° *)
	`sqlôe3_cﬁumn_ãxt
(
pCur
->
pStmt
, 1);

737 
°©
 
sbuf
;

738 
fd
;

740 
n
;

741 
fd
 = 
	`›í
(
zFûe
, 
O_RDONLY
);

742 if–
fd
<0 )  
SQLITE_IOERR
;

743 
	`f°©
(
fd
, &
sbuf
);

745 if–
sbuf
.
°_size
>=
pCur
->
nAŒoc
 ){

746 
nNew
 = 
sbuf
.
°_size
*2;

747 *
zNew
;

748 if–
nNew
<1024 )ÇNew = 1024;

750 
zNew
 = 
	`sqlôe3RóŒoc
(
pCur
->
zBuf
, 
nNew
);

751 if–
zNew
==0 ){

752 
	`˛o£
(
fd
);

753  
SQLITE_NOMEM
;

755 
pCur
->
zBuf
 = 
zNew
;

756 
pCur
->
nAŒoc
 = 
nNew
;

759 
n
 = ()
	`ªad
(
fd
, 
pCur
->
zBuf
, 
sbuf
.
°_size
);

760 
	`˛o£
(
fd
);

761 if–
n
!=
sbuf
.
°_size
 )  
SQLITE_ERROR
;

762 
pCur
->
nBuf
 = 
sbuf
.
°_size
;

763 
pCur
->
zBuf
[pCur->
nBuf
] = '\0';

765 
	`sqlôe3_ªsu…_ãxt
(
˘x
, 
pCur
->
zBuf
, -1, 
SQLITE_TRANSIENT
);

767  
SQLITE_OK
;

768 
	}
}

770 
	$fsRowid
(
sqlôe3_vèb_curs‹
 *
cur
, 
sqlôe_öt64
 *
pRowid
){

771 
fs_curs‹
 *
pCur
 = (fs_curs‹*)
cur
;

772 *
pRowid
 = 
	`sqlôe3_cﬁumn_öt64
(
pCur
->
pStmt
, 0);

773  
SQLITE_OK
;

774 
	}
}

776 
	$fsEof
(
sqlôe3_vèb_curs‹
 *
cur
){

777 
fs_curs‹
 *
pCur
 = (fs_curs‹*)
cur
;

778  (
	`sqlôe3_d©a_cou¡
(
pCur
->
pStmt
)==0);

779 
	}
}

781 
	$fsBe°Index
(
sqlôe3_vèb
 *
èb
, 
sqlôe3_ödex_öfo
 *
pIdxInfo
){

782 
ii
;

784 
ii
=0; ii<
pIdxInfo
->
nC⁄°øöt
; ii++){

785 
sqlôe3_ödex_c⁄°øöt
 c⁄° *
pC⁄s
 = &
pIdxInfo
->
aC⁄°øöt
[
ii
];

786 if–
pC⁄s
->
iCﬁumn
<0 &&ÖC⁄s->
ußbÀ


787 && 
pC⁄s
->
›
==
SQLITE_INDEX_CONSTRAINT_EQ
 ){

788 
sqlôe3_ödex_c⁄°øöt_ußge
 *
pUßge
;

789 
pUßge
 = &
pIdxInfo
->
aC⁄°øötUßge
[
ii
];

790 
pUßge
->
omô
 = 0;

791 
pUßge
->
¨gvIndex
 = 1;

792 
pIdxInfo
->
idxNum
 = 1;

793 
pIdxInfo
->
e°im©edCo°
 = 1.0;

798  
SQLITE_OK
;

799 
	}
}

805 
sqlôe3_moduÀ
 
	gfsModuÀ
 = {

807 
fsC⁄√˘
,

808 
fsC⁄√˘
,

809 
fsBe°Index
,

810 
fsDisc⁄√˘
,

811 
fsDisc⁄√˘
,

812 
fsO≥n
,

813 
fsClo£
,

814 
fsFûãr
,

815 
fsNext
,

816 
fsEof
,

817 
fsCﬁumn
,

818 
fsRowid
,

828 
sqlôe3_moduÀ
 
	gfsdúModuÀ
 = {

830 
fsdúC⁄√˘
,

831 
fsdúC⁄√˘
,

832 
fsdúBe°Index
,

833 
fsdúDisc⁄√˘
,

834 
fsdúDisc⁄√˘
,

835 
fsdúO≥n
,

836 
fsdúClo£
,

837 
fsdúFûãr
,

838 
fsdúNext
,

839 
fsdúEof
,

840 
fsdúCﬁumn
,

841 
fsdúRowid
,

851 
sqlôe3_moduÀ
 
	gf°ªeModuÀ
 = {

853 
f°ªeC⁄√˘
,

854 
f°ªeC⁄√˘
,

855 
f°ªeBe°Index
,

856 
f°ªeDisc⁄√˘
,

857 
f°ªeDisc⁄√˘
,

858 
f°ªeO≥n
,

859 
f°ªeClo£
,

860 
f°ªeFûãr
,

861 
f°ªeNext
,

862 
f°ªeEof
,

863 
f°ªeCﬁumn
,

864 
f°ªeRowid
,

877 
gëDbPoöãr
(
T˛_I¡îp
 *
öãΩ
, c⁄° *
zA
, 
sqlôe3
 **
µDb
);

882 
SQLITE_TCLAPI
 
	$ªgi°î_fs_moduÀ
(

883 
Clõ¡D©a
 
˛õ¡D©a
,

884 
T˛_I¡îp
 *
öãΩ
,

885 
objc
,

886 
T˛_Obj
 *
CONST
 
objv
[]

888 
sqlôe3
 *
db
;

889 if–
objc
!=2 ){

890 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB");

891  
TCL_ERROR
;

893 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

894 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


895 
	`sqlôe3_¸óã_moduÀ
(
db
, "fs", &
fsModuÀ
, (*)
öãΩ
);

896 
	`sqlôe3_¸óã_moduÀ
(
db
, "fsdú", &
fsdúModuÀ
, 0);

897 
	`sqlôe3_¸óã_moduÀ
(
db
, "f°ªe", &
f°ªeModuÀ
, 0);

899  
TCL_OK
;

900 
	}
}

908 
	$Sqlôëe°fs_Inô
(
T˛_I¡îp
 *
öãΩ
){

909 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


911 *
zName
;

912 
T˛_ObjCmdProc
 *
xProc
;

913 *
˛õ¡D©a
;

914 } 
aObjCmd
[] = {

915 { "ªgi°î_fs_moduÀ", 
ªgi°î_fs_moduÀ
, 0 },

917 
i
;

918 
i
=0; i<(
aObjCmd
)/(aObjCmd[0]); i++){

919 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
aObjCmd
[
i
].
zName
,

920 
aObjCmd
[
i
].
xProc
,áObjCmd[i].
˛õ¡D©a
, 0);

923  
TCL_OK
;

924 
	}
}

	@test_func.c

15 
	~"sqlôe3.h
"

16 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

17 
	~"sqlôe_t˛.h
"

19 
	~"t˛.h
"

21 
	~<°dlib.h
>

22 
	~<°rög.h
>

23 
	~<as£π.h
>

25 
	~"sqlôeI¡.h
"

26 
	~"vdbeI¡.h
"

33 *
	$ã°C⁄ãxtMÆloc
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
, 
nByã
){

34 *
z
 = 
	`sqlôe3_mÆloc
(
nByã
);

35 if–!
z
 && 
nByã
>0 ){

36 
	`sqlôe3_ªsu…_îr‹_nomem
(
c⁄ãxt
);

38  
z
;

39 
	}
}

45 
	$øndSå
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
, 
¨gc
, 
sqlôe3_vÆue
 **
¨gv
){

46 c⁄° 
zSrc
[] =

51 
iMö
, 
iMax
, 
n
, 
r
, 
i
;

52 
zBuf
[1000];

57 
	`as£π
(
¨gc
==2);

59 
iMö
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[0]);

60 if–
iMö
<0 ) iMin = 0;

61 if–
iMö
>=(
zBuf
) ) iMin = (zBuf)-1;

62 
iMax
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[1]);

63 if–
iMax
<
iMö
 ) iMax = iMin;

64 if–
iMax
>=(
zBuf
) ) iMax = (zBuf)-1;

65 
n
 = 
iMö
;

66 if–
iMax
>
iMö
 ){

67 
	`sqlôe3_øndom√ss
((
r
), &r);

68 
r
 &= 0x7fffffff;

69 
n
 +
r
%(
iMax
 + 1 - 
iMö
);

71 
	`as£π
–
n
<(
zBuf
) );

72 
	`sqlôe3_øndom√ss
(
n
, 
zBuf
);

73 
i
=0; i<
n
; i++){

74 
zBuf
[
i
] = 
zSrc
[zBuf[i]%((zSrc)-1)];

76 
zBuf
[
n
] = 0;

77 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, (*)
zBuf
, 
n
, 
SQLITE_TRANSIENT
);

78 
	}
}

91 
	gã°_de°ru˘‹_cou¡_v¨
 = 0;

92 
	$de°ru˘‹
(*
p
){

93 *
zVÆ
 = (*)
p
;

94 
	`as£π
(
zVÆ
);

95 
zVÆ
--;

96 
	`sqlôe3_‰ì
(
zVÆ
);

97 
ã°_de°ru˘‹_cou¡_v¨
--;

98 
	}
}

99 
	$ã°_de°ru˘‹
(

100 
sqlôe3_c⁄ãxt
 *
pCtx
,

101 
nArg
,

102 
sqlôe3_vÆue
 **
¨gv


104 *
zVÆ
;

105 
Àn
;

107 
ã°_de°ru˘‹_cou¡_v¨
++;

108 
	`as£π
–
nArg
==1 );

109 if–
	`sqlôe3_vÆue_ty≥
(
¨gv
[0])==
SQLITE_NULL
 ) ;

110 
Àn
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[0]);

111 
zVÆ
 = 
	`ã°C⁄ãxtMÆloc
(
pCtx
, 
Àn
+3);

112 if–!
zVÆ
 ){

115 
zVÆ
[
Àn
+1] = 0;

116 
zVÆ
[
Àn
+2] = 0;

117 
zVÆ
++;

118 
	`mem˝y
(
zVÆ
, 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]), 
Àn
);

119 
	`sqlôe3_ªsu…_ãxt
(
pCtx
, 
zVÆ
, -1, 
de°ru˘‹
);

120 
	}
}

121 #i‚de‡
SQLITE_OMIT_UTF16


122 
	$ã°_de°ru˘‹16
(

123 
sqlôe3_c⁄ãxt
 *
pCtx
,

124 
nArg
,

125 
sqlôe3_vÆue
 **
¨gv


127 *
zVÆ
;

128 
Àn
;

130 
ã°_de°ru˘‹_cou¡_v¨
++;

131 
	`as£π
–
nArg
==1 );

132 if–
	`sqlôe3_vÆue_ty≥
(
¨gv
[0])==
SQLITE_NULL
 ) ;

133 
Àn
 = 
	`sqlôe3_vÆue_byãs16
(
¨gv
[0]);

134 
zVÆ
 = 
	`ã°C⁄ãxtMÆloc
(
pCtx
, 
Àn
+3);

135 if–!
zVÆ
 ){

138 
zVÆ
[
Àn
+1] = 0;

139 
zVÆ
[
Àn
+2] = 0;

140 
zVÆ
++;

141 
	`mem˝y
(
zVÆ
, 
	`sqlôe3_vÆue_ãxt16
(
¨gv
[0]), 
Àn
);

142 
	`sqlôe3_ªsu…_ãxt16
(
pCtx
, 
zVÆ
, -1, 
de°ru˘‹
);

143 
	}
}

145 
	$ã°_de°ru˘‹_cou¡
(

146 
sqlôe3_c⁄ãxt
 *
pCtx
,

147 
nArg
,

148 
sqlôe3_vÆue
 **
¨gv


150 
	`sqlôe3_ªsu…_öt
(
pCtx
, 
ã°_de°ru˘‹_cou¡_v¨
);

151 
	}
}

158 #i‚de‡
SQLITE_UNTESTABLE


159 
sqlôe3BegöBíignMÆloc
();

160 
sqlôe3EndBíignMÆloc
();

162 
	#sqlôe3BegöBíignMÆloc
()

	)

163 
	#sqlôe3EndBíignMÆloc
()

	)

165 
	$ã°_agg_îrmsg16_°ï
(
sqlôe3_c⁄ãxt
 *
a
, 
b
,
sqlôe3_vÆue
 **
c
){

166 
	}
}

167 
	$ã°_agg_îrmsg16_föÆ
(
sqlôe3_c⁄ãxt
 *
˘x
){

168 #i‚de‡
SQLITE_OMIT_UTF16


169 c⁄° *
z
;

170 
sqlôe3
 * 
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
˘x
);

171 
	`sqlôe3_aggªg©e_c⁄ãxt
(
˘x
, 2048);

172 
z
 = 
	`sqlôe3_îrmsg16
(
db
);

173 
	`sqlôe3_ªsu…_ãxt16
(
˘x
, 
z
, -1, 
SQLITE_TRANSIENT
);

175 
	}
}

188 
	$‰ì_ã°_auxd©a
(*
p
Ë{
	`sqlôe3_‰ì
’);
	}
}

189 
	$ã°_auxd©a
(

190 
sqlôe3_c⁄ãxt
 *
pCtx
,

191 
nArg
,

192 
sqlôe3_vÆue
 **
¨gv


194 
i
;

195 *
zRë
 = 
	`ã°C⁄ãxtMÆloc
(
pCtx
, 
nArg
*2);

196 if–!
zRë
 ) ;

197 
	`mem£t
(
zRë
, 0, 
nArg
*2);

198 
i
=0; i<
nArg
; i++){

199 c⁄° *
z
 = (*)
	`sqlôe3_vÆue_ãxt
(
¨gv
[
i
]);

200 if–
z
 ){

201 
n
;

202 *
zAux
 = 
	`sqlôe3_gë_auxd©a
(
pCtx
, 
i
);

203 if–
zAux
 ){

204 
zRë
[
i
*2] = '1';

205 
	`as£π
–
	`°rcmp
(
zAux
,
z
)==0 );

207 
zRë
[
i
*2] = '0';

209 
n
 = ()
	`°æí
(
z
) + 1;

210 
zAux
 = 
	`ã°C⁄ãxtMÆloc
(
pCtx
, 
n
);

211 if–
zAux
 ){

212 
	`mem˝y
(
zAux
, 
z
, 
n
);

213 
	`sqlôe3_£t_auxd©a
(
pCtx
, 
i
, 
zAux
, 
‰ì_ã°_auxd©a
);

215 
zRë
[
i
*2+1] = ' ';

218 
	`sqlôe3_ªsu…_ãxt
(
pCtx
, 
zRë
, 2*
nArg
-1, 
‰ì_ã°_auxd©a
);

219 
	}
}

226 
	$ã°_îr‹
(

227 
sqlôe3_c⁄ãxt
 *
pCtx
,

228 
nArg
,

229 
sqlôe3_vÆue
 **
¨gv


231 
	`sqlôe3_ªsu…_îr‹
(
pCtx
, (*)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]), -1);

232 if–
nArg
==2 ){

233 
	`sqlôe3_ªsu…_îr‹_code
(
pCtx
, 
	`sqlôe3_vÆue_öt
(
¨gv
[1]));

235 
	}
}

243 
	$cou¡îFunc
(

244 
sqlôe3_c⁄ãxt
 *
pCtx
,

245 
nArg
,

246 
sqlôe3_vÆue
 **
¨gv


248 *
pCou¡î
 = (*)
	`sqlôe3_gë_auxd©a
(
pCtx
, 0);

249 if–
pCou¡î
==0 ){

250 
pCou¡î
 = 
	`sqlôe3_mÆloc
( (*pCounter) );

251 if–
pCou¡î
==0 ){

252 
	`sqlôe3_ªsu…_îr‹_nomem
(
pCtx
);

255 *
pCou¡î
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[0]);

256 
	`sqlôe3_£t_auxd©a
(
pCtx
, 0, 
pCou¡î
, 
sqlôe3_‰ì
);

258 ++*
pCou¡î
;

260 
	`sqlôe3_ªsu…_öt
(
pCtx
, *
pCou¡î
);

261 
	}
}

276 
	$ã°_isﬁ©i⁄
(

277 
sqlôe3_c⁄ãxt
 *
pCtx
,

278 
nArg
,

279 
sqlôe3_vÆue
 **
¨gv


281 #i‚de‡
SQLITE_OMIT_UTF16


282 
	`sqlôe3_vÆue_ãxt16
(
¨gv
[0]);

283 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

284 
	`sqlôe3_vÆue_ãxt16
(
¨gv
[0]);

285 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

287 
	`sqlôe3_ªsu…_vÆue
(
pCtx
, 
¨gv
[1]);

288 
	}
}

294 
	$ã°_evÆ
(

295 
sqlôe3_c⁄ãxt
 *
pCtx
,

296 
nArg
,

297 
sqlôe3_vÆue
 **
¨gv


299 
sqlôe3_°mt
 *
pStmt
;

300 
rc
;

301 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
pCtx
);

302 c⁄° *
zSql
;

304 
zSql
 = (*)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

305 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
db
, 
zSql
, -1, &
pStmt
, 0);

306 if–
rc
==
SQLITE_OK
 ){

307 
rc
 = 
	`sqlôe3_°ï
(
pStmt
);

308 if–
rc
==
SQLITE_ROW
 ){

309 
	`sqlôe3_ªsu…_vÆue
(
pCtx
, 
	`sqlôe3_cﬁumn_vÆue
(
pStmt
, 0));

311 
rc
 = 
	`sqlôe3_föÆize
(
pStmt
);

313 if–
rc
 ){

314 *
zEº
;

315 
	`as£π
–
pStmt
==0 );

316 
zEº
 = 
	`sqlôe3_m¥ötf
("sqlôe3_¥ï¨e_v2(Ëîr‹: %s",
	`sqlôe3_îrmsg
(
db
));

317 
	`sqlôe3_ªsu…_ãxt
(
pCtx
, 
zEº
, -1, 
sqlôe3_‰ì
);

318 
	`sqlôe3_ªsu…_îr‹_code
(
pCtx
, 
rc
);

320 
	}
}

326 
	$ã°HexCh¨
(
c
){

327 if–
c
>='0' && c<='9' ){

328  
c
 - '0';

329 }if–
c
>='a' && c<='f' ){

330  
c
 - 'a' + 10;

331 }if–
c
>='A' && c<='F' ){

332  
c
 - 'A' + 10;

335 
	}
}

340 
	$ã°HexToBö
(c⁄° *
zIn
, *
zOut
){

341  
zIn
[0] && zIn[1] ){

342 *(
zOut
++Ë(
	`ã°HexCh¨
(
zIn
[0])<<4) +ÅestHexChar(zIn[1]);

343 
zIn
 += 2;

345 
	}
}

353 #i‚de‡
SQLITE_OMIT_UTF16


354 
	$ã°HexToUtf16be
(

355 
sqlôe3_c⁄ãxt
 *
pCtx
,

356 
nArg
,

357 
sqlôe3_vÆue
 **
¨gv


359 
n
;

360 c⁄° *
zIn
;

361 *
zOut
;

362 
	`as£π
–
nArg
==1 );

363 
n
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[0]);

364 
zIn
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

365 
zOut
 = 
	`sqlôe3_mÆloc
–
n
/2 );

366 if–
zOut
==0 ){

367 
	`sqlôe3_ªsu…_îr‹_nomem
(
pCtx
);

369 
	`ã°HexToBö
(
zIn
, 
zOut
);

370 
	`sqlôe3_ªsu…_ãxt16be
(
pCtx
, 
zOut
, 
n
/2, 
sqlôe3_‰ì
);

372 
	}
}

381 
	$ã°HexToUtf8
(

382 
sqlôe3_c⁄ãxt
 *
pCtx
,

383 
nArg
,

384 
sqlôe3_vÆue
 **
¨gv


386 
n
;

387 c⁄° *
zIn
;

388 *
zOut
;

389 
	`as£π
–
nArg
==1 );

390 
n
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[0]);

391 
zIn
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

392 
zOut
 = 
	`sqlôe3_mÆloc
–
n
/2 );

393 if–
zOut
==0 ){

394 
	`sqlôe3_ªsu…_îr‹_nomem
(
pCtx
);

396 
	`ã°HexToBö
(
zIn
, 
zOut
);

397 
	`sqlôe3_ªsu…_ãxt
(
pCtx
, 
zOut
, 
n
/2, 
sqlôe3_‰ì
);

399 
	}
}

407 #i‚de‡
SQLITE_OMIT_UTF16


408 
	$ã°HexToUtf16À
(

409 
sqlôe3_c⁄ãxt
 *
pCtx
,

410 
nArg
,

411 
sqlôe3_vÆue
 **
¨gv


413 
n
;

414 c⁄° *
zIn
;

415 *
zOut
;

416 
	`as£π
–
nArg
==1 );

417 
n
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[0]);

418 
zIn
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

419 
zOut
 = 
	`sqlôe3_mÆloc
–
n
/2 );

420 if–
zOut
==0 ){

421 
	`sqlôe3_ªsu…_îr‹_nomem
(
pCtx
);

423 
	`ã°HexToBö
(
zIn
, 
zOut
);

424 
	`sqlôe3_ªsu…_ãxt16À
(
pCtx
, 
zOut
, 
n
/2, 
sqlôe3_‰ì
);

426 
	}
}

436 
	$ªÆ2hex
(

437 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

438 
¨gc
,

439 
sqlôe3_vÆue
 **
¨gv


442 
sqlôe3_uöt64
 
i
;

443 
r
;

444 
x
[8];

445 } 
v
;

446 
zOut
[20];

447 
i
;

448 
bigEndün
;

449 
v
.
i
 = 1;

450 
bigEndün
 = 
v
.
x
[0]==0;

451 
v
.
r
 = 
	`sqlôe3_vÆue_doubÀ
(
¨gv
[0]);

452 
i
=0; i<8; i++){

453 if–
bigEndün
 ){

454 
zOut
[
i
*2] = "0123456789abcdef"[
v
.
x
[i]>>4];

455 
zOut
[
i
*2+1] = "0123456789abcdef"[
v
.
x
[i]&0xf];

457 
zOut
[14-
i
*2] = "0123456789abcdef"[
v
.
x
[i]>>4];

458 
zOut
[14-
i
*2+1] = "0123456789abcdef"[
v
.
x
[i]&0xf];

461 
zOut
[16] = 0;

462 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
zOut
, -1, 
SQLITE_TRANSIENT
);

463 
	}
}

473 
	$ã°_exåa˘
(

474 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

475 
¨gc
,

476 
sqlôe3_vÆue
 **
¨gv


478 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

479 
u8
 *
pRec
;

480 
u8
 *
pEndHdr
;

481 
u8
 *
pHdr
;

482 
u8
 *
pBody
;

483 
u64
 
nHdr
;

484 
iIdx
;

485 
iCuºít
 = 0;

487 
	`as£π
–
¨gc
==2 );

488 
pRec
 = (
u8
*)
	`sqlôe3_vÆue_blob
(
¨gv
[0]);

489 
iIdx
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[1]);

491 
pHdr
 = 
pRec
 + 
	`sqlôe3GëV¨öt
’Rec, &
nHdr
);

492 
pBody
 = 
pEndHdr
 = &
pRec
[
nHdr
];

494 
iCuºít
=0; 
pHdr
<
pEndHdr
 && iCuºít<=
iIdx
; iCurrent++){

495 
u64
 
iSîülTy≥
;

496 
Mem
 
mem
;

498 
	`mem£t
(&
mem
, 0, (mem));

499 
mem
.
db
 = db;

500 
mem
.
íc
 = 
	`ENC
(
db
);

501 
pHdr
 +
	`sqlôe3GëV¨öt
’Hdr, &
iSîülTy≥
);

502 
pBody
 +
	`sqlôe3VdbeSîülGë
’Body, (
u32
)
iSîülTy≥
, &
mem
);

504 if–
iCuºít
==
iIdx
 ){

505 
	`sqlôe3_ªsu…_vÆue
(
c⁄ãxt
, &
mem
);

508 if–
mem
.
szMÆloc
 ) 
	`sqlôe3DbFªe
(
db
, mem.
zMÆloc
);

510 
	}
}

520 
	$ã°_decode
(

521 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

522 
¨gc
,

523 
sqlôe3_vÆue
 **
¨gv


525 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

526 
u8
 *
pRec
;

527 
u8
 *
pEndHdr
;

528 
u8
 *
pHdr
;

529 
u8
 *
pBody
;

530 
u64
 
nHdr
;

531 
T˛_Obj
 *
pRë
;

533 
pRë
 = 
	`T˛_NewObj
();

534 
	`T˛_In¸RefCou¡
(
pRë
);

536 
	`as£π
–
¨gc
==1 );

537 
pRec
 = (
u8
*)
	`sqlôe3_vÆue_blob
(
¨gv
[0]);

539 
pHdr
 = 
pRec
 + 
	`sqlôe3GëV¨öt
’Rec, &
nHdr
);

540 
pBody
 = 
pEndHdr
 = &
pRec
[
nHdr
];

541  
pHdr
<
pEndHdr
 ){

542 
T˛_Obj
 *
pVÆ
 = 0;

543 
u64
 
iSîülTy≥
;

544 
Mem
 
mem
;

546 
	`mem£t
(&
mem
, 0, (mem));

547 
mem
.
db
 = db;

548 
mem
.
íc
 = 
	`ENC
(
db
);

549 
pHdr
 +
	`sqlôe3GëV¨öt
’Hdr, &
iSîülTy≥
);

550 
pBody
 +
	`sqlôe3VdbeSîülGë
’Body, (
u32
)
iSîülTy≥
, &
mem
);

552  
	`sqlôe3_vÆue_ty≥
(&
mem
) ){

553 
SQLITE_TEXT
:

554 
pVÆ
 = 
	`T˛_NewSåögObj
((c⁄° *)
	`sqlôe3_vÆue_ãxt
(&
mem
), -1);

557 
SQLITE_BLOB
: {

558 
hexdigô
[] = {

562 
n
 = 
	`sqlôe3_vÆue_byãs
(&
mem
);

563 
u8
 *
z
 = (u8*)
	`sqlôe3_vÆue_blob
(&
mem
);

564 
i
;

565 
pVÆ
 = 
	`T˛_NewSåögObj
("x'", -1);

566 
i
=0; i<
n
; i++){

567 
hex
[3];

568 
hex
[0] = 
hexdigô
[((
z
[
i
] >> 4) & 0x0F)];

569 
hex
[1] = 
hexdigô
[(
z
[
i
] & 0x0F)];

570 
hex
[2] = '\0';

571 
	`T˛_AµídSåögsToObj
(
pVÆ
, 
hex
, 0);

573 
	`T˛_AµídSåögsToObj
(
pVÆ
, "'", 0);

577 
SQLITE_FLOAT
:

578 
pVÆ
 = 
	`T˛_NewDoubÀObj
(
	`sqlôe3_vÆue_doubÀ
(&
mem
));

581 
SQLITE_INTEGER
:

582 
pVÆ
 = 
	`T˛_NewWideI¡Obj
(
	`sqlôe3_vÆue_öt64
(&
mem
));

585 
SQLITE_NULL
:

586 
pVÆ
 = 
	`T˛_NewSåögObj
("NULL", -1);

590 
	`as£π
( 0 );

593 
	`T˛_Li°ObjAµídEÀmít
(0, 
pRë
, 
pVÆ
);

595 if–
mem
.
szMÆloc
 ){

596 
	`sqlôe3DbFªe
(
db
, 
mem
.
zMÆloc
);

600 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
	`T˛_GëSåög
(
pRë
), -1, 
SQLITE_TRANSIENT
);

601 
	`T˛_De¸RefCou¡
(
pRë
);

602 
	}
}

612 
	$ã°_zîoblob
(

613 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

614 
¨gc
,

615 
sqlôe3_vÆue
 **
¨gv


617 
nZîo
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[0]);

618 
	`sqlôe3_ªsu…_zîoblob
(
c⁄ãxt
, 
nZîo
);

619 
	}
}

625 
	$ã°_gësubty≥
(

626 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

627 
¨gc
,

628 
sqlôe3_vÆue
 **
¨gv


630 
	`sqlôe3_ªsu…_öt
(
c⁄ãxt
, ()
	`sqlôe3_vÆue_subty≥
(
¨gv
[0]));

631 
	}
}

637 
	$ã°_£tsubty≥
(

638 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

639 
¨gc
,

640 
sqlôe3_vÆue
 **
¨gv


642 
	`sqlôe3_ªsu…_vÆue
(
c⁄ãxt
, 
¨gv
[0]);

643 
	`sqlôe3_ªsu…_subty≥
(
c⁄ãxt
, ()
	`sqlôe3_vÆue_öt
(
¨gv
[1]));

644 
	}
}

646 
	$ªgi°îTe°Fun˘i⁄s
(

647 
sqlôe3
 *
db
,

648 **
pzEºMsg
,

649 c⁄° 
sqlôe3_≠i_routöes
 *
pThunk


652 *
zName
;

653 sig√d 
nArg
;

654 
eTextRï
;

655 (*
xFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
 **);

656 } 
aFuncs
[] = {

657 { "ønd°r", 2, 
SQLITE_UTF8
, 
øndSå
 },

658 { "ã°_de°ru˘‹", 1, 
SQLITE_UTF8
, 
ã°_de°ru˘‹
},

659 #i‚de‡
SQLITE_OMIT_UTF16


660 { "ã°_de°ru˘‹16", 1, 
SQLITE_UTF8
, 
ã°_de°ru˘‹16
},

661 { "hex_to_utf16be", 1, 
SQLITE_UTF8
, 
ã°HexToUtf16be
},

662 { "hex_to_utf16À", 1, 
SQLITE_UTF8
, 
ã°HexToUtf16À
},

664 { "hex_to_utf8", 1, 
SQLITE_UTF8
, 
ã°HexToUtf8
},

665 { "ã°_de°ru˘‹_cou¡", 0, 
SQLITE_UTF8
, 
ã°_de°ru˘‹_cou¡
},

666 { "ã°_auxd©a", -1, 
SQLITE_UTF8
, 
ã°_auxd©a
},

667 { "ã°_îr‹", 1, 
SQLITE_UTF8
, 
ã°_îr‹
},

668 { "ã°_îr‹", 2, 
SQLITE_UTF8
, 
ã°_îr‹
},

669 { "ã°_evÆ", 1, 
SQLITE_UTF8
, 
ã°_evÆ
},

670 { "ã°_isﬁ©i⁄", 2, 
SQLITE_UTF8
, 
ã°_isﬁ©i⁄
},

671 { "ã°_cou¡î", 1, 
SQLITE_UTF8
, 
cou¡îFunc
},

672 { "ªÆ2hex", 1, 
SQLITE_UTF8
, 
ªÆ2hex
},

673 { "ã°_decode", 1, 
SQLITE_UTF8
, 
ã°_decode
},

674 { "ã°_exåa˘", 2, 
SQLITE_UTF8
, 
ã°_exåa˘
},

675 { "ã°_zîoblob", 1, 
SQLITE_UTF8
|
SQLITE_DETERMINISTIC
, 
ã°_zîoblob
},

676 { "ã°_gësubty≥", 1, 
SQLITE_UTF8
, 
ã°_gësubty≥
},

677 { "ã°_£tsubty≥", 2, 
SQLITE_UTF8
, 
ã°_£tsubty≥
},

679 
i
;

681 
i
=0; i<(
aFuncs
)/(aFuncs[0]); i++){

682 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, 
aFuncs
[
i
].
zName
,áFuncs[i].
nArg
,

683 
aFuncs
[
i
].
eTextRï
, 0,áFuncs[i].
xFunc
, 0, 0);

686 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "ã°_agg_îrmsg16", 0, 
SQLITE_ANY
, 0, 0,

687 
ã°_agg_îrmsg16_°ï
, 
ã°_agg_îrmsg16_föÆ
);

689  
SQLITE_OK
;

690 
	}
}

699 
SQLITE_TCLAPI
 
	$autoö°Æl_ã°_funcs
(

700 * 
˛õ¡D©a
,

701 
T˛_I¡îp
 *
öãΩ
,

702 
objc
,

703 
T˛_Obj
 *
CONST
 
objv
[]

705 
	`Md5_Regi°î
(
sqlôe3
 *, **, c⁄° 
sqlôe3_≠i_routöes
 *);

706 
rc
 = 
	`sqlôe3_auto_exãnsi⁄
(((*)())
ªgi°îTe°Fun˘i⁄s
);

707 if–
rc
==
SQLITE_OK
 ){

708 
rc
 = 
	`sqlôe3_auto_exãnsi⁄
(((*)())
Md5_Regi°î
);

710 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

711  
TCL_OK
;

712 
	}
}

717 
	$tSãp
(
sqlôe3_c⁄ãxt
 *
a
, 
b
, 
sqlôe3_vÆue
 **
c
){
	}
}

718 
	$tFöÆ
(
sqlôe3_c⁄ãxt
 *
a
){
	}
}

727 
SQLITE_TCLAPI
 
	$abu£_¸óã_fun˘i⁄
(

728 * 
˛õ¡D©a
,

729 
T˛_I¡îp
 *
öãΩ
,

730 
objc
,

731 
T˛_Obj
 *
CONST
 
objv
[]

733 
	`gëDbPoöãr
(
T˛_I¡îp
*, c⁄° *, 
sqlôe3
**);

734 
sqlôe3
 *
db
;

735 
rc
;

736 
mxArg
;

738 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

740 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "tx", 1, 
SQLITE_UTF8
, 0, 
tSãp
,tSãp,
tFöÆ
);

741 if–
rc
!=
SQLITE_MISUSE
 ) 
abu£_îr
;

743 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "tx", 1, 
SQLITE_UTF8
, 0, 
tSãp
,ÅStep, 0);

744 if–
rc
!=
SQLITE_MISUSE
 ) 
abu£_îr
;

746 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "tx", 1, 
SQLITE_UTF8
, 0, 
tSãp
, 0, 
tFöÆ
);

747 if–
rc
!=
SQLITE_MISUSE
Ë
abu£_îr
;

749 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "tx", 1, 
SQLITE_UTF8
, 0, 0, 0, 
tFöÆ
);

750 if–
rc
!=
SQLITE_MISUSE
 ) 
abu£_îr
;

752 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "tx", 1, 
SQLITE_UTF8
, 0, 0, 
tSãp
, 0);

753 if–
rc
!=
SQLITE_MISUSE
 ) 
abu£_îr
;

755 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "tx", -2, 
SQLITE_UTF8
, 0, 
tSãp
, 0, 0);

756 if–
rc
!=
SQLITE_MISUSE
 ) 
abu£_îr
;

758 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "tx", 128, 
SQLITE_UTF8
, 0, 
tSãp
, 0, 0);

759 if–
rc
!=
SQLITE_MISUSE
 ) 
abu£_îr
;

761 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "funcxx"

767 1, 
SQLITE_UTF8
, 0, 
tSãp
, 0, 0);

768 if–
rc
!=
SQLITE_MISUSE
 ) 
abu£_îr
;

774 
	`sqlôe3_limô
(
db
, 
SQLITE_LIMIT_FUNCTION_ARG
, 10000);

775 
mxArg
 = 
	`sqlôe3_limô
(
db
, 
SQLITE_LIMIT_FUNCTION_ARG
, -1);

776 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "nullx"

782 
mxArg
, 
SQLITE_UTF8
, 0, 
tSãp
, 0, 0);

783 if–
rc
!=
SQLITE_OK
 ) 
abu£_îr
;

785  
TCL_OK
;

787 
abu£_îr
:

788 
	`T˛_AµídResu…
(
öãΩ
, "sqlite3_create_functionábusedÅest failed",

790  
TCL_ERROR
;

791 
	}
}

797 
	$Sqlôëe°_func_Inô
(
T˛_I¡îp
 *
öãΩ
){

799 *
zName
;

800 
T˛_ObjCmdProc
 *
xProc
;

801 } 
aObjCmd
[] = {

802 { "autoö°Æl_ã°_fun˘i⁄s", 
autoö°Æl_ã°_funcs
 },

803 { "abu£_¸óã_fun˘i⁄", 
abu£_¸óã_fun˘i⁄
 },

805 
i
;

806 
	`Md5_Regi°î
(
sqlôe3
 *, **, c⁄° 
sqlôe3_≠i_routöes
 *);

808 
i
=0; i<(
aObjCmd
)/(aObjCmd[0]); i++){

809 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
aObjCmd
[
i
].
zName
,áObjCmd[i].
xProc
, 0, 0);

811 
	`sqlôe3_öôülize
();

812 
	`sqlôe3_auto_exãnsi⁄
(((*)())
ªgi°îTe°Fun˘i⁄s
);

813 
	`sqlôe3_auto_exãnsi⁄
(((*)())
Md5_Regi°î
);

814  
TCL_OK
;

815 
	}
}

	@test_hexio.c

20 
	~"sqlôeI¡.h
"

21 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

22 
	~"sqlôe_t˛.h
"

24 
	~"t˛.h
"

26 
	~<°dlib.h
>

27 
	~<°rög.h
>

28 
	~<as£π.h
>

36 
	$sqlôe3Te°BöToHex
(*
zBuf
, 
N
){

37 c⁄° 
zHex
[] = "0123456789ABCDEF";

38 
i
, 
j
;

39 
c
;

40 
i
 = 
N
*2;

41 
zBuf
[
i
--] = 0;

42 
j
=
N
-1; j>=0; j--){

43 
c
 = 
zBuf
[
j
];

44 
zBuf
[
i
--] = 
zHex
[
c
&0xf];

45 
zBuf
[
i
--] = 
zHex
[
c
>>4];

47 
	`as£π
–
i
==-1 );

48 
	}
}

56 
	$sqlôe3Te°HexToBö
(c⁄° *
zIn
, 
N
, *
aOut
){

57 c⁄° 
aM≠
[] = {

75 
i
, 
j
;

76 
hi
=1;

77 
c
;

79 
i
=
j
=0; i<
N
; i++){

80 
c
 = 
aM≠
[
zIn
[
i
]];

81 if–
c
==0 ) ;

82 if–
hi
 ){

83 
aOut
[
j
] = (
c
-1)<<4;

84 
hi
 = 0;

86 
aOut
[
j
++] |
c
-1;

87 
hi
 = 1;

90  
j
;

91 
	}
}

101 
SQLITE_TCLAPI
 
	$hexio_ªad
(

102 * 
˛õ¡D©a
,

103 
T˛_I¡îp
 *
öãΩ
,

104 
objc
,

105 
T˛_Obj
 *
CONST
 
objv
[]

107 
off£t
;

108 
amt
, 
gŸ
;

109 c⁄° *
zFûe
;

110 *
zBuf
;

111 
FILE
 *
ö
;

113 if–
objc
!=4 ){

114 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "FILENAME OFFSET AMT");

115  
TCL_ERROR
;

117 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
off£t
ËË 
TCL_ERROR
;

118 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
amt
ËË 
TCL_ERROR
;

119 
zFûe
 = 
	`T˛_GëSåög
(
objv
[1]);

120 
zBuf
 = 
	`sqlôe3_mÆloc
–
amt
*2+1 );

121 if–
zBuf
==0 ){

122  
TCL_ERROR
;

124 
ö
 = 
	`f›í
(
zFûe
, "rb");

125 if–
ö
==0 ){

126 
ö
 = 
	`f›í
(
zFûe
, "r");

128 if–
ö
==0 ){

129 
	`T˛_AµídResu…
(
öãΩ
, "ˇ¬Ÿ o≥¿öpuàfûê", 
zFûe
, 0);

130  
TCL_ERROR
;

132 
	`f£ek
(
ö
, 
off£t
, 
SEEK_SET
);

133 
gŸ
 = ()
	`‰ód
(
zBuf
, 1, 
amt
, 
ö
);

134 
	`f˛o£
(
ö
);

135 if–
gŸ
<0 ){

136 
gŸ
 = 0;

138 
	`sqlôe3Te°BöToHex
(
zBuf
, 
gŸ
);

139 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

140 
	`sqlôe3_‰ì
(
zBuf
);

141  
TCL_OK
;

142 
	}
}

151 
SQLITE_TCLAPI
 
	$hexio_wrôe
(

152 * 
˛õ¡D©a
,

153 
T˛_I¡îp
 *
öãΩ
,

154 
objc
,

155 
T˛_Obj
 *
CONST
 
objv
[]

157 
off£t
;

158 
nIn
, 
nOut
, 
wrôãn
;

159 c⁄° *
zFûe
;

160 c⁄° *
zIn
;

161 *
aOut
;

162 
FILE
 *
out
;

164 if–
objc
!=4 ){

165 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "FILENAME OFFSET HEXDATA");

166  
TCL_ERROR
;

168 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
off£t
ËË 
TCL_ERROR
;

169 
zFûe
 = 
	`T˛_GëSåög
(
objv
[1]);

170 
zIn
 = (c⁄° *)
	`T˛_GëSåögFromObj
(
objv
[3], &
nIn
);

171 
aOut
 = 
	`sqlôe3_mÆloc
–
nIn
/2 );

172 if–
aOut
==0 ){

173  
TCL_ERROR
;

175 
nOut
 = 
	`sqlôe3Te°HexToBö
(
zIn
, 
nIn
, 
aOut
);

176 
out
 = 
	`f›í
(
zFûe
, "r+b");

177 if–
out
==0 ){

178 
out
 = 
	`f›í
(
zFûe
, "r+");

180 if–
out
==0 ){

181 
	`T˛_AµídResu…
(
öãΩ
, "ˇ¬Ÿ o≥¿ouçuàfûê", 
zFûe
, 0);

182  
TCL_ERROR
;

184 
	`f£ek
(
out
, 
off£t
, 
SEEK_SET
);

185 
wrôãn
 = ()
	`fwrôe
(
aOut
, 1, 
nOut
, 
out
);

186 
	`sqlôe3_‰ì
(
aOut
);

187 
	`f˛o£
(
out
);

188 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
wrôãn
));

189  
TCL_OK
;

190 
	}
}

199 
SQLITE_TCLAPI
 
	$hexio_gë_öt
(

200 * 
˛õ¡D©a
,

201 
T˛_I¡îp
 *
öãΩ
,

202 
objc
,

203 
T˛_Obj
 *
CONST
 
objv
[]

205 
vÆ
;

206 
nIn
, 
nOut
;

207 c⁄° *
zIn
;

208 *
aOut
;

209 
aNum
[4];

211 if–
objc
!=2 ){

212 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HEXDATA");

213  
TCL_ERROR
;

215 
zIn
 = (c⁄° *)
	`T˛_GëSåögFromObj
(
objv
[1], &
nIn
);

216 
aOut
 = 
	`sqlôe3_mÆloc
–
nIn
/2 );

217 if–
aOut
==0 ){

218  
TCL_ERROR
;

220 
nOut
 = 
	`sqlôe3Te°HexToBö
(
zIn
, 
nIn
, 
aOut
);

221 if–
nOut
>=4 ){

222 
	`mem˝y
(
aNum
, 
aOut
, 4);

224 
	`mem£t
(
aNum
, 0, (aNum));

225 
	`mem˝y
(&
aNum
[4-
nOut
], 
aOut
,ÇOut);

227 
	`sqlôe3_‰ì
(
aOut
);

228 
vÆ
 = (
aNum
[0]<<24) | (aNum[1]<<16) | (aNum[2]<<8) |áNum[3];

229 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
vÆ
));

230  
TCL_OK
;

231 
	}
}

239 
SQLITE_TCLAPI
 
	$hexio_ªndî_öt16
(

240 * 
˛õ¡D©a
,

241 
T˛_I¡îp
 *
öãΩ
,

242 
objc
,

243 
T˛_Obj
 *
CONST
 
objv
[]

245 
vÆ
;

246 
aNum
[10];

248 if–
objc
!=2 ){

249 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "INTEGER");

250  
TCL_ERROR
;

252 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[1], &
vÆ
ËË 
TCL_ERROR
;

253 
aNum
[0] = 
vÆ
>>8;

254 
aNum
[1] = 
vÆ
;

255 
	`sqlôe3Te°BöToHex
(
aNum
, 2);

256 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
((*)
aNum
, 4));

257  
TCL_OK
;

258 
	}
}

266 
SQLITE_TCLAPI
 
	$hexio_ªndî_öt32
(

267 * 
˛õ¡D©a
,

268 
T˛_I¡îp
 *
öãΩ
,

269 
objc
,

270 
T˛_Obj
 *
CONST
 
objv
[]

272 
vÆ
;

273 
aNum
[10];

275 if–
objc
!=2 ){

276 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "INTEGER");

277  
TCL_ERROR
;

279 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[1], &
vÆ
ËË 
TCL_ERROR
;

280 
aNum
[0] = 
vÆ
>>24;

281 
aNum
[1] = 
vÆ
>>16;

282 
aNum
[2] = 
vÆ
>>8;

283 
aNum
[3] = 
vÆ
;

284 
	`sqlôe3Te°BöToHex
(
aNum
, 4);

285 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
((*)
aNum
, 8));

286  
TCL_OK
;

287 
	}
}

296 
SQLITE_TCLAPI
 
	$utf8_to_utf8
(

297 * 
˛õ¡D©a
,

298 
T˛_I¡îp
 *
öãΩ
,

299 
objc
,

300 
T˛_Obj
 *
CONST
 
objv
[]

302 #ifde‡
SQLITE_DEBUG


303 
n
;

304 
nOut
;

305 c⁄° *
zOrig
;

306 *
z
;

307 if–
objc
!=2 ){

308 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HEX");

309  
TCL_ERROR
;

311 
zOrig
 = (*)
	`T˛_GëSåögFromObj
(
objv
[1], &
n
);

312 
z
 = 
	`sqlôe3_mÆloc
–
n
+3 );

313 
n
 = 
	`sqlôe3Te°HexToBö
(
zOrig
,Ç, 
z
);

314 
z
[
n
] = 0;

315 
nOut
 = 
	`sqlôe3Utf8To8
(
z
);

316 
	`sqlôe3Te°BöToHex
(
z
,
nOut
);

317 
	`T˛_AµídResu…
(
öãΩ
, (*)
z
, 0);

318 
	`sqlôe3_‰ì
(
z
);

319  
TCL_OK
;

321 
	`T˛_AµídResu…
(
öãΩ
,

324  
TCL_ERROR
;

326 
	}
}

328 
	$gëFts3V¨öt
(c⁄° *
p
, 
sqlôe_öt64
 *
v
){

329 c⁄° *
q
 = (c⁄° *Ë
p
;

330 
sqlôe_uöt64
 
x
 = 0, 
y
 = 1;

331  (*
q
 & 0x80) == 0x80 ){

332 
x
 +
y
 * (*
q
++ & 0x7f);

333 
y
 <<= 7;

335 
x
 +
y
 * (*
q
++);

336 *
v
 = (
sqlôe_öt64
Ë
x
;

337  (Ë(
q
 - (*)
p
);

338 
	}
}

347 
SQLITE_TCLAPI
 
	$ªad_·s3v¨öt
(

348 * 
˛õ¡D©a
,

349 
T˛_I¡îp
 *
öãΩ
,

350 
objc
,

351 
T˛_Obj
 *
CONST
 
objv
[]

353 
nBlob
;

354 *
zBlob
;

355 
sqlôe3_öt64
 
iVÆ
;

356 
nVÆ
;

358 if–
objc
!=3 ){

359 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "BLOB VARNAME");

360  
TCL_ERROR
;

362 
zBlob
 = 
	`T˛_GëByãAºayFromObj
(
objv
[1], &
nBlob
);

364 
nVÆ
 = 
	`gëFts3V¨öt
((*)
zBlob
, (
sqlôe3_öt64
 *)(&
iVÆ
));

365 
	`T˛_ObjSëV¨2
(
öãΩ
, 
objv
[2], 0, 
	`T˛_NewWideI¡Obj
(
iVÆ
), 0);

366 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
nVÆ
));

367  
TCL_OK
;

368 
	}
}

374 
	$Sqlôëe°_hexio_Inô
(
T˛_I¡îp
 *
öãΩ
){

376 *
zName
;

377 
T˛_ObjCmdProc
 *
xProc
;

378 } 
aObjCmd
[] = {

379 { "hexio_ªad", 
hexio_ªad
 },

380 { "hexio_wrôe", 
hexio_wrôe
 },

381 { "hexio_gë_öt", 
hexio_gë_öt
 },

382 { "hexio_ªndî_öt16", 
hexio_ªndî_öt16
 },

383 { "hexio_ªndî_öt32", 
hexio_ªndî_öt32
 },

384 { "utf8_to_utf8", 
utf8_to_utf8
 },

385 { "ªad_·s3v¨öt", 
ªad_·s3v¨öt
 },

387 
i
;

388 
i
=0; i<(
aObjCmd
)/(aObjCmd[0]); i++){

389 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
aObjCmd
[
i
].
zName
,áObjCmd[i].
xProc
, 0, 0);

391  
TCL_OK
;

392 
	}
}

	@test_init.c

28 
	~"sqlôeI¡.h
"

29 
	~<°rög.h
>

30 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

31 
	~"sqlôe_t˛.h
"

33 
	~"t˛.h
"

36 
	sWøµed
 {

37 
sqlôe3_pˇche_mëhods2
 
	mpˇche
;

38 
sqlôe3_mem_mëhods
 
	mmem
;

39 
sqlôe3_muãx_mëhods
 
	mmuãx
;

41 
	mmem_öô
;

42 
	mmem_Áû
;

43 
	mmuãx_öô
;

44 
	mmuãx_Áû
;

45 
	mpˇche_öô
;

46 
	mpˇche_Áû
;

47 } 
	gwøµed
;

49 
	$wrMemInô
(*
pAµD©a
){

50 
rc
;

51 if–
wøµed
.
mem_Áû
 ){

52 
rc
 = 
SQLITE_ERROR
;

54 
rc
 = 
wøµed
.
mem
.
	`xInô
(wøµed.mem.
pAµD©a
);

56 if–
rc
==
SQLITE_OK
 ){

57 
wøµed
.
mem_öô
 = 1;

59  
rc
;

60 
	}
}

61 
	$wrMemShutdown
(*
pAµD©a
){

62 
wøµed
.
mem
.
	`xShutdown
(wøµed.mem.
pAµD©a
);

63 
wøµed
.
mem_öô
 = 0;

64 
	}
}

65 *
	$wrMemMÆloc
(
n
Ë{ 
wøµed
.
mem
.
	`xMÆloc
“);
	}
}

66 
	$wrMemFªe
(*
p
Ë{
wøµed
.
mem
.
	`xFªe
’);
	}
}

67 *
	$wrMemRóŒoc
(*
p
, 
n
Ë{ 
wøµed
.
mem
.
	`xRóŒoc
’,Ç);
	}
}

68 
	$wrMemSize
(*
p
Ë{ 
wøµed
.
mem
.
	`xSize
’);
	}
}

69 
	$wrMemRoundup
(
n
Ë{ 
wøµed
.
mem
.
	`xRoundup
“);
	}
}

72 
	$wrMuãxInô
(){

73 
rc
;

74 if–
wøµed
.
muãx_Áû
 ){

75 
rc
 = 
SQLITE_ERROR
;

77 
rc
 = 
wøµed
.
muãx
.
	`xMuãxInô
();

79 if–
rc
==
SQLITE_OK
 ){

80 
wøµed
.
muãx_öô
 = 1;

82  
rc
;

83 
	}
}

84 
	$wrMuãxEnd
(){

85 
wøµed
.
muãx
.
	`xMuãxEnd
();

86 
wøµed
.
muãx_öô
 = 0;

87  
SQLITE_OK
;

88 
	}
}

89 
sqlôe3_muãx
 *
	$wrMuãxAŒoc
(
e
){

90  
wøµed
.
muãx
.
	`xMuãxAŒoc
(
e
);

91 
	}
}

92 
	$wrMuãxFªe
(
sqlôe3_muãx
 *
p
){

93 
wøµed
.
muãx
.
	`xMuãxFªe
(
p
);

94 
	}
}

95 
	$wrMuãxE¡î
(
sqlôe3_muãx
 *
p
){

96 
wøµed
.
muãx
.
	`xMuãxE¡î
(
p
);

97 
	}
}

98 
	$wrMuãxTry
(
sqlôe3_muãx
 *
p
){

99  
wøµed
.
muãx
.
	`xMuãxTry
(
p
);

100 
	}
}

101 
	$wrMuãxLóve
(
sqlôe3_muãx
 *
p
){

102 
wøµed
.
muãx
.
	`xMuãxLóve
(
p
);

103 
	}
}

104 
	$wrMuãxHñd
(
sqlôe3_muãx
 *
p
){

105  
wøµed
.
muãx
.
	`xMuãxHñd
(
p
);

106 
	}
}

107 
	$wrMuãxNŸhñd
(
sqlôe3_muãx
 *
p
){

108  
wøµed
.
muãx
.
	`xMuãxNŸhñd
(
p
);

109 
	}
}

113 
	$wrPCacheInô
(*
pArg
){

114 
rc
;

115 if–
wøµed
.
pˇche_Áû
 ){

116 
rc
 = 
SQLITE_ERROR
;

118 
rc
 = 
wøµed
.
pˇche
.
	`xInô
(wøµed.pˇche.
pArg
);

120 if–
rc
==
SQLITE_OK
 ){

121 
wøµed
.
pˇche_öô
 = 1;

123  
rc
;

124 
	}
}

125 
	$wrPCacheShutdown
(*
pArg
){

126 
wøµed
.
pˇche
.
	`xShutdown
(wøµed.pˇche.
pArg
);

127 
wøµed
.
pˇche_öô
 = 0;

128 
	}
}

130 
sqlôe3_pˇche
 *
	$wrPCacheCª©e
(
a
, 
b
, 
c
){

131  
wøµed
.
pˇche
.
	`xCª©e
(
a
, 
b
, 
c
);

132 
	}
}

133 
	$wrPCacheCachesize
(
sqlôe3_pˇche
 *
p
, 
n
){

134 
wøµed
.
pˇche
.
	`xCachesize
(
p
, 
n
);

135 
	}
}

136 
	$wrPCachePagecou¡
(
sqlôe3_pˇche
 *
p
){

137  
wøµed
.
pˇche
.
	`xPagecou¡
(
p
);

138 
	}
}

139 
sqlôe3_pˇche_∑ge
 *
	$wrPCacheFëch
(
sqlôe3_pˇche
 *
p
, 
a
, 
b
){

140  
wøµed
.
pˇche
.
	`xFëch
(
p
, 
a
, 
b
);

141 
	}
}

142 
	$wrPCacheU≈ö
(
sqlôe3_pˇche
 *
p
, 
sqlôe3_pˇche_∑ge
 *
a
, 
b
){

143 
wøµed
.
pˇche
.
	`xU≈ö
(
p
, 
a
, 
b
);

144 
	}
}

145 
	$wrPCacheRekey
(

146 
sqlôe3_pˇche
 *
p
,

147 
sqlôe3_pˇche_∑ge
 *
a
,

148 
b
,

149 
c


151 
wøµed
.
pˇche
.
	`xRekey
(
p
, 
a
, 
b
, 
c
);

152 
	}
}

153 
	$wrPCacheTrunˇã
(
sqlôe3_pˇche
 *
p
, 
a
){

154 
wøµed
.
pˇche
.
	`xTrunˇã
(
p
, 
a
);

155 
	}
}

156 
	$wrPCacheDe°roy
(
sqlôe3_pˇche
 *
p
){

157 
wøµed
.
pˇche
.
	`xDe°roy
(
p
);

158 
	}
}

160 
	$ö°ÆlInôWøµîs
(){

161 
sqlôe3_muãx_mëhods
 
muãxmëhods
 = {

162 
wrMuãxInô
, 
wrMuãxEnd
, 
wrMuãxAŒoc
,

163 
wrMuãxFªe
, 
wrMuãxE¡î
, 
wrMuãxTry
,

164 
wrMuãxLóve
, 
wrMuãxHñd
, 
wrMuãxNŸhñd


166 
sqlôe3_pˇche_mëhods2
 
pˇchemëhods
 = {

168 
wrPCacheInô
, 
wrPCacheShutdown
, 
wrPCacheCª©e
,

169 
wrPCacheCachesize
, 
wrPCachePagecou¡
, 
wrPCacheFëch
,

170 
wrPCacheU≈ö
, 
wrPCacheRekey
, 
wrPCacheTrunˇã
,

171 
wrPCacheDe°roy


173 
sqlôe3_mem_mëhods
 
memmëhods
 = {

174 
wrMemMÆloc
, 
wrMemFªe
, 
wrMemRóŒoc
,

175 
wrMemSize
, 
wrMemRoundup
, 
wrMemInô
,

176 
wrMemShutdown
,

180 
	`mem£t
(&
wøµed
, 0, (wrapped));

182 
	`sqlôe3_shutdown
();

183 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_GETMUTEX
, &
wøµed
.
muãx
);

184 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_GETMALLOC
, &
wøµed
.
mem
);

185 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_GETPCACHE2
, &
wøµed
.
pˇche
);

186 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_MUTEX
, &
muãxmëhods
);

187 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_MALLOC
, &
memmëhods
);

188 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_PCACHE2
, &
pˇchemëhods
);

189 
	}
}

191 
SQLITE_TCLAPI
 
	$öô_wøµî_ö°Æl
(

192 
Clõ¡D©a
 
˛õ¡D©a
,

193 
T˛_I¡îp
 *
öãΩ
,

194 
objc
,

195 
T˛_Obj
 *
CONST
 
objv
[]

197 
i
;

198 
	`ö°ÆlInôWøµîs
();

199 
i
=1; i<
objc
; i++){

200 *
z
 = 
	`T˛_GëSåög
(
objv
[
i
]);

201 if–
	`°rcmp
(
z
, "mem")==0 ){

202 
wøµed
.
mem_Áû
 = 1;

203 }if–
	`°rcmp
(
z
, "mutex")==0 ){

204 
wøµed
.
muãx_Áû
 = 1;

205 }if–
	`°rcmp
(
z
, "pcache")==0 ){

206 
wøµed
.
pˇche_Áû
 = 1;

208 
	`T˛_AµídResu…
(
öãΩ
, "Unknow¿¨gumít: \"", 
z
, "\"");

209  
TCL_ERROR
;

212  
TCL_OK
;

213 
	}
}

215 
SQLITE_TCLAPI
 
	$öô_wøµî_unö°Æl
(

216 
Clõ¡D©a
 
˛õ¡D©a
,

217 
T˛_I¡îp
 *
öãΩ
,

218 
objc
,

219 
T˛_Obj
 *
CONST
 
objv
[]

221 if–
objc
!=1 ){

222 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

223  
TCL_ERROR
;

226 
	`sqlôe3_shutdown
();

227 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_MUTEX
, &
wøµed
.
muãx
);

228 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_MALLOC
, &
wøµed
.
mem
);

229 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_PCACHE2
, &
wøµed
.
pˇche
);

230  
TCL_OK
;

231 
	}
}

233 
SQLITE_TCLAPI
 
	$öô_wøµî_˛ór
(

234 
Clõ¡D©a
 
˛õ¡D©a
,

235 
T˛_I¡îp
 *
öãΩ
,

236 
objc
,

237 
T˛_Obj
 *
CONST
 
objv
[]

239 if–
objc
!=1 ){

240 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

241  
TCL_ERROR
;

244 
wøµed
.
mem_Áû
 = 0;

245 
wøµed
.
muãx_Áû
 = 0;

246 
wøµed
.
pˇche_Áû
 = 0;

247  
TCL_OK
;

248 
	}
}

250 
SQLITE_TCLAPI
 
	$öô_wøµî_quîy
(

251 
Clõ¡D©a
 
˛õ¡D©a
,

252 
T˛_I¡îp
 *
öãΩ
,

253 
objc
,

254 
T˛_Obj
 *
CONST
 
objv
[]

256 
T˛_Obj
 *
pRë
;

258 if–
objc
!=1 ){

259 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

260  
TCL_ERROR
;

263 
pRë
 = 
	`T˛_NewObj
();

264 if–
wøµed
.
muãx_öô
 ){

265 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewSåögObj
("mutex", -1));

267 if–
wøµed
.
mem_öô
 ){

268 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewSåögObj
("mem", -1));

270 if–
wøµed
.
pˇche_öô
 ){

271 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewSåögObj
("pcache", -1));

274 
	`T˛_SëObjResu…
(
öãΩ
, 
pRë
);

275  
TCL_OK
;

276 
	}
}

278 
	$Sqlôëe°_öô_Inô
(
T˛_I¡îp
 *
öãΩ
){

280 *
zName
;

281 
T˛_ObjCmdProc
 *
xProc
;

282 } 
aObjCmd
[] = {

283 {"öô_wøµî_ö°Æl", 
öô_wøµî_ö°Æl
},

284 {"öô_wøµî_quîy", 
öô_wøµî_quîy
 },

285 {"öô_wøµî_unö°Æl", 
öô_wøµî_unö°Æl
},

286 {"öô_wøµî_˛ór", 
öô_wøµî_˛ór
}

288 
i
;

290 
i
=0; i<(
aObjCmd
)/(aObjCmd[0]); i++){

291 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
aObjCmd
[
i
].
zName
,áObjCmd[i].
xProc
, 0, 0);

294  
TCL_OK
;

295 
	}
}

	@test_intarray.c

17 
	~"ã°_öèºay.h
"

18 
	~<°rög.h
>

19 
	~<as£π.h
>

30 
	ssqlôe3_öèºay
 {

31 
	mn
;

32 
sqlôe3_öt64
 *
	ma
;

33 (*
	mxFªe
)(*);

37 
öèºay_vèb
 
	töèºay_vèb
;

38 
öèºay_curs‹
 
	töèºay_curs‹
;

41 
	söèºay_vèb
 {

42 
sqlôe3_vèb
 
	mba£
;

43 
sqlôe3_öèºay
 *
	mpC⁄ã¡
;

47 
	söèºay_curs‹
 {

48 
sqlôe3_vèb_curs‹
 
	mba£
;

49 
	mi
;

55 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


60 
	$öèºayFªe
(
sqlôe3_öèºay
 *
p
){

61 if–
p
->
xFªe
 ){

62 
p
->
	`xFªe
’->
a
);

64 
	`sqlôe3_‰ì
(
p
);

65 
	}
}

70 
	$öèºayDe°roy
(
sqlôe3_vèb
 *
p
){

71 
öèºay_vèb
 *
pVèb
 = (öèºay_vèb*)
p
;

72 
	`sqlôe3_‰ì
(
pVèb
);

74 
	}
}

79 
	$öèºayCª©e
(

80 
sqlôe3
 *
db
,

81 *
pAux
,

82 
¨gc
,

83 c⁄° *c⁄°*
¨gv
,

84 
sqlôe3_vèb
 **
µVèb
,

85 **
pzEº


87 
rc
 = 
SQLITE_NOMEM
;

88 
öèºay_vèb
 *
pVèb
 = 
	`sqlôe3_mÆloc64
((intarray_vtab));

90 if–
pVèb
 ){

91 
	`mem£t
(
pVèb
, 0, (
öèºay_vèb
));

92 
pVèb
->
pC⁄ã¡
 = (
sqlôe3_öèºay
*)
pAux
;

93 
rc
 = 
	`sqlôe3_de˛¨e_vèb
(
db
, "CREATE TABLE x(value INTEGER PRIMARY KEY)");

95 *
µVèb
 = (
sqlôe3_vèb
 *)
pVèb
;

96  
rc
;

97 
	}
}

102 
	$öèºayO≥n
(
sqlôe3_vèb
 *
pVTab
, 
sqlôe3_vèb_curs‹
 **
µCurs‹
){

103 
rc
 = 
SQLITE_NOMEM
;

104 
öèºay_curs‹
 *
pCur
;

105 
pCur
 = 
	`sqlôe3_mÆloc64
((
öèºay_curs‹
));

106 if–
pCur
 ){

107 
	`mem£t
(
pCur
, 0, (
öèºay_curs‹
));

108 *
µCurs‹
 = (
sqlôe3_vèb_curs‹
 *)
pCur
;

109 
rc
 = 
SQLITE_OK
;

111  
rc
;

112 
	}
}

117 
	$öèºayClo£
(
sqlôe3_vèb_curs‹
 *
cur
){

118 
öèºay_curs‹
 *
pCur
 = (öèºay_curs‹ *)
cur
;

119 
	`sqlôe3_‰ì
(
pCur
);

120  
SQLITE_OK
;

121 
	}
}

126 
	$öèºayCﬁumn
(
sqlôe3_vèb_curs‹
 *
cur
, 
sqlôe3_c⁄ãxt
 *
˘x
, 
i
){

127 
öèºay_curs‹
 *
pCur
 = (öèºay_curs‹*)
cur
;

128 
öèºay_vèb
 *
pVèb
 = (öèºay_vèb*)
cur
->pVtab;

129 if–
pCur
->
i
>=0 &&ÖCur->i<
pVèb
->
pC⁄ã¡
->
n
 ){

130 
	`sqlôe3_ªsu…_öt64
(
˘x
, 
pVèb
->
pC⁄ã¡
->
a
[
pCur
->
i
]);

132  
SQLITE_OK
;

133 
	}
}

138 
	$öèºayRowid
(
sqlôe3_vèb_curs‹
 *
cur
, 
sqlôe_öt64
 *
pRowid
){

139 
öèºay_curs‹
 *
pCur
 = (öèºay_curs‹ *)
cur
;

140 *
pRowid
 = 
pCur
->
i
;

141  
SQLITE_OK
;

142 
	}
}

144 
	$öèºayEof
(
sqlôe3_vèb_curs‹
 *
cur
){

145 
öèºay_curs‹
 *
pCur
 = (öèºay_curs‹ *)
cur
;

146 
öèºay_vèb
 *
pVèb
 = (öèºay_vèb *)
cur
->pVtab;

147  
pCur
->
i
>=
pVèb
->
pC⁄ã¡
->
n
;

148 
	}
}

153 
	$öèºayNext
(
sqlôe3_vèb_curs‹
 *
cur
){

154 
öèºay_curs‹
 *
pCur
 = (öèºay_curs‹ *)
cur
;

155 
pCur
->
i
++;

156  
SQLITE_OK
;

157 
	}
}

162 
	$öèºayFûãr
(

163 
sqlôe3_vèb_curs‹
 *
pVèbCurs‹
,

164 
idxNum
, c⁄° *
idxSå
,

165 
¨gc
, 
sqlôe3_vÆue
 **
¨gv


167 
öèºay_curs‹
 *
pCur
 = (öèºay_curs‹ *)
pVèbCurs‹
;

168 
pCur
->
i
 = 0;

169  
SQLITE_OK
;

170 
	}
}

175 
	$öèºayBe°Index
(
sqlôe3_vèb
 *
èb
, 
sqlôe3_ödex_öfo
 *
pIdxInfo
){

176  
SQLITE_OK
;

177 
	}
}

183 
sqlôe3_moduÀ
 
	göèºayModuÀ
 = {

185 
öèºayCª©e
,

186 
öèºayCª©e
,

187 
öèºayBe°Index
,

188 
öèºayDe°roy
,

189 
öèºayDe°roy
,

190 
öèºayO≥n
,

191 
öèºayClo£
,

192 
öèºayFûãr
,

193 
öèºayNext
,

194 
öèºayEof
,

195 
öèºayCﬁumn
,

196 
öèºayRowid
,

219 
SQLITE_API
 
	$sqlôe3_öèºay_¸óã
(

220 
sqlôe3
 *
db
,

221 c⁄° *
zName
,

222 
sqlôe3_öèºay
 **
µRëu∫


224 
rc
 = 
SQLITE_OK
;

225 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


226 
sqlôe3_öèºay
 *
p
;

228 *
µRëu∫
 = 
p
 = 
	`sqlôe3_mÆloc64
( (*p) );

229 if–
p
==0 ){

230  
SQLITE_NOMEM
;

232 
	`mem£t
(
p
, 0, (*p));

233 
rc
 = 
	`sqlôe3_¸óã_moduÀ_v2
(
db
, 
zName
, &
öèºayModuÀ
, 
p
,

234 ((*)(*))
öèºayFªe
);

235 if–
rc
==
SQLITE_OK
 ){

236 *
zSql
;

237 
zSql
 = 
	`sqlôe3_m¥ötf
("CREATE VIRTUAL TABLEÅemp.%Q USING %Q",

238 
zName
, zName);

239 
rc
 = 
	`sqlôe3_exec
(
db
, 
zSql
, 0, 0, 0);

240 
	`sqlôe3_‰ì
(
zSql
);

243  
rc
;

244 
	}
}

253 
SQLITE_API
 
	$sqlôe3_öèºay_böd
(

254 
sqlôe3_öèºay
 *
pI¡Aºay
,

255 
nEÀmíts
,

256 
sqlôe3_öt64
 *
aEÀmíts
,

257 (*
xFªe
)(*)

259 if–
pI¡Aºay
->
xFªe
 ){

260 
pI¡Aºay
->
	`xFªe
’I¡Aºay->
a
);

262 
pI¡Aºay
->
n
 = 
nEÀmíts
;

263 
pI¡Aºay
->
a
 = 
aEÀmíts
;

264 
pI¡Aºay
->
xFªe
 = xFree;

265  
SQLITE_OK
;

266 
	}
}

272 #ifde‡
SQLITE_TEST


273 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

274 
	~"sqlôe_t˛.h
"

276 
	~"t˛.h
"

277 #i‚de‡
SQLITE_TCLAPI


278 
	#SQLITE_TCLAPI


	)

285 
gëDbPoöãr
(
T˛_I¡îp
 *
öãΩ
, c⁄° *
zA
, 
sqlôe3
 **
µDb
);

286 *
sqlôe3Te°TextToPå
(const *);

287 
sqlôe3Te°MakePoöãrSå
(
T˛_I¡îp
*, *
zPå
, *);

288 c⁄° *
sqlôe3EºName
();

296 
SQLITE_TCLAPI
 
	$ã°_öèºay_¸óã
(

297 
Clõ¡D©a
 
˛õ¡D©a
,

298 
T˛_I¡îp
 *
öãΩ
,

299 
objc
,

300 
T˛_Obj
 *
CONST
 
objv
[]

302 
sqlôe3
 *
db
;

303 c⁄° *
zName
;

304 
sqlôe3_öèºay
 *
pAºay
;

305 
rc
 = 
SQLITE_OK
;

306 
zPå
[100];

308 if–
objc
!=3 ){

309 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB");

310  
TCL_ERROR
;

312 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

313 
zName
 = 
	`T˛_GëSåög
(
objv
[2]);

314 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


315 
rc
 = 
	`sqlôe3_öèºay_¸óã
(
db
, 
zName
, &
pAºay
);

317 if–
rc
!=
SQLITE_OK
 ){

318 
	`as£π
–
pAºay
==0 );

319 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), (*)0);

320  
TCL_ERROR
;

322 
	`sqlôe3Te°MakePoöãrSå
(
öãΩ
, 
zPå
, 
pAºay
);

323 
	`T˛_AµídResu…
(
öãΩ
, 
zPå
, (*)0);

324  
TCL_OK
;

325 
	}
}

332 
SQLITE_TCLAPI
 
	$ã°_öèºay_böd
(

333 
Clõ¡D©a
 
˛õ¡D©a
,

334 
T˛_I¡îp
 *
öãΩ
,

335 
objc
,

336 
T˛_Obj
 *
CONST
 
objv
[]

338 
sqlôe3_öèºay
 *
pAºay
;

339 
rc
 = 
SQLITE_OK
;

340 
i
, 
n
;

341 
sqlôe3_öt64
 *
a
;

343 if–
objc
<2 ){

344 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "INTARRAY");

345  
TCL_ERROR
;

347 
pAºay
 = (
sqlôe3_öèºay
*)
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[1]));

348 
n
 = 
objc
 - 2;

349 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


350 
a
 = 
	`sqlôe3_mÆloc64
–◊[0])*
n
 );

351 if–
a
==0 ){

352 
	`T˛_AµídResu…
(
öãΩ
, "SQLITE_NOMEM", (*)0);

353  
TCL_ERROR
;

355 
i
=0; i<
n
; i++){

356 
T˛_WideI¡
 
x
 = 0;

357 
	`T˛_GëWideI¡FromObj
(0, 
objv
[
i
+2], &
x
);

358 
a
[
i
] = 
x
;

360 
rc
 = 
	`sqlôe3_öèºay_böd
(
pAºay
, 
n
, 
a
, 
sqlôe3_‰ì
);

361 if–
rc
!=
SQLITE_OK
 ){

362 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), (*)0);

363  
TCL_ERROR
;

366  
TCL_OK
;

367 
	}
}

372 
	$Sqlôëe°öèºay_Inô
(
T˛_I¡îp
 *
öãΩ
){

374 *
zName
;

375 
T˛_ObjCmdProc
 *
xProc
;

376 *
˛õ¡D©a
;

377 } 
aObjCmd
[] = {

378 { "sqlôe3_öèºay_¸óã", 
ã°_öèºay_¸óã
, 0 },

379 { "sqlôe3_öèºay_böd", 
ã°_öèºay_böd
, 0 },

381 
i
;

382 
i
=0; i<(
aObjCmd
)/(aObjCmd[0]); i++){

383 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
aObjCmd
[
i
].
zName
,

384 
aObjCmd
[
i
].
xProc
,áObjCmd[i].
˛õ¡D©a
, 0);

386  
TCL_OK
;

387 
	}
}

	@test_intarray.h

77 
	~"sqlôe3.h
"

78 #i‚de‡
SQLITE_INTARRAY_H


79 
	#SQLITE_INTARRAY_H


	)

84 #ifde‡
__˝lu•lus


92 
sqlôe3_öèºay
 
	tsqlôe3_öèºay
;

105 
SQLITE_API
 
sqlôe3_öèºay_¸óã
(

106 
sqlôe3
 *
db
,

107 c⁄° *
zName
,

108 
sqlôe3_öèºay
 **
µRëu∫


118 
SQLITE_API
 
sqlôe3_öèºay_böd
(

119 
sqlôe3_öèºay
 *
pI¡Aºay
,

120 
nEÀmíts
,

121 
sqlôe3_öt64
 *
aEÀmíts
,

122 (*
xFªe
)(*)

125 #ifde‡
__˝lu•lus


	@test_journal.c

96 #i‡
SQLITE_TEST


98 
	~"sqlôe3.h
"

99 
	~"sqlôeI¡.h
"

104 
	#JT_MAX_PATHNAME
 512

	)

109 
	#JT_VFS_NAME
 "jt"

	)

111 
jt_fûe
 
	tjt_fûe
;

112 
	sjt_fûe
 {

113 
sqlôe3_fûe
 
	mba£
;

114 c⁄° *
	mzName
;

115 
	mÊags
;

118 
	meLock
;

119 
u32
 
	mnPage
;

120 
u32
 
	mnPagesize
;

121 
Bôvec
 *
	mpWrôabÀ
;

122 
u32
 *
	maCksum
;

123 
	mnSync
;

126 
sqlôe3_öt64
 
	miMaxOff
;

128 
jt_fûe
 *
	mpNext
;

129 
sqlôe3_fûe
 *
	mpRól
;

135 
jtClo£
(
sqlôe3_fûe
*);

136 
jtRód
(
sqlôe3_fûe
*, *, 
iAmt
, 
sqlôe3_öt64
 
iOf°
);

137 
jtWrôe
(
sqlôe3_fûe
*,c⁄° *,
iAmt
, 
sqlôe3_öt64
 
iOf°
);

138 
jtTrunˇã
(
sqlôe3_fûe
*, 
sqlôe3_öt64
 
size
);

139 
jtSync
(
sqlôe3_fûe
*, 
Êags
);

140 
jtFûeSize
(
sqlôe3_fûe
*, 
sqlôe3_öt64
 *
pSize
);

141 
jtLock
(
sqlôe3_fûe
*, );

142 
jtU∆ock
(
sqlôe3_fûe
*, );

143 
jtCheckRe£rvedLock
(
sqlôe3_fûe
*, *);

144 
jtFûeC⁄åﬁ
(
sqlôe3_fûe
*, 
›
, *
pArg
);

145 
jtSe˘‹Size
(
sqlôe3_fûe
*);

146 
jtDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
*);

151 
jtO≥n
(
sqlôe3_vfs
*, c⁄° *, 
sqlôe3_fûe
*, , *);

152 
jtDñëe
(
sqlôe3_vfs
*, c⁄° *
zName
, 
syncDú
);

153 
jtAc˚ss
(
sqlôe3_vfs
*, c⁄° *
zName
, 
Êags
, *);

154 
jtFuŒP©h«me
(
sqlôe3_vfs
*, c⁄° *
zName
, , *
zOut
);

155 *
jtDlO≥n
(
sqlôe3_vfs
*, c⁄° *
zFûíame
);

156 
jtDlEº‹
(
sqlôe3_vfs
*, 
nByã
, *
zEºMsg
);

157 (*
	$jtDlSym
(
sqlôe3_vfs
*,*, c⁄° *
zSymbﬁ
))();

158 
	`jtDlClo£
(
sqlôe3_vfs
*, *);

159 
	`jtR™dom√ss
(
sqlôe3_vfs
*, 
nByã
, *
zOut
);

160 
	`jtSÀï
(
sqlôe3_vfs
*, 
mi¸o£c⁄ds
);

161 
	`jtCuºítTime
(
sqlôe3_vfs
*, *);

162 
	`jtCuºítTimeI¡64
(
sqlôe3_vfs
*, 
sqlôe3_öt64
*);

163 
	`jtGëLa°Eº‹
(
sqlôe3_vfs
*, , *);

165 
sqlôe3_vfs
 
jt_vfs
 = {

167 (
jt_fûe
),

168 
JT_MAX_PATHNAME
,

170 
JT_VFS_NAME
,

172 
jtO≥n
,

173 
jtDñëe
,

174 
jtAc˚ss
,

175 
jtFuŒP©h«me
,

176 
jtDlO≥n
,

177 
jtDlEº‹
,

178 
jtDlSym
,

179 
jtDlClo£
,

180 
jtR™dom√ss
,

181 
jtSÀï
,

182 
jtCuºítTime
,

183 
jtGëLa°Eº‹
,

184 
jtCuºítTimeI¡64


185 
	}
};

187 
sqlôe3_io_mëhods
 
	gjt_io_mëhods
 = {

189 
jtClo£
,

190 
jtRód
,

191 
jtWrôe
,

192 
jtTrunˇã
,

193 
jtSync
,

194 
jtFûeSize
,

195 
jtLock
,

196 
jtU∆ock
,

197 
jtCheckRe£rvedLock
,

198 
jtFûeC⁄åﬁ
,

199 
jtSe˘‹Size
,

200 
jtDevi˚Ch¨a˘îi°ics


203 
	sJtGlobÆ
 {

204 
sqlôe3_vfs
 *
	mpVfs
;

205 
jt_fûe
 *
	mpLi°
;

207 
JtGlobÆ
 
	gg
 = {0, 0};

213 
	$íãrJtMuãx
(){

214 
	`sqlôe3_muãx_íãr
(
	`sqlôe3_muãx_Æloc
(
SQLITE_MUTEX_STATIC_PRNG
));

215 
	}
}

216 
	$ÀaveJtMuãx
(){

217 
	`sqlôe3_muãx_Àave
(
	`sqlôe3_muãx_Æloc
(
SQLITE_MUTEX_STATIC_PRNG
));

218 
	}
}

220 
sqlôe3_io_îr‹_≥ndög
;

221 
sqlôe3_io_îr‹_hô
;

222 
	$°›_i€º_simuœti⁄
(*
piSave
, *
piSave2
){

223 *
piSave
 = 
sqlôe3_io_îr‹_≥ndög
;

224 *
piSave2
 = 
sqlôe3_io_îr‹_hô
;

225 
sqlôe3_io_îr‹_≥ndög
 = -1;

226 
sqlôe3_io_îr‹_hô
 = 0;

227 
	}
}

228 
	$°¨t_i€º_simuœti⁄
(
iSave
, 
iSave2
){

229 
sqlôe3_io_îr‹_≥ndög
 = 
iSave
;

230 
sqlôe3_io_îr‹_hô
 = 
iSave2
;

231 
	}
}

238 
	$˛o£Tønß˘i⁄
(
jt_fûe
 *
p
){

239 
	`sqlôe3BôvecDe°roy
(
p
->
pWrôabÀ
);

240 
	`sqlôe3_‰ì
(
p
->
aCksum
);

241 
p
->
pWrôabÀ
 = 0;

242 
p
->
aCksum
 = 0;

243 
p
->
nSync
 = 0;

244 
	}
}

249 
	$jtClo£
(
sqlôe3_fûe
 *
pFûe
){

250 
jt_fûe
 **
µ
;

251 
jt_fûe
 *
p
 = (jt_fûê*)
pFûe
;

253 
	`˛o£Tønß˘i⁄
(
p
);

254 
	`íãrJtMuãx
();

255 if–
p
->
zName
 ){

256 
µ
=&
g
.
pLi°
; *µ!=
p
;Öp=&(*µ)->
pNext
);

257 *
µ
 = 
p
->
pNext
;

259 
	`ÀaveJtMuãx
();

260 
	`sqlôe3OsClo£
(
p
->
pRól
);

261  
SQLITE_OK
;

262 
	}
}

267 
	$jtRód
(

268 
sqlôe3_fûe
 *
pFûe
,

269 *
zBuf
,

270 
iAmt
,

271 
sqlôe_öt64
 
iOf°


273 
jt_fûe
 *
p
 = (jt_fûê*)
pFûe
;

274  
	`sqlôe3OsRód
(
p
->
pRól
, 
zBuf
, 
iAmt
, 
iOf°
);

275 
	}
}

292 
jt_fûe
 *
	$loˇãD©aba£H™dÀ
(c⁄° *
zJou∫Æ
, 
noLock
){

293 
jt_fûe
 *
pMaö
 = 0;

294 
	`íãrJtMuãx
();

295 
pMaö
=
g
.
pLi°
;ÖMaö;ÖMaöıMaö->
pNext
){

296 
nName
 = ()(
	`°æí
(
zJou∫Æ
) - strlen("-journal"));

297 if–(
pMaö
->
Êags
&
SQLITE_OPEN_MAIN_DB
)

298 && (()
	`°æí
(
pMaö
->
zName
)==
nName
)

299 && 0==
	`memcmp
(
pMaö
->
zName
, 
zJou∫Æ
, 
nName
)

300 && ((
pMaö
->
eLock
>=
SQLITE_LOCK_RESERVED
Ë|| 
noLock
)

305 
	`ÀaveJtMuãx
();

306  
pMaö
;

307 
	}
}

314 
u32
 
	$decodeUöt32
(c⁄° *
z
){

315  (
z
[0]<<24) + (z[1]<<16) + (z[2]<<8) + z[3];

316 
	}
}

322 
u32
 
	$gíCksum
(c⁄° *
z
, 
n
){

323 
i
;

324 
u32
 
cksum
 = 0;

325 
i
=0; i<
n
; i++){

326 
cksum
 = cksum + 
z
[
i
] + (cksum<<3);

328  
cksum
;

329 
	}
}

340 
	$decodeJou∫ÆHdr
(

341 c⁄° *
zBuf
,

342 
u32
 *
≤Rec
,

343 
u32
 *
≤Page
,

344 
u32
 *
≤Se˘‹
,

345 
u32
 *
≤Pagesize


347 
aMagic
[] = { 0xd9, 0xd5, 0x05, 0xf9, 0x20, 0xa1, 0x63, 0xd7 };

348 if–
	`memcmp
(
aMagic
, 
zBuf
, 8ËË 
SQLITE_ERROR
;

349 if–
≤Rec
 ) *≤Re¯
	`decodeUöt32
(&
zBuf
[8]);

350 if–
≤Page
 ) *≤Pagê
	`decodeUöt32
(&
zBuf
[16]);

351 if–
≤Se˘‹
 ) *≤Se˘‹ = 
	`decodeUöt32
(&
zBuf
[20]);

352 if–
≤Pagesize
 ) *≤Pagesizê
	`decodeUöt32
(&
zBuf
[24]);

353  
SQLITE_OK
;

354 
	}
}

360 
	$›íTønß˘i⁄
(
jt_fûe
 *
pMaö
, jt_fûê*
pJou∫Æ
){

361 *
aD©a
;

362 
sqlôe3_fûe
 *
p
 = 
pMaö
->
pRól
;

363 
rc
 = 
SQLITE_OK
;

365 
	`˛o£Tønß˘i⁄
(
pMaö
);

366 
aD©a
 = 
	`sqlôe3_mÆloc
(
pMaö
->
nPagesize
);

367 
pMaö
->
pWrôabÀ
 = 
	`sqlôe3BôvecCª©e
’Maö->
nPage
);

368 
pMaö
->
aCksum
 = 
	`sqlôe3_mÆloc
((
u32
Ë* (pMaö->
nPage
 + 1));

369 
pJou∫Æ
->
iMaxOff
 = 0;

371 if–!
pMaö
->
pWrôabÀ
 || !pMaö->
aCksum
 || !
aD©a
 ){

372 
rc
 = 
SQLITE_IOERR_NOMEM
;

373 }if–
pMaö
->
nPage
>0 ){

374 
u32
 
iTrunk
;

375 
iSave
;

376 
iSave2
;

378 
	`°›_i€º_simuœti⁄
(&
iSave
, &
iSave2
);

383 
rc
 = 
	`sqlôe3OsRód
(
p
, 
aD©a
, 
pMaö
->
nPagesize
, 0);

384 if–
rc
==
SQLITE_OK
 ){

385 
u32
 
nDbsize
 = 
	`decodeUöt32
(&
aD©a
[28]);

386 if–
nDbsize
>0 && 
	`memcmp
(&
aD©a
[24], &aData[92], 4)==0 ){

387 
u32
 
iPg
;

388 
iPg
=
nDbsize
+1; iPg<=
pMaö
->
nPage
; iPg++){

389 
	`sqlôe3BôvecSë
(
pMaö
->
pWrôabÀ
, 
iPg
);

393 
iTrunk
 = 
	`decodeUöt32
(&
aD©a
[32]);

394  
rc
==
SQLITE_OK
 && 
iTrunk
>0 ){

395 
u32
 
nLóf
;

396 
u32
 
iLóf
;

397 
sqlôe3_öt64
 
iOff
 = (
i64
)(
iTrunk
-1)*
pMaö
->
nPagesize
;

398 
rc
 = 
	`sqlôe3OsRód
(
p
, 
aD©a
, 
pMaö
->
nPagesize
, 
iOff
);

399 
nLóf
 = 
	`decodeUöt32
(&
aD©a
[4]);

400 
iLóf
=0; 
rc
==
SQLITE_OK
 && iLóf<
nLóf
; iLeaf++){

401 
u32
 
pgno
 = 
	`decodeUöt32
(&
aD©a
[8+4*
iLóf
]);

402 
	`sqlôe3BôvecSë
(
pMaö
->
pWrôabÀ
, 
pgno
);

404 
iTrunk
 = 
	`decodeUöt32
(
aD©a
);

408 if–
rc
==
SQLITE_OK
 ){

409 
ii
;

410 
ii
=0; 
rc
==
SQLITE_OK
 && ii<()
pMaö
->
nPage
; ii++){

411 
i64
 
iOff
 = (i64)(
pMaö
->
nPagesize
Ë* (i64)
ii
;

412 if–
iOff
==
PENDING_BYTE
 ) ;

413 
rc
 = 
	`sqlôe3OsRód
(
pMaö
->
pRól
, 
aD©a
,ÖMaö->
nPagesize
, 
iOff
);

414 
pMaö
->
aCksum
[
ii
] = 
	`gíCksum
(
aD©a
,ÖMaö->
nPagesize
);

415 if–
ii
+1==()
pMaö
->
nPage
 && 
rc
==
SQLITE_IOERR_SHORT_READ
 ){

416 
rc
 = 
SQLITE_OK
;

421 
	`°¨t_i€º_simuœti⁄
(
iSave
, 
iSave2
);

424 
	`sqlôe3_‰ì
(
aD©a
);

425  
rc
;

426 
	}
}

433 
	$ªadJou∫ÆFûe
(
jt_fûe
 *
p
, jt_fûê*
pMaö
){

434 
rc
 = 
SQLITE_OK
;

435 
zBuf
[28];

436 
sqlôe3_fûe
 *
pRól
 = 
p
->pReal;

437 
sqlôe3_öt64
 
iOff
 = 0;

438 
sqlôe3_öt64
 
iSize
 = 
p
->
iMaxOff
;

439 *
aPage
;

440 
iSave
;

441 
iSave2
;

443 
aPage
 = 
	`sqlôe3_mÆloc
(
pMaö
->
nPagesize
);

444 if–!
aPage
 ){

445  
SQLITE_IOERR_NOMEM
;

448 
	`°›_i€º_simuœti⁄
(&
iSave
, &
iSave2
);

450  
rc
==
SQLITE_OK
 && 
iOff
<
iSize
 ){

451 
u32
 
nRec
, 
nPage
, 
nSe˘‹
, 
nPagesize
;

452 
u32
 
ii
;

455 
rc
 = 
	`sqlôe3OsRód
(
pRól
, 
zBuf
, 28, 
iOff
);

456 if–
rc
!=
SQLITE_OK


457 || 
	`decodeJou∫ÆHdr
(
zBuf
, &
nRec
, &
nPage
, &
nSe˘‹
, &
nPagesize
)

459 
föish_rjf
;

461 
iOff
 +
nSe˘‹
;

463 if–
nRec
==0 ){

468 if–
iSize
>=(
iOff
+
nSe˘‹
) ){

469 
rc
 = 
	`sqlôe3OsRód
(
pRól
, 
zBuf
, 28, 
iOff
);

470 if–
rc
!=
SQLITE_OK
 || 0==
	`decodeJou∫ÆHdr
(
zBuf
, 0, 0, 0, 0) ){

474 
nRec
 = (
u32
)((
iSize
-
iOff
Ë/ (
pMaö
->
nPagesize
+8));

478 
ii
=0; 
rc
==
SQLITE_OK
 && ii<
nRec
 && 
iOff
<
iSize
; ii++){

479 
u32
 
pgno
;

480 
rc
 = 
	`sqlôe3OsRód
(
pRól
, 
zBuf
, 4, 
iOff
);

481 if–
rc
==
SQLITE_OK
 ){

482 
pgno
 = 
	`decodeUöt32
(
zBuf
);

483 if–
pgno
>0 &&Ögno<=
pMaö
->
nPage
 ){

484 if–0==
	`sqlôe3BôvecTe°
(
pMaö
->
pWrôabÀ
, 
pgno
) ){

485 
rc
 = 
	`sqlôe3OsRód
(
pRól
, 
aPage
, 
pMaö
->
nPagesize
, 
iOff
+4);

486 if–
rc
==
SQLITE_OK
 ){

487 
u32
 
cksum
 = 
	`gíCksum
(
aPage
, 
pMaö
->
nPagesize
);

488 
	`as£π
–
cksum
==
pMaö
->
aCksum
[
pgno
-1] );

491 
	`sqlôe3BôvecSë
(
pMaö
->
pWrôabÀ
, 
pgno
);

493 
iOff
 +(8 + 
pMaö
->
nPagesize
);

497 
iOff
 = ((iOf‡+ (
nSe˘‹
-1)) /ÇSector) *ÇSector;

500 
föish_rjf
:

501 
	`°¨t_i€º_simuœti⁄
(
iSave
, 
iSave2
);

502 
	`sqlôe3_‰ì
(
aPage
);

503 if–
rc
==
SQLITE_IOERR_SHORT_READ
 ){

504 
rc
 = 
SQLITE_OK
;

506  
rc
;

507 
	}
}

512 
	$jtWrôe
(

513 
sqlôe3_fûe
 *
pFûe
,

514 c⁄° *
zBuf
,

515 
iAmt
,

516 
sqlôe_öt64
 
iOf°


518 
rc
;

519 
jt_fûe
 *
p
 = (jt_fûê*)
pFûe
;

520 if–
p
->
Êags
&
SQLITE_OPEN_MAIN_JOURNAL
 ){

521 if–
iOf°
==0 ){

522 
jt_fûe
 *
pMaö
 = 
	`loˇãD©aba£H™dÀ
(
p
->
zName
, 0);

523 
	`as£π
–
pMaö
 );

525 if–
iAmt
==28 ){

528 
	`˛o£Tønß˘i⁄
(
pMaö
);

529 }if–
iAmt
!=12 ){

532 
u8
 *
z
 = (u8 *)
zBuf
;

533 
pMaö
->
nPage
 = 
	`decodeUöt32
(&
z
[16]);

534 
pMaö
->
nPagesize
 = 
	`decodeUöt32
(&
z
[24]);

535 if–
SQLITE_OK
!=(
rc
=
	`›íTønß˘i⁄
(
pMaö
, 
p
)) ){

536  
rc
;

540 if–
p
->
iMaxOff
<(
iOf°
 + 
iAmt
) ){

541 
p
->
iMaxOff
 = 
iOf°
 + 
iAmt
;

545 if–
p
->
Êags
&
SQLITE_OPEN_MAIN_DB
 &&Ö->
pWrôabÀ
 ){

546 if–
iAmt
<()
p
->
nPagesize


547 && 
p
->
nPagesize
%
iAmt
==0

548 && 
iOf°
>=(
PENDING_BYTE
+512)

549 && 
iOf°
+
iAmt
<=
PENDING_BYTE
+
p
->
nPagesize


557 
u32
 
pgno
 = (u32)(
iOf°
/
p
->
nPagesize
 + 1);

558 
	`as£π
–(
iAmt
==1||iAmt==()
p
->
nPagesize
) &&

559 ((
iOf°
+
iAmt
)%
p
->
nPagesize
)==0 );

560 
	`as£π
–
pgno
<=
p
->
nPage
 ||Ö->
nSync
>0 );

561 
	`as£π
–
pgno
>
p
->
nPage
 || 
	`sqlôe3BôvecTe°
’->
pWrôabÀ
,Ögno) );

565 
rc
 = 
	`sqlôe3OsWrôe
(
p
->
pRól
, 
zBuf
, 
iAmt
, 
iOf°
);

566 if–(
p
->
Êags
&
SQLITE_OPEN_MAIN_JOURNAL
Ë&& 
iAmt
==12 ){

567 
jt_fûe
 *
pMaö
 = 
	`loˇãD©aba£H™dÀ
(
p
->
zName
, 0);

568 
rc2
 = 
	`ªadJou∫ÆFûe
(
p
, 
pMaö
);

569 if–
rc
==
SQLITE_OK
 )Ñ¯
rc2
;

571  
rc
;

572 
	}
}

577 
	$jtTrunˇã
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe_öt64
 
size
){

578 
jt_fûe
 *
p
 = (jt_fûê*)
pFûe
;

579 if–
p
->
Êags
&
SQLITE_OPEN_MAIN_JOURNAL
 && 
size
==0 ){

581 
jt_fûe
 *
pMaö
 = 
	`loˇãD©aba£H™dÀ
(
p
->
zName
, 0);

582 
	`˛o£Tønß˘i⁄
(
pMaö
);

584 if–
p
->
Êags
&
SQLITE_OPEN_MAIN_DB
 &&Ö->
pWrôabÀ
 ){

585 
u32
 
pgno
;

586 
u32
 
lockög_∑ge
 = (u32)(
PENDING_BYTE
/
p
->
nPagesize
+1);

587 
pgno
=(
u32
)(
size
/
p
->
nPagesize
+1);Ögno<ı->
nPage
;Ögno++){

588 
	`as£π
–
pgno
==
lockög_∑ge
 || 
	`sqlôe3BôvecTe°
(
p
->
pWrôabÀ
,Ögno) );

591  
	`sqlôe3OsTrunˇã
(
p
->
pRól
, 
size
);

592 
	}
}

597 
	$jtSync
(
sqlôe3_fûe
 *
pFûe
, 
Êags
){

598 
jt_fûe
 *
p
 = (jt_fûê*)
pFûe
;

600 if–
p
->
Êags
&
SQLITE_OPEN_MAIN_JOURNAL
 ){

601 
rc
;

602 
jt_fûe
 *
pMaö
;

609 
pMaö
 = 
	`loˇãD©aba£H™dÀ
(
p
->
zName
, 0);

612 if–
pMaö
 &&ÖMaö->
pWrôabÀ
 ){

613 
pMaö
->
nSync
++;

614 
rc
 = 
	`ªadJou∫ÆFûe
(
p
, 
pMaö
);

615 if–
rc
!=
SQLITE_OK
 ){

616  
rc
;

621  
	`sqlôe3OsSync
(
p
->
pRól
, 
Êags
);

622 
	}
}

627 
	$jtFûeSize
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe_öt64
 *
pSize
){

628 
jt_fûe
 *
p
 = (jt_fûê*)
pFûe
;

629  
	`sqlôe3OsFûeSize
(
p
->
pRól
, 
pSize
);

630 
	}
}

635 
	$jtLock
(
sqlôe3_fûe
 *
pFûe
, 
eLock
){

636 
rc
;

637 
jt_fûe
 *
p
 = (jt_fûê*)
pFûe
;

638 
rc
 = 
	`sqlôe3OsLock
(
p
->
pRól
, 
eLock
);

639 if–
rc
==
SQLITE_OK
 && 
eLock
>
p
->eLock ){

640 
p
->
eLock
 =ÉLock;

642  
rc
;

643 
	}
}

648 
	$jtU∆ock
(
sqlôe3_fûe
 *
pFûe
, 
eLock
){

649 
rc
;

650 
jt_fûe
 *
p
 = (jt_fûê*)
pFûe
;

651 
rc
 = 
	`sqlôe3OsU∆ock
(
p
->
pRól
, 
eLock
);

652 if–
rc
==
SQLITE_OK
 && 
eLock
<
p
->eLock ){

653 
p
->
eLock
 =ÉLock;

655  
rc
;

656 
	}
}

661 
	$jtCheckRe£rvedLock
(
sqlôe3_fûe
 *
pFûe
, *
pResOut
){

662 
jt_fûe
 *
p
 = (jt_fûê*)
pFûe
;

663  
	`sqlôe3OsCheckRe£rvedLock
(
p
->
pRól
, 
pResOut
);

664 
	}
}

669 
	$jtFûeC⁄åﬁ
(
sqlôe3_fûe
 *
pFûe
, 
›
, *
pArg
){

670 
jt_fûe
 *
p
 = (jt_fûê*)
pFûe
;

671  
p
->
pRól
->
pMëhods
->
	`xFûeC⁄åﬁ
’->pRól, 
›
, 
pArg
);

672 
	}
}

677 
	$jtSe˘‹Size
(
sqlôe3_fûe
 *
pFûe
){

678 
jt_fûe
 *
p
 = (jt_fûê*)
pFûe
;

679  
	`sqlôe3OsSe˘‹Size
(
p
->
pRól
);

680 
	}
}

685 
	$jtDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
 *
pFûe
){

686 
jt_fûe
 *
p
 = (jt_fûê*)
pFûe
;

687  
	`sqlôe3OsDevi˚Ch¨a˘îi°ics
(
p
->
pRól
);

688 
	}
}

693 
	$jtO≥n
(

694 
sqlôe3_vfs
 *
pVfs
,

695 c⁄° *
zName
,

696 
sqlôe3_fûe
 *
pFûe
,

697 
Êags
,

698 *
pOutFœgs


700 
rc
;

701 
jt_fûe
 *
p
 = (jt_fûê*)
pFûe
;

702 
pFûe
->
pMëhods
 = 0;

703 
p
->
pRól
 = (
sqlôe3_fûe
 *)&p[1];

704 
p
->
pRól
->
pMëhods
 = 0;

705 
rc
 = 
	`sqlôe3OsO≥n
(
g
.
pVfs
, 
zName
, 
p
->
pRól
, 
Êags
, 
pOutFœgs
);

706 
	`as£π
–
rc
==
SQLITE_OK
 || 
p
->
pRól
->
pMëhods
==0 );

707 if–
rc
==
SQLITE_OK
 ){

708 
pFûe
->
pMëhods
 = &
jt_io_mëhods
;

709 
p
->
eLock
 = 0;

710 
p
->
zName
 = zName;

711 
p
->
Êags
 = flags;

712 
p
->
pNext
 = 0;

713 
p
->
pWrôabÀ
 = 0;

714 
p
->
aCksum
 = 0;

715 
	`íãrJtMuãx
();

716 if–
zName
 ){

717 
p
->
pNext
 = 
g
.
pLi°
;

718 
g
.
pLi°
 = 
p
;

720 
	`ÀaveJtMuãx
();

722  
rc
;

723 
	}
}

730 
	$jtDñëe
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zP©h
, 
dúSync
){

731 
nP©h
 = ()
	`°æí
(
zP©h
);

732 if–
nP©h
>8 && 0==
	`°rcmp
("-jou∫Æ", &
zP©h
[nPath-8]) ){

734 
jt_fûe
 *
pMaö
 = 
	`loˇãD©aba£H™dÀ
(
zP©h
, 0);

735 if–
pMaö
 ){

736 
	`˛o£Tønß˘i⁄
(
pMaö
);

740  
	`sqlôe3OsDñëe
(
g
.
pVfs
, 
zP©h
, 
dúSync
);

741 
	}
}

747 
	$jtAc˚ss
(

748 
sqlôe3_vfs
 *
pVfs
,

749 c⁄° *
zP©h
,

750 
Êags
,

751 *
pResOut


753  
	`sqlôe3OsAc˚ss
(
g
.
pVfs
, 
zP©h
, 
Êags
, 
pResOut
);

754 
	}
}

761 
	$jtFuŒP©h«me
(

762 
sqlôe3_vfs
 *
pVfs
,

763 c⁄° *
zP©h
,

764 
nOut
,

765 *
zOut


767  
	`sqlôe3OsFuŒP©h«me
(
g
.
pVfs
, 
zP©h
, 
nOut
, 
zOut
);

768 
	}
}

773 *
	$jtDlO≥n
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zP©h
){

774  
g
.
pVfs
->
	`xDlO≥n
(g.pVfs, 
zP©h
);

775 
	}
}

782 
	$jtDlEº‹
(
sqlôe3_vfs
 *
pVfs
, 
nByã
, *
zEºMsg
){

783 
g
.
pVfs
->
	`xDlEº‹
(g.pVfs, 
nByã
, 
zEºMsg
);

784 
	}
}

789 (*
	$jtDlSym
(
sqlôe3_vfs
 *
pVfs
, *
p
, c⁄° *
zSym
))(){

790  
g
.
pVfs
->
	`xDlSym
(g.pVfs, 
p
, 
zSym
);

791 
	}
}

796 
	$jtDlClo£
(
sqlôe3_vfs
 *
pVfs
, *
pH™dÀ
){

797 
g
.
pVfs
->
	`xDlClo£
(g.pVfs, 
pH™dÀ
);

798 
	}
}

804 
	$jtR™dom√ss
(
sqlôe3_vfs
 *
pVfs
, 
nByã
, *
zBufOut
){

805  
	`sqlôe3OsR™dom√ss
(
g
.
pVfs
, 
nByã
, 
zBufOut
);

806 
	}
}

812 
	$jtSÀï
(
sqlôe3_vfs
 *
pVfs
, 
nMi¸o
){

813  
	`sqlôe3OsSÀï
(
g
.
pVfs
, 
nMi¸o
);

814 
	}
}

819 
	$jtCuºítTime
(
sqlôe3_vfs
 *
pVfs
, *
pTimeOut
){

820  
g
.
pVfs
->
	`xCuºítTime
(g.pVfs, 
pTimeOut
);

821 
	}
}

825 
	$jtCuºítTimeI¡64
(
sqlôe3_vfs
 *
pVfs
, 
sqlôe3_öt64
 *
pTimeOut
){

826  
g
.
pVfs
->
	`xCuºítTimeI¡64
(g.pVfs, 
pTimeOut
);

827 
	}
}

829 
	$jtGëLa°Eº‹
(
sqlôe3_vfs
 *
pVfs
, 
n
, *
z
){

830  
g
.
pVfs
->
	`xGëLa°Eº‹
(g.pVfs, 
n
, 
z
);

831 
	}
}

844 
	$jt_ªgi°î
(*
zWøp
, 
isDeÁu…
){

845 
g
.
pVfs
 = 
	`sqlôe3_vfs_föd
(
zWøp
);

846 if–
g
.
pVfs
==0 ){

847  
SQLITE_ERROR
;

849 
jt_vfs
.
szOsFûe
 = (
jt_fûe
Ë+ 
g
.
pVfs
->szOsFile;

850 if–
g
.
pVfs
->
iVîsi⁄
==1 ){

851 
jt_vfs
.
iVîsi⁄
 = 1;

852 }if–
g
.
pVfs
->
xCuºítTimeI¡64
==0 ){

853 
jt_vfs
.
xCuºítTimeI¡64
 = 0;

855 
	`sqlôe3_vfs_ªgi°î
(&
jt_vfs
, 
isDeÁu…
);

856  
SQLITE_OK
;

857 
	}
}

862 
	$jt_uƒegi°î
(){

863 
	`sqlôe3_vfs_uƒegi°î
(&
jt_vfs
);

864 
	}
}

	@test_loadext.c

14 
	~<°rög.h
>

15 
	~"sqlôe3ext.h
"

16 
SQLITE_EXTENSION_INIT1


21 
	$hÆfFunc
(

22 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

23 
¨gc
,

24 
sqlôe3_vÆue
 **
¨gv


26 
	`sqlôe3_ªsu…_doubÀ
(
c⁄ãxt
, 0.5*
	`sqlôe3_vÆue_doubÀ
(
¨gv
[0]));

27 
	}
}

32 
	$°©usFunc
(

33 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

34 
¨gc
,

35 
sqlôe3_vÆue
 **
¨gv


37 
›
 = 0, 
mx
, 
cur
, 
ª£tFœg
, 
rc
;

38 if–
	`sqlôe3_vÆue_ty≥
(
¨gv
[0])==
SQLITE_INTEGER
 ){

39 
›
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[0]);

40 }if–
	`sqlôe3_vÆue_ty≥
(
¨gv
[0])==
SQLITE_TEXT
 ){

41 
i
;

42 c⁄° *
zName
;

44 c⁄° *
zName
;

45 
›
;

46 } 
aOp
[] = {

47 { "MEMORY_USED", 
SQLITE_STATUS_MEMORY_USED
 },

48 { "PAGECACHE_USED", 
SQLITE_STATUS_PAGECACHE_USED
 },

49 { "PAGECACHE_OVERFLOW", 
SQLITE_STATUS_PAGECACHE_OVERFLOW
 },

50 { "SCRATCH_USED", 
SQLITE_STATUS_SCRATCH_USED
 },

51 { "SCRATCH_OVERFLOW", 
SQLITE_STATUS_SCRATCH_OVERFLOW
 },

52 { "MALLOC_SIZE", 
SQLITE_STATUS_MALLOC_SIZE
 },

54 
nOp
 = (
aOp
)/(aOp[0]);

55 
zName
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

56 
i
=0; i<
nOp
; i++){

57 if–
	`°rcmp
(
aOp
[
i
].
zName
, zName)==0 ){

58 
›
 = 
aOp
[
i
].op;

62 if–
i
>=
nOp
 ){

63 *
zMsg
 = 
	`sqlôe3_m¥ötf
("unknow¿°©u†¥›îty: %s", 
zName
);

64 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
, 
zMsg
, -1);

65 
	`sqlôe3_‰ì
(
zMsg
);

69 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
, "unknown statusÅype", -1);

72 if–
¨gc
==2 ){

73 
ª£tFœg
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[1]);

75 
ª£tFœg
 = 0;

77 
rc
 = 
	`sqlôe3_°©us
(
›
, &
cur
, &
mx
, 
ª£tFœg
);

78 if–
rc
!=
SQLITE_OK
 ){

79 *
zMsg
 = 
	`sqlôe3_m¥ötf
("sqlôe3_°©us(%d,...Ëªtu∫†%d", 
›
, 
rc
);

80 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
, 
zMsg
, -1);

81 
	`sqlôe3_‰ì
(
zMsg
);

84 if–
¨gc
==2 ){

85 
	`sqlôe3_ªsu…_öt
(
c⁄ãxt
, 
mx
);

87 
	`sqlôe3_ªsu…_öt
(
c⁄ãxt
, 
cur
);

89 
	}
}

94 #ifde‡
_WIN32


95 
	$__de˛•ec
(
dŒexp‹t
)

97 
	$ã°lﬂdext_öô
(

98 
sqlôe3
 *
db
,

99 **
pzEºMsg
,

100 c⁄° 
sqlôe3_≠i_routöes
 *
pApi


102 
nEº
 = 0;

103 
	`SQLITE_EXTENSION_INIT2
(
pApi
);

104 
nEº
 |
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "hÆf", 1, 
SQLITE_ANY
, 0, 
hÆfFunc
, 0, 0);

105 
nEº
 |
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "sqlôe3_°©us", 1, 
SQLITE_ANY
, 0,

106 
°©usFunc
, 0, 0);

107 
nEº
 |
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "sqlôe3_°©us", 2, 
SQLITE_ANY
, 0,

108 
°©usFunc
, 0, 0);

109  
nEº
 ? 
SQLITE_ERROR
 : 
SQLITE_OK
;

110 
	}
}

115 #ifde‡
_WIN32


116 
	$__de˛•ec
(
dŒexp‹t
)

118 
	$ã°brokíext_öô
(

119 
sqlôe3
 *
db
,

120 **
pzEºMsg
,

121 c⁄° 
sqlôe3_≠i_routöes
 *
pApi


123 *
zEº
;

124 
	`SQLITE_EXTENSION_INIT2
(
pApi
);

125 
zEº
 = 
	`sqlôe3_m¥ötf
("broken!");

126 *
pzEºMsg
 = 
zEº
;

128 
	}
}

	@test_malloc.c

16 
	~"sqlôeI¡.h
"

17 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

18 
	~"sqlôe_t˛.h
"

20 
	~"t˛.h
"

22 
	~<°dlib.h
>

23 
	~<°rög.h
>

24 
	~<as£π.h
>

30 
	sMemFau…
 {

31 
	miCou¡down
;

32 
	mnRïót
;

33 
	mnBíign
;

34 
	mnFaû
;

35 
u8
 
	míabÀ
;

36 
	misIn°ÆÀd
;

37 
	misBíignMode
;

38 
sqlôe3_mem_mëhods
 
	mm
;

39 } 
	gmemÁu…
;

45 
	$sqlôe3Fau…
(){

46 
˙t
 = 0;

47 
˙t
++;

48 
	}
}

54 
	$Áu…simSãp
(){

55 if–
	`likñy
(!
memÁu…
.
íabÀ
) ){

58 if–
memÁu…
.
iCou¡down
>0 ){

59 
memÁu…
.
iCou¡down
--;

62 
	`sqlôe3Fau…
();

63 
memÁu…
.
nFaû
++;

64 if–
memÁu…
.
isBíignMode
>0 ){

65 
memÁu…
.
nBíign
++;

67 
memÁu…
.
nRïót
--;

68 if–
memÁu…
.
nRïót
<=0 ){

69 
memÁu…
.
íabÀ
 = 0;

72 
	}
}

78 *
	$Áu…simMÆloc
(
n
){

79 *
p
 = 0;

80 if–!
	`Áu…simSãp
() ){

81 
p
 = 
memÁu…
.
m
.
	`xMÆloc
(
n
);

83  
p
;

84 
	}
}

91 *
	$Áu…simRóŒoc
(*
pOld
, 
n
){

92 *
p
 = 0;

93 if–!
	`Áu…simSãp
() ){

94 
p
 = 
memÁu…
.
m
.
	`xRóŒoc
(
pOld
, 
n
);

96  
p
;

97 
	}
}

109 
	$Áu…simFªe
(*
p
){

110 
memÁu…
.
m
.
	`xFªe
(
p
);

111 
	}
}

112 
	$Áu…simSize
(*
p
){

113  
memÁu…
.
m
.
	`xSize
(
p
);

114 
	}
}

115 
	$Áu…simRoundup
(
n
){

116  
memÁu…
.
m
.
	`xRoundup
(
n
);

117 
	}
}

118 
	$Áu…simInô
(*
p
){

119  
memÁu…
.
m
.
	`xInô
(memÁu….m.
pAµD©a
);

120 
	}
}

121 
	$Áu…simShutdown
(*
p
){

122 
memÁu…
.
m
.
	`xShutdown
(memÁu….m.
pAµD©a
);

123 
	}
}

131 
	$Áu…simC⁄fig
(
nDñay
, 
nRïót
){

132 
memÁu…
.
iCou¡down
 = 
nDñay
;

133 
memÁu…
.
nRïót
 =ÇRepeat;

134 
memÁu…
.
nBíign
 = 0;

135 
memÁu…
.
nFaû
 = 0;

136 
memÁu…
.
íabÀ
 = 
nDñay
>=0;

145 
memÁu…
.
isBíignMode
 = 0;

146 
	}
}

152 
	$Áu…simFaûuªs
(){

153  
memÁu…
.
nFaû
;

154 
	}
}

160 
	$Áu…simBíignFaûuªs
(){

161  
memÁu…
.
nBíign
;

162 
	}
}

168 
	$Áu…simPídög
(){

169 if–
memÁu…
.
íabÀ
 ){

170  
memÁu…
.
iCou¡down
;

174 
	}
}

177 
	$Áu…simBegöBíign
(){

178 
memÁu…
.
isBíignMode
++;

179 
	}
}

180 
	$Áu…simEndBíign
(){

181 
memÁu…
.
isBíignMode
--;

182 
	}
}

188 
	$Áu…simIn°Æl
(
ö°Æl
){

189 
sqlôe3_mem_mëhods
 
m
 = {

190 
Áu…simMÆloc
,

191 
Áu…simFªe
,

192 
Áu…simRóŒoc
,

193 
Áu…simSize
,

194 
Áu…simRoundup
,

195 
Áu…simInô
,

196 
Áu…simShutdown
,

199 
rc
;

201 
ö°Æl
 = (install ? 1 : 0);

202 
	`as£π
(
memÁu…
.
isIn°ÆÀd
==1 || memfault.isInstalled==0);

204 if–
ö°Æl
==
memÁu…
.
isIn°ÆÀd
 ){

205  
SQLITE_ERROR
;

208 if–
ö°Æl
 ){

209 
rc
 = 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_GETMALLOC
, &
memÁu…
.
m
);

210 
	`as£π
(
memÁu…
.
m
.
xMÆloc
);

211 if–
rc
==
SQLITE_OK
 ){

212 
rc
 = 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_MALLOC
, &
m
);

214 
	`sqlôe3_ã°_c⁄åﬁ
(
SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS
,

215 
Áu…simBegöBíign
, 
Áu…simEndBíign


218 
sqlôe3_mem_mëhods
 
m2
;

219 
	`as£π
(
memÁu…
.
m
.
xMÆloc
);

223 
	`mem£t
(&
m2
, 0, (m2));

224 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_MALLOC
, &
m2
);

225 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_GETMALLOC
, &
m2
);

226 
	`as£π
–
	`memcmp
(&
m2
, &
memÁu…
.
m
, (m2))==0 );

228 
rc
 = 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_MALLOC
, &
memÁu…
.
m
);

229 
	`sqlôe3_ã°_c⁄åﬁ
(
SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS
,

233 if–
rc
==
SQLITE_OK
 ){

234 
memÁu…
.
isIn°ÆÀd
 = 1;

236  
rc
;

237 
	}
}

239 #ifde‡
SQLITE_TEST


249 c⁄° *
sqlôe3EºName
();

254 
	$poöãrToText
(*
p
, *
z
){

255 c⁄° 
zHex
[] = "0123456789abcdef";

256 
i
, 
k
;

257 
u
;

258 
sqlôe3_uöt64
 
n
;

259 if–
p
==0 ){

260 
	`°r˝y
(
z
, "0");

263 if–(
n
)==(
p
) ){

264 
	`mem˝y
(&
n
, &
p
, (p));

265 }if–(
u
)==(
p
) ){

266 
	`mem˝y
(&
u
, &
p
, (u));

267 
n
 = 
u
;

269 
	`as£π
( 0 );

271 
i
=0, 
k
=(
p
)*2-1; i<(p)*2; i++, k--){

272 
z
[
k
] = 
zHex
[
n
&0xf];

273 
n
 >>= 4;

275 
z
[(
p
)*2] = 0;

276 
	}
}

277 
	$hexToI¡
(
h
){

278 if–
h
>='0' && h<='9' ){

279  
h
 - '0';

280 }if–
h
>='a' && h<='f' ){

281  
h
 - 'a' + 10;

285 
	}
}

286 
	$ãxtToPoöãr
(c⁄° *
z
, **
µ
){

287 
sqlôe3_uöt64
 
n
 = 0;

288 
i
;

289 
u
;

290 
i
=0; i<(*)*2 && 
z
[0]; i++){

291 
v
;

292 
v
 = 
	`hexToI¡
(*
z
++);

293 if–
v
<0 )  
TCL_ERROR
;

294 
n
 =Ç*16 + 
v
;

296 if–*
z
!=0 )  
TCL_ERROR
;

297 if–(
n
)==(*
µ
) ){

298 
	`mem˝y
(
µ
, &
n
, (n));

299 }if–(
u
)==(*
µ
) ){

300 
u
 = ()
n
;

301 
	`mem˝y
(
µ
, &
u
, (u));

303 
	`as£π
( 0 );

305  
TCL_OK
;

306 
	}
}

313 
SQLITE_TCLAPI
 
	$ã°_mÆloc
(

314 * 
˛õ¡D©a
,

315 
T˛_I¡îp
 *
öãΩ
,

316 
objc
,

317 
T˛_Obj
 *
CONST
 
objv
[]

319 
nByã
;

320 *
p
;

321 
zOut
[100];

322 if–
objc
!=2 ){

323 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "NBYTES");

324  
TCL_ERROR
;

326 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[1], &
nByã
ËË 
TCL_ERROR
;

327 
p
 = 
	`sqlôe3_mÆloc
(()
nByã
);

328 
	`poöãrToText
(
p
, 
zOut
);

329 
	`T˛_AµídResu…
(
öãΩ
, 
zOut
, 
NULL
);

330  
TCL_OK
;

331 
	}
}

338 
SQLITE_TCLAPI
 
	$ã°_ªÆloc
(

339 * 
˛õ¡D©a
,

340 
T˛_I¡îp
 *
öãΩ
,

341 
objc
,

342 
T˛_Obj
 *
CONST
 
objv
[]

344 
nByã
;

345 *
pPri‹
, *
p
;

346 
zOut
[100];

347 if–
objc
!=3 ){

348 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "PRIOR NBYTES");

349  
TCL_ERROR
;

351 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
nByã
ËË 
TCL_ERROR
;

352 if–
	`ãxtToPoöãr
(
	`T˛_GëSåög
(
objv
[1]), &
pPri‹
) ){

353 
	`T˛_AµídResu…
(
öãΩ
, "badÖoöãr: ", 
	`T˛_GëSåög
(
objv
[1]), (*)0);

354  
TCL_ERROR
;

356 
p
 = 
	`sqlôe3_ªÆloc
(
pPri‹
, ()
nByã
);

357 
	`poöãrToText
(
p
, 
zOut
);

358 
	`T˛_AµídResu…
(
öãΩ
, 
zOut
, 
NULL
);

359  
TCL_OK
;

360 
	}
}

367 
SQLITE_TCLAPI
 
	$ã°_‰ì
(

368 * 
˛õ¡D©a
,

369 
T˛_I¡îp
 *
öãΩ
,

370 
objc
,

371 
T˛_Obj
 *
CONST
 
objv
[]

373 *
pPri‹
;

374 if–
objc
!=2 ){

375 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "PRIOR");

376  
TCL_ERROR
;

378 if–
	`ãxtToPoöãr
(
	`T˛_GëSåög
(
objv
[1]), &
pPri‹
) ){

379 
	`T˛_AµídResu…
(
öãΩ
, "badÖoöãr: ", 
	`T˛_GëSåög
(
objv
[1]), (*)0);

380  
TCL_ERROR
;

382 
	`sqlôe3_‰ì
(
pPri‹
);

383  
TCL_OK
;

384 
	}
}

389 
sqlôe3Te°HexToBö
(const *, , *);

390 
sqlôe3Te°BöToHex
(*,);

398 
SQLITE_TCLAPI
 
	$ã°_mem£t
(

399 * 
˛õ¡D©a
,

400 
T˛_I¡îp
 *
öãΩ
,

401 
objc
,

402 
T˛_Obj
 *
CONST
 
objv
[]

404 *
p
;

405 
size
, 
n
, 
i
;

406 *
zHex
;

407 *
zOut
;

408 
zBö
[100];

410 if–
objc
!=4 ){

411 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "ADDRESS SIZE HEX");

412  
TCL_ERROR
;

414 if–
	`ãxtToPoöãr
(
	`T˛_GëSåög
(
objv
[1]), &
p
) ){

415 
	`T˛_AµídResu…
(
öãΩ
, "badÖoöãr: ", 
	`T˛_GëSåög
(
objv
[1]), (*)0);

416  
TCL_ERROR
;

418 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
size
) ){

419  
TCL_ERROR
;

421 if–
size
<=0 ){

422 
	`T˛_AµídResu…
(
öãΩ
, "size must beÖositive", (*)0);

423  
TCL_ERROR
;

425 
zHex
 = 
	`T˛_GëSåögFromObj
(
objv
[3], &
n
);

426 if–
n
>(
zBö
)*2 )Ç = (zBin)*2;

427 
n
 = 
	`sqlôe3Te°HexToBö
(
zHex
,Ç, 
zBö
);

428 if–
n
==0 ){

429 
	`T˛_AµídResu…
(
öãΩ
, "no data", (*)0);

430  
TCL_ERROR
;

432 
zOut
 = 
p
;

433 
i
=0; i<
size
; i++){

434 
zOut
[
i
] = 
zBö
[i%
n
];

436  
TCL_OK
;

437 
	}
}

444 
SQLITE_TCLAPI
 
	$ã°_memgë
(

445 * 
˛õ¡D©a
,

446 
T˛_I¡îp
 *
öãΩ
,

447 
objc
,

448 
T˛_Obj
 *
CONST
 
objv
[]

450 *
p
;

451 
size
, 
n
;

452 *
zBö
;

453 
zHex
[100];

455 if–
objc
!=3 ){

456 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "ADDRESS SIZE");

457  
TCL_ERROR
;

459 if–
	`ãxtToPoöãr
(
	`T˛_GëSåög
(
objv
[1]), &
p
) ){

460 
	`T˛_AµídResu…
(
öãΩ
, "badÖoöãr: ", 
	`T˛_GëSåög
(
objv
[1]), (*)0);

461  
TCL_ERROR
;

463 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
size
) ){

464  
TCL_ERROR
;

466 if–
size
<=0 ){

467 
	`T˛_AµídResu…
(
öãΩ
, "size must beÖositive", (*)0);

468  
TCL_ERROR
;

470 
zBö
 = 
p
;

471  
size
>0 ){

472 if–
size
>((
zHex
)-1)/2 ){

473 
n
 = ((
zHex
)-1)/2;

475 
n
 = 
size
;

477 
	`mem˝y
(
zHex
, 
zBö
, 
n
);

478 
zBö
 +
n
;

479 
size
 -
n
;

480 
	`sqlôe3Te°BöToHex
(
zHex
, 
n
);

481 
	`T˛_AµídResu…
(
öãΩ
, 
zHex
, (*)0);

483  
TCL_OK
;

484 
	}
}

491 
SQLITE_TCLAPI
 
	$ã°_mem‹y_u£d
(

492 * 
˛õ¡D©a
,

493 
T˛_I¡îp
 *
öãΩ
,

494 
objc
,

495 
T˛_Obj
 *
CONST
 
objv
[]

497 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
(
	`sqlôe3_mem‹y_u£d
()));

498  
TCL_OK
;

499 
	}
}

506 
SQLITE_TCLAPI
 
	$ã°_mem‹y_highw©î
(

507 * 
˛õ¡D©a
,

508 
T˛_I¡îp
 *
öãΩ
,

509 
objc
,

510 
T˛_Obj
 *
CONST
 
objv
[]

512 
ª£tFœg
 = 0;

513 if–
objc
!=1 && objc!=2 ){

514 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "?RESET?");

515  
TCL_ERROR
;

517 if–
objc
==2 ){

518 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[1], &
ª£tFœg
ËË 
TCL_ERROR
;

520 
	`T˛_SëObjResu…
(
öãΩ
,

521 
	`T˛_NewWideI¡Obj
(
	`sqlôe3_mem‹y_highw©î
(
ª£tFœg
)));

522  
TCL_OK
;

523 
	}
}

531 
SQLITE_TCLAPI
 
	$ã°_memdebug_backåa˚
(

532 * 
˛õ¡D©a
,

533 
T˛_I¡îp
 *
öãΩ
,

534 
objc
,

535 
T˛_Obj
 *
CONST
 
objv
[]

537 
dïth
;

538 if–
objc
!=2 ){

539 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DEPT");

540  
TCL_ERROR
;

542 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[1], &
dïth
ËË 
TCL_ERROR
;

543 #ifde‡
SQLITE_MEMDEBUG


545 
	`sqlôe3MemdebugBackåa˚
();

546 
	`sqlôe3MemdebugBackåa˚
(
dïth
);

549  
TCL_OK
;

550 
	}
}

557 
SQLITE_TCLAPI
 
	$ã°_memdebug_dump
(

558 * 
˛õ¡D©a
,

559 
T˛_I¡îp
 *
öãΩ
,

560 
objc
,

561 
T˛_Obj
 *
CONST
 
objv
[]

563 if–
objc
!=2 ){

564 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "FILENAME");

565  
TCL_ERROR
;

567 #i‡
	`deföed
(
SQLITE_MEMDEBUG
Ë|| deföed(
SQLITE_MEMORY_SIZE
) \

568 || 
	`deföed
(
SQLITE_POW2_MEMORY_SIZE
)

570 
	`sqlôe3MemdebugDump
(const *);

571 
	`sqlôe3MemdebugDump
(
	`T˛_GëSåög
(
objv
[1]));

574  
TCL_OK
;

575 
	}
}

582 
SQLITE_TCLAPI
 
	$ã°_memdebug_mÆloc_cou¡
(

583 * 
˛õ¡D©a
,

584 
T˛_I¡îp
 *
öãΩ
,

585 
objc
,

586 
T˛_Obj
 *
CONST
 
objv
[]

588 
nMÆloc
 = -1;

589 if–
objc
!=1 ){

590 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

591  
TCL_ERROR
;

593 #i‡
	`deföed
(
SQLITE_MEMDEBUG
)

595 
	`sqlôe3MemdebugMÆlocCou¡
();

596 
nMÆloc
 = 
	`sqlôe3MemdebugMÆlocCou¡
();

599 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
nMÆloc
));

600  
TCL_OK
;

601 
	}
}

622 
SQLITE_TCLAPI
 
	$ã°_memdebug_Áû
(

623 * 
˛õ¡D©a
,

624 
T˛_I¡îp
 *
öãΩ
,

625 
objc
,

626 
T˛_Obj
 *
CONST
 
objv
[]

628 
ii
;

629 
iFaû
;

630 
nRïót
 = 1;

631 
T˛_Obj
 *
pBíignC¡
 = 0;

632 
nBíign
;

633 
nFaû
 = 0;

635 if–
objc
<2 ){

636 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "COUNTER ?OPTIONS?");

637  
TCL_ERROR
;

639 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[1], &
iFaû
ËË 
TCL_ERROR
;

641 
ii
=2; ii<
objc
; ii+=2){

642 
nO±i⁄
;

643 *
zO±i⁄
 = 
	`T˛_GëSåögFromObj
(
objv
[
ii
], &
nO±i⁄
);

644 *
zEº
 = 0;

646 if–
nO±i⁄
>1 && 
	`°∫cmp
(
zO±i⁄
, "-repeat",ÇOption)==0 ){

647 if–
ii
==(
objc
-1) ){

648 
zEº
 = "optionÑequiresánárgument: ";

650 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[
ii
+1], &
nRïót
) ){

651  
TCL_ERROR
;

654 }if–
nO±i⁄
>1 && 
	`°∫cmp
(
zO±i⁄
, "-benigncnt",ÇOption)==0 ){

655 if–
ii
==(
objc
-1) ){

656 
zEº
 = "optionÑequiresánárgument: ";

658 
pBíignC¡
 = 
objv
[
ii
+1];

661 
zEº
 = "unknown option: ";

664 if–
zEº
 ){

665 
	`T˛_AµídResu…
(
öãΩ
, 
zEº
, 
zO±i⁄
, 0);

666  
TCL_ERROR
;

670 
nBíign
 = 
	`Áu…simBíignFaûuªs
();

671 
nFaû
 = 
	`Áu…simFaûuªs
();

672 
	`Áu…simC⁄fig
(
iFaû
, 
nRïót
);

674 if–
pBíignC¡
 ){

675 
	`T˛_ObjSëV¨2
(
öãΩ
, 
pBíignC¡
, 0, 
	`T˛_NewI¡Obj
(
nBíign
), 0);

677 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
nFaû
));

678  
TCL_OK
;

679 
	}
}

688 
SQLITE_TCLAPI
 
	$ã°_memdebug_≥ndög
(

689 * 
˛õ¡D©a
,

690 
T˛_I¡îp
 *
öãΩ
,

691 
objc
,

692 
T˛_Obj
 *
CONST
 
objv
[]

694 
nPídög
;

695 if–
objc
!=1 ){

696 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

697  
TCL_ERROR
;

699 
nPídög
 = 
	`Áu…simPídög
();

700 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
nPídög
));

701  
TCL_OK
;

702 
	}
}

709 
	gsqlôe3_memdebug_tôÀ_cou¡
 = 0;

721 
SQLITE_TCLAPI
 
	$ã°_memdebug_£âôÀ
(

722 * 
˛õ¡D©a
,

723 
T˛_I¡îp
 *
öãΩ
,

724 
objc
,

725 
T˛_Obj
 *
CONST
 
objv
[]

727 
sqlôe3_memdebug_tôÀ_cou¡
++;

728 if–
objc
!=2 ){

729 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "TITLE");

730  
TCL_ERROR
;

732 #ifde‡
SQLITE_MEMDEBUG


734 c⁄° *
zTôÀ
;

735 
	`sqlôe3MemdebugSëtôÀ
(const *);

736 
zTôÀ
 = 
	`T˛_GëSåög
(
objv
[1]);

737 
	`sqlôe3MemdebugSëtôÀ
(
zTôÀ
);

740  
TCL_OK
;

741 
	}
}

743 
	#MALLOC_LOG_FRAMES
 10

	)

744 
	#MALLOC_LOG_KEYINTS
 ( \

746 )

	)

747 
T˛_HashTabÀ
 
	gaMÆlocLog
;

748 
	gmÆlocLogE«bÀd
 = 0;

750 
MÆlocLog
 
	tMÆlocLog
;

751 
	sMÆlocLog
 {

752 
	mnCÆl
;

753 
	mnByã
;

756 #ifde‡
SQLITE_MEMDEBUG


757 
	$ã°_memdebug_ˇŒback
(
nByã
, 
nFøme
, **
aFøme
){

758 if–
mÆlocLogE«bÀd
 ){

759 
MÆlocLog
 *
pLog
;

760 
T˛_HashE¡ry
 *
pE¡ry
;

761 
isNew
;

763 
aKey
[
MALLOC_LOG_KEYINTS
];

764 
nKey
 = ()*
MALLOC_LOG_KEYINTS
;

766 
	`mem£t
(
aKey
, 0, 
nKey
);

767 if–((*)*
nFøme
)<
nKey
 ){

768 
nKey
 = 
nFøme
*(*);

770 
	`mem˝y
(
aKey
, 
aFøme
, 
nKey
);

772 
pE¡ry
 = 
	`T˛_Cª©eHashE¡ry
(&
aMÆlocLog
, (c⁄° *)
aKey
, &
isNew
);

773 if–
isNew
 ){

774 
pLog
 = (
MÆlocLog
 *)
	`T˛_AŒoc
((MallocLog));

775 
	`mem£t
(
pLog
, 0, (
MÆlocLog
));

776 
	`T˛_SëHashVÆue
(
pE¡ry
, (
Clõ¡D©a
)
pLog
);

778 
pLog
 = (
MÆlocLog
 *)
	`T˛_GëHashVÆue
(
pE¡ry
);

781 
pLog
->
nCÆl
++;

782 
pLog
->
nByã
 +=ÇByte;

784 
	}
}

787 
	$ã°_memdebug_log_˛ór
(){

788 
T˛_HashSórch
 
£¨ch
;

789 
T˛_HashE¡ry
 *
pE¡ry
;

791 
pE¡ry
=
	`T˛_Fú°HashE¡ry
(&
aMÆlocLog
, &
£¨ch
);

792 
pE¡ry
;

793 
pE¡ry
=
	`T˛_NextHashE¡ry
(&
£¨ch
)

795 
MÆlocLog
 *
pLog
 = (MÆlocLog *)
	`T˛_GëHashVÆue
(
pE¡ry
);

796 
	`T˛_Fªe
((*)
pLog
);

798 
	`T˛_DñëeHashTabÀ
(&
aMÆlocLog
);

799 
	`T˛_InôHashTabÀ
(&
aMÆlocLog
, 
MALLOC_LOG_KEYINTS
);

800 
	}
}

802 
SQLITE_TCLAPI
 
	$ã°_memdebug_log
(

803 * 
˛õ¡D©a
,

804 
T˛_I¡îp
 *
öãΩ
,

805 
objc
,

806 
T˛_Obj
 *
CONST
 
objv
[]

808 
isInô
 = 0;

809 
iSub
;

811 c⁄° *
MB_°rs
[] = { "start", "stop", "dump", "clear", "sync" };

812 
	eMB_íum
 {

813 
MB_LOG_START
, 
MB_LOG_STOP
, 
MB_LOG_DUMP
, 
MB_LOG_CLEAR
, 
MB_LOG_SYNC


816 if–!
isInô
 ){

817 #ifde‡
SQLITE_MEMDEBUG


818 
	`sqlôe3MemdebugBackåa˚CÆlback
(

819 (*
xBackåa˚
)(, , **));

820 
	`sqlôe3MemdebugBackåa˚CÆlback
(
ã°_memdebug_ˇŒback
);

822 
	`T˛_InôHashTabÀ
(&
aMÆlocLog
, 
MALLOC_LOG_KEYINTS
);

823 
isInô
 = 1;

826 if–
objc
<2 ){

827 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "SUB-COMMAND ...");

829 if–
	`T˛_GëIndexFromObj
(
öãΩ
, 
objv
[1], 
MB_°rs
, "sub-comm™d", 0, &
iSub
) ){

830  
TCL_ERROR
;

833  (
MB_íum
)
iSub
 ){

834 
MB_LOG_START
:

835 
mÆlocLogE«bÀd
 = 1;

837 
MB_LOG_STOP
:

838 
mÆlocLogE«bÀd
 = 0;

840 
MB_LOG_DUMP
: {

841 
T˛_HashSórch
 
£¨ch
;

842 
T˛_HashE¡ry
 *
pE¡ry
;

843 
T˛_Obj
 *
pRë
 = 
	`T˛_NewObj
();

845 
	`as£π
((
T˛_WideI¡
)>=(*));

848 
pE¡ry
=
	`T˛_Fú°HashE¡ry
(&
aMÆlocLog
, &
£¨ch
);

849 
pE¡ry
;

850 
pE¡ry
=
	`T˛_NextHashE¡ry
(&
£¨ch
)

852 
T˛_Obj
 *
≠EÀm
[
MALLOC_LOG_FRAMES
+2];

853 
MÆlocLog
 *
pLog
 = (MÆlocLog *)
	`T˛_GëHashVÆue
(
pE¡ry
);

854 
T˛_WideI¡
 *
aKey
 = (T˛_WideI¡ *)
	`T˛_GëHashKey
(&
aMÆlocLog
, 
pE¡ry
);

855 
ii
;

857 
≠EÀm
[0] = 
	`T˛_NewI¡Obj
(
pLog
->
nCÆl
);

858 
≠EÀm
[1] = 
	`T˛_NewI¡Obj
(
pLog
->
nByã
);

859 
ii
=0; ii<
MALLOC_LOG_FRAMES
; ii++){

860 
≠EÀm
[
ii
+2] = 
	`T˛_NewWideI¡Obj
(
aKey
[ii]);

863 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
,

864 
	`T˛_NewLi°Obj
(
MALLOC_LOG_FRAMES
+2, 
≠EÀm
)

868 
	`T˛_SëObjResu…
(
öãΩ
, 
pRë
);

871 
MB_LOG_CLEAR
: {

872 
	`ã°_memdebug_log_˛ór
();

876 
MB_LOG_SYNC
: {

877 #ifde‡
SQLITE_MEMDEBUG


878 
	`sqlôe3MemdebugSync
();

879 
	`ã°_memdebug_log_˛ór
();

880 
mÆlocLogE«bÀd
 = 1;

881 
	`sqlôe3MemdebugSync
();

887  
TCL_OK
;

888 
	}
}

900 
SQLITE_TCLAPI
 
	$ã°_c⁄fig_s¸©ch
(

901 * 
˛õ¡D©a
,

902 
T˛_I¡îp
 *
öãΩ
,

903 
objc
,

904 
T˛_Obj
 *
CONST
 
objv
[]

906 
sz
, 
N
, 
rc
;

907 
T˛_Obj
 *
pResu…
;

908 *
buf
 = 0;

909 if–
objc
!=3 ){

910 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "SIZE N");

911  
TCL_ERROR
;

913 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[1], &
sz
ËË 
TCL_ERROR
;

914 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
N
ËË 
TCL_ERROR
;

915 
	`‰ì
(
buf
);

916 if–
sz
<0 ){

917 
buf
 = 0;

918 
rc
 = 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_SCRATCH
, (*)0, 0, 0);

920 
buf
 = 
	`mÆloc
–
sz
*
N
 + 1 );

921 
rc
 = 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_SCRATCH
, 
buf
, 
sz
, 
N
);

923 
pResu…
 = 
	`T˛_NewObj
();

924 
	`T˛_Li°ObjAµídEÀmít
(0, 
pResu…
, 
	`T˛_NewI¡Obj
(
rc
));

925 
	`T˛_Li°ObjAµídEÀmít
(0, 
pResu…
, 
	`T˛_NewI¡Obj
(
N
));

926 
	`T˛_SëObjResu…
(
öãΩ
, 
pResu…
);

927  
TCL_OK
;

928 
	}
}

940 
SQLITE_TCLAPI
 
	$ã°_c⁄fig_∑geˇche
(

941 * 
˛õ¡D©a
,

942 
T˛_I¡îp
 *
öãΩ
,

943 
objc
,

944 
T˛_Obj
 *
CONST
 
objv
[]

946 
sz
, 
N
;

947 
T˛_Obj
 *
pRes
;

948 *
buf
 = 0;

949 if–
objc
!=3 ){

950 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "SIZE N");

951  
TCL_ERROR
;

953 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[1], &
sz
ËË 
TCL_ERROR
;

954 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
N
ËË 
TCL_ERROR
;

955 
	`‰ì
(
buf
);

956 
buf
 = 0;

959 
pRes
 = 
	`T˛_NewObj
();

960 
	`T˛_Li°ObjAµídEÀmít
(0, 
pRes
, 
	`T˛_NewI¡Obj
(
sqlôe3GlobÆC⁄fig
.
szPage
));

961 
	`T˛_Li°ObjAµídEÀmít
(0, 
pRes
, 
	`T˛_NewI¡Obj
(
sqlôe3GlobÆC⁄fig
.
nPage
));

962 
	`T˛_SëObjResu…
(
öãΩ
, 
pRes
);

964 if–
sz
<0 ){

965 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_PAGECACHE
, (*)0, 0, 0);

967 
buf
 = 
	`mÆloc
–
sz
*
N
 );

968 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_PAGECACHE
, 
buf
, 
sz
, 
N
);

970  
TCL_OK
;

971 
	}
}

983 
SQLITE_TCLAPI
 
	$ã°_Æt_pˇche
(

984 * 
˛õ¡D©a
,

985 
T˛_I¡îp
 *
öãΩ
,

986 
objc
,

987 
T˛_Obj
 *
CONST
 
objv
[]

989 
ö°ÆlFœg
;

990 
disˇrdCh™˚
 = 0;

991 
¥ngSìd
 = 0;

992 
highSåess
 = 0;

993 
	`ö°ÆlTe°PCache
(,,,);

994 if–
objc
<2 || objc>5 ){

995 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
,

997  
TCL_ERROR
;

999 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[1], &
ö°ÆlFœg
ËË 
TCL_ERROR
;

1000 if–
objc
>=3 && 
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
disˇrdCh™˚
) ){

1001  
TCL_ERROR
;

1003 if–
objc
>=4 && 
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
¥ngSìd
) ){

1004  
TCL_ERROR
;

1006 if–
objc
>=5 && 
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[4], &
highSåess
) ){

1007  
TCL_ERROR
;

1009 if–
disˇrdCh™˚
<0 || discardChance>100 ){

1010 
	`T˛_AµídResu…
(
öãΩ
, "discard-chance should be between 0ánd 100",

1012  
TCL_ERROR
;

1014 
	`ö°ÆlTe°PCache
(
ö°ÆlFœg
, ()
disˇrdCh™˚
, ()
¥ngSìd
,

1015 ()
highSåess
);

1016  
TCL_OK
;

1017 
	}
}

1024 
SQLITE_TCLAPI
 
	$ã°_c⁄fig_mem°©us
(

1025 * 
˛õ¡D©a
,

1026 
T˛_I¡îp
 *
öãΩ
,

1027 
objc
,

1028 
T˛_Obj
 *
CONST
 
objv
[]

1030 
íabÀ
, 
rc
;

1031 if–
objc
!=2 ){

1032 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "BOOLEAN");

1033  
TCL_ERROR
;

1035 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[1], &
íabÀ
ËË 
TCL_ERROR
;

1036 
rc
 = 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_MEMSTATUS
, 
íabÀ
);

1037 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

1038  
TCL_OK
;

1039 
	}
}

1045 
SQLITE_TCLAPI
 
	$ã°_c⁄fig_lookaside
(

1046 * 
˛õ¡D©a
,

1047 
T˛_I¡îp
 *
öãΩ
,

1048 
objc
,

1049 
T˛_Obj
 *
CONST
 
objv
[]

1051 
sz
, 
˙t
;

1052 
T˛_Obj
 *
pRë
;

1053 if–
objc
!=3 ){

1054 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "SIZE COUNT");

1055  
TCL_ERROR
;

1057 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[1], &
sz
ËË 
TCL_ERROR
;

1058 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
˙t
ËË 
TCL_ERROR
;

1059 
pRë
 = 
	`T˛_NewObj
();

1060 
	`T˛_Li°ObjAµídEÀmít
(

1061 
öãΩ
, 
pRë
, 
	`T˛_NewI¡Obj
(
sqlôe3GlobÆC⁄fig
.
szLookaside
)

1063 
	`T˛_Li°ObjAµídEÀmít
(

1064 
öãΩ
, 
pRë
, 
	`T˛_NewI¡Obj
(
sqlôe3GlobÆC⁄fig
.
nLookaside
)

1066 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_LOOKASIDE
, 
sz
, 
˙t
);

1067 
	`T˛_SëObjResu…
(
öãΩ
, 
pRë
);

1068  
TCL_OK
;

1069 
	}
}

1079 
SQLITE_TCLAPI
 
	$ã°_db_c⁄fig_lookaside
(

1080 * 
˛õ¡D©a
,

1081 
T˛_I¡îp
 *
öãΩ
,

1082 
objc
,

1083 
T˛_Obj
 *
CONST
 
objv
[]

1085 
rc
;

1086 
sz
, 
˙t
;

1087 
sqlôe3
 *
db
;

1088 
bufid
;

1089 
azBuf
[2][10000];

1090 
	`gëDbPoöãr
(
T˛_I¡îp
*, c⁄° *, 
sqlôe3
**);

1091 if–
objc
!=5 ){

1092 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "BUFID SIZE COUNT");

1093  
TCL_ERROR
;

1095 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

1096 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
bufid
ËË 
TCL_ERROR
;

1097 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
sz
ËË 
TCL_ERROR
;

1098 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[4], &
˙t
ËË 
TCL_ERROR
;

1099 if–
bufid
==0 ){

1100 
rc
 = 
	`sqlôe3_db_c⁄fig
(
db
, 
SQLITE_DBCONFIG_LOOKASIDE
, (*)0, 
sz
, 
˙t
);

1101 }if–
bufid
>=1 && bufid<=2 && 
sz
*
˙t
<=(
azBuf
[0]) ){

1102 
rc
 = 
	`sqlôe3_db_c⁄fig
(
db
, 
SQLITE_DBCONFIG_LOOKASIDE
, 
azBuf
[
bufid
], 
sz
,
˙t
);

1104 
	`T˛_AµídResu…
(
öãΩ
, "illegalárguments - see documentation", (*)0);

1105  
TCL_ERROR
;

1107 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

1108  
TCL_OK
;

1109 
	}
}

1114 
SQLITE_TCLAPI
 
	$ã°_c⁄fig_hóp
(

1115 * 
˛õ¡D©a
,

1116 
T˛_I¡îp
 *
öãΩ
,

1117 
objc
,

1118 
T˛_Obj
 *
CONST
 
objv
[]

1120 *
zBuf
;

1121 
nByã
;

1122 
nMöAŒoc
;

1123 
rc
;

1125 
T˛_Obj
 * 
CONST
 *
aArg
 = &
objv
[1];

1126 
nArg
 = 
objc
-1;

1128 if–
nArg
!=2 ){

1129 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "NBYTE NMINALLOC");

1130  
TCL_ERROR
;

1132 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
aArg
[0], &
nByã
ËË 
TCL_ERROR
;

1133 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
aArg
[1], &
nMöAŒoc
ËË 
TCL_ERROR
;

1135 if–
nByã
==0 ){

1136 
	`‰ì
–
zBuf
 );

1137 
zBuf
 = 0;

1138 
rc
 = 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_HEAP
, (*)0, 0, 0);

1140 
zBuf
 = 
	`ªÆloc
(zBuf, 
nByã
);

1141 
rc
 = 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_HEAP
, 
zBuf
, 
nByã
, 
nMöAŒoc
);

1144 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_VOLATILE
);

1145  
TCL_OK
;

1146 
	}
}

1151 
SQLITE_TCLAPI
 
	$ã°_c⁄fig_hóp_size
(

1152 * 
˛õ¡D©a
,

1153 
T˛_I¡îp
 *
öãΩ
,

1154 
objc
,

1155 
T˛_Obj
 *
CONST
 
objv
[]

1157 
nByã
;

1158 
rc
;

1160 
T˛_Obj
 * 
CONST
 *
aArg
 = &
objv
[1];

1161 
nArg
 = 
objc
-1;

1163 if–
nArg
!=1 ){

1164 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "NBYTE");

1165  
TCL_ERROR
;

1167 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
aArg
[0], &
nByã
ËË 
TCL_ERROR
;

1169 
rc
 = 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_WIN32_HEAPSIZE
, 
nByã
);

1171 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_VOLATILE
);

1172  
TCL_OK
;

1173 
	}
}

1181 
SQLITE_TCLAPI
 
	$ã°_c⁄fig_îr‹
(

1182 * 
˛õ¡D©a
,

1183 
T˛_I¡îp
 *
öãΩ
,

1184 
objc
,

1185 
T˛_Obj
 *
CONST
 
objv
[]

1187 
sqlôe3
 *
db
;

1188 
	`gëDbPoöãr
(
T˛_I¡îp
*, c⁄° *, 
sqlôe3
**);

1190 if–
objc
!=2 && objc!=1 ){

1191 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "[DB]");

1192  
TCL_ERROR
;

1194 if–
objc
==2 ){

1195 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

1196 if–
	`sqlôe3_db_c⁄fig
(
db
, 99999)!=
SQLITE_ERROR
 ){

1197 
	`T˛_AµídResu…
(
öãΩ
,

1200  
TCL_ERROR
;

1203 if–
	`sqlôe3_c⁄fig
(99999)!=
SQLITE_ERROR
 ){

1204 
	`T˛_AµídResu…
(
öãΩ
,

1207  
TCL_ERROR
;

1210  
TCL_OK
;

1211 
	}
}

1219 
SQLITE_TCLAPI
 
	$ã°_c⁄fig_uri
(

1220 * 
˛õ¡D©a
,

1221 
T˛_I¡îp
 *
öãΩ
,

1222 
objc
,

1223 
T˛_Obj
 *
CONST
 
objv
[]

1225 
rc
;

1226 
bO≥nUri
;

1228 if–
objc
!=2 ){

1229 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "BOOL");

1230  
TCL_ERROR
;

1232 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[1], &
bO≥nUri
) ){

1233  
TCL_ERROR
;

1236 
rc
 = 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_URI
, 
bO≥nUri
);

1237 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_VOLATILE
);

1239  
TCL_OK
;

1240 
	}
}

1248 
SQLITE_TCLAPI
 
	$ã°_c⁄fig_cis
(

1249 * 
˛õ¡D©a
,

1250 
T˛_I¡îp
 *
öãΩ
,

1251 
objc
,

1252 
T˛_Obj
 *
CONST
 
objv
[]

1254 
rc
;

1255 
bU£Cis
;

1257 if–
objc
!=2 ){

1258 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "BOOL");

1259  
TCL_ERROR
;

1261 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[1], &
bU£Cis
) ){

1262  
TCL_ERROR
;

1265 
rc
 = 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_COVERING_INDEX_SCAN
, 
bU£Cis
);

1266 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_VOLATILE
);

1268  
TCL_OK
;

1269 
	}
}

1276 
SQLITE_TCLAPI
 
	$ã°_c⁄fig_pmasz
(

1277 * 
˛õ¡D©a
,

1278 
T˛_I¡îp
 *
öãΩ
,

1279 
objc
,

1280 
T˛_Obj
 *
CONST
 
objv
[]

1282 
rc
;

1283 
iPmaSz
;

1285 if–
objc
!=2 ){

1286 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "BOOL");

1287  
TCL_ERROR
;

1289 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[1], &
iPmaSz
) ){

1290  
TCL_ERROR
;

1293 
rc
 = 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_PMASZ
, 
iPmaSz
);

1294 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_VOLATILE
);

1296  
TCL_OK
;

1297 
	}
}

1306 
SQLITE_TCLAPI
 
	$ã°_dump_memsys3
(

1307 * 
˛õ¡D©a
,

1308 
T˛_I¡îp
 *
öãΩ
,

1309 
objc
,

1310 
T˛_Obj
 *
CONST
 
objv
[]

1312 if–
objc
!=2 ){

1313 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "FILENAME");

1314  
TCL_ERROR
;

1317  
	`SQLITE_PTR_TO_INT
(
˛õ¡D©a
) ){

1319 #ifde‡
SQLITE_ENABLE_MEMSYS3


1320 
	`sqlôe3Memsys3Dump
(const *);

1321 
	`sqlôe3Memsys3Dump
(
	`T˛_GëSåög
(
objv
[1]));

1326 #ifde‡
SQLITE_ENABLE_MEMSYS5


1327 
	`sqlôe3Memsys5Dump
(const *);

1328 
	`sqlôe3Memsys5Dump
(
	`T˛_GëSåög
(
objv
[1]));

1333  
TCL_OK
;

1334 
	}
}

1342 
SQLITE_TCLAPI
 
	$ã°_°©us
(

1343 * 
˛õ¡D©a
,

1344 
T˛_I¡îp
 *
öãΩ
,

1345 
objc
,

1346 
T˛_Obj
 *
CONST
 
objv
[]

1348 
rc
, 
iVÆue
, 
mxVÆue
;

1349 
i
, 
›
 = 0, 
ª£tFœg
;

1350 c⁄° *
zOpName
;

1352 c⁄° *
zName
;

1353 
›
;

1354 } 
aOp
[] = {

1355 { "SQLITE_STATUS_MEMORY_USED", 
SQLITE_STATUS_MEMORY_USED
 },

1356 { "SQLITE_STATUS_MALLOC_SIZE", 
SQLITE_STATUS_MALLOC_SIZE
 },

1357 { "SQLITE_STATUS_PAGECACHE_USED", 
SQLITE_STATUS_PAGECACHE_USED
 },

1358 { "SQLITE_STATUS_PAGECACHE_OVERFLOW", 
SQLITE_STATUS_PAGECACHE_OVERFLOW
 },

1359 { "SQLITE_STATUS_PAGECACHE_SIZE", 
SQLITE_STATUS_PAGECACHE_SIZE
 },

1360 { "SQLITE_STATUS_SCRATCH_USED", 
SQLITE_STATUS_SCRATCH_USED
 },

1361 { "SQLITE_STATUS_SCRATCH_OVERFLOW", 
SQLITE_STATUS_SCRATCH_OVERFLOW
 },

1362 { "SQLITE_STATUS_SCRATCH_SIZE", 
SQLITE_STATUS_SCRATCH_SIZE
 },

1363 { "SQLITE_STATUS_PARSER_STACK", 
SQLITE_STATUS_PARSER_STACK
 },

1364 { "SQLITE_STATUS_MALLOC_COUNT", 
SQLITE_STATUS_MALLOC_COUNT
 },

1366 
T˛_Obj
 *
pResu…
;

1367 if–
objc
!=3 ){

1368 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "PARAMETER RESETFLAG");

1369  
TCL_ERROR
;

1371 
zOpName
 = 
	`T˛_GëSåög
(
objv
[1]);

1372 
i
=0; i<
	`AºaySize
(
aOp
); i++){

1373 if–
	`°rcmp
(
aOp
[
i
].
zName
, 
zOpName
)==0 ){

1374 
›
 = 
aOp
[
i
].op;

1378 if–
i
>=
	`AºaySize
(
aOp
) ){

1379 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[1], &
›
ËË 
TCL_ERROR
;

1381 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[2], &
ª£tFœg
ËË 
TCL_ERROR
;

1382 
iVÆue
 = 0;

1383 
mxVÆue
 = 0;

1384 
rc
 = 
	`sqlôe3_°©us
(
›
, &
iVÆue
, &
mxVÆue
, 
ª£tFœg
);

1385 
pResu…
 = 
	`T˛_NewObj
();

1386 
	`T˛_Li°ObjAµídEÀmít
(0, 
pResu…
, 
	`T˛_NewI¡Obj
(
rc
));

1387 
	`T˛_Li°ObjAµídEÀmít
(0, 
pResu…
, 
	`T˛_NewI¡Obj
(
iVÆue
));

1388 
	`T˛_Li°ObjAµídEÀmít
(0, 
pResu…
, 
	`T˛_NewI¡Obj
(
mxVÆue
));

1389 
	`T˛_SëObjResu…
(
öãΩ
, 
pResu…
);

1390  
TCL_OK
;

1391 
	}
}

1399 
SQLITE_TCLAPI
 
	$ã°_db_°©us
(

1400 * 
˛õ¡D©a
,

1401 
T˛_I¡îp
 *
öãΩ
,

1402 
objc
,

1403 
T˛_Obj
 *
CONST
 
objv
[]

1405 
rc
, 
iVÆue
, 
mxVÆue
;

1406 
i
, 
›
 = 0, 
ª£tFœg
;

1407 c⁄° *
zOpName
;

1408 
sqlôe3
 *
db
;

1409 
	`gëDbPoöãr
(
T˛_I¡îp
*, c⁄° *, 
sqlôe3
**);

1411 c⁄° *
zName
;

1412 
›
;

1413 } 
aOp
[] = {

1414 { "LOOKASIDE_USED", 
SQLITE_DBSTATUS_LOOKASIDE_USED
 },

1415 { "CACHE_USED", 
SQLITE_DBSTATUS_CACHE_USED
 },

1416 { "SCHEMA_USED", 
SQLITE_DBSTATUS_SCHEMA_USED
 },

1417 { "STMT_USED", 
SQLITE_DBSTATUS_STMT_USED
 },

1418 { "LOOKASIDE_HIT", 
SQLITE_DBSTATUS_LOOKASIDE_HIT
 },

1419 { "LOOKASIDE_MISS_SIZE", 
SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE
 },

1420 { "LOOKASIDE_MISS_FULL", 
SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL
 },

1421 { "CACHE_HIT", 
SQLITE_DBSTATUS_CACHE_HIT
 },

1422 { "CACHE_MISS", 
SQLITE_DBSTATUS_CACHE_MISS
 },

1423 { "CACHE_WRITE", 
SQLITE_DBSTATUS_CACHE_WRITE
 },

1424 { "DEFERRED_FKS", 
SQLITE_DBSTATUS_DEFERRED_FKS
 },

1425 { "CACHE_USED_SHARED", 
SQLITE_DBSTATUS_CACHE_USED_SHARED
 },

1427 
T˛_Obj
 *
pResu…
;

1428 if–
objc
!=4 ){

1429 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB PARAMETER RESETFLAG");

1430  
TCL_ERROR
;

1432 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

1433 
zOpName
 = 
	`T˛_GëSåög
(
objv
[2]);

1434 if–
	`memcmp
(
zOpName
, "SQLITE_", 7)==0 ) zOpName += 7;

1435 if–
	`memcmp
(
zOpName
, "DBSTATUS_", 9)==0 ) zOpName += 9;

1436 
i
=0; i<
	`AºaySize
(
aOp
); i++){

1437 if–
	`°rcmp
(
aOp
[
i
].
zName
, 
zOpName
)==0 ){

1438 
›
 = 
aOp
[
i
].op;

1442 if–
i
>=
	`AºaySize
(
aOp
) ){

1443 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
›
ËË 
TCL_ERROR
;

1445 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[3], &
ª£tFœg
ËË 
TCL_ERROR
;

1446 
iVÆue
 = 0;

1447 
mxVÆue
 = 0;

1448 
rc
 = 
	`sqlôe3_db_°©us
(
db
, 
›
, &
iVÆue
, &
mxVÆue
, 
ª£tFœg
);

1449 
pResu…
 = 
	`T˛_NewObj
();

1450 
	`T˛_Li°ObjAµídEÀmít
(0, 
pResu…
, 
	`T˛_NewI¡Obj
(
rc
));

1451 
	`T˛_Li°ObjAµídEÀmít
(0, 
pResu…
, 
	`T˛_NewI¡Obj
(
iVÆue
));

1452 
	`T˛_Li°ObjAµídEÀmít
(0, 
pResu…
, 
	`T˛_NewI¡Obj
(
mxVÆue
));

1453 
	`T˛_SëObjResu…
(
öãΩ
, 
pResu…
);

1454  
TCL_OK
;

1455 
	}
}

1460 
SQLITE_TCLAPI
 
	$ã°_ö°Æl_mÆloc_Áu…sim
(

1461 * 
˛õ¡D©a
,

1462 
T˛_I¡îp
 *
öãΩ
,

1463 
objc
,

1464 
T˛_Obj
 *
CONST
 
objv
[]

1466 
rc
;

1467 
isIn°Æl
;

1469 if–
objc
!=2 ){

1470 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "BOOLEAN");

1471  
TCL_ERROR
;

1473 if–
TCL_OK
!=
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[1], &
isIn°Æl
) ){

1474  
TCL_ERROR
;

1476 
rc
 = 
	`Áu…simIn°Æl
(
isIn°Æl
);

1477 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_VOLATILE
);

1478  
TCL_OK
;

1479 
	}
}

1484 
SQLITE_TCLAPI
 
	$ã°_ö°Æl_memsys3
(

1485 * 
˛õ¡D©a
,

1486 
T˛_I¡îp
 *
öãΩ
,

1487 
objc
,

1488 
T˛_Obj
 *
CONST
 
objv
[]

1490 
rc
 = 
SQLITE_MISUSE
;

1491 #ifde‡
SQLITE_ENABLE_MEMSYS3


1492 c⁄° 
sqlôe3_mem_mëhods
 *
	`sqlôe3MemGëMemsys3
();

1493 
rc
 = 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_MALLOC
, 
	`sqlôe3MemGëMemsys3
());

1495 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_VOLATILE
);

1496  
TCL_OK
;

1497 
	}
}

1499 
SQLITE_TCLAPI
 
	$ã°_vfs_oom_ã°
(

1500 * 
˛õ¡D©a
,

1501 
T˛_I¡îp
 *
öãΩ
,

1502 
objc
,

1503 
T˛_Obj
 *
CONST
 
objv
[]

1505 
sqlôe3_memdebug_vfs_oom_ã°
;

1506 if–
objc
>2 ){

1507 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "?INTEGER?");

1508  
TCL_ERROR
;

1509 }if–
objc
==2 ){

1510 
iNew
;

1511 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[1], &
iNew
ËË 
TCL_ERROR
;

1512 
sqlôe3_memdebug_vfs_oom_ã°
 = 
iNew
;

1514 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
sqlôe3_memdebug_vfs_oom_ã°
));

1515  
TCL_OK
;

1516 
	}
}

1521 
	$Sqlôëe°_mÆloc_Inô
(
T˛_I¡îp
 *
öãΩ
){

1523 *
zName
;

1524 
T˛_ObjCmdProc
 *
xProc
;

1525 
˛õ¡D©a
;

1526 } 
aObjCmd
[] = {

1527 { "sqlôe3_mÆloc", 
ã°_mÆloc
 ,0 },

1528 { "sqlôe3_ªÆloc", 
ã°_ªÆloc
 ,0 },

1529 { "sqlôe3_‰ì", 
ã°_‰ì
 ,0 },

1530 { "mem£t", 
ã°_mem£t
 ,0 },

1531 { "memgë", 
ã°_memgë
 ,0 },

1532 { "sqlôe3_mem‹y_u£d", 
ã°_mem‹y_u£d
 ,0 },

1533 { "sqlôe3_mem‹y_highw©î", 
ã°_mem‹y_highw©î
 ,0 },

1534 { "sqlôe3_memdebug_backåa˚", 
ã°_memdebug_backåa˚
 ,0 },

1535 { "sqlôe3_memdebug_dump", 
ã°_memdebug_dump
 ,0 },

1536 { "sqlôe3_memdebug_Áû", 
ã°_memdebug_Áû
 ,0 },

1537 { "sqlôe3_memdebug_≥ndög", 
ã°_memdebug_≥ndög
 ,0 },

1538 { "sqlôe3_memdebug_£âôÀ", 
ã°_memdebug_£âôÀ
 ,0 },

1539 { "sqlôe3_memdebug_mÆloc_cou¡", 
ã°_memdebug_mÆloc_cou¡
 ,0 },

1540 { "sqlôe3_memdebug_log", 
ã°_memdebug_log
 ,0 },

1541 { "sqlôe3_c⁄fig_s¸©ch", 
ã°_c⁄fig_s¸©ch
 ,0 },

1542 { "sqlôe3_c⁄fig_∑geˇche", 
ã°_c⁄fig_∑geˇche
 ,0 },

1543 { "sqlôe3_c⁄fig_Æt_pˇche", 
ã°_Æt_pˇche
 ,0 },

1544 { "sqlôe3_°©us", 
ã°_°©us
 ,0 },

1545 { "sqlôe3_db_°©us", 
ã°_db_°©us
 ,0 },

1546 { "ö°Æl_mÆloc_Áu…sim", 
ã°_ö°Æl_mÆloc_Áu…sim
 ,0 },

1547 { "sqlôe3_c⁄fig_hóp", 
ã°_c⁄fig_hóp
 ,0 },

1548 { "sqlôe3_c⁄fig_hóp_size", 
ã°_c⁄fig_hóp_size
 ,0 },

1549 { "sqlôe3_c⁄fig_mem°©us", 
ã°_c⁄fig_mem°©us
 ,0 },

1550 { "sqlôe3_c⁄fig_lookaside", 
ã°_c⁄fig_lookaside
 ,0 },

1551 { "sqlôe3_c⁄fig_îr‹", 
ã°_c⁄fig_îr‹
 ,0 },

1552 { "sqlôe3_c⁄fig_uri", 
ã°_c⁄fig_uri
 ,0 },

1553 { "sqlôe3_c⁄fig_cis", 
ã°_c⁄fig_cis
 ,0 },

1554 { "sqlôe3_c⁄fig_pmasz", 
ã°_c⁄fig_pmasz
 ,0 },

1555 { "sqlôe3_db_c⁄fig_lookaside",
ã°_db_c⁄fig_lookaside
 ,0 },

1556 { "sqlôe3_dump_memsys3", 
ã°_dump_memsys3
 ,3 },

1557 { "sqlôe3_dump_memsys5", 
ã°_dump_memsys3
 ,5 },

1558 { "sqlôe3_ö°Æl_memsys3", 
ã°_ö°Æl_memsys3
 ,0 },

1559 { "sqlôe3_memdebug_vfs_oom_ã°", 
ã°_vfs_oom_ã°
 ,0 },

1561 
i
;

1562 
i
=0; i<(
aObjCmd
)/(aObjCmd[0]); i++){

1563 
Clõ¡D©a
 
c
 = (Clõ¡D©a)
	`SQLITE_INT_TO_PTR
(
aObjCmd
[
i
].
˛õ¡D©a
);

1564 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
aObjCmd
[
i
].
zName
,áObjCmd[i].
xProc
, 
c
, 0);

1566  
TCL_OK
;

1567 
	}
}

	@test_multiplex.c

50 
	~"sqlôe3.h
"

51 
	~<°rög.h
>

52 
	~<as£π.h
>

53 
	~<°dlib.h
>

54 
	~"ã°_mu…ùÀx.h
"

56 #i‚de‡
SQLITE_CORE


57 
	#SQLITE_CORE
 1

	)

59 
	~"sqlôe3ext.h
"

67 
	#UNUSED_PARAMETER
(
x
Ë()(x)

	)

68 
	#MAX_PAGE_SIZE
 0x10000

	)

69 
	#DEFAULT_SECTOR_SIZE
 0x1000

	)

72 
	#MX_CHUNK_NUMBER
 299

	)

75 
	#SQLITE_MULTIPLEX_JOURNAL_8_3_OFFSET
 400

	)

76 
	#SQLITE_MULTIPLEX_WAL_8_3_OFFSET
 700

	)

81 #i‚de‡
SQLITE_MULTIPLEX_VFS_NAME


82 
	#SQLITE_MULTIPLEX_VFS_NAME
 "mu…ùÀx"

	)

89 #i‚de‡
SQLITE_MULTIPLEX_CHUNK_SIZE


90 
	#SQLITE_MULTIPLEX_CHUNK_SIZE
 2147418112

	)

99 #i‚de‡
SQLITE_MULTIPLEX_MAX_CHUNKS


100 
	#SQLITE_MULTIPLEX_MAX_CHUNKS
 12

	)

106 
mu…ùÀxGroup
 
	tmu…ùÀxGroup
;

107 
mu…ùÀxC⁄n
 
	tmu…ùÀxC⁄n
;

117 
	smu…ùÀxGroup
 {

118 
	smu…ùÀxRól
 {

119 
sqlôe3_fûe
 *
	mp
;

120 *
	mz
;

121 } *
	maRól
;

122 
	mnRól
;

123 *
	mzName
;

124 
	mnName
;

125 
	mÊags
;

126 
	mszChunk
;

127 
	mbE«bÀd
;

128 
	mbTrunˇã
;

137 
	smu…ùÀxC⁄n
 {

138 
sqlôe3_fûe
 
	mba£
;

139 
mu…ùÀxGroup
 *
	mpGroup
;

153 
sqlôe3_vfs
 *
	mpOrigVfs
;

158 
sqlôe3_vfs
 
	msThisVfs
;

170 
sqlôe3_io_mëhods
 
	msIoMëhodsV1
;

171 
sqlôe3_io_mëhods
 
	msIoMëhodsV2
;

175 
	misInôülized
;

176 } 
	ggMu…ùÀx
;

187 
	$mu…ùÀxSåÀn30
(c⁄° *
z
){

188 c⁄° *
z2
 = 
z
;

189 if–
z
==0 )  0;

190  *
z2
 ){ z2++; }

191  0x3ffffff‡& ()(
z2
 - 
z
);

192 
	}
}

219 
	$mu…ùÀxFûíame
(

220 c⁄° *
zBa£
,

221 
nBa£
,

222 
Êags
,

223 
iChunk
,

224 *
zOut


226 
n
 = 
nBa£
;

227 
	`mem˝y
(
zOut
, 
zBa£
, 
n
+1);

228 if–
iChunk
!=0 && iChunk<=
MX_CHUNK_NUMBER
 ){

229 #ifde‡
SQLITE_ENABLE_8_3_NAMES


230 
i
;

231 
i
=
n
-1; i>0 && i>Ú-4 && 
zOut
[i]!='.'; i--){}

232 if–
i
>=
n
-4 )Ç = i+1;

233 if–
Êags
 & 
SQLITE_OPEN_MAIN_JOURNAL
 ){

238 
iChunk
 +
SQLITE_MULTIPLEX_JOURNAL_8_3_OFFSET
;

239 }if–
Êags
 & 
SQLITE_OPEN_WAL
 ){

243 
iChunk
 +
SQLITE_MULTIPLEX_WAL_8_3_OFFSET
;

246 
	`sqlôe3_¢¥ötf
(4,&
zOut
[
n
],"%03d",
iChunk
);

247 
n
 += 3;

250 
	`as£π
–
zOut
[
n
]=='\0' );

251 
zOut
[
n
+1] = '\0';

252 
	}
}

256 
	$mu…ùÀxSubFûíame
(
mu…ùÀxGroup
 *
pGroup
, 
iChunk
){

257 if–
iChunk
>=
pGroup
->
nRól
 ){

258 
mu…ùÀxRól
 *
p
;

259 
p
 = 
	`sqlôe3_ªÆloc64
(
pGroup
->
aRól
, (
iChunk
+1)*(*p));

260 if–
p
==0 ){

261  
SQLITE_NOMEM
;

263 
	`mem£t
(&
p
[
pGroup
->
nRól
], 0, ’[0])*(
iChunk
+1-pGroup->nReal));

264 
pGroup
->
aRól
 = 
p
;

265 
pGroup
->
nRól
 = 
iChunk
+1;

267 if–
pGroup
->
zName
 &&ÖGroup->
aRól
[
iChunk
].
z
==0 ){

268 *
z
;

269 
n
 = 
pGroup
->
nName
;

270 
pGroup
->
aRól
[
iChunk
].
z
 = z = 
	`sqlôe3_mÆloc64
–
n
+5 );

271 if–
z
==0 ){

272  
SQLITE_NOMEM
;

274 
	`mu…ùÀxFûíame
(
pGroup
->
zName
,ÖGroup->
nName
,ÖGroup->
Êags
, 
iChunk
, 
z
);

276  
SQLITE_OK
;

277 
	}
}

286 
sqlôe3_fûe
 *
	$mu…ùÀxSubO≥n
(

287 
mu…ùÀxGroup
 *
pGroup
,

288 
iChunk
,

289 *
rc
,

290 *
pOutFœgs
,

291 
¸óãFœg


293 
sqlôe3_fûe
 *
pSubO≥n
 = 0;

294 
sqlôe3_vfs
 *
pOrigVfs
 = 
gMu…ùÀx
.pOrigVfs;

296 #ifde‡
SQLITE_ENABLE_8_3_NAMES


301 if–
iChunk
>=
SQLITE_MULTIPLEX_JOURNAL_8_3_OFFSET
 ){

302 
	`sqlôe3_log
(
SQLITE_FULL
, "mu…ùÀxed chunk ovîÊow: %s", 
pGroup
->
zName
);

303 *
rc
 = 
SQLITE_FULL
;

308 *
rc
 = 
	`mu…ùÀxSubFûíame
(
pGroup
, 
iChunk
);

309 if–(*
rc
)==
SQLITE_OK
 && (
pSubO≥n
 = 
pGroup
->
aRól
[
iChunk
].
p
)==0 ){

310 
Êags
, 
bExi°s
;

311 
Êags
 = 
pGroup
->flags;

312 if–
¸óãFœg
 ){

313 
Êags
 |
SQLITE_OPEN_CREATE
;

314 }if–
iChunk
==0 ){

316 }if–
pGroup
->
aRól
[
iChunk
].
z
==0 ){

319 *
rc
 = 
pOrigVfs
->
	`xAc˚ss
’OrigVfs, 
pGroup
->
aRól
[
iChunk
].
z
,

320 
SQLITE_ACCESS_EXISTS
, &
bExi°s
);

321 if–*
rc
 || !
bExi°s
 ){

322 if–*
rc
 ){

323 
	`sqlôe3_log
(*
rc
, "multiplexor.xAccess failure on %s",

324 
pGroup
->
aRól
[
iChunk
].
z
);

328 
Êags
 &~
SQLITE_OPEN_CREATE
;

330 
pSubO≥n
 = 
	`sqlôe3_mÆloc64
–
pOrigVfs
->
szOsFûe
 );

331 if–
pSubO≥n
==0 ){

332 *
rc
 = 
SQLITE_IOERR_NOMEM
;

335 
pGroup
->
aRól
[
iChunk
].
p
 = 
pSubO≥n
;

336 *
rc
 = 
pOrigVfs
->
	`xO≥n
’OrigVfs, 
pGroup
->
aRól
[
iChunk
].
z
, 
pSubO≥n
,

337 
Êags
, 
pOutFœgs
);

338 if–(*
rc
)!=
SQLITE_OK
 ){

339 
	`sqlôe3_log
(*
rc
, "multiplexor.xOpen failure on %s",

340 
pGroup
->
aRól
[
iChunk
].
z
);

341 
	`sqlôe3_‰ì
(
pSubO≥n
);

342 
pGroup
->
aRól
[
iChunk
].
p
 = 0;

346  
pSubO≥n
;

347 
	}
}

354 
sqlôe3_öt64
 
	$mu…ùÀxSubSize
(

355 
mu…ùÀxGroup
 *
pGroup
,

356 
iChunk
,

357 *
rc


359 
sqlôe3_fûe
 *
pSub
;

360 
sqlôe3_öt64
 
sz
 = 0;

362 if–*
rc
 )  0;

363 
pSub
 = 
	`mu…ùÀxSubO≥n
(
pGroup
, 
iChunk
, 
rc
, 
NULL
, 0);

364 if–
pSub
==0 )  0;

365 *
rc
 = 
pSub
->
pMëhods
->
	`xFûeSize
’Sub, &
sz
);

366  
sz
;

367 
	}
}

372 
	$mu…ùÀxC⁄åﬁFunc
(

373 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

374 
¨gc
,

375 
sqlôe3_vÆue
 **
¨gv


377 
rc
 = 
SQLITE_OK
;

378 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

379 
›
 = 0;

380 
iVÆ
;

382 if–!
db
 || 
¨gc
!=2 ){

383 
rc
 = 
SQLITE_ERROR
;

386 
›
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[0]);

387 
iVÆ
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[1]);

389  
›
 ){

391 
›
 = 
MULTIPLEX_CTRL_ENABLE
;

394 
›
 = 
MULTIPLEX_CTRL_SET_CHUNK_SIZE
;

397 
›
 = 
MULTIPLEX_CTRL_SET_MAX_CHUNKS
;

400 
rc
 = 
SQLITE_NOTFOUND
;

404 if–
rc
==
SQLITE_OK
 ){

405 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, 0, 
›
, &
iVÆ
);

407 
	`sqlôe3_ªsu…_îr‹_code
(
c⁄ãxt
, 
rc
);

408 
	}
}

414 
	$mu…ùÀxFuncInô
(

415 
sqlôe3
 *
db
,

416 **
pzEºMsg
,

417 c⁄° 
sqlôe3_≠i_routöes
 *
pApi


419 
rc
;

420 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "mu…ùÀx_c⁄åﬁ", 2, 
SQLITE_ANY
,

421 0, 
mu…ùÀxC⁄åﬁFunc
, 0, 0);

422  
rc
;

423 
	}
}

428 
	$mu…ùÀxSubClo£
(

429 
mu…ùÀxGroup
 *
pGroup
,

430 
iChunk
,

431 
sqlôe3_vfs
 *
pOrigVfs


433 
sqlôe3_fûe
 *
pSubO≥n
 = 
pGroup
->
aRól
[
iChunk
].
p
;

434 if–
pSubO≥n
 ){

435 
pSubO≥n
->
pMëhods
->
	`xClo£
(pSubOpen);

436 if–
pOrigVfs
 && 
pGroup
->
aRól
[
iChunk
].
z
 ){

437 
pOrigVfs
->
	`xDñëe
’OrigVfs, 
pGroup
->
aRól
[
iChunk
].
z
, 0);

439 
	`sqlôe3_‰ì
(
pGroup
->
aRól
[
iChunk
].
p
);

441 
	`sqlôe3_‰ì
(
pGroup
->
aRól
[
iChunk
].
z
);

442 
	`mem£t
(&
pGroup
->
aRól
[
iChunk
], 0, (pGroup->aReal[iChunk]));

443 
	}
}

448 
	$mu…ùÀxFªeComp⁄íts
(
mu…ùÀxGroup
 *
pGroup
){

449 
i
;

450 
i
=0; i<
pGroup
->
nRól
; i++){ 
	`mu…ùÀxSubClo£
(pGroup, i, 0); }

451 
	`sqlôe3_‰ì
(
pGroup
->
aRól
);

452 
pGroup
->
aRól
 = 0;

453 
pGroup
->
nRól
 = 0;

454 
	}
}

466 
	$mu…ùÀxO≥n
(

467 
sqlôe3_vfs
 *
pVfs
,

468 c⁄° *
zName
,

469 
sqlôe3_fûe
 *
pC⁄n
,

470 
Êags
,

471 *
pOutFœgs


473 
rc
 = 
SQLITE_OK
;

474 
mu…ùÀxC⁄n
 *
pMu…ùÀxO≥n
;

475 
mu…ùÀxGroup
 *
pGroup
 = 0;

476 
sqlôe3_fûe
 *
pSubO≥n
 = 0;

477 
sqlôe3_vfs
 *
pOrigVfs
 = 
gMu…ùÀx
.pOrigVfs;

478 
nName
 = 0;

479 
sz
 = 0;

480 *
zToFªe
 = 0;

482 
	`UNUSED_PARAMETER
(
pVfs
);

483 
	`mem£t
(
pC⁄n
, 0, 
pVfs
->
szOsFûe
);

484 
	`as£π
–
zName
 || (
Êags
 & 
SQLITE_OPEN_DELETEONCLOSE
) );

489 
pMu…ùÀxO≥n
 = (
mu…ùÀxC⁄n
*)
pC⁄n
;

491 if–
rc
==
SQLITE_OK
 ){

493 
nName
 = 
zName
 ? 
	`mu…ùÀxSåÀn30
(zName) : 0;

494 
sz
 = (
mu…ùÀxGroup
)

495 + 
nName
 + 1;

496 
pGroup
 = 
	`sqlôe3_mÆloc64
–
sz
 );

497 if–
pGroup
==0 ){

498 
rc
 = 
SQLITE_NOMEM
;

502 if–
rc
==
SQLITE_OK
 ){

503 c⁄° *
zUri
 = (
Êags
 & 
SQLITE_OPEN_URI
Ë? 
zName
 : 0;

505 
	`mem£t
(
pGroup
, 0, 
sz
);

506 
pMu…ùÀxO≥n
->
pGroup
 =ÖGroup;

507 
pGroup
->
bE«bÀd
 = ()-1;

508 
pGroup
->
bTrunˇã
 = ()
	`sqlôe3_uri_boﬁón
(
zUri
, "truncate",

509 (
Êags
 & 
SQLITE_OPEN_MAIN_DB
)==0);

510 
pGroup
->
szChunk
 = ()
	`sqlôe3_uri_öt64
(
zUri
, "chunksize",

511 
SQLITE_MULTIPLEX_CHUNK_SIZE
);

512 
pGroup
->
szChunk
 = (pGroup->szChunk+0xffff)&~0xffff;

513 if–
zName
 ){

514 *
p
 = (*)&
pGroup
[1];

515 
pGroup
->
zName
 = 
p
;

516 
	`mem˝y
(
pGroup
->
zName
, zName, 
nName
+1);

517 
pGroup
->
nName
 =ÇName;

519 if–
pGroup
->
bE«bÀd
 ){

524 #i‚de‡
SQLITE_OMIT_WSD


525 
sqlôe3PídögByã
;

527 
sqlôe3PídögByã
 = 0x40000000;

529  (
sqlôe3PídögByã
 % 
pGroup
->
szChunk
)>=(pGroup->szChunk-65536) ){

530 
pGroup
->
szChunk
 += 65536;

533 
pGroup
->
Êags
 = flags;

534 
rc
 = 
	`mu…ùÀxSubFûíame
(
pGroup
, 1);

535 if–
rc
==
SQLITE_OK
 ){

536 
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
pGroup
, 0, &
rc
, 
pOutFœgs
, 0);

537 if–
pSubO≥n
==0 && 
rc
==
SQLITE_OK
 )Ñ¯
SQLITE_CANTOPEN
;

539 if–
rc
==
SQLITE_OK
 ){

540 
sqlôe3_öt64
 
sz64
;

542 
rc
 = 
pSubO≥n
->
pMëhods
->
	`xFûeSize
’SubO≥n, &
sz64
);

543 if–
rc
==
SQLITE_OK
 && 
zName
 ){

544 
bExi°s
;

545 if–
Êags
 & 
SQLITE_OPEN_MASTER_JOURNAL
 ){

546 
pGroup
->
bE«bÀd
 = 0;

548 if–
sz64
==0 ){

549 if–
Êags
 & 
SQLITE_OPEN_MAIN_JOURNAL
 ){

553 
iChunk
 = 1;

555 
rc
 = 
pOrigVfs
->
	`xAc˚ss
(pOrigVfs,

556 
pGroup
->
aRól
[
iChunk
].
z
, 
SQLITE_ACCESS_EXISTS
, &
bExi°s


558 if–
rc
==
SQLITE_OK
 && 
bExi°s
 ){

559 
rc
 = 
pOrigVfs
->
	`xDñëe
’OrigVfs, 
pGroup
->
aRól
[
iChunk
].
z
, 0);

560 if–
rc
==
SQLITE_OK
 ){

561 
rc
 = 
	`mu…ùÀxSubFûíame
(
pGroup
, ++
iChunk
);

564 } 
rc
==
SQLITE_OK
 && 
bExi°s
 );

576 
rc
 = 
pOrigVfs
->
	`xAc˚ss
’OrigVfs, 
pGroup
->
aRól
[1].
z
,

577 
SQLITE_ACCESS_EXISTS
, &
bExi°s
);

578 
bExi°s
 = 
	`mu…ùÀxSubSize
(
pGroup
, 1, &
rc
)>0;

579 if–
rc
==
SQLITE_OK
 && 
bExi°s
 && 
sz64
==(sz64&0xffff0000) && sz64>0

580 && 
sz64
!=
pGroup
->
szChunk
 ){

581 
pGroup
->
szChunk
 = ()
sz64
;

582 }if–
rc
==
SQLITE_OK
 && !
bExi°s
 && 
sz64
>
pGroup
->
szChunk
 ){

583 
pGroup
->
bE«bÀd
 = 0;

589 if–
rc
==
SQLITE_OK
 ){

590 if–
pSubO≥n
->
pMëhods
->
iVîsi⁄
==1 ){

591 
pMu…ùÀxO≥n
->
ba£
.
pMëhods
 = &
gMu…ùÀx
.
sIoMëhodsV1
;

593 
pMu…ùÀxO≥n
->
ba£
.
pMëhods
 = &
gMu…ùÀx
.
sIoMëhodsV2
;

596 
	`mu…ùÀxFªeComp⁄íts
(
pGroup
);

597 
	`sqlôe3_‰ì
(
pGroup
);

600 
	`sqlôe3_‰ì
(
zToFªe
);

601  
rc
;

602 
	}
}

608 
	$mu…ùÀxDñëe
(

609 
sqlôe3_vfs
 *
pVfs
,

610 c⁄° *
zName
,

611 
syncDú


613 
rc
;

614 
sqlôe3_vfs
 *
pOrigVfs
 = 
gMu…ùÀx
.pOrigVfs;

615 
rc
 = 
pOrigVfs
->
	`xDñëe
’OrigVfs, 
zName
, 
syncDú
);

616 if–
rc
==
SQLITE_OK
 ){

620 
nName
 = ()
	`°æí
(
zName
);

621 *
z
;

622 
z
 = 
	`sqlôe3_mÆloc64
(
nName
 + 5);

623 if–
z
==0 ){

624 
rc
 = 
SQLITE_IOERR_NOMEM
;

626 
iChunk
 = 0;

627 
bExi°s
;

629 
	`mu…ùÀxFûíame
(
zName
, 
nName
, 
SQLITE_OPEN_MAIN_JOURNAL
, ++
iChunk
, 
z
);

630 
rc
 = 
pOrigVfs
->
	`xAc˚ss
’OrigVfs, 
z
, 
SQLITE_ACCESS_EXISTS
, &
bExi°s
);

631 } 
rc
==
SQLITE_OK
 && 
bExi°s
 );

632  
rc
==
SQLITE_OK
 && 
iChunk
>1 ){

633 
	`mu…ùÀxFûíame
(
zName
, 
nName
, 
SQLITE_OPEN_MAIN_JOURNAL
, --
iChunk
, 
z
);

634 
rc
 = 
pOrigVfs
->
	`xDñëe
’OrigVfs, 
z
, 
syncDú
);

636 if–
rc
==
SQLITE_OK
 ){

637 
iChunk
 = 0;

639 
	`mu…ùÀxFûíame
(
zName
, 
nName
, 
SQLITE_OPEN_WAL
, ++
iChunk
, 
z
);

640 
rc
 = 
pOrigVfs
->
	`xAc˚ss
’OrigVfs, 
z
, 
SQLITE_ACCESS_EXISTS
, &
bExi°s
);

641 } 
rc
==
SQLITE_OK
 && 
bExi°s
 );

642  
rc
==
SQLITE_OK
 && 
iChunk
>1 ){

643 
	`mu…ùÀxFûíame
(
zName
, 
nName
, 
SQLITE_OPEN_WAL
, --
iChunk
, 
z
);

644 
rc
 = 
pOrigVfs
->
	`xDñëe
’OrigVfs, 
z
, 
syncDú
);

648 
	`sqlôe3_‰ì
(
z
);

650  
rc
;

651 
	}
}

653 
	$mu…ùÀxAc˚ss
(
sqlôe3_vfs
 *
a
, c⁄° *
b
, 
c
, *
d
){

654  
gMu…ùÀx
.
pOrigVfs
->
	`xAc˚ss
(gMu…ùÀx.pOrigVfs, 
b
, 
c
, 
d
);

655 
	}
}

656 
	$mu…ùÀxFuŒP©h«me
(
sqlôe3_vfs
 *
a
, c⁄° *
b
, 
c
, *
d
){

657  
gMu…ùÀx
.
pOrigVfs
->
	`xFuŒP©h«me
(gMu…ùÀx.pOrigVfs, 
b
, 
c
, 
d
);

658 
	}
}

659 *
	$mu…ùÀxDlO≥n
(
sqlôe3_vfs
 *
a
, c⁄° *
b
){

660  
gMu…ùÀx
.
pOrigVfs
->
	`xDlO≥n
(gMu…ùÀx.pOrigVfs, 
b
);

661 
	}
}

662 
	$mu…ùÀxDlEº‹
(
sqlôe3_vfs
 *
a
, 
b
, *
c
){

663 
gMu…ùÀx
.
pOrigVfs
->
	`xDlEº‹
(gMu…ùÀx.pOrigVfs, 
b
, 
c
);

664 
	}
}

665 (*
	$mu…ùÀxDlSym
(
sqlôe3_vfs
 *
a
, *
b
, c⁄° *
c
))(){

666  
gMu…ùÀx
.
pOrigVfs
->
	`xDlSym
(gMu…ùÀx.pOrigVfs, 
b
, 
c
);

667 
	}
}

668 
	$mu…ùÀxDlClo£
(
sqlôe3_vfs
 *
a
, *
b
){

669 
gMu…ùÀx
.
pOrigVfs
->
	`xDlClo£
(gMu…ùÀx.pOrigVfs, 
b
);

670 
	}
}

671 
	$mu…ùÀxR™dom√ss
(
sqlôe3_vfs
 *
a
, 
b
, *
c
){

672  
gMu…ùÀx
.
pOrigVfs
->
	`xR™dom√ss
(gMu…ùÀx.pOrigVfs, 
b
, 
c
);

673 
	}
}

674 
	$mu…ùÀxSÀï
(
sqlôe3_vfs
 *
a
, 
b
){

675  
gMu…ùÀx
.
pOrigVfs
->
	`xSÀï
(gMu…ùÀx.pOrigVfs, 
b
);

676 
	}
}

677 
	$mu…ùÀxCuºítTime
(
sqlôe3_vfs
 *
a
, *
b
){

678  
gMu…ùÀx
.
pOrigVfs
->
	`xCuºítTime
(gMu…ùÀx.pOrigVfs, 
b
);

679 
	}
}

680 
	$mu…ùÀxGëLa°Eº‹
(
sqlôe3_vfs
 *
a
, 
b
, *
c
){

681 if–
gMu…ùÀx
.
pOrigVfs
->
xGëLa°Eº‹
 ){

682  
gMu…ùÀx
.
pOrigVfs
->
	`xGëLa°Eº‹
(gMu…ùÀx.pOrigVfs, 
b
, 
c
);

686 
	}
}

687 
	$mu…ùÀxCuºítTimeI¡64
(
sqlôe3_vfs
 *
a
, 
sqlôe3_öt64
 *
b
){

688  
gMu…ùÀx
.
pOrigVfs
->
	`xCuºítTimeI¡64
(gMu…ùÀx.pOrigVfs, 
b
);

689 
	}
}

698 
	$mu…ùÀxClo£
(
sqlôe3_fûe
 *
pC⁄n
){

699 
mu…ùÀxC⁄n
 *
p
 = (mu…ùÀxC⁄n*)
pC⁄n
;

700 
mu…ùÀxGroup
 *
pGroup
 = 
p
->pGroup;

701 
rc
 = 
SQLITE_OK
;

702 
	`mu…ùÀxFªeComp⁄íts
(
pGroup
);

703 
	`sqlôe3_‰ì
(
pGroup
);

704  
rc
;

705 
	}
}

711 
	$mu…ùÀxRód
(

712 
sqlôe3_fûe
 *
pC⁄n
,

713 *
pBuf
,

714 
iAmt
,

715 
sqlôe3_öt64
 
iOf°


717 
mu…ùÀxC⁄n
 *
p
 = (mu…ùÀxC⁄n*)
pC⁄n
;

718 
mu…ùÀxGroup
 *
pGroup
 = 
p
->pGroup;

719 
rc
 = 
SQLITE_OK
;

720 if–!
pGroup
->
bE«bÀd
 ){

721 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
pGroup
, 0, &
rc
, 
NULL
, 0);

722 if–
pSubO≥n
==0 ){

723 
rc
 = 
SQLITE_IOERR_READ
;

725 
rc
 = 
pSubO≥n
->
pMëhods
->
	`xRód
’SubO≥n, 
pBuf
, 
iAmt
, 
iOf°
);

728  
iAmt
 > 0 ){

729 
i
 = ()(
iOf°
 / 
pGroup
->
szChunk
);

730 
sqlôe3_fûe
 *
pSubO≥n
;

731 
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
pGroup
, 
i
, &
rc
, 
NULL
, 1);

732 if–
pSubO≥n
 ){

733 
exåa
 = (()(
iOf°
 % 
pGroup
->
szChunk
Ë+ 
iAmt
) -ÖGroup->szChunk;

734 if–
exåa
<0 )Éxtra = 0;

735 
iAmt
 -
exåa
;

736 
rc
 = 
pSubO≥n
->
pMëhods
->
	`xRód
’SubO≥n, 
pBuf
, 
iAmt
,

737 
iOf°
 % 
pGroup
->
szChunk
);

738 if–
rc
!=
SQLITE_OK
 ) ;

739 
pBuf
 = (*ÌBu‡+ 
iAmt
;

740 
iOf°
 +
iAmt
;

741 
iAmt
 = 
exåa
;

743 
rc
 = 
SQLITE_IOERR_READ
;

749  
rc
;

750 
	}
}

756 
	$mu…ùÀxWrôe
(

757 
sqlôe3_fûe
 *
pC⁄n
,

758 c⁄° *
pBuf
,

759 
iAmt
,

760 
sqlôe3_öt64
 
iOf°


762 
mu…ùÀxC⁄n
 *
p
 = (mu…ùÀxC⁄n*)
pC⁄n
;

763 
mu…ùÀxGroup
 *
pGroup
 = 
p
->pGroup;

764 
rc
 = 
SQLITE_OK
;

765 if–!
pGroup
->
bE«bÀd
 ){

766 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
pGroup
, 0, &
rc
, 
NULL
, 0);

767 if–
pSubO≥n
==0 ){

768 
rc
 = 
SQLITE_IOERR_WRITE
;

770 
rc
 = 
pSubO≥n
->
pMëhods
->
	`xWrôe
’SubO≥n, 
pBuf
, 
iAmt
, 
iOf°
);

773  
rc
==
SQLITE_OK
 && 
iAmt
>0 ){

774 
i
 = ()(
iOf°
 / 
pGroup
->
szChunk
);

775 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
pGroup
, 
i
, &
rc
, 
NULL
, 1);

776 if–
pSubO≥n
 ){

777 
exåa
 = (()(
iOf°
 % 
pGroup
->
szChunk
Ë+ 
iAmt
) -

778 
pGroup
->
szChunk
;

779 if–
exåa
<0 )Éxtra = 0;

780 
iAmt
 -
exåa
;

781 
rc
 = 
pSubO≥n
->
pMëhods
->
	`xWrôe
’SubO≥n, 
pBuf
, 
iAmt
,

782 
iOf°
 % 
pGroup
->
szChunk
);

783 
pBuf
 = (*ÌBu‡+ 
iAmt
;

784 
iOf°
 +
iAmt
;

785 
iAmt
 = 
exåa
;

789  
rc
;

790 
	}
}

796 
	$mu…ùÀxTrunˇã
(
sqlôe3_fûe
 *
pC⁄n
, 
sqlôe3_öt64
 
size
){

797 
mu…ùÀxC⁄n
 *
p
 = (mu…ùÀxC⁄n*)
pC⁄n
;

798 
mu…ùÀxGroup
 *
pGroup
 = 
p
->pGroup;

799 
rc
 = 
SQLITE_OK
;

800 if–!
pGroup
->
bE«bÀd
 ){

801 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
pGroup
, 0, &
rc
, 
NULL
, 0);

802 if–
pSubO≥n
==0 ){

803 
rc
 = 
SQLITE_IOERR_TRUNCATE
;

805 
rc
 = 
pSubO≥n
->
pMëhods
->
	`xTrunˇã
’SubO≥n, 
size
);

808 
i
;

809 
iBa£Group
 = ()(
size
 / 
pGroup
->
szChunk
);

810 
sqlôe3_fûe
 *
pSubO≥n
;

811 
sqlôe3_vfs
 *
pOrigVfs
 = 
gMu…ùÀx
.pOrigVfs;

813 
i
 = 
pGroup
->
nRól
-1; i>
iBa£Group
 && 
rc
==
SQLITE_OK
; i--){

814 if–
pGroup
->
bTrunˇã
 ){

815 
	`mu…ùÀxSubClo£
(
pGroup
, 
i
, 
pOrigVfs
);

817 
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
pGroup
, 
i
, &
rc
, 0, 0);

818 if–
pSubO≥n
 ){

819 
rc
 = 
pSubO≥n
->
pMëhods
->
	`xTrunˇã
(pSubOpen, 0);

823 if–
rc
==
SQLITE_OK
 ){

824 
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
pGroup
, 
iBa£Group
, &
rc
, 0, 0);

825 if–
pSubO≥n
 ){

826 
rc
 = 
pSubO≥n
->
pMëhods
->
	`xTrunˇã
’SubO≥n, 
size
 % 
pGroup
->
szChunk
);

829 if–
rc
 )Ñ¯
SQLITE_IOERR_TRUNCATE
;

831  
rc
;

832 
	}
}

836 
	$mu…ùÀxSync
(
sqlôe3_fûe
 *
pC⁄n
, 
Êags
){

837 
mu…ùÀxC⁄n
 *
p
 = (mu…ùÀxC⁄n*)
pC⁄n
;

838 
mu…ùÀxGroup
 *
pGroup
 = 
p
->pGroup;

839 
rc
 = 
SQLITE_OK
;

840 
i
;

841 
i
=0; i<
pGroup
->
nRól
; i++){

842 
sqlôe3_fûe
 *
pSubO≥n
 = 
pGroup
->
aRól
[
i
].
p
;

843 if–
pSubO≥n
 ){

844 
rc2
 = 
pSubO≥n
->
pMëhods
->
	`xSync
’SubO≥n, 
Êags
);

845 if–
rc2
!=
SQLITE_OK
 ) 
rc
 =Ñc2;

848  
rc
;

849 
	}
}

854 
	$mu…ùÀxFûeSize
(
sqlôe3_fûe
 *
pC⁄n
, 
sqlôe3_öt64
 *
pSize
){

855 
mu…ùÀxC⁄n
 *
p
 = (mu…ùÀxC⁄n*)
pC⁄n
;

856 
mu…ùÀxGroup
 *
pGroup
 = 
p
->pGroup;

857 
rc
 = 
SQLITE_OK
;

858 
i
;

859 if–!
pGroup
->
bE«bÀd
 ){

860 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
pGroup
, 0, &
rc
, 
NULL
, 0);

861 if–
pSubO≥n
==0 ){

862 
rc
 = 
SQLITE_IOERR_FSTAT
;

864 
rc
 = 
pSubO≥n
->
pMëhods
->
	`xFûeSize
’SubO≥n, 
pSize
);

867 *
pSize
 = 0;

868 
i
=0; 
rc
==
SQLITE_OK
; i++){

869 
sqlôe3_öt64
 
sz
 = 
	`mu…ùÀxSubSize
(
pGroup
, 
i
, &
rc
);

870 if–
sz
==0 ) ;

871 *
pSize
 = 
i
*(
sqlôe3_öt64
)
pGroup
->
szChunk
 + 
sz
;

874  
rc
;

875 
	}
}

879 
	$mu…ùÀxLock
(
sqlôe3_fûe
 *
pC⁄n
, 
lock
){

880 
mu…ùÀxC⁄n
 *
p
 = (mu…ùÀxC⁄n*)
pC⁄n
;

881 
rc
;

882 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
p
->
pGroup
, 0, &
rc
, 
NULL
, 0);

883 if–
pSubO≥n
 ){

884  
pSubO≥n
->
pMëhods
->
	`xLock
’SubO≥n, 
lock
);

886  
SQLITE_BUSY
;

887 
	}
}

891 
	$mu…ùÀxU∆ock
(
sqlôe3_fûe
 *
pC⁄n
, 
lock
){

892 
mu…ùÀxC⁄n
 *
p
 = (mu…ùÀxC⁄n*)
pC⁄n
;

893 
rc
;

894 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
p
->
pGroup
, 0, &
rc
, 
NULL
, 0);

895 if–
pSubO≥n
 ){

896  
pSubO≥n
->
pMëhods
->
	`xU∆ock
’SubO≥n, 
lock
);

898  
SQLITE_IOERR_UNLOCK
;

899 
	}
}

903 
	$mu…ùÀxCheckRe£rvedLock
(
sqlôe3_fûe
 *
pC⁄n
, *
pResOut
){

904 
mu…ùÀxC⁄n
 *
p
 = (mu…ùÀxC⁄n*)
pC⁄n
;

905 
rc
;

906 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
p
->
pGroup
, 0, &
rc
, 
NULL
, 0);

907 if–
pSubO≥n
 ){

908  
pSubO≥n
->
pMëhods
->
	`xCheckRe£rvedLock
’SubO≥n, 
pResOut
);

910  
SQLITE_IOERR_CHECKRESERVEDLOCK
;

911 
	}
}

916 
	$mu…ùÀxFûeC⁄åﬁ
(
sqlôe3_fûe
 *
pC⁄n
, 
›
, *
pArg
){

917 
mu…ùÀxC⁄n
 *
p
 = (mu…ùÀxC⁄n*)
pC⁄n
;

918 
mu…ùÀxGroup
 *
pGroup
 = 
p
->pGroup;

919 
rc
 = 
SQLITE_ERROR
;

920 
sqlôe3_fûe
 *
pSubO≥n
;

922 if–!
gMu…ùÀx
.
isInôülized
 )  
SQLITE_MISUSE
;

923  
›
 ){

924 
MULTIPLEX_CTRL_ENABLE
:

925 if–
pArg
 ) {

926 
bE«bÀd
 = *(*)
pArg
;

927 
pGroup
->
bE«bÀd
 = ()bEnabled;

928 
rc
 = 
SQLITE_OK
;

931 
MULTIPLEX_CTRL_SET_CHUNK_SIZE
:

932 if–
pArg
 ) {

933 
szChunk
 = *(*)
pArg
;

934 if–
szChunk
<1 ){

935 
rc
 = 
SQLITE_MISUSE
;

938 
szChunk
 = (szChunk + (
MAX_PAGE_SIZE
-1));

939 
szChunk
 &~(
MAX_PAGE_SIZE
-1);

940 
pGroup
->
szChunk
 = szChunk;

941 
rc
 = 
SQLITE_OK
;

945 
MULTIPLEX_CTRL_SET_MAX_CHUNKS
:

946 
rc
 = 
SQLITE_OK
;

948 
SQLITE_FCNTL_SIZE_HINT
:

949 
SQLITE_FCNTL_CHUNK_SIZE
:

951 
rc
 = 
SQLITE_OK
;

953 
SQLITE_FCNTL_PRAGMA
: {

954 **
aF˙é
 = (**)
pArg
;

962 if–
aF˙é
[1] && 
	`sqlôe3_°ricmp
(aFcntl[1],"multiplex_truncate")==0 ){

963 if–
aF˙é
[2] &&áFcntl[2][0] ){

964 if–
	`sqlôe3_°ricmp
(
aF˙é
[2], "on")==0

965 || 
	`sqlôe3_°ricmp
(
aF˙é
[2], "1")==0 ){

966 
pGroup
->
bTrunˇã
 = 1;

968 if–
	`sqlôe3_°ricmp
(
aF˙é
[2], "off")==0

969 || 
	`sqlôe3_°ricmp
(
aF˙é
[2], "0")==0 ){

970 
pGroup
->
bTrunˇã
 = 0;

979 
aF˙é
[0] = 
	`sqlôe3_m¥ötf
(
pGroup
->
bTrunˇã
 ? "on" : "off");

980 
rc
 = 
SQLITE_OK
;

987 
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
pGroup
, 0, &
rc
, 
NULL
, 0);

988 if–
pSubO≥n
 ){

989 
rc
 = 
pSubO≥n
->
pMëhods
->
	`xFûeC⁄åﬁ
’SubO≥n, 
›
, 
pArg
);

990 if–
›
==
SQLITE_FCNTL_VFSNAME
 && 
rc
==
SQLITE_OK
 ){

991 *(**)
pArg
 = 
	`sqlôe3_m¥ötf
("multiplex/%z", *(**)pArg);

996  
rc
;

997 
	}
}

1001 
	$mu…ùÀxSe˘‹Size
(
sqlôe3_fûe
 *
pC⁄n
){

1002 
mu…ùÀxC⁄n
 *
p
 = (mu…ùÀxC⁄n*)
pC⁄n
;

1003 
rc
;

1004 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
p
->
pGroup
, 0, &
rc
, 
NULL
, 0);

1005 if–
pSubO≥n
 &&ÖSubO≥n->
pMëhods
->
xSe˘‹Size
 ){

1006  
pSubO≥n
->
pMëhods
->
	`xSe˘‹Size
(pSubOpen);

1008  
DEFAULT_SECTOR_SIZE
;

1009 
	}
}

1013 
	$mu…ùÀxDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
 *
pC⁄n
){

1014 
mu…ùÀxC⁄n
 *
p
 = (mu…ùÀxC⁄n*)
pC⁄n
;

1015 
rc
;

1016 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
p
->
pGroup
, 0, &
rc
, 
NULL
, 0);

1017 if–
pSubO≥n
 ){

1018  
pSubO≥n
->
pMëhods
->
	`xDevi˚Ch¨a˘îi°ics
(pSubOpen);

1021 
	}
}

1025 
	$mu…ùÀxShmM≠
(

1026 
sqlôe3_fûe
 *
pC⁄n
,

1027 
iRegi⁄
,

1028 
szRegi⁄
,

1029 
bExãnd
,

1030 vﬁ©ûê**
µ


1032 
mu…ùÀxC⁄n
 *
p
 = (mu…ùÀxC⁄n*)
pC⁄n
;

1033 
rc
;

1034 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
p
->
pGroup
, 0, &
rc
, 
NULL
, 0);

1035 if–
pSubO≥n
 ){

1036  
pSubO≥n
->
pMëhods
->
	`xShmM≠
’SubO≥n, 
iRegi⁄
, 
szRegi⁄
, 
bExãnd
,
µ
);

1038  
SQLITE_IOERR
;

1039 
	}
}

1043 
	$mu…ùÀxShmLock
(

1044 
sqlôe3_fûe
 *
pC⁄n
,

1045 
of°
,

1046 
n
,

1047 
Êags


1049 
mu…ùÀxC⁄n
 *
p
 = (mu…ùÀxC⁄n*)
pC⁄n
;

1050 
rc
;

1051 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
p
->
pGroup
, 0, &
rc
, 
NULL
, 0);

1052 if–
pSubO≥n
 ){

1053  
pSubO≥n
->
pMëhods
->
	`xShmLock
’SubO≥n, 
of°
, 
n
, 
Êags
);

1055  
SQLITE_BUSY
;

1056 
	}
}

1060 
	$mu…ùÀxShmB¨rõr
(
sqlôe3_fûe
 *
pC⁄n
){

1061 
mu…ùÀxC⁄n
 *
p
 = (mu…ùÀxC⁄n*)
pC⁄n
;

1062 
rc
;

1063 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
p
->
pGroup
, 0, &
rc
, 
NULL
, 0);

1064 if–
pSubO≥n
 ){

1065 
pSubO≥n
->
pMëhods
->
	`xShmB¨rõr
(pSubOpen);

1067 
	}
}

1071 
	$mu…ùÀxShmUnm≠
(
sqlôe3_fûe
 *
pC⁄n
, 
dñëeFœg
){

1072 
mu…ùÀxC⁄n
 *
p
 = (mu…ùÀxC⁄n*)
pC⁄n
;

1073 
rc
;

1074 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
p
->
pGroup
, 0, &
rc
, 
NULL
, 0);

1075 if–
pSubO≥n
 ){

1076  
pSubO≥n
->
pMëhods
->
	`xShmUnm≠
’SubO≥n, 
dñëeFœg
);

1078  
SQLITE_OK
;

1079 
	}
}

1094 
	$sqlôe3_mu…ùÀx_öôülize
(c⁄° *
zOrigVfsName
, 
makeDeÁu…
){

1095 
sqlôe3_vfs
 *
pOrigVfs
;

1096 if–
gMu…ùÀx
.
isInôülized
 )  
SQLITE_MISUSE
;

1097 
pOrigVfs
 = 
	`sqlôe3_vfs_föd
(
zOrigVfsName
);

1098 if–
pOrigVfs
==0 )  
SQLITE_ERROR
;

1099 
	`as£π
–
pOrigVfs
!=&
gMu…ùÀx
.
sThisVfs
 );

1100 
gMu…ùÀx
.
isInôülized
 = 1;

1101 
gMu…ùÀx
.
pOrigVfs
 =ÖOrigVfs;

1102 
gMu…ùÀx
.
sThisVfs
 = *
pOrigVfs
;

1103 
gMu…ùÀx
.
sThisVfs
.
szOsFûe
 +(
mu…ùÀxC⁄n
);

1104 
gMu…ùÀx
.
sThisVfs
.
zName
 = 
SQLITE_MULTIPLEX_VFS_NAME
;

1105 
gMu…ùÀx
.
sThisVfs
.
xO≥n
 = 
mu…ùÀxO≥n
;

1106 
gMu…ùÀx
.
sThisVfs
.
xDñëe
 = 
mu…ùÀxDñëe
;

1107 
gMu…ùÀx
.
sThisVfs
.
xAc˚ss
 = 
mu…ùÀxAc˚ss
;

1108 
gMu…ùÀx
.
sThisVfs
.
xFuŒP©h«me
 = 
mu…ùÀxFuŒP©h«me
;

1109 
gMu…ùÀx
.
sThisVfs
.
xDlO≥n
 = 
mu…ùÀxDlO≥n
;

1110 
gMu…ùÀx
.
sThisVfs
.
xDlEº‹
 = 
mu…ùÀxDlEº‹
;

1111 
gMu…ùÀx
.
sThisVfs
.
xDlSym
 = 
mu…ùÀxDlSym
;

1112 
gMu…ùÀx
.
sThisVfs
.
xDlClo£
 = 
mu…ùÀxDlClo£
;

1113 
gMu…ùÀx
.
sThisVfs
.
xR™dom√ss
 = 
mu…ùÀxR™dom√ss
;

1114 
gMu…ùÀx
.
sThisVfs
.
xSÀï
 = 
mu…ùÀxSÀï
;

1115 
gMu…ùÀx
.
sThisVfs
.
xCuºítTime
 = 
mu…ùÀxCuºítTime
;

1116 
gMu…ùÀx
.
sThisVfs
.
xGëLa°Eº‹
 = 
mu…ùÀxGëLa°Eº‹
;

1117 
gMu…ùÀx
.
sThisVfs
.
xCuºítTimeI¡64
 = 
mu…ùÀxCuºítTimeI¡64
;

1119 
gMu…ùÀx
.
sIoMëhodsV1
.
iVîsi⁄
 = 1;

1120 
gMu…ùÀx
.
sIoMëhodsV1
.
xClo£
 = 
mu…ùÀxClo£
;

1121 
gMu…ùÀx
.
sIoMëhodsV1
.
xRód
 = 
mu…ùÀxRód
;

1122 
gMu…ùÀx
.
sIoMëhodsV1
.
xWrôe
 = 
mu…ùÀxWrôe
;

1123 
gMu…ùÀx
.
sIoMëhodsV1
.
xTrunˇã
 = 
mu…ùÀxTrunˇã
;

1124 
gMu…ùÀx
.
sIoMëhodsV1
.
xSync
 = 
mu…ùÀxSync
;

1125 
gMu…ùÀx
.
sIoMëhodsV1
.
xFûeSize
 = 
mu…ùÀxFûeSize
;

1126 
gMu…ùÀx
.
sIoMëhodsV1
.
xLock
 = 
mu…ùÀxLock
;

1127 
gMu…ùÀx
.
sIoMëhodsV1
.
xU∆ock
 = 
mu…ùÀxU∆ock
;

1128 
gMu…ùÀx
.
sIoMëhodsV1
.
xCheckRe£rvedLock
 = 
mu…ùÀxCheckRe£rvedLock
;

1129 
gMu…ùÀx
.
sIoMëhodsV1
.
xFûeC⁄åﬁ
 = 
mu…ùÀxFûeC⁄åﬁ
;

1130 
gMu…ùÀx
.
sIoMëhodsV1
.
xSe˘‹Size
 = 
mu…ùÀxSe˘‹Size
;

1131 
gMu…ùÀx
.
sIoMëhodsV1
.
xDevi˚Ch¨a˘îi°ics
 =

1132 
mu…ùÀxDevi˚Ch¨a˘îi°ics
;

1133 
gMu…ùÀx
.
sIoMëhodsV2
 = gMu…ùÀx.
sIoMëhodsV1
;

1134 
gMu…ùÀx
.
sIoMëhodsV2
.
iVîsi⁄
 = 2;

1135 
gMu…ùÀx
.
sIoMëhodsV2
.
xShmM≠
 = 
mu…ùÀxShmM≠
;

1136 
gMu…ùÀx
.
sIoMëhodsV2
.
xShmLock
 = 
mu…ùÀxShmLock
;

1137 
gMu…ùÀx
.
sIoMëhodsV2
.
xShmB¨rõr
 = 
mu…ùÀxShmB¨rõr
;

1138 
gMu…ùÀx
.
sIoMëhodsV2
.
xShmUnm≠
 = 
mu…ùÀxShmUnm≠
;

1139 
	`sqlôe3_vfs_ªgi°î
(&
gMu…ùÀx
.
sThisVfs
, 
makeDeÁu…
);

1141 
	`sqlôe3_auto_exãnsi⁄
(((*)())
mu…ùÀxFuncInô
);

1143  
SQLITE_OK
;

1144 
	}
}

1155 
	$sqlôe3_mu…ùÀx_shutdown
(
eF‹˚
){

1156 
rc
 = 
SQLITE_OK
;

1157 if–
gMu…ùÀx
.
isInôülized
==0 )  
SQLITE_MISUSE
;

1158 
gMu…ùÀx
.
isInôülized
 = 0;

1159 
	`sqlôe3_vfs_uƒegi°î
(&
gMu…ùÀx
.
sThisVfs
);

1160 
	`mem£t
(&
gMu…ùÀx
, 0, (gMultiplex));

1161  
rc
;

1162 
	}
}

1165 #ifde‡
SQLITE_TEST


1166 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

1167 
	~"sqlôe_t˛.h
"

1169 
	~"t˛.h
"

1170 #i‚de‡
SQLITE_TCLAPI


1171 
	#SQLITE_TCLAPI


	)

1174 c⁄° *
sqlôe3EºName
();

1180 
SQLITE_TCLAPI
 
	$ã°_mu…ùÀx_öôülize
(

1181 * 
˛õ¡D©a
,

1182 
T˛_I¡îp
 *
öãΩ
,

1183 
objc
,

1184 
T˛_Obj
 *
CONST
 
objv
[]

1186 c⁄° *
zName
;

1187 
makeDeÁu…
;

1188 
rc
;

1190 
	`UNUSED_PARAMETER
(
˛õ¡D©a
);

1193 if–
objc
!=3 ){

1194 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "NAME MAKEDEFAULT");

1195  
TCL_ERROR
;

1197 
zName
 = 
	`T˛_GëSåög
(
objv
[1]);

1198 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[2], &
makeDeÁu…
ËË 
TCL_ERROR
;

1199 if–
zName
[0]=='\0' ) zName = 0;

1202 
rc
 = 
	`sqlôe3_mu…ùÀx_öôülize
(
zName
, 
makeDeÁu…
);

1203 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_STATIC
);

1205  
TCL_OK
;

1206 
	}
}

1211 
SQLITE_TCLAPI
 
	$ã°_mu…ùÀx_shutdown
(

1212 * 
˛õ¡D©a
,

1213 
T˛_I¡îp
 *
öãΩ
,

1214 
objc
,

1215 
T˛_Obj
 *
CONST
 
objv
[]

1217 
rc
;

1219 
	`UNUSED_PARAMETER
(
˛õ¡D©a
);

1221 if–
objc
==2 && 
	`°rcmp
(
	`T˛_GëSåög
(
objv
[1]),"-force")!=0 ){

1222 
objc
 = 3;

1224 if–(
objc
!=1 && objc!=2) ){

1225 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "?-force?");

1226  
TCL_ERROR
;

1230 
rc
 = 
	`sqlôe3_mu…ùÀx_shutdown
(
objc
==2);

1231 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_STATIC
);

1233  
TCL_OK
;

1234 
	}
}

1239 
SQLITE_TCLAPI
 
	$ã°_mu…ùÀx_c⁄åﬁ
(

1240 
Clõ¡D©a
 
cd
,

1241 
T˛_I¡îp
 *
öãΩ
,

1242 
objc
,

1243 
T˛_Obj
 *
CONST
 
objv
[]

1245 
rc
;

1246 
idx
;

1247 
T˛_CmdInfo
 
cmdInfo
;

1248 
sqlôe3
 *
db
;

1249 
iVÆue
 = 0;

1250 *
pArg
 = 0;

1252 
	sSubComm™d
 {

1253 c⁄° *
zName
;

1254 
›
;

1255 
¨gty≥
;

1256 } 
aSub
[] = {

1257 { "íabÀ", 
MULTIPLEX_CTRL_ENABLE
, 1 },

1258 { "chunk_size", 
MULTIPLEX_CTRL_SET_CHUNK_SIZE
, 1 },

1259 { "max_chunks", 
MULTIPLEX_CTRL_SET_MAX_CHUNKS
, 1 },

1263 if–
objc
!=5 ){

1264 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HANDLE DBNAME SUB-COMMAND INT-VALUE");

1265  
TCL_ERROR
;

1268 if–0==
	`T˛_GëComm™dInfo
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
cmdInfo
) ){

1269 
	`T˛_AµídResu…
(
öãΩ
, "expected database handle, got \"", 0);

1270 
	`T˛_AµídResu…
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), "\"", 0);

1271  
TCL_ERROR
;

1273 
db
 = *(
sqlôe3
 **)
cmdInfo
.
objClõ¡D©a
;

1276 
rc
 = 
	`T˛_GëIndexFromObjSåu˘
(

1277 
öãΩ
, 
objv
[3], 
aSub
, ◊Sub[0]), "sub-comm™d", 0, &
idx


1279 if–
rc
!=
TCL_OK
 ) Ñc;

1281  
aSub
[
idx
].
¨gty≥
 ){

1283 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[4], &
iVÆue
) ){

1284  
TCL_ERROR
;

1286 
pArg
 = (*)&
iVÆue
;

1289 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 4, 
objv
, "SUB-COMMAND");

1290  
TCL_ERROR
;

1293 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, 
	`T˛_GëSåög
(
objv
[2]), 
aSub
[
idx
].
›
, 
pArg
);

1294 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_STATIC
);

1295  (
rc
==
SQLITE_OK
Ë? 
TCL_OK
 : 
TCL_ERROR
;

1296 
	}
}

1303 
	$Sqlôemu…ùÀx_Inô
(
T˛_I¡îp
 *
öãΩ
){

1305 *
zName
;

1306 
T˛_ObjCmdProc
 *
xProc
;

1307 } 
aCmd
[] = {

1308 { "sqlôe3_mu…ùÀx_öôülize", 
ã°_mu…ùÀx_öôülize
 },

1309 { "sqlôe3_mu…ùÀx_shutdown", 
ã°_mu…ùÀx_shutdown
 },

1310 { "sqlôe3_mu…ùÀx_c⁄åﬁ", 
ã°_mu…ùÀx_c⁄åﬁ
 },

1312 
i
;

1314 
i
=0; i<(
aCmd
)/(aCmd[0]); i++){

1315 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
aCmd
[
i
].
zName
,áCmd[i].
xProc
, 0, 0);

1318  
TCL_OK
;

1319 
	}
}

	@test_multiplex.h

23 #i‚de‡
SQLITE_TEST_MULTIPLEX_H


24 
	#SQLITE_TEST_MULTIPLEX_H


	)

45 
	#MULTIPLEX_CTRL_ENABLE
 214014

	)

46 
	#MULTIPLEX_CTRL_SET_CHUNK_SIZE
 214015

	)

47 
	#MULTIPLEX_CTRL_SET_MAX_CHUNKS
 214016

	)

49 #ifde‡
__˝lu•lus


82 
sqlôe3_mu…ùÀx_öôülize
(c⁄° *
zOrigVfsName
, 
makeDeÁu…
);

93 
sqlôe3_mu…ùÀx_shutdown
(
eF‹˚
);

95 #ifde‡
__˝lu•lus


	@test_mutex.c

15 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

16 
	~"sqlôe_t˛.h
"

18 
	~"t˛.h
"

20 
	~"sqlôe3.h
"

21 
	~"sqlôeI¡.h
"

22 
	~<°dlib.h
>

23 
	~<as£π.h
>

24 
	~<°rög.h
>

26 
	#MAX_MUTEXES
 (
SQLITE_MUTEX_STATIC_VFS3
+1)

	)

27 
	#STATIC_MUTEXES
 (
MAX_MUTEXES
-(
SQLITE_MUTEX_RECURSIVE
+1))

	)

30 c⁄° *
sqlôe3EºName
();

32 c⁄° *
	gaName
[
MAX_MUTEXES
+1] = {

40 
	ssqlôe3_muãx
 {

41 
sqlôe3_muãx
 *
	mpRól
;

42 
	meTy≥
;

46 
	sã°_muãx_globÆs
 {

47 
	misIn°ÆÀd
;

48 
	mdißbÀInô
;

49 
	mdißbÀTry
;

50 
	misInô
;

51 
sqlôe3_muãx_mëhods
 
	mm
;

52 
	maCou¡î
[
MAX_MUTEXES
];

53 
sqlôe3_muãx
 
	maSètic
[
STATIC_MUTEXES
];

54 } 
	gg
 = {0};

57 
	$cou¡îMuãxHñd
(
sqlôe3_muãx
 *
p
){

58  
g
.
m
.
	`xMuãxHñd
(
p
->
pRól
);

59 
	}
}

62 
	$cou¡îMuãxNŸhñd
(
sqlôe3_muãx
 *
p
){

63  
g
.
m
.
	`xMuãxNŸhñd
(
p
->
pRól
);

64 
	}
}

71 
	$cou¡îMuãxInô
(){

72 
rc
;

73 if–
g
.
dißbÀInô
 )  g.disableInit;

74 
rc
 = 
g
.
m
.
	`xMuãxInô
();

75 
g
.
isInô
 = 1;

76  
rc
;

77 
	}
}

82 
	$cou¡îMuãxEnd
(){

83 
g
.
isInô
 = 0;

84  
g
.
m
.
	`xMuãxEnd
();

85 
	}
}

90 
sqlôe3_muãx
 *
	$cou¡îMuãxAŒoc
(
eTy≥
){

91 
sqlôe3_muãx
 *
pRól
;

92 
sqlôe3_muãx
 *
pRë
 = 0;

94 
	`as£π
–
g
.
isInô
 );

95 
	`as£π
–
eTy≥
>=
SQLITE_MUTEX_FAST
 );

96 
	`as£π
–
eTy≥
<=
SQLITE_MUTEX_STATIC_VFS3
 );

98 
pRól
 = 
g
.
m
.
	`xMuãxAŒoc
(
eTy≥
);

99 if–!
pRól
 )  0;

101 if–
eTy≥
==
SQLITE_MUTEX_FAST
 ||ÉTy≥==
SQLITE_MUTEX_RECURSIVE
 ){

102 
pRë
 = (
sqlôe3_muãx
 *)
	`mÆloc
((sqlite3_mutex));

104 
eSèticTy≥
 = 
eTy≥
 - (
MAX_MUTEXES
 - 
STATIC_MUTEXES
);

105 
	`as£π
–
eSèticTy≥
>=0 );

106 
	`as£π
–
eSèticTy≥
<
STATIC_MUTEXES
 );

107 
pRë
 = &
g
.
aSètic
[
eSèticTy≥
];

110 
pRë
->
eTy≥
 =ÉType;

111 
pRë
->
pRól
 =ÖReal;

112  
pRë
;

113 
	}
}

118 
	$cou¡îMuãxFªe
(
sqlôe3_muãx
 *
p
){

119 
	`as£π
–
g
.
isInô
 );

120 
g
.
m
.
	`xMuãxFªe
(
p
->
pRól
);

121 if–
p
->
eTy≥
==
SQLITE_MUTEX_FAST
 ||Ö->eTy≥==
SQLITE_MUTEX_RECURSIVE
 ){

122 
	`‰ì
(
p
);

124 
	}
}

129 
	$cou¡îMuãxE¡î
(
sqlôe3_muãx
 *
p
){

130 
	`as£π
–
g
.
isInô
 );

131 
	`as£π
–
p
->
eTy≥
>=0 );

132 
	`as£π
–
p
->
eTy≥
<
MAX_MUTEXES
 );

133 
g
.
aCou¡î
[
p
->
eTy≥
]++;

134 
g
.
m
.
	`xMuãxE¡î
(
p
->
pRól
);

135 
	}
}

140 
	$cou¡îMuãxTry
(
sqlôe3_muãx
 *
p
){

141 
	`as£π
–
g
.
isInô
 );

142 
	`as£π
–
p
->
eTy≥
>=0 );

143 
	`as£π
–
p
->
eTy≥
<
MAX_MUTEXES
 );

144 
g
.
aCou¡î
[
p
->
eTy≥
]++;

145 if–
g
.
dißbÀTry
 )  
SQLITE_BUSY
;

146  
g
.
m
.
	`xMuãxTry
(
p
->
pRól
);

147 
	}
}

151 
	$cou¡îMuãxLóve
(
sqlôe3_muãx
 *
p
){

152 
	`as£π
–
g
.
isInô
 );

153 
g
.
m
.
	`xMuãxLóve
(
p
->
pRól
);

154 
	}
}

159 
SQLITE_TCLAPI
 
	$ã°_shutdown
(

160 * 
˛õ¡D©a
,

161 
T˛_I¡îp
 *
öãΩ
,

162 
objc
,

163 
T˛_Obj
 *
CONST
 
objv
[]

165 
rc
;

167 if–
objc
!=1 ){

168 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

169  
TCL_ERROR
;

172 
rc
 = 
	`sqlôe3_shutdown
();

173 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_VOLATILE
);

174  
TCL_OK
;

175 
	}
}

180 
SQLITE_TCLAPI
 
	$ã°_öôülize
(

181 * 
˛õ¡D©a
,

182 
T˛_I¡îp
 *
öãΩ
,

183 
objc
,

184 
T˛_Obj
 *
CONST
 
objv
[]

186 
rc
;

188 if–
objc
!=1 ){

189 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

190  
TCL_ERROR
;

193 
rc
 = 
	`sqlôe3_öôülize
();

194 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_VOLATILE
);

195  
TCL_OK
;

196 
	}
}

201 
SQLITE_TCLAPI
 
	$ã°_ö°Æl_muãx_cou¡îs
(

202 * 
˛õ¡D©a
,

203 
T˛_I¡îp
 *
öãΩ
,

204 
objc
,

205 
T˛_Obj
 *
CONST
 
objv
[]

207 
rc
 = 
SQLITE_OK
;

208 
isIn°Æl
;

210 
sqlôe3_muãx_mëhods
 
cou¡î_mëhods
 = {

211 
cou¡îMuãxInô
,

212 
cou¡îMuãxEnd
,

213 
cou¡îMuãxAŒoc
,

214 
cou¡îMuãxFªe
,

215 
cou¡îMuãxE¡î
,

216 
cou¡îMuãxTry
,

217 
cou¡îMuãxLóve
,

218 
cou¡îMuãxHñd
,

219 
cou¡îMuãxNŸhñd


222 if–
objc
!=2 ){

223 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "BOOLEAN");

224  
TCL_ERROR
;

226 if–
TCL_OK
!=
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[1], &
isIn°Æl
) ){

227  
TCL_ERROR
;

230 
	`as£π
(
isIn°Æl
==0 || isInstall==1);

231 
	`as£π
(
g
.
isIn°ÆÀd
==0 || g.isInstalled==1);

232 if–
isIn°Æl
==
g
.
isIn°ÆÀd
 ){

233 
	`T˛_AµídResu…
(
öãΩ
, "mutex countersáre ", 0);

234 
	`T˛_AµídResu…
(
öãΩ
, 
isIn°Æl
?"already installed":"not installed", 0);

235  
TCL_ERROR
;

238 if–
isIn°Æl
 ){

239 
	`as£π
–
g
.
m
.
xMuãxAŒoc
==0 );

240 
rc
 = 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_GETMUTEX
, &
g
.
m
);

241 if–
rc
==
SQLITE_OK
 ){

242 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_MUTEX
, &
cou¡î_mëhods
);

244 
g
.
dißbÀTry
 = 0;

246 
	`as£π
–
g
.
m
.
xMuãxAŒoc
 );

247 
rc
 = 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_MUTEX
, &
g
.
m
);

248 
	`mem£t
(&
g
.
m
, 0, (
sqlôe3_muãx_mëhods
));

251 if–
rc
==
SQLITE_OK
 ){

252 
g
.
isIn°ÆÀd
 = 
isIn°Æl
;

255 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_VOLATILE
);

256  
TCL_OK
;

257 
	}
}

262 
SQLITE_TCLAPI
 
	$ã°_ªad_muãx_cou¡îs
(

263 * 
˛õ¡D©a
,

264 
T˛_I¡îp
 *
öãΩ
,

265 
objc
,

266 
T˛_Obj
 *
CONST
 
objv
[]

268 
T˛_Obj
 *
pRë
;

269 
ii
;

271 if–
objc
!=1 ){

272 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

273  
TCL_ERROR
;

276 
pRë
 = 
	`T˛_NewObj
();

277 
	`T˛_In¸RefCou¡
(
pRë
);

278 
ii
=0; ii<
MAX_MUTEXES
; ii++){

279 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewSåögObj
(
aName
[
ii
], -1));

280 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewI¡Obj
(
g
.
aCou¡î
[
ii
]));

282 
	`T˛_SëObjResu…
(
öãΩ
, 
pRë
);

283 
	`T˛_De¸RefCou¡
(
pRë
);

285  
TCL_OK
;

286 
	}
}

291 
SQLITE_TCLAPI
 
	$ã°_˛ór_muãx_cou¡îs
(

292 * 
˛õ¡D©a
,

293 
T˛_I¡îp
 *
öãΩ
,

294 
objc
,

295 
T˛_Obj
 *
CONST
 
objv
[]

297 
ii
;

299 if–
objc
!=1 ){

300 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

301  
TCL_ERROR
;

304 
ii
=0; ii<
MAX_MUTEXES
; ii++){

305 
g
.
aCou¡î
[
ii
] = 0;

307  
TCL_OK
;

308 
	}
}

315 
SQLITE_TCLAPI
 
	$ã°_Æloc_muãx
(

316 * 
˛õ¡D©a
,

317 
T˛_I¡îp
 *
öãΩ
,

318 
objc
,

319 
T˛_Obj
 *
CONST
 
objv
[]

321 #i‡
SQLITE_THREADSAFE


322 
sqlôe3_muãx
 *
p
 = 
	`sqlôe3_muãx_Æloc
(
SQLITE_MUTEX_FAST
);

323 
zBuf
[100];

324 
	`sqlôe3_muãx_‰ì
(
p
);

325 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%p", 
p
);

326 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, (*)0);

328  
TCL_OK
;

329 
	}
}

342 
SQLITE_TCLAPI
 
	$ã°_c⁄fig
(

343 * 
˛õ¡D©a
,

344 
T˛_I¡îp
 *
öãΩ
,

345 
objc
,

346 
T˛_Obj
 *
CONST
 
objv
[]

348 
	sC⁄figO±i⁄
 {

349 c⁄° *
zName
;

350 
iVÆue
;

351 } 
aO±
[] = {

352 {"sögÀthªad", 
SQLITE_CONFIG_SINGLETHREAD
},

353 {"mu…ôhªad", 
SQLITE_CONFIG_MULTITHREAD
},

354 {"£rülized", 
SQLITE_CONFIG_SERIALIZED
},

357 
s
 = (
C⁄figO±i⁄
);

358 
i
;

359 
rc
;

361 if–
objc
!=2 ){

362 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

363  
TCL_ERROR
;

366 if–
	`T˛_GëIndexFromObjSåu˘
(
öãΩ
, 
objv
[1], 
aO±
, 
s
, "Êag", 0, &
i
) ){

367 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[1], &
i
) ){

368  
TCL_ERROR
;

371 
i
 = 
aO±
[i].
iVÆue
;

374 
rc
 = 
	`sqlôe3_c⁄fig
(
i
);

375 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_VOLATILE
);

376  
TCL_OK
;

377 
	}
}

379 
sqlôe3
 *
	$gëDbPoöãr
(
T˛_I¡îp
 *
pI¡îp
, 
T˛_Obj
 *
pObj
){

380 
sqlôe3
 *
db
;

381 
T˛_CmdInfo
 
öfo
;

382 *
zCmd
 = 
	`T˛_GëSåög
(
pObj
);

383 if–
	`T˛_GëComm™dInfo
(
pI¡îp
, 
zCmd
, &
öfo
) ){

384 
db
 = *((
sqlôe3
 **)
öfo
.
objClõ¡D©a
);

386 
db
 = (
sqlôe3
*)
	`sqlôe3Te°TextToPå
(
zCmd
);

388 
	`as£π
–
db
 );

389  
db
;

390 
	}
}

392 
sqlôe3_muãx
 *
	$gëSèticMuãxPoöãr
(

393 
T˛_I¡îp
 *
pI¡îp
,

394 
T˛_Obj
 *
pObj


396 
iMuãx
;

397 if–
	`T˛_GëIndexFromObj
(
pI¡îp
, 
pObj
, 
aName
, "muãxÇame", 0, &
iMuãx
) ){

400 
	`as£π
–
iMuãx
!=
SQLITE_MUTEX_FAST
 && iMuãx!=
SQLITE_MUTEX_RECURSIVE
 );

401  
	`cou¡îMuãxAŒoc
(
iMuãx
);

402 
	}
}

404 
SQLITE_TCLAPI
 
	$ã°_íãr_°©ic_muãx
(

405 * 
˛õ¡D©a
,

406 
T˛_I¡îp
 *
öãΩ
,

407 
objc
,

408 
T˛_Obj
 *
CONST
 
objv
[]

410 
sqlôe3_muãx
 *
pMuãx
;

411 if–
objc
!=2 ){

412 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "NAME");

413  
TCL_ERROR
;

415 
pMuãx
 = 
	`gëSèticMuãxPoöãr
(
öãΩ
, 
objv
[1]);

416 if–!
pMuãx
 ){

417  
TCL_ERROR
;

419 
	`sqlôe3_muãx_íãr
(
pMuãx
);

420  
TCL_OK
;

421 
	}
}

423 
SQLITE_TCLAPI
 
	$ã°_Àave_°©ic_muãx
(

424 * 
˛õ¡D©a
,

425 
T˛_I¡îp
 *
öãΩ
,

426 
objc
,

427 
T˛_Obj
 *
CONST
 
objv
[]

429 
sqlôe3_muãx
 *
pMuãx
;

430 if–
objc
!=2 ){

431 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "NAME");

432  
TCL_ERROR
;

434 
pMuãx
 = 
	`gëSèticMuãxPoöãr
(
öãΩ
, 
objv
[1]);

435 if–!
pMuãx
 ){

436  
TCL_ERROR
;

438 
	`sqlôe3_muãx_Àave
(
pMuãx
);

439  
TCL_OK
;

440 
	}
}

442 
SQLITE_TCLAPI
 
	$ã°_íãr_db_muãx
(

443 * 
˛õ¡D©a
,

444 
T˛_I¡îp
 *
öãΩ
,

445 
objc
,

446 
T˛_Obj
 *
CONST
 
objv
[]

448 
sqlôe3
 *
db
;

449 if–
objc
!=2 ){

450 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB");

451  
TCL_ERROR
;

453 
db
 = 
	`gëDbPoöãr
(
öãΩ
, 
objv
[1]);

454 if–!
db
 ){

455  
TCL_ERROR
;

457 
	`sqlôe3_muãx_íãr
(
	`sqlôe3_db_muãx
(
db
));

458  
TCL_OK
;

459 
	}
}

461 
SQLITE_TCLAPI
 
	$ã°_Àave_db_muãx
(

462 * 
˛õ¡D©a
,

463 
T˛_I¡îp
 *
öãΩ
,

464 
objc
,

465 
T˛_Obj
 *
CONST
 
objv
[]

467 
sqlôe3
 *
db
;

468 if–
objc
!=2 ){

469 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB");

470  
TCL_ERROR
;

472 
db
 = 
	`gëDbPoöãr
(
öãΩ
, 
objv
[1]);

473 if–!
db
 ){

474  
TCL_ERROR
;

476 
	`sqlôe3_muãx_Àave
(
	`sqlôe3_db_muãx
(
db
));

477  
TCL_OK
;

478 
	}
}

480 
	$Sqlôëe°_muãx_Inô
(
T˛_I¡îp
 *
öãΩ
){

482 *
zName
;

483 
T˛_ObjCmdProc
 *
xProc
;

484 } 
aCmd
[] = {

485 { "sqlôe3_shutdown", (
T˛_ObjCmdProc
*)
ã°_shutdown
 },

486 { "sqlôe3_öôülize", (
T˛_ObjCmdProc
*)
ã°_öôülize
 },

487 { "sqlôe3_c⁄fig", (
T˛_ObjCmdProc
*)
ã°_c⁄fig
 },

489 { "íãr_°©ic_muãx", (
T˛_ObjCmdProc
*)
ã°_íãr_°©ic_muãx
 },

490 { "Àave_°©ic_muãx", (
T˛_ObjCmdProc
*)
ã°_Àave_°©ic_muãx
 },

492 { "íãr_db_muãx", (
T˛_ObjCmdProc
*)
ã°_íãr_db_muãx
 },

493 { "Àave_db_muãx", (
T˛_ObjCmdProc
*)
ã°_Àave_db_muãx
 },

495 { "Æloc_dóŒoc_muãx", (
T˛_ObjCmdProc
*)
ã°_Æloc_muãx
 },

496 { "ö°Æl_muãx_cou¡îs", (
T˛_ObjCmdProc
*)
ã°_ö°Æl_muãx_cou¡îs
 },

497 { "ªad_muãx_cou¡îs", (
T˛_ObjCmdProc
*)
ã°_ªad_muãx_cou¡îs
 },

498 { "˛ór_muãx_cou¡îs", (
T˛_ObjCmdProc
*)
ã°_˛ór_muãx_cou¡îs
 },

500 
i
;

501 
i
=0; i<(
aCmd
)/(aCmd[0]); i++){

502 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
aCmd
[
i
].
zName
,áCmd[i].
xProc
, 0, 0);

505 
	`T˛_LökV¨
(
öãΩ
, "disable_mutex_init",

506 (*)&
g
.
dißbÀInô
, 
TCL_LINK_INT
);

507 
	`T˛_LökV¨
(
öãΩ
, "disable_mutex_try",

508 (*)&
g
.
dißbÀTry
, 
TCL_LINK_INT
);

509  
SQLITE_OK
;

510 
	}
}

	@test_onefile.c

82 
	~"sqlôe3.h
"

83 
	~<as£π.h
>

84 
	~<°rög.h
>

89 
	#BLOCKSIZE
 512

	)

90 
	#BLOBSIZE
 10485760

	)

95 
	#FS_VFS_NAME
 "fs"

	)

97 
fs_ªÆ_fûe
 
	tfs_ªÆ_fûe
;

98 
	sfs_ªÆ_fûe
 {

99 
sqlôe3_fûe
 *
	mpFûe
;

100 c⁄° *
	mzName
;

101 
	mnD©aba£
;

102 
	mnJou∫Æ
;

103 
	mnBlob
;

104 
	mnRef
;

105 
fs_ªÆ_fûe
 *
	mpNext
;

106 
fs_ªÆ_fûe
 **
	mµThis
;

109 
fs_fûe
 
	tfs_fûe
;

110 
	sfs_fûe
 {

111 
sqlôe3_fûe
 
	mba£
;

112 
	meTy≥
;

113 
fs_ªÆ_fûe
 *
	mpRól
;

116 
tmp_fûe
 
	ttmp_fûe
;

117 
	stmp_fûe
 {

118 
sqlôe3_fûe
 
	mba£
;

119 
	mnSize
;

120 
	mnAŒoc
;

121 *
	mzAŒoc
;

125 
	#DATABASE_FILE
 1

	)

126 
	#JOURNAL_FILE
 2

	)

131 
fsClo£
(
sqlôe3_fûe
*);

132 
fsRód
(
sqlôe3_fûe
*, *, 
iAmt
, 
sqlôe3_öt64
 
iOf°
);

133 
fsWrôe
(
sqlôe3_fûe
*, c⁄° *, 
iAmt
, 
sqlôe3_öt64
 
iOf°
);

134 
fsTrunˇã
(
sqlôe3_fûe
*, 
sqlôe3_öt64
 
size
);

135 
fsSync
(
sqlôe3_fûe
*, 
Êags
);

136 
fsFûeSize
(
sqlôe3_fûe
*, 
sqlôe3_öt64
 *
pSize
);

137 
fsLock
(
sqlôe3_fûe
*, );

138 
fsU∆ock
(
sqlôe3_fûe
*, );

139 
fsCheckRe£rvedLock
(
sqlôe3_fûe
*, *
pResOut
);

140 
fsFûeC⁄åﬁ
(
sqlôe3_fûe
*, 
›
, *
pArg
);

141 
fsSe˘‹Size
(
sqlôe3_fûe
*);

142 
fsDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
*);

147 
tmpClo£
(
sqlôe3_fûe
*);

148 
tmpRód
(
sqlôe3_fûe
*, *, 
iAmt
, 
sqlôe3_öt64
 
iOf°
);

149 
tmpWrôe
(
sqlôe3_fûe
*, c⁄° *, 
iAmt
, 
sqlôe3_öt64
 
iOf°
);

150 
tmpTrunˇã
(
sqlôe3_fûe
*, 
sqlôe3_öt64
 
size
);

151 
tmpSync
(
sqlôe3_fûe
*, 
Êags
);

152 
tmpFûeSize
(
sqlôe3_fûe
*, 
sqlôe3_öt64
 *
pSize
);

153 
tmpLock
(
sqlôe3_fûe
*, );

154 
tmpU∆ock
(
sqlôe3_fûe
*, );

155 
tmpCheckRe£rvedLock
(
sqlôe3_fûe
*, *
pResOut
);

156 
tmpFûeC⁄åﬁ
(
sqlôe3_fûe
*, 
›
, *
pArg
);

157 
tmpSe˘‹Size
(
sqlôe3_fûe
*);

158 
tmpDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
*);

163 
fsO≥n
(
sqlôe3_vfs
*, c⁄° *, 
sqlôe3_fûe
*, , *);

164 
fsDñëe
(
sqlôe3_vfs
*, c⁄° *
zName
, 
syncDú
);

165 
fsAc˚ss
(
sqlôe3_vfs
*, c⁄° *
zName
, 
Êags
, *);

166 
fsFuŒP©h«me
(
sqlôe3_vfs
*, c⁄° *
zName
, 
nOut
,*
zOut
);

167 *
fsDlO≥n
(
sqlôe3_vfs
*, c⁄° *
zFûíame
);

168 
fsDlEº‹
(
sqlôe3_vfs
*, 
nByã
, *
zEºMsg
);

169 (*
	$fsDlSym
(
sqlôe3_vfs
*,*, c⁄° *
zSymbﬁ
))();

170 
	`fsDlClo£
(
sqlôe3_vfs
*, *);

171 
	`fsR™dom√ss
(
sqlôe3_vfs
*, 
nByã
, *
zOut
);

172 
	`fsSÀï
(
sqlôe3_vfs
*, 
mi¸o£c⁄ds
);

173 
	`fsCuºítTime
(
sqlôe3_vfs
*, *);

176 
fs_vfs_t
 
	tfs_vfs_t
;

177 
	sfs_vfs_t
 {

178 
sqlôe3_vfs
 
ba£
;

179 
fs_ªÆ_fûe
 *
pFûeLi°
;

180 
sqlôe3_vfs
 *
pP¨ít
;

183 
fs_vfs_t
 
fs_vfs
 = {

189 
FS_VFS_NAME
,

191 
fsO≥n
,

192 
fsDñëe
,

193 
fsAc˚ss
,

194 
fsFuŒP©h«me
,

195 
fsDlO≥n
,

196 
fsDlEº‹
,

197 
fsDlSym
,

198 
fsDlClo£
,

199 
fsR™dom√ss
,

200 
fsSÀï
,

201 
fsCuºítTime
,

206 
	}
};

208 
sqlôe3_io_mëhods
 
	gfs_io_mëhods
 = {

210 
fsClo£
,

211 
fsRód
,

212 
fsWrôe
,

213 
fsTrunˇã
,

214 
fsSync
,

215 
fsFûeSize
,

216 
fsLock
,

217 
fsU∆ock
,

218 
fsCheckRe£rvedLock
,

219 
fsFûeC⁄åﬁ
,

220 
fsSe˘‹Size
,

221 
fsDevi˚Ch¨a˘îi°ics
,

229 
sqlôe3_io_mëhods
 
	gtmp_io_mëhods
 = {

231 
tmpClo£
,

232 
tmpRód
,

233 
tmpWrôe
,

234 
tmpTrunˇã
,

235 
tmpSync
,

236 
tmpFûeSize
,

237 
tmpLock
,

238 
tmpU∆ock
,

239 
tmpCheckRe£rvedLock
,

240 
tmpFûeC⁄åﬁ
,

241 
tmpSe˘‹Size
,

242 
tmpDevi˚Ch¨a˘îi°ics
,

250 
	#MIN
(
x
,
y
Ë((x)<(y)?(x):(y))

	)

251 
	#MAX
(
x
,
y
Ë((x)>(y)?(x):(y))

	)

257 
	$tmpClo£
(
sqlôe3_fûe
 *
pFûe
){

258 
tmp_fûe
 *
pTmp
 = (tmp_fûê*)
pFûe
;

259 
	`sqlôe3_‰ì
(
pTmp
->
zAŒoc
);

260  
SQLITE_OK
;

261 
	}
}

266 
	$tmpRód
(

267 
sqlôe3_fûe
 *
pFûe
,

268 *
zBuf
,

269 
iAmt
,

270 
sqlôe_öt64
 
iOf°


272 
tmp_fûe
 *
pTmp
 = (tmp_fûê*)
pFûe
;

273 if–(
iAmt
+
iOf°
)>
pTmp
->
nSize
 ){

274  
SQLITE_IOERR_SHORT_READ
;

276 
	`mem˝y
(
zBuf
, &
pTmp
->
zAŒoc
[
iOf°
], 
iAmt
);

277  
SQLITE_OK
;

278 
	}
}

283 
	$tmpWrôe
(

284 
sqlôe3_fûe
 *
pFûe
,

285 c⁄° *
zBuf
,

286 
iAmt
,

287 
sqlôe_öt64
 
iOf°


289 
tmp_fûe
 *
pTmp
 = (tmp_fûê*)
pFûe
;

290 if–(
iAmt
+
iOf°
)>
pTmp
->
nAŒoc
 ){

291 
nNew
 = ()(2*(
iAmt
+
iOf°
+
pTmp
->
nAŒoc
));

292 *
zNew
 = 
	`sqlôe3_ªÆloc
(
pTmp
->
zAŒoc
, 
nNew
);

293 if–!
zNew
 ){

294  
SQLITE_NOMEM
;

296 
pTmp
->
zAŒoc
 = 
zNew
;

297 
pTmp
->
nAŒoc
 = 
nNew
;

299 
	`mem˝y
(&
pTmp
->
zAŒoc
[
iOf°
], 
zBuf
, 
iAmt
);

300 
pTmp
->
nSize
 = ()
	`MAX
’Tmp->nSize, 
iOf°
+
iAmt
);

301  
SQLITE_OK
;

302 
	}
}

307 
	$tmpTrunˇã
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe_öt64
 
size
){

308 
tmp_fûe
 *
pTmp
 = (tmp_fûê*)
pFûe
;

309 
pTmp
->
nSize
 = ()
	`MIN
’Tmp->nSize, 
size
);

310  
SQLITE_OK
;

311 
	}
}

316 
	$tmpSync
(
sqlôe3_fûe
 *
pFûe
, 
Êags
){

317  
SQLITE_OK
;

318 
	}
}

323 
	$tmpFûeSize
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe_öt64
 *
pSize
){

324 
tmp_fûe
 *
pTmp
 = (tmp_fûê*)
pFûe
;

325 *
pSize
 = 
pTmp
->
nSize
;

326  
SQLITE_OK
;

327 
	}
}

332 
	$tmpLock
(
sqlôe3_fûe
 *
pFûe
, 
eLock
){

333  
SQLITE_OK
;

334 
	}
}

339 
	$tmpU∆ock
(
sqlôe3_fûe
 *
pFûe
, 
eLock
){

340  
SQLITE_OK
;

341 
	}
}

346 
	$tmpCheckRe£rvedLock
(
sqlôe3_fûe
 *
pFûe
, *
pResOut
){

347 *
pResOut
 = 0;

348  
SQLITE_OK
;

349 
	}
}

354 
	$tmpFûeC⁄åﬁ
(
sqlôe3_fûe
 *
pFûe
, 
›
, *
pArg
){

355  
SQLITE_OK
;

356 
	}
}

361 
	$tmpSe˘‹Size
(
sqlôe3_fûe
 *
pFûe
){

363 
	}
}

368 
	$tmpDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
 *
pFûe
){

370 
	}
}

375 
	$fsClo£
(
sqlôe3_fûe
 *
pFûe
){

376 
rc
 = 
SQLITE_OK
;

377 
fs_fûe
 *
p
 = (fs_fûê*)
pFûe
;

378 
fs_ªÆ_fûe
 *
pRól
 = 
p
->pReal;

381 
pRól
->
nRef
--;

382 
	`as£π
(
pRól
->
nRef
>=0);

385 if–
pRól
->
nRef
==0 ){

386 *
pRól
->
µThis
 =ÖRól->
pNext
;

387 if–
pRól
->
pNext
 ){

388 
pRól
->
pNext
->
µThis
 =ÖReal->ppThis;

390 
rc
 = 
pRól
->
pFûe
->
pMëhods
->
	`xClo£
(pReal->pFile);

391 
	`sqlôe3_‰ì
(
pRól
);

394  
rc
;

395 
	}
}

400 
	$fsRód
(

401 
sqlôe3_fûe
 *
pFûe
,

402 *
zBuf
,

403 
iAmt
,

404 
sqlôe_öt64
 
iOf°


406 
rc
 = 
SQLITE_OK
;

407 
fs_fûe
 *
p
 = (fs_fûê*)
pFûe
;

408 
fs_ªÆ_fûe
 *
pRól
 = 
p
->pReal;

409 
sqlôe3_fûe
 *
pF
 = 
pRól
->
pFûe
;

411 if–(
p
->
eTy≥
==
DATABASE_FILE
 && (
iAmt
+
iOf°
)>
pRól
->
nD©aba£
)

412 || (
p
->
eTy≥
==
JOURNAL_FILE
 && (
iAmt
+
iOf°
)>
pRól
->
nJou∫Æ
)

414 
rc
 = 
SQLITE_IOERR_SHORT_READ
;

415 }if–
p
->
eTy≥
==
DATABASE_FILE
 ){

416 
rc
 = 
pF
->
pMëhods
->
	`xRód
’F, 
zBuf
, 
iAmt
, 
iOf°
+
BLOCKSIZE
);

419 
iRem
 = 
iAmt
;

420 
iBuf
 = 0;

421 
ii
 = ()
iOf°
;

422  
iRem
>0 && 
rc
==
SQLITE_OK
 ){

423 
iRólOff
 = 
pRól
->
nBlob
 - 
BLOCKSIZE
*((
ii
/BLOCKSIZE)+1) + ii%BLOCKSIZE;

424 
iRólAmt
 = 
	`MIN
(
iRem
, 
BLOCKSIZE
 - (
iRólOff
%BLOCKSIZE));

426 
rc
 = 
pF
->
pMëhods
->
	`xRód
’F, &((*)
zBuf
)[
iBuf
], 
iRólAmt
, 
iRólOff
);

427 
ii
 +
iRólAmt
;

428 
iBuf
 +
iRólAmt
;

429 
iRem
 -
iRólAmt
;

433  
rc
;

434 
	}
}

439 
	$fsWrôe
(

440 
sqlôe3_fûe
 *
pFûe
,

441 c⁄° *
zBuf
,

442 
iAmt
,

443 
sqlôe_öt64
 
iOf°


445 
rc
 = 
SQLITE_OK
;

446 
fs_fûe
 *
p
 = (fs_fûê*)
pFûe
;

447 
fs_ªÆ_fûe
 *
pRól
 = 
p
->pReal;

448 
sqlôe3_fûe
 *
pF
 = 
pRól
->
pFûe
;

450 if–
p
->
eTy≥
==
DATABASE_FILE
 ){

451 if–(
iAmt
+
iOf°
+
BLOCKSIZE
)>(
pRól
->
nBlob
-pRól->
nJou∫Æ
) ){

452 
rc
 = 
SQLITE_FULL
;

454 
rc
 = 
pF
->
pMëhods
->
	`xWrôe
’F, 
zBuf
, 
iAmt
, 
iOf°
+
BLOCKSIZE
);

455 if–
rc
==
SQLITE_OK
 ){

456 
pRól
->
nD©aba£
 = ()
	`MAX
’Ról->nD©aba£, 
iAmt
+
iOf°
);

461 
iRem
 = 
iAmt
;

462 
iBuf
 = 0;

463 
ii
 = ()
iOf°
;

464  
iRem
>0 && 
rc
==
SQLITE_OK
 ){

465 
iRólOff
 = 
pRól
->
nBlob
 - 
BLOCKSIZE
*((
ii
/BLOCKSIZE)+1) + ii%BLOCKSIZE;

466 
iRólAmt
 = 
	`MIN
(
iRem
, 
BLOCKSIZE
 - (
iRólOff
%BLOCKSIZE));

468 if–
iRólOff
<(
pRól
->
nD©aba£
+
BLOCKSIZE
) ){

469 
rc
 = 
SQLITE_FULL
;

471 
rc
 = 
pF
->
pMëhods
->
	`xWrôe
’F, &((*)
zBuf
)[
iBuf
], 
iRólAmt
,
iRólOff
);

472 
ii
 +
iRólAmt
;

473 
iBuf
 +
iRólAmt
;

474 
iRem
 -
iRólAmt
;

477 if–
rc
==
SQLITE_OK
 ){

478 
pRól
->
nJou∫Æ
 = ()
	`MAX
’Ról->nJou∫Æ, 
iAmt
+
iOf°
);

482  
rc
;

483 
	}
}

488 
	$fsTrunˇã
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe_öt64
 
size
){

489 
fs_fûe
 *
p
 = (fs_fûê*)
pFûe
;

490 
fs_ªÆ_fûe
 *
pRól
 = 
p
->pReal;

491 if–
p
->
eTy≥
==
DATABASE_FILE
 ){

492 
pRól
->
nD©aba£
 = ()
	`MIN
’Ról->nD©aba£, 
size
);

494 
pRól
->
nJou∫Æ
 = ()
	`MIN
’Ról->nJou∫Æ, 
size
);

496  
SQLITE_OK
;

497 
	}
}

502 
	$fsSync
(
sqlôe3_fûe
 *
pFûe
, 
Êags
){

503 
fs_fûe
 *
p
 = (fs_fûê*)
pFûe
;

504 
fs_ªÆ_fûe
 *
pRól
 = 
p
->pReal;

505 
sqlôe3_fûe
 *
pRólFûe
 = 
pRól
->
pFûe
;

506 
rc
 = 
SQLITE_OK
;

508 if–
p
->
eTy≥
==
DATABASE_FILE
 ){

509 
zSize
[4];

510 
zSize
[0] = (
pRól
->
nD©aba£
&0xFF000000)>>24;

511 
zSize
[1] = ()((
pRól
->
nD©aba£
&0x00FF0000)>>16);

512 
zSize
[2] = (
pRól
->
nD©aba£
&0x0000FF00)>>8;

513 
zSize
[3] = (
pRól
->
nD©aba£
&0x000000FF);

514 
rc
 = 
pRólFûe
->
pMëhods
->
	`xWrôe
’RólFûe, 
zSize
, 4, 0);

516 if–
rc
==
SQLITE_OK
 ){

517 
rc
 = 
pRólFûe
->
pMëhods
->
	`xSync
’RólFûe, 
Êags
&(~
SQLITE_SYNC_DATAONLY
));

520  
rc
;

521 
	}
}

526 
	$fsFûeSize
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe_öt64
 *
pSize
){

527 
fs_fûe
 *
p
 = (fs_fûê*)
pFûe
;

528 
fs_ªÆ_fûe
 *
pRól
 = 
p
->pReal;

529 if–
p
->
eTy≥
==
DATABASE_FILE
 ){

530 *
pSize
 = 
pRól
->
nD©aba£
;

532 *
pSize
 = 
pRól
->
nJou∫Æ
;

534  
SQLITE_OK
;

535 
	}
}

540 
	$fsLock
(
sqlôe3_fûe
 *
pFûe
, 
eLock
){

541  
SQLITE_OK
;

542 
	}
}

547 
	$fsU∆ock
(
sqlôe3_fûe
 *
pFûe
, 
eLock
){

548  
SQLITE_OK
;

549 
	}
}

554 
	$fsCheckRe£rvedLock
(
sqlôe3_fûe
 *
pFûe
, *
pResOut
){

555 *
pResOut
 = 0;

556  
SQLITE_OK
;

557 
	}
}

562 
	$fsFûeC⁄åﬁ
(
sqlôe3_fûe
 *
pFûe
, 
›
, *
pArg
){

563  
SQLITE_OK
;

564 
	}
}

569 
	$fsSe˘‹Size
(
sqlôe3_fûe
 *
pFûe
){

570  
BLOCKSIZE
;

571 
	}
}

576 
	$fsDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
 *
pFûe
){

578 
	}
}

583 
	$fsO≥n
(

584 
sqlôe3_vfs
 *
pVfs
,

585 c⁄° *
zName
,

586 
sqlôe3_fûe
 *
pFûe
,

587 
Êags
,

588 *
pOutFœgs


590 
fs_vfs_t
 *
pFsVfs
 = (fs_vfs_à*)
pVfs
;

591 
fs_fûe
 *
p
 = (fs_fûê*)
pFûe
;

592 
fs_ªÆ_fûe
 *
pRól
 = 0;

593 
eTy≥
;

594 
nName
;

595 
rc
 = 
SQLITE_OK
;

597 if–0==(
Êags
&(
SQLITE_OPEN_MAIN_DB
|
SQLITE_OPEN_MAIN_JOURNAL
)) ){

598 
tmp_fûe
 *
p2
 = (tmp_fûê*)
pFûe
;

599 
	`mem£t
(
p2
, 0, (*p2));

600 
p2
->
ba£
.
pMëhods
 = &
tmp_io_mëhods
;

601  
SQLITE_OK
;

604 
eTy≥
 = ((
Êags
&(
SQLITE_OPEN_MAIN_DB
))?
DATABASE_FILE
:
JOURNAL_FILE
);

605 
p
->
ba£
.
pMëhods
 = &
fs_io_mëhods
;

606 
p
->
eTy≥
 =ÉType;

608 
	`as£π
(
	`°æí
("-journal")==8);

609 
nName
 = ()
	`°æí
(
zName
)-((
eTy≥
==
JOURNAL_FILE
)?8:0);

610 
pRól
=
pFsVfs
->
pFûeLi°
;

611 ; 
pRól
 && 
	`°∫cmp
’Ról->
zName
, zName, 
nName
);ÖRólıRól->
pNext
);

613 if–!
pRól
 ){

614 
ªÆ_Êags
 = (
Êags
&~(
SQLITE_OPEN_MAIN_DB
))|
SQLITE_OPEN_TEMP_DB
;

615 
sqlôe3_öt64
 
size
;

616 
sqlôe3_fûe
 *
pRólFûe
;

617 
sqlôe3_vfs
 *
pP¨ít
 = 
pFsVfs
->pParent;

618 
	`as£π
(
eTy≥
==
DATABASE_FILE
);

620 
pRól
 = (
fs_ªÆ_fûe
 *)
	`sqlôe3_mÆloc
((*pRól)+
pP¨ít
->
szOsFûe
);

621 if–!
pRól
 ){

622 
rc
 = 
SQLITE_NOMEM
;

623 
›í_out
;

625 
	`mem£t
(
pRól
, 0, (*pRól)+
pP¨ít
->
szOsFûe
);

626 
pRól
->
zName
 = zName;

627 
pRól
->
pFûe
 = (
sqlôe3_fûe
 *)(&pReal[1]);

629 
rc
 = 
pP¨ít
->
	`xO≥n
’P¨ít, 
zName
, 
pRól
->
pFûe
, 
ªÆ_Êags
, 
pOutFœgs
);

630 if–
rc
!=
SQLITE_OK
 ){

631 
›í_out
;

633 
pRólFûe
 = 
pRól
->
pFûe
;

635 
rc
 = 
pRólFûe
->
pMëhods
->
	`xFûeSize
’RólFûe, &
size
);

636 if–
rc
!=
SQLITE_OK
 ){

637 
›í_out
;

639 if–
size
==0 ){

640 
rc
 = 
pRólFûe
->
pMëhods
->
	`xWrôe
’RólFûe, "\0", 1, 
BLOBSIZE
-1);

641 
pRól
->
nBlob
 = 
BLOBSIZE
;

643 
zS
[4];

644 
pRól
->
nBlob
 = ()
size
;

645 
rc
 = 
pRólFûe
->
pMëhods
->
	`xRód
’RólFûe, 
zS
, 4, 0);

646 
pRól
->
nD©aba£
 = (
zS
[0]<<24)+(zS[1]<<16)+(zS[2]<<8)+zS[3];

647 if–
rc
==
SQLITE_OK
 ){

648 
rc
 = 
pRólFûe
->
pMëhods
->
	`xRód
’RólFûe, 
zS
, 4, 
pRól
->
nBlob
-4);

649 if–
zS
[0] || zS[1] || zS[2] || zS[3] ){

650 
pRól
->
nJou∫Æ
 =ÖRól->
nBlob
;

655 if–
rc
==
SQLITE_OK
 ){

656 
pRól
->
pNext
 = 
pFsVfs
->
pFûeLi°
;

657 if–
pRól
->
pNext
 ){

658 
pRól
->
pNext
->
µThis
 = &pReal->pNext;

660 
pRól
->
µThis
 = &
pFsVfs
->
pFûeLi°
;

661 
pFsVfs
->
pFûeLi°
 = 
pRól
;

665 
›í_out
:

666 if–
pRól
 ){

667 if–
rc
==
SQLITE_OK
 ){

668 
p
->
pRól
 =ÖReal;

669 
pRól
->
nRef
++;

671 if–
pRól
->
pFûe
->
pMëhods
 ){

672 
pRól
->
pFûe
->
pMëhods
->
	`xClo£
(pReal->pFile);

674 
	`sqlôe3_‰ì
(
pRól
);

677  
rc
;

678 
	}
}

685 
	$fsDñëe
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zP©h
, 
dúSync
){

686 
rc
 = 
SQLITE_OK
;

687 
fs_vfs_t
 *
pFsVfs
 = (fs_vfs_à*)
pVfs
;

688 
fs_ªÆ_fûe
 *
pRól
;

689 
sqlôe3_fûe
 *
pF
;

690 
nName
 = ()
	`°æí
(
zP©h
) - 8;

692 
	`as£π
(
	`°æí
("-journal")==8);

693 
	`as£π
(
	`°rcmp
("-jou∫Æ", &
zP©h
[
nName
])==0);

695 
pRól
 = 
pFsVfs
->
pFûeLi°
;

696 ; 
pRól
 && 
	`°∫cmp
’Ról->
zName
, 
zP©h
, 
nName
);ÖRólıRól->
pNext
);

697 if–
pRól
 ){

698 
pF
 = 
pRól
->
pFûe
;

699 
rc
 = 
pF
->
pMëhods
->
	`xWrôe
’F, "\0\0\0\0", 4, 
pRól
->
nBlob
-
BLOCKSIZE
);

700 if–
rc
==
SQLITE_OK
 ){

701 
pRól
->
nJou∫Æ
 = 0;

704  
rc
;

705 
	}
}

711 
	$fsAc˚ss
(

712 
sqlôe3_vfs
 *
pVfs
,

713 c⁄° *
zP©h
,

714 
Êags
,

715 *
pResOut


717 
fs_vfs_t
 *
pFsVfs
 = (fs_vfs_à*)
pVfs
;

718 
fs_ªÆ_fûe
 *
pRól
;

719 
isJou∫Æ
 = 0;

720 
nName
 = ()
	`°æí
(
zP©h
);

722 if–
Êags
!=
SQLITE_ACCESS_EXISTS
 ){

723 
sqlôe3_vfs
 *
pP¨ít
 = ((
fs_vfs_t
 *)
pVfs
)->pParent;

724  
pP¨ít
->
	`xAc˚ss
’P¨ít, 
zP©h
, 
Êags
, 
pResOut
);

727 
	`as£π
(
	`°æí
("-journal")==8);

728 if–
nName
>8 && 
	`°rcmp
("-jou∫Æ", &
zP©h
[nName-8])==0 ){

729 
nName
 -= 8;

730 
isJou∫Æ
 = 1;

733 
pRól
 = 
pFsVfs
->
pFûeLi°
;

734 ; 
pRól
 && 
	`°∫cmp
’Ról->
zName
, 
zP©h
, 
nName
);ÖRólıRól->
pNext
);

736 *
pResOut
 = (
pRól
 && (!
isJou∫Æ
 ||ÖRól->
nJou∫Æ
>0));

737  
SQLITE_OK
;

738 
	}
}

745 
	$fsFuŒP©h«me
(

746 
sqlôe3_vfs
 *
pVfs
,

747 c⁄° *
zP©h
,

748 
nOut
,

749 *
zOut


751 
sqlôe3_vfs
 *
pP¨ít
 = ((
fs_vfs_t
 *)
pVfs
)->pParent;

752  
pP¨ít
->
	`xFuŒP©h«me
’P¨ít, 
zP©h
, 
nOut
, 
zOut
);

753 
	}
}

758 *
	$fsDlO≥n
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zP©h
){

759 
sqlôe3_vfs
 *
pP¨ít
 = ((
fs_vfs_t
 *)
pVfs
)->pParent;

760  
pP¨ít
->
	`xDlO≥n
’P¨ít, 
zP©h
);

761 
	}
}

768 
	$fsDlEº‹
(
sqlôe3_vfs
 *
pVfs
, 
nByã
, *
zEºMsg
){

769 
sqlôe3_vfs
 *
pP¨ít
 = ((
fs_vfs_t
 *)
pVfs
)->pParent;

770 
pP¨ít
->
	`xDlEº‹
’P¨ít, 
nByã
, 
zEºMsg
);

771 
	}
}

776 (*
	$fsDlSym
(
sqlôe3_vfs
 *
pVfs
, *
pH
, c⁄° *
zSym
))(){

777 
sqlôe3_vfs
 *
pP¨ít
 = ((
fs_vfs_t
 *)
pVfs
)->pParent;

778  
pP¨ít
->
	`xDlSym
’P¨ít, 
pH
, 
zSym
);

779 
	}
}

784 
	$fsDlClo£
(
sqlôe3_vfs
 *
pVfs
, *
pH™dÀ
){

785 
sqlôe3_vfs
 *
pP¨ít
 = ((
fs_vfs_t
 *)
pVfs
)->pParent;

786 
pP¨ít
->
	`xDlClo£
’P¨ít, 
pH™dÀ
);

787 
	}
}

793 
	$fsR™dom√ss
(
sqlôe3_vfs
 *
pVfs
, 
nByã
, *
zBufOut
){

794 
sqlôe3_vfs
 *
pP¨ít
 = ((
fs_vfs_t
 *)
pVfs
)->pParent;

795  
pP¨ít
->
	`xR™dom√ss
’P¨ít, 
nByã
, 
zBufOut
);

796 
	}
}

802 
	$fsSÀï
(
sqlôe3_vfs
 *
pVfs
, 
nMi¸o
){

803 
sqlôe3_vfs
 *
pP¨ít
 = ((
fs_vfs_t
 *)
pVfs
)->pParent;

804  
pP¨ít
->
	`xSÀï
’P¨ít, 
nMi¸o
);

805 
	}
}

810 
	$fsCuºítTime
(
sqlôe3_vfs
 *
pVfs
, *
pTimeOut
){

811 
sqlôe3_vfs
 *
pP¨ít
 = ((
fs_vfs_t
 *)
pVfs
)->pParent;

812  
pP¨ít
->
	`xCuºítTime
’P¨ít, 
pTimeOut
);

813 
	}
}

820 
	$fs_ªgi°î
(){

821 if–
fs_vfs
.
pP¨ít
 )  
SQLITE_OK
;

822 
fs_vfs
.
pP¨ít
 = 
	`sqlôe3_vfs_föd
(0);

823 
fs_vfs
.
ba£
.
mxP©h«me
 = fs_vfs.
pP¨ít
->mxPathname;

824 
fs_vfs
.
ba£
.
szOsFûe
 = 
	`MAX
((
tmp_fûe
), (
fs_fûe
));

825  
	`sqlôe3_vfs_ªgi°î
(&
fs_vfs
.
ba£
, 0);

826 
	}
}

828 #ifde‡
SQLITE_TEST


829 
	$Sqlôëe°O√fûe_Inô
(Ë{ 
	`fs_ªgi°î
();
	}
}

	@test_osinst.c

72 
	~"sqlôe3.h
"

74 
	~"os_£tup.h
"

75 #i‡
SQLITE_OS_WIN


76 
	~"os_wö.h
"

79 
	~<°rög.h
>

80 
	~<as£π.h
>

86 
	#INST_MAX_PATHNAME
 512

	)

88 
	#OS_ACCESS
 1

	)

89 
	#OS_CHECKRESERVEDLOCK
 2

	)

90 
	#OS_CLOSE
 3

	)

91 
	#OS_CURRENTTIME
 4

	)

92 
	#OS_DELETE
 5

	)

93 
	#OS_DEVCHAR
 6

	)

94 
	#OS_FILECONTROL
 7

	)

95 
	#OS_FILESIZE
 8

	)

96 
	#OS_FULLPATHNAME
 9

	)

97 
	#OS_LOCK
 11

	)

98 
	#OS_OPEN
 12

	)

99 
	#OS_RANDOMNESS
 13

	)

100 
	#OS_READ
 14

	)

101 
	#OS_SECTORSIZE
 15

	)

102 
	#OS_SLEEP
 16

	)

103 
	#OS_SYNC
 17

	)

104 
	#OS_TRUNCATE
 18

	)

105 
	#OS_UNLOCK
 19

	)

106 
	#OS_WRITE
 20

	)

107 
	#OS_SHMUNMAP
 22

	)

108 
	#OS_SHMMAP
 23

	)

109 
	#OS_SHMLOCK
 25

	)

110 
	#OS_SHMBARRIER
 26

	)

111 
	#OS_ANNOTATE
 28

	)

113 
	#OS_NUMEVENTS
 29

	)

115 
	#VFSLOG_BUFFERSIZE
 8192

	)

117 
Vf¶ogVfs
 
	tVf¶ogVfs
;

118 
Vf¶ogFûe
 
	tVf¶ogFûe
;

120 
	sVf¶ogVfs
 {

121 
sqlôe3_vfs
 
	mba£
;

122 
sqlôe3_vfs
 *
	mpVfs
;

123 
	miNextFûeId
;

124 
sqlôe3_fûe
 *
	mpLog
;

125 
sqlôe3_öt64
 
	miOff£t
;

126 
	mnBuf
;

127 
	maBuf
[
VFSLOG_BUFFERSIZE
];

130 
	sVf¶ogFûe
 {

131 
sqlôe3_fûe
 
	mba£
;

132 
sqlôe3_fûe
 *
	mpRól
;

133 
sqlôe3_vfs
 *
	mpVf¶og
;

134 
	miFûeId
;

137 
	#REALVFS
(
p
Ë(((
Vf¶ogVfs
 *)’))->
pVfs
)

	)

144 
vf¶ogClo£
(
sqlôe3_fûe
*);

145 
vf¶ogRód
(
sqlôe3_fûe
*, *, 
iAmt
, 
sqlôe3_öt64
 
iOf°
);

146 
vf¶ogWrôe
(
sqlôe3_fûe
*,c⁄° *,
iAmt
, 
sqlôe3_öt64
 
iOf°
);

147 
vf¶ogTrunˇã
(
sqlôe3_fûe
*, 
sqlôe3_öt64
 
size
);

148 
vf¶ogSync
(
sqlôe3_fûe
*, 
Êags
);

149 
vf¶ogFûeSize
(
sqlôe3_fûe
*, 
sqlôe3_öt64
 *
pSize
);

150 
vf¶ogLock
(
sqlôe3_fûe
*, );

151 
vf¶ogU∆ock
(
sqlôe3_fûe
*, );

152 
vf¶ogCheckRe£rvedLock
(
sqlôe3_fûe
*, *
pResOut
);

153 
vf¶ogFûeC⁄åﬁ
(
sqlôe3_fûe
*, 
›
, *
pArg
);

154 
vf¶ogSe˘‹Size
(
sqlôe3_fûe
*);

155 
vf¶ogDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
*);

157 
vf¶ogShmLock
(
sqlôe3_fûe
 *
pFûe
, 
of°
, 
n
, 
Êags
);

158 
vf¶ogShmM≠
(
sqlôe3_fûe
 *
pFûe
,,,,volatile **);

159 
vf¶ogShmB¨rõr
(
sqlôe3_fûe
*);

160 
vf¶ogShmUnm≠
(
sqlôe3_fûe
 *
pFûe
, 
dñëeFœg
);

165 
vf¶ogO≥n
(
sqlôe3_vfs
*, c⁄° *, 
sqlôe3_fûe
*, , *);

166 
vf¶ogDñëe
(
sqlôe3_vfs
*, c⁄° *
zName
, 
syncDú
);

167 
vf¶ogAc˚ss
(
sqlôe3_vfs
*, c⁄° *
zName
, 
Êags
, *);

168 
vf¶ogFuŒP©h«me
(
sqlôe3_vfs
*, c⁄° *
zName
, , *
zOut
);

169 *
vf¶ogDlO≥n
(
sqlôe3_vfs
*, c⁄° *
zFûíame
);

170 
vf¶ogDlEº‹
(
sqlôe3_vfs
*, 
nByã
, *
zEºMsg
);

171 (*
	$vf¶ogDlSym
(
sqlôe3_vfs
 *
pVfs
, *
p
, c⁄° *
zSym
))();

172 
	`vf¶ogDlClo£
(
sqlôe3_vfs
*, *);

173 
	`vf¶ogR™dom√ss
(
sqlôe3_vfs
*, 
nByã
, *
zOut
);

174 
	`vf¶ogSÀï
(
sqlôe3_vfs
*, 
mi¸o£c⁄ds
);

175 
	`vf¶ogCuºítTime
(
sqlôe3_vfs
*, *);

177 
	`vf¶ogGëLa°Eº‹
(
sqlôe3_vfs
*, , *);

178 
	`vf¶ogCuºítTimeI¡64
(
sqlôe3_vfs
*, 
sqlôe3_öt64
*);

180 
sqlôe3_vfs
 
vf¶og_vfs
 = {

182 (
Vf¶ogFûe
),

183 
INST_MAX_PATHNAME
,

187 
vf¶ogO≥n
,

188 
vf¶ogDñëe
,

189 
vf¶ogAc˚ss
,

190 
vf¶ogFuŒP©h«me
,

191 
vf¶ogDlO≥n
,

192 
vf¶ogDlEº‹
,

193 
vf¶ogDlSym
,

194 
vf¶ogDlClo£
,

195 
vf¶ogR™dom√ss
,

196 
vf¶ogSÀï
,

197 
vf¶ogCuºítTime
,

198 
vf¶ogGëLa°Eº‹
,

199 
vf¶ogCuºítTimeI¡64


200 
	}
};

202 
sqlôe3_io_mëhods
 
	gvf¶og_io_mëhods
 = {

204 
vf¶ogClo£
,

205 
vf¶ogRód
,

206 
vf¶ogWrôe
,

207 
vf¶ogTrunˇã
,

208 
vf¶ogSync
,

209 
vf¶ogFûeSize
,

210 
vf¶ogLock
,

211 
vf¶ogU∆ock
,

212 
vf¶ogCheckRe£rvedLock
,

213 
vf¶ogFûeC⁄åﬁ
,

214 
vf¶ogSe˘‹Size
,

215 
vf¶ogDevi˚Ch¨a˘îi°ics
,

216 
vf¶ogShmM≠
,

217 
vf¶ogShmLock
,

218 
vf¶ogShmB¨rõr
,

219 
vf¶ogShmUnm≠


222 #i‡
SQLITE_OS_UNIX
 && !
deföed
(
NO_GETTOD
)

223 
	~<sys/time.h
>

224 
sqlôe3_uöt64
 
	$vf¶og_time
(){

225 
timevÆ
 
sTime
;

226 
	`gëtimeofday
(&
sTime
, 0);

227  
sTime
.
tv_u£c
 + (
sqlôe3_uöt64
)sTime.
tv_£c
 * 1000000;

228 
	}
}

229 #ñi‡
SQLITE_OS_WIN


230 
	~<time.h
>

231 
sqlôe3_uöt64
 
	$vf¶og_time
(){

232 
FILETIME
 
·
;

233 
sqlôe3_uöt64
 
u64time
 = 0;

235 
	`GëSy°emTimeAsFûeTime
(&
·
);

237 
u64time
 |
·
.
dwHighD©eTime
;

238 
u64time
 <<= 32;

239 
u64time
 |
·
.
dwLowD©eTime
;

242  
u64time
 /(
sqlôe3_uöt64
)10;

243 
	}
}

245 
sqlôe3_uöt64
 
	$vf¶og_time
(){

247 
	}
}

250 
vf¶og_ˇŒ
(
sqlôe3_vfs
 *, , , 
sqlôe3_öt64
, , , );

251 
vf¶og_°rög
(
sqlôe3_vfs
 *, const *);

256 
	$vf¶ogClo£
(
sqlôe3_fûe
 *
pFûe
){

257 
sqlôe3_uöt64
 
t
;

258 
rc
 = 
SQLITE_OK
;

259 
Vf¶ogFûe
 *
p
 = (Vf¶ogFûê*)
pFûe
;

261 
t
 = 
	`vf¶og_time
();

262 if–
p
->
pRól
->
pMëhods
 ){

263 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xClo£
(p->pReal);

265 
t
 = 
	`vf¶og_time
() -Å;

266 
	`vf¶og_ˇŒ
(
p
->
pVf¶og
, 
OS_CLOSE
,Ö->
iFûeId
, 
t
, 
rc
, 0, 0);

267  
rc
;

268 
	}
}

273 
	$vf¶ogRód
(

274 
sqlôe3_fûe
 *
pFûe
,

275 *
zBuf
,

276 
iAmt
,

277 
sqlôe_öt64
 
iOf°


279 
rc
;

280 
sqlôe3_uöt64
 
t
;

281 
Vf¶ogFûe
 *
p
 = (Vf¶ogFûê*)
pFûe
;

282 
t
 = 
	`vf¶og_time
();

283 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xRód
’->pRól, 
zBuf
, 
iAmt
, 
iOf°
);

284 
t
 = 
	`vf¶og_time
() -Å;

285 
	`vf¶og_ˇŒ
(
p
->
pVf¶og
, 
OS_READ
,Ö->
iFûeId
, 
t
, 
rc
, 
iAmt
, ()
iOf°
);

286  
rc
;

287 
	}
}

292 
	$vf¶ogWrôe
(

293 
sqlôe3_fûe
 *
pFûe
,

294 c⁄° *
z
,

295 
iAmt
,

296 
sqlôe_öt64
 
iOf°


298 
rc
;

299 
sqlôe3_uöt64
 
t
;

300 
Vf¶ogFûe
 *
p
 = (Vf¶ogFûê*)
pFûe
;

301 
t
 = 
	`vf¶og_time
();

302 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xWrôe
’->pRól, 
z
, 
iAmt
, 
iOf°
);

303 
t
 = 
	`vf¶og_time
() -Å;

304 
	`vf¶og_ˇŒ
(
p
->
pVf¶og
, 
OS_WRITE
,Ö->
iFûeId
, 
t
, 
rc
, 
iAmt
, ()
iOf°
);

305  
rc
;

306 
	}
}

311 
	$vf¶ogTrunˇã
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe_öt64
 
size
){

312 
rc
;

313 
sqlôe3_uöt64
 
t
;

314 
Vf¶ogFûe
 *
p
 = (Vf¶ogFûê*)
pFûe
;

315 
t
 = 
	`vf¶og_time
();

316 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xTrunˇã
’->pRól, 
size
);

317 
t
 = 
	`vf¶og_time
() -Å;

318 
	`vf¶og_ˇŒ
(
p
->
pVf¶og
, 
OS_TRUNCATE
,Ö->
iFûeId
, 
t
, 
rc
, 0, ()
size
);

319  
rc
;

320 
	}
}

325 
	$vf¶ogSync
(
sqlôe3_fûe
 *
pFûe
, 
Êags
){

326 
rc
;

327 
sqlôe3_uöt64
 
t
;

328 
Vf¶ogFûe
 *
p
 = (Vf¶ogFûê*)
pFûe
;

329 
t
 = 
	`vf¶og_time
();

330 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xSync
’->pRól, 
Êags
);

331 
t
 = 
	`vf¶og_time
() -Å;

332 
	`vf¶og_ˇŒ
(
p
->
pVf¶og
, 
OS_SYNC
,Ö->
iFûeId
, 
t
, 
rc
, 
Êags
, 0);

333  
rc
;

334 
	}
}

339 
	$vf¶ogFûeSize
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe_öt64
 *
pSize
){

340 
rc
;

341 
sqlôe3_uöt64
 
t
;

342 
Vf¶ogFûe
 *
p
 = (Vf¶ogFûê*)
pFûe
;

343 
t
 = 
	`vf¶og_time
();

344 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xFûeSize
’->pRól, 
pSize
);

345 
t
 = 
	`vf¶og_time
() -Å;

346 
	`vf¶og_ˇŒ
(
p
->
pVf¶og
, 
OS_FILESIZE
,Ö->
iFûeId
, 
t
, 
rc
, 0, ()*
pSize
);

347  
rc
;

348 
	}
}

353 
	$vf¶ogLock
(
sqlôe3_fûe
 *
pFûe
, 
eLock
){

354 
rc
;

355 
sqlôe3_uöt64
 
t
;

356 
Vf¶ogFûe
 *
p
 = (Vf¶ogFûê*)
pFûe
;

357 
t
 = 
	`vf¶og_time
();

358 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xLock
’->pRól, 
eLock
);

359 
t
 = 
	`vf¶og_time
() -Å;

360 
	`vf¶og_ˇŒ
(
p
->
pVf¶og
, 
OS_LOCK
,Ö->
iFûeId
, 
t
, 
rc
, 
eLock
, 0);

361  
rc
;

362 
	}
}

367 
	$vf¶ogU∆ock
(
sqlôe3_fûe
 *
pFûe
, 
eLock
){

368 
rc
;

369 
sqlôe3_uöt64
 
t
;

370 
Vf¶ogFûe
 *
p
 = (Vf¶ogFûê*)
pFûe
;

371 
t
 = 
	`vf¶og_time
();

372 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xU∆ock
’->pRól, 
eLock
);

373 
t
 = 
	`vf¶og_time
() -Å;

374 
	`vf¶og_ˇŒ
(
p
->
pVf¶og
, 
OS_UNLOCK
,Ö->
iFûeId
, 
t
, 
rc
, 
eLock
, 0);

375  
rc
;

376 
	}
}

381 
	$vf¶ogCheckRe£rvedLock
(
sqlôe3_fûe
 *
pFûe
, *
pResOut
){

382 
rc
;

383 
sqlôe3_uöt64
 
t
;

384 
Vf¶ogFûe
 *
p
 = (Vf¶ogFûê*)
pFûe
;

385 
t
 = 
	`vf¶og_time
();

386 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xCheckRe£rvedLock
’->pRól, 
pResOut
);

387 
t
 = 
	`vf¶og_time
() -Å;

388 
	`vf¶og_ˇŒ
(
p
->
pVf¶og
, 
OS_CHECKRESERVEDLOCK
,Ö->
iFûeId
, 
t
, 
rc
, *
pResOut
, 0);

389  
rc
;

390 
	}
}

395 
	$vf¶ogFûeC⁄åﬁ
(
sqlôe3_fûe
 *
pFûe
, 
›
, *
pArg
){

396 
Vf¶ogFûe
 *
p
 = (Vf¶ogFûê*)
pFûe
;

397 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xFûeC⁄åﬁ
’->pRól, 
›
, 
pArg
);

398 if–
›
==
SQLITE_FCNTL_VFSNAME
 && 
rc
==
SQLITE_OK
 ){

399 *(**)
pArg
 = 
	`sqlôe3_m¥ötf
("vfslog/%z", *(**)pArg);

401  
rc
;

402 
	}
}

407 
	$vf¶ogSe˘‹Size
(
sqlôe3_fûe
 *
pFûe
){

408 
rc
;

409 
sqlôe3_uöt64
 
t
;

410 
Vf¶ogFûe
 *
p
 = (Vf¶ogFûê*)
pFûe
;

411 
t
 = 
	`vf¶og_time
();

412 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xSe˘‹Size
(p->pReal);

413 
t
 = 
	`vf¶og_time
() -Å;

414 
	`vf¶og_ˇŒ
(
p
->
pVf¶og
, 
OS_SECTORSIZE
,Ö->
iFûeId
, 
t
, 
rc
, 0, 0);

415  
rc
;

416 
	}
}

421 
	$vf¶ogDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
 *
pFûe
){

422 
rc
;

423 
sqlôe3_uöt64
 
t
;

424 
Vf¶ogFûe
 *
p
 = (Vf¶ogFûê*)
pFûe
;

425 
t
 = 
	`vf¶og_time
();

426 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xDevi˚Ch¨a˘îi°ics
(p->pReal);

427 
t
 = 
	`vf¶og_time
() -Å;

428 
	`vf¶og_ˇŒ
(
p
->
pVf¶og
, 
OS_DEVCHAR
,Ö->
iFûeId
, 
t
, 
rc
, 0, 0);

429  
rc
;

430 
	}
}

432 
	$vf¶ogShmLock
(
sqlôe3_fûe
 *
pFûe
, 
of°
, 
n
, 
Êags
){

433 
rc
;

434 
sqlôe3_uöt64
 
t
;

435 
Vf¶ogFûe
 *
p
 = (Vf¶ogFûê*)
pFûe
;

436 
t
 = 
	`vf¶og_time
();

437 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xShmLock
’->pRól, 
of°
, 
n
, 
Êags
);

438 
t
 = 
	`vf¶og_time
() -Å;

439 
	`vf¶og_ˇŒ
(
p
->
pVf¶og
, 
OS_SHMLOCK
,Ö->
iFûeId
, 
t
, 
rc
, 0, 0);

440  
rc
;

441 
	}
}

442 
	$vf¶ogShmM≠
(

443 
sqlôe3_fûe
 *
pFûe
,

444 
iRegi⁄
,

445 
szRegi⁄
,

446 
isWrôe
,

447 vﬁ©ûê**
µ


449 
rc
;

450 
sqlôe3_uöt64
 
t
;

451 
Vf¶ogFûe
 *
p
 = (Vf¶ogFûê*)
pFûe
;

452 
t
 = 
	`vf¶og_time
();

453 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xShmM≠
’->pRól, 
iRegi⁄
, 
szRegi⁄
, 
isWrôe
, 
µ
);

454 
t
 = 
	`vf¶og_time
() -Å;

455 
	`vf¶og_ˇŒ
(
p
->
pVf¶og
, 
OS_SHMMAP
,Ö->
iFûeId
, 
t
, 
rc
, 0, 0);

456  
rc
;

457 
	}
}

458 
	$vf¶ogShmB¨rõr
(
sqlôe3_fûe
 *
pFûe
){

459 
sqlôe3_uöt64
 
t
;

460 
Vf¶ogFûe
 *
p
 = (Vf¶ogFûê*)
pFûe
;

461 
t
 = 
	`vf¶og_time
();

462 
p
->
pRól
->
pMëhods
->
	`xShmB¨rõr
(p->pReal);

463 
t
 = 
	`vf¶og_time
() -Å;

464 
	`vf¶og_ˇŒ
(
p
->
pVf¶og
, 
OS_SHMBARRIER
,Ö->
iFûeId
, 
t
, 
SQLITE_OK
, 0, 0);

465 
	}
}

466 
	$vf¶ogShmUnm≠
(
sqlôe3_fûe
 *
pFûe
, 
dñëeFœg
){

467 
rc
;

468 
sqlôe3_uöt64
 
t
;

469 
Vf¶ogFûe
 *
p
 = (Vf¶ogFûê*)
pFûe
;

470 
t
 = 
	`vf¶og_time
();

471 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xShmUnm≠
’->pRól, 
dñëeFœg
);

472 
t
 = 
	`vf¶og_time
() -Å;

473 
	`vf¶og_ˇŒ
(
p
->
pVf¶og
, 
OS_SHMUNMAP
,Ö->
iFûeId
, 
t
, 
rc
, 0, 0);

474  
rc
;

475 
	}
}

481 
	$vf¶ogO≥n
(

482 
sqlôe3_vfs
 *
pVfs
,

483 c⁄° *
zName
,

484 
sqlôe3_fûe
 *
pFûe
,

485 
Êags
,

486 *
pOutFœgs


488 
rc
;

489 
sqlôe3_uöt64
 
t
;

490 
Vf¶ogFûe
 *
p
 = (Vf¶ogFûê*)
pFûe
;

491 
Vf¶ogVfs
 *
pLog
 = (Vf¶ogVf†*)
pVfs
;

493 
pFûe
->
pMëhods
 = &
vf¶og_io_mëhods
;

494 
p
->
pRól
 = (
sqlôe3_fûe
 *)&p[1];

495 
p
->
pVf¶og
 = 
pVfs
;

496 
p
->
iFûeId
 = ++
pLog
->
iNextFûeId
;

498 
t
 = 
	`vf¶og_time
();

499 
rc
 = 
	`REALVFS
(
pVfs
)->
	`xO≥n
(REALVFS’Vfs), 
zName
, 
p
->
pRól
, 
Êags
, 
pOutFœgs
);

500 
t
 = 
	`vf¶og_time
() -Å;

502 
	`vf¶og_ˇŒ
(
pVfs
, 
OS_OPEN
, 
p
->
iFûeId
, 
t
, 
rc
, 0, 0);

503 
	`vf¶og_°rög
(
pVfs
, 
zName
);

504  
rc
;

505 
	}
}

512 
	$vf¶ogDñëe
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zP©h
, 
dúSync
){

513 
rc
;

514 
sqlôe3_uöt64
 
t
;

515 
t
 = 
	`vf¶og_time
();

516 
rc
 = 
	`REALVFS
(
pVfs
)->
	`xDñëe
(REALVFS’Vfs), 
zP©h
, 
dúSync
);

517 
t
 = 
	`vf¶og_time
() -Å;

518 
	`vf¶og_ˇŒ
(
pVfs
, 
OS_DELETE
, 0, 
t
, 
rc
, 
dúSync
, 0);

519 
	`vf¶og_°rög
(
pVfs
, 
zP©h
);

520  
rc
;

521 
	}
}

527 
	$vf¶ogAc˚ss
(

528 
sqlôe3_vfs
 *
pVfs
,

529 c⁄° *
zP©h
,

530 
Êags
,

531 *
pResOut


533 
rc
;

534 
sqlôe3_uöt64
 
t
;

535 
t
 = 
	`vf¶og_time
();

536 
rc
 = 
	`REALVFS
(
pVfs
)->
	`xAc˚ss
(REALVFS’Vfs), 
zP©h
, 
Êags
, 
pResOut
);

537 
t
 = 
	`vf¶og_time
() -Å;

538 
	`vf¶og_ˇŒ
(
pVfs
, 
OS_ACCESS
, 0, 
t
, 
rc
, 
Êags
, *
pResOut
);

539 
	`vf¶og_°rög
(
pVfs
, 
zP©h
);

540  
rc
;

541 
	}
}

548 
	$vf¶ogFuŒP©h«me
(

549 
sqlôe3_vfs
 *
pVfs
,

550 c⁄° *
zP©h
,

551 
nOut
,

552 *
zOut


554  
	`REALVFS
(
pVfs
)->
	`xFuŒP©h«me
(REALVFS’Vfs), 
zP©h
, 
nOut
, 
zOut
);

555 
	}
}

560 *
	$vf¶ogDlO≥n
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zP©h
){

561  
	`REALVFS
(
pVfs
)->
	`xDlO≥n
(REALVFS’Vfs), 
zP©h
);

562 
	}
}

569 
	$vf¶ogDlEº‹
(
sqlôe3_vfs
 *
pVfs
, 
nByã
, *
zEºMsg
){

570 
	`REALVFS
(
pVfs
)->
	`xDlEº‹
(REALVFS’Vfs), 
nByã
, 
zEºMsg
);

571 
	}
}

576 (*
	$vf¶ogDlSym
(
sqlôe3_vfs
 *
pVfs
, *
p
, c⁄° *
zSym
))(){

577  
	`REALVFS
(
pVfs
)->
	`xDlSym
(REALVFS’Vfs), 
p
, 
zSym
);

578 
	}
}

583 
	$vf¶ogDlClo£
(
sqlôe3_vfs
 *
pVfs
, *
pH™dÀ
){

584 
	`REALVFS
(
pVfs
)->
	`xDlClo£
(REALVFS’Vfs), 
pH™dÀ
);

585 
	}
}

591 
	$vf¶ogR™dom√ss
(
sqlôe3_vfs
 *
pVfs
, 
nByã
, *
zBufOut
){

592  
	`REALVFS
(
pVfs
)->
	`xR™dom√ss
(REALVFS’Vfs), 
nByã
, 
zBufOut
);

593 
	}
}

599 
	$vf¶ogSÀï
(
sqlôe3_vfs
 *
pVfs
, 
nMi¸o
){

600  
	`REALVFS
(
pVfs
)->
	`xSÀï
(REALVFS’Vfs), 
nMi¸o
);

601 
	}
}

606 
	$vf¶ogCuºítTime
(
sqlôe3_vfs
 *
pVfs
, *
pTimeOut
){

607  
	`REALVFS
(
pVfs
)->
	`xCuºítTime
(REALVFS’Vfs), 
pTimeOut
);

608 
	}
}

610 
	$vf¶ogGëLa°Eº‹
(
sqlôe3_vfs
 *
pVfs
, 
a
, *
b
){

611  
	`REALVFS
(
pVfs
)->
	`xGëLa°Eº‹
(REALVFS’Vfs), 
a
, 
b
);

612 
	}
}

613 
	$vf¶ogCuºítTimeI¡64
(
sqlôe3_vfs
 *
pVfs
, 
sqlôe3_öt64
 *
p
){

614  
	`REALVFS
(
pVfs
)->
	`xCuºítTimeI¡64
(REALVFS’Vfs), 
p
);

615 
	}
}

617 
	$vf¶og_Êush
(
Vf¶ogVfs
 *
p
){

618 #ifde‡
SQLITE_TEST


619 
sqlôe3_io_îr‹_≥ndög
;

620 
sqlôe3_io_îr‹_≥rsi°
;

621 
sqlôe3_diskfuŒ_≥ndög
;

623 
≥ndög
 = 
sqlôe3_io_îr‹_≥ndög
;

624 
≥rsi°
 = 
sqlôe3_io_îr‹_≥rsi°
;

625 
diskfuŒ
 = 
sqlôe3_diskfuŒ_≥ndög
;

627 
sqlôe3_io_îr‹_≥ndög
 = 0;

628 
sqlôe3_io_îr‹_≥rsi°
 = 0;

629 
sqlôe3_diskfuŒ_≥ndög
 = 0;

632 if–
p
->
nBuf
 ){

633 
p
->
pLog
->
pMëhods
->
	`xWrôe
’->pLog,Ö->
aBuf
,Ö->
nBuf
,Ö->
iOff£t
);

634 
p
->
iOff£t
 +p->
nBuf
;

635 
p
->
nBuf
 = 0;

638 #ifde‡
SQLITE_TEST


639 
sqlôe3_io_îr‹_≥ndög
 = 
≥ndög
;

640 
sqlôe3_io_îr‹_≥rsi°
 = 
≥rsi°
;

641 
sqlôe3_diskfuŒ_≥ndög
 = 
diskfuŒ
;

643 
	}
}

645 
	$put32bôs
(*
p
, 
v
){

646 
p
[0] = 
v
>>24;

647 
p
[1] = ()(
v
>>16);

648 
p
[2] = ()(
v
>>8);

649 
p
[3] = ()
v
;

650 
	}
}

652 
	$vf¶og_ˇŒ
(

653 
sqlôe3_vfs
 *
pVfs
,

654 
eEvít
,

655 
iFûeid
,

656 
sqlôe3_öt64
 
nClick
,

657 
ªtu∫_code
,

658 
size
,

659 
off£t


661 
Vf¶ogVfs
 *
p
 = (Vf¶ogVf†*)
pVfs
;

662 *
zRec
;

663 if–(24+
p
->
nBuf
)>’->
aBuf
) ){

664 
	`vf¶og_Êush
(
p
);

666 
zRec
 = (*)&
p
->
aBuf
[p->
nBuf
];

667 
	`put32bôs
(&
zRec
[0], 
eEvít
);

668 
	`put32bôs
(&
zRec
[4], 
iFûeid
);

669 
	`put32bôs
(&
zRec
[8], ()(
nClick
&0xffff));

670 
	`put32bôs
(&
zRec
[12], 
ªtu∫_code
);

671 
	`put32bôs
(&
zRec
[16], 
size
);

672 
	`put32bôs
(&
zRec
[20], 
off£t
);

673 
p
->
nBuf
 += 24;

674 
	}
}

676 
	$vf¶og_°rög
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zSå
){

677 
Vf¶ogVfs
 *
p
 = (Vf¶ogVf†*)
pVfs
;

678 *
zRec
;

679 
nSå
 = 
zSå
 ? ()
	`°æí
(zStr) : 0;

680 if–(4+
nSå
+
p
->
nBuf
)>’->
aBuf
) ){

681 
	`vf¶og_Êush
(
p
);

683 
zRec
 = (*)&
p
->
aBuf
[p->
nBuf
];

684 
	`put32bôs
(&
zRec
[0], 
nSå
);

685 if–
zSå
 ){

686 
	`mem˝y
(&
zRec
[4], 
zSå
, 
nSå
);

688 
p
->
nBuf
 +(4 + 
nSå
);

689 
	}
}

691 
	$vf¶og_föÆize
(
Vf¶ogVfs
 *
p
){

692 if–
p
->
pLog
->
pMëhods
 ){

693 
	`vf¶og_Êush
(
p
);

694 
p
->
pLog
->
pMëhods
->
	`xClo£
(p->pLog);

696 
	`sqlôe3_‰ì
(
p
);

697 
	}
}

699 
	$sqlôe3_vf¶og_föÆize
(c⁄° *
zVfs
){

700 
sqlôe3_vfs
 *
pVfs
;

701 
pVfs
 = 
	`sqlôe3_vfs_föd
(
zVfs
);

702 if–!
pVfs
 ||ÖVfs->
xO≥n
!=
vf¶ogO≥n
 ){

703  
SQLITE_ERROR
;

705 
	`sqlôe3_vfs_uƒegi°î
(
pVfs
);

706 
	`vf¶og_föÆize
((
Vf¶ogVfs
 *)
pVfs
);

707  
SQLITE_OK
;

708 
	}
}

710 
	$sqlôe3_vf¶og_√w
(

711 c⁄° *
zVfs
,

712 c⁄° *
zP¨ítVfs
,

713 c⁄° *
zLog


715 
Vf¶ogVfs
 *
p
;

716 
sqlôe3_vfs
 *
pP¨ít
;

717 
nByã
;

718 
Êags
;

719 
rc
;

720 *
zFûe
;

721 
nVfs
;

723 
pP¨ít
 = 
	`sqlôe3_vfs_föd
(
zP¨ítVfs
);

724 if–!
pP¨ít
 ){

725  
SQLITE_ERROR
;

728 
nVfs
 = ()
	`°æí
(
zVfs
);

729 
nByã
 = (
Vf¶ogVfs
Ë+ 
pP¨ít
->
szOsFûe
 + 
nVfs
+1+pP¨ít->
mxP©h«me
+1;

730 
p
 = (
Vf¶ogVfs
 *)
	`sqlôe3_mÆloc
(
nByã
);

731 
	`mem£t
(
p
, 0, 
nByã
);

733 
p
->
pVfs
 = 
pP¨ít
;

734 
p
->
pLog
 = (
sqlôe3_fûe
 *)&p[1];

735 
	`mem˝y
(&
p
->
ba£
, &
vf¶og_vfs
, (
sqlôe3_vfs
));

736 
p
->
ba£
.
zName
 = &((*Ì->
pLog
)[
pP¨ít
->
szOsFûe
];

737 
p
->
ba£
.
szOsFûe
 +
pP¨ít
->szOsFile;

738 
	`mem˝y
((*)
p
->
ba£
.
zName
, 
zVfs
, 
nVfs
);

740 
zFûe
 = (*)&
p
->
ba£
.
zName
[
nVfs
+1];

741 
pP¨ít
->
	`xFuŒP©h«me
’P¨ít, 
zLog
,ÖP¨ít->
mxP©h«me
, 
zFûe
);

743 
Êags
 = 
SQLITE_OPEN_READWRITE
|
SQLITE_OPEN_CREATE
|
SQLITE_OPEN_MASTER_JOURNAL
;

744 
pP¨ít
->
	`xDñëe
’P¨ít, 
zFûe
, 0);

745 
rc
 = 
pP¨ít
->
	`xO≥n
’P¨ít, 
zFûe
, 
p
->
pLog
, 
Êags
, &flags);

746 if–
rc
==
SQLITE_OK
 ){

747 
	`mem˝y
(
p
->
aBuf
, "sqlite_ostrace1.....", 20);

748 
p
->
iOff£t
 = 0;

749 
p
->
nBuf
 = 20;

750 
rc
 = 
	`sqlôe3_vfs_ªgi°î
((
sqlôe3_vfs
 *)
p
, 1);

752 if–
rc
 ){

753 
	`vf¶og_föÆize
(
p
);

755  
rc
;

756 
	}
}

758 
	$sqlôe3_vf¶og_™nŸ©e
(c⁄° *
zVfs
, c⁄° *
zMsg
){

759 
sqlôe3_vfs
 *
pVfs
;

760 
pVfs
 = 
	`sqlôe3_vfs_föd
(
zVfs
);

761 if–!
pVfs
 ||ÖVfs->
xO≥n
!=
vf¶ogO≥n
 ){

762  
SQLITE_ERROR
;

764 
	`vf¶og_ˇŒ
(
pVfs
, 
OS_ANNOTATE
, 0, 0, 0, 0, 0);

765 
	`vf¶og_°rög
(
pVfs
, 
zMsg
);

766  
SQLITE_OK
;

767 
	}
}

769 c⁄° *
	$vf¶og_evíäame
(
eEvít
){

770 c⁄° *
zEvít
 = 0;

772  
eEvít
 ){

773 
OS_CLOSE
: 
zEvít
 = "xClose"; ;

774 
OS_READ
: 
zEvít
 = "xRead"; ;

775 
OS_WRITE
: 
zEvít
 = "xWrite"; ;

776 
OS_TRUNCATE
: 
zEvít
 = "xTruncate"; ;

777 
OS_SYNC
: 
zEvít
 = "xSync"; ;

778 
OS_FILESIZE
: 
zEvít
 = "xFilesize"; ;

779 
OS_LOCK
: 
zEvít
 = "xLock"; ;

780 
OS_UNLOCK
: 
zEvít
 = "xUnlock"; ;

781 
OS_CHECKRESERVEDLOCK
: 
zEvít
 = "xCheckResLock"; ;

782 
OS_FILECONTROL
: 
zEvít
 = "xFileControl"; ;

783 
OS_SECTORSIZE
: 
zEvít
 = "xSectorSize"; ;

784 
OS_DEVCHAR
: 
zEvít
 = "xDeviceChar"; ;

785 
OS_OPEN
: 
zEvít
 = "xOpen"; ;

786 
OS_DELETE
: 
zEvít
 = "xDelete"; ;

787 
OS_ACCESS
: 
zEvít
 = "xAccess"; ;

788 
OS_FULLPATHNAME
: 
zEvít
 = "xFullPathname"; ;

789 
OS_RANDOMNESS
: 
zEvít
 = "xRandomness"; ;

790 
OS_SLEEP
: 
zEvít
 = "xSleep"; ;

791 
OS_CURRENTTIME
: 
zEvít
 = "xCurrentTime"; ;

793 
OS_SHMUNMAP
: 
zEvít
 = "xShmUnmap"; ;

794 
OS_SHMLOCK
: 
zEvít
 = "xShmLock"; ;

795 
OS_SHMBARRIER
: 
zEvít
 = "xShmBarrier"; ;

796 
OS_SHMMAP
: 
zEvít
 = "xShmMap"; ;

798 
OS_ANNOTATE
: 
zEvít
 = "annotation"; ;

801  
zEvít
;

802 
	}
}

804 
Vf¶ogVèb
 
	tVf¶ogVèb
;

805 
Vf¶ogC§
 
	tVf¶ogC§
;

810 
	sVf¶ogVèb
 {

811 
sqlôe3_vèb
 
	mba£
;

812 
sqlôe3_fûe
 *
	mpFd
;

813 
sqlôe3_öt64
 
	mnByã
;

814 *
	mzFûe
;

820 
	sVf¶ogC§
 {

821 
sqlôe3_vèb_curs‹
 
	mba£
;

822 
sqlôe3_öt64
 
	miRowid
;

823 
sqlôe3_öt64
 
	miOff£t
;

824 *
	mzTønsõ¡
;

825 
	mnFûe
;

826 **
	mazFûe
;

827 
	maBuf
[1024];

830 
	$gë32bôs
(*
p
){

831  (
p
[0]<<24) + (p[1]<<16) + (p[2]<<8) +Ö[3];

832 
	}
}

839 
	$dequŸe
(*
z
){

840 
quŸe
;

841 
quŸe
 = 
z
[0];

842 if–
quŸe
=='[' || quote=='\'' || quote=='"' || quote=='`' ){

843 
iIn
 = 1;

844 
iOut
 = 0;

845 if–
quŸe
=='[' ) quote = ']';

846  
z
[
iIn
] ){

847 if–
z
[
iIn
]==
quŸe
 ){

848 if–
z
[
iIn
+1]!=
quŸe
 ) ;

849 
z
[
iOut
++] = 
quŸe
;

850 
iIn
 += 2;

852 
z
[
iOut
++] = z[
iIn
++];

855 
z
[
iOut
] = '\0';

857 
	}
}

859 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


863 
	$vlogC⁄√˘
(

864 
sqlôe3
 *
db
,

865 *
pAux
,

866 
¨gc
, c⁄° *c⁄°*
¨gv
,

867 
sqlôe3_vèb
 **
µVèb
,

868 **
pzEº


870 
sqlôe3_vfs
 *
pVfs
;

871 
Êags
;

872 
Vf¶ogVèb
 *
p
;

873 
rc
;

874 
nByã
;

875 *
zFûe
;

877 *
µVèb
 = 0;

878 
pVfs
 = 
	`sqlôe3_vfs_föd
(0);

879 
nByã
 = (
Vf¶ogVèb
Ë+ 
pVfs
->
szOsFûe
 +ÖVfs->
mxP©h«me
;

880 
p
 = 
	`sqlôe3_mÆloc
(
nByã
);

881 if–
p
==0 )  
SQLITE_NOMEM
;

882 
	`mem£t
(
p
, 0, 
nByã
);

884 
p
->
pFd
 = (
sqlôe3_fûe
 *)&p[1];

885 
p
->
zFûe
 = &((*Ì->
pFd
)[
pVfs
->
szOsFûe
];

887 
zFûe
 = 
	`sqlôe3_m¥ötf
("%s", 
¨gv
[3]);

888 if–!
zFûe
 ){

889 
	`sqlôe3_‰ì
(
p
);

890  
SQLITE_NOMEM
;

892 
	`dequŸe
(
zFûe
);

893 
pVfs
->
	`xFuŒP©h«me
’Vfs, 
zFûe
,ÖVfs->
mxP©h«me
, 
p
->zFile);

894 
	`sqlôe3_‰ì
(
zFûe
);

896 
Êags
 = 
SQLITE_OPEN_READWRITE
|
SQLITE_OPEN_MASTER_JOURNAL
;

897 
rc
 = 
pVfs
->
	`xO≥n
’Vfs, 
p
->
zFûe
,Ö->
pFd
, 
Êags
, &flags);

899 if–
rc
==
SQLITE_OK
 ){

900 
p
->
pFd
->
pMëhods
->
	`xFûeSize
’->pFd, &p->
nByã
);

901 
	`sqlôe3_de˛¨e_vèb
(
db
,

904 *
µVèb
 = &
p
->
ba£
;

906 
	`sqlôe3_‰ì
(
p
);

909  
rc
;

910 
	}
}

916 
	$vlogBe°Index
(
sqlôe3_vèb
 *
èb
, 
sqlôe3_ödex_öfo
 *
pIdxInfo
){

917 
pIdxInfo
->
e°im©edCo°
 = 10.0;

918  
SQLITE_OK
;

919 
	}
}

924 
	$vlogDisc⁄√˘
(
sqlôe3_vèb
 *
pVèb
){

925 
Vf¶ogVèb
 *
p
 = (Vf¶ogVèb *)
pVèb
;

926 if–
p
->
pFd
->
pMëhods
 ){

927 
p
->
pFd
->
pMëhods
->
	`xClo£
(p->pFd);

928 
p
->
pFd
->
pMëhods
 = 0;

930 
	`sqlôe3_‰ì
(
p
);

931  
SQLITE_OK
;

932 
	}
}

937 
	$vlogO≥n
(
sqlôe3_vèb
 *
pVTab
, 
sqlôe3_vèb_curs‹
 **
µCurs‹
){

938 
Vf¶ogC§
 *
pC§
;

940 
pC§
 = 
	`sqlôe3_mÆloc
((
Vf¶ogC§
));

941 if–!
pC§
 )  
SQLITE_NOMEM
;

942 
	`mem£t
(
pC§
, 0, (
Vf¶ogC§
));

943 *
µCurs‹
 = &
pC§
->
ba£
;

944  
SQLITE_OK
;

945 
	}
}

950 
	$vlogClo£
(
sqlôe3_vèb_curs‹
 *
pCurs‹
){

951 
Vf¶ogC§
 *
p
 = (Vf¶ogC§ *)
pCurs‹
;

952 
i
;

953 
i
=0; i<
p
->
nFûe
; i++){

954 
	`sqlôe3_‰ì
(
p
->
azFûe
[
i
]);

956 
	`sqlôe3_‰ì
(
p
->
azFûe
);

957 
	`sqlôe3_‰ì
(
p
->
zTønsõ¡
);

958 
	`sqlôe3_‰ì
(
p
);

959  
SQLITE_OK
;

960 
	}
}

965 
	$vlogNext
(
sqlôe3_vèb_curs‹
 *
pCurs‹
){

966 
Vf¶ogC§
 *
pC§
 = (Vf¶ogC§ *)
pCurs‹
;

967 
Vf¶ogVèb
 *
p
 = (Vf¶ogVèb *)
pCurs‹
->
pVèb
;

968 
rc
 = 
SQLITE_OK
;

969 
nRód
;

971 
	`sqlôe3_‰ì
(
pC§
->
zTønsõ¡
);

972 
pC§
->
zTønsõ¡
 = 0;

974 
nRód
 = 24;

975 if–
pC§
->
iOff£t
+
nRód
<=
p
->
nByã
 ){

976 
eEvít
;

977 
rc
 = 
p
->
pFd
->
pMëhods
->
	`xRód
’->pFd, 
pC§
->
aBuf
, 
nRód
,ÖC§->
iOff£t
);

979 
eEvít
 = 
	`gë32bôs
(
pC§
->
aBuf
);

980 if–(
rc
==
SQLITE_OK
)

981 && (
eEvít
==
OS_OPEN
 ||ÉEvít==
OS_DELETE
 ||ÉEvít==
OS_ACCESS
)

983 
buf
[4];

984 
rc
 = 
p
->
pFd
->
pMëhods
->
	`xRód
’->pFd, 
buf
, 4, 
pC§
->
iOff£t
+
nRód
);

985 
nRód
 += 4;

986 if–
rc
==
SQLITE_OK
 ){

987 
nSå
 = 
	`gë32bôs
((*)
buf
);

988 *
zSå
 = 
	`sqlôe3_mÆloc
(
nSå
+1);

989 
rc
 = 
p
->
pFd
->
pMëhods
->
	`xRód
’->pFd, 
zSå
, 
nSå
, 
pC§
->
iOff£t
+
nRód
);

990 
zSå
[
nSå
] = '\0';

991 
nRód
 +
nSå
;

993 if–
eEvít
==
OS_OPEN
 ){

994 
iFûeid
 = 
	`gë32bôs
(&
pC§
->
aBuf
[4]);

995 if–
iFûeid
>=
pC§
->
nFûe
 ){

996 
nNew
 = (
pC§
->
azFûe
[0])*(
iFûeid
+1);

997 
pC§
->
azFûe
 = (**)
	`sqlôe3_ªÆloc
’C§->azFûe, 
nNew
);

998 
nNew
 -(
pC§
->
azFûe
[0])*pC§->
nFûe
;

999 
	`mem£t
(&
pC§
->
azFûe
[pC§->
nFûe
], 0, 
nNew
);

1000 
pC§
->
nFûe
 = 
iFûeid
+1;

1002 
	`sqlôe3_‰ì
(
pC§
->
azFûe
[
iFûeid
]);

1003 
pC§
->
azFûe
[
iFûeid
] = 
zSå
;

1005 
pC§
->
zTønsõ¡
 = 
zSå
;

1011 
pC§
->
iRowid
 += 1;

1012 
pC§
->
iOff£t
 +
nRód
;

1013  
rc
;

1014 
	}
}

1016 
	$vlogEof
(
sqlôe3_vèb_curs‹
 *
pCurs‹
){

1017 
Vf¶ogC§
 *
pC§
 = (Vf¶ogC§ *)
pCurs‹
;

1018 
Vf¶ogVèb
 *
p
 = (Vf¶ogVèb *)
pCurs‹
->
pVèb
;

1019  (
pC§
->
iOff£t
>=
p
->
nByã
);

1020 
	}
}

1022 
	$vlogFûãr
(

1023 
sqlôe3_vèb_curs‹
 *
pCurs‹
,

1024 
idxNum
, c⁄° *
idxSå
,

1025 
¨gc
, 
sqlôe3_vÆue
 **
¨gv


1027 
Vf¶ogC§
 *
pC§
 = (Vf¶ogC§ *)
pCurs‹
;

1028 
pC§
->
iRowid
 = 0;

1029 
pC§
->
iOff£t
 = 20;

1030  
	`vlogNext
(
pCurs‹
);

1031 
	}
}

1033 
	$vlogCﬁumn
(

1034 
sqlôe3_vèb_curs‹
 *
pCurs‹
,

1035 
sqlôe3_c⁄ãxt
 *
˘x
,

1036 
i


1038 
vÆ
;

1039 
Vf¶ogC§
 *
pC§
 = (Vf¶ogC§ *)
pCurs‹
;

1041 
	`as£π
–
i
<7 );

1042 
vÆ
 = 
	`gë32bôs
(&
pC§
->
aBuf
[4*
i
]);

1044  
i
 ){

1046 
	`sqlôe3_ªsu…_ãxt
(
˘x
, 
	`vf¶og_evíäame
(
vÆ
), -1, 
SQLITE_STATIC
);

1050 *
zSå
 = 
pC§
->
zTønsõ¡
;

1051 if–
vÆ
!=0 && vÆ<()
pC§
->
nFûe
 ){

1052 
zSå
 = 
pC§
->
azFûe
[
vÆ
];

1054 
	`sqlôe3_ªsu…_ãxt
(
˘x
, 
zSå
, -1, 
SQLITE_TRANSIENT
);

1058 
	`sqlôe3_ªsu…_öt
(
˘x
, 
vÆ
);

1062  
SQLITE_OK
;

1063 
	}
}

1065 
	$vlogRowid
(
sqlôe3_vèb_curs‹
 *
pCurs‹
, 
sqlôe_öt64
 *
pRowid
){

1066 
Vf¶ogC§
 *
pC§
 = (Vf¶ogC§ *)
pCurs‹
;

1067 *
pRowid
 = 
pC§
->
iRowid
;

1068  
SQLITE_OK
;

1069 
	}
}

1071 
	$sqlôe3_vf¶og_ªgi°î
(
sqlôe3
 *
db
){

1072 
sqlôe3_moduÀ
 
vf¶og_moduÀ
 = {

1074 
vlogC⁄√˘
,

1075 
vlogC⁄√˘
,

1076 
vlogBe°Index
,

1077 
vlogDisc⁄√˘
,

1078 
vlogDisc⁄√˘
,

1079 
vlogO≥n
,

1080 
vlogClo£
,

1081 
vlogFûãr
,

1082 
vlogNext
,

1083 
vlogEof
,

1084 
vlogCﬁumn
,

1085 
vlogRowid
,

1095 
	`sqlôe3_¸óã_moduÀ
(
db
, "vf¶og", &
vf¶og_moduÀ
, 0);

1096  
SQLITE_OK
;

1097 
	}
}

1105 #i‡
deföed
(
SQLITE_TEST
Ë|| deföed(
TCLSH
)

1107 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

1108 
	~"sqlôe_t˛.h
"

1110 
	~"t˛.h
"

1111 #i‚de‡
SQLITE_TCLAPI


1112 
	#SQLITE_TCLAPI


	)

1116 
SQLITE_TCLAPI
 
	$ã°_vf¶og
(

1117 *
˛õ¡D©a
,

1118 
T˛_I¡îp
 *
öãΩ
,

1119 
objc
,

1120 
T˛_Obj
 *
CONST
 
objv
[]

1122 
	sSqlôeDb
 { 
sqlôe3
 *
db
; };

1123 
sqlôe3
 *
db
;

1124 
T˛_CmdInfo
 
cmdInfo
;

1125 
rc
 = 
SQLITE_ERROR
;

1127 c⁄° *
°rs
[] = { "annotate", "finalize", "new", "register", 0 };

1128 
	eVL_íum
 { 
VL_ANNOTATE
, 
VL_FINALIZE
, 
VL_NEW
, 
VL_REGISTER
 };

1129 
iSub
;

1131 if–
objc
<2 ){

1132 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "SUB-COMMAND ...");

1133  
TCL_ERROR
;

1135 if–
	`T˛_GëIndexFromObj
(
öãΩ
, 
objv
[1], 
°rs
, "sub-comm™d", 0, &
iSub
) ){

1136  
TCL_ERROR
;

1139  (
VL_íum
)
iSub
 ){

1140 
VL_ANNOTATE
: {

1141 *
zVfs
;

1142 *
zMsg
;

1143 if–
objc
!=4 ){

1144 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 3, 
objv
, "VFS");

1145  
TCL_ERROR
;

1147 
zVfs
 = 
	`T˛_GëSåög
(
objv
[2]);

1148 
zMsg
 = 
	`T˛_GëSåög
(
objv
[3]);

1149 
rc
 = 
	`sqlôe3_vf¶og_™nŸ©e
(
zVfs
, 
zMsg
);

1150 if–
rc
!=
SQLITE_OK
 ){

1151 
	`T˛_AµídResu…
(
öãΩ
, "failed", 0);

1152  
TCL_ERROR
;

1156 
VL_FINALIZE
: {

1157 *
zVfs
;

1158 if–
objc
!=3 ){

1159 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "VFS");

1160  
TCL_ERROR
;

1162 
zVfs
 = 
	`T˛_GëSåög
(
objv
[2]);

1163 
rc
 = 
	`sqlôe3_vf¶og_föÆize
(
zVfs
);

1164 if–
rc
!=
SQLITE_OK
 ){

1165 
	`T˛_AµídResu…
(
öãΩ
, "failed", 0);

1166  
TCL_ERROR
;

1171 
VL_NEW
: {

1172 *
zVfs
;

1173 *
zP¨ít
;

1174 *
zLog
;

1175 if–
objc
!=5 ){

1176 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "VFS PARENT LOGFILE");

1177  
TCL_ERROR
;

1179 
zVfs
 = 
	`T˛_GëSåög
(
objv
[2]);

1180 
zP¨ít
 = 
	`T˛_GëSåög
(
objv
[3]);

1181 
zLog
 = 
	`T˛_GëSåög
(
objv
[4]);

1182 if–*
zP¨ít
=='\0' ) zParent = 0;

1183 
rc
 = 
	`sqlôe3_vf¶og_√w
(
zVfs
, 
zP¨ít
, 
zLog
);

1184 if–
rc
!=
SQLITE_OK
 ){

1185 
	`T˛_AµídResu…
(
öãΩ
, "failed", 0);

1186  
TCL_ERROR
;

1191 
VL_REGISTER
: {

1192 *
zDb
;

1193 if–
objc
!=3 ){

1194 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "DB");

1195  
TCL_ERROR
;

1197 #ifde‡
SQLITE_OMIT_VIRTUALTABLE


1198 
	`T˛_AµídResu…
(
öãΩ
, "vfslogÇotávailable because of "

1200  
TCL_ERROR
;

1202 
zDb
 = 
	`T˛_GëSåög
(
objv
[2]);

1203 if–
	`T˛_GëComm™dInfo
(
öãΩ
, 
zDb
, &
cmdInfo
) ){

1204 
db
 = ((
SqlôeDb
*)
cmdInfo
.
objClõ¡D©a
)->db;

1205 
rc
 = 
	`sqlôe3_vf¶og_ªgi°î
(
db
);

1207 if–
rc
!=
SQLITE_OK
 ){

1208 
	`T˛_AµídResu…
(
öãΩ
, "bad sqlôe3 h™dÀ: ", 
zDb
, (*)0);

1209  
TCL_ERROR
;

1216  
TCL_OK
;

1217 
	}
}

1219 
	$Sqlôëe°Osö°_Inô
(
T˛_I¡îp
 *
öãΩ
){

1220 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "vf¶og", 
ã°_vf¶og
, 0, 0);

1221  
TCL_OK
;

1222 
	}
}

	@test_pcache.c

24 
	~"sqlôe3.h
"

25 
	~<°rög.h
>

26 
	~<as£π.h
>

33 
ã°pˇcheGlobÆTy≥
 
	tã°pˇcheGlobÆTy≥
;

34 
	sã°pˇcheGlobÆTy≥
 {

35 *
	mpDummy
;

36 
	mnIn°™˚
;

37 
	mdisˇrdCh™˚
;

38 
	m¥ngSìd
;

39 
	mhighSåess
;

41 
ã°pˇcheGlobÆTy≥
 
	gã°pˇcheGlobÆ
;

53 
	$ã°pˇcheInô
(*
pArg
){

54 
	`as£π
–
pArg
==(*)&
ã°pˇcheGlobÆ
 );

55 
	`as£π
–
ã°pˇcheGlobÆ
.
pDummy
==0 );

56 
	`as£π
–
ã°pˇcheGlobÆ
.
nIn°™˚
==0 );

57 
ã°pˇcheGlobÆ
.
pDummy
 = 
	`sqlôe3_mÆloc
(10);

58  
ã°pˇcheGlobÆ
.
pDummy
==0 ? 
SQLITE_NOMEM
 : 
SQLITE_OK
;

59 
	}
}

67 
	$ã°pˇcheShutdown
(*
pArg
){

68 
	`as£π
–
pArg
==(*)&
ã°pˇcheGlobÆ
 );

69 
	`as£π
–
ã°pˇcheGlobÆ
.
pDummy
!=0 );

70 
	`as£π
–
ã°pˇcheGlobÆ
.
nIn°™˚
==0 );

71 
	`sqlôe3_‰ì
–
ã°pˇcheGlobÆ
.
pDummy
 );

72 
ã°pˇcheGlobÆ
.
pDummy
 = 0;

73 
	}
}

84 #i‡
deföed
(
SQLITE_TEMP_STORE
) && SQLITE_TEMP_STORE>=2

85 
	#TESTPCACHE_NPAGE
 499

	)

87 
	#TESTPCACHE_NPAGE
 217

	)

89 
	#TESTPCACHE_RESERVE
 17

	)

94 
	#TESTPCACHE_VALID
 0x364585fd

	)

95 
	#TESTPCACHE_CLEAR
 0xd42670d4

	)

100 
ã°pˇche
 
	tã°pˇche
;

101 
	sã°pˇche
 {

102 
	mszPage
;

103 
	mszExåa
;

104 
	mbPurgóbÀ
;

105 
	mnFªe
;

106 
	mnPö√d
;

107 
	miR™d
;

108 
	miMagic
;

109 
	sã°pˇchePage
 {

110 
sqlôe3_pˇche_∑ge
 
	m∑ge
;

111 
	mkey
;

112 
	misPö√d
;

113 } 
	ma
[
TESTPCACHE_NPAGE
];

119 
	$ã°pˇcheR™dom
(
ã°pˇche
 *
p
){

120 
x
 = 0;

121 
i
;

122 
i
=0; i<4; i++){

123 
p
->
iR™d
 = (p->iRand*69069 + 5);

124 
x
 = (x<<8Ë| ((
p
->
iR™d
>>16)&0xff);

126  
x
;

127 
	}
}

133 
sqlôe3_pˇche
 *
	$ã°pˇcheCª©e
(

134 
szPage
,

135 
szExåa
,

136 
bPurgóbÀ


138 
nMem
;

139 *
x
;

140 
ã°pˇche
 *
p
;

141 
i
;

142 
	`as£π
–
ã°pˇcheGlobÆ
.
pDummy
!=0 );

143 
szPage
 = (szPage+7)&~7;

144 
nMem
 = (
ã°pˇche
Ë+ 
TESTPCACHE_NPAGE
*(
szPage
+
szExåa
);

145 
p
 = 
	`sqlôe3_mÆloc
–
nMem
 );

146 if–
p
==0 )  0;

147 
x
 = (*)&
p
[1];

148 
p
->
szPage
 = szPage;

149 
p
->
szExåa
 = szExtra;

150 
p
->
nFªe
 = 
TESTPCACHE_NPAGE
;

151 
p
->
nPö√d
 = 0;

152 
p
->
iR™d
 = 
ã°pˇcheGlobÆ
.
¥ngSìd
;

153 
p
->
bPurgóbÀ
 = bPurgeable;

154 
p
->
iMagic
 = 
TESTPCACHE_VALID
;

155 
i
=0; i<
TESTPCACHE_NPAGE
; i++, 
x
 +(
szPage
+
szExåa
)){

156 
p
->
a
[
i
].
key
 = 0;

157 
p
->
a
[
i
].
isPö√d
 = 0;

158 
p
->
a
[
i
].
∑ge
.
pBuf
 = (*)
x
;

159 
p
->
a
[
i
].
∑ge
.
pExåa
 = (*)&
x
[
szPage
];

161 
ã°pˇcheGlobÆ
.
nIn°™˚
++;

162  (
sqlôe3_pˇche
*)
p
;

163 
	}
}

168 
	$ã°pˇcheCachesize
(
sqlôe3_pˇche
 *
pCache
, 
√wSize
){

169 
ã°pˇche
 *
p
 = (ã°pˇche*)
pCache
;

170 
	`as£π
–
p
->
iMagic
==
TESTPCACHE_VALID
 );

171 
	`as£π
–
ã°pˇcheGlobÆ
.
pDummy
!=0 );

172 
	`as£π
–
ã°pˇcheGlobÆ
.
nIn°™˚
>0 );

173 
	}
}

179 
	$ã°pˇchePagecou¡
(
sqlôe3_pˇche
 *
pCache
){

180 
ã°pˇche
 *
p
 = (ã°pˇche*)
pCache
;

181 
	`as£π
–
p
->
iMagic
==
TESTPCACHE_VALID
 );

182 
	`as£π
–
ã°pˇcheGlobÆ
.
pDummy
!=0 );

183 
	`as£π
–
ã°pˇcheGlobÆ
.
nIn°™˚
>0 );

184  
TESTPCACHE_NPAGE
 - 
p
->
nFªe
;

185 
	}
}

190 
sqlôe3_pˇche_∑ge
 *
	$ã°pˇcheFëch
(

191 
sqlôe3_pˇche
 *
pCache
,

192 
key
,

193 
¸óãFœg


195 
ã°pˇche
 *
p
 = (ã°pˇche*)
pCache
;

196 
i
, 
j
;

197 
	`as£π
–
p
->
iMagic
==
TESTPCACHE_VALID
 );

198 
	`as£π
–
ã°pˇcheGlobÆ
.
pDummy
!=0 );

199 
	`as£π
–
ã°pˇcheGlobÆ
.
nIn°™˚
>0 );

202 
i
=0; i<
TESTPCACHE_NPAGE
; i++){

203 if–
p
->
a
[
i
].
key
==key ){

204 if–!
p
->
a
[
i
].
isPö√d
 ){

205 
p
->
nPö√d
++;

206 
	`as£π
–
p
->
nPö√d
 <
TESTPCACHE_NPAGE
 -Ö->
nFªe
 );

207 
p
->
a
[
i
].
isPö√d
 = 1;

209  &
p
->
a
[
i
].
∑ge
;

214 if–
¸óãFœg
==0 ){

219 if–
p
->
nPö√d
==
TESTPCACHE_NPAGE
 ){

224 if–
p
->
nPö√d
>=
TESTPCACHE_NPAGE
-
TESTPCACHE_RESERVE
 && 
¸óãFœg
<2 ){

233 if–
ã°pˇcheGlobÆ
.
highSåess
 && 
¸óãFœg
<2 ){

240 if–
p
->
nFªe
>
TESTPCACHE_RESERVE
 || (
¸óãFœg
==2 &&Ö->nFree>0) ){

241 
j
 = 
	`ã°pˇcheR™dom
(
p
Ë% 
TESTPCACHE_NPAGE
;

242 
i
=0; i<
TESTPCACHE_NPAGE
; i++, 
j
 = (j+1)%TESTPCACHE_NPAGE){

243 if–
p
->
a
[
j
].
key
==0 ){

244 
p
->
a
[
j
].
key
 = key;

245 
p
->
a
[
j
].
isPö√d
 = 1;

246 
	`mem£t
(
p
->
a
[
j
].
∑ge
.
pBuf
, 0,Ö->
szPage
);

247 
	`mem£t
(
p
->
a
[
j
].
∑ge
.
pExåa
, 0,Ö->
szExåa
);

248 
p
->
nPö√d
++;

249 
p
->
nFªe
--;

250 
	`as£π
–
p
->
nPö√d
 <
TESTPCACHE_NPAGE
 -Ö->
nFªe
 );

251  &
p
->
a
[
j
].
∑ge
;

256 
	`as£π
( 0 );

261 if–
p
->
bPurgóbÀ
==0 ){

268 
j
 = 
	`ã°pˇcheR™dom
(
p
Ë% 
TESTPCACHE_NPAGE
;

269 
i
=0; i<
TESTPCACHE_NPAGE
; i++, 
j
 = (j+1)%TESTPCACHE_NPAGE){

270 if–
p
->
a
[
j
].
key
>0 &&Ö->a[j].
isPö√d
==0 ){

271 
p
->
a
[
j
].
key
 = key;

272 
p
->
a
[
j
].
isPö√d
 = 1;

273 
	`mem£t
(
p
->
a
[
j
].
∑ge
.
pBuf
, 0,Ö->
szPage
);

274 
	`mem£t
(
p
->
a
[
j
].
∑ge
.
pExåa
, 0,Ö->
szExåa
);

275 
p
->
nPö√d
++;

276 
	`as£π
–
p
->
nPö√d
 <
TESTPCACHE_NPAGE
 -Ö->
nFªe
 );

277  &
p
->
a
[
j
].
∑ge
;

282 
	`as£π
(0);

284 
	}
}

289 
	$ã°pˇcheU≈ö
(

290 
sqlôe3_pˇche
 *
pCache
,

291 
sqlôe3_pˇche_∑ge
 *
pOldPage
,

292 
disˇrd


294 
ã°pˇche
 *
p
 = (ã°pˇche*)
pCache
;

295 
i
;

296 
	`as£π
–
p
->
iMagic
==
TESTPCACHE_VALID
 );

297 
	`as£π
–
ã°pˇcheGlobÆ
.
pDummy
!=0 );

298 
	`as£π
–
ã°pˇcheGlobÆ
.
nIn°™˚
>0 );

304 if–
p
->
bPurgóbÀ


305 && (100-
ã°pˇcheGlobÆ
.
disˇrdCh™˚
Ë<(
	`ã°pˇcheR™dom
(
p
)%100)

307 
disˇrd
 = 1;

310 
i
=0; i<
TESTPCACHE_NPAGE
; i++){

311 if–&
p
->
a
[
i
].
∑ge
==
pOldPage
 ){

313 
	`as£π
–
p
->
a
[
i
].
isPö√d
 );

314 
p
->
a
[
i
].
isPö√d
 = 0;

315 
p
->
nPö√d
--;

316 
	`as£π
–
p
->
nPö√d
>=0 );

317 if–
disˇrd
 ){

318 
p
->
a
[
i
].
key
 = 0;

319 
p
->
nFªe
++;

320 
	`as£π
–
p
->
nFªe
<=
TESTPCACHE_NPAGE
 );

327 
	`as£π
( 0 );

328 
	}
}

334 
	$ã°pˇcheRekey
(

335 
sqlôe3_pˇche
 *
pCache
,

336 
sqlôe3_pˇche_∑ge
 *
pOldPage
,

337 
ﬁdKey
,

338 
√wKey


340 
ã°pˇche
 *
p
 = (ã°pˇche*)
pCache
;

341 
i
;

342 
	`as£π
–
p
->
iMagic
==
TESTPCACHE_VALID
 );

343 
	`as£π
–
ã°pˇcheGlobÆ
.
pDummy
!=0 );

344 
	`as£π
–
ã°pˇcheGlobÆ
.
nIn°™˚
>0 );

349 
i
=0; i<
TESTPCACHE_NPAGE
; i++){

350 if–
p
->
a
[
i
].
key
==
√wKey
 ){

352 
	`as£π
–
p
->
a
[
i
].
isPö√d
==0 );

353 
p
->
a
[
i
].
key
 = 0;

354 
p
->
nFªe
++;

355 
	`as£π
–
p
->
nFªe
<=
TESTPCACHE_NPAGE
 );

362 
i
=0; i<
TESTPCACHE_NPAGE
; i++){

363 if–
p
->
a
[
i
].
key
==
ﬁdKey
 ){

365 
	`as£π
–&
p
->
a
[
i
].
∑ge
==
pOldPage
 );

367 
	`as£π
–
p
->
a
[
i
].
isPö√d
 );

368 
p
->
a
[
i
].
key
 = 
√wKey
;

374 
	`as£π
( 0 );

375 
	}
}

382 
	$ã°pˇcheTrunˇã
(
sqlôe3_pˇche
 *
pCache
, 
iLimô
){

383 
ã°pˇche
 *
p
 = (ã°pˇche*)
pCache
;

384 
i
;

385 
	`as£π
–
p
->
iMagic
==
TESTPCACHE_VALID
 );

386 
	`as£π
–
ã°pˇcheGlobÆ
.
pDummy
!=0 );

387 
	`as£π
–
ã°pˇcheGlobÆ
.
nIn°™˚
>0 );

388 
i
=0; i<
TESTPCACHE_NPAGE
; i++){

389 if–
p
->
a
[
i
].
key
>=
iLimô
 ){

390 
p
->
a
[
i
].
key
 = 0;

391 if–
p
->
a
[
i
].
isPö√d
 ){

392 
p
->
nPö√d
--;

393 
	`as£π
–
p
->
nPö√d
>=0 );

395 
p
->
nFªe
++;

396 
	`as£π
–
p
->
nFªe
<=
TESTPCACHE_NPAGE
 );

399 
	}
}

404 
	$ã°pˇcheDe°roy
(
sqlôe3_pˇche
 *
pCache
){

405 
ã°pˇche
 *
p
 = (ã°pˇche*)
pCache
;

406 
	`as£π
–
p
->
iMagic
==
TESTPCACHE_VALID
 );

407 
	`as£π
–
ã°pˇcheGlobÆ
.
pDummy
!=0 );

408 
	`as£π
–
ã°pˇcheGlobÆ
.
nIn°™˚
>0 );

409 
p
->
iMagic
 = 
TESTPCACHE_CLEAR
;

410 
	`sqlôe3_‰ì
(
p
);

411 
ã°pˇcheGlobÆ
.
nIn°™˚
--;

412 
	}
}

427 
	$ö°ÆlTe°PCache
(

428 
ö°ÆlFœg
,

429 
disˇrdCh™˚
,

430 
¥ngSìd
,

431 
highSåess


433 c⁄° 
sqlôe3_pˇche_mëhods2
 
ã°Pˇche
 = {

435 (*)&
ã°pˇcheGlobÆ
,

436 
ã°pˇcheInô
,

437 
ã°pˇcheShutdown
,

438 
ã°pˇcheCª©e
,

439 
ã°pˇcheCachesize
,

440 
ã°pˇchePagecou¡
,

441 
ã°pˇcheFëch
,

442 
ã°pˇcheU≈ö
,

443 
ã°pˇcheRekey
,

444 
ã°pˇcheTrunˇã
,

445 
ã°pˇcheDe°roy
,

447 
sqlôe3_pˇche_mëhods2
 
deÁu…Pˇche
;

448 
isIn°ÆÀd
 = 0;

450 
	`as£π
–
ã°pˇcheGlobÆ
.
nIn°™˚
==0 );

451 
	`as£π
–
ã°pˇcheGlobÆ
.
pDummy
==0 );

452 
	`as£π
–
disˇrdCh™˚
<=100 );

453 
ã°pˇcheGlobÆ
.
disˇrdCh™˚
 = discardChance;

454 
ã°pˇcheGlobÆ
.
¥ngSìd
 =ÖrngSeed ^ (prngSeed<<16);

455 
ã°pˇcheGlobÆ
.
highSåess
 = highStress;

456 if–
ö°ÆlFœg
!=
isIn°ÆÀd
 ){

457 if–
ö°ÆlFœg
 ){

458 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_GETPCACHE2
, &
deÁu…Pˇche
);

459 
	`as£π
–
deÁu…Pˇche
.
xCª©e
!=
ã°pˇcheCª©e
 );

460 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_PCACHE2
, &
ã°Pˇche
);

462 
	`as£π
–
deÁu…Pˇche
.
xCª©e
!=0 );

463 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_PCACHE2
, &
deÁu…Pˇche
);

465 
isIn°ÆÀd
 = 
ö°ÆlFœg
;

467 
	}
}

	@test_quota.c

30 
	~"ã°_quŸa.h
"

31 
	~<°rög.h
>

32 
	~<as£π.h
>

37 #i‡
deföed
(
SQLITE_THREADSAFE
) && SQLITE_THREADSAFE==0

38 
	#sqlôe3_muãx_Æloc
(
X
Ë((
sqlôe3_muãx
*)8)

	)

39 
	#sqlôe3_muãx_‰ì
(
X
)

	)

40 
	#sqlôe3_muãx_íãr
(
X
)

	)

41 
	#sqlôe3_muãx_åy
(
X
Ë
SQLITE_OK


	)

42 
	#sqlôe3_muãx_Àave
(
X
)

	)

43 
	#sqlôe3_muãx_hñd
(
X
Ë(()(X),1)

	)

44 
	#sqlôe3_muãx_nŸhñd
(
X
Ë(()(X),1)

	)

47 
	~"os_£tup.h
"

49 #i‡
SQLITE_OS_UNIX


50 
	~<uni°d.h
>

52 #i‡
SQLITE_OS_WIN


53 
	~"os_wö.h
"

54 
	~<io.h
>

61 
quŸaGroup
 
	tquŸaGroup
;

62 
quŸaC⁄n
 
	tquŸaC⁄n
;

63 
quŸaFûe
 
	tquŸaFûe
;

79 
	squŸaGroup
 {

80 c⁄° *
	mzP©ã∫
;

81 
sqlôe3_öt64
 
	miLimô
;

82 
sqlôe3_öt64
 
	miSize
;

83 (*
	mxCÆlback
)(

84 c⁄° *
	mzFûíame
,

85 
sqlôe3_öt64
 *
	mpiLimô
,

86 
sqlôe3_öt64
 
	miSize
,

87 *
	mpArg


89 *
	mpArg
;

90 (*
	mxDe°roy
)(*);

91 
quŸaGroup
 *
	mpNext
, **
	mµPªv
;

92 
quŸaFûe
 *
	mpFûes
;

103 
	squŸaFûe
 {

104 *
	mzFûíame
;

105 
quŸaGroup
 *
	mpGroup
;

106 
sqlôe3_öt64
 
	miSize
;

107 
	mnRef
;

108 
	mdñëeOnClo£
;

109 
quŸaFûe
 *
	mpNext
, **
	mµPªv
;

118 
	squŸaC⁄n
 {

119 
sqlôe3_fûe
 
	mba£
;

120 
quŸaFûe
 *
	mpFûe
;

129 
	squŸa_FILE
 {

130 
FILE
 *
	mf
;

131 
sqlôe3_öt64
 
	miOf°
;

132 
quŸaFûe
 *
	mpFûe
;

133 #i‡
SQLITE_OS_WIN


134 *
	mzMbcsName
;

150 
sqlôe3_vfs
 *
	mpOrigVfs
;

155 
sqlôe3_vfs
 
	msThisVfs
;

167 
sqlôe3_io_mëhods
 
	msIoMëhodsV1
;

168 
sqlôe3_io_mëhods
 
	msIoMëhodsV2
;

172 
	misInôülized
;

177 
sqlôe3_muãx
 *
	mpMuãx
;

181 
quŸaGroup
 *
	mpGroup
;

183 } 
	ggQuŸa
;

190 
	$quŸaE¡î
(){ 
	`sqlôe3_muãx_íãr
(
gQuŸa
.
pMuãx
); 
	}
}

191 
	$quŸaLóve
(){ 
	`sqlôe3_muãx_Àave
(
gQuŸa
.
pMuãx
); 
	}
}

195 
	$quŸaGroupO≥nFûeCou¡
(
quŸaGroup
 *
pGroup
){

196 
N
 = 0;

197 
quŸaFûe
 *
pFûe
 = 
pGroup
->
pFûes
;

198  
pFûe
 ){

199 if–
pFûe
->
nRef
 ) 
N
++;

200 
pFûe
 =ÖFûe->
pNext
;

202  
N
;

203 
	}
}

207 
	$quŸaRemoveFûe
(
quŸaFûe
 *
pFûe
){

208 
quŸaGroup
 *
pGroup
 = 
pFûe
->pGroup;

209 
pGroup
->
iSize
 -
pFûe
->iSize;

210 *
pFûe
->
µPªv
 =ÖFûe->
pNext
;

211 if–
pFûe
->
pNext
 )ÖFûe->pNext->
µPªv
 =ÖFile->ppPrev;

212 
	`sqlôe3_‰ì
(
pFûe
);

213 
	}
}

218 
	$quŸaRemoveAŒFûes
(
quŸaGroup
 *
pGroup
){

219  
pGroup
->
pFûes
 ){

220 
	`as£π
–
pGroup
->
pFûes
->
nRef
==0 );

221 
	`quŸaRemoveFûe
(
pGroup
->
pFûes
);

223 
	}
}

229 
	$quŸaGroupDîef
(
quŸaGroup
 *
pGroup
){

230 if–
pGroup
->
iLimô
==0 && 
	`quŸaGroupO≥nFûeCou¡
(pGroup)==0 ){

231 
	`quŸaRemoveAŒFûes
(
pGroup
);

232 *
pGroup
->
µPªv
 =ÖGroup->
pNext
;

233 if–
pGroup
->
pNext
 )ÖGroup->pNext->
µPªv
 =ÖGroup->ppPrev;

234 if–
pGroup
->
xDe°roy
 )ÖGroup->
	`xDe°roy
’Group->
pArg
);

235 
	`sqlôe3_‰ì
(
pGroup
);

237 
	}
}

256 
	$quŸaSåglob
(c⁄° *
zGlob
, c⁄° *
z
){

257 
c
, 
c2
, 
cx
;

258 
övît
;

259 
£í
;

261  (
c
 = (*(
zGlob
++)))!=0 ){

262 if–
c
=='*' ){

263  (
c
=(*(
zGlob
++))) == '*' || c=='?' ){

264 if–
c
=='?' && (*(
z
++))==0 )  0;

266 if–
c
==0 ){

268 }if–
c
=='[' ){

269  *
z
 && 
	`quŸaSåglob
(
zGlob
-1,z)==0 ){

270 
z
++;

272  (*
z
)!=0;

274 
cx
 = (
c
=='/') ? '\\' : c;

275  (
c2
 = (*(
z
++)))!=0 ){

276  
c2
!=
c
 && c2!=
cx
 ){

277 
c2
 = *(
z
++);

278 if–
c2
==0 )  0;

280 if–
	`quŸaSåglob
(
zGlob
,
z
) )  1;

283 }if–
c
=='?' ){

284 if–(*(
z
++))==0 )  0;

285 }if–
c
=='[' ){

286 
¥i‹_c
 = 0;

287 
£í
 = 0;

288 
övît
 = 0;

289 
c
 = *(
z
++);

290 if–
c
==0 )  0;

291 
c2
 = *(
zGlob
++);

292 if–
c2
=='^' ){

293 
övît
 = 1;

294 
c2
 = *(
zGlob
++);

296 if–
c2
==']' ){

297 if–
c
==']' ) 
£í
 = 1;

298 
c2
 = *(
zGlob
++);

300  
c2
 && c2!=']' ){

301 if–
c2
=='-' && 
zGlob
[0]!=']' && zGlob[0]!=0 && 
¥i‹_c
>0 ){

302 
c2
 = *(
zGlob
++);

303 if–
c
>=
¥i‹_c
 && c<=
c2
 ) 
£í
 = 1;

304 
¥i‹_c
 = 0;

306 if–
c
==
c2
 ){

307 
£í
 = 1;

309 
¥i‹_c
 = 
c2
;

311 
c2
 = *(
zGlob
++);

313 if–
c2
==0 || (
£í
 ^ 
övît
)==0 )  0;

314 }if–
c
=='/' ){

315 if–
z
[0]!='/' && z[0]!='\\' )  0;

316 
z
++;

318 if–
c
!=(*(
z
++)) )  0;

321  *
z
==0;

322 
	}
}

329 
quŸaGroup
 *
	$quŸaGroupFöd
(c⁄° *
zFûíame
){

330 
quŸaGroup
 *
p
;

331 
p
=
gQuŸa
.
pGroup
;Ö && 
	`quŸaSåglob
’->
zP©ã∫
, 
zFûíame
)==0;

332 
p
ı->
pNext
){}

333  
p
;

334 
	}
}

339 
sqlôe3_fûe
 *
	$quŸaSubO≥n
(
sqlôe3_fûe
 *
pC⁄n
){

340 
quŸaC⁄n
 *
p
 = (quŸaC⁄n*)
pC⁄n
;

341  (
sqlôe3_fûe
*)&
p
[1];

342 
	}
}

347 
quŸaFûe
 *
	$quŸaFödFûe
(

348 
quŸaGroup
 *
pGroup
,

349 c⁄° *
zName
,

350 
¸óãFœg


352 
quŸaFûe
 *
pFûe
 = 
pGroup
->
pFûes
;

353  
pFûe
 && 
	`°rcmp
’Fûe->
zFûíame
, 
zName
)!=0 ){

354 
pFûe
 =ÖFûe->
pNext
;

356 if–
pFûe
==0 && 
¸óãFœg
 ){

357 
nName
 = ()(
	`°æí
(
zName
) & 0x3fffffff);

358 
pFûe
 = (
quŸaFûe
 *)
	`sqlôe3_mÆloc
–(*pFûeË+ 
nName
 + 1 );

359 if–
pFûe
 ){

360 
	`mem£t
(
pFûe
, 0, (*pFile));

361 
pFûe
->
zFûíame
 = (*)&pFile[1];

362 
	`mem˝y
(
pFûe
->
zFûíame
, 
zName
, 
nName
+1);

363 
pFûe
->
pNext
 = 
pGroup
->
pFûes
;

364 if–
pGroup
->
pFûes
 )ÖGroup->pFûes->
µPªv
 = &
pFûe
->
pNext
;

365 
pFûe
->
µPªv
 = &
pGroup
->
pFûes
;

366 
pGroup
->
pFûes
 = 
pFûe
;

367 
pFûe
->
pGroup
 =ÖGroup;

370  
pFûe
;

371 
	}
}

377 *
	$quŸa_utf8_to_mbcs
(c⁄° *
zUtf8
){

378 #i‡
SQLITE_OS_WIN


379 
size_t
 
n
;

380 
nWide
;

381 
nMbcs
;

382 
LPWSTR
 
zTmpWide
;

383 *
zMbcs
;

384 
codïage
;

386 
n
 = 
	`°æí
(
zUtf8
);

387 
nWide
 = 
	`Mu…iByãToWideCh¨
(
CP_UTF8
, 0, 
zUtf8
, -1, 
NULL
, 0);

388 if–
nWide
==0 )  0;

389 
zTmpWide
 = (
LPWSTR
)
	`sqlôe3_mÆloc
–(
nWide
+1)*(zTmpWide[0]) );

390 if–
zTmpWide
==0 )  0;

391 
	`Mu…iByãToWideCh¨
(
CP_UTF8
, 0, 
zUtf8
, -1, 
zTmpWide
, 
nWide
);

392 
codïage
 = 
	`AªFûeApisANSI
(Ë? 
CP_ACP
 : 
CP_OEMCP
;

393 
nMbcs
 = 
	`WideCh¨ToMu…iByã
(
codïage
, 0, 
zTmpWide
, 
nWide
, 0, 0, 0, 0);

394 
zMbcs
 = 
nMbcs
 ? (*)
	`sqlôe3_mÆloc
(ÇMbcs+1 ) : 0;

395 if–
zMbcs
 ){

396 
	`WideCh¨ToMu…iByã
(
codïage
, 0, 
zTmpWide
, 
nWide
, 
zMbcs
, 
nMbcs
, 0, 0);

398 
	`sqlôe3_‰ì
(
zTmpWide
);

399  
zMbcs
;

401  (*)
zUtf8
;

403 
	}
}

408 
	$quŸa_mbcs_‰ì
(*
zOld
){

409 #i‡
SQLITE_OS_WIN


410 
	`sqlôe3_‰ì
(
zOld
);

414 
	}
}

424 
	$quŸaO≥n
(

425 
sqlôe3_vfs
 *
pVfs
,

426 c⁄° *
zName
,

427 
sqlôe3_fûe
 *
pC⁄n
,

428 
Êags
,

429 *
pOutFœgs


431 
rc
;

432 
quŸaC⁄n
 *
pQuŸaO≥n
;

433 
quŸaFûe
 *
pFûe
;

434 
quŸaGroup
 *
pGroup
;

435 
sqlôe3_fûe
 *
pSubO≥n
;

436 
sqlôe3_vfs
 *
pOrigVfs
 = 
gQuŸa
.pOrigVfs;

441 if–(
Êags
 & (
SQLITE_OPEN_MAIN_DB
|
SQLITE_OPEN_WAL
))==0 ){

442  
pOrigVfs
->
	`xO≥n
’OrigVfs, 
zName
, 
pC⁄n
, 
Êags
, 
pOutFœgs
);

448 
	`quŸaE¡î
();

449 
pGroup
 = 
	`quŸaGroupFöd
(
zName
);

450 if–
pGroup
==0 ){

451 
rc
 = 
pOrigVfs
->
	`xO≥n
’OrigVfs, 
zName
, 
pC⁄n
, 
Êags
, 
pOutFœgs
);

455 
pQuŸaO≥n
 = (
quŸaC⁄n
*)
pC⁄n
;

456 
pSubO≥n
 = 
	`quŸaSubO≥n
(
pC⁄n
);

457 
rc
 = 
pOrigVfs
->
	`xO≥n
’OrigVfs, 
zName
, 
pSubO≥n
, 
Êags
, 
pOutFœgs
);

458 if–
rc
==
SQLITE_OK
 ){

459 
pFûe
 = 
	`quŸaFödFûe
(
pGroup
, 
zName
, 1);

460 if–
pFûe
==0 ){

461 
	`quŸaLóve
();

462 
pSubO≥n
->
pMëhods
->
	`xClo£
(pSubOpen);

463  
SQLITE_NOMEM
;

465 
pFûe
->
dñëeOnClo£
 = (
Êags
 & 
SQLITE_OPEN_DELETEONCLOSE
)!=0;

466 
pFûe
->
nRef
++;

467 
pQuŸaO≥n
->
pFûe
 =ÖFile;

468 if–
pSubO≥n
->
pMëhods
->
iVîsi⁄
==1 ){

469 
pQuŸaO≥n
->
ba£
.
pMëhods
 = &
gQuŸa
.
sIoMëhodsV1
;

471 
pQuŸaO≥n
->
ba£
.
pMëhods
 = &
gQuŸa
.
sIoMëhodsV2
;

475 
	`quŸaLóve
();

476  
rc
;

477 
	}
}

486 
	$quŸaDñëe
(

487 
sqlôe3_vfs
 *
pVfs
,

488 c⁄° *
zName
,

489 
syncDú


491 
rc
;

492 
quŸaFûe
 *
pFûe
;

493 
quŸaGroup
 *
pGroup
;

494 
sqlôe3_vfs
 *
pOrigVfs
 = 
gQuŸa
.pOrigVfs;

497 
rc
 = 
pOrigVfs
->
	`xDñëe
’OrigVfs, 
zName
, 
syncDú
);

502 if–
rc
==
SQLITE_OK
 ){

503 
	`quŸaE¡î
();

504 
pGroup
 = 
	`quŸaGroupFöd
(
zName
);

505 if–
pGroup
 ){

506 
pFûe
 = 
	`quŸaFödFûe
(
pGroup
, 
zName
, 0);

507 if–
pFûe
 ){

508 if–
pFûe
->
nRef
 ){

509 
pFûe
->
dñëeOnClo£
 = 1;

511 
	`quŸaRemoveFûe
(
pFûe
);

512 
	`quŸaGroupDîef
(
pGroup
);

516 
	`quŸaLóve
();

518  
rc
;

519 
	}
}

528 
	$quŸaClo£
(
sqlôe3_fûe
 *
pC⁄n
){

529 
quŸaC⁄n
 *
p
 = (quŸaC⁄n*)
pC⁄n
;

530 
quŸaFûe
 *
pFûe
 = 
p
->pFile;

531 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`quŸaSubO≥n
(
pC⁄n
);

532 
rc
;

533 
rc
 = 
pSubO≥n
->
pMëhods
->
	`xClo£
(pSubOpen);

534 
	`quŸaE¡î
();

535 
pFûe
->
nRef
--;

536 if–
pFûe
->
nRef
==0 ){

537 
quŸaGroup
 *
pGroup
 = 
pFûe
->pGroup;

538 if–
pFûe
->
dñëeOnClo£
 ){

539 
gQuŸa
.
pOrigVfs
->
	`xDñëe
(gQuŸa.pOrigVfs, 
pFûe
->
zFûíame
, 0);

540 
	`quŸaRemoveFûe
(
pFûe
);

542 
	`quŸaGroupDîef
(
pGroup
);

544 
	`quŸaLóve
();

545  
rc
;

546 
	}
}

551 
	$quŸaRód
(

552 
sqlôe3_fûe
 *
pC⁄n
,

553 *
pBuf
,

554 
iAmt
,

555 
sqlôe3_öt64
 
iOf°


557 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`quŸaSubO≥n
(
pC⁄n
);

558  
pSubO≥n
->
pMëhods
->
	`xRód
’SubO≥n, 
pBuf
, 
iAmt
, 
iOf°
);

559 
	}
}

565 
	$quŸaWrôe
(

566 
sqlôe3_fûe
 *
pC⁄n
,

567 c⁄° *
pBuf
,

568 
iAmt
,

569 
sqlôe3_öt64
 
iOf°


571 
quŸaC⁄n
 *
p
 = (quŸaC⁄n*)
pC⁄n
;

572 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`quŸaSubO≥n
(
pC⁄n
);

573 
sqlôe3_öt64
 
iEnd
 = 
iOf°
+
iAmt
;

574 
quŸaGroup
 *
pGroup
;

575 
quŸaFûe
 *
pFûe
 = 
p
->pFile;

576 
sqlôe3_öt64
 
szNew
;

578 if–
pFûe
->
iSize
<
iEnd
 ){

579 
pGroup
 = 
pFûe
->pGroup;

580 
	`quŸaE¡î
();

581 
szNew
 = 
pGroup
->
iSize
 - 
pFûe
->iSizê+ 
iEnd
;

582 if–
szNew
>
pGroup
->
iLimô
 &&ÖGroup->iLimit>0 ){

583 if–
pGroup
->
xCÆlback
 ){

584 
pGroup
->
	`xCÆlback
(
pFûe
->
zFûíame
, &pGroup->
iLimô
, 
szNew
,

585 
pGroup
->
pArg
);

587 if–
szNew
>
pGroup
->
iLimô
 &&ÖGroup->iLimit>0 ){

588 
	`quŸaLóve
();

589  
SQLITE_FULL
;

592 
pGroup
->
iSize
 = 
szNew
;

593 
pFûe
->
iSize
 = 
iEnd
;

594 
	`quŸaLóve
();

596  
pSubO≥n
->
pMëhods
->
	`xWrôe
’SubO≥n, 
pBuf
, 
iAmt
, 
iOf°
);

597 
	}
}

602 
	$quŸaTrunˇã
(
sqlôe3_fûe
 *
pC⁄n
, 
sqlôe3_öt64
 
size
){

603 
quŸaC⁄n
 *
p
 = (quŸaC⁄n*)
pC⁄n
;

604 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`quŸaSubO≥n
(
pC⁄n
);

605 
rc
 = 
pSubO≥n
->
pMëhods
->
	`xTrunˇã
’SubO≥n, 
size
);

606 
quŸaFûe
 *
pFûe
 = 
p
->pFile;

607 
quŸaGroup
 *
pGroup
;

608 if–
rc
==
SQLITE_OK
 ){

609 
	`quŸaE¡î
();

610 
pGroup
 = 
pFûe
->pGroup;

611 
pGroup
->
iSize
 -
pFûe
->iSize;

612 
pFûe
->
iSize
 = 
size
;

613 
pGroup
->
iSize
 +
size
;

614 
	`quŸaLóve
();

616  
rc
;

617 
	}
}

621 
	$quŸaSync
(
sqlôe3_fûe
 *
pC⁄n
, 
Êags
){

622 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`quŸaSubO≥n
(
pC⁄n
);

623  
pSubO≥n
->
pMëhods
->
	`xSync
’SubO≥n, 
Êags
);

624 
	}
}

629 
	$quŸaFûeSize
(
sqlôe3_fûe
 *
pC⁄n
, 
sqlôe3_öt64
 *
pSize
){

630 
quŸaC⁄n
 *
p
 = (quŸaC⁄n*)
pC⁄n
;

631 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`quŸaSubO≥n
(
pC⁄n
);

632 
quŸaFûe
 *
pFûe
 = 
p
->pFile;

633 
quŸaGroup
 *
pGroup
;

634 
sqlôe3_öt64
 
sz
;

635 
rc
;

637 
rc
 = 
pSubO≥n
->
pMëhods
->
	`xFûeSize
’SubO≥n, &
sz
);

638 if–
rc
==
SQLITE_OK
 ){

639 
	`quŸaE¡î
();

640 
pGroup
 = 
pFûe
->pGroup;

641 
pGroup
->
iSize
 -
pFûe
->iSize;

642 
pFûe
->
iSize
 = 
sz
;

643 
pGroup
->
iSize
 +
sz
;

644 
	`quŸaLóve
();

645 *
pSize
 = 
sz
;

647  
rc
;

648 
	}
}

652 
	$quŸaLock
(
sqlôe3_fûe
 *
pC⁄n
, 
lock
){

653 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`quŸaSubO≥n
(
pC⁄n
);

654  
pSubO≥n
->
pMëhods
->
	`xLock
’SubO≥n, 
lock
);

655 
	}
}

659 
	$quŸaU∆ock
(
sqlôe3_fûe
 *
pC⁄n
, 
lock
){

660 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`quŸaSubO≥n
(
pC⁄n
);

661  
pSubO≥n
->
pMëhods
->
	`xU∆ock
’SubO≥n, 
lock
);

662 
	}
}

666 
	$quŸaCheckRe£rvedLock
(
sqlôe3_fûe
 *
pC⁄n
, *
pResOut
){

667 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`quŸaSubO≥n
(
pC⁄n
);

668  
pSubO≥n
->
pMëhods
->
	`xCheckRe£rvedLock
’SubO≥n, 
pResOut
);

669 
	}
}

673 
	$quŸaFûeC⁄åﬁ
(
sqlôe3_fûe
 *
pC⁄n
, 
›
, *
pArg
){

674 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`quŸaSubO≥n
(
pC⁄n
);

675 
rc
 = 
pSubO≥n
->
pMëhods
->
	`xFûeC⁄åﬁ
’SubO≥n, 
›
, 
pArg
);

676 #i‡
	`deföed
(
SQLITE_FCNTL_VFSNAME
)

677 if–
›
==
SQLITE_FCNTL_VFSNAME
 && 
rc
==
SQLITE_OK
 ){

678 *(**)
pArg
 = 
	`sqlôe3_m¥ötf
("quota/%z", *(**)pArg);

681  
rc
;

682 
	}
}

686 
	$quŸaSe˘‹Size
(
sqlôe3_fûe
 *
pC⁄n
){

687 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`quŸaSubO≥n
(
pC⁄n
);

688  
pSubO≥n
->
pMëhods
->
	`xSe˘‹Size
(pSubOpen);

689 
	}
}

693 
	$quŸaDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
 *
pC⁄n
){

694 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`quŸaSubO≥n
(
pC⁄n
);

695  
pSubO≥n
->
pMëhods
->
	`xDevi˚Ch¨a˘îi°ics
(pSubOpen);

696 
	}
}

700 
	$quŸaShmM≠
(

701 
sqlôe3_fûe
 *
pC⁄n
,

702 
iRegi⁄
,

703 
szRegi⁄
,

704 
bExãnd
,

705 vﬁ©ûê**
µ


707 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`quŸaSubO≥n
(
pC⁄n
);

708  
pSubO≥n
->
pMëhods
->
	`xShmM≠
’SubO≥n, 
iRegi⁄
, 
szRegi⁄
, 
bExãnd
, 
µ
);

709 
	}
}

713 
	$quŸaShmLock
(

714 
sqlôe3_fûe
 *
pC⁄n
,

715 
of°
,

716 
n
,

717 
Êags


719 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`quŸaSubO≥n
(
pC⁄n
);

720  
pSubO≥n
->
pMëhods
->
	`xShmLock
’SubO≥n, 
of°
, 
n
, 
Êags
);

721 
	}
}

725 
	$quŸaShmB¨rõr
(
sqlôe3_fûe
 *
pC⁄n
){

726 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`quŸaSubO≥n
(
pC⁄n
);

727 
pSubO≥n
->
pMëhods
->
	`xShmB¨rõr
(pSubOpen);

728 
	}
}

732 
	$quŸaShmUnm≠
(
sqlôe3_fûe
 *
pC⁄n
, 
dñëeFœg
){

733 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`quŸaSubO≥n
(
pC⁄n
);

734  
pSubO≥n
->
pMëhods
->
	`xShmUnm≠
’SubO≥n, 
dñëeFœg
);

735 
	}
}

749 
	$sqlôe3_quŸa_öôülize
(c⁄° *
zOrigVfsName
, 
makeDeÁu…
){

750 
sqlôe3_vfs
 *
pOrigVfs
;

751 if–
gQuŸa
.
isInôülized
 )  
SQLITE_MISUSE
;

752 
pOrigVfs
 = 
	`sqlôe3_vfs_föd
(
zOrigVfsName
);

753 if–
pOrigVfs
==0 )  
SQLITE_ERROR
;

754 
	`as£π
–
pOrigVfs
!=&
gQuŸa
.
sThisVfs
 );

755 
gQuŸa
.
pMuãx
 = 
	`sqlôe3_muãx_Æloc
(
SQLITE_MUTEX_FAST
);

756 if–!
gQuŸa
.
pMuãx
 ){

757  
SQLITE_NOMEM
;

759 
gQuŸa
.
isInôülized
 = 1;

760 
gQuŸa
.
pOrigVfs
 =ÖOrigVfs;

761 
gQuŸa
.
sThisVfs
 = *
pOrigVfs
;

762 
gQuŸa
.
sThisVfs
.
xO≥n
 = 
quŸaO≥n
;

763 
gQuŸa
.
sThisVfs
.
xDñëe
 = 
quŸaDñëe
;

764 
gQuŸa
.
sThisVfs
.
szOsFûe
 +(
quŸaC⁄n
);

765 
gQuŸa
.
sThisVfs
.
zName
 = "quota";

766 
gQuŸa
.
sIoMëhodsV1
.
iVîsi⁄
 = 1;

767 
gQuŸa
.
sIoMëhodsV1
.
xClo£
 = 
quŸaClo£
;

768 
gQuŸa
.
sIoMëhodsV1
.
xRód
 = 
quŸaRód
;

769 
gQuŸa
.
sIoMëhodsV1
.
xWrôe
 = 
quŸaWrôe
;

770 
gQuŸa
.
sIoMëhodsV1
.
xTrunˇã
 = 
quŸaTrunˇã
;

771 
gQuŸa
.
sIoMëhodsV1
.
xSync
 = 
quŸaSync
;

772 
gQuŸa
.
sIoMëhodsV1
.
xFûeSize
 = 
quŸaFûeSize
;

773 
gQuŸa
.
sIoMëhodsV1
.
xLock
 = 
quŸaLock
;

774 
gQuŸa
.
sIoMëhodsV1
.
xU∆ock
 = 
quŸaU∆ock
;

775 
gQuŸa
.
sIoMëhodsV1
.
xCheckRe£rvedLock
 = 
quŸaCheckRe£rvedLock
;

776 
gQuŸa
.
sIoMëhodsV1
.
xFûeC⁄åﬁ
 = 
quŸaFûeC⁄åﬁ
;

777 
gQuŸa
.
sIoMëhodsV1
.
xSe˘‹Size
 = 
quŸaSe˘‹Size
;

778 
gQuŸa
.
sIoMëhodsV1
.
xDevi˚Ch¨a˘îi°ics
 = 
quŸaDevi˚Ch¨a˘îi°ics
;

779 
gQuŸa
.
sIoMëhodsV2
 = gQuŸa.
sIoMëhodsV1
;

780 
gQuŸa
.
sIoMëhodsV2
.
iVîsi⁄
 = 2;

781 
gQuŸa
.
sIoMëhodsV2
.
xShmM≠
 = 
quŸaShmM≠
;

782 
gQuŸa
.
sIoMëhodsV2
.
xShmLock
 = 
quŸaShmLock
;

783 
gQuŸa
.
sIoMëhodsV2
.
xShmB¨rõr
 = 
quŸaShmB¨rõr
;

784 
gQuŸa
.
sIoMëhodsV2
.
xShmUnm≠
 = 
quŸaShmUnm≠
;

785 
	`sqlôe3_vfs_ªgi°î
(&
gQuŸa
.
sThisVfs
, 
makeDeÁu…
);

786  
SQLITE_OK
;

787 
	}
}

798 
	$sqlôe3_quŸa_shutdown
(){

799 
quŸaGroup
 *
pGroup
;

800 if–
gQuŸa
.
isInôülized
==0 )  
SQLITE_MISUSE
;

801 
pGroup
=
gQuŸa
.pGroup;ÖGroup;ÖGroupıGroup->
pNext
){

802 if–
	`quŸaGroupO≥nFûeCou¡
(
pGroup
)>0 )  
SQLITE_MISUSE
;

804  
gQuŸa
.
pGroup
 ){

805 
pGroup
 = 
gQuŸa
.pGroup;

806 
gQuŸa
.
pGroup
 =ÖGroup->
pNext
;

807 
pGroup
->
iLimô
 = 0;

808 
	`as£π
–
	`quŸaGroupO≥nFûeCou¡
(
pGroup
)==0 );

809 
	`quŸaGroupDîef
(
pGroup
);

811 
gQuŸa
.
isInôülized
 = 0;

812 
	`sqlôe3_muãx_‰ì
(
gQuŸa
.
pMuãx
);

813 
	`sqlôe3_vfs_uƒegi°î
(&
gQuŸa
.
sThisVfs
);

814 
	`mem£t
(&
gQuŸa
, 0, (gQuota));

815  
SQLITE_OK
;

816 
	}
}

838 
	$sqlôe3_quŸa_£t
(

839 c⁄° *
zP©ã∫
,

840 
sqlôe3_öt64
 
iLimô
,

841 (*
xCÆlback
)(

842 c⁄° *
zFûíame
,

843 
sqlôe3_öt64
 *
piLimô
,

844 
sqlôe3_öt64
 
iSize
,

845 *
pArg


847 *
pArg
,

848 (*
xDe°roy
)(*)

850 
quŸaGroup
 *
pGroup
;

851 
	`quŸaE¡î
();

852 
pGroup
 = 
gQuŸa
.pGroup;

853  
pGroup
 && 
	`°rcmp
’Group->
zP©ã∫
, zPattern)!=0 ){

854 
pGroup
 =ÖGroup->
pNext
;

856 if–
pGroup
==0 ){

857 
nP©ã∫
 = ()(
	`°æí
(
zP©ã∫
) & 0x3fffffff);

858 if–
iLimô
<=0 ){

859 
	`quŸaLóve
();

860  
SQLITE_OK
;

862 
pGroup
 = (
quŸaGroup
 *)
	`sqlôe3_mÆloc
–(*pGroupË+ 
nP©ã∫
 + 1 );

863 if–
pGroup
==0 ){

864 
	`quŸaLóve
();

865  
SQLITE_NOMEM
;

867 
	`mem£t
(
pGroup
, 0, (*pGroup));

868 
pGroup
->
zP©ã∫
 = (*)&pGroup[1];

869 
	`mem˝y
((*)
pGroup
->
zP©ã∫
, zP©ã∫, 
nP©ã∫
+1);

870 if–
gQuŸa
.
pGroup
 ) gQuŸa.pGroup->
µPªv
 = &pGroup->
pNext
;

871 
pGroup
->
pNext
 = 
gQuŸa
.pGroup;

872 
pGroup
->
µPªv
 = &
gQuŸa
.pGroup;

873 
gQuŸa
.
pGroup
 =ÖGroup;

875 
pGroup
->
iLimô
 = iLimit;

876 
pGroup
->
xCÆlback
 = xCallback;

877 if–
pGroup
->
xDe°roy
 &&ÖGroup->
pArg
!=pArg ){

878 
pGroup
->
	`xDe°roy
’Group->
pArg
);

880 
pGroup
->
pArg
 =ÖArg;

881 
pGroup
->
xDe°roy
 = xDestroy;

882 
	`quŸaGroupDîef
(
pGroup
);

883 
	`quŸaLóve
();

884  
SQLITE_OK
;

885 
	}
}

891 
	$sqlôe3_quŸa_fûe
(c⁄° *
zFûíame
){

892 *
zFuŒ
 = 0;

893 
sqlôe3_fûe
 *
fd
;

894 
rc
;

895 
outFœgs
 = 0;

896 
sqlôe3_öt64
 
iSize
;

897 
nAŒoc
 = 
gQuŸa
.
sThisVfs
.
szOsFûe
 + gQuŸa.sThisVfs.
mxP©h«me
+2;

900 
fd
 = (
sqlôe3_fûe
 *)
	`sqlôe3_mÆloc
(
nAŒoc
);

901 if–
fd
==0 ){

902 
rc
 = 
SQLITE_NOMEM
;

904 
zFuŒ
 = &((*)
fd
)[
gQuŸa
.
sThisVfs
.
szOsFûe
];

905 
rc
 = 
gQuŸa
.
pOrigVfs
->
	`xFuŒP©h«me
(gQuŸa.pOrigVfs, 
zFûíame
,

906 
gQuŸa
.
sThisVfs
.
mxP©h«me
+1, 
zFuŒ
);

909 if–
rc
==
SQLITE_OK
 ){

910 
zFuŒ
[
	`°æí
(zFull)+1] = '\0';

911 
rc
 = 
	`quŸaO≥n
(&
gQuŸa
.
sThisVfs
, 
zFuŒ
, 
fd
,

912 
SQLITE_OPEN_READONLY
 | 
SQLITE_OPEN_MAIN_DB
, &
outFœgs
);

913 if–
rc
==
SQLITE_OK
 ){

914 
fd
->
pMëhods
->
	`xFûeSize
(fd, &
iSize
);

915 
fd
->
pMëhods
->
	`xClo£
(fd);

916 }if–
rc
==
SQLITE_CANTOPEN
 ){

917 
quŸaGroup
 *
pGroup
;

918 
quŸaFûe
 *
pFûe
;

919 
	`quŸaE¡î
();

920 
pGroup
 = 
	`quŸaGroupFöd
(
zFuŒ
);

921 if–
pGroup
 ){

922 
pFûe
 = 
	`quŸaFödFûe
(
pGroup
, 
zFuŒ
, 0);

923 if–
pFûe
 ) 
	`quŸaRemoveFûe
(pFile);

925 
	`quŸaLóve
();

929 
	`sqlôe3_‰ì
(
fd
);

930  
rc
;

931 
	}
}

936 
quŸa_FILE
 *
	$sqlôe3_quŸa_f›í
(c⁄° *
zFûíame
, c⁄° *
zMode
){

937 
quŸa_FILE
 *
p
 = 0;

938 *
zFuŒ
 = 0;

939 *
zFuŒTøn¶©ed
 = 0;

940 
rc
;

941 
quŸaGroup
 *
pGroup
;

942 
quŸaFûe
 *
pFûe
;

944 
zFuŒ
 = (*)
	`sqlôe3_mÆloc
(
gQuŸa
.
sThisVfs
.
mxP©h«me
 + 1);

945 if–
zFuŒ
==0 )  0;

946 
rc
 = 
gQuŸa
.
pOrigVfs
->
	`xFuŒP©h«me
(gQuŸa.pOrigVfs, 
zFûíame
,

947 
gQuŸa
.
sThisVfs
.
mxP©h«me
+1, 
zFuŒ
);

948 if–
rc
 ) 
quŸa_f›í_îr‹
;

949 
p
 = (
quŸa_FILE
*)
	`sqlôe3_mÆloc
((*p));

950 if–
p
==0 ) 
quŸa_f›í_îr‹
;

951 
	`mem£t
(
p
, 0, (*p));

952 
zFuŒTøn¶©ed
 = 
	`quŸa_utf8_to_mbcs
(
zFuŒ
);

953 if–
zFuŒTøn¶©ed
==0 ) 
quŸa_f›í_îr‹
;

954 
p
->
f
 = 
	`f›í
(
zFuŒTøn¶©ed
, 
zMode
);

955 if–
p
->
f
==0 ) 
quŸa_f›í_îr‹
;

956 
	`quŸaE¡î
();

957 
pGroup
 = 
	`quŸaGroupFöd
(
zFuŒ
);

958 if–
pGroup
 ){

959 
pFûe
 = 
	`quŸaFödFûe
(
pGroup
, 
zFuŒ
, 1);

960 if–
pFûe
==0 ){

961 
	`quŸaLóve
();

962 
quŸa_f›í_îr‹
;

964 
pFûe
->
nRef
++;

965 
p
->
pFûe
 =ÖFile;

967 
	`quŸaLóve
();

968 
	`sqlôe3_‰ì
(
zFuŒ
);

969 #i‡
SQLITE_OS_WIN


970 
p
->
zMbcsName
 = 
zFuŒTøn¶©ed
;

972  
p
;

974 
quŸa_f›í_îr‹
:

975 
	`quŸa_mbcs_‰ì
(
zFuŒTøn¶©ed
);

976 
	`sqlôe3_‰ì
(
zFuŒ
);

977 if–
p
 &&Ö->
f
 ) 
	`f˛o£
(p->f);

978 
	`sqlôe3_‰ì
(
p
);

980 
	}
}

985 
size_t
 
	$sqlôe3_quŸa_‰ód
(

986 *
pBuf
,

987 
size_t
 
size
,

988 
size_t
 
nmemb
,

989 
quŸa_FILE
 *
p


991  
	`‰ód
(
pBuf
, 
size
, 
nmemb
, 
p
->
f
);

992 
	}
}

998 
size_t
 
	$sqlôe3_quŸa_fwrôe
(

999 c⁄° *
pBuf
,

1000 
size_t
 
size
,

1001 
size_t
 
nmemb
,

1002 
quŸa_FILE
 *
p


1004 
sqlôe3_öt64
 
iOf°
;

1005 
sqlôe3_öt64
 
iEnd
;

1006 
sqlôe3_öt64
 
szNew
;

1007 
quŸaFûe
 *
pFûe
;

1008 
size_t
 
rc
;

1010 
iOf°
 = 
	`·ñl
(
p
->
f
);

1011 
iEnd
 = 
iOf°
 + 
size
*
nmemb
;

1012 
pFûe
 = 
p
->pFile;

1013 if–
pFûe
 &&ÖFûe->
iSize
<
iEnd
 ){

1014 
quŸaGroup
 *
pGroup
 = 
pFûe
->pGroup;

1015 
	`quŸaE¡î
();

1016 
szNew
 = 
pGroup
->
iSize
 - 
pFûe
->iSizê+ 
iEnd
;

1017 if–
szNew
>
pGroup
->
iLimô
 &&ÖGroup->iLimit>0 ){

1018 if–
pGroup
->
xCÆlback
 ){

1019 
pGroup
->
	`xCÆlback
(
pFûe
->
zFûíame
, &pGroup->
iLimô
, 
szNew
,

1020 
pGroup
->
pArg
);

1022 if–
szNew
>
pGroup
->
iLimô
 &&ÖGroup->iLimit>0 ){

1023 
iEnd
 = 
pGroup
->
iLimô
 -ÖGroup->
iSize
 + 
pFûe
->iSize;

1024 
nmemb
 = (
size_t
)((
iEnd
 - 
iOf°
)/
size
);

1025 
iEnd
 = 
iOf°
 + 
size
*
nmemb
;

1026 
szNew
 = 
pGroup
->
iSize
 - 
pFûe
->iSizê+ 
iEnd
;

1029 
pGroup
->
iSize
 = 
szNew
;

1030 
pFûe
->
iSize
 = 
iEnd
;

1031 
	`quŸaLóve
();

1033 
pFûe
 = 0;

1035 
rc
 = 
	`fwrôe
(
pBuf
, 
size
, 
nmemb
, 
p
->
f
);

1039 if–
rc
<
nmemb
 && 
pFûe
 ){

1040 
size_t
 
nWrôãn
 = 
rc
;

1041 
sqlôe3_öt64
 
iNewEnd
 = 
iOf°
 + 
size
*
nWrôãn
;

1042 if–
iNewEnd
<
iEnd
 ) iNewEnd = iEnd;

1043 
	`quŸaE¡î
();

1044 
pFûe
->
pGroup
->
iSize
 +
iNewEnd
 -ÖFile->iSize;

1045 
pFûe
->
iSize
 = 
iNewEnd
;

1046 
	`quŸaLóve
();

1048  
rc
;

1049 
	}
}

1054 
	$sqlôe3_quŸa_f˛o£
(
quŸa_FILE
 *
p
){

1055 
rc
;

1056 
quŸaFûe
 *
pFûe
;

1057 
rc
 = 
	`f˛o£
(
p
->
f
);

1058 
pFûe
 = 
p
->pFile;

1059 if–
pFûe
 ){

1060 
	`quŸaE¡î
();

1061 
pFûe
->
nRef
--;

1062 if–
pFûe
->
nRef
==0 ){

1063 
quŸaGroup
 *
pGroup
 = 
pFûe
->pGroup;

1064 if–
pFûe
->
dñëeOnClo£
 ){

1065 
gQuŸa
.
pOrigVfs
->
	`xDñëe
(gQuŸa.pOrigVfs, 
pFûe
->
zFûíame
, 0);

1066 
	`quŸaRemoveFûe
(
pFûe
);

1068 
	`quŸaGroupDîef
(
pGroup
);

1070 
	`quŸaLóve
();

1072 #i‡
SQLITE_OS_WIN


1073 
	`quŸa_mbcs_‰ì
(
p
->
zMbcsName
);

1075 
	`sqlôe3_‰ì
(
p
);

1076  
rc
;

1077 
	}
}

1082 
	$sqlôe3_quŸa_fÊush
(
quŸa_FILE
 *
p
, 
doFsync
){

1083 
rc
;

1084 
rc
 = 
	`fÊush
(
p
->
f
);

1085 if–
rc
==0 && 
doFsync
 ){

1086 #i‡
SQLITE_OS_UNIX


1087 
rc
 = 
	`fsync
(
	`fûío
(
p
->
f
));

1089 #i‡
SQLITE_OS_WIN


1090 
rc
 = 
	`_commô
(
	`_fûío
(
p
->
f
));

1093  
rc
!=0;

1094 
	}
}

1099 
	$sqlôe3_quŸa_f£ek
(
quŸa_FILE
 *
p
, 
off£t
, 
whí˚
){

1100  
	`f£ek
(
p
->
f
, 
off£t
, 
whí˚
);

1101 
	}
}

1106 
	$sqlôe3_quŸa_ªwöd
(
quŸa_FILE
 *
p
){

1107 
	`ªwöd
(
p
->
f
);

1108 
	}
}

1113 
	$sqlôe3_quŸa_·ñl
(
quŸa_FILE
 *
p
){

1114  
	`·ñl
(
p
->
f
);

1115 
	}
}

1120 
	$sqlôe3_quŸa_„º‹
(
quŸa_FILE
 *
p
){

1121  
	`„º‹
(
p
->
f
);

1122 
	}
}

1127 
	$sqlôe3_quŸa_·runˇã
(
quŸa_FILE
 *
p
, 
sqlôe3_öt64
 
szNew
){

1128 
quŸaFûe
 *
pFûe
 = 
p
->pFile;

1129 
rc
;

1130 if–(
pFûe
 = 
p
->pFûe)!=0 &&ÖFûe->
iSize
<
szNew
 ){

1131 
quŸaGroup
 *
pGroup
;

1132 if–
pFûe
->
iSize
<
szNew
 ){

1137 
pGroup
 = 
pFûe
->pGroup;

1138 
	`quŸaE¡î
();

1139 
pGroup
->
iSize
 +
szNew
 - 
pFûe
->iSize;

1140 
	`quŸaLóve
();

1142 #i‡
SQLITE_OS_UNIX


1143 
rc
 = 
	`·runˇã
(
	`fûío
(
p
->
f
), 
szNew
);

1145 #i‡
SQLITE_OS_WIN


1146 #i‡
	`deföed
(
__MINGW32__
Ë&& deföed(
SQLITE_TEST
)

1149 
rc
 = 
	`_chsize
(
	`_fûío
(
p
->
f
), ()
szNew
);

1151 
rc
 = 
	`_chsize_s
(
	`_fûío
(
p
->
f
), 
szNew
);

1154 if–
pFûe
 && 
rc
==0 ){

1155 
quŸaGroup
 *
pGroup
 = 
pFûe
->pGroup;

1156 
	`quŸaE¡î
();

1157 
pGroup
->
iSize
 +
szNew
 - 
pFûe
->iSize;

1158 
pFûe
->
iSize
 = 
szNew
;

1159 
	`quŸaLóve
();

1161  
rc
;

1162 
	}
}

1169 
	$sqlôe3_quŸa_fûe_mtime
(
quŸa_FILE
 *
p
, 
time_t
 *
pTime
){

1170 
rc
;

1171 #i‡
SQLITE_OS_UNIX


1172 
°©
 
buf
;

1173 
rc
 = 
	`f°©
(
	`fûío
(
p
->
f
), &
buf
);

1175 #i‡
SQLITE_OS_WIN


1176 
_°©i64
 
buf
;

1177 
rc
 = 
	`_°©i64
(
p
->
zMbcsName
, &
buf
);

1179 if–
rc
==0 ) *
pTime
 = 
buf
.
°_mtime
;

1180  
rc
;

1181 
	}
}

1187 
sqlôe3_öt64
 
	$sqlôe3_quŸa_fûe_åuesize
(
quŸa_FILE
 *
p
){

1188 
rc
;

1189 #i‡
SQLITE_OS_UNIX


1190 
°©
 
buf
;

1191 
rc
 = 
	`f°©
(
	`fûío
(
p
->
f
), &
buf
);

1193 #i‡
SQLITE_OS_WIN


1194 
_°©i64
 
buf
;

1195 
rc
 = 
	`_°©i64
(
p
->
zMbcsName
, &
buf
);

1197  
rc
==0 ? 
buf
.
°_size
 : -1;

1198 
	}
}

1203 
sqlôe3_öt64
 
	$sqlôe3_quŸa_fûe_size
(
quŸa_FILE
 *
p
){

1204  
p
->
pFûe
 ?Ö->pFûe->
iSize
 : -1;

1205 
	}
}

1211 
	$sqlôe3_quŸa_fûe_avaûabÀ
(
quŸa_FILE
 *
p
){

1212 
FILE
* 
f
 = 
p
->f;

1213 
pos1
, 
pos2
;

1214 
rc
;

1215 
pos1
 = 
	`·ñl
(
f
);

1216 i‡–
pos1
 < 0 )  -1;

1217 
rc
 = 
	`f£ek
(
f
, 0, 
SEEK_END
);

1218 i‡–
rc
 != 0 )  -1;

1219 
pos2
 = 
	`·ñl
(
f
);

1220 i‡–
pos2
 < 0 )  -1;

1221 
rc
 = 
	`f£ek
(
f
, 
pos1
, 
SEEK_SET
);

1222 i‡–
rc
 != 0 )  -1;

1223  
pos2
 - 
pos1
;

1224 
	}
}

1229 
	$sqlôe3_quŸa_ªmove
(c⁄° *
zFûíame
){

1230 *
zFuŒ
;

1231 
size_t
 
nFuŒ
;

1232 
rc
;

1233 
quŸaGroup
 *
pGroup
;

1234 
quŸaFûe
 *
pFûe
;

1235 
quŸaFûe
 *
pNextFûe
;

1236 
diff
;

1237 
c
;

1239 
zFuŒ
 = (*)
	`sqlôe3_mÆloc
(
gQuŸa
.
sThisVfs
.
mxP©h«me
 + 1);

1240 if–
zFuŒ
==0 )  
SQLITE_NOMEM
;

1241 
rc
 = 
gQuŸa
.
pOrigVfs
->
	`xFuŒP©h«me
(gQuŸa.pOrigVfs, 
zFûíame
,

1242 
gQuŸa
.
sThisVfs
.
mxP©h«me
+1, 
zFuŒ
);

1243 if–
rc
 ){

1244 
	`sqlôe3_‰ì
(
zFuŒ
);

1245  
rc
;

1251 
nFuŒ
 = 
	`°æí
(
zFuŒ
);

1252 if–
nFuŒ
>0 && (
zFuŒ
[nFull-1]=='/' || zFull[nFull-1]=='\\') ){

1253 
nFuŒ
--;

1254 
zFuŒ
[
nFuŒ
] = 0;

1257 
	`quŸaE¡î
();

1258 
pGroup
 = 
	`quŸaGroupFöd
(
zFuŒ
);

1259 if–
pGroup
 ){

1260 
pFûe
=
pGroup
->
pFûes
;ÖFûê&& 
rc
==
SQLITE_OK
;ÖFûe=
pNextFûe
){

1261 
pNextFûe
 = 
pFûe
->
pNext
;

1262 
diff
 = 
	`°∫cmp
(
zFuŒ
, 
pFûe
->
zFûíame
, 
nFuŒ
);

1263 if–
diff
==0 && ((
c
 = 
pFûe
->
zFûíame
[
nFuŒ
])==0 || c=='/' || c=='\\') ){

1264 if–
pFûe
->
nRef
 ){

1265 
pFûe
->
dñëeOnClo£
 = 1;

1267 
rc
 = 
gQuŸa
.
pOrigVfs
->
	`xDñëe
(gQuŸa.pOrigVfs, 
pFûe
->
zFûíame
, 0);

1268 
	`quŸaRemoveFûe
(
pFûe
);

1269 
	`quŸaGroupDîef
(
pGroup
);

1274 
	`quŸaLóve
();

1275 
	`sqlôe3_‰ì
(
zFuŒ
);

1276  
rc
;

1277 
	}
}

1280 #ifde‡
SQLITE_TEST


1281 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

1282 
	~"sqlôe_t˛.h
"

1284 
	~"t˛.h
"

1285 #i‚de‡
SQLITE_TCLAPI


1286 
	#SQLITE_TCLAPI


	)

1293 
T˛QuŸaCÆlback
 
	tT˛QuŸaCÆlback
;

1294 
	sT˛QuŸaCÆlback
 {

1295 
T˛_I¡îp
 *
	möãΩ
;

1296 
T˛_Obj
 *
	mpS¸ùt
;

1299 c⁄° *
sqlôe3EºName
();

1305 
	$t˛QuŸaCÆlback
(

1306 c⁄° *
zFûíame
,

1307 
sqlôe3_öt64
 *
piLimô
,

1308 
sqlôe3_öt64
 
iSize
,

1309 *
pArg


1311 
T˛QuŸaCÆlback
 *
p
;

1312 
T˛_Obj
 *
pEvÆ
;

1313 
T˛_Obj
 *
pV¨«me
;

1314 
∫d
;

1315 
rc
;

1317 
p
 = (
T˛QuŸaCÆlback
 *)
pArg
;

1318 if–
p
==0 ) ;

1320 
pV¨«me
 = 
	`T˛_NewSåögObj
("::piLimit_", -1);

1321 
	`T˛_In¸RefCou¡
(
pV¨«me
);

1322 
	`sqlôe3_øndom√ss
((
∫d
), (*)&rnd);

1323 
	`T˛_AµídObjToObj
(
pV¨«me
, 
	`T˛_NewI¡Obj
(()(
∫d
&0x7FFFFFFF)));

1324 
	`T˛_ObjSëV¨2
(
p
->
öãΩ
, 
pV¨«me
, 0, 
	`T˛_NewWideI¡Obj
(*
piLimô
), 0);

1326 
pEvÆ
 = 
	`T˛_Du∂iˇãObj
(
p
->
pS¸ùt
);

1327 
	`T˛_In¸RefCou¡
(
pEvÆ
);

1328 
	`T˛_Li°ObjAµídEÀmít
(0, 
pEvÆ
, 
	`T˛_NewSåögObj
(
zFûíame
, -1));

1329 
	`T˛_Li°ObjAµídEÀmít
(0, 
pEvÆ
, 
pV¨«me
);

1330 
	`T˛_Li°ObjAµídEÀmít
(0, 
pEvÆ
, 
	`T˛_NewWideI¡Obj
(
iSize
));

1331 
rc
 = 
	`T˛_EvÆObjEx
(
p
->
öãΩ
, 
pEvÆ
, 
TCL_EVAL_GLOBAL
);

1333 if–
rc
==
TCL_OK
 ){

1334 
T˛_WideI¡
 
x
;

1335 
T˛_Obj
 *
pLimô
 = 
	`T˛_ObjGëV¨2
(
p
->
öãΩ
, 
pV¨«me
, 0, 0);

1336 
rc
 = 
	`T˛_GëWideI¡FromObj
(
p
->
öãΩ
, 
pLimô
, &
x
);

1337 *
piLimô
 = 
x
;

1338 
	`T˛_Un£tV¨
(
p
->
öãΩ
, 
	`T˛_GëSåög
(
pV¨«me
), 0);

1341 
	`T˛_De¸RefCou¡
(
pEvÆ
);

1342 
	`T˛_De¸RefCou¡
(
pV¨«me
);

1343 if–
rc
!=
TCL_OK
 ) 
	`T˛_BackgroundEº‹
(
p
->
öãΩ
);

1344 
	}
}

1349 
	$t˛CÆlbackDe°ru˘‹
(*
pObj
){

1350 
T˛QuŸaCÆlback
 *
p
 = (T˛QuŸaCÆlback*)
pObj
;

1351 if–
p
 ){

1352 
	`T˛_De¸RefCou¡
(
p
->
pS¸ùt
);

1353 
	`sqlôe3_‰ì
((*)
p
);

1355 
	}
}

1360 
SQLITE_TCLAPI
 
	$ã°_quŸa_öôülize
(

1361 * 
˛õ¡D©a
,

1362 
T˛_I¡îp
 *
öãΩ
,

1363 
objc
,

1364 
T˛_Obj
 *
CONST
 
objv
[]

1366 c⁄° *
zName
;

1367 
makeDeÁu…
;

1368 
rc
;

1371 if–
objc
!=3 ){

1372 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "NAME MAKEDEFAULT");

1373  
TCL_ERROR
;

1375 
zName
 = 
	`T˛_GëSåög
(
objv
[1]);

1376 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[2], &
makeDeÁu…
ËË 
TCL_ERROR
;

1377 if–
zName
[0]=='\0' ) zName = 0;

1380 
rc
 = 
	`sqlôe3_quŸa_öôülize
(
zName
, 
makeDeÁu…
);

1381 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_STATIC
);

1383  
TCL_OK
;

1384 
	}
}

1389 
SQLITE_TCLAPI
 
	$ã°_quŸa_shutdown
(

1390 * 
˛õ¡D©a
,

1391 
T˛_I¡îp
 *
öãΩ
,

1392 
objc
,

1393 
T˛_Obj
 *
CONST
 
objv
[]

1395 
rc
;

1397 if–
objc
!=1 ){

1398 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

1399  
TCL_ERROR
;

1403 
rc
 = 
	`sqlôe3_quŸa_shutdown
();

1404 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_STATIC
);

1406  
TCL_OK
;

1407 
	}
}

1412 
SQLITE_TCLAPI
 
	$ã°_quŸa_£t
(

1413 * 
˛õ¡D©a
,

1414 
T˛_I¡îp
 *
öãΩ
,

1415 
objc
,

1416 
T˛_Obj
 *
CONST
 
objv
[]

1418 c⁄° *
zP©ã∫
;

1419 
T˛_WideI¡
 
iLimô
;

1420 
T˛_Obj
 *
pS¸ùt
;

1421 
rc
;

1422 
T˛QuŸaCÆlback
 *
p
;

1423 
nS¸ùt
;

1424 (*
xDe°roy
)(*);

1425 (*
xCÆlback
)(c⁄° *, 
sqlôe3_öt64
 *, sqlite3_int64, *);

1428 if–
objc
!=4 ){

1429 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "PATTERN LIMIT SCRIPT");

1430  
TCL_ERROR
;

1432 
zP©ã∫
 = 
	`T˛_GëSåög
(
objv
[1]);

1433 if–
	`T˛_GëWideI¡FromObj
(
öãΩ
, 
objv
[2], &
iLimô
ËË 
TCL_ERROR
;

1434 
pS¸ùt
 = 
objv
[3];

1435 
	`T˛_GëSåögFromObj
(
pS¸ùt
, &
nS¸ùt
);

1437 if–
nS¸ùt
>0 ){

1439 
p
 = (
T˛QuŸaCÆlback
 *)
	`sqlôe3_mÆloc
((TclQuotaCallback));

1440 if–!
p
 ){

1441 
	`T˛_SëResu…
(
öãΩ
, (*)"SQLITE_NOMEM", 
TCL_STATIC
);

1442  
TCL_OK
;

1444 
	`mem£t
(
p
, 0, (
T˛QuŸaCÆlback
));

1445 
p
->
öãΩ
 = interp;

1446 
	`T˛_In¸RefCou¡
(
pS¸ùt
);

1447 
p
->
pS¸ùt
 =ÖScript;

1448 
xDe°roy
 = 
t˛CÆlbackDe°ru˘‹
;

1449 
xCÆlback
 = 
t˛QuŸaCÆlback
;

1451 
p
 = 0;

1452 
xDe°roy
 = 0;

1453 
xCÆlback
 = 0;

1457 
rc
 = 
	`sqlôe3_quŸa_£t
(
zP©ã∫
, 
iLimô
, 
xCÆlback
, (*)
p
, 
xDe°roy
);

1459 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_STATIC
);

1460  
TCL_OK
;

1461 
	}
}

1466 
SQLITE_TCLAPI
 
	$ã°_quŸa_fûe
(

1467 * 
˛õ¡D©a
,

1468 
T˛_I¡îp
 *
öãΩ
,

1469 
objc
,

1470 
T˛_Obj
 *
CONST
 
objv
[]

1472 c⁄° *
zFûíame
;

1473 
rc
;

1476 if–
objc
!=2 ){

1477 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "FILENAME");

1478  
TCL_ERROR
;

1480 
zFûíame
 = 
	`T˛_GëSåög
(
objv
[1]);

1483 
rc
 = 
	`sqlôe3_quŸa_fûe
(
zFûíame
);

1485 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_STATIC
);

1486  
TCL_OK
;

1487 
	}
}

1492 
SQLITE_TCLAPI
 
	$ã°_quŸa_dump
(

1493 * 
˛õ¡D©a
,

1494 
T˛_I¡îp
 *
öãΩ
,

1495 
objc
,

1496 
T˛_Obj
 *
CONST
 
objv
[]

1498 
T˛_Obj
 *
pResu…
;

1499 
T˛_Obj
 *
pGroupTîm
;

1500 
T˛_Obj
 *
pFûeTîm
;

1501 
quŸaGroup
 *
pGroup
;

1502 
quŸaFûe
 *
pFûe
;

1504 
pResu…
 = 
	`T˛_NewObj
();

1505 
	`quŸaE¡î
();

1506 
pGroup
=
gQuŸa
.pGroup;ÖGroup;ÖGroupıGroup->
pNext
){

1507 
pGroupTîm
 = 
	`T˛_NewObj
();

1508 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pGroupTîm
,

1509 
	`T˛_NewSåögObj
(
pGroup
->
zP©ã∫
, -1));

1510 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pGroupTîm
,

1511 
	`T˛_NewWideI¡Obj
(
pGroup
->
iLimô
));

1512 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pGroupTîm
,

1513 
	`T˛_NewWideI¡Obj
(
pGroup
->
iSize
));

1514 
pFûe
=
pGroup
->
pFûes
;ÖFûe;ÖFûeıFûe->
pNext
){

1515 
i
;

1516 
zTemp
[1000];

1517 
pFûeTîm
 = 
	`T˛_NewObj
();

1518 
	`sqlôe3_¢¥ötf
((
zTemp
), zTemp, "%s", 
pFûe
->
zFûíame
);

1519 
i
=0; 
zTemp
[i]; i++){ if( zTemp[i]=='\\' ) zTemp[i] = '/'; }

1520 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pFûeTîm
,

1521 
	`T˛_NewSåögObj
(
zTemp
, -1));

1522 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pFûeTîm
,

1523 
	`T˛_NewWideI¡Obj
(
pFûe
->
iSize
));

1524 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pFûeTîm
,

1525 
	`T˛_NewWideI¡Obj
(
pFûe
->
nRef
));

1526 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pFûeTîm
,

1527 
	`T˛_NewWideI¡Obj
(
pFûe
->
dñëeOnClo£
));

1528 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pGroupTîm
, 
pFûeTîm
);

1530 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pResu…
, 
pGroupTîm
);

1532 
	`quŸaLóve
();

1533 
	`T˛_SëObjResu…
(
öãΩ
, 
pResu…
);

1534  
TCL_OK
;

1535 
	}
}

1540 
SQLITE_TCLAPI
 
	$ã°_quŸa_f›í
(

1541 * 
˛õ¡D©a
,

1542 
T˛_I¡îp
 *
öãΩ
,

1543 
objc
,

1544 
T˛_Obj
 *
CONST
 
objv
[]

1546 c⁄° *
zFûíame
;

1547 c⁄° *
zMode
;

1548 
quŸa_FILE
 *
p
;

1549 
zRëu∫
[50];

1552 if–
objc
!=3 ){

1553 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "FILENAME MODE");

1554  
TCL_ERROR
;

1556 
zFûíame
 = 
	`T˛_GëSåög
(
objv
[1]);

1557 
zMode
 = 
	`T˛_GëSåög
(
objv
[2]);

1558 
p
 = 
	`sqlôe3_quŸa_f›í
(
zFûíame
, 
zMode
);

1559 
	`sqlôe3_¢¥ötf
((
zRëu∫
), zRëu∫, "%p", 
p
);

1560 
	`T˛_SëResu…
(
öãΩ
, 
zRëu∫
, 
TCL_VOLATILE
);

1561  
TCL_OK
;

1562 
	}
}

1565 *
sqlôe3Te°TextToPå
(const *);

1570 
SQLITE_TCLAPI
 
	$ã°_quŸa_‰ód
(

1571 * 
˛õ¡D©a
,

1572 
T˛_I¡îp
 *
öãΩ
,

1573 
objc
,

1574 
T˛_Obj
 *
CONST
 
objv
[]

1576 
quŸa_FILE
 *
p
;

1577 *
zBuf
;

1578 
sz
;

1579 
nEÀm
;

1580 
size_t
 
gŸ
;

1582 if–
objc
!=4 ){

1583 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HANDLE SIZE NELEM");

1584  
TCL_ERROR
;

1586 
p
 = 
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[1]));

1587 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
sz
ËË 
TCL_ERROR
;

1588 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
nEÀm
ËË 
TCL_ERROR
;

1589 
zBuf
 = (*)
	`sqlôe3_mÆloc
–
sz
*
nEÀm
 + 1 );

1590 if–
zBuf
==0 ){

1591 
	`T˛_SëResu…
(
öãΩ
, "ouào‡mem‹y", 
TCL_STATIC
);

1592  
TCL_ERROR
;

1594 
gŸ
 = 
	`sqlôe3_quŸa_‰ód
(
zBuf
, 
sz
, 
nEÀm
, 
p
);

1595 
zBuf
[
gŸ
*
sz
] = 0;

1596 
	`T˛_SëResu…
(
öãΩ
, 
zBuf
, 
TCL_VOLATILE
);

1597 
	`sqlôe3_‰ì
(
zBuf
);

1598  
TCL_OK
;

1599 
	}
}

1604 
SQLITE_TCLAPI
 
	$ã°_quŸa_fwrôe
(

1605 * 
˛õ¡D©a
,

1606 
T˛_I¡îp
 *
öãΩ
,

1607 
objc
,

1608 
T˛_Obj
 *
CONST
 
objv
[]

1610 
quŸa_FILE
 *
p
;

1611 *
zBuf
;

1612 
sz
;

1613 
nEÀm
;

1614 
size_t
 
gŸ
;

1616 if–
objc
!=5 ){

1617 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HANDLE SIZE NELEM CONTENT");

1618  
TCL_ERROR
;

1620 
p
 = 
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[1]));

1621 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
sz
ËË 
TCL_ERROR
;

1622 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
nEÀm
ËË 
TCL_ERROR
;

1623 
zBuf
 = 
	`T˛_GëSåög
(
objv
[4]);

1624 
gŸ
 = 
	`sqlôe3_quŸa_fwrôe
(
zBuf
, 
sz
, 
nEÀm
, 
p
);

1625 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
(
gŸ
));

1626  
TCL_OK
;

1627 
	}
}

1632 
SQLITE_TCLAPI
 
	$ã°_quŸa_f˛o£
(

1633 * 
˛õ¡D©a
,

1634 
T˛_I¡îp
 *
öãΩ
,

1635 
objc
,

1636 
T˛_Obj
 *
CONST
 
objv
[]

1638 
quŸa_FILE
 *
p
;

1639 
rc
;

1641 if–
objc
!=2 ){

1642 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HANDLE");

1643  
TCL_ERROR
;

1645 
p
 = 
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[1]));

1646 
rc
 = 
	`sqlôe3_quŸa_f˛o£
(
p
);

1647 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

1648  
TCL_OK
;

1649 
	}
}

1654 
SQLITE_TCLAPI
 
	$ã°_quŸa_fÊush
(

1655 * 
˛õ¡D©a
,

1656 
T˛_I¡îp
 *
öãΩ
,

1657 
objc
,

1658 
T˛_Obj
 *
CONST
 
objv
[]

1660 
quŸa_FILE
 *
p
;

1661 
rc
;

1662 
doSync
 = 0;

1664 if–
objc
!=2 && objc!=3 ){

1665 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HANDLE ?HARDSYNC?");

1666  
TCL_ERROR
;

1668 
p
 = 
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[1]));

1669 if–
objc
==3 ){

1670 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[2], &
doSync
ËË 
TCL_ERROR
;

1672 
rc
 = 
	`sqlôe3_quŸa_fÊush
(
p
, 
doSync
);

1673 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

1674  
TCL_OK
;

1675 
	}
}

1680 
SQLITE_TCLAPI
 
	$ã°_quŸa_f£ek
(

1681 * 
˛õ¡D©a
,

1682 
T˛_I¡îp
 *
öãΩ
,

1683 
objc
,

1684 
T˛_Obj
 *
CONST
 
objv
[]

1686 
quŸa_FILE
 *
p
;

1687 
of°
;

1688 c⁄° *
zWhí˚
;

1689 
whí˚
;

1690 
rc
;

1692 if–
objc
!=4 ){

1693 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HANDLE OFFSET WHENCE");

1694  
TCL_ERROR
;

1696 
p
 = 
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[1]));

1697 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
of°
ËË 
TCL_ERROR
;

1698 
zWhí˚
 = 
	`T˛_GëSåög
(
objv
[3]);

1699 if–
	`°rcmp
(
zWhí˚
, "SEEK_SET")==0 ){

1700 
whí˚
 = 
SEEK_SET
;

1701 }if–
	`°rcmp
(
zWhí˚
, "SEEK_CUR")==0 ){

1702 
whí˚
 = 
SEEK_CUR
;

1703 }if–
	`°rcmp
(
zWhí˚
, "SEEK_END")==0 ){

1704 
whí˚
 = 
SEEK_END
;

1706 
	`T˛_AµídResu…
(
öãΩ
,

1708  
TCL_ERROR
;

1710 
rc
 = 
	`sqlôe3_quŸa_f£ek
(
p
, 
of°
, 
whí˚
);

1711 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

1712  
TCL_OK
;

1713 
	}
}

1718 
SQLITE_TCLAPI
 
	$ã°_quŸa_ªwöd
(

1719 * 
˛õ¡D©a
,

1720 
T˛_I¡îp
 *
öãΩ
,

1721 
objc
,

1722 
T˛_Obj
 *
CONST
 
objv
[]

1724 
quŸa_FILE
 *
p
;

1725 if–
objc
!=2 ){

1726 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HANDLE");

1727  
TCL_ERROR
;

1729 
p
 = 
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[1]));

1730 
	`sqlôe3_quŸa_ªwöd
(
p
);

1731  
TCL_OK
;

1732 
	}
}

1737 
SQLITE_TCLAPI
 
	$ã°_quŸa_·ñl
(

1738 * 
˛õ¡D©a
,

1739 
T˛_I¡îp
 *
öãΩ
,

1740 
objc
,

1741 
T˛_Obj
 *
CONST
 
objv
[]

1743 
quŸa_FILE
 *
p
;

1744 
sqlôe3_öt64
 
x
;

1745 if–
objc
!=2 ){

1746 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HANDLE");

1747  
TCL_ERROR
;

1749 
p
 = 
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[1]));

1750 
x
 = 
	`sqlôe3_quŸa_·ñl
(
p
);

1751 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
(
x
));

1752  
TCL_OK
;

1753 
	}
}

1758 
SQLITE_TCLAPI
 
	$ã°_quŸa_·runˇã
(

1759 * 
˛õ¡D©a
,

1760 
T˛_I¡îp
 *
öãΩ
,

1761 
objc
,

1762 
T˛_Obj
 *
CONST
 
objv
[]

1764 
quŸa_FILE
 *
p
;

1765 
sqlôe3_öt64
 
x
;

1766 
T˛_WideI¡
 
w
;

1767 
rc
;

1768 if–
objc
!=3 ){

1769 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HANDLE SIZE");

1770  
TCL_ERROR
;

1772 
p
 = 
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[1]));

1773 if–
	`T˛_GëWideI¡FromObj
(
öãΩ
, 
objv
[2], &
w
ËË 
TCL_ERROR
;

1774 
x
 = (
sqlôe3_öt64
)
w
;

1775 
rc
 = 
	`sqlôe3_quŸa_·runˇã
(
p
, 
x
);

1776 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

1777  
TCL_OK
;

1778 
	}
}

1783 
SQLITE_TCLAPI
 
	$ã°_quŸa_fûe_size
(

1784 * 
˛õ¡D©a
,

1785 
T˛_I¡îp
 *
öãΩ
,

1786 
objc
,

1787 
T˛_Obj
 *
CONST
 
objv
[]

1789 
quŸa_FILE
 *
p
;

1790 
sqlôe3_öt64
 
x
;

1791 if–
objc
!=2 ){

1792 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HANDLE");

1793  
TCL_ERROR
;

1795 
p
 = 
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[1]));

1796 
x
 = 
	`sqlôe3_quŸa_fûe_size
(
p
);

1797 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
(
x
));

1798  
TCL_OK
;

1799 
	}
}

1804 
SQLITE_TCLAPI
 
	$ã°_quŸa_fûe_åuesize
(

1805 * 
˛õ¡D©a
,

1806 
T˛_I¡îp
 *
öãΩ
,

1807 
objc
,

1808 
T˛_Obj
 *
CONST
 
objv
[]

1810 
quŸa_FILE
 *
p
;

1811 
sqlôe3_öt64
 
x
;

1812 if–
objc
!=2 ){

1813 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HANDLE");

1814  
TCL_ERROR
;

1816 
p
 = 
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[1]));

1817 
x
 = 
	`sqlôe3_quŸa_fûe_åuesize
(
p
);

1818 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
(
x
));

1819  
TCL_OK
;

1820 
	}
}

1825 
SQLITE_TCLAPI
 
	$ã°_quŸa_fûe_mtime
(

1826 * 
˛õ¡D©a
,

1827 
T˛_I¡îp
 *
öãΩ
,

1828 
objc
,

1829 
T˛_Obj
 *
CONST
 
objv
[]

1831 
quŸa_FILE
 *
p
;

1832 
time_t
 
t
;

1833 if–
objc
!=2 ){

1834 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HANDLE");

1835  
TCL_ERROR
;

1837 
p
 = 
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[1]));

1838 
t
 = 0;

1839 
	`sqlôe3_quŸa_fûe_mtime
(
p
, &
t
);

1840 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
(
t
));

1841  
TCL_OK
;

1842 
	}
}

1848 
SQLITE_TCLAPI
 
	$ã°_quŸa_ªmove
(

1849 * 
˛õ¡D©a
,

1850 
T˛_I¡îp
 *
öãΩ
,

1851 
objc
,

1852 
T˛_Obj
 *
CONST
 
objv
[]

1854 c⁄° *
zFûíame
;

1855 
rc
;

1856 if–
objc
!=2 ){

1857 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "FILENAME");

1858  
TCL_ERROR
;

1860 
zFûíame
 = 
	`T˛_GëSåög
(
objv
[1]);

1861 
rc
 = 
	`sqlôe3_quŸa_ªmove
(
zFûíame
);

1862 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

1863  
TCL_OK
;

1864 
	}
}

1872 
SQLITE_TCLAPI
 
	$ã°_quŸa_glob
(

1873 * 
˛õ¡D©a
,

1874 
T˛_I¡îp
 *
öãΩ
,

1875 
objc
,

1876 
T˛_Obj
 *
CONST
 
objv
[]

1878 c⁄° *
zP©ã∫
;

1879 c⁄° *
zText
;

1880 
rc
;

1881 if–
objc
!=3 ){

1882 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "PATTERN TEXT");

1883  
TCL_ERROR
;

1885 
zP©ã∫
 = 
	`T˛_GëSåög
(
objv
[1]);

1886 
zText
 = 
	`T˛_GëSåög
(
objv
[2]);

1887 
rc
 = 
	`quŸaSåglob
(
zP©ã∫
, 
zText
);

1888 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

1889  
TCL_OK
;

1890 
	}
}

1898 
SQLITE_TCLAPI
 
	$ã°_quŸa_fûe_avaûabÀ
(

1899 * 
˛õ¡D©a
,

1900 
T˛_I¡îp
 *
öãΩ
,

1901 
objc
,

1902 
T˛_Obj
 *
CONST
 
objv
[]

1904 
quŸa_FILE
 *
p
;

1905 
sqlôe3_öt64
 
x
;

1906 if–
objc
!=2 ){

1907 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HANDLE");

1908  
TCL_ERROR
;

1910 
p
 = 
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[1]));

1911 
x
 = 
	`sqlôe3_quŸa_fûe_avaûabÀ
(
p
);

1912 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
(
x
));

1913  
TCL_OK
;

1914 
	}
}

1921 
SQLITE_TCLAPI
 
	$ã°_quŸa_„º‹
(

1922 * 
˛õ¡D©a
,

1923 
T˛_I¡îp
 *
öãΩ
,

1924 
objc
,

1925 
T˛_Obj
 *
CONST
 
objv
[]

1927 
quŸa_FILE
 *
p
;

1928 
x
;

1929 if–
objc
!=2 ){

1930 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HANDLE");

1931  
TCL_ERROR
;

1933 
p
 = 
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[1]));

1934 
x
 = 
	`sqlôe3_quŸa_„º‹
(
p
);

1935 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
x
));

1936  
TCL_OK
;

1937 
	}
}

1944 
	$SqlôequŸa_Inô
(
T˛_I¡îp
 *
öãΩ
){

1946 *
zName
;

1947 
T˛_ObjCmdProc
 *
xProc
;

1948 } 
aCmd
[] = {

1949 { "sqlôe3_quŸa_öôülize", 
ã°_quŸa_öôülize
 },

1950 { "sqlôe3_quŸa_shutdown", 
ã°_quŸa_shutdown
 },

1951 { "sqlôe3_quŸa_£t", 
ã°_quŸa_£t
 },

1952 { "sqlôe3_quŸa_fûe", 
ã°_quŸa_fûe
 },

1953 { "sqlôe3_quŸa_dump", 
ã°_quŸa_dump
 },

1954 { "sqlôe3_quŸa_f›í", 
ã°_quŸa_f›í
 },

1955 { "sqlôe3_quŸa_‰ód", 
ã°_quŸa_‰ód
 },

1956 { "sqlôe3_quŸa_fwrôe", 
ã°_quŸa_fwrôe
 },

1957 { "sqlôe3_quŸa_f˛o£", 
ã°_quŸa_f˛o£
 },

1958 { "sqlôe3_quŸa_fÊush", 
ã°_quŸa_fÊush
 },

1959 { "sqlôe3_quŸa_f£ek", 
ã°_quŸa_f£ek
 },

1960 { "sqlôe3_quŸa_ªwöd", 
ã°_quŸa_ªwöd
 },

1961 { "sqlôe3_quŸa_·ñl", 
ã°_quŸa_·ñl
 },

1962 { "sqlôe3_quŸa_·runˇã", 
ã°_quŸa_·runˇã
 },

1963 { "sqlôe3_quŸa_fûe_size", 
ã°_quŸa_fûe_size
 },

1964 { "sqlôe3_quŸa_fûe_åuesize", 
ã°_quŸa_fûe_åuesize
 },

1965 { "sqlôe3_quŸa_fûe_mtime", 
ã°_quŸa_fûe_mtime
 },

1966 { "sqlôe3_quŸa_ªmove", 
ã°_quŸa_ªmove
 },

1967 { "sqlôe3_quŸa_glob", 
ã°_quŸa_glob
 },

1968 { "sqlôe3_quŸa_fûe_avaûabÀ",
ã°_quŸa_fûe_avaûabÀ
 },

1969 { "sqlôe3_quŸa_„º‹", 
ã°_quŸa_„º‹
 },

1971 
i
;

1973 
i
=0; i<(
aCmd
)/(aCmd[0]); i++){

1974 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
aCmd
[
i
].
zName
,áCmd[i].
xProc
, 0, 0);

1977  
TCL_OK
;

1978 
	}
}

	@test_quota.h

29 #i‚de‡
_QUOTA_H_


30 
	~"sqlôe3.h
"

31 
	~<°dio.h
>

32 
	~<sys/ty≥s.h
>

33 
	~<sys/°©.h
>

36 #ifde‡
__˝lu•lus


51 
sqlôe3_quŸa_öôülize
(c⁄° *
zOrigVfsName
, 
makeDeÁu…
);

62 
sqlôe3_quŸa_shutdown
();

116 
sqlôe3_quŸa_£t
(

117 c⁄° *
zP©ã∫
,

118 
sqlôe3_öt64
 
iLimô
,

119 (*
xCÆlback
)(

120 c⁄° *
zFûíame
,

121 
sqlôe3_öt64
 *
piLimô
,

122 
sqlôe3_öt64
 
iSize
,

123 *
pArg


125 *
pArg
,

126 (*
xDe°roy
)(*)

135 
sqlôe3_quŸa_fûe
(c⁄° *
zFûíame
);

145 
quŸa_FILE
 
	tquŸa_FILE
;

151 
quŸa_FILE
 *
sqlôe3_quŸa_f›í
(c⁄° *
zFûíame
, c⁄° *
zMode
);

158 
size_t
 
sqlôe3_quŸa_‰ód
(*, size_t, size_t, 
quŸa_FILE
*);

159 
size_t
 
sqlôe3_quŸa_fwrôe
(c⁄° *, size_t, size_t, 
quŸa_FILE
*);

171 
sqlôe3_quŸa_fÊush
(
quŸa_FILE
*, 
h¨dSync
);

177 
sqlôe3_quŸa_f˛o£
(
quŸa_FILE
*);

183 
sqlôe3_quŸa_f£ek
(
quŸa_FILE
*, , );

184 
sqlôe3_quŸa_ªwöd
(
quŸa_FILE
*);

185 
sqlôe3_quŸa_·ñl
(
quŸa_FILE
*);

192 
sqlôe3_quŸa_„º‹
(
quŸa_FILE
*);

202 
sqlôe3_quŸa_·runˇã
(
quŸa_FILE
*, 
sqlôe3_öt64
 
√wSize
);

208 
sqlôe3_quŸa_fûe_mtime
(
quŸa_FILE
*, 
time_t
 *
pTime
);

221 
sqlôe3_öt64
 
sqlôe3_quŸa_fûe_size
(
quŸa_FILE
*);

234 
sqlôe3_öt64
 
sqlôe3_quŸa_fûe_åuesize
(
quŸa_FILE
*);

242 
sqlôe3_quŸa_fûe_avaûabÀ
(
quŸa_FILE
*);

263 
sqlôe3_quŸa_ªmove
(c⁄° *
zFûíame
);

265 #ifde‡
__˝lu•lus


	@test_rtree.c

16 
	~"sqlôe3.h
"

17 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

18 
	~"sqlôe_t˛.h
"

20 
	~"t˛.h
"

24 
	~"sqlôeI¡.h
"

26 #ifde‡
SQLITE_ENABLE_RTREE


31 
Cú˛e
 
	tCú˛e
;

32 
	sCú˛e
 {

33 
	sBox
 {

34 
	mxmö
;

35 
	mxmax
;

36 
	mymö
;

37 
	mymax
;

38 } 
	maBox
[2];

39 
	m˚¡îx
;

40 
	m˚¡îy
;

41 
	mødius
;

42 
	mmxAªa
;

43 
	meSc‹eTy≥
;

49 
	$cú˛e_dñ
(*
p
){

50 
	`sqlôe3_‰ì
(
p
);

51 
	}
}

56 
	$cú˛e_geom
(

57 
sqlôe3_πªe_geomëry
 *
p
,

58 
nCo‹d
,

59 
sqlôe3_πªe_dbl
 *
aCo‹d
,

60 *
pRes


62 
i
;

63 
Cú˛e
 *
pCú˛e
;

64 
xmö
, 
xmax
;

65 
ymö
, 
ymax
;

67 
xmö
 = 
aCo‹d
[0];

68 
xmax
 = 
aCo‹d
[1];

69 
ymö
 = 
aCo‹d
[2];

70 
ymax
 = 
aCo‹d
[3];

71 
pCú˛e
 = (
Cú˛e
 *)
p
->
pU£r
;

72 if–
pCú˛e
==0 ){

78 if–
nCo‹d
!=4 )  
SQLITE_ERROR
;

83 if–
p
->
nP¨am
!=3 ||Ö->
aP¨am
[2]<0.0 )  
SQLITE_ERROR
;

87 
pCú˛e
 = (
Cú˛e
 *)(
p
->
pU£r
 = 
	`sqlôe3_mÆloc
((Circle)));

88 if–!
pCú˛e
 )  
SQLITE_NOMEM
;

89 
p
->
xDñU£r
 = 
cú˛e_dñ
;

95 
pCú˛e
->
˚¡îx
 = 
p
->
aP¨am
[0];

96 
pCú˛e
->
˚¡îy
 = 
p
->
aP¨am
[1];

97 
pCú˛e
->
ødius
 = 
p
->
aP¨am
[2];

110 
pCú˛e
->
aBox
[0].
xmö
 =ÖCú˛e->
˚¡îx
;

111 
pCú˛e
->
aBox
[0].
xmax
 =ÖCú˛e->
˚¡îx
;

112 
pCú˛e
->
aBox
[0].
ymö
 =ÖCú˛e->
˚¡îy
 +ÖCú˛e->
ødius
;

113 
pCú˛e
->
aBox
[0].
ymax
 =ÖCú˛e->
˚¡îy
 -ÖCú˛e->
ødius
;

114 
pCú˛e
->
aBox
[1].
xmö
 =ÖCú˛e->
˚¡îx
 +ÖCú˛e->
ødius
;

115 
pCú˛e
->
aBox
[1].
xmax
 =ÖCú˛e->
˚¡îx
 -ÖCú˛e->
ødius
;

116 
pCú˛e
->
aBox
[1].
ymö
 =ÖCú˛e->
˚¡îy
;

117 
pCú˛e
->
aBox
[1].
ymax
 =ÖCú˛e->
˚¡îy
;

118 
pCú˛e
->
mxAªa
 = (
xmax
 - 
xmö
)*(
ymax
 - 
ymö
) + 1.0;

125 
i
=0; i<4; i++){

126 
x
 = (
i
&0x01Ë? 
xmax
 : 
xmö
;

127 
y
 = (
i
&0x02Ë? 
ymax
 : 
ymö
;

128 
d2
;

130 
d2
 = (
x
-
pCú˛e
->
˚¡îx
)*(x-pCircle->centerx);

131 
d2
 +(
y
-
pCú˛e
->
˚¡îy
)*(y-pCircle->centery);

132 if–
d2
<(
pCú˛e
->
ødius
*pCircle->radius) ){

133 *
pRes
 = 1;

134  
SQLITE_OK
;

142 
i
=0; i<2; i++){

143 if–
xmö
<=
pCú˛e
->
aBox
[
i
].xmin

144 && 
xmax
>=
pCú˛e
->
aBox
[
i
].xmax

145 && 
ymö
<=
pCú˛e
->
aBox
[
i
].ymin

146 && 
ymax
>=
pCú˛e
->
aBox
[
i
].ymax

148 *
pRes
 = 1;

149  
SQLITE_OK
;

155 *
pRes
 = 0;

156  
SQLITE_OK
;

157 
	}
}

168 
	$cú˛e_quîy_func
(
sqlôe3_πªe_quîy_öfo
 *
p
){

169 
i
;

170 
Cú˛e
 *
pCú˛e
;

171 
xmö
, 
xmax
;

172 
ymö
, 
ymax
;

173 
nWôhö
 = 0;

175 
xmö
 = 
p
->
aCo‹d
[0];

176 
xmax
 = 
p
->
aCo‹d
[1];

177 
ymö
 = 
p
->
aCo‹d
[2];

178 
ymax
 = 
p
->
aCo‹d
[3];

179 
pCú˛e
 = (
Cú˛e
 *)
p
->
pU£r
;

180 if–
pCú˛e
==0 ){

186 if–
p
->
nCo‹d
!=4 )  
SQLITE_ERROR
;

190 if–
p
->
nP¨am
!=4 &&Ö->nP¨am!=1 )  
SQLITE_ERROR
;

194 
pCú˛e
 = (
Cú˛e
 *)(
p
->
pU£r
 = 
	`sqlôe3_mÆloc
((Circle)));

195 if–!
pCú˛e
 )  
SQLITE_NOMEM
;

196 
p
->
xDñU£r
 = 
cú˛e_dñ
;

202 if–
p
->
nP¨am
==4 ){

203 
pCú˛e
->
˚¡îx
 = 
p
->
aP¨am
[0];

204 
pCú˛e
->
˚¡îy
 = 
p
->
aP¨am
[1];

205 
pCú˛e
->
ødius
 = 
p
->
aP¨am
[2];

206 
pCú˛e
->
eSc‹eTy≥
 = ()
p
->
aP¨am
[3];

208 c⁄° *
z
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
p
->
≠SqlP¨am
[0]);

209 
pCú˛e
->
˚¡îx
 = 0.0;

210 
pCú˛e
->
˚¡îy
 = 0.0;

211 
pCú˛e
->
ødius
 = 0.0;

212 
pCú˛e
->
eSc‹eTy≥
 = 0;

213  
z
 && z[0] ){

214 if–
z
[0]=='r' && z[1]==':' ){

215 
pCú˛e
->
ødius
 = 
	`©of
(&
z
[2]);

216 }if–
z
[0]=='x' && z[1]==':' ){

217 
pCú˛e
->
˚¡îx
 = 
	`©of
(&
z
[2]);

218 }if–
z
[0]=='y' && z[1]==':' ){

219 
pCú˛e
->
˚¡îy
 = 
	`©of
(&
z
[2]);

220 }if–
z
[0]=='e' && z[1]==':' ){

221 
pCú˛e
->
eSc‹eTy≥
 = ()
	`©of
(&
z
[2]);

222 }if–
z
[0]==' ' ){

223 
z
++;

226  
z
[0]!=0 && z[0]!=' ' ) z++;

227  
z
[0]==' ' ) z++;

230 if–
pCú˛e
->
ødius
<0.0 ){

231 
	`sqlôe3_‰ì
(
pCú˛e
);

232  
SQLITE_NOMEM
;

246 
pCú˛e
->
aBox
[0].
xmö
 =ÖCú˛e->
˚¡îx
;

247 
pCú˛e
->
aBox
[0].
xmax
 =ÖCú˛e->
˚¡îx
;

248 
pCú˛e
->
aBox
[0].
ymö
 =ÖCú˛e->
˚¡îy
 +ÖCú˛e->
ødius
;

249 
pCú˛e
->
aBox
[0].
ymax
 =ÖCú˛e->
˚¡îy
 -ÖCú˛e->
ødius
;

250 
pCú˛e
->
aBox
[1].
xmö
 =ÖCú˛e->
˚¡îx
 +ÖCú˛e->
ødius
;

251 
pCú˛e
->
aBox
[1].
xmax
 =ÖCú˛e->
˚¡îx
 -ÖCú˛e->
ødius
;

252 
pCú˛e
->
aBox
[1].
ymö
 =ÖCú˛e->
˚¡îy
;

253 
pCú˛e
->
aBox
[1].
ymax
 =ÖCú˛e->
˚¡îy
;

254 
pCú˛e
->
mxAªa
 = 200.0*200.0;

261 
i
=0; i<4; i++){

262 
x
 = (
i
&0x01Ë? 
xmax
 : 
xmö
;

263 
y
 = (
i
&0x02Ë? 
ymax
 : 
ymö
;

264 
d2
;

266 
d2
 = (
x
-
pCú˛e
->
˚¡îx
)*(x-pCircle->centerx);

267 
d2
 +(
y
-
pCú˛e
->
˚¡îy
)*(y-pCircle->centery);

268 if–
d2
<(
pCú˛e
->
ødius
*pCú˛e->ødiusËË
nWôhö
++;

275 if–
nWôhö
==0 ){

276 
i
=0; i<2; i++){

277 if–
xmö
<=
pCú˛e
->
aBox
[
i
].xmin

278 && 
xmax
>=
pCú˛e
->
aBox
[
i
].xmax

279 && 
ymö
<=
pCú˛e
->
aBox
[
i
].ymin

280 && 
ymax
>=
pCú˛e
->
aBox
[
i
].ymax

282 
nWôhö
 = 1;

288 if–
pCú˛e
->
eSc‹eTy≥
==1 ){

290 
p
->
rSc‹e
 =Ö->
iLevñ
;

291 }if–
pCú˛e
->
eSc‹eTy≥
==2 ){

293 
p
->
rSc‹e
 = 100 -Ö->
iLevñ
;

294 }if–
pCú˛e
->
eSc‹eTy≥
==3 ){

297 if–
p
->
iLevñ
==1 ){

298 
p
->
rSc‹e
 = 1.0 - (
xmax
-
xmö
)*(
ymax
-
ymö
)/
pCú˛e
->
mxAªa
;

299 if–
p
->
rSc‹e
<0.01 )Ö->rScore = 0.01;

301 
p
->
rSc‹e
 = 0.0;

303 }if–
pCú˛e
->
eSc‹eTy≥
==4 ){

305 
p
->
rSc‹e
 =Ö->
iLevñ
;

306 if–
p
->
iRowid
&1 ) 
nWôhö
 = 0;

309 
p
->
rSc‹e
 = 100 -Ö->
iLevñ
;

310 if–
p
->
iRowid
&1 ) 
nWôhö
 = 0;

312 if–
nWôhö
==0 ){

313 
p
->
eWôhö
 = 
NOT_WITHIN
;

314 }if–
nWôhö
>=4 ){

315 
p
->
eWôhö
 = 
FULLY_WITHIN
;

317 
p
->
eWôhö
 = 
PARTLY_WITHIN
;

319  
SQLITE_OK
;

320 
	}
}

329 
	$bfs_quîy_func
(
sqlôe3_πªe_quîy_öfo
 *
p
){

330 
x0
,
x1
,
y0
,
y1
;

331 
bx0
,
bx1
,
by0
,
by1
;

333 if–
p
->
nP¨am
!=4 )  
SQLITE_ERROR
;

334 
x0
 = 
p
->
aCo‹d
[0];

335 
x1
 = 
p
->
aCo‹d
[1];

336 
y0
 = 
p
->
aCo‹d
[2];

337 
y1
 = 
p
->
aCo‹d
[3];

338 
bx0
 = 
p
->
aP¨am
[0];

339 
bx1
 = 
p
->
aP¨am
[1];

340 
by0
 = 
p
->
aP¨am
[2];

341 
by1
 = 
p
->
aP¨am
[3];

342 
p
->
rSc‹e
 = 100 -Ö->
iLevñ
;

343 if–
p
->
eP¨ítWôhö
==
FULLY_WITHIN
 ){

344 
p
->
eWôhö
 = 
FULLY_WITHIN
;

345 }if–
x0
>=
bx0
 && 
x1
<=
bx1
 && 
y0
>=
by0
 && 
y1
<=
by1
 ){

346 
p
->
eWôhö
 = 
FULLY_WITHIN
;

347 }if–
x1
>=
bx0
 && 
x0
<=
bx1
 && 
y1
>=
by0
 && 
y0
<=
by1
 ){

348 
p
->
eWôhö
 = 
PARTLY_WITHIN
;

350 
p
->
eWôhö
 = 
NOT_WITHIN
;

352  
SQLITE_OK
;

353 
	}
}

359 
	~<as£π.h
>

360 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

361 
	~"sqlôe_t˛.h
"

363 
	~"t˛.h
"

366 
Cube
 
	tCube
;

367 
	sCube
 {

368 
	mx
;

369 
	my
;

370 
	mz
;

371 
	mwidth
;

372 
	mheight
;

373 
	mdïth
;

376 
	$cube_c⁄ãxt_‰ì
(*
p
){

377 
	`sqlôe3_‰ì
(
p
);

378 
	}
}

385 
	ggHîe
 = 42;

396 
	$cube_geom
(

397 
sqlôe3_πªe_geomëry
 *
p
,

398 
nCo‹d
,

399 
sqlôe3_πªe_dbl
 *
aCo‹d
,

400 *
piRes


402 
Cube
 *
pCube
 = (Cubê*)
p
->
pU£r
;

404 
	`as£π
–
p
->
pC⁄ãxt
==(*)&
gHîe
 );

406 if–
pCube
==0 ){

407 if–
p
->
nP¨am
!=6 || 
nCo‹d
!=6

408 || 
p
->
aP¨am
[3]<=0.0 ||Ö->aParam[4]<=0.0 ||Ö->aParam[5]<=0.0

410  
SQLITE_ERROR
;

412 
pCube
 = (
Cube
 *)
	`sqlôe3_mÆloc
((Cube));

413 if–!
pCube
 ){

414  
SQLITE_NOMEM
;

416 
pCube
->
x
 = 
p
->
aP¨am
[0];

417 
pCube
->
y
 = 
p
->
aP¨am
[1];

418 
pCube
->
z
 = 
p
->
aP¨am
[2];

419 
pCube
->
width
 = 
p
->
aP¨am
[3];

420 
pCube
->
height
 = 
p
->
aP¨am
[4];

421 
pCube
->
dïth
 = 
p
->
aP¨am
[5];

423 
p
->
pU£r
 = (*)
pCube
;

424 
p
->
xDñU£r
 = 
cube_c⁄ãxt_‰ì
;

427 
	`as£π
–
nCo‹d
==6 );

428 *
piRes
 = 0;

429 if–
aCo‹d
[0]<=(
pCube
->
x
+pCube->
width
)

430 && 
aCo‹d
[1]>=
pCube
->
x


431 && 
aCo‹d
[2]<=(
pCube
->
y
+pCube->
height
)

432 && 
aCo‹d
[3]>=
pCube
->
y


433 && 
aCo‹d
[4]<=(
pCube
->
z
+pCube->
dïth
)

434 && 
aCo‹d
[5]>=
pCube
->
z


436 *
piRes
 = 1;

439  
SQLITE_OK
;

440 
	}
}

443 
SQLITE_TCLAPI
 
	$ªgi°î_cube_geom
(

444 * 
˛õ¡D©a
,

445 
T˛_I¡îp
 *
öãΩ
,

446 
objc
,

447 
T˛_Obj
 *
CONST
 
objv
[]

449 #i‚de‡
SQLITE_ENABLE_RTREE


450 
	`UNUSED_PARAMETER
(
˛õ¡D©a
);

451 
	`UNUSED_PARAMETER
(
öãΩ
);

452 
	`UNUSED_PARAMETER
(
objc
);

453 
	`UNUSED_PARAMETER
(
objv
);

455 
	`gëDbPoöãr
(
T˛_I¡îp
*, c⁄° *, 
sqlôe3
**);

456 c⁄° *
	`sqlôe3EºName
();

457 
sqlôe3
 *
db
;

458 
rc
;

460 if–
objc
!=2 ){

461 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB");

462  
TCL_ERROR
;

464 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

465 
rc
 = 
	`sqlôe3_πªe_geomëry_ˇŒback
(
db
, "cube", 
cube_geom
, (*)&
gHîe
);

466 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_STATIC
);

468  
TCL_OK
;

469 
	}
}

471 
SQLITE_TCLAPI
 
	$ªgi°î_cú˛e_geom
(

472 * 
˛õ¡D©a
,

473 
T˛_I¡îp
 *
öãΩ
,

474 
objc
,

475 
T˛_Obj
 *
CONST
 
objv
[]

477 #i‚de‡
SQLITE_ENABLE_RTREE


478 
	`UNUSED_PARAMETER
(
˛õ¡D©a
);

479 
	`UNUSED_PARAMETER
(
öãΩ
);

480 
	`UNUSED_PARAMETER
(
objc
);

481 
	`UNUSED_PARAMETER
(
objv
);

483 
	`gëDbPoöãr
(
T˛_I¡îp
*, c⁄° *, 
sqlôe3
**);

484 c⁄° *
	`sqlôe3EºName
();

485 
sqlôe3
 *
db
;

486 
rc
;

488 if–
objc
!=2 ){

489 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB");

490  
TCL_ERROR
;

492 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

493 
rc
 = 
	`sqlôe3_πªe_geomëry_ˇŒback
(
db
, "cú˛e", 
cú˛e_geom
, 0);

494 if–
rc
==
SQLITE_OK
 ){

495 
rc
 = 
	`sqlôe3_πªe_quîy_ˇŒback
(
db
, "Qcircle",

496 
cú˛e_quîy_func
, 0, 0);

498 if–
rc
==
SQLITE_OK
 ){

499 
rc
 = 
	`sqlôe3_πªe_quîy_ˇŒback
(
db
, "breadthfirstsearch",

500 
bfs_quîy_func
, 0, 0);

502 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_STATIC
);

504  
TCL_OK
;

505 
	}
}

507 
	$Sqlôëe°πªe_Inô
(
T˛_I¡îp
 *
öãΩ
){

508 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "ªgi°î_cube_geom", 
ªgi°î_cube_geom
, 0, 0);

509 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "ªgi°î_cú˛e_geom",
ªgi°î_cú˛e_geom
,0,0);

510  
TCL_OK
;

511 
	}
}

	@test_schema.c

21 
	#SCHEMA
 \

31 ")"

	)

37 #ifde‡
SQLITE_TEST


38 
	~"sqlôeI¡.h
"

39 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

40 
	~"sqlôe_t˛.h
"

42 
	~"t˛.h
"

45 
	~"sqlôe3ext.h
"

46 
	gSQLITE_EXTENSION_INIT1


49 
	~<°dlib.h
>

50 
	~<°rög.h
>

51 
	~<as£π.h
>

53 
schema_vèb
 
	tschema_vèb
;

54 
schema_curs‹
 
	tschema_curs‹
;

57 
	sschema_vèb
 {

58 
sqlôe3_vèb
 
	mba£
;

59 
sqlôe3
 *
	mdb
;

63 
	sschema_curs‹
 {

64 
sqlôe3_vèb_curs‹
 
	mba£
;

65 
sqlôe3_°mt
 *
	mpDbLi°
;

66 
sqlôe3_°mt
 *
	mpTabÀLi°
;

67 
sqlôe3_°mt
 *
	mpCﬁumnLi°
;

68 
	mrowid
;

74 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


79 
	$schemaDe°roy
(
sqlôe3_vèb
 *
pVèb
){

80 
	`sqlôe3_‰ì
(
pVèb
);

82 
	}
}

87 
	$schemaCª©e
(

88 
sqlôe3
 *
db
,

89 *
pAux
,

90 
¨gc
, c⁄° *c⁄°*
¨gv
,

91 
sqlôe3_vèb
 **
µVèb
,

92 **
pzEº


94 
rc
 = 
SQLITE_NOMEM
;

95 
schema_vèb
 *
pVèb
 = 
	`sqlôe3_mÆloc
((schema_vtab));

96 if–
pVèb
 ){

97 
	`mem£t
(
pVèb
, 0, (
schema_vèb
));

98 
pVèb
->
db
 = db;

99 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


100 
rc
 = 
	`sqlôe3_de˛¨e_vèb
(
db
, 
SCHEMA
);

103 *
µVèb
 = (
sqlôe3_vèb
 *)
pVèb
;

104  
rc
;

105 
	}
}

110 
	$schemaO≥n
(
sqlôe3_vèb
 *
pVTab
, 
sqlôe3_vèb_curs‹
 **
µCurs‹
){

111 
rc
 = 
SQLITE_NOMEM
;

112 
schema_curs‹
 *
pCur
;

113 
pCur
 = 
	`sqlôe3_mÆloc
((
schema_curs‹
));

114 if–
pCur
 ){

115 
	`mem£t
(
pCur
, 0, (
schema_curs‹
));

116 *
µCurs‹
 = (
sqlôe3_vèb_curs‹
 *)
pCur
;

117 
rc
 = 
SQLITE_OK
;

119  
rc
;

120 
	}
}

125 
	$schemaClo£
(
sqlôe3_vèb_curs‹
 *
cur
){

126 
schema_curs‹
 *
pCur
 = (schema_curs‹ *)
cur
;

127 
	`sqlôe3_föÆize
(
pCur
->
pDbLi°
);

128 
	`sqlôe3_föÆize
(
pCur
->
pTabÀLi°
);

129 
	`sqlôe3_föÆize
(
pCur
->
pCﬁumnLi°
);

130 
	`sqlôe3_‰ì
(
pCur
);

131  
SQLITE_OK
;

132 
	}
}

137 
	$schemaCﬁumn
(
sqlôe3_vèb_curs‹
 *
cur
, 
sqlôe3_c⁄ãxt
 *
˘x
, 
i
){

138 
schema_curs‹
 *
pCur
 = (schema_curs‹ *)
cur
;

139  
i
 ){

141 
	`sqlôe3_ªsu…_vÆue
(
˘x
, 
	`sqlôe3_cﬁumn_vÆue
(
pCur
->
pDbLi°
, 1));

144 
	`sqlôe3_ªsu…_vÆue
(
˘x
, 
	`sqlôe3_cﬁumn_vÆue
(
pCur
->
pTabÀLi°
, 0));

147 
	`sqlôe3_ªsu…_vÆue
(
˘x
, 
	`sqlôe3_cﬁumn_vÆue
(
pCur
->
pCﬁumnLi°
, 
i
-2));

150  
SQLITE_OK
;

151 
	}
}

156 
	$schemaRowid
(
sqlôe3_vèb_curs‹
 *
cur
, 
sqlôe_öt64
 *
pRowid
){

157 
schema_curs‹
 *
pCur
 = (schema_curs‹ *)
cur
;

158 *
pRowid
 = 
pCur
->
rowid
;

159  
SQLITE_OK
;

160 
	}
}

162 
	$föÆize
(
sqlôe3_°mt
 **
µStmt
){

163 
rc
 = 
	`sqlôe3_föÆize
(*
µStmt
);

164 *
µStmt
 = 0;

165  
rc
;

166 
	}
}

168 
	$schemaEof
(
sqlôe3_vèb_curs‹
 *
cur
){

169 
schema_curs‹
 *
pCur
 = (schema_curs‹ *)
cur
;

170  (
pCur
->
pDbLi°
 ? 0 : 1);

171 
	}
}

176 
	$schemaNext
(
sqlôe3_vèb_curs‹
 *
cur
){

177 
rc
 = 
SQLITE_OK
;

178 
schema_curs‹
 *
pCur
 = (schema_curs‹ *)
cur
;

179 
schema_vèb
 *
pVèb
 = (schema_vèb *)(
cur
->pVtab);

180 *
zSql
 = 0;

182  !
pCur
->
pCﬁumnLi°
 || 
SQLITE_ROW
!=
	`sqlôe3_°ï
(pCur->pColumnList) ){

183 if–
SQLITE_OK
!=(
rc
 = 
	`föÆize
(&
pCur
->
pCﬁumnLi°
)ËË
√xt_exô
;

185  !
pCur
->
pTabÀLi°
 || 
SQLITE_ROW
!=
	`sqlôe3_°ï
(pCur->pTableList) ){

186 if–
SQLITE_OK
!=(
rc
 = 
	`föÆize
(&
pCur
->
pTabÀLi°
)ËË
√xt_exô
;

188 
	`as£π
(
pCur
->
pDbLi°
);

189  
SQLITE_ROW
!=
	`sqlôe3_°ï
(
pCur
->
pDbLi°
) ){

190 
rc
 = 
	`föÆize
(&
pCur
->
pDbLi°
);

191 
√xt_exô
;

199 if–
	`sqlôe3_cﬁumn_öt
(
pCur
->
pDbLi°
, 0)==1 ){

200 
zSql
 = 
	`sqlôe3_m¥ötf
(

204 
sqlôe3_°mt
 *
pDbLi°
 = 
pCur
->pDbList;

205 
zSql
 = 
	`sqlôe3_m¥ötf
(

207 
	`sqlôe3_cﬁumn_ãxt
(
pDbLi°
, 1)

210 if–!
zSql
 ){

211 
rc
 = 
SQLITE_NOMEM
;

212 
√xt_exô
;

215 
rc
 = 
	`sqlôe3_¥ï¨e
(
pVèb
->
db
, 
zSql
, -1, &
pCur
->
pTabÀLi°
, 0);

216 
	`sqlôe3_‰ì
(
zSql
);

217 if–
rc
!=
SQLITE_OK
 ) 
√xt_exô
;

224 
zSql
 = 
	`sqlôe3_m¥ötf
("PRAGMA %Q.table_info(%Q)",

225 
	`sqlôe3_cﬁumn_ãxt
(
pCur
->
pDbLi°
, 1),

226 
	`sqlôe3_cﬁumn_ãxt
(
pCur
->
pTabÀLi°
, 0)

229 if–!
zSql
 ){

230 
rc
 = 
SQLITE_NOMEM
;

231 
√xt_exô
;

233 
rc
 = 
	`sqlôe3_¥ï¨e
(
pVèb
->
db
, 
zSql
, -1, &
pCur
->
pCﬁumnLi°
, 0);

234 
	`sqlôe3_‰ì
(
zSql
);

235 if–
rc
!=
SQLITE_OK
 ) 
√xt_exô
;

237 
pCur
->
rowid
++;

239 
√xt_exô
:

241  
rc
;

242 
	}
}

247 
	$schemaFûãr
(

248 
sqlôe3_vèb_curs‹
 *
pVèbCurs‹
,

249 
idxNum
, c⁄° *
idxSå
,

250 
¨gc
, 
sqlôe3_vÆue
 **
¨gv


252 
rc
;

253 
schema_vèb
 *
pVèb
 = (schema_vèb *)(
pVèbCurs‹
->pVtab);

254 
schema_curs‹
 *
pCur
 = (schema_curs‹ *)
pVèbCurs‹
;

255 
pCur
->
rowid
 = 0;

256 
	`föÆize
(&
pCur
->
pTabÀLi°
);

257 
	`föÆize
(&
pCur
->
pCﬁumnLi°
);

258 
	`föÆize
(&
pCur
->
pDbLi°
);

259 
rc
 = 
	`sqlôe3_¥ï¨e
(
pVèb
->
db
,"PRAGMA d©aba£_li°", -1, &
pCur
->
pDbLi°
, 0);

260  (
rc
==
SQLITE_OK
 ? 
	`schemaNext
(
pVèbCurs‹
) :Ñc);

261 
	}
}

266 
	$schemaBe°Index
(
sqlôe3_vèb
 *
èb
, 
sqlôe3_ödex_öfo
 *
pIdxInfo
){

267  
SQLITE_OK
;

268 
	}
}

274 
sqlôe3_moduÀ
 
	gschemaModuÀ
 = {

276 
schemaCª©e
,

277 
schemaCª©e
,

278 
schemaBe°Index
,

279 
schemaDe°roy
,

280 
schemaDe°roy
,

281 
schemaO≥n
,

282 
schemaClo£
,

283 
schemaFûãr
,

284 
schemaNext
,

285 
schemaEof
,

286 
schemaCﬁumn
,

287 
schemaRowid
,

299 #ifde‡
SQLITE_TEST


304 
gëDbPoöãr
(
T˛_I¡îp
 *
öãΩ
, c⁄° *
zA
, 
sqlôe3
 **
µDb
);

309 
SQLITE_TCLAPI
 
	$ªgi°î_schema_moduÀ
(

310 
Clõ¡D©a
 
˛õ¡D©a
,

311 
T˛_I¡îp
 *
öãΩ
,

312 
objc
,

313 
T˛_Obj
 *
CONST
 
objv
[]

315 
sqlôe3
 *
db
;

316 if–
objc
!=2 ){

317 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB");

318  
TCL_ERROR
;

320 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

321 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


322 
	`sqlôe3_¸óã_moduÀ
(
db
, "schema", &
schemaModuÀ
, 0);

324  
TCL_OK
;

325 
	}
}

330 
	$Sqlôëe°schema_Inô
(
T˛_I¡îp
 *
öãΩ
){

332 *
zName
;

333 
T˛_ObjCmdProc
 *
xProc
;

334 *
˛õ¡D©a
;

335 } 
aObjCmd
[] = {

336 { "ªgi°î_schema_moduÀ", 
ªgi°î_schema_moduÀ
, 0 },

338 
i
;

339 
i
=0; i<(
aObjCmd
)/(aObjCmd[0]); i++){

340 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
aObjCmd
[
i
].
zName
,

341 
aObjCmd
[
i
].
xProc
,áObjCmd[i].
˛õ¡D©a
, 0);

343  
TCL_OK
;

344 
	}
}

351 #ifde‡
_WIN32


352 
	$__de˛•ec
(
dŒexp‹t
)

354 
	$sqlôe3_schema_öô
(

355 
sqlôe3
 *
db
,

356 **
pzEºMsg
,

357 c⁄° 
sqlôe3_≠i_routöes
 *
pApi


359 
	`SQLITE_EXTENSION_INIT2
(
pApi
);

360 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


361 
	`sqlôe3_¸óã_moduÀ
(
db
, "schema", &
schemaModuÀ
, 0);

364 
	}
}

	@test_server.c

202 
	~"sqlôeI¡.h
"

208 #i‡
deföed
(
SQLITE_SERVER
Ë&& !deföed(
SQLITE_OMIT_SHARED_CACHE
)

209 #i‡
SQLITE_OS_UNIX
 && 
SQLITE_THREADSAFE


214 
	~<±hªad.h
>

215 
	~"sqlôe3.h
"

221 
SqlMesßge
 
	tSqlMesßge
;

222 
	sSqlMesßge
 {

223 
	m›
;

224 
sqlôe3
 *
	mpDb
;

225 
sqlôe3_°mt
 *
	mpStmt
;

226 
	mîrCode
;

227 c⁄° *
	mzIn
;

228 
	mnByã
;

229 c⁄° *
	mzOut
;

230 
SqlMesßge
 *
	mpNext
;

231 
SqlMesßge
 *
	mpPªv
;

232 
±hªad_muãx_t
 
	m˛õ¡Muãx
;

233 
±hªad_c⁄d_t
 
	m˛õ¡Wakeup
;

239 
	#MSG_O≥n
 1

	)

240 
	#MSG_Pª∑ª
 2

	)

241 
	#MSG_Sãp
 3

	)

242 
	#MSG_Re£t
 4

	)

243 
	#MSG_FöÆize
 5

	)

244 
	#MSG_Clo£
 6

	)

245 
	#MSG_D⁄e
 7

	)

252 
	sSîvîSèã
 {

253 
±hªad_muãx_t
 
	mqueueMuãx
;

254 
±hªad_muãx_t
 
	m£rvîMuãx
;

255 
±hªad_c⁄d_t
 
	m£rvîWakeup
;

256 vﬁ©ûê
	m£rvîHÆt
;

257 
SqlMesßge
 *
	mpQueueHód
;

258 
SqlMesßge
 *
	mpQueueTaû
;

259 } 
	gg
 = {

260 
PTHREAD_MUTEX_INITIALIZER
,

261 
PTHREAD_MUTEX_INITIALIZER
,

262 
PTHREAD_COND_INITIALIZER
,

272 
	$£ndToSîvî
(
SqlMesßge
 *
pMsg
){

275 
	`±hªad_muãx_öô
(&
pMsg
->
˛õ¡Muãx
, 0);

276 
	`±hªad_c⁄d_öô
(&
pMsg
->
˛õ¡Wakeup
, 0);

280 
	`±hªad_muãx_lock
(&
g
.
queueMuãx
);

281 
pMsg
->
pNext
 = 
g
.
pQueueHód
;

282 if–
g
.
pQueueHód
==0 ){

283 
g
.
pQueueTaû
 = 
pMsg
;

285 
g
.
pQueueHód
->
pPªv
 = 
pMsg
;

287 
pMsg
->
pPªv
 = 0;

288 
g
.
pQueueHód
 = 
pMsg
;

289 
	`±hªad_muãx_u∆ock
(&
g
.
queueMuãx
);

294 
	`±hªad_muãx_lock
(&
pMsg
->
˛õ¡Muãx
);

295 
	`±hªad_c⁄d_sig«l
(&
g
.
£rvîWakeup
);

296  
pMsg
->
›
!=
MSG_D⁄e
 ){

297 
	`±hªad_c⁄d_waô
(&
pMsg
->
˛õ¡Wakeup
, &pMsg->
˛õ¡Muãx
);

299 
	`±hªad_muãx_u∆ock
(&
pMsg
->
˛õ¡Muãx
);

303 
	`±hªad_muãx_de°roy
(&
pMsg
->
˛õ¡Muãx
);

304 
	`±hªad_c⁄d_de°roy
(&
pMsg
->
˛õ¡Wakeup
);

305 
	}
}

332 
	$sqlôe3_˛õ¡_›í
(c⁄° *
zD©aba£Name
, 
sqlôe3
 **
µDb
){

333 
SqlMesßge
 
msg
;

334 
msg
.
›
 = 
MSG_O≥n
;

335 
msg
.
zIn
 = 
zD©aba£Name
;

336 
	`£ndToSîvî
(&
msg
);

337 *
µDb
 = 
msg
.
pDb
;

338  
msg
.
îrCode
;

339 
	}
}

340 
	$sqlôe3_˛õ¡_¥ï¨e
(

341 
sqlôe3
 *
pDb
,

342 c⁄° *
zSql
,

343 
nByã
,

344 
sqlôe3_°mt
 **
µStmt
,

345 c⁄° **
pzTaû


347 
SqlMesßge
 
msg
;

348 
msg
.
›
 = 
MSG_Pª∑ª
;

349 
msg
.
pDb
 =ÖDb;

350 
msg
.
zIn
 = 
zSql
;

351 
msg
.
nByã
 =ÇByte;

352 
	`£ndToSîvî
(&
msg
);

353 *
µStmt
 = 
msg
.
pStmt
;

354 if–
pzTaû
 ) *pzTaû = 
msg
.
zOut
;

355  
msg
.
îrCode
;

356 
	}
}

357 
	$sqlôe3_˛õ¡_°ï
(
sqlôe3_°mt
 *
pStmt
){

358 
SqlMesßge
 
msg
;

359 
msg
.
›
 = 
MSG_Sãp
;

360 
msg
.
pStmt
 =ÖStmt;

361 
	`£ndToSîvî
(&
msg
);

362  
msg
.
îrCode
;

363 
	}
}

364 
	$sqlôe3_˛õ¡_ª£t
(
sqlôe3_°mt
 *
pStmt
){

365 
SqlMesßge
 
msg
;

366 
msg
.
›
 = 
MSG_Re£t
;

367 
msg
.
pStmt
 =ÖStmt;

368 
	`£ndToSîvî
(&
msg
);

369  
msg
.
îrCode
;

370 
	}
}

371 
	$sqlôe3_˛õ¡_föÆize
(
sqlôe3_°mt
 *
pStmt
){

372 
SqlMesßge
 
msg
;

373 
msg
.
›
 = 
MSG_FöÆize
;

374 
msg
.
pStmt
 =ÖStmt;

375 
	`£ndToSîvî
(&
msg
);

376  
msg
.
îrCode
;

377 
	}
}

378 
	$sqlôe3_˛õ¡_˛o£
(
sqlôe3
 *
pDb
){

379 
SqlMesßge
 
msg
;

380 
msg
.
›
 = 
MSG_Clo£
;

381 
msg
.
pDb
 =ÖDb;

382 
	`£ndToSîvî
(&
msg
);

383  
msg
.
îrCode
;

384 
	}
}

393 *
	$sqlôe3_£rvî
(*
NŸU£d
){

394 if–
	`±hªad_muãx_åylock
(&
g
.
£rvîMuãx
) ){

397 
	`sqlôe3_íabÀ_sh¨ed_ˇche
(1);

398  !
g
.
£rvîHÆt
 ){

399 
SqlMesßge
 *
pMsg
;

403 
	`±hªad_muãx_lock
(&
g
.
queueMuãx
);

404  
g
.
pQueueTaû
==0 && g.
£rvîHÆt
==0 ){

405 
	`±hªad_c⁄d_waô
(&
g
.
£rvîWakeup
, &g.
queueMuãx
);

407 
pMsg
 = 
g
.
pQueueTaû
;

408 if–
pMsg
 ){

409 if–
pMsg
->
pPªv
 ){

410 
pMsg
->
pPªv
->
pNext
 = 0;

412 
g
.
pQueueHód
 = 0;

414 
g
.
pQueueTaû
 = 
pMsg
->
pPªv
;

416 
	`±hªad_muãx_u∆ock
(&
g
.
queueMuãx
);

417 if–
pMsg
==0 ) ;

421 
	`±hªad_muãx_lock
(&
pMsg
->
˛õ¡Muãx
);

422  
pMsg
->
›
 ){

423 
MSG_O≥n
: {

424 
pMsg
->
îrCode
 = 
	`sqlôe3_›í
’Msg->
zIn
, &pMsg->
pDb
);

427 
MSG_Pª∑ª
: {

428 
pMsg
->
îrCode
 = 
	`sqlôe3_¥ï¨e
’Msg->
pDb
,ÖMsg->
zIn
,ÖMsg->
nByã
,

429 &
pMsg
->
pStmt
, &pMsg->
zOut
);

432 
MSG_Sãp
: {

433 
pMsg
->
îrCode
 = 
	`sqlôe3_°ï
’Msg->
pStmt
);

436 
MSG_Re£t
: {

437 
pMsg
->
îrCode
 = 
	`sqlôe3_ª£t
’Msg->
pStmt
);

440 
MSG_FöÆize
: {

441 
pMsg
->
îrCode
 = 
	`sqlôe3_föÆize
’Msg->
pStmt
);

444 
MSG_Clo£
: {

445 
pMsg
->
îrCode
 = 
	`sqlôe3_˛o£
’Msg->
pDb
);

452 
pMsg
->
›
 = 
MSG_D⁄e
;

453 
	`±hªad_muãx_u∆ock
(&
pMsg
->
˛õ¡Muãx
);

454 
	`±hªad_c⁄d_sig«l
(&
pMsg
->
˛õ¡Wakeup
);

456 
	`±hªad_muãx_u∆ock
(&
g
.
£rvîMuãx
);

458 
	}
}

465 
	$sqlôe3_£rvî_°¨t
(){

466 
±hªad_t
 
x
;

467 
rc
;

468 
g
.
£rvîHÆt
 = 0;

469 
rc
 = 
	`±hªad_¸óã
(&
x
, 0, 
sqlôe3_£rvî
, 0);

470 if–
rc
==0 ){

471 
	`±hªad_dëach
(
x
);

473 
	}
}

480 *
	$£rvîWøµî
(*
≤De¸
){

481 *
p
 = 
	`sqlôe3_£rvî
(0);

482 (*(*)
≤De¸
)--;

483  
p
;

484 
	}
}

491 
	$sqlôe3_£rvî_°¨t2
(*
≤De¸
){

492 
±hªad_t
 
x
;

493 
rc
;

494 
g
.
£rvîHÆt
 = 0;

495 
rc
 = 
	`±hªad_¸óã
(&
x
, 0, 
£rvîWøµî
, (*)
≤De¸
);

496 if–
rc
==0 ){

497 
	`±hªad_dëach
(
x
);

499 
	}
}

508 
	$sqlôe3_£rvî_°›
(){

509 
g
.
£rvîHÆt
 = 1;

510 
	`±hªad_c⁄d_brﬂdˇ°
(&
g
.
£rvîWakeup
);

511 
	`±hªad_muãx_lock
(&
g
.
£rvîMuãx
);

512 
	`±hªad_muãx_u∆ock
(&
g
.
£rvîMuãx
);

513 
	}
}

	@test_sqllog.c

76 #i‚de‡
_SQLITE3_H_


77 
	~"sqlôe3.h
"

79 
	~<°dio.h
>

80 
	~<°dlib.h
>

81 
	~<°rög.h
>

82 
	~<as£π.h
>

84 
	~<sys/ty≥s.h
>

85 
	~<uni°d.h
>

86 
	$gëPro˚ssId
(){

87 #i‡
SQLITE_OS_WIN


88  ()
	`_gëpid
();

90  ()
	`gëpid
();

92 
	}
}

95 
	#ENVIRONMENT_VARIABLE1_NAME
 "SQLITE_SQLLOG_DIR"

	)

96 
	#ENVIRONMENT_VARIABLE2_NAME
 "SQLITE_SQLLOG_REUSE_FILES"

	)

97 
	#ENVIRONMENT_VARIABLE3_NAME
 "SQLITE_SQLLOG_CONDITIONAL"

	)

100 
	#SQLLOG_NAMESZ
 512

	)

106 
	#MAX_CONNECTIONS
 256

	)

111 
	sSLC⁄n
 {

112 
	misEº
;

113 
sqlôe3
 *
	mdb
;

114 
	miLog
;

115 
FILE
 *
	mfd
;

120 
	sSLGlobÆ
 {

122 
sqlôe3_muãx
 *
	mmuãx
;

123 
	mnC⁄n
;

126 
	mbC⁄dôi⁄Æ
;

127 
	mbReu£
;

128 
	mzPªfix
[
SQLLOG_NAMESZ
];

129 
	mzIdx
[
SQLLOG_NAMESZ
];

130 
	miNextLog
;

131 
	miNextDb
;

132 
	mbRec
;

133 
	miClock
;

134 
SLC⁄n
 
	maC⁄n
[
MAX_CONNECTIONS
];

135 } 
	gsqŒogglobÆ
;

140 
	$sqŒog_is•a˚
(
c
){

141  (
c
==' ' || c=='\t' || c=='\n' || c=='\v' || c=='\f' || c=='\r');

142 
	}
}

151 
	$sqŒogTokíize
(c⁄° *
z
, c⁄° **
pz
, *
≤
){

152 c⁄° *
p
 = 
z
;

153 
n
;

156  
	`sqŒog_is•a˚
(*
p
) ){

157 
p
++;

161 *
pz
 = 
p
;

162 
n
 = 0;

163  (
p
[
n
]>='a' &&Ö[n]<='z') || (p[n]>='A' &&Ö[n]<='Z') )Ç++;

164 *
≤
 = 
n
;

165 
	}
}

175 *
	$sqŒogFödFûe
(c⁄° *
zFûe
){

176 *
zRë
 = 0;

177 
FILE
 *
fd
 = 0;

180 
fd
 = 
	`f›í
(
sqŒogglobÆ
.
zIdx
, "r");

181 if–
fd
==0 ){

182 
	`sqlôe3_log
(
SQLITE_IOERR
, "sqllogFindFile():Érror in fopen()");

189  
	`„of
(
fd
)==0 ){

190 
zLöe
[
SQLLOG_NAMESZ
*2+5];

191 if–
	`fgës
(
zLöe
, (zLöe), 
fd
) ){

192 
n
;

193 *
z
;

195 
zLöe
[(zLine)-1] = '\0';

196 
z
 = 
zLöe
;

197  *
z
>='0' && *z<='9' ) z++;

198  *
z
==' ' ) z++;

200 
n
 = 
	`°æí
(
z
);

201  
n
>0 && 
	`sqŒog_is•a˚
(
z
[n-1]) )Ç--;

203 if–
n
==
	`°æí
(
zFûe
Ë&& 0==
	`memcmp
(zFûe, 
z
,Ç) ){

204 
zBuf
[16];

205 
	`mem£t
(
zBuf
, 0, (zBuf));

206 
z
 = 
zLöe
;

207  *
z
>='0' && *z<='9' ){

208 
zBuf
[
z
-
zLöe
] = *z;

209 
z
++;

211 
zRë
 = 
	`sqlôe3_m¥ötf
("%s_%s.db", 
sqŒogglobÆ
.
zPªfix
, 
zBuf
);

217 if–
	`„º‹
(
fd
) ){

218 
	`sqlôe3_log
(
SQLITE_IOERR
, "sqllogFindFile():ÉrrorÑeading index file");

221 
	`f˛o£
(
fd
);

222  
zRë
;

223 
	}
}

225 
	$sqŒogFödAâached
(

226 
sqlôe3
 *
db
,

227 c⁄° *
zSórch
,

228 *
zName
,

229 *
zFûe


231 
sqlôe3_°mt
 *
pStmt
;

232 
rc
;

237 
	`as£π
–
sqŒogglobÆ
.
bRec
==0 );

238 
sqŒogglobÆ
.
bRec
 = 1;

239 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
db
, "PRAGMA d©aba£_li°", -1, &
pStmt
, 0);

240 if–
rc
==
SQLITE_OK
 ){

241  
SQLITE_ROW
==
	`sqlôe3_°ï
(
pStmt
) ){

242 c⁄° *
zVÆ1
; 
nVÆ1
;

243 c⁄° *
zVÆ2
; 
nVÆ2
;

245 
zVÆ1
 = (c⁄° *)
	`sqlôe3_cﬁumn_ãxt
(
pStmt
, 1);

246 
nVÆ1
 = 
	`sqlôe3_cﬁumn_byãs
(
pStmt
, 1);

247 if–
zName
 ){

248 
	`mem˝y
(
zName
, 
zVÆ1
, 
nVÆ1
+1);

251 
zVÆ2
 = (c⁄° *)
	`sqlôe3_cﬁumn_ãxt
(
pStmt
, 2);

252 
nVÆ2
 = 
	`sqlôe3_cﬁumn_byãs
(
pStmt
, 2);

253 
	`mem˝y
(
zFûe
, 
zVÆ2
, 
nVÆ2
+1);

255 if–
zSórch
 && 
	`°æí
(zSórch)==
nVÆ1


256 && 0==
	`sqlôe3_°∫icmp
(
zSórch
, 
zVÆ1
, 
nVÆ1
)

261 
rc
 = 
	`sqlôe3_föÆize
(
pStmt
);

263 
sqŒogglobÆ
.
bRec
 = 0;

265 if–
rc
!=
SQLITE_OK
 ){

266 
	`sqlôe3_log
(
rc
, "sqllogFindAttached():Érror in \"PRAGMA database_list\"");

268  
rc
;

269 
	}
}

291 
	$sqŒogC›ydb
(
SLC⁄n
 *
p
, c⁄° *
zSórch
, 
bLog
){

292 
zName
[
SQLLOG_NAMESZ
];

293 
zFûe
[
SQLLOG_NAMESZ
];

294 *
zFªe
;

295 *
zInô
 = 0;

296 
rc
;

298 
rc
 = 
	`sqŒogFödAâached
(
p
->
db
, 
zSórch
, 
zName
, 
zFûe
);

299 if–
rc
!=
SQLITE_OK
 ) ;

301 if–
zFûe
[0]=='\0' ){

302 
zInô
 = 
	`sqlôe3_m¥ötf
("");

304 if–
sqŒogglobÆ
.
bReu£
 ){

305 
zInô
 = 
	`sqŒogFödFûe
(
zFûe
);

307 
zInô
 = 0;

309 if–
zInô
==0 ){

310 
rc
;

311 
sqlôe3
 *
c›y
 = 0;

312 
iDb
;

315 
iDb
 = 
sqŒogglobÆ
.
iNextDb
++;

316 
zInô
 = 
	`sqlôe3_m¥ötf
("%s_%d.db", 
sqŒogglobÆ
.
zPªfix
, 
iDb
);

319 
	`as£π
–
sqŒogglobÆ
.
bRec
==0 );

320 
sqŒogglobÆ
.
bRec
 = 1;

321 
rc
 = 
	`sqlôe3_›í
(
zInô
, &
c›y
);

322 if–
rc
==
SQLITE_OK
 ){

323 
sqlôe3_backup
 *
pBak
;

324 
	`sqlôe3_exec
(
c›y
, "PRAGMA synchronous = 0", 0, 0, 0);

325 
pBak
 = 
	`sqlôe3_backup_öô
(
c›y
, "maö", 
p
->
db
, 
zName
);

326 if–
pBak
 ){

327 
	`sqlôe3_backup_°ï
(
pBak
, -1);

328 
rc
 = 
	`sqlôe3_backup_föish
(
pBak
);

330 
rc
 = 
	`sqlôe3_îrcode
(
c›y
);

332 
	`sqlôe3_˛o£
(
c›y
);

334 
sqŒogglobÆ
.
bRec
 = 0;

336 if–
rc
==
SQLITE_OK
 ){

338 
FILE
 *
fd
 = 
	`f›í
(
sqŒogglobÆ
.
zIdx
, "a");

339 if–
fd
 ){

340 
	`Ârötf
(
fd
, "%d %s\n", 
iDb
, 
zFûe
);

341 
	`f˛o£
(
fd
);

344 
	`sqlôe3_log
(
rc
, "sqllogCopydb():Érror backing up database");

349 if–
bLog
 ){

350 
zFªe
 = 
	`sqlôe3_m¥ötf
("ATTACH '%q' AS '%q'; -- clock=%d\n",

351 
zInô
, 
zName
, 
sqŒogglobÆ
.
iClock
++

354 
zFªe
 = 
	`sqlôe3_m¥ötf
("-- Maö d©aba£ i†'%q'\n", 
zInô
);

356 
	`Ârötf
(
p
->
fd
, "%s", 
zFªe
);

357 
	`sqlôe3_‰ì
(
zFªe
);

359 
	`sqlôe3_‰ì
(
zInô
);

360 
	}
}

367 
	$sqŒogO≥∆og
(
SLC⁄n
 *
p
){

369 if–
p
->
fd
==0 ){

370 *
zLog
;

374 if–
sqŒogglobÆ
.
zPªfix
[0]==0 ){

375 
FILE
 *
fd
;

376 *
zV¨
 = 
	`gëív
(
ENVIRONMENT_VARIABLE1_NAME
);

377 if–
zV¨
==0 || 
	`°æí
(zV¨)+10>=((
sqŒogglobÆ
.
zPªfix
)) ) ;

378 
	`sqlôe3_¢¥ötf
((
sqŒogglobÆ
.
zPªfix
), sqllogglobal.zPrefix,

379 "%s/sqŒog_%d", 
zV¨
, 
	`gëPro˚ssId
());

380 
	`sqlôe3_¢¥ötf
((
sqŒogglobÆ
.
zIdx
), sqllogglobal.zIdx,

381 "%s.idx", 
sqŒogglobÆ
.
zPªfix
);

382 if–
	`gëív
(
ENVIRONMENT_VARIABLE2_NAME
) ){

383 
sqŒogglobÆ
.
bReu£
 = 
	`©oi
(
	`gëív
(
ENVIRONMENT_VARIABLE2_NAME
));

385 
fd
 = 
	`f›í
(
sqŒogglobÆ
.
zIdx
, "w");

386 if–
fd
 ) 
	`f˛o£
(fd);

390 
zLog
 = 
	`sqlôe3_m¥ötf
("%s_%d.sql", 
sqŒogglobÆ
.
zPªfix
, 
p
->
iLog
);

391 
p
->
fd
 = 
	`f›í
(
zLog
, "w");

392 
	`sqlôe3_‰ì
(
zLog
);

393 if–
p
->
fd
==0 ){

394 
	`sqlôe3_log
(
SQLITE_IOERR
, "sqllogOpenlog(): FailedÅo openÜog file");

397 
	}
}

404 
	$ã°SqŒogStmt
(
SLC⁄n
 *
p
, c⁄° *
zSql
){

405 c⁄° *
zFú°
;

406 
nFú°
;

408 
	`sqŒogTokíize
(
zSql
, &
zFú°
, &
nFú°
);

409 if–
nFú°
!=6 || 0!=
	`sqlôe3_°∫icmp
("ATTACH", 
zFú°
, 6) ){

411 
	`Ârötf
(
p
->
fd
, "%s; -- clock=%d\n", 
zSql
, 
sqŒogglobÆ
.
iClock
++);

414 
	`sqŒogC›ydb
(
p
, 0, 1);

416 
	}
}

426 
	$sqŒogTø˚Db
(
sqlôe3
 *
db
){

427 
bRë
 = 1;

428 if–
sqŒogglobÆ
.
bC⁄dôi⁄Æ
 ){

429 
zFûe
[
SQLLOG_NAMESZ
];

430 
rc
 = 
	`sqŒogFödAâached
(
db
, "maö", 0, 
zFûe
);

431 if–
rc
==
SQLITE_OK
 ){

432 
nFûe
 = 
	`°æí
(
zFûe
);

433 if–(
SQLLOG_NAMESZ
-
nFûe
)<8 ){

434 
	`sqlôe3_log
(
SQLITE_IOERR
,

435 "sqŒogTø˚Db(): d©aba£Çamêtoÿl⁄g (%d byãs)", 
nFûe


437 
bRë
 = 0;

439 
	`mem˝y
(&
zFûe
[
nFûe
], "-sqllog", 8);

440 
bRë
 = !
	`ac˚ss
(
zFûe
, 
F_OK
);

444  
bRë
;

445 
	}
}

468 
	$ã°SqŒog
(*
pCtx
, 
sqlôe3
 *
db
, c⁄° *
zSql
, 
eTy≥
){

469 
SLC⁄n
 *
p
 = 0;

470 
sqlôe3_muãx
 *
ma°î
 = 
	`sqlôe3_muãx_Æloc
(
SQLITE_MUTEX_STATIC_MASTER
);

472 
	`as£π
–
eTy≥
==0 ||ÉType==1 ||ÉType==2 );

473 
	`as£π
–(
eTy≥
==2)==(
zSql
==0) );

476 if–
eTy≥
==0 ){

477 
	`sqlôe3_muãx_íãr
(
ma°î
);

478 if–
sqŒogglobÆ
.
muãx
==0 ){

479 
sqŒogglobÆ
.
muãx
 = 
	`sqlôe3_muãx_Æloc
(
SQLITE_MUTEX_RECURSIVE
);

481 
	`sqlôe3_muãx_Àave
(
ma°î
);

483 
	`sqlôe3_muãx_íãr
(
sqŒogglobÆ
.
muãx
);

484 if–
sqŒogglobÆ
.
bRec
==0 && 
	`sqŒogTø˚Db
(
db
) ){

486 
	`sqlôe3_muãx_íãr
(
ma°î
);

487 
p
 = &
sqŒogglobÆ
.
aC⁄n
[sqŒogglobÆ.
nC⁄n
++];

488 
p
->
fd
 = 0;

489 
p
->
db
 = db;

490 
p
->
iLog
 = 
sqŒogglobÆ
.
iNextLog
++;

491 
	`sqlôe3_muãx_Àave
(
ma°î
);

494 
	`sqŒogO≥∆og
(
p
);

495 if–
p
->
fd
 ) 
	`sqŒogC›ydb
(p, "main", 0);

497 
	`sqlôe3_muãx_Àave
(
sqŒogglobÆ
.
muãx
);

502 
i
;

503 
i
=0; i<
sqŒogglobÆ
.
nC⁄n
; i++){

504 
p
 = &
sqŒogglobÆ
.
aC⁄n
[
i
];

505 if–
p
->
db
==db ) ;

509 if–
eTy≥
==2 ){

510 
	`sqlôe3_muãx_íãr
(
ma°î
);

511 if–
i
<
sqŒogglobÆ
.
nC⁄n
 ){

512 if–
p
->
fd
 ) 
	`f˛o£
(p->fd);

513 
p
->
db
 = 0;

514 
p
->
fd
 = 0;

515 
sqŒogglobÆ
.
nC⁄n
--;

518 if–
sqŒogglobÆ
.
nC⁄n
==0 ){

519 
	`sqlôe3_muãx_‰ì
(
sqŒogglobÆ
.
muãx
);

520 
sqŒogglobÆ
.
muãx
 = 0;

521 }if–
i
<
sqŒogglobÆ
.
nC⁄n
 ){

522 
nShi·
 = &
sqŒogglobÆ
.
aC⁄n
[sqŒogglobÆ.
nC⁄n
] - 
p
;

523 if–
nShi·
>0 ){

524 
	`memmove
(
p
, &p[1], 
nShi·
*(
SLC⁄n
));

527 
	`sqlôe3_muãx_Àave
(
ma°î
);

530 }if–
i
<
sqŒogglobÆ
.
nC⁄n
 && 
p
->
fd
 ){

531 
	`sqlôe3_muãx_íãr
(
sqŒogglobÆ
.
muãx
);

532 if–
sqŒogglobÆ
.
bRec
==0 ){

533 
	`ã°SqŒogStmt
(
p
, 
zSql
);

535 
	`sqlôe3_muãx_Àave
(
sqŒogglobÆ
.
muãx
);

538 
	}
}

546 
	$sqlôe3_öô_sqŒog
(){

547 if–
	`gëív
(
ENVIRONMENT_VARIABLE1_NAME
) ){

548 if–
SQLITE_OK
==
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_SQLLOG
, 
ã°SqŒog
, 0) ){

549 
	`mem£t
(&
sqŒogglobÆ
, 0, (sqllogglobal));

550 
sqŒogglobÆ
.
bReu£
 = 1;

551 if–
	`gëív
(
ENVIRONMENT_VARIABLE3_NAME
) ){

552 
sqŒogglobÆ
.
bC⁄dôi⁄Æ
 = 1;

556 
	}
}

	@test_superlock.c

21 
	~"sqlôe3.h
"

22 
	~<°rög.h
>

23 
	~<as£π.h
>

29 
	sSu≥æockBusy
 {

30 (*
	mxBusy
)(*,);

31 *
	mpBusyArg
;

32 
	mnBusy
;

34 
Su≥æockBusy
 
	tSu≥æockBusy
;

41 
	sSu≥æock
 {

42 
sqlôe3
 *
	mdb
;

43 
	mbWÆ
;

45 
Su≥æock
 
	tSu≥æock
;

52 
	$su≥æockBusyH™dÀr
(*
pCtx
, 
UNUSED
){

53 
Su≥æockBusy
 *
pBusy
 = (Su≥æockBusy *)
pCtx
;

54 if–
pBusy
->
xBusy
==0 )  0;

55  
pBusy
->
	`xBusy
’Busy->
pBusyArg
,ÖBusy->
nBusy
++);

56 
	}
}

67 
	$su≥æockIsWÆ
(
Su≥æock
 *
pLock
){

68 
rc
;

69 
sqlôe3_°mt
 *
pStmt
;

71 
rc
 = 
	`sqlôe3_¥ï¨e
(
pLock
->
db
, "PRAGMA maö.jou∫Æ_mode", -1, &
pStmt
, 0);

72 if–
rc
!=
SQLITE_OK
 ) Ñc;

74 
pLock
->
bWÆ
 = 0;

75 if–
SQLITE_ROW
==
	`sqlôe3_°ï
(
pStmt
) ){

76 c⁄° *
zMode
 = (c⁄° *)
	`sqlôe3_cﬁumn_ãxt
(
pStmt
, 0);

77 if–
zMode
 && 
	`°æí
(zMode)==3 && 
	`sqlôe3_°∫icmp
("wal", zMode, 3)==0 ){

78 
pLock
->
bWÆ
 = 1;

82  
	`sqlôe3_föÆize
(
pStmt
);

83 
	}
}

91 
	$su≥æockShmLock
(

92 
sqlôe3_fûe
 *
fd
,

93 
idx
,

94 
nByã
,

95 
Su≥æockBusy
 *
pBusy


97 
rc
;

98 (*
xShmLock
)(
sqlôe3_fûe
*, , , Ë
fd
->
pMëhods
->xShmLock;

100 
rc
 = 
	`xShmLock
(
fd
, 
idx
, 
nByã
, 
SQLITE_SHM_LOCK
|
SQLITE_SHM_EXCLUSIVE
);

101 } 
rc
==
SQLITE_BUSY
 && 
	`su≥æockBusyH™dÀr
((*)
pBusy
, 0) );

102  
rc
;

103 
	}
}

109 
	$su≥æockWÆLock
(

110 
sqlôe3
 *
db
,

111 
Su≥æockBusy
 *
pBusy


113 
rc
;

114 
sqlôe3_fûe
 *
fd
 = 0;

115 vﬁ©ûê*
p
 = 0;

118 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, "maö", 
SQLITE_FCNTL_FILE_POINTER
, (*)&
fd
);

119 if–
rc
!=
SQLITE_OK
 ) Ñc;

124 
rc
 = 
	`su≥æockShmLock
(
fd
, 2, 1, 
pBusy
);

125 if–
rc
!=
SQLITE_OK
 ) Ñc;

134 
rc
 = 
fd
->
pMëhods
->
	`xShmM≠
(fd, 0, 32*1024, 1, &
p
);

135 if–
rc
!=
SQLITE_OK
 ) Ñc;

136 
	`mem£t
((*)
p
, 0, 32);

142 
rc
 = 
	`su≥æockShmLock
(
fd
, 3, 
SQLITE_SHM_NLOCK
-3, 
pBusy
);

143  
rc
;

144 
	}
}

151 
	$sqlôe3demo_su≥ru∆ock
(*
pLock
){

152 
Su≥æock
 *
p
 = (Su≥æock *)
pLock
;

153 if–
p
->
bWÆ
 ){

154 
rc
;

155 
Êags
 = 
SQLITE_SHM_UNLOCK
 | 
SQLITE_SHM_EXCLUSIVE
;

156 
sqlôe3_fûe
 *
fd
 = 0;

157 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
p
->
db
, "maö", 
SQLITE_FCNTL_FILE_POINTER
, (*)&
fd
);

158 if–
rc
==
SQLITE_OK
 ){

159 
fd
->
pMëhods
->
	`xShmLock
(fd, 2, 1, 
Êags
);

160 
fd
->
pMëhods
->
	`xShmLock
(fd, 3, 
SQLITE_SHM_NLOCK
-3, 
Êags
);

163 
	`sqlôe3_˛o£
(
p
->
db
);

164 
	`sqlôe3_‰ì
(
p
);

165 
	}
}

182 
	$sqlôe3demo_su≥æock
(

183 c⁄° *
zP©h
,

184 c⁄° *
zVfs
,

185 (*
xBusy
)(*,),

186 *
pBusyArg
,

187 **
µLock


189 
Su≥æockBusy
 
busy
 = {0, 0, 0};

190 
rc
;

191 
Su≥æock
 *
pLock
;

193 
pLock
 = 
	`sqlôe3_mÆloc
((
Su≥æock
));

194 if–!
pLock
 )  
SQLITE_NOMEM
;

195 
	`mem£t
(
pLock
, 0, (
Su≥æock
));

198 
rc
 = 
	`sqlôe3_›í_v2
(

199 
zP©h
, &
pLock
->
db
, 
SQLITE_OPEN_READWRITE
|
SQLITE_OPEN_CREATE
, 
zVfs


215 if–
rc
==
SQLITE_OK
 ){

216 
busy
.
xBusy
 = xBusy;

217 
busy
.
pBusyArg
 =ÖBusyArg;

218 
	`sqlôe3_busy_h™dÀr
(
pLock
->
db
, 
su≥æockBusyH™dÀr
, (*)&
busy
);

219 
rc
 = 
	`sqlôe3_exec
(
pLock
->
db
, "BEGIN EXCLUSIVE", 0, 0, 0);

231 if–
rc
==
SQLITE_OK
 ){

232 if–
SQLITE_OK
==(
rc
 = 
	`su≥æockIsWÆ
(
pLock
)Ë&&ÖLock->
bWÆ
 ){

233 
rc
 = 
	`sqlôe3_exec
(
pLock
->
db
, "COMMIT", 0, 0, 0);

234 if–
rc
==
SQLITE_OK
 ){

235 
rc
 = 
	`su≥æockWÆLock
(
pLock
->
db
, &
busy
);

240 if–
rc
!=
SQLITE_OK
 ){

241 
	`sqlôe3demo_su≥ru∆ock
(
pLock
);

242 *
µLock
 = 0;

244 *
µLock
 = 
pLock
;

247  
rc
;

248 
	}
}

257 #ifde‡
SQLITE_TEST


259 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

260 
	~"sqlôe_t˛.h
"

262 
	~"t˛.h
"

263 #i‚de‡
SQLITE_TCLAPI


264 
	#SQLITE_TCLAPI


	)

268 
	sI¡îpAndS¸ùt
 {

269 
T˛_I¡îp
 *
	möãΩ
;

270 
T˛_Obj
 *
	mpS¸ùt
;

272 
I¡îpAndS¸ùt
 
	tI¡îpAndS¸ùt
;

274 
SQLITE_TCLAPI
 
	$su≥ru∆ock_dñ
(
Clõ¡D©a
 
cd
){

275 
	`sqlôe3demo_su≥ru∆ock
((*)
cd
);

276 
	}
}

278 
SQLITE_TCLAPI
 
	$su≥ru∆ock_cmd
(

279 
Clõ¡D©a
 
cd
,

280 
T˛_I¡îp
 *
öãΩ
,

281 
objc
,

282 
T˛_Obj
 *
CONST
 
objv
[]

284 if–
objc
!=1 ){

285 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

286  
TCL_ERROR
;

288 
	`T˛_DñëeComm™d
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[0]));

289  
TCL_OK
;

290 
	}
}

292 
	$su≥æock_busy
(*
pCtx
, 
nBusy
){

293 
I¡îpAndS¸ùt
 *
p
 = (I¡îpAndS¸ùà*)
pCtx
;

294 
T˛_Obj
 *
pEvÆ
;

295 
iVÆ
 = 0;

297 
pEvÆ
 = 
	`T˛_Du∂iˇãObj
(
p
->
pS¸ùt
);

298 
	`T˛_In¸RefCou¡
(
pEvÆ
);

299 
	`T˛_Li°ObjAµídEÀmít
(
p
->
öãΩ
, 
pEvÆ
, 
	`T˛_NewI¡Obj
(
nBusy
));

300 
	`T˛_EvÆObjEx
(
p
->
öãΩ
, 
pEvÆ
, 
TCL_EVAL_GLOBAL
);

301 
	`T˛_GëI¡FromObj
(
p
->
öãΩ
, 
	`T˛_GëObjResu…
’->öãΩ), &
iVÆ
);

302 
	`T˛_De¸RefCou¡
(
pEvÆ
);

304  
iVÆ
;

305 
	}
}

310 
SQLITE_TCLAPI
 
	$su≥æock_cmd
(

311 
Clõ¡D©a
 
cd
,

312 
T˛_I¡îp
 *
öãΩ
,

313 
objc
,

314 
T˛_Obj
 *
CONST
 
objv
[]

316 *
pLock
;

317 *
zP©h
;

318 *
zVfs
 = 0;

319 
I¡îpAndS¸ùt
 
busy
 = {0, 0};

320 (*
xBusy
)(*,) = 0;

321 
rc
;

323 if–
objc
<3 || objc>5 ){

324 
	`T˛_Wr⁄gNumArgs
(

325 
öãΩ
, 1, 
objv
, "CMDNAME PATH ?VFS? ?BUSY-HANDLER-SCRIPT?");

326  
TCL_ERROR
;

329 
zP©h
 = 
	`T˛_GëSåög
(
objv
[2]);

331 if–
objc
>3 ){

332 
zVfs
 = 
	`T˛_GëSåög
(
objv
[3]);

333 if–
	`°æí
(
zVfs
)==0 ) zVfs = 0;

335 if–
objc
>4 ){

336 
busy
.
öãΩ
 = interp;

337 
busy
.
pS¸ùt
 = 
objv
[4];

338 
xBusy
 = 
su≥æock_busy
;

341 
rc
 = 
	`sqlôe3demo_su≥æock
(
zP©h
, 
zVfs
, 
xBusy
, &
busy
, &
pLock
);

342 
	`as£π
–
rc
==
SQLITE_OK
 || 
pLock
==0 );

343 
	`as£π
–
rc
!=
SQLITE_OK
 || 
pLock
!=0 );

345 if–
rc
!=
SQLITE_OK
 ){

346 c⁄° *
	`sqlôe3EºSå
();

347 
	`T˛_Re£tResu…
(
öãΩ
);

348 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºSå
(
rc
), 0);

349  
TCL_ERROR
;

352 
	`T˛_Cª©eObjComm™d
(

353 
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), 
su≥ru∆ock_cmd
, 
pLock
, 
su≥ru∆ock_dñ


355 
	`T˛_SëObjResu…
(
öãΩ
, 
objv
[1]);

356  
TCL_OK
;

357 
	}
}

359 
	$SqlôeSu≥æock_Inô
(
T˛_I¡îp
 *
öãΩ
){

360 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sqlôe3demo_su≥æock", 
su≥æock_cmd
, 0, 0);

361  
TCL_OK
;

362 
	}
}

	@test_syscall.c

77 
	~"sqlôeI¡.h
"

78 
	~"sqlôe3.h
"

79 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

80 
	~"sqlôe_t˛.h
"

82 
	~"t˛.h
"

84 
	~<°dlib.h
>

85 
	~<°rög.h
>

86 
	~<as£π.h
>

88 #i‡
SQLITE_OS_UNIX


91 c⁄° *
sqlôe3EºName
();

93 
	~<sys/mm™.h
>

94 
	~<sys/ty≥s.h
>

95 
	~<î∫o.h
>

97 
	sTe°SysˇŒGlobÆ
 {

98 
	mbPîsi°
;

99 
	mnCou¡
;

100 
	mnFaû
;

101 
	mpgsz
;

102 
sqlôe3_sysˇŒ_±r
 
	m‹ig_gë∑gesize
;

103 } 
	ggSysˇŒ
 = { 0, 0, 0, 0, 0 };

105 
ts_›í
(const *, , );

106 
ts_˛o£
(
fd
);

107 
ts_ac˚ss
(c⁄° *
zP©h
, 
mode
);

108 *
ts_gëcwd
(*
zP©h
, 
size_t
 
nP©h
);

109 
ts_°©
(c⁄° *
zP©h
, 
°©
 *
p
);

110 
ts_f°©
(
fd
, 
°©
 *
p
);

111 
ts_·runˇã
(
fd
, 
off_t
 
n
);

112 
ts_f˙é
(
fd
, 
cmd
, ... );

113 
ts_ªad
(
fd
, *
aBuf
, 
size_t
 
nBuf
);

114 
ts_¥ód
(
fd
, *
aBuf
, 
size_t
 
nBuf
, 
off_t
 
off
);

118 
ts_¥ód64
(
fd
, *
aBuf
, 
size_t
 
nBuf
, 
sqlôe3_uöt64
 
off
);

119 
ts_wrôe
(
fd
, c⁄° *
aBuf
, 
size_t
 
nBuf
);

120 
ts_pwrôe
(
fd
, c⁄° *
aBuf
, 
size_t
 
nBuf
, 
off_t
 
off
);

121 
ts_pwrôe64
(
fd
, c⁄° *
aBuf
, 
size_t
 
nBuf
, 
sqlôe3_uöt64
 
off
);

122 
ts_fchmod
(
fd
, 
mode_t
 
mode
);

123 
ts_ÁŒoˇã
(
fd
, 
off_t
 
off
, off_à
Àn
);

124 *
ts_mm≠
(*, 
size_t
, , , , 
off_t
);

125 *
ts_mªm≠
(*, 
size_t
, size_t, , ...);

127 
	sTe°SysˇŒAºay
 {

128 c⁄° *
	mzName
;

129 
sqlôe3_sysˇŒ_±r
 
	mxTe°
;

130 
sqlôe3_sysˇŒ_±r
 
	mxOrig
;

131 
	mdeÁu…_î∫o
;

132 
	mcu°om_î∫o
;

133 } 
	gaSysˇŒ
[] = {

134  { "›í", (
sqlôe3_sysˇŒ_±r
)
ts_›í
, 0, 
EACCES
, 0 },

135  { "˛o£", (
sqlôe3_sysˇŒ_±r
)
ts_˛o£
, 0, 0, 0 },

136  { "ac˚ss", (
sqlôe3_sysˇŒ_±r
)
ts_ac˚ss
, 0, 0, 0 },

137  { "gëcwd", (
sqlôe3_sysˇŒ_±r
)
ts_gëcwd
, 0, 0, 0 },

138  { "°©", (
sqlôe3_sysˇŒ_±r
)
ts_°©
, 0, 0, 0 },

139  { "f°©", (
sqlôe3_sysˇŒ_±r
)
ts_f°©
, 0, 0, 0 },

140  { "·runˇã", (
sqlôe3_sysˇŒ_±r
)
ts_·runˇã
, 0, 
EIO
, 0 },

141  { "f˙é", (
sqlôe3_sysˇŒ_±r
)
ts_f˙é
, 0, 
EACCES
, 0 },

142  { "ªad", (
sqlôe3_sysˇŒ_±r
)
ts_ªad
, 0, 0, 0 },

143  { "¥ód", (
sqlôe3_sysˇŒ_±r
)
ts_¥ód
, 0, 0, 0 },

144  { "¥ód64", (
sqlôe3_sysˇŒ_±r
)
ts_¥ód64
, 0, 0, 0 },

145  { "wrôe", (
sqlôe3_sysˇŒ_±r
)
ts_wrôe
, 0, 0, 0 },

146  { "pwrôe", (
sqlôe3_sysˇŒ_±r
)
ts_pwrôe
, 0, 0, 0 },

147  { "pwrôe64", (
sqlôe3_sysˇŒ_±r
)
ts_pwrôe64
, 0, 0, 0 },

148  { "fchmod", (
sqlôe3_sysˇŒ_±r
)
ts_fchmod
, 0, 0, 0 },

149  { "ÁŒoˇã", (
sqlôe3_sysˇŒ_±r
)
ts_ÁŒoˇã
, 0, 0, 0 },

150  { "mm≠", (
sqlôe3_sysˇŒ_±r
)
ts_mm≠
, 0, 0, 0 },

151  { "mªm≠", (
sqlôe3_sysˇŒ_±r
)
ts_mªm≠
, 0, 0, 0 },

155 
	#‹ig_›í
 (((*)(c⁄° *, , ))
aSysˇŒ
[0].
xOrig
)

	)

156 
	#‹ig_˛o£
 (((*)())
aSysˇŒ
[1].
xOrig
)

	)

157 
	#‹ig_ac˚ss
 (((*)(c⁄° *,))
aSysˇŒ
[2].
xOrig
)

	)

158 
	#‹ig_gëcwd
 ((*(*)(*,
size_t
))
aSysˇŒ
[3].
xOrig
)

	)

159 
	#‹ig_°©
 (((*)(c⁄° *,
°©
*))
aSysˇŒ
[4].
xOrig
)

	)

160 
	#‹ig_f°©
 (((*)(,
°©
*))
aSysˇŒ
[5].
xOrig
)

	)

161 
	#‹ig_·runˇã
 (((*)(,
off_t
))
aSysˇŒ
[6].
xOrig
)

	)

162 
	#‹ig_f˙é
 (((*)(,,...))
aSysˇŒ
[7].
xOrig
)

	)

163 
	#‹ig_ªad
 ((
	`ssize_t
(*)(,*,
size_t
))
aSysˇŒ
[8].
xOrig
)

	)

164 
	#‹ig_¥ód
 ((
	`ssize_t
(*)(,*,
size_t
,
off_t
))
aSysˇŒ
[9].
xOrig
)

	)

165 
	#‹ig_¥ód64
 ((
	`ssize_t
(*)(,*,
size_t
,
sqlôe3_uöt64
))
aSysˇŒ
[10].
xOrig
)

	)

166 
	#‹ig_wrôe
 ((
	`ssize_t
(*)(,c⁄° *,
size_t
))
aSysˇŒ
[11].
xOrig
)

	)

167 
	#‹ig_pwrôe
 ((
	`ssize_t
(*)(,c⁄° *,
size_t
,
off_t
))\

168 
aSysˇŒ
[12].
xOrig
)

	)

169 
	#‹ig_pwrôe64
 ((
	`ssize_t
(*)(,c⁄° *,
size_t
,
sqlôe3_uöt64
))\

170 
aSysˇŒ
[13].
xOrig
)

	)

171 
	#‹ig_fchmod
 (((*)(,
mode_t
))
aSysˇŒ
[14].
xOrig
)

	)

172 
	#‹ig_ÁŒoˇã
 (((*)(,
off_t
,off_t))
aSysˇŒ
[15].
xOrig
)

	)

173 
	#‹ig_mm≠
 ((*(*)(*,
size_t
,,,,
off_t
))
aSysˇŒ
[16].
xOrig
)

	)

174 
	#‹ig_mªm≠
 ((*(*)(*,
size_t
,size_t,,...))
aSysˇŒ
[17].
xOrig
)

	)

181 
	$tsIsFaû
(){

182 
gSysˇŒ
.
nCou¡
--;

183 if–
gSysˇŒ
.
nCou¡
==0 || (gSysˇŒ.
nFaû
 && gSysˇŒ.
bPîsi°
) ){

184 
gSysˇŒ
.
nFaû
++;

188 
	}
}

198 
	$tsEºno
(c⁄° *
zFunc
){

199 
i
;

200 
nFunc
 = 
	`°æí
(
zFunc
);

201 
i
=0; 
aSysˇŒ
[i].
zName
; i++){

202 if–
	`°æí
(
aSysˇŒ
[
i
].
zName
)!=
nFunc
 ) ;

203 if–
	`memcmp
(
aSysˇŒ
[
i
].
zName
, 
zFunc
, 
nFunc
) ) ;

204  
aSysˇŒ
[
i
].
cu°om_î∫o
;

207 
	`as£π
(0);

209 
	}
}

215 
	$tsIsFaûEºno
(c⁄° *
zFunc
){

216 if–
	`tsIsFaû
() ){

217 
î∫o
 = 
	`tsEºno
(
zFunc
);

221 
	}
}

226 
	$ts_›í
(c⁄° *
zFûe
, 
Êags
, 
mode
){

227 if–
	`tsIsFaûEºno
("open") ){

230  
	`‹ig_›í
(
zFûe
, 
Êags
, 
mode
);

231 
	}
}

236 
	$ts_˛o£
(
fd
){

237 if–
	`tsIsFaû
() ){

243 
	`‹ig_˛o£
(
fd
);

246  
	`‹ig_˛o£
(
fd
);

247 
	}
}

252 
	$ts_ac˚ss
(c⁄° *
zP©h
, 
mode
){

253 if–
	`tsIsFaû
() ){

256  
	`‹ig_ac˚ss
(
zP©h
, 
mode
);

257 
	}
}

262 *
	$ts_gëcwd
(*
zP©h
, 
size_t
 
nP©h
){

263 if–
	`tsIsFaû
() ){

264  
NULL
;

266  
	`‹ig_gëcwd
(
zP©h
, 
nP©h
);

267 
	}
}

272 
	$ts_°©
(c⁄° *
zP©h
, 
°©
 *
p
){

273 if–
	`tsIsFaû
() ){

276  
	`‹ig_°©
(
zP©h
, 
p
);

277 
	}
}

282 
	$ts_f°©
(
fd
, 
°©
 *
p
){

283 if–
	`tsIsFaûEºno
("fstat") ){

286  
	`‹ig_f°©
(
fd
, 
p
);

287 
	}
}

292 
	$ts_·runˇã
(
fd
, 
off_t
 
n
){

293 if–
	`tsIsFaûEºno
("ftruncate") ){

296  
	`‹ig_·runˇã
(
fd
, 
n
);

297 
	}
}

302 
	$ts_f˙é
(
fd
, 
cmd
, ... ){

303 
va_li°
 
≠
;

304 *
pArg
;

305 if–
	`tsIsFaûEºno
("fcntl") ){

308 
	`va_°¨t
(
≠
, 
cmd
);

309 
pArg
 = 
	`va_¨g
(
≠
, *);

310  
	`‹ig_f˙é
(
fd
, 
cmd
, 
pArg
);

311 
	}
}

316 
	$ts_ªad
(
fd
, *
aBuf
, 
size_t
 
nBuf
){

317 if–
	`tsIsFaûEºno
("read") ){

320  
	`‹ig_ªad
(
fd
, 
aBuf
, 
nBuf
);

321 
	}
}

326 
	$ts_¥ód
(
fd
, *
aBuf
, 
size_t
 
nBuf
, 
off_t
 
off
){

327 if–
	`tsIsFaûEºno
("pread") ){

330  
	`‹ig_¥ód
(
fd
, 
aBuf
, 
nBuf
, 
off
);

331 
	}
}

336 
	$ts_¥ód64
(
fd
, *
aBuf
, 
size_t
 
nBuf
, 
sqlôe3_uöt64
 
off
){

337 if–
	`tsIsFaûEºno
("pread64") ){

340  
	`‹ig_¥ód64
(
fd
, 
aBuf
, 
nBuf
, 
off
);

341 
	}
}

346 
	$ts_wrôe
(
fd
, c⁄° *
aBuf
, 
size_t
 
nBuf
){

347 if–
	`tsIsFaûEºno
("write") ){

348 if–
	`tsEºno
("wrôe")==
EINTR
 ) 
	`‹ig_wrôe
(
fd
, 
aBuf
, 
nBuf
/2);

351  
	`‹ig_wrôe
(
fd
, 
aBuf
, 
nBuf
);

352 
	}
}

357 
	$ts_pwrôe
(
fd
, c⁄° *
aBuf
, 
size_t
 
nBuf
, 
off_t
 
off
){

358 if–
	`tsIsFaûEºno
("pwrite") ){

361  
	`‹ig_pwrôe
(
fd
, 
aBuf
, 
nBuf
, 
off
);

362 
	}
}

367 
	$ts_pwrôe64
(
fd
, c⁄° *
aBuf
, 
size_t
 
nBuf
, 
sqlôe3_uöt64
 
off
){

368 if–
	`tsIsFaûEºno
("pwrite64") ){

371  
	`‹ig_pwrôe64
(
fd
, 
aBuf
, 
nBuf
, 
off
);

372 
	}
}

377 
	$ts_fchmod
(
fd
, 
mode_t
 
mode
){

378 if–
	`tsIsFaû
() ){

381  
	`‹ig_fchmod
(
fd
, 
mode
);

382 
	}
}

393 
	$ts_ÁŒoˇã
(
fd
, 
off_t
 
off
, off_à
Àn
){

394 if–
	`tsIsFaû
() ){

395  
	`tsEºno
("fallocate");

397  
	`‹ig_ÁŒoˇã
(
fd
, 
off
, 
Àn
);

398 
	}
}

400 *
	$ts_mm≠
(

401 *
pAddr
,

402 
size_t
 
nByã
,

403 
¥Ÿ
,

404 
Êags
,

405 
fd
,

406 
off_t
 
iOff


408 if–
	`tsIsFaûEºno
("mmap") ){

409  
MAP_FAILED
;

411  
	`‹ig_mm≠
(
pAddr
, 
nByã
, 
¥Ÿ
, 
Êags
, 
fd
, 
iOff
);

412 
	}
}

414 *
	$ts_mªm≠
(*
a
, 
size_t
 
b
, size_à
c
, 
d
, ...){

415 
va_li°
 
≠
;

416 *
pArg
;

417 if–
	`tsIsFaûEºno
("mremap") ){

418  
MAP_FAILED
;

420 
	`va_°¨t
(
≠
, 
d
);

421 
pArg
 = 
	`va_¨g
(
≠
, *);

422  
	`‹ig_mªm≠
(
a
, 
b
, 
c
, 
d
, 
pArg
);

423 
	}
}

425 
SQLITE_TCLAPI
 
	$ã°_sysˇŒ_ö°Æl
(

426 * 
˛õ¡D©a
,

427 
T˛_I¡îp
 *
öãΩ
,

428 
objc
,

429 
T˛_Obj
 *
CONST
 
objv
[]

431 
sqlôe3_vfs
 *
pVfs
;

432 
nEÀm
;

433 
i
;

434 
T˛_Obj
 **
≠EÀm
;

436 if–
objc
!=3 ){

437 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "SYSCALL-LIST");

438  
TCL_ERROR
;

440 if–
	`T˛_Li°ObjGëEÀmíts
(
öãΩ
, 
objv
[2], &
nEÀm
, &
≠EÀm
) ){

441  
TCL_ERROR
;

443 
pVfs
 = 
	`sqlôe3_vfs_föd
(0);

445 
i
=0; i<
nEÀm
; i++){

446 
iCÆl
;

447 
rc
 = 
	`T˛_GëIndexFromObjSåu˘
(
öãΩ
,

448 
≠EÀm
[
i
], 
aSysˇŒ
, ◊SysˇŒ[0]), "sy°em-ˇŒ", 0, &
iCÆl


450 if–
rc
 ) Ñc;

451 if–
aSysˇŒ
[
iCÆl
].
xOrig
==0 ){

452 
aSysˇŒ
[
iCÆl
].
xOrig
 = 
pVfs
->
	`xGëSy°emCÆl
’Vfs,áSysˇŒ[iCÆl].
zName
);

453 
pVfs
->
	`xSëSy°emCÆl
’Vfs, 
aSysˇŒ
[
iCÆl
].
zName
,áSysˇŒ[iCÆl].
xTe°
);

455 
aSysˇŒ
[
iCÆl
].
cu°om_î∫o
 =áSysˇŒ[iCÆl].
deÁu…_î∫o
;

458  
TCL_OK
;

459 
	}
}

461 
SQLITE_TCLAPI
 
	$ã°_sysˇŒ_unö°Æl
(

462 * 
˛õ¡D©a
,

463 
T˛_I¡îp
 *
öãΩ
,

464 
objc
,

465 
T˛_Obj
 *
CONST
 
objv
[]

467 
sqlôe3_vfs
 *
pVfs
;

468 
i
;

470 if–
objc
!=2 ){

471 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "");

472  
TCL_ERROR
;

475 
pVfs
 = 
	`sqlôe3_vfs_föd
(0);

476 
i
=0; 
aSysˇŒ
[i].
zName
; i++){

477 if–
aSysˇŒ
[
i
].
xOrig
 ){

478 
pVfs
->
	`xSëSy°emCÆl
’Vfs, 
aSysˇŒ
[
i
].
zName
, 0);

479 
aSysˇŒ
[
i
].
xOrig
 = 0;

482  
TCL_OK
;

483 
	}
}

485 
SQLITE_TCLAPI
 
	$ã°_sysˇŒ_ª£t
(

486 * 
˛õ¡D©a
,

487 
T˛_I¡îp
 *
öãΩ
,

488 
objc
,

489 
T˛_Obj
 *
CONST
 
objv
[]

491 
sqlôe3_vfs
 *
pVfs
;

492 
i
;

493 
rc
;

495 if–
objc
!=2 && objc!=3 ){

496 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "");

497  
TCL_ERROR
;

500 
pVfs
 = 
	`sqlôe3_vfs_föd
(0);

501 if–
objc
==2 ){

502 
rc
 = 
pVfs
->
	`xSëSy°emCÆl
(pVfs, 0, 0);

503 
i
=0; 
aSysˇŒ
[i].
zName
; i++ËaSysˇŒ[i].
xOrig
 = 0;

505 
nFunc
;

506 *
zFunc
 = 
	`T˛_GëSåögFromObj
(
objv
[2], &
nFunc
);

507 
rc
 = 
pVfs
->
	`xSëSy°emCÆl
’Vfs, 
	`T˛_GëSåög
(
objv
[2]), 0);

508 
i
=0; 
rc
==
SQLITE_OK
 && 
aSysˇŒ
[i].
zName
; i++){

509 if–
	`°æí
(
aSysˇŒ
[
i
].
zName
)!=
nFunc
 ) ;

510 if–
	`memcmp
(
aSysˇŒ
[
i
].
zName
, 
zFunc
, 
nFunc
) ) ;

511 
aSysˇŒ
[
i
].
xOrig
 = 0;

514 if–
rc
!=
SQLITE_OK
 ){

515 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
(
	`sqlôe3EºName
(
rc
), -1));

516  
TCL_ERROR
;

519 
	`T˛_Re£tResu…
(
öãΩ
);

520  
TCL_OK
;

521 
	}
}

523 
SQLITE_TCLAPI
 
	$ã°_sysˇŒ_exi°s
(

524 * 
˛õ¡D©a
,

525 
T˛_I¡îp
 *
öãΩ
,

526 
objc
,

527 
T˛_Obj
 *
CONST
 
objv
[]

529 
sqlôe3_vfs
 *
pVfs
;

530 
sqlôe3_sysˇŒ_±r
 
x
;

532 if–
objc
!=3 ){

533 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "");

534  
TCL_ERROR
;

537 
pVfs
 = 
	`sqlôe3_vfs_föd
(0);

538 
x
 = 
pVfs
->
	`xGëSy°emCÆl
’Vfs, 
	`T˛_GëSåög
(
objv
[2]));

540 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewBoﬁónObj
(
x
!=0));

541  
TCL_OK
;

542 
	}
}

544 
SQLITE_TCLAPI
 
	$ã°_sysˇŒ_Áu…
(

545 * 
˛õ¡D©a
,

546 
T˛_I¡îp
 *
öãΩ
,

547 
objc
,

548 
T˛_Obj
 *
CONST
 
objv
[]

550 
nCou¡
 = 0;

551 
bPîsi°
 = 0;

553 if–
objc
!=2 && objc!=4 ){

554 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "?COUNT PERSIST?");

555  
TCL_ERROR
;

558 if–
objc
==4 ){

559 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
nCou¡
)

560 || 
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[3], &
bPîsi°
)

562  
TCL_ERROR
;

566 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
gSysˇŒ
.
nFaû
));

567 
gSysˇŒ
.
nCou¡
 =ÇCount;

568 
gSysˇŒ
.
bPîsi°
 = bPersist;

569 
gSysˇŒ
.
nFaû
 = 0;

570  
TCL_OK
;

571 
	}
}

573 
SQLITE_TCLAPI
 
	$ã°_sysˇŒ_î∫o
(

574 * 
˛õ¡D©a
,

575 
T˛_I¡îp
 *
öãΩ
,

576 
objc
,

577 
T˛_Obj
 *
CONST
 
objv
[]

579 
iCÆl
;

580 
iEºno
;

581 
rc
;

583 
	sEºno
 {

584 c⁄° *
z
;

585 
i
;

586 } 
aEºno
[] = {

587 { "EACCES", 
EACCES
 },

588 { "EINTR", 
EINTR
 },

589 { "EIO", 
EIO
 },

590 { "EOVERFLOW", 
EOVERFLOW
 },

591 { "ENOMEM", 
ENOMEM
 },

592 { "EAGAIN", 
EAGAIN
 },

593 { "ETIMEDOUT", 
ETIMEDOUT
 },

594 { "EBUSY", 
EBUSY
 },

595 { "EPERM", 
EPERM
 },

596 { "EDEADLK", 
EDEADLK
 },

597 { "ENOLCK", 
ENOLCK
 },

601 if–
objc
!=4 ){

602 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "SYSCALL ERRNO");

603  
TCL_ERROR
;

606 
rc
 = 
	`T˛_GëIndexFromObjSåu˘
(
öãΩ
,

607 
objv
[2], 
aSysˇŒ
, ◊SysˇŒ[0]), "sy°em-ˇŒ", 0, &
iCÆl


609 if–
rc
!=
TCL_OK
 ) Ñc;

610 
rc
 = 
	`T˛_GëIndexFromObjSåu˘
(
öãΩ
,

611 
objv
[3], 
aEºno
, ◊Eºno[0]), "î∫o", 0, &
iEºno


613 if–
rc
!=
TCL_OK
 ) Ñc;

615 
aSysˇŒ
[
iCÆl
].
cu°om_î∫o
 = 
aEºno
[
iEºno
].
i
;

616  
TCL_OK
;

617 
	}
}

619 
SQLITE_TCLAPI
 
	$ã°_sysˇŒ_li°
(

620 * 
˛õ¡D©a
,

621 
T˛_I¡îp
 *
öãΩ
,

622 
objc
,

623 
T˛_Obj
 *
CONST
 
objv
[]

625 c⁄° *
zSys
;

626 
sqlôe3_vfs
 *
pVfs
;

627 
T˛_Obj
 *
pLi°
;

629 if–
objc
!=2 ){

630 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "");

631  
TCL_ERROR
;

634 
pVfs
 = 
	`sqlôe3_vfs_föd
(0);

635 
pLi°
 = 
	`T˛_NewObj
();

636 
	`T˛_In¸RefCou¡
(
pLi°
);

637 
zSys
 = 
pVfs
->
	`xNextSy°emCÆl
(pVfs, 0);

638 
zSys
!=0;

639 
zSys
 = 
pVfs
->
	`xNextSy°emCÆl
(pVfs, zSys)

641 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pLi°
, 
	`T˛_NewSåögObj
(
zSys
, -1));

644 
	`T˛_SëObjResu…
(
öãΩ
, 
pLi°
);

645 
	`T˛_De¸RefCou¡
(
pLi°
);

646  
TCL_OK
;

647 
	}
}

649 
SQLITE_TCLAPI
 
	$ã°_sysˇŒ_deÁu…vfs
(

650 * 
˛õ¡D©a
,

651 
T˛_I¡îp
 *
öãΩ
,

652 
objc
,

653 
T˛_Obj
 *
CONST
 
objv
[]

655 
sqlôe3_vfs
 *
pVfs
;

657 if–
objc
!=2 ){

658 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "");

659  
TCL_ERROR
;

662 
pVfs
 = 
	`sqlôe3_vfs_föd
(0);

663 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
(
pVfs
->
zName
, -1));

664  
TCL_OK
;

665 
	}
}

667 
	$ts_gë∑gesize
(){

668  
gSysˇŒ
.
pgsz
;

669 
	}
}

671 
SQLITE_TCLAPI
 
	$ã°_sysˇŒ_∑gesize
(

672 * 
˛õ¡D©a
,

673 
T˛_I¡îp
 *
öãΩ
,

674 
objc
,

675 
T˛_Obj
 *
CONST
 
objv
[]

677 
sqlôe3_vfs
 *
pVfs
 = 
	`sqlôe3_vfs_föd
(0);

678 
pgsz
;

679 if–
objc
!=3 ){

680 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "PGSZ");

681  
TCL_ERROR
;

683 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
pgsz
) ){

684  
TCL_ERROR
;

687 if–
pgsz
<0 ){

688 if–
gSysˇŒ
.
‹ig_gë∑gesize
 ){

689 
pVfs
->
	`xSëSy°emCÆl
’Vfs, "gë∑gesize", 
gSysˇŒ
.
‹ig_gë∑gesize
);

692 if–
pgsz
<512 || (pgsz & (pgsz-1)) ){

693 
	`T˛_AµídResu…
(
öãΩ
, "pgsz out ofÑange", 0);

694  
TCL_ERROR
;

696 
gSysˇŒ
.
‹ig_gë∑gesize
 = 
pVfs
->
	`xGëSy°emCÆl
(pVfs, "getpagesize");

697 
gSysˇŒ
.
pgsz
 =Ögsz;

698 
pVfs
->
	`xSëSy°emCÆl
(

699 
pVfs
, "gë∑gesize", (
sqlôe3_sysˇŒ_±r
)
ts_gë∑gesize


703  
TCL_OK
;

704 
	}
}

706 
SQLITE_TCLAPI
 
	$ã°_sysˇŒ
(

707 * 
˛õ¡D©a
,

708 
T˛_I¡îp
 *
öãΩ
,

709 
objc
,

710 
T˛_Obj
 *
CONST
 
objv
[]

712 
	sSysˇŒCmd
 {

713 c⁄° *
zName
;

714 
T˛_ObjCmdProc
 *
xCmd
;

715 } 
aCmd
[] = {

716 { "Áu…", 
ã°_sysˇŒ_Áu…
 },

717 { "ö°Æl", 
ã°_sysˇŒ_ö°Æl
 },

718 { "unö°Æl", 
ã°_sysˇŒ_unö°Æl
 },

719 { "ª£t", 
ã°_sysˇŒ_ª£t
 },

720 { "î∫o", 
ã°_sysˇŒ_î∫o
 },

721 { "exi°s", 
ã°_sysˇŒ_exi°s
 },

722 { "li°", 
ã°_sysˇŒ_li°
 },

723 { "deÁu…vfs", 
ã°_sysˇŒ_deÁu…vfs
 },

724 { "∑gesize", 
ã°_sysˇŒ_∑gesize
 },

727 
iCmd
;

728 
rc
;

729 
sqlôe3_vfs
 *
pVfs
 = 
	`sqlôe3_vfs_föd
(0);

731 if–
objc
<2 ){

732 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "SUB-COMMAND ...");

733  
TCL_ERROR
;

735 if–
pVfs
->
iVîsi⁄
<3 ||ÖVfs->
xSëSy°emCÆl
==0 ){

736 
	`T˛_AµídResu…
(
öãΩ
, "VFS doesÇot support xSetSystemCall", 0);

737 
rc
 = 
TCL_ERROR
;

739 
rc
 = 
	`T˛_GëIndexFromObjSåu˘
(
öãΩ
,

740 
objv
[1], 
aCmd
, ◊Cmd[0]), "sub-comm™d", 0, &
iCmd


743 if–
rc
!=
TCL_OK
 ) Ñc;

744  
aCmd
[
iCmd
].
	`xCmd
(
˛õ¡D©a
, 
öãΩ
, 
objc
, 
objv
);

745 
	}
}

747 
	$Sqlôëe°SysˇŒ_Inô
(
T˛_I¡îp
 *
öãΩ
){

748 
	sSysˇŒCmd
 {

749 c⁄° *
zName
;

750 
T˛_ObjCmdProc
 *
xCmd
;

751 } 
aCmd
[] = {

752 { "ã°_sysˇŒ", 
ã°_sysˇŒ
},

754 
i
;

756 
i
=0; i<(
aCmd
)/(aCmd[0]); i++){

757 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
aCmd
[
i
].
zName
,áCmd[i].
xCmd
, 0, 0);

759  
TCL_OK
;

760 
	}
}

762 
	$Sqlôëe°SysˇŒ_Inô
(
T˛_I¡îp
 *
öãΩ
){

763  
TCL_OK
;

764 
	}
}

	@test_tclvar.c

19 
	~"sqlôeI¡.h
"

20 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

21 
	~"sqlôe_t˛.h
"

23 
	~"t˛.h
"

25 
	~<°dlib.h
>

26 
	~<°rög.h
>

28 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


33 
	#TCLVAR_NAME_EQ
 'e'

	)

34 
	#TCLVAR_NAME_MATCH
 'm'

	)

35 
	#TCLVAR_VALUE_GLOB
 'g'

	)

36 
	#TCLVAR_VALUE_REGEXP
 'r'

	)

37 
	#TCLVAR_VALUE_LIKE
 'l'

	)

39 
t˛v¨_vèb
 
	tt˛v¨_vèb
;

40 
t˛v¨_curs‹
 
	tt˛v¨_curs‹
;

45 
	st˛v¨_vèb
 {

46 
sqlôe3_vèb
 
	mba£
;

47 
T˛_I¡îp
 *
	möãΩ
;

51 
	st˛v¨_curs‹
 {

52 
sqlôe3_vèb_curs‹
 
	mba£
;

54 
T˛_Obj
 *
	mpLi°1
;

55 
T˛_Obj
 *
	mpLi°2
;

56 
	mi1
;

57 
	mi2
;

61 
	$t˛v¨C⁄√˘
(

62 
sqlôe3
 *
db
,

63 *
pAux
,

64 
¨gc
, c⁄° *c⁄°*
¨gv
,

65 
sqlôe3_vèb
 **
µVèb
,

66 **
pzEº


68 
t˛v¨_vèb
 *
pVèb
;

69 c⁄° 
zSchema
[] =

71 
pVèb
 = 
	`sqlôe3MÆlocZîo
( (*pVtab) );

72 if–
pVèb
==0 )  
SQLITE_NOMEM
;

73 *
µVèb
 = &
pVèb
->
ba£
;

74 
pVèb
->
öãΩ
 = (
T˛_I¡îp
 *)
pAux
;

75 
	`sqlôe3_de˛¨e_vèb
(
db
, 
zSchema
);

76  
SQLITE_OK
;

77 
	}
}

81 
	$t˛v¨Disc⁄√˘
(
sqlôe3_vèb
 *
pVèb
){

82 
	`sqlôe3_‰ì
(
pVèb
);

83  
SQLITE_OK
;

84 
	}
}

90 
	$t˛v¨O≥n
(
sqlôe3_vèb
 *
pVTab
, 
sqlôe3_vèb_curs‹
 **
µCurs‹
){

91 
t˛v¨_curs‹
 *
pCur
;

92 
pCur
 = 
	`sqlôe3MÆlocZîo
((
t˛v¨_curs‹
));

93 *
µCurs‹
 = &
pCur
->
ba£
;

94  
SQLITE_OK
;

95 
	}
}

100 
	$t˛v¨Clo£
(
sqlôe3_vèb_curs‹
 *
cur
){

101 
t˛v¨_curs‹
 *
pCur
 = (t˛v¨_curs‹ *)
cur
;

102 if–
pCur
->
pLi°1
 ){

103 
	`T˛_De¸RefCou¡
(
pCur
->
pLi°1
);

105 if–
pCur
->
pLi°2
 ){

106 
	`T˛_De¸RefCou¡
(
pCur
->
pLi°2
);

108 
	`sqlôe3_‰ì
(
pCur
);

109  
SQLITE_OK
;

110 
	}
}

115 
	$√xt2
(
T˛_I¡îp
 *
öãΩ
, 
t˛v¨_curs‹
 *
pCur
, 
T˛_Obj
 *
pObj
){

116 
T˛_Obj
 *
p
;

118 if–
pObj
 ){

119 if–!
pCur
->
pLi°2
 ){

120 
p
 = 
	`T˛_NewSåögObj
("arrayÇames", -1);

121 
	`T˛_In¸RefCou¡
(
p
);

122 
	`T˛_Li°ObjAµídEÀmít
(0, 
p
, 
pObj
);

123 
	`T˛_EvÆObjEx
(
öãΩ
, 
p
, 
TCL_EVAL_GLOBAL
);

124 
	`T˛_De¸RefCou¡
(
p
);

125 
pCur
->
pLi°2
 = 
	`T˛_GëObjResu…
(
öãΩ
);

126 
	`T˛_In¸RefCou¡
(
pCur
->
pLi°2
);

127 
	`as£π
–
pCur
->
i2
==0 );

129 
n
 = 0;

130 
pCur
->
i2
++;

131 
	`T˛_Li°ObjLígth
(0, 
pCur
->
pLi°2
, &
n
);

132 if–
pCur
->
i2
>=
n
 ){

133 
	`T˛_De¸RefCou¡
(
pCur
->
pLi°2
);

134 
pCur
->
pLi°2
 = 0;

135 
pCur
->
i2
 = 0;

142 
	}
}

144 
	$t˛v¨Next
(
sqlôe3_vèb_curs‹
 *
cur
){

145 
T˛_Obj
 *
pObj
;

146 
n
 = 0;

147 
ok
 = 0;

149 
t˛v¨_curs‹
 *
pCur
 = (t˛v¨_curs‹ *)
cur
;

150 
T˛_I¡îp
 *
öãΩ
 = ((
t˛v¨_vèb
 *)(
cur
->
pVèb
))->interp;

152 
	`T˛_Li°ObjLígth
(0, 
pCur
->
pLi°1
, &
n
);

153  !
ok
 && 
pCur
->
i1
<
n
 ){

154 
	`T˛_Li°ObjIndex
(0, 
pCur
->
pLi°1
,ÖCur->
i1
, &
pObj
);

155 
ok
 = 
	`√xt2
(
öãΩ
, 
pCur
, 
pObj
);

156 if–!
ok
 ){

157 
pCur
->
i1
++;

162 
	}
}

164 
	$t˛v¨Fûãr
(

165 
sqlôe3_vèb_curs‹
 *
pVèbCurs‹
,

166 
idxNum
, c⁄° *
idxSå
,

167 
¨gc
, 
sqlôe3_vÆue
 **
¨gv


169 
t˛v¨_curs‹
 *
pCur
 = (t˛v¨_curs‹ *)
pVèbCurs‹
;

170 
T˛_I¡îp
 *
öãΩ
 = ((
t˛v¨_vèb
 *)(
pVèbCurs‹
->
pVèb
))->interp;

171 
T˛_Obj
 *
p
 = 
	`T˛_NewSåögObj
("tclvar_filter_cmd", -1);

173 c⁄° *
zEq
 = "";

174 c⁄° *
zM©ch
 = "";

175 c⁄° *
zGlob
 = "";

176 c⁄° *
zRegexp
 = "";

177 c⁄° *
zLike
 = "";

178 
i
;

180 
i
=0; 
idxSå
[i]; i++){

181  
idxSå
[
i
] ){

182 
TCLVAR_NAME_EQ
:

183 
zEq
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[
i
]);

185 
TCLVAR_NAME_MATCH
:

186 
zM©ch
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[
i
]);

188 
TCLVAR_VALUE_GLOB
:

189 
zGlob
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[
i
]);

191 
TCLVAR_VALUE_REGEXP
:

192 
zRegexp
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[
i
]);

194 
TCLVAR_VALUE_LIKE
:

195 
zLike
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[
i
]);

198 
	`as£π
( 0 );

202 
	`T˛_In¸RefCou¡
(
p
);

203 
	`T˛_Li°ObjAµídEÀmít
(0, 
p
, 
	`T˛_NewSåögObj
(
zEq
, -1));

204 
	`T˛_Li°ObjAµídEÀmít
(0, 
p
, 
	`T˛_NewSåögObj
(
zM©ch
, -1));

205 
	`T˛_Li°ObjAµídEÀmít
(0, 
p
, 
	`T˛_NewSåögObj
(
zGlob
, -1));

206 
	`T˛_Li°ObjAµídEÀmít
(0, 
p
, 
	`T˛_NewSåögObj
(
zRegexp
, -1));

207 
	`T˛_Li°ObjAµídEÀmít
(0, 
p
, 
	`T˛_NewSåögObj
(
zLike
, -1));

209 
	`T˛_EvÆObjEx
(
öãΩ
, 
p
, 
TCL_EVAL_GLOBAL
);

210 if–
pCur
->
pLi°1
 ){

211 
	`T˛_De¸RefCou¡
(
pCur
->
pLi°1
);

213 if–
pCur
->
pLi°2
 ){

214 
	`T˛_De¸RefCou¡
(
pCur
->
pLi°2
);

215 
pCur
->
pLi°2
 = 0;

217 
pCur
->
i1
 = 0;

218 
pCur
->
i2
 = 0;

219 
pCur
->
pLi°1
 = 
	`T˛_GëObjResu…
(
öãΩ
);

220 
	`T˛_In¸RefCou¡
(
pCur
->
pLi°1
);

222 
	`T˛_De¸RefCou¡
(
p
);

223  
	`t˛v¨Next
(
pVèbCurs‹
);

224 
	}
}

226 
	$t˛v¨Cﬁumn
(
sqlôe3_vèb_curs‹
 *
cur
, 
sqlôe3_c⁄ãxt
 *
˘x
, 
i
){

227 
T˛_Obj
 *
p1
;

228 
T˛_Obj
 *
p2
;

229 c⁄° *
z1
;

230 c⁄° *
z2
 = "";

231 
t˛v¨_curs‹
 *
pCur
 = (t˛v¨_curs‹*)
cur
;

232 
T˛_I¡îp
 *
öãΩ
 = ((
t˛v¨_vèb
 *)
cur
->
pVèb
)->interp;

234 
	`T˛_Li°ObjIndex
(
öãΩ
, 
pCur
->
pLi°1
,ÖCur->
i1
, &
p1
);

235 
	`T˛_Li°ObjIndex
(
öãΩ
, 
pCur
->
pLi°2
,ÖCur->
i2
, &
p2
);

236 
z1
 = 
	`T˛_GëSåög
(
p1
);

237 if–
p2
 ){

238 
z2
 = 
	`T˛_GëSåög
(
p2
);

240 
i
) {

242 
	`sqlôe3_ªsu…_ãxt
(
˘x
, 
z1
, -1, 
SQLITE_TRANSIENT
);

246 
	`sqlôe3_ªsu…_ãxt
(
˘x
, 
z2
, -1, 
SQLITE_TRANSIENT
);

250 
T˛_Obj
 *
pVÆ
 = 
	`T˛_GëV¨2Ex
(
öãΩ
, 
z1
, *
z2
?z2:0, 
TCL_GLOBAL_ONLY
);

251 
	`sqlôe3_ªsu…_ãxt
(
˘x
, 
	`T˛_GëSåög
(
pVÆ
), -1, 
SQLITE_TRANSIENT
);

255  
SQLITE_OK
;

256 
	}
}

258 
	$t˛v¨Rowid
(
sqlôe3_vèb_curs‹
 *
cur
, 
sqlôe_öt64
 *
pRowid
){

259 *
pRowid
 = 0;

260  
SQLITE_OK
;

261 
	}
}

263 
	$t˛v¨Eof
(
sqlôe3_vèb_curs‹
 *
cur
){

264 
t˛v¨_curs‹
 *
pCur
 = (t˛v¨_curs‹*)
cur
;

265  (
pCur
->
pLi°2
?0:1);

266 
	}
}

276 
	$t˛v¨AddToIdx°r
(*
zSå
, 
x
){

277 
i
;

278 
i
=0; 
zSå
[i]; i++){

279 if–
zSå
[
i
]==
x
 )  1;

281 
zSå
[
i
] = 
x
;

282 
zSå
[
i
+1] = '\0';

284 
	}
}

290 
	$t˛v¨SëOmô
(
T˛_I¡îp
 *
öãΩ
){

291 
rc
;

292 
ªs
 = 0;

293 
T˛_Obj
 *
pRes
;

294 
rc
 = 
	`T˛_EvÆ
(
öãΩ
,

297 if–
rc
==
TCL_OK
 ){

298 
pRes
 = 
	`T˛_GëObjResu…
(
öãΩ
);

299 
rc
 = 
	`T˛_GëBoﬁónFromObj
(0, 
pRes
, &
ªs
);

301  (
rc
==
TCL_OK
 && 
ªs
);

302 
	}
}

317 
	$t˛v¨Be°Index
(
sqlôe3_vèb
 *
èb
, 
sqlôe3_ödex_öfo
 *
pIdxInfo
){

318 
t˛v¨_vèb
 *
pTab
 = (t˛v¨_vèb*)
èb
;

319 
ii
;

320 *
zSå
 = 
	`sqlôe3_mÆloc
(32);

321 
iSå
 = 0;

323 if–
zSå
==0 )  
SQLITE_NOMEM
;

324 
zSå
[0] = '\0';

326 
ii
=0; ii<
pIdxInfo
->
nC⁄°øöt
; ii++){

327 
sqlôe3_ödex_c⁄°øöt
 c⁄° *
pC⁄s
 = &
pIdxInfo
->
aC⁄°øöt
[
ii
];

328 
sqlôe3_ödex_c⁄°øöt_ußge
 *
pUßge
;

330 
pUßge
 = &
pIdxInfo
->
aC⁄°øötUßge
[
ii
];

331 if–
pC⁄s
->
ußbÀ
 ){

333 if–
pC⁄s
->
›
==
SQLITE_INDEX_CONSTRAINT_EQ
 &&ÖC⁄s->
iCﬁumn
==0 ){

334 if–0==
	`t˛v¨AddToIdx°r
(
zSå
, 
TCLVAR_NAME_EQ
) ){

335 
pUßge
->
¨gvIndex
 = ++
iSå
;

336 
pUßge
->
omô
 = 0;

341 if–
pC⁄s
->
›
==
SQLITE_INDEX_CONSTRAINT_MATCH
 &&ÖC⁄s->
iCﬁumn
==0 ){

342 if–0==
	`t˛v¨AddToIdx°r
(
zSå
, 
TCLVAR_NAME_MATCH
) ){

343 
pUßge
->
¨gvIndex
 = ++
iSå
;

344 
pUßge
->
omô
 = 1;

349 if–
pC⁄s
->
›
==
SQLITE_INDEX_CONSTRAINT_GLOB
 &&ÖC⁄s->
iCﬁumn
==2 ){

350 if–0==
	`t˛v¨AddToIdx°r
(
zSå
, 
TCLVAR_VALUE_GLOB
) ){

351 
pUßge
->
¨gvIndex
 = ++
iSå
;

352 
pUßge
->
omô
 = 
	`t˛v¨SëOmô
(
pTab
->
öãΩ
);

357 if–
pC⁄s
->
›
==
SQLITE_INDEX_CONSTRAINT_REGEXP
 &&ÖC⁄s->
iCﬁumn
==2 ){

358 if–0==
	`t˛v¨AddToIdx°r
(
zSå
, 
TCLVAR_VALUE_REGEXP
) ){

359 
pUßge
->
¨gvIndex
 = ++
iSå
;

360 
pUßge
->
omô
 = 
	`t˛v¨SëOmô
(
pTab
->
öãΩ
);

365 if–
pC⁄s
->
›
==
SQLITE_INDEX_CONSTRAINT_LIKE
 &&ÖC⁄s->
iCﬁumn
==2 ){

366 if–0==
	`t˛v¨AddToIdx°r
(
zSå
, 
TCLVAR_VALUE_LIKE
) ){

367 
pUßge
->
¨gvIndex
 = ++
iSå
;

368 
pUßge
->
omô
 = 
	`t˛v¨SëOmô
(
pTab
->
öãΩ
);

373 
pIdxInfo
->
idxSå
 = 
zSå
;

374 
pIdxInfo
->
√edToFªeIdxSå
 = 1;

376  
SQLITE_OK
;

377 
	}
}

383 
sqlôe3_moduÀ
 
	gt˛v¨ModuÀ
 = {

385 
t˛v¨C⁄√˘
,

386 
t˛v¨C⁄√˘
,

387 
t˛v¨Be°Index
,

388 
t˛v¨Disc⁄√˘
,

389 
t˛v¨Disc⁄√˘
,

390 
t˛v¨O≥n
,

391 
t˛v¨Clo£
,

392 
t˛v¨Fûãr
,

393 
t˛v¨Next
,

394 
t˛v¨Eof
,

395 
t˛v¨Cﬁumn
,

396 
t˛v¨Rowid
,

409 
gëDbPoöãr
(
T˛_I¡îp
 *
öãΩ
, c⁄° *
zA
, 
sqlôe3
 **
µDb
);

414 
SQLITE_TCLAPI
 
	$ªgi°î_t˛v¨_moduÀ
(

415 
Clõ¡D©a
 
˛õ¡D©a
,

416 
T˛_I¡îp
 *
öãΩ
,

417 
objc
,

418 
T˛_Obj
 *
CONST
 
objv
[]

420 
rc
 = 
TCL_OK
;

421 
sqlôe3
 *
db
;

422 if–
objc
!=2 ){

423 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB");

424  
TCL_ERROR
;

426 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

427 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


428 
	`sqlôe3_¸óã_moduÀ
(
db
, "t˛v¨", &
t˛v¨ModuÀ
, (*)
öãΩ
);

429 
rc
 = 
	`T˛_EvÆ
(
öãΩ
,

451  
rc
;

452 
	}
}

460 
	$Sqlôëe°t˛v¨_Inô
(
T˛_I¡îp
 *
öãΩ
){

461 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


463 *
zName
;

464 
T˛_ObjCmdProc
 *
xProc
;

465 *
˛õ¡D©a
;

466 } 
aObjCmd
[] = {

467 { "ªgi°î_t˛v¨_moduÀ", 
ªgi°î_t˛v¨_moduÀ
, 0 },

469 
i
;

470 
i
=0; i<(
aObjCmd
)/(aObjCmd[0]); i++){

471 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
aObjCmd
[
i
].
zName
,

472 
aObjCmd
[
i
].
xProc
,áObjCmd[i].
˛õ¡D©a
, 0);

475  
TCL_OK
;

476 
	}
}

	@test_thread.c

18 
	~"sqlôeI¡.h
"

19 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

20 
	~"sqlôe_t˛.h
"

22 
	~"t˛.h
"

25 #i‡
SQLITE_THREADSAFE


27 
	~<î∫o.h
>

29 #i‡!
deföed
(
_MSC_VER
)

30 
	~<uni°d.h
>

36 
SqlThªad
 
	tSqlThªad
;

37 
	sSqlThªad
 {

38 
T˛_ThªadId
 
	m∑ª¡
;

39 
T˛_I¡îp
 *
	möãΩ
;

40 *
	mzS¸ùt
;

41 *
	mzV¨«me
;

51 
EvÆEvít
 
	tEvÆEvít
;

52 
	sEvÆEvít
 {

53 
T˛_Evít
 
	mba£
;

54 *
	mzS¸ùt
;

55 
T˛_I¡îp
 *
	möãΩ
;

58 
T˛_ObjCmdProc
 
	gsq…hªad_¥oc
;

59 
T˛_ObjCmdProc
 
	g˛ock_£c⁄ds_¥oc
;

60 #i‡
SQLITE_OS_UNIX
 && 
deföed
(
SQLITE_ENABLE_UNLOCK_NOTIFY
)

61 
T˛_ObjCmdProc
 
	gblockög_°ï_¥oc
;

62 
T˛_ObjCmdProc
 
	gblockög_¥ï¨e_v2_¥oc
;

64 
Sqlôëe°1_Inô
(
T˛_I¡îp
 *);

65 
Sqlôe3_Inô
(
T˛_I¡îp
 *);

68 c⁄° *
sqlôe3EºName
();

71 *
sqlôe3Te°TextToPå
(const *);

72 
gëDbPoöãr
(
T˛_I¡îp
 *, c⁄° *, 
sqlôe3
 **);

73 
sqlôe3Te°MakePoöãrSå
(
T˛_I¡îp
 *, *, *);

74 
sqlôe3Te°EºCode
(
T˛_I¡îp
 *, 
sqlôe3
 *, );

79 
SQLITE_TCLAPI
 
	$t˛S¸ùtEvít
(
T˛_Evít
 *
evPå
, 
Êags
){

80 
rc
;

81 
EvÆEvít
 *
p
 = (EvÆEvíà*)
evPå
;

82 
rc
 = 
	`T˛_EvÆ
(
p
->
öãΩ
,Ö->
zS¸ùt
);

83 if–
rc
!=
TCL_OK
 ){

84 
	`T˛_BackgroundEº‹
(
p
->
öãΩ
);

86 
	`UNUSED_PARAMETER
(
Êags
);

88 
	}
}

94 
	$po°ToP¨ít
(
SqlThªad
 *
p
, 
T˛_Obj
 *
pS¸ùt
){

95 
EvÆEvít
 *
pEvít
;

96 *
zMsg
;

97 
nMsg
;

99 
zMsg
 = 
	`T˛_GëSåögFromObj
(
pS¸ùt
, &
nMsg
);

100 
pEvít
 = (
EvÆEvít
 *)
	`ckÆloc
((EvÆEvít)+
nMsg
+1);

101 
pEvít
->
ba£
.
√xtPå
 = 0;

102 
pEvít
->
ba£
.
¥oc
 = 
t˛S¸ùtEvít
;

103 
pEvít
->
zS¸ùt
 = (*)&pEvent[1];

104 
	`mem˝y
(
pEvít
->
zS¸ùt
, 
zMsg
, 
nMsg
+1);

105 
pEvít
->
öãΩ
 = 
p
->interp;

107 
	`T˛_ThªadQueueEvít
(
p
->
∑ª¡
, (
T˛_Evít
 *)
pEvít
, 
TCL_QUEUE_TAIL
);

108 
	`T˛_ThªadAÀπ
(
p
->
∑ª¡
);

109 
	}
}

114 
T˛_ThªadCª©eTy≥
 
	$t˛S¸ùtThªad
(
Clõ¡D©a
 
pSqlThªad
){

115 
T˛_I¡îp
 *
öãΩ
;

116 
T˛_Obj
 *
pRes
;

117 
T˛_Obj
 *
pLi°
;

118 
rc
;

119 
SqlThªad
 *
p
 = (SqlThªad *)
pSqlThªad
;

120 
	`Sqlôëe°_muãx_Inô
(
T˛_I¡îp
*);

122 
öãΩ
 = 
	`T˛_Cª©eI¡îp
();

123 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "˛ock_£c⁄ds", 
˛ock_£c⁄ds_¥oc
, 0, 0);

124 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sq…hªad", 
sq…hªad_¥oc
, 
pSqlThªad
, 0);

125 #i‡
SQLITE_OS_UNIX
 && 
	`deföed
(
SQLITE_ENABLE_UNLOCK_NOTIFY
)

126 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sqlôe3_blockög_°ï", 
blockög_°ï_¥oc
,0,0);

127 
	`T˛_Cª©eObjComm™d
(
öãΩ
,

128 "sqlôe3_blockög_¥ï¨e_v2", 
blockög_¥ï¨e_v2_¥oc
, (*)1, 0);

129 
	`T˛_Cª©eObjComm™d
(
öãΩ
,

130 "sqlôe3_n⁄blockög_¥ï¨e_v2", 
blockög_¥ï¨e_v2_¥oc
, 0, 0);

132 
	`Sqlôëe°1_Inô
(
öãΩ
);

133 
	`Sqlôëe°_muãx_Inô
(
öãΩ
);

134 
	`Sqlôe3_Inô
(
öãΩ
);

136 
rc
 = 
	`T˛_EvÆ
(
öãΩ
, 
p
->
zS¸ùt
);

137 
pRes
 = 
	`T˛_GëObjResu…
(
öãΩ
);

138 
pLi°
 = 
	`T˛_NewObj
();

139 
	`T˛_In¸RefCou¡
(
pLi°
);

140 
	`T˛_In¸RefCou¡
(
pRes
);

142 if–
rc
!=
TCL_OK
 ){

143 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pLi°
, 
	`T˛_NewSåögObj
("error", -1));

144 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pLi°
, 
pRes
);

145 
	`po°ToP¨ít
(
p
, 
pLi°
);

146 
	`T˛_De¸RefCou¡
(
pLi°
);

147 
pLi°
 = 
	`T˛_NewObj
();

150 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pLi°
, 
	`T˛_NewSåögObj
("set", -1));

151 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pLi°
, 
	`T˛_NewSåögObj
(
p
->
zV¨«me
, -1));

152 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pLi°
, 
pRes
);

153 
	`po°ToP¨ít
(
p
, 
pLi°
);

155 
	`ck‰ì
((*)
p
);

156 
	`T˛_De¸RefCou¡
(
pLi°
);

157 
	`T˛_De¸RefCou¡
(
pRes
);

158 
	`T˛_DñëeI¡îp
(
öãΩ
);

159  
	`T˛_DoO√Evít
(
TCL_ALL_EVENTS
|
TCL_DONT_WAIT
) );

160 
	`T˛_ExôThªad
(0);

161 
TCL_THREAD_CREATE_RETURN
;

162 
	}
}

174 
SQLITE_TCLAPI
 
	$sq…hªad_•awn
(

175 
Clõ¡D©a
 
˛õ¡D©a
,

176 
T˛_I¡îp
 *
öãΩ
,

177 
objc
,

178 
T˛_Obj
 *
CONST
 
objv
[]

180 
T˛_ThªadId
 
x
;

181 
SqlThªad
 *
pNew
;

182 
rc
;

184 
nV¨«me
; *
zV¨«me
;

185 
nS¸ùt
; *
zS¸ùt
;

188 c⁄° 
nSèck
 = 
TCL_THREAD_STACK_DEFAULT
;

189 c⁄° 
Êags
 = 
TCL_THREAD_NOFLAGS
;

191 
	`as£π
(
objc
==4);

192 
	`UNUSED_PARAMETER
(
˛õ¡D©a
);

193 
	`UNUSED_PARAMETER
(
objc
);

195 
zV¨«me
 = 
	`T˛_GëSåögFromObj
(
objv
[2], &
nV¨«me
);

196 
zS¸ùt
 = 
	`T˛_GëSåögFromObj
(
objv
[3], &
nS¸ùt
);

198 
pNew
 = (
SqlThªad
 *)
	`ckÆloc
((SqlThªad)+
nV¨«me
+
nS¸ùt
+2);

199 
pNew
->
zV¨«me
 = (*)&pNew[1];

200 
pNew
->
zS¸ùt
 = (*)&pNew->
zV¨«me
[
nV¨«me
+1];

201 
	`mem˝y
(
pNew
->
zV¨«me
, zV¨«me, 
nV¨«me
+1);

202 
	`mem˝y
(
pNew
->
zS¸ùt
, zS¸ùt, 
nS¸ùt
+1);

203 
pNew
->
∑ª¡
 = 
	`T˛_GëCuºítThªad
();

204 
pNew
->
öãΩ
 = interp;

206 
rc
 = 
	`T˛_Cª©eThªad
(&
x
, 
t˛S¸ùtThªad
, (*)
pNew
, 
nSèck
, 
Êags
);

207 if–
rc
!=
TCL_OK
 ){

208 
	`T˛_AµídResu…
(
öãΩ
, "Error in Tcl_CreateThread()", 0);

209 
	`ck‰ì
((*)
pNew
);

210  
TCL_ERROR
;

213  
TCL_OK
;

214 
	}
}

227 
SQLITE_TCLAPI
 
	$sq…hªad_∑ª¡
(

228 
Clõ¡D©a
 
˛õ¡D©a
,

229 
T˛_I¡îp
 *
öãΩ
,

230 
objc
,

231 
T˛_Obj
 *
CONST
 
objv
[]

233 
EvÆEvít
 *
pEvít
;

234 *
zMsg
;

235 
nMsg
;

236 
SqlThªad
 *
p
 = (SqlThªad *)
˛õ¡D©a
;

238 
	`as£π
(
objc
==3);

239 
	`UNUSED_PARAMETER
(
objc
);

241 if–
p
==0 ){

242 
	`T˛_AµídResu…
(
öãΩ
, "noÖarentÅhread", 0);

243  
TCL_ERROR
;

246 
zMsg
 = 
	`T˛_GëSåögFromObj
(
objv
[2], &
nMsg
);

247 
pEvít
 = (
EvÆEvít
 *)
	`ckÆloc
((EvÆEvít)+
nMsg
+1);

248 
pEvít
->
ba£
.
√xtPå
 = 0;

249 
pEvít
->
ba£
.
¥oc
 = 
t˛S¸ùtEvít
;

250 
pEvít
->
zS¸ùt
 = (*)&pEvent[1];

251 
	`mem˝y
(
pEvít
->
zS¸ùt
, 
zMsg
, 
nMsg
+1);

252 
pEvít
->
öãΩ
 = 
p
->interp;

253 
	`T˛_ThªadQueueEvít
(
p
->
∑ª¡
, (
T˛_Evít
 *)
pEvít
, 
TCL_QUEUE_TAIL
);

254 
	`T˛_ThªadAÀπ
(
p
->
∑ª¡
);

256  
TCL_OK
;

257 
	}
}

259 
	$xBusy
(*
pArg
, 
nBusy
){

260 
	`UNUSED_PARAMETER
(
pArg
);

261 
	`UNUSED_PARAMETER
(
nBusy
);

262 
	`sqlôe3_¶ìp
(50);

264 
	}
}

272 
SQLITE_TCLAPI
 
	$sq…hªad_›í
(

273 
Clõ¡D©a
 
˛õ¡D©a
,

274 
T˛_I¡îp
 *
öãΩ
,

275 
objc
,

276 
T˛_Obj
 *
CONST
 
objv
[]

278 
	`sqlôe3Te°MakePoöãrSå
(
T˛_I¡îp
 *
öãΩ
, *
zPå
, *
p
);

280 c⁄° *
zFûíame
;

281 
sqlôe3
 *
db
;

282 
zBuf
[100];

283 
	`Md5_Regi°î
(
sqlôe3
*,**,c⁄° 
sqlôe3_≠i_routöes
*);

285 
	`UNUSED_PARAMETER
(
˛õ¡D©a
);

286 
	`UNUSED_PARAMETER
(
objc
);

288 
zFûíame
 = 
	`T˛_GëSåög
(
objv
[2]);

289 
	`sqlôe3_›í
(
zFûíame
, &
db
);

290 #ifde‡
SQLITE_HAS_CODEC


291 if–
db
 && 
objc
>=4 ){

292 c⁄° *
zKey
;

293 
nKey
;

294 
rc
;

295 
zKey
 = 
	`T˛_GëSåögFromObj
(
objv
[3], &
nKey
);

296 
rc
 = 
	`sqlôe3_key
(
db
, 
zKey
, 
nKey
);

297 if–
rc
!=
SQLITE_OK
 ){

298 *
zEºMsg
 = 
	`sqlôe3_m¥ötf
("îr‹ %d: %s", 
rc
, 
	`sqlôe3_îrmsg
(
db
));

299 
	`sqlôe3_˛o£
(
db
);

300 
	`T˛_AµídResu…
(
öãΩ
, 
zEºMsg
, (*)0);

301 
	`sqlôe3_‰ì
(
zEºMsg
);

302  
TCL_ERROR
;

306 
	`Md5_Regi°î
(
db
, 0, 0);

307 
	`sqlôe3_busy_h™dÀr
(
db
, 
xBusy
, 0);

309 if–
	`sqlôe3Te°MakePoöãrSå
(
öãΩ
, 
zBuf
, 
db
ËË 
TCL_ERROR
;

310 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

312  
TCL_OK
;

313 
	}
}

322 
SQLITE_TCLAPI
 
	$sq…hªad_id
(

323 
Clõ¡D©a
 
˛õ¡D©a
,

324 
T˛_I¡îp
 *
öãΩ
,

325 
objc
,

326 
T˛_Obj
 *
CONST
 
objv
[]

328 
T˛_ThªadId
 
id
 = 
	`T˛_GëCuºítThªad
();

329 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
	`SQLITE_PTR_TO_INT
(
id
)));

330 
	`UNUSED_PARAMETER
(
˛õ¡D©a
);

331 
	`UNUSED_PARAMETER
(
objc
);

332 
	`UNUSED_PARAMETER
(
objv
);

333  
TCL_OK
;

334 
	}
}

340 
SQLITE_TCLAPI
 
	$sq…hªad_¥oc
(

341 
Clõ¡D©a
 
˛õ¡D©a
,

342 
T˛_I¡îp
 *
öãΩ
,

343 
objc
,

344 
T˛_Obj
 *
CONST
 
objv
[]

346 
	sSubComm™d
 {

347 *
zName
;

348 
T˛_ObjCmdProc
 *
xProc
;

349 
nArg
;

350 *
zUßge
;

351 } 
aSub
[] = {

352 {"∑ª¡", 
sq…hªad_∑ª¡
, 1, "SCRIPT"},

353 {"•awn", 
sq…hªad_•awn
, 2, "VARNAME SCRIPT"},

354 {"›í", 
sq…hªad_›í
, 1, "DBNAME"},

355 {"id", 
sq…hªad_id
, 0, ""},

358 
SubComm™d
 *
pSub
;

359 
rc
;

360 
iIndex
;

362 if–
objc
<2 ){

363 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "SUB-COMMAND");

364  
TCL_ERROR
;

367 
rc
 = 
	`T˛_GëIndexFromObjSåu˘
(

368 
öãΩ
, 
objv
[1], 
aSub
, ◊Sub[0]), "sub-comm™d", 0, &
iIndex


370 if–
rc
!=
TCL_OK
 ) Ñc;

371 
pSub
 = &
aSub
[
iIndex
];

373 if–
objc
<(
pSub
->
nArg
+2) ){

374 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, 
pSub
->
zUßge
);

375  
TCL_ERROR
;

378  
pSub
->
	`xProc
(
˛õ¡D©a
, 
öãΩ
, 
objc
, 
objv
);

379 
	}
}

388 
SQLITE_TCLAPI
 
	$˛ock_£c⁄ds_¥oc
(

389 
Clõ¡D©a
 
˛õ¡D©a
,

390 
T˛_I¡îp
 *
öãΩ
,

391 
objc
,

392 
T˛_Obj
 *
CONST
 
objv
[]

394 
T˛_Time
 
now
;

395 
	`T˛_GëTime
(&
now
);

396 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
now
.
£c
));

397 
	`UNUSED_PARAMETER
(
˛õ¡D©a
);

398 
	`UNUSED_PARAMETER
(
objc
);

399 
	`UNUSED_PARAMETER
(
objv
);

400  
TCL_OK
;

401 
	}
}

416 #i‡
SQLITE_OS_UNIX
 && 
deföed
(
SQLITE_ENABLE_UNLOCK_NOTIFY
)

420 
	~<±hªad.h
>

426 
U∆ockNŸifiˇti⁄
 
	tU∆ockNŸifiˇti⁄
;

427 
	sU∆ockNŸifiˇti⁄
 {

428 
	mfúed
;

429 
±hªad_c⁄d_t
 
	mc⁄d
;

430 
±hªad_muãx_t
 
	mmuãx
;

436 
	$u∆ock_nŸify_cb
(**
≠Arg
, 
nArg
){

437 
i
;

438 
i
=0; i<
nArg
; i++){

439 
U∆ockNŸifiˇti⁄
 *
p
 = (U∆ockNŸifiˇti⁄ *)
≠Arg
[
i
];

440 
	`±hªad_muãx_lock
(&
p
->
muãx
);

441 
p
->
fúed
 = 1;

442 
	`±hªad_c⁄d_sig«l
(&
p
->
c⁄d
);

443 
	`±hªad_muãx_u∆ock
(&
p
->
muãx
);

445 
	}
}

461 
	$waô_f‹_u∆ock_nŸify
(
sqlôe3
 *
db
){

462 
rc
;

463 
U∆ockNŸifiˇti⁄
 
un
;

466 
un
.
fúed
 = 0;

467 
	`±hªad_muãx_öô
(&
un
.
muãx
, 0);

468 
	`±hªad_c⁄d_öô
(&
un
.
c⁄d
, 0);

471 
rc
 = 
	`sqlôe3_u∆ock_nŸify
(
db
, 
u∆ock_nŸify_cb
, (*)&
un
);

472 
	`as£π
–
rc
==
SQLITE_LOCKED
 ||Ñc==
SQLITE_OK
 );

482 if–
rc
==
SQLITE_OK
 ){

483 
	`±hªad_muãx_lock
(&
un
.
muãx
);

484 if–!
un
.
fúed
 ){

485 
	`±hªad_c⁄d_waô
(&
un
.
c⁄d
, &un.
muãx
);

487 
	`±hªad_muãx_u∆ock
(&
un
.
muãx
);

491 
	`±hªad_c⁄d_de°roy
(&
un
.
c⁄d
);

492 
	`±hªad_muãx_de°roy
(&
un
.
muãx
);

494  
rc
;

495 
	}
}

508 
	$sqlôe3_blockög_°ï
(
sqlôe3_°mt
 *
pStmt
){

509 
rc
;

510  
SQLITE_LOCKED
==(
rc
 = 
	`sqlôe3_°ï
(
pStmt
)) ){

511 
rc
 = 
	`waô_f‹_u∆ock_nŸify
(
	`sqlôe3_db_h™dÀ
(
pStmt
));

512 if–
rc
!=
SQLITE_OK
 ) ;

513 
	`sqlôe3_ª£t
(
pStmt
);

515  
rc
;

516 
	}
}

529 
	$sqlôe3_blockög_¥ï¨e_v2
(

530 
sqlôe3
 *
db
,

531 c⁄° *
zSql
,

532 
nSql
,

533 
sqlôe3_°mt
 **
µStmt
,

534 c⁄° **
pz


536 
rc
;

537  
SQLITE_LOCKED
==(
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
db
, 
zSql
, 
nSql
, 
µStmt
, 
pz
)) ){

538 
rc
 = 
	`waô_f‹_u∆ock_nŸify
(
db
);

539 if–
rc
!=
SQLITE_OK
 ) ;

541  
rc
;

542 
	}
}

550 
SQLITE_TCLAPI
 
	$blockög_°ï_¥oc
(

551 * 
˛õ¡D©a
,

552 
T˛_I¡îp
 *
öãΩ
,

553 
objc
,

554 
T˛_Obj
 *
CONST
 
objv
[]

557 
sqlôe3_°mt
 *
pStmt
;

558 
rc
;

560 if–
objc
!=2 ){

561 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "STMT");

562  
TCL_ERROR
;

565 
pStmt
 = (
sqlôe3_°mt
*)
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[1]));

566 
rc
 = 
	`sqlôe3_blockög_°ï
(
pStmt
);

568 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 0);

569  
TCL_OK
;

570 
	}
}

576 
SQLITE_TCLAPI
 
	$blockög_¥ï¨e_v2_¥oc
(

577 * 
˛õ¡D©a
,

578 
T˛_I¡îp
 *
öãΩ
,

579 
objc
,

580 
T˛_Obj
 *
CONST
 
objv
[]

582 
sqlôe3
 *
db
;

583 c⁄° *
zSql
;

584 
byãs
;

585 c⁄° *
zTaû
 = 0;

586 
sqlôe3_°mt
 *
pStmt
 = 0;

587 
zBuf
[50];

588 
rc
;

589 
isBlockög
 = !(
˛õ¡D©a
==0);

591 if–
objc
!=5 && objc!=4 ){

592 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

593 
	`T˛_GëSåög
(
objv
[0]), " DB sql bytesÅailvar", 0);

594  
TCL_ERROR
;

596 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

597 
zSql
 = 
	`T˛_GëSåög
(
objv
[2]);

598 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
byãs
ËË 
TCL_ERROR
;

600 if–
isBlockög
 ){

601 
rc
 = 
	`sqlôe3_blockög_¥ï¨e_v2
(
db
, 
zSql
, 
byãs
, &
pStmt
, &
zTaû
);

603 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
db
, 
zSql
, 
byãs
, &
pStmt
, &
zTaû
);

606 
	`as£π
(
rc
==
SQLITE_OK
 || 
pStmt
==0);

607 if–
zTaû
 && 
objc
>=5 ){

608 if–
byãs
>=0 ){

609 
byãs
 = byã†- (
zTaû
-
zSql
);

611 
	`T˛_ObjSëV¨2
(
öãΩ
, 
objv
[4], 0, 
	`T˛_NewSåögObj
(
zTaû
, 
byãs
), 0);

613 if–
rc
!=
SQLITE_OK
 ){

614 
	`as£π
–
pStmt
==0 );

615 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%†", (*)
	`sqlôe3EºName
(
rc
));

616 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 
	`sqlôe3_îrmsg
(
db
), 0);

617  
TCL_ERROR
;

620 if–
pStmt
 ){

621 if–
	`sqlôe3Te°MakePoöãrSå
(
öãΩ
, 
zBuf
, 
pStmt
ËË 
TCL_ERROR
;

622 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

624  
TCL_OK
;

625 
	}
}

635 
	$Sqlôëe°Thªad_Inô
(
T˛_I¡îp
 *
öãΩ
){

636 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sq…hªad", 
sq…hªad_¥oc
, 0, 0);

637 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "˛ock_£c⁄ds", 
˛ock_£c⁄ds_¥oc
, 0, 0);

638 #i‡
SQLITE_OS_UNIX
 && 
	`deföed
(
SQLITE_ENABLE_UNLOCK_NOTIFY
)

639 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sqlôe3_blockög_°ï", 
blockög_°ï_¥oc
,0,0);

640 
	`T˛_Cª©eObjComm™d
(
öãΩ
,

641 "sqlôe3_blockög_¥ï¨e_v2", 
blockög_¥ï¨e_v2_¥oc
, (*)1, 0);

642 
	`T˛_Cª©eObjComm™d
(
öãΩ
,

643 "sqlôe3_n⁄blockög_¥ï¨e_v2", 
blockög_¥ï¨e_v2_¥oc
, 0, 0);

645  
TCL_OK
;

646 
	}
}

648 
	$Sqlôëe°Thªad_Inô
(
T˛_I¡îp
 *
öãΩ
){

649  
TCL_OK
;

650 
	}
}

	@test_vfs.c

27 #i‡
SQLITE_TEST


29 
	~"sqlôe3.h
"

30 
	~"sqlôeI¡.h
"

31 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

32 
	~"sqlôe_t˛.h
"

34 
	~"t˛.h
"

37 
Te°vfs
 
	tTe°vfs
;

38 
Te°vfsShm
 
	tTe°vfsShm
;

39 
Te°vfsBuf„r
 
	tTe°vfsBuf„r
;

40 
Te°vfsFûe
 
	tTe°vfsFûe
;

41 
Te°vfsFd
 
	tTe°vfsFd
;

46 
	sTe°vfsFûe
 {

47 
sqlôe3_fûe
 
	mba£
;

48 
Te°vfsFd
 *
	mpFd
;

50 
	#tvfsGëFd
(
pFûe
Ë(((
Te°vfsFûe
 *ÌFûe)->
pFd
)

	)

52 
	sTe°vfsFd
 {

53 
sqlôe3_vfs
 *
	mpVfs
;

54 c⁄° *
	mzFûíame
;

55 
sqlôe3_fûe
 *
	mpRól
;

56 
T˛_Obj
 *
	mpShmId
;

58 
Te°vfsBuf„r
 *
	mpShm
;

59 
u32
 
	mex˛lock
;

60 
u32
 
	msh¨edlock
;

61 
Te°vfsFd
 *
	mpNext
;

65 
	#FAULT_INJECT_NONE
 0

	)

66 
	#FAULT_INJECT_TRANSIENT
 1

	)

67 
	#FAULT_INJECT_PERSISTENT
 2

	)

69 
Te°Fau…Inje˘
 
	tTe°Fau…Inje˘
;

70 
	sTe°Fau…Inje˘
 {

71 
	miC¡
;

72 
	meFau…
;

73 
	mnFaû
;

81 
	sTe°vfs
 {

82 *
	mzName
;

83 
sqlôe3_vfs
 *
	mpP¨ít
;

84 
sqlôe3_vfs
 *
	mpVfs
;

85 
T˛_I¡îp
 *
	möãΩ
;

86 
T˛_Obj
 *
	mpS¸ùt
;

87 
Te°vfsBuf„r
 *
	mpBuf„r
;

88 
	misNoshm
;

89 
	misFuŒshm
;

91 
	mmask
;

93 
Te°Fau…Inje˘
 
	mi€º_îr
;

94 
Te°Fau…Inje˘
 
	mfuŒ_îr
;

95 
Te°Fau…Inje˘
 
	mˇ¡›í_îr
;

98 
	miI€ºC¡
;

99 
	mi€º
;

100 
	mnI€ºFaû
;

101 
	miFuŒC¡
;

102 
	mfuŒîr
;

103 
	mnFuŒFaû
;

106 
	miDevch¨
;

107 
	miSe˘‹size
;

118 
	#TESTVFS_SHMOPEN_MASK
 0x00000001

	)

119 
	#TESTVFS_SHMLOCK_MASK
 0x00000010

	)

120 
	#TESTVFS_SHMMAP_MASK
 0x00000020

	)

121 
	#TESTVFS_SHMBARRIER_MASK
 0x00000040

	)

122 
	#TESTVFS_SHMCLOSE_MASK
 0x00000080

	)

124 
	#TESTVFS_OPEN_MASK
 0x00000100

	)

125 
	#TESTVFS_SYNC_MASK
 0x00000200

	)

126 
	#TESTVFS_DELETE_MASK
 0x00000400

	)

127 
	#TESTVFS_CLOSE_MASK
 0x00000800

	)

128 
	#TESTVFS_WRITE_MASK
 0x00001000

	)

129 
	#TESTVFS_TRUNCATE_MASK
 0x00002000

	)

130 
	#TESTVFS_ACCESS_MASK
 0x00004000

	)

131 
	#TESTVFS_FULLPATHNAME_MASK
 0x00008000

	)

132 
	#TESTVFS_READ_MASK
 0x00010000

	)

133 
	#TESTVFS_UNLOCK_MASK
 0x00020000

	)

134 
	#TESTVFS_LOCK_MASK
 0x00040000

	)

135 
	#TESTVFS_CKLOCK_MASK
 0x00080000

	)

137 
	#TESTVFS_ALL_MASK
 0x000FFFFF

	)

140 
	#TESTVFS_MAX_PAGES
 1024

	)

147 
	sTe°vfsBuf„r
 {

148 *
	mzFûe
;

149 
	mpgsz
;

150 
u8
 *
	maPage
[
TESTVFS_MAX_PAGES
];

151 
Te°vfsFd
 *
	mpFûe
;

152 
Te°vfsBuf„r
 *
	mpNext
;

156 
	#PARENTVFS
(
x
Ë(((
Te°vfs
 *)((x)->
pAµD©a
))->
pP¨ít
)

	)

158 
	#TESTVFS_MAX_ARGS
 12

	)

164 
tvfsClo£
(
sqlôe3_fûe
*);

165 
tvfsRód
(
sqlôe3_fûe
*, *, 
iAmt
, 
sqlôe3_öt64
 
iOf°
);

166 
tvfsWrôe
(
sqlôe3_fûe
*,c⁄° *,
iAmt
, 
sqlôe3_öt64
 
iOf°
);

167 
tvfsTrunˇã
(
sqlôe3_fûe
*, 
sqlôe3_öt64
 
size
);

168 
tvfsSync
(
sqlôe3_fûe
*, 
Êags
);

169 
tvfsFûeSize
(
sqlôe3_fûe
*, 
sqlôe3_öt64
 *
pSize
);

170 
tvfsLock
(
sqlôe3_fûe
*, );

171 
tvfsU∆ock
(
sqlôe3_fûe
*, );

172 
tvfsCheckRe£rvedLock
(
sqlôe3_fûe
*, *);

173 
tvfsFûeC⁄åﬁ
(
sqlôe3_fûe
*, 
›
, *
pArg
);

174 
tvfsSe˘‹Size
(
sqlôe3_fûe
*);

175 
tvfsDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
*);

180 
tvfsO≥n
(
sqlôe3_vfs
*, c⁄° *, 
sqlôe3_fûe
*, , *);

181 
tvfsDñëe
(
sqlôe3_vfs
*, c⁄° *
zName
, 
syncDú
);

182 
tvfsAc˚ss
(
sqlôe3_vfs
*, c⁄° *
zName
, 
Êags
, *);

183 
tvfsFuŒP©h«me
(
sqlôe3_vfs
*, c⁄° *
zName
, , *
zOut
);

184 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


185 *
tvfsDlO≥n
(
sqlôe3_vfs
*, c⁄° *
zFûíame
);

186 
tvfsDlEº‹
(
sqlôe3_vfs
*, 
nByã
, *
zEºMsg
);

187 (*
	$tvfsDlSym
(
sqlôe3_vfs
*,*, c⁄° *
zSymbﬁ
))();

188 
	`tvfsDlClo£
(
sqlôe3_vfs
*, *);

190 
	`tvfsR™dom√ss
(
sqlôe3_vfs
*, 
nByã
, *
zOut
);

191 
	`tvfsSÀï
(
sqlôe3_vfs
*, 
mi¸o£c⁄ds
);

192 
	`tvfsCuºítTime
(
sqlôe3_vfs
*, *);

194 
	`tvfsShmO≥n
(
sqlôe3_fûe
*);

195 
	`tvfsShmLock
(
sqlôe3_fûe
*, , , );

196 
	`tvfsShmM≠
(
sqlôe3_fûe
*,,,, volatile **);

197 
	`tvfsShmB¨rõr
(
sqlôe3_fûe
*);

198 
	`tvfsShmUnm≠
(
sqlôe3_fûe
*, );

200 
	`tvfsFëch
(
sqlôe3_fûe
*, 
sqlôe3_öt64
, , **);

201 
	`tvfsUn„tch
(
sqlôe3_fûe
*, 
sqlôe3_öt64
, *);

203 
sqlôe3_io_mëhods
 
tvfs_io_mëhods
 = {

205 
tvfsClo£
,

206 
tvfsRód
,

207 
tvfsWrôe
,

208 
tvfsTrunˇã
,

209 
tvfsSync
,

210 
tvfsFûeSize
,

211 
tvfsLock
,

212 
tvfsU∆ock
,

213 
tvfsCheckRe£rvedLock
,

214 
tvfsFûeC⁄åﬁ
,

215 
tvfsSe˘‹Size
,

216 
tvfsDevi˚Ch¨a˘îi°ics
,

217 
tvfsShmM≠
,

218 
tvfsShmLock
,

219 
tvfsShmB¨rõr
,

220 
tvfsShmUnm≠
,

221 
tvfsFëch
,

222 
tvfsUn„tch


223 
	}
};

225 
	$tvfsResu…Code
(
Te°vfs
 *
p
, *
pRc
){

226 
	sîrcode
 {

227 
eCode
;

228 c⁄° *
zCode
;

229 } 
aCode
[] = {

230 { 
SQLITE_OK
, "SQLITE_OK" },

231 { 
SQLITE_ERROR
, "SQLITE_ERROR" },

232 { 
SQLITE_IOERR
, "SQLITE_IOERR" },

233 { 
SQLITE_LOCKED
, "SQLITE_LOCKED" },

234 { 
SQLITE_BUSY
, "SQLITE_BUSY" },

237 c⁄° *
z
;

238 
i
;

240 
z
 = 
	`T˛_GëSåögResu…
(
p
->
öãΩ
);

241 
i
=0; i<
	`AºaySize
(
aCode
); i++){

242 if–0==
	`°rcmp
(
z
, 
aCode
[
i
].
zCode
) ){

243 *
pRc
 = 
aCode
[
i
].
eCode
;

249 
	}
}

251 
	$tvfsInje˘Fau…
(
Te°Fau…Inje˘
 *
p
){

252 
ªt
 = 0;

253 if–
p
->
eFau…
 ){

254 
p
->
iC¡
--;

255 if–
p
->
iC¡
==0 || (p->iC¡<0 &&Ö->
eFau…
==
FAULT_INJECT_PERSISTENT
 ) ){

256 
ªt
 = 1;

257 
p
->
nFaû
++;

260  
ªt
;

261 
	}
}

264 
	$tvfsInje˘I€º
(
Te°vfs
 *
p
){

265  
	`tvfsInje˘Fau…
(&
p
->
i€º_îr
);

266 
	}
}

268 
	$tvfsInje˘FuŒîr
(
Te°vfs
 *
p
){

269  
	`tvfsInje˘Fau…
(&
p
->
fuŒ_îr
);

270 
	}
}

271 
	$tvfsInje˘C™t›íîr
(
Te°vfs
 *
p
){

272  
	`tvfsInje˘Fau…
(&
p
->
ˇ¡›í_îr
);

273 
	}
}

276 
	$tvfsExecT˛
(

277 
Te°vfs
 *
p
,

278 c⁄° *
zMëhod
,

279 
T˛_Obj
 *
¨g1
,

280 
T˛_Obj
 *
¨g2
,

281 
T˛_Obj
 *
¨g3
,

282 
T˛_Obj
 *
¨g4


284 
rc
;

285 
T˛_Obj
 *
pEvÆ
;

286 
	`as£π
–
p
->
pS¸ùt
 );

288 
	`as£π
–
zMëhod
 );

289 
	`as£π
–
p
 );

290 
	`as£π
–
¨g2
==0 || 
¨g1
!=0 );

291 
	`as£π
–
¨g3
==0 || 
¨g2
!=0 );

293 
pEvÆ
 = 
	`T˛_Du∂iˇãObj
(
p
->
pS¸ùt
);

294 
	`T˛_In¸RefCou¡
(
p
->
pS¸ùt
);

295 
	`T˛_Li°ObjAµídEÀmít
(
p
->
öãΩ
, 
pEvÆ
, 
	`T˛_NewSåögObj
(
zMëhod
, -1));

296 if–
¨g1
 ) 
	`T˛_Li°ObjAµídEÀmít
(
p
->
öãΩ
, 
pEvÆ
,árg1);

297 if–
¨g2
 ) 
	`T˛_Li°ObjAµídEÀmít
(
p
->
öãΩ
, 
pEvÆ
,árg2);

298 if–
¨g3
 ) 
	`T˛_Li°ObjAµídEÀmít
(
p
->
öãΩ
, 
pEvÆ
,árg3);

299 if–
¨g4
 ) 
	`T˛_Li°ObjAµídEÀmít
(
p
->
öãΩ
, 
pEvÆ
,árg4);

301 
rc
 = 
	`T˛_EvÆObjEx
(
p
->
öãΩ
, 
pEvÆ
, 
TCL_EVAL_GLOBAL
);

302 if–
rc
!=
TCL_OK
 ){

303 
	`T˛_BackgroundEº‹
(
p
->
öãΩ
);

304 
	`T˛_Re£tResu…
(
p
->
öãΩ
);

306 
	}
}

312 
	$tvfsClo£
(
sqlôe3_fûe
 *
pFûe
){

313 
Te°vfsFûe
 *
pTe°fûe
 = (Te°vfsFûê*)
pFûe
;

314 
Te°vfsFd
 *
pFd
 = 
pTe°fûe
->pFd;

315 
Te°vfs
 *
p
 = (Te°vf†*)
pFd
->
pVfs
->
pAµD©a
;

317 if–
p
->
pS¸ùt
 &&Ö->
mask
&
TESTVFS_CLOSE_MASK
 ){

318 
	`tvfsExecT˛
(
p
, "xClose",

319 
	`T˛_NewSåögObj
(
pFd
->
zFûíame
, -1),ÖFd->
pShmId
, 0, 0

323 if–
pFd
->
pShmId
 ){

324 
	`T˛_De¸RefCou¡
(
pFd
->
pShmId
);

325 
pFd
->
pShmId
 = 0;

327 if–
pFûe
->
pMëhods
 ){

328 
	`ck‰ì
((*)
pFûe
->
pMëhods
);

330 
	`sqlôe3OsClo£
(
pFd
->
pRól
);

331 
	`ck‰ì
((*)
pFd
);

332 
pTe°fûe
->
pFd
 = 0;

333  
SQLITE_OK
;

334 
	}
}

339 
	$tvfsRód
(

340 
sqlôe3_fûe
 *
pFûe
,

341 *
zBuf
,

342 
iAmt
,

343 
sqlôe_öt64
 
iOf°


345 
rc
 = 
SQLITE_OK
;

346 
Te°vfsFd
 *
pFd
 = 
	`tvfsGëFd
(
pFûe
);

347 
Te°vfs
 *
p
 = (Te°vf†*)
pFd
->
pVfs
->
pAµD©a
;

348 if–
p
->
pS¸ùt
 &&Ö->
mask
&
TESTVFS_READ_MASK
 ){

349 
	`tvfsExecT˛
(
p
, "xRead",

350 
	`T˛_NewSåögObj
(
pFd
->
zFûíame
, -1),ÖFd->
pShmId
, 0, 0

352 
	`tvfsResu…Code
(
p
, &
rc
);

354 if–
rc
==
SQLITE_OK
 && 
p
->
mask
&
TESTVFS_READ_MASK
 && 
	`tvfsInje˘I€º
(p) ){

355 
rc
 = 
SQLITE_IOERR
;

357 if–
rc
==
SQLITE_OK
 ){

358 
rc
 = 
	`sqlôe3OsRód
(
pFd
->
pRól
, 
zBuf
, 
iAmt
, 
iOf°
);

360  
rc
;

361 
	}
}

366 
	$tvfsWrôe
(

367 
sqlôe3_fûe
 *
pFûe
,

368 c⁄° *
zBuf
,

369 
iAmt
,

370 
sqlôe_öt64
 
iOf°


372 
rc
 = 
SQLITE_OK
;

373 
Te°vfsFd
 *
pFd
 = 
	`tvfsGëFd
(
pFûe
);

374 
Te°vfs
 *
p
 = (Te°vf†*)
pFd
->
pVfs
->
pAµD©a
;

376 if–
p
->
pS¸ùt
 &&Ö->
mask
&
TESTVFS_WRITE_MASK
 ){

377 
	`tvfsExecT˛
(
p
, "xWrite",

378 
	`T˛_NewSåögObj
(
pFd
->
zFûíame
, -1),ÖFd->
pShmId
,

379 
	`T˛_NewWideI¡Obj
(
iOf°
), 
	`T˛_NewI¡Obj
(
iAmt
)

381 
	`tvfsResu…Code
(
p
, &
rc
);

384 if–
rc
==
SQLITE_OK
 && 
	`tvfsInje˘FuŒîr
(
p
) ){

385 
rc
 = 
SQLITE_FULL
;

387 if–
rc
==
SQLITE_OK
 && 
p
->
mask
&
TESTVFS_WRITE_MASK
 && 
	`tvfsInje˘I€º
(p) ){

388 
rc
 = 
SQLITE_IOERR
;

391 if–
rc
==
SQLITE_OK
 ){

392 
rc
 = 
	`sqlôe3OsWrôe
(
pFd
->
pRól
, 
zBuf
, 
iAmt
, 
iOf°
);

394  
rc
;

395 
	}
}

400 
	$tvfsTrunˇã
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe_öt64
 
size
){

401 
rc
 = 
SQLITE_OK
;

402 
Te°vfsFd
 *
pFd
 = 
	`tvfsGëFd
(
pFûe
);

403 
Te°vfs
 *
p
 = (Te°vf†*)
pFd
->
pVfs
->
pAµD©a
;

405 if–
p
->
pS¸ùt
 &&Ö->
mask
&
TESTVFS_TRUNCATE_MASK
 ){

406 
	`tvfsExecT˛
(
p
, "xTruncate",

407 
	`T˛_NewSåögObj
(
pFd
->
zFûíame
, -1),ÖFd->
pShmId
, 0, 0

409 
	`tvfsResu…Code
(
p
, &
rc
);

412 if–
rc
==
SQLITE_OK
 ){

413 
rc
 = 
	`sqlôe3OsTrunˇã
(
pFd
->
pRól
, 
size
);

415  
rc
;

416 
	}
}

421 
	$tvfsSync
(
sqlôe3_fûe
 *
pFûe
, 
Êags
){

422 
rc
 = 
SQLITE_OK
;

423 
Te°vfsFd
 *
pFd
 = 
	`tvfsGëFd
(
pFûe
);

424 
Te°vfs
 *
p
 = (Te°vf†*)
pFd
->
pVfs
->
pAµD©a
;

426 if–
p
->
pS¸ùt
 &&Ö->
mask
&
TESTVFS_SYNC_MASK
 ){

427 *
zFœgs
 = 0;

429  
Êags
 ){

430 
SQLITE_SYNC_NORMAL
:

431 
zFœgs
 = "normal";

433 
SQLITE_SYNC_FULL
:

434 
zFœgs
 = "full";

436 
SQLITE_SYNC_NORMAL
|
SQLITE_SYNC_DATAONLY
:

437 
zFœgs
 = "normal|dataonly";

439 
SQLITE_SYNC_FULL
|
SQLITE_SYNC_DATAONLY
:

440 
zFœgs
 = "full|dataonly";

443 
	`as£π
(0);

446 
	`tvfsExecT˛
(
p
, "xSync",

447 
	`T˛_NewSåögObj
(
pFd
->
zFûíame
, -1),ÖFd->
pShmId
,

448 
	`T˛_NewSåögObj
(
zFœgs
, -1), 0

450 
	`tvfsResu…Code
(
p
, &
rc
);

453 if–
rc
==
SQLITE_OK
 && 
	`tvfsInje˘FuŒîr
(
p
ËËr¯
SQLITE_FULL
;

455 if–
rc
==
SQLITE_OK
 ){

456 
rc
 = 
	`sqlôe3OsSync
(
pFd
->
pRól
, 
Êags
);

459  
rc
;

460 
	}
}

465 
	$tvfsFûeSize
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe_öt64
 *
pSize
){

466 
Te°vfsFd
 *
p
 = 
	`tvfsGëFd
(
pFûe
);

467  
	`sqlôe3OsFûeSize
(
p
->
pRól
, 
pSize
);

468 
	}
}

473 
	$tvfsLock
(
sqlôe3_fûe
 *
pFûe
, 
eLock
){

474 
Te°vfsFd
 *
pFd
 = 
	`tvfsGëFd
(
pFûe
);

475 
Te°vfs
 *
p
 = (Te°vf†*)
pFd
->
pVfs
->
pAµD©a
;

476 if–
p
->
pS¸ùt
 &&Ö->
mask
&
TESTVFS_LOCK_MASK
 ){

477 
zLock
[30];

478 
	`sqlôe3_¢¥ötf
((
zLock
),zLock,"%d",
eLock
);

479 
	`tvfsExecT˛
(
p
, "xLock", 
	`T˛_NewSåögObj
(
pFd
->
zFûíame
, -1),

480 
	`T˛_NewSåögObj
(
zLock
, -1), 0, 0);

482  
	`sqlôe3OsLock
(
pFd
->
pRól
, 
eLock
);

483 
	}
}

488 
	$tvfsU∆ock
(
sqlôe3_fûe
 *
pFûe
, 
eLock
){

489 
Te°vfsFd
 *
pFd
 = 
	`tvfsGëFd
(
pFûe
);

490 
Te°vfs
 *
p
 = (Te°vf†*)
pFd
->
pVfs
->
pAµD©a
;

491 if–
p
->
pS¸ùt
 &&Ö->
mask
&
TESTVFS_UNLOCK_MASK
 ){

492 
zLock
[30];

493 
	`sqlôe3_¢¥ötf
((
zLock
),zLock,"%d",
eLock
);

494 
	`tvfsExecT˛
(
p
, "xU∆ock", 
	`T˛_NewSåögObj
(
pFd
->
zFûíame
, -1),

495 
	`T˛_NewSåögObj
(
zLock
, -1), 0, 0);

497 if–
p
->
mask
&
TESTVFS_WRITE_MASK
 && 
	`tvfsInje˘I€º
(p) ){

498  
SQLITE_IOERR_UNLOCK
;

500  
	`sqlôe3OsU∆ock
(
pFd
->
pRól
, 
eLock
);

501 
	}
}

506 
	$tvfsCheckRe£rvedLock
(
sqlôe3_fûe
 *
pFûe
, *
pResOut
){

507 
Te°vfsFd
 *
pFd
 = 
	`tvfsGëFd
(
pFûe
);

508 
Te°vfs
 *
p
 = (Te°vf†*)
pFd
->
pVfs
->
pAµD©a
;

509 if–
p
->
pS¸ùt
 &&Ö->
mask
&
TESTVFS_CKLOCK_MASK
 ){

510 
	`tvfsExecT˛
(
p
, "xCheckRe£rvedLock", 
	`T˛_NewSåögObj
(
pFd
->
zFûíame
, -1),

513  
	`sqlôe3OsCheckRe£rvedLock
(
pFd
->
pRól
, 
pResOut
);

514 
	}
}

519 
	$tvfsFûeC⁄åﬁ
(
sqlôe3_fûe
 *
pFûe
, 
›
, *
pArg
){

520 
Te°vfsFd
 *
p
 = 
	`tvfsGëFd
(
pFûe
);

521 if–
›
==
SQLITE_FCNTL_PRAGMA
 ){

522 **
¨gv
 = (**)
pArg
;

523 if–
	`sqlôe3_°ricmp
(
¨gv
[1],"error")==0 ){

524 
rc
 = 
SQLITE_ERROR
;

525 if–
¨gv
[2] ){

526 c⁄° *
z
 = 
¨gv
[2];

527 
x
 = 
	`©oi
(
z
);

528 if–
x
 ){

529 
rc
 = 
x
;

530  
	`sqlôe3Isdigô
(
z
[0]) ){ z++; }

531  
	`sqlôe3Is•a˚
(
z
[0]) ){ z++; }

533 if–
z
[0] ) 
¨gv
[0] = 
	`sqlôe3_m¥ötf
("%s", z);

535  
rc
;

537 if–
	`sqlôe3_°ricmp
(
¨gv
[1], "filename")==0 ){

538 
¨gv
[0] = 
	`sqlôe3_m¥ötf
("%s", 
p
->
zFûíame
);

539  
SQLITE_OK
;

542  
	`sqlôe3OsFûeC⁄åﬁ
(
p
->
pRól
, 
›
, 
pArg
);

543 
	}
}

548 
	$tvfsSe˘‹Size
(
sqlôe3_fûe
 *
pFûe
){

549 
Te°vfsFd
 *
pFd
 = 
	`tvfsGëFd
(
pFûe
);

550 
Te°vfs
 *
p
 = (Te°vf†*)
pFd
->
pVfs
->
pAµD©a
;

551 if–
p
->
iSe˘‹size
>=0 ){

552  
p
->
iSe˘‹size
;

554  
	`sqlôe3OsSe˘‹Size
(
pFd
->
pRól
);

555 
	}
}

560 
	$tvfsDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
 *
pFûe
){

561 
Te°vfsFd
 *
pFd
 = 
	`tvfsGëFd
(
pFûe
);

562 
Te°vfs
 *
p
 = (Te°vf†*)
pFd
->
pVfs
->
pAµD©a
;

563 if–
p
->
iDevch¨
>=0 ){

564  
p
->
iDevch¨
;

566  
	`sqlôe3OsDevi˚Ch¨a˘îi°ics
(
pFd
->
pRól
);

567 
	}
}

572 
	$tvfsO≥n
(

573 
sqlôe3_vfs
 *
pVfs
,

574 c⁄° *
zName
,

575 
sqlôe3_fûe
 *
pFûe
,

576 
Êags
,

577 *
pOutFœgs


579 
rc
;

580 
Te°vfsFûe
 *
pTe°fûe
 = (Te°vfsFûê*)
pFûe
;

581 
Te°vfsFd
 *
pFd
;

582 
T˛_Obj
 *
pId
 = 0;

583 
Te°vfs
 *
p
 = (Te°vf†*)
pVfs
->
pAµD©a
;

585 
pFd
 = (
Te°vfsFd
 *)
	`ckÆloc
((Te°vfsFdË+ 
	`PARENTVFS
(
pVfs
)->
szOsFûe
);

586 
	`mem£t
(
pFd
, 0, (
Te°vfsFd
Ë+ 
	`PARENTVFS
(
pVfs
)->
szOsFûe
);

587 
pFd
->
pShm
 = 0;

588 
pFd
->
pShmId
 = 0;

589 
pFd
->
zFûíame
 = 
zName
;

590 
pFd
->
pVfs
 =ÖVfs;

591 
pFd
->
pRól
 = (
sqlôe3_fûe
 *)&pFd[1];

592 
	`mem£t
(
pTe°fûe
, 0, (
Te°vfsFûe
));

593 
pTe°fûe
->
pFd
 =ÖFd;

604 
	`T˛_Re£tResu…
(
p
->
öãΩ
);

605 if–
p
->
pS¸ùt
 &&Ö->
mask
&
TESTVFS_OPEN_MASK
 ){

606 
T˛_Obj
 *
pArg
 = 
	`T˛_NewObj
();

607 
	`T˛_In¸RefCou¡
(
pArg
);

608 if–
Êags
&
SQLITE_OPEN_MAIN_DB
 ){

609 c⁄° *
z
 = &
zName
[
	`°æí
(zName)+1];

610  *
z
 ){

611 
	`T˛_Li°ObjAµídEÀmít
(0, 
pArg
, 
	`T˛_NewSåögObj
(
z
, -1));

612 
z
 +
	`°æí
(z) + 1;

613 
	`T˛_Li°ObjAµídEÀmít
(0, 
pArg
, 
	`T˛_NewSåögObj
(
z
, -1));

614 
z
 +
	`°æí
(z) + 1;

617 
	`tvfsExecT˛
(
p
, "xO≥n", 
	`T˛_NewSåögObj
(
pFd
->
zFûíame
, -1), 
pArg
, 0, 0);

618 
	`T˛_De¸RefCou¡
(
pArg
);

619 if–
	`tvfsResu…Code
(
p
, &
rc
) ){

620 if–
rc
!=
SQLITE_OK
 ) Ñc;

622 
pId
 = 
	`T˛_GëObjResu…
(
p
->
öãΩ
);

626 if–(
p
->
mask
&
TESTVFS_OPEN_MASK
Ë&& 
	`tvfsInje˘I€º
’ËË 
SQLITE_IOERR
;

627 if–
	`tvfsInje˘C™t›íîr
(
p
ËË 
SQLITE_CANTOPEN
;

628 if–
	`tvfsInje˘FuŒîr
(
p
ËË 
SQLITE_FULL
;

630 if–!
pId
 ){

631 
pId
 = 
	`T˛_NewSåögObj
("anon", -1);

633 
	`T˛_In¸RefCou¡
(
pId
);

634 
pFd
->
pShmId
 = 
pId
;

635 
	`T˛_Re£tResu…
(
p
->
öãΩ
);

637 
rc
 = 
	`sqlôe3OsO≥n
(
	`PARENTVFS
(
pVfs
), 
zName
, 
pFd
->
pRól
, 
Êags
, 
pOutFœgs
);

638 if–
pFd
->
pRól
->
pMëhods
 ){

639 
sqlôe3_io_mëhods
 *
pMëhods
;

640 
nByã
;

642 if–
pVfs
->
iVîsi⁄
>1 ){

643 
nByã
 = (
sqlôe3_io_mëhods
);

645 
nByã
 = 
	`off£tof
(
sqlôe3_io_mëhods
, 
xShmM≠
);

648 
pMëhods
 = (
sqlôe3_io_mëhods
 *)
	`ckÆloc
(
nByã
);

649 
	`mem˝y
(
pMëhods
, &
tvfs_io_mëhods
, 
nByã
);

650 
pMëhods
->
iVîsi⁄
 = 
pFd
->
pRól
->pMethods->iVersion;

651 if–
pMëhods
->
iVîsi⁄
>
pVfs
->iVersion ){

652 
pMëhods
->
iVîsi⁄
 = 
pVfs
->iVersion;

654 if–
pVfs
->
iVîsi⁄
>1 && ((
Te°vfs
 *ÌVfs->
pAµD©a
)->
isNoshm
 ){

655 
pMëhods
->
xShmUnm≠
 = 0;

656 
pMëhods
->
xShmLock
 = 0;

657 
pMëhods
->
xShmB¨rõr
 = 0;

658 
pMëhods
->
xShmM≠
 = 0;

660 
pFûe
->
pMëhods
 =ÖMethods;

663  
rc
;

664 
	}
}

671 
	$tvfsDñëe
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zP©h
, 
dúSync
){

672 
rc
 = 
SQLITE_OK
;

673 
Te°vfs
 *
p
 = (Te°vf†*)
pVfs
->
pAµD©a
;

675 if–
p
->
pS¸ùt
 &&Ö->
mask
&
TESTVFS_DELETE_MASK
 ){

676 
	`tvfsExecT˛
(
p
, "xDelete",

677 
	`T˛_NewSåögObj
(
zP©h
, -1), 
	`T˛_NewI¡Obj
(
dúSync
), 0, 0

679 
	`tvfsResu…Code
(
p
, &
rc
);

681 if–
rc
==
SQLITE_OK
 ){

682 
rc
 = 
	`sqlôe3OsDñëe
(
	`PARENTVFS
(
pVfs
), 
zP©h
, 
dúSync
);

684  
rc
;

685 
	}
}

691 
	$tvfsAc˚ss
(

692 
sqlôe3_vfs
 *
pVfs
,

693 c⁄° *
zP©h
,

694 
Êags
,

695 *
pResOut


697 
Te°vfs
 *
p
 = (Te°vf†*)
pVfs
->
pAµD©a
;

698 if–
p
->
pS¸ùt
 &&Ö->
mask
&
TESTVFS_ACCESS_MASK
 ){

699 
rc
;

700 *
zArg
 = 0;

701 if–
Êags
==
SQLITE_ACCESS_EXISTS
 ) 
zArg
 = "SQLITE_ACCESS_EXISTS";

702 if–
Êags
==
SQLITE_ACCESS_READWRITE
 ) 
zArg
 = "SQLITE_ACCESS_READWRITE";

703 if–
Êags
==
SQLITE_ACCESS_READ
 ) 
zArg
 = "SQLITE_ACCESS_READ";

704 
	`tvfsExecT˛
(
p
, "xAccess",

705 
	`T˛_NewSåögObj
(
zP©h
, -1), T˛_NewSåögObj(
zArg
, -1), 0, 0

707 if–
	`tvfsResu…Code
(
p
, &
rc
) ){

708 if–
rc
!=
SQLITE_OK
 ) Ñc;

710 
T˛_I¡îp
 *
öãΩ
 = 
p
->interp;

711 if–
TCL_OK
==
	`T˛_GëBoﬁónFromObj
(0, 
	`T˛_GëObjResu…
(
öãΩ
), 
pResOut
) ){

712  
SQLITE_OK
;

716  
	`sqlôe3OsAc˚ss
(
	`PARENTVFS
(
pVfs
), 
zP©h
, 
Êags
, 
pResOut
);

717 
	}
}

724 
	$tvfsFuŒP©h«me
(

725 
sqlôe3_vfs
 *
pVfs
,

726 c⁄° *
zP©h
,

727 
nOut
,

728 *
zOut


730 
Te°vfs
 *
p
 = (Te°vf†*)
pVfs
->
pAµD©a
;

731 if–
p
->
pS¸ùt
 &&Ö->
mask
&
TESTVFS_FULLPATHNAME_MASK
 ){

732 
rc
;

733 
	`tvfsExecT˛
(
p
, "xFuŒP©h«me", 
	`T˛_NewSåögObj
(
zP©h
, -1), 0, 0, 0);

734 if–
	`tvfsResu…Code
(
p
, &
rc
) ){

735 if–
rc
!=
SQLITE_OK
 ) Ñc;

738  
	`sqlôe3OsFuŒP©h«me
(
	`PARENTVFS
(
pVfs
), 
zP©h
, 
nOut
, 
zOut
);

739 
	}
}

741 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


745 *
	$tvfsDlO≥n
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zP©h
){

746  
	`sqlôe3OsDlO≥n
(
	`PARENTVFS
(
pVfs
), 
zP©h
);

747 
	}
}

754 
	$tvfsDlEº‹
(
sqlôe3_vfs
 *
pVfs
, 
nByã
, *
zEºMsg
){

755 
	`sqlôe3OsDlEº‹
(
	`PARENTVFS
(
pVfs
), 
nByã
, 
zEºMsg
);

756 
	}
}

761 (*
	$tvfsDlSym
(
sqlôe3_vfs
 *
pVfs
, *
p
, c⁄° *
zSym
))(){

762  
	`sqlôe3OsDlSym
(
	`PARENTVFS
(
pVfs
), 
p
, 
zSym
);

763 
	}
}

768 
	$tvfsDlClo£
(
sqlôe3_vfs
 *
pVfs
, *
pH™dÀ
){

769 
	`sqlôe3OsDlClo£
(
	`PARENTVFS
(
pVfs
), 
pH™dÀ
);

770 
	}
}

777 
	$tvfsR™dom√ss
(
sqlôe3_vfs
 *
pVfs
, 
nByã
, *
zBufOut
){

778  
	`sqlôe3OsR™dom√ss
(
	`PARENTVFS
(
pVfs
), 
nByã
, 
zBufOut
);

779 
	}
}

785 
	$tvfsSÀï
(
sqlôe3_vfs
 *
pVfs
, 
nMi¸o
){

786  
	`sqlôe3OsSÀï
(
	`PARENTVFS
(
pVfs
), 
nMi¸o
);

787 
	}
}

792 
	$tvfsCuºítTime
(
sqlôe3_vfs
 *
pVfs
, *
pTimeOut
){

793  
	`PARENTVFS
(
pVfs
)->
	`xCuºítTime
(PARENTVFS’Vfs), 
pTimeOut
);

794 
	}
}

796 
	$tvfsShmO≥n
(
sqlôe3_fûe
 *
pFûe
){

797 
Te°vfs
 *
p
;

798 
rc
 = 
SQLITE_OK
;

799 
Te°vfsBuf„r
 *
pBuf„r
;

800 
Te°vfsFd
 *
pFd
;

802 
pFd
 = 
	`tvfsGëFd
(
pFûe
);

803 
p
 = (
Te°vfs
 *)
pFd
->
pVfs
->
pAµD©a
;

804 
	`as£π
–0==
p
->
isFuŒshm
 );

805 
	`as£π
–
pFd
->
pShmId
 &&ÖFd->
pShm
==0 &&ÖFd->
pNext
==0 );

811 
	`T˛_Re£tResu…
(
p
->
öãΩ
);

812 if–
p
->
pS¸ùt
 &&Ö->
mask
&
TESTVFS_SHMOPEN_MASK
 ){

813 
	`tvfsExecT˛
(
p
, "xShmO≥n", 
	`T˛_NewSåögObj
(
pFd
->
zFûíame
, -1), 0, 0, 0);

814 if–
	`tvfsResu…Code
(
p
, &
rc
) ){

815 if–
rc
!=
SQLITE_OK
 ) Ñc;

819 
	`as£π
–
rc
==
SQLITE_OK
 );

820 if–
p
->
mask
&
TESTVFS_SHMOPEN_MASK
 && 
	`tvfsInje˘I€º
(p) ){

821  
SQLITE_IOERR
;

825 
pBuf„r
=
p
->pBuf„r;ÖBuf„r;ÖBuf„rıBuf„r->
pNext
){

826 if–0==
	`°rcmp
(
pFd
->
zFûíame
, 
pBuf„r
->
zFûe
) ) ;

828 if–!
pBuf„r
 ){

829 
szName
 = ()
	`°æí
(
pFd
->
zFûíame
);

830 
nByã
 = (
Te°vfsBuf„r
Ë+ 
szName
 + 1;

831 
pBuf„r
 = (
Te°vfsBuf„r
 *)
	`ckÆloc
(
nByã
);

832 
	`mem£t
(
pBuf„r
, 0, 
nByã
);

833 
pBuf„r
->
zFûe
 = (*)&pBuffer[1];

834 
	`mem˝y
(
pBuf„r
->
zFûe
, 
pFd
->
zFûíame
, 
szName
+1);

835 
pBuf„r
->
pNext
 = 
p
->pBuffer;

836 
p
->
pBuf„r
 =ÖBuffer;

840 
pFd
->
pNext
 = 
pBuf„r
->
pFûe
;

841 
pBuf„r
->
pFûe
 = 
pFd
;

842 
pFd
->
pShm
 = 
pBuf„r
;

843  
SQLITE_OK
;

844 
	}
}

846 
	$tvfsAŒocPage
(
Te°vfsBuf„r
 *
p
, 
iPage
, 
pgsz
){

847 
	`as£π
–
iPage
<
TESTVFS_MAX_PAGES
 );

848 if–
p
->
aPage
[
iPage
]==0 ){

849 
p
->
aPage
[
iPage
] = (
u8
 *)
	`ckÆloc
(
pgsz
);

850 
	`mem£t
(
p
->
aPage
[
iPage
], 0, 
pgsz
);

851 
p
->
pgsz
 =Ögsz;

853 
	}
}

855 
	$tvfsShmM≠
(

856 
sqlôe3_fûe
 *
pFûe
,

857 
iPage
,

858 
pgsz
,

859 
isWrôe
,

860 vﬁ©ûê**
µ


862 
rc
 = 
SQLITE_OK
;

863 
Te°vfsFd
 *
pFd
 = 
	`tvfsGëFd
(
pFûe
);

864 
Te°vfs
 *
p
 = (Te°vf†*)(
pFd
->
pVfs
->
pAµD©a
);

866 if–
p
->
isFuŒshm
 ){

867  
	`sqlôe3OsShmM≠
(
pFd
->
pRól
, 
iPage
, 
pgsz
, 
isWrôe
, 
µ
);

870 if–0==
pFd
->
pShm
 ){

871 
rc
 = 
	`tvfsShmO≥n
(
pFûe
);

872 if–
rc
!=
SQLITE_OK
 ){

873  
rc
;

877 if–
p
->
pS¸ùt
 &&Ö->
mask
&
TESTVFS_SHMMAP_MASK
 ){

878 
T˛_Obj
 *
pArg
 = 
	`T˛_NewObj
();

879 
	`T˛_In¸RefCou¡
(
pArg
);

880 
	`T˛_Li°ObjAµídEÀmít
(
p
->
öãΩ
, 
pArg
, 
	`T˛_NewI¡Obj
(
iPage
));

881 
	`T˛_Li°ObjAµídEÀmít
(
p
->
öãΩ
, 
pArg
, 
	`T˛_NewI¡Obj
(
pgsz
));

882 
	`T˛_Li°ObjAµídEÀmít
(
p
->
öãΩ
, 
pArg
, 
	`T˛_NewI¡Obj
(
isWrôe
));

883 
	`tvfsExecT˛
(
p
, "xShmMap",

884 
	`T˛_NewSåögObj
(
pFd
->
pShm
->
zFûe
, -1),ÖFd->
pShmId
, 
pArg
, 0

886 
	`tvfsResu…Code
(
p
, &
rc
);

887 
	`T˛_De¸RefCou¡
(
pArg
);

889 if–
rc
==
SQLITE_OK
 && 
p
->
mask
&
TESTVFS_SHMMAP_MASK
 && 
	`tvfsInje˘I€º
(p) ){

890 
rc
 = 
SQLITE_IOERR
;

893 if–
rc
==
SQLITE_OK
 && 
isWrôe
 && !
pFd
->
pShm
->
aPage
[
iPage
] ){

894 
	`tvfsAŒocPage
(
pFd
->
pShm
, 
iPage
, 
pgsz
);

896 *
µ
 = (vﬁ©ûê*)
pFd
->
pShm
->
aPage
[
iPage
];

898  
rc
;

899 
	}
}

902 
	$tvfsShmLock
(

903 
sqlôe3_fûe
 *
pFûe
,

904 
of°
,

905 
n
,

906 
Êags


908 
rc
 = 
SQLITE_OK
;

909 
Te°vfsFd
 *
pFd
 = 
	`tvfsGëFd
(
pFûe
);

910 
Te°vfs
 *
p
 = (Te°vf†*)(
pFd
->
pVfs
->
pAµD©a
);

911 
nLock
;

912 
zLock
[80];

914 if–
p
->
isFuŒshm
 ){

915  
	`sqlôe3OsShmLock
(
pFd
->
pRól
, 
of°
, 
n
, 
Êags
);

918 if–
p
->
pS¸ùt
 &&Ö->
mask
&
TESTVFS_SHMLOCK_MASK
 ){

919 
	`sqlôe3_¢¥ötf
((
zLock
), zLock, "%d %d", 
of°
, 
n
);

920 
nLock
 = ()
	`°æí
(
zLock
);

921 if–
Êags
 & 
SQLITE_SHM_LOCK
 ){

922 
	`°r˝y
(&
zLock
[
nLock
], "Üock");

924 
	`°r˝y
(&
zLock
[
nLock
], " unlock");

926 
nLock
 +()
	`°æí
(&
zLock
[nLock]);

927 if–
Êags
 & 
SQLITE_SHM_SHARED
 ){

928 
	`°r˝y
(&
zLock
[
nLock
], " shared");

930 
	`°r˝y
(&
zLock
[
nLock
], "Éxclusive");

932 
	`tvfsExecT˛
(
p
, "xShmLock",

933 
	`T˛_NewSåögObj
(
pFd
->
pShm
->
zFûe
, -1),ÖFd->
pShmId
,

934 
	`T˛_NewSåögObj
(
zLock
, -1), 0

936 
	`tvfsResu…Code
(
p
, &
rc
);

939 if–
rc
==
SQLITE_OK
 && 
p
->
mask
&
TESTVFS_SHMLOCK_MASK
 && 
	`tvfsInje˘I€º
(p) ){

940 
rc
 = 
SQLITE_IOERR
;

943 if–
rc
==
SQLITE_OK
 ){

944 
isLock
 = (
Êags
 & 
SQLITE_SHM_LOCK
);

945 
isEx˛
 = (
Êags
 & 
SQLITE_SHM_EXCLUSIVE
);

946 
u32
 
mask
 = (((1<<
n
)-1Ë<< 
of°
);

947 if–
isLock
 ){

948 
Te°vfsFd
 *
p2
;

949 
p2
=
pFd
->
pShm
->
pFûe
;Ö2;Ö2ı2->
pNext
){

950 if–
p2
==
pFd
 ) ;

951 if–(
p2
->
ex˛lock
&
mask
Ë|| (
isEx˛
 &&Ö2->
sh¨edlock
&mask) ){

952 
rc
 = 
SQLITE_BUSY
;

956 if–
rc
==
SQLITE_OK
 ){

957 if–
isEx˛
 ) 
pFd
->
ex˛lock
 |
mask
;

958 if–!
isEx˛
 ) 
pFd
->
sh¨edlock
 |
mask
;

961 if–
isEx˛
 ) 
pFd
->
ex˛lock
 &(~
mask
);

962 if–!
isEx˛
 ) 
pFd
->
sh¨edlock
 &(~
mask
);

966  
rc
;

967 
	}
}

969 
	$tvfsShmB¨rõr
(
sqlôe3_fûe
 *
pFûe
){

970 
Te°vfsFd
 *
pFd
 = 
	`tvfsGëFd
(
pFûe
);

971 
Te°vfs
 *
p
 = (Te°vf†*)(
pFd
->
pVfs
->
pAµD©a
);

973 if–
p
->
pS¸ùt
 &&Ö->
mask
&
TESTVFS_SHMBARRIER_MASK
 ){

974 c⁄° *
z
 = 
pFd
->
pShm
 ?ÖFd->pShm->
zFûe
 : "";

975 
	`tvfsExecT˛
(
p
, "xShmB¨rõr", 
	`T˛_NewSåögObj
(
z
, -1), 
pFd
->
pShmId
, 0, 0);

978 if–
p
->
isFuŒshm
 ){

979 
	`sqlôe3OsShmB¨rõr
(
pFd
->
pRól
);

982 
	}
}

984 
	$tvfsShmUnm≠
(

985 
sqlôe3_fûe
 *
pFûe
,

986 
dñëeFœg


988 
rc
 = 
SQLITE_OK
;

989 
Te°vfsFd
 *
pFd
 = 
	`tvfsGëFd
(
pFûe
);

990 
Te°vfs
 *
p
 = (Te°vf†*)(
pFd
->
pVfs
->
pAµD©a
);

991 
Te°vfsBuf„r
 *
pBuf„r
 = 
pFd
->
pShm
;

992 
Te°vfsFd
 **
µFd
;

994 if–
p
->
isFuŒshm
 ){

995  
	`sqlôe3OsShmUnm≠
(
pFd
->
pRól
, 
dñëeFœg
);

998 if–!
pBuf„r
 )  
SQLITE_OK
;

999 
	`as£π
–
pFd
->
pShmId
 &&ÖFd->
pShm
 );

1001 if–
p
->
pS¸ùt
 &&Ö->
mask
&
TESTVFS_SHMCLOSE_MASK
 ){

1002 
	`tvfsExecT˛
(
p
, "xShmUnmap",

1003 
	`T˛_NewSåögObj
(
pFd
->
pShm
->
zFûe
, -1),ÖFd->
pShmId
, 0, 0

1005 
	`tvfsResu…Code
(
p
, &
rc
);

1008 
µFd
=&
pBuf„r
->
pFûe
; *µFd!=
pFd
;ÖpFd=&((*µFd)->
pNext
));

1009 
	`as£π
–(*
µFd
)==
pFd
 );

1010 *
µFd
 = 
pFd
->
pNext
;

1011 
pFd
->
pNext
 = 0;

1013 if–
pBuf„r
->
pFûe
==0 ){

1014 
i
;

1015 
Te°vfsBuf„r
 **
µ
;

1016 
µ
=&
p
->
pBuf„r
; *µ!ıBuf„r;Öp=&((*µ)->
pNext
));

1017 *
µ
 = (*µ)->
pNext
;

1018 
i
=0; 
pBuf„r
->
aPage
[i]; i++){

1019 
	`ck‰ì
((*)
pBuf„r
->
aPage
[
i
]);

1021 
	`ck‰ì
((*)
pBuf„r
);

1023 
pFd
->
pShm
 = 0;

1025  
rc
;

1026 
	}
}

1028 
	$tvfsFëch
(

1029 
sqlôe3_fûe
 *
pFûe
,

1030 
sqlôe3_öt64
 
iOf°
,

1031 
iAmt
,

1032 **
µ


1034 
Te°vfsFd
 *
pFd
 = 
	`tvfsGëFd
(
pFûe
);

1035  
	`sqlôe3OsFëch
(
pFd
->
pRól
, 
iOf°
, 
iAmt
, 
µ
);

1036 
	}
}

1038 
	$tvfsUn„tch
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe3_öt64
 
iOf°
, *
p
){

1039 
Te°vfsFd
 *
pFd
 = 
	`tvfsGëFd
(
pFûe
);

1040  
	`sqlôe3OsUn„tch
(
pFd
->
pRól
, 
iOf°
, 
p
);

1041 
	}
}

1043 
SQLITE_TCLAPI
 
	$ã°vfs_obj_cmd
(

1044 
Clõ¡D©a
 
cd
,

1045 
T˛_I¡îp
 *
öãΩ
,

1046 
objc
,

1047 
T˛_Obj
 *
CONST
 
objv
[]

1049 
Te°vfs
 *
p
 = (Te°vf†*)
cd
;

1051 
	eDB_íum
 {

1052 
CMD_SHM
, 
CMD_DELETE
, 
CMD_FILTER
, 
CMD_IOERR
, 
CMD_SCRIPT
,

1053 
CMD_DEVCHAR
, 
CMD_SECTORSIZE
, 
CMD_FULLERR
, 
CMD_CANTOPENERR


1055 
	sTe°vfsSubcmd
 {

1056 *
zName
;

1057 
DB_íum
 
eCmd
;

1058 } 
aSubcmd
[] = {

1059 { "shm", 
CMD_SHM
 },

1060 { "dñëe", 
CMD_DELETE
 },

1061 { "fûãr", 
CMD_FILTER
 },

1062 { "i€º", 
CMD_IOERR
 },

1063 { "fuŒîr", 
CMD_FULLERR
 },

1064 { "ˇ¡›íîr", 
CMD_CANTOPENERR
 },

1065 { "s¸ùt", 
CMD_SCRIPT
 },

1066 { "devch¨", 
CMD_DEVCHAR
 },

1067 { "£˘‹size", 
CMD_SECTORSIZE
 },

1070 
i
;

1072 if–
objc
<2 ){

1073 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "SUBCOMMAND ...");

1074  
TCL_ERROR
;

1076 if–
	`T˛_GëIndexFromObjSåu˘
(

1077 
öãΩ
, 
objv
[1], 
aSubcmd
, ◊Subcmd[0]), "subcomm™d", 0, &
i
)

1079  
TCL_ERROR
;

1081 
	`T˛_Re£tResu…
(
öãΩ
);

1083  
aSubcmd
[
i
].
eCmd
 ){

1084 
CMD_SHM
: {

1085 
T˛_Obj
 *
pObj
;

1086 
rc
;

1087 
Te°vfsBuf„r
 *
pBuf„r
;

1088 *
zName
;

1089 if–
objc
!=3 && objc!=4 ){

1090 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "FILE ?VALUE?");

1091  
TCL_ERROR
;

1093 
zName
 = 
	`ckÆloc
(
p
->
pP¨ít
->
mxP©h«me
);

1094 
rc
 = 
p
->
pP¨ít
->
	`xFuŒP©h«me
(

1095 
p
->
pP¨ít
, 
	`T˛_GëSåög
(
objv
[2]),

1096 
p
->
pP¨ít
->
mxP©h«me
, 
zName


1098 if–
rc
!=
SQLITE_OK
 ){

1099 
	`T˛_AµídResu…
(
öãΩ
, "failedÅo get fullÖath: ",

1100 
	`T˛_GëSåög
(
objv
[2]), 0);

1101 
	`ck‰ì
(
zName
);

1102  
TCL_ERROR
;

1104 
pBuf„r
=
p
->pBuf„r;ÖBuf„r;ÖBuf„rıBuf„r->
pNext
){

1105 if–0==
	`°rcmp
(
pBuf„r
->
zFûe
, 
zName
) ) ;

1107 
	`ck‰ì
(
zName
);

1108 if–!
pBuf„r
 ){

1109 
	`T˛_AµídResu…
(
öãΩ
, "nÿsuch fûe: ", 
	`T˛_GëSåög
(
objv
[2]), 0);

1110  
TCL_ERROR
;

1112 if–
objc
==4 ){

1113 
n
;

1114 
u8
 *
a
 = 
	`T˛_GëByãAºayFromObj
(
objv
[3], &
n
);

1115 
pgsz
 = 
pBuf„r
->pgsz;

1116 if–
pgsz
==0 )Ögsz = 65536;

1117 
i
=0; i*
pgsz
<
n
; i++){

1118 
nByã
 = 
pgsz
;

1119 
	`tvfsAŒocPage
(
pBuf„r
, 
i
, 
pgsz
);

1120 if–
n
-
i
*
pgsz
<pgsz ){

1121 
nByã
 = 
n
;

1123 
	`mem˝y
(
pBuf„r
->
aPage
[
i
], &
a
[i*
pgsz
], 
nByã
);

1127 
pObj
 = 
	`T˛_NewObj
();

1128 
i
=0; 
pBuf„r
->
aPage
[i]; i++){

1129 
pgsz
 = 
pBuf„r
->pgsz;

1130 if–
pgsz
==0 )Ögsz = 65536;

1131 
	`T˛_AµídObjToObj
(
pObj
, 
	`T˛_NewByãAºayObj
(
pBuf„r
->
aPage
[
i
], 
pgsz
));

1133 
	`T˛_SëObjResu…
(
öãΩ
, 
pObj
);

1141 
CMD_FILTER
: {

1142 
	sVfsMëhod
 {

1143 *
zName
;

1144 
mask
;

1145 } 
vfsmëhod
 [] = {

1146 { "xShmO≥n", 
TESTVFS_SHMOPEN_MASK
 },

1147 { "xShmLock", 
TESTVFS_SHMLOCK_MASK
 },

1148 { "xShmB¨rõr", 
TESTVFS_SHMBARRIER_MASK
 },

1149 { "xShmUnm≠", 
TESTVFS_SHMCLOSE_MASK
 },

1150 { "xShmM≠", 
TESTVFS_SHMMAP_MASK
 },

1151 { "xSync", 
TESTVFS_SYNC_MASK
 },

1152 { "xDñëe", 
TESTVFS_DELETE_MASK
 },

1153 { "xWrôe", 
TESTVFS_WRITE_MASK
 },

1154 { "xRód", 
TESTVFS_READ_MASK
 },

1155 { "xTrunˇã", 
TESTVFS_TRUNCATE_MASK
 },

1156 { "xO≥n", 
TESTVFS_OPEN_MASK
 },

1157 { "xClo£", 
TESTVFS_CLOSE_MASK
 },

1158 { "xAc˚ss", 
TESTVFS_ACCESS_MASK
 },

1159 { "xFuŒP©h«me", 
TESTVFS_FULLPATHNAME_MASK
 },

1160 { "xU∆ock", 
TESTVFS_UNLOCK_MASK
 },

1161 { "xLock", 
TESTVFS_LOCK_MASK
 },

1162 { "xCheckRe£rvedLock", 
TESTVFS_CKLOCK_MASK
 },

1164 
T˛_Obj
 **
≠EÀm
 = 0;

1165 
nEÀm
 = 0;

1166 
mask
 = 0;

1167 if–
objc
!=3 ){

1168 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "LIST");

1169  
TCL_ERROR
;

1171 if–
	`T˛_Li°ObjGëEÀmíts
(
öãΩ
, 
objv
[2], &
nEÀm
, &
≠EÀm
) ){

1172  
TCL_ERROR
;

1174 
	`T˛_Re£tResu…
(
öãΩ
);

1175 
i
=0; i<
nEÀm
; i++){

1176 
iMëhod
;

1177 *
zEÀm
 = 
	`T˛_GëSåög
(
≠EÀm
[
i
]);

1178 
iMëhod
=0; iMëhod<
	`AºaySize
(
vfsmëhod
); iMethod++){

1179 if–
	`°rcmp
(
zEÀm
, 
vfsmëhod
[
iMëhod
].
zName
)==0 ){

1180 
mask
 |
vfsmëhod
[
iMëhod
].mask;

1184 if–
iMëhod
==
	`AºaySize
(
vfsmëhod
) ){

1185 
	`T˛_AµídResu…
(
öãΩ
, "unknow¿mëhod: ", 
zEÀm
, 0);

1186  
TCL_ERROR
;

1189 
p
->
mask
 = mask;

1199 
CMD_SCRIPT
: {

1200 if–
objc
==3 ){

1201 
nByã
;

1202 if–
p
->
pS¸ùt
 ){

1203 
	`T˛_De¸RefCou¡
(
p
->
pS¸ùt
);

1204 
p
->
pS¸ùt
 = 0;

1206 
	`T˛_GëSåögFromObj
(
objv
[2], &
nByã
);

1207 if–
nByã
>0 ){

1208 
p
->
pS¸ùt
 = 
	`T˛_Du∂iˇãObj
(
objv
[2]);

1209 
	`T˛_In¸RefCou¡
(
p
->
pS¸ùt
);

1211 }if–
objc
!=2 ){

1212 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "?SCRIPT?");

1213  
TCL_ERROR
;

1216 
	`T˛_Re£tResu…
(
öãΩ
);

1217 if–
p
->
pS¸ùt
 ) 
	`T˛_SëObjResu…
(
öãΩ
,Ö->pScript);

1227 
CMD_CANTOPENERR
:

1228 
CMD_IOERR
:

1229 
CMD_FULLERR
: {

1230 
Te°Fau…Inje˘
 *
pTe°
 = 0;

1231 
iRë
;

1233  
aSubcmd
[
i
].
eCmd
 ){

1234 
CMD_IOERR
: 
pTe°
 = &
p
->
i€º_îr
; ;

1235 
CMD_FULLERR
: 
pTe°
 = &
p
->
fuŒ_îr
; ;

1236 
CMD_CANTOPENERR
: 
pTe°
 = &
p
->
ˇ¡›í_îr
; ;

1237 : 
	`as£π
(0);

1239 
iRë
 = 
pTe°
->
nFaû
;

1240 
pTe°
->
nFaû
 = 0;

1241 
pTe°
->
eFau…
 = 0;

1242 
pTe°
->
iC¡
 = 0;

1244 if–
objc
==4 ){

1245 
iC¡
, 
iPîsi°
;

1246 if–
TCL_OK
!=
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
iC¡
)

1247 || 
TCL_OK
!=
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[3], &
iPîsi°
)

1249  
TCL_ERROR
;

1251 
pTe°
->
eFau…
 = 
iPîsi°
?
FAULT_INJECT_PERSISTENT
:
FAULT_INJECT_TRANSIENT
;

1252 
pTe°
->
iC¡
 = iCnt;

1253 }if–
objc
!=2 ){

1254 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "?CNT PERSIST?");

1255  
TCL_ERROR
;

1257 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
iRë
));

1261 
CMD_DELETE
: {

1262 
	`T˛_DñëeComm™d
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[0]));

1266 
CMD_DEVCHAR
: {

1267 
	sDevi˚Fœg
 {

1268 *
zName
;

1269 
iVÆue
;

1270 } 
aFœg
[] = {

1272 { "©omic", 
SQLITE_IOCAP_ATOMIC
 },

1273 { "©omic512", 
SQLITE_IOCAP_ATOMIC512
 },

1274 { "©omic1k", 
SQLITE_IOCAP_ATOMIC1K
 },

1275 { "©omic2k", 
SQLITE_IOCAP_ATOMIC2K
 },

1276 { "©omic4k", 
SQLITE_IOCAP_ATOMIC4K
 },

1277 { "©omic8k", 
SQLITE_IOCAP_ATOMIC8K
 },

1278 { "©omic16k", 
SQLITE_IOCAP_ATOMIC16K
 },

1279 { "©omic32k", 
SQLITE_IOCAP_ATOMIC32K
 },

1280 { "©omic64k", 
SQLITE_IOCAP_ATOMIC64K
 },

1281 { "£quítül", 
SQLITE_IOCAP_SEQUENTIAL
 },

1282 { "ß„_≠≥nd", 
SQLITE_IOCAP_SAFE_APPEND
 },

1283 { "undñëabÀ_whí_›í", 
SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN
 },

1284 { "powîß„_ovîwrôe", 
SQLITE_IOCAP_POWERSAFE_OVERWRITE
 },

1285 { "immuèbÀ", 
SQLITE_IOCAP_IMMUTABLE
 },

1288 
T˛_Obj
 *
pRë
;

1289 
iFœg
;

1291 if–
objc
>3 ){

1292 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "?ATTR-LIST?");

1293  
TCL_ERROR
;

1295 if–
objc
==3 ){

1296 
j
;

1297 
iNew
 = 0;

1298 
T˛_Obj
 **
Êags
 = 0;

1299 
nFœgs
 = 0;

1301 if–
	`T˛_Li°ObjGëEÀmíts
(
öãΩ
, 
objv
[2], &
nFœgs
, &
Êags
) ){

1302  
TCL_ERROR
;

1305 
j
=0; j<
nFœgs
; j++){

1306 
idx
 = 0;

1307 if–
	`T˛_GëIndexFromObjSåu˘
(
öãΩ
, 
Êags
[
j
], 
aFœg
,

1308 (
aFœg
[0]), "Êag", 0, &
idx
)

1310  
TCL_ERROR
;

1312 if–
aFœg
[
idx
].
iVÆue
<0 && 
nFœgs
>1 ){

1313 
	`T˛_AµídResu…
(
öãΩ
, "bad fœgs: ", 
	`T˛_GëSåög
(
objv
[2]), 0);

1314  
TCL_ERROR
;

1316 
iNew
 |
aFœg
[
idx
].
iVÆue
;

1319 
p
->
iDevch¨
 = 
iNew
| 0x10000000;

1322 
pRë
 = 
	`T˛_NewObj
();

1323 
iFœg
=0; iFœg<(
aFœg
)/(aFlag[0]); iFlag++){

1324 if–
p
->
iDevch¨
 & 
aFœg
[
iFœg
].
iVÆue
 ){

1325 
	`T˛_Li°ObjAµídEÀmít
(

1326 
öãΩ
, 
pRë
, 
	`T˛_NewSåögObj
(
aFœg
[
iFœg
].
zName
, -1)

1330 
	`T˛_SëObjResu…
(
öãΩ
, 
pRë
);

1335 
CMD_SECTORSIZE
: {

1336 if–
objc
>3 ){

1337 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "?VALUE?");

1338  
TCL_ERROR
;

1340 if–
objc
==3 ){

1341 
iNew
 = 0;

1342 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
iNew
) ){

1343  
TCL_ERROR
;

1345 
p
->
iSe˘‹size
 = 
iNew
;

1347 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
p
->
iSe˘‹size
));

1352  
TCL_OK
;

1353 
	}
}

1355 
SQLITE_TCLAPI
 
	$ã°vfs_obj_dñ
(
Clõ¡D©a
 
cd
){

1356 
Te°vfs
 *
p
 = (Te°vf†*)
cd
;

1357 if–
p
->
pS¸ùt
 ) 
	`T˛_De¸RefCou¡
(p->pScript);

1358 
	`sqlôe3_vfs_uƒegi°î
(
p
->
pVfs
);

1359 
	`ck‰ì
((*)
p
->
pVfs
);

1360 
	`ck‰ì
((*)
p
);

1361 
	}
}

1398 
SQLITE_TCLAPI
 
	$ã°vfs_cmd
(

1399 
Clõ¡D©a
 
cd
,

1400 
T˛_I¡îp
 *
öãΩ
,

1401 
objc
,

1402 
T˛_Obj
 *
CONST
 
objv
[]

1404 
sqlôe3_vfs
 
tvfs_vfs
 = {

1411 
tvfsO≥n
,

1412 
tvfsDñëe
,

1413 
tvfsAc˚ss
,

1414 
tvfsFuŒP©h«me
,

1415 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


1416 
tvfsDlO≥n
,

1417 
tvfsDlEº‹
,

1418 
tvfsDlSym
,

1419 
tvfsDlClo£
,

1426 
tvfsR™dom√ss
,

1427 
tvfsSÀï
,

1428 
tvfsCuºítTime
,

1436 
Te°vfs
 *
p
;

1437 
sqlôe3_vfs
 *
pVfs
;

1438 *
zVfs
;

1439 
nByã
;

1441 
i
;

1442 
isNoshm
 = 0;

1443 
isFuŒshm
 = 0;

1444 
isDeÁu…
 = 0;

1445 
szOsFûe
 = 0;

1446 
mxP©h«me
 = -1;

1447 
iVîsi⁄
 = 3;

1449 if–
objc
<2 || 0!=(objc%2ËË
bad_¨gs
;

1450 
i
=2; i<
objc
; i += 2){

1451 
nSwôch
;

1452 *
zSwôch
;

1453 
zSwôch
 = 
	`T˛_GëSåögFromObj
(
objv
[
i
], &
nSwôch
);

1455 if–
nSwôch
>2 && 0==
	`°∫cmp
("-noshm", 
zSwôch
,ÇSwitch) ){

1456 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[
i
+1], &
isNoshm
) ){

1457  
TCL_ERROR
;

1459 if–
isNoshm
 ) 
isFuŒshm
 = 0;

1461 if–
nSwôch
>2 && 0==
	`°∫cmp
("-deÁu…", 
zSwôch
,ÇSwitch) ){

1462 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[
i
+1], &
isDeÁu…
) ){

1463  
TCL_ERROR
;

1466 if–
nSwôch
>2 && 0==
	`°∫cmp
("-szosfûe", 
zSwôch
,ÇSwitch) ){

1467 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[
i
+1], &
szOsFûe
) ){

1468  
TCL_ERROR
;

1471 if–
nSwôch
>2 && 0==
	`°∫cmp
("-mx∑th«me", 
zSwôch
,ÇSwitch) ){

1472 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[
i
+1], &
mxP©h«me
) ){

1473  
TCL_ERROR
;

1476 if–
nSwôch
>2 && 0==
	`°∫cmp
("-ivîsi⁄", 
zSwôch
,ÇSwitch) ){

1477 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[
i
+1], &
iVîsi⁄
) ){

1478  
TCL_ERROR
;

1481 if–
nSwôch
>2 && 0==
	`°∫cmp
("-fuŒshm", 
zSwôch
,ÇSwitch) ){

1482 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[
i
+1], &
isFuŒshm
) ){

1483  
TCL_ERROR
;

1485 if–
isFuŒshm
 ) 
isNoshm
 = 0;

1488 
bad_¨gs
;

1492 if–
szOsFûe
<(
Te°vfsFûe
) ){

1493 
szOsFûe
 = (
Te°vfsFûe
);

1496 
zVfs
 = 
	`T˛_GëSåög
(
objv
[1]);

1497 
nByã
 = (
Te°vfs
Ë+ ()
	`°æí
(
zVfs
)+1;

1498 
p
 = (
Te°vfs
 *)
	`ckÆloc
(
nByã
);

1499 
	`mem£t
(
p
, 0, 
nByã
);

1500 
p
->
iDevch¨
 = -1;

1501 
p
->
iSe˘‹size
 = -1;

1509 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
zVfs
, 
ã°vfs_obj_cmd
, 
p
, 
ã°vfs_obj_dñ
);

1510 
p
->
pP¨ít
 = 
	`sqlôe3_vfs_föd
(0);

1511 
p
->
öãΩ
 = interp;

1513 
p
->
zName
 = (*)&p[1];

1514 
	`mem˝y
(
p
->
zName
, 
zVfs
, 
	`°æí
(zVfs)+1);

1516 
pVfs
 = (
sqlôe3_vfs
 *)
	`ckÆloc
((sqlite3_vfs));

1517 
	`mem˝y
(
pVfs
, &
tvfs_vfs
, (
sqlôe3_vfs
));

1518 
pVfs
->
pAµD©a
 = (*)
p
;

1519 
pVfs
->
iVîsi⁄
 = iVersion;

1520 
pVfs
->
zName
 = 
p
->zName;

1521 
pVfs
->
mxP©h«me
 = 
p
->
pP¨ít
->mxPathname;

1522 if–
mxP©h«me
>=0 && mxP©h«me<
pVfs
->mxPathname ){

1523 
pVfs
->
mxP©h«me
 = mxPathname;

1525 
pVfs
->
szOsFûe
 = szOsFile;

1526 
p
->
pVfs
 =ÖVfs;

1527 
p
->
isNoshm
 = isNoshm;

1528 
p
->
isFuŒshm
 = isFullshm;

1529 
p
->
mask
 = 
TESTVFS_ALL_MASK
;

1531 
	`sqlôe3_vfs_ªgi°î
(
pVfs
, 
isDeÁu…
);

1533  
TCL_OK
;

1535 
bad_¨gs
:

1536 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "VFSNAME ?-noshm BOOL? ?-fullshm BOOL? ?-default BOOL? ?-mxpathname INT? ?-szosfile INT? ?-iversion INT?");

1537  
TCL_ERROR
;

1538 
	}
}

1540 
	$Sqlôëe°vfs_Inô
(
T˛_I¡îp
 *
öãΩ
){

1541 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "ã°vfs", 
ã°vfs_cmd
, 0, 0);

1542  
TCL_OK
;

1543 
	}
}

	@test_vfstrace.c

110 
	~<°dlib.h
>

111 
	~<°rög.h
>

112 
	~"sqlôe3.h
"

118 
vf°ø˚_öfo
 
	tvf°ø˚_öfo
;

119 
	svf°ø˚_öfo
 {

120 
sqlôe3_vfs
 *
	mpRoŸVfs
;

121 (*
	mxOut
)(const *, *);

122 *
	mpOutArg
;

123 c⁄° *
	mzVfsName
;

124 
sqlôe3_vfs
 *
	mpTø˚Vfs
;

130 
vf°ø˚_fûe
 
	tvf°ø˚_fûe
;

131 
	svf°ø˚_fûe
 {

132 
sqlôe3_fûe
 
	mba£
;

133 
vf°ø˚_öfo
 *
	mpInfo
;

134 c⁄° *
	mzFName
;

135 
sqlôe3_fûe
 *
	mpRól
;

141 
vf°ø˚Clo£
(
sqlôe3_fûe
*);

142 
vf°ø˚Ród
(
sqlôe3_fûe
*, *, 
iAmt
, 
sqlôe3_öt64
 
iOf°
);

143 
vf°ø˚Wrôe
(
sqlôe3_fûe
*,c⁄° *,
iAmt
, 
sqlôe3_öt64
);

144 
vf°ø˚Trunˇã
(
sqlôe3_fûe
*, 
sqlôe3_öt64
 
size
);

145 
vf°ø˚Sync
(
sqlôe3_fûe
*, 
Êags
);

146 
vf°ø˚FûeSize
(
sqlôe3_fûe
*, 
sqlôe3_öt64
 *
pSize
);

147 
vf°ø˚Lock
(
sqlôe3_fûe
*, );

148 
vf°ø˚U∆ock
(
sqlôe3_fûe
*, );

149 
vf°ø˚CheckRe£rvedLock
(
sqlôe3_fûe
*, *);

150 
vf°ø˚FûeC⁄åﬁ
(
sqlôe3_fûe
*, 
›
, *
pArg
);

151 
vf°ø˚Se˘‹Size
(
sqlôe3_fûe
*);

152 
vf°ø˚Devi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
*);

153 
vf°ø˚ShmLock
(
sqlôe3_fûe
*,,,);

154 
vf°ø˚ShmM≠
(
sqlôe3_fûe
*,,,, volatile **);

155 
vf°ø˚ShmB¨rõr
(
sqlôe3_fûe
*);

156 
vf°ø˚ShmUnm≠
(
sqlôe3_fûe
*,);

161 
vf°ø˚O≥n
(
sqlôe3_vfs
*, c⁄° *, 
sqlôe3_fûe
*, , *);

162 
vf°ø˚Dñëe
(
sqlôe3_vfs
*, c⁄° *
zName
, 
syncDú
);

163 
vf°ø˚Ac˚ss
(
sqlôe3_vfs
*, c⁄° *
zName
, 
Êags
, *);

164 
vf°ø˚FuŒP©h«me
(
sqlôe3_vfs
*, c⁄° *
zName
, , *);

165 *
vf°ø˚DlO≥n
(
sqlôe3_vfs
*, c⁄° *
zFûíame
);

166 
vf°ø˚DlEº‹
(
sqlôe3_vfs
*, 
nByã
, *
zEºMsg
);

167 (*
	$vf°ø˚DlSym
(
sqlôe3_vfs
*,*, c⁄° *
zSymbﬁ
))();

168 
	`vf°ø˚DlClo£
(
sqlôe3_vfs
*, *);

169 
	`vf°ø˚R™dom√ss
(
sqlôe3_vfs
*, 
nByã
, *
zOut
);

170 
	`vf°ø˚SÀï
(
sqlôe3_vfs
*, 
mi¸o£c⁄ds
);

171 
	`vf°ø˚CuºítTime
(
sqlôe3_vfs
*, *);

172 
	`vf°ø˚GëLa°Eº‹
(
sqlôe3_vfs
*, , *);

173 
	`vf°ø˚CuºítTimeI¡64
(
sqlôe3_vfs
*, 
sqlôe3_öt64
*);

174 
	`vf°ø˚SëSy°emCÆl
(
sqlôe3_vfs
*,c⁄° *, 
sqlôe3_sysˇŒ_±r
);

175 
sqlôe3_sysˇŒ_±r
 
	`vf°ø˚GëSy°emCÆl
(
sqlôe3_vfs
*, const *);

176 c⁄° *
	`vf°ø˚NextSy°emCÆl
(
sqlôe3_vfs
*, c⁄° *
zName
);

184 c⁄° *
	$fûeTaû
(c⁄° *
z
){

185 
i
;

186 if–
z
==0 )  0;

187 
i
 = 
	`°æí
(
z
)-1;

188  
i
>0 && 
z
[i-1]!='/' ){ i--; }

189  &
z
[
i
];

190 
	}
}

195 
	$vf°ø˚_¥ötf
(

196 
vf°ø˚_öfo
 *
pInfo
,

197 c⁄° *
zF‹m©
,

200 
va_li°
 
≠
;

201 *
zMsg
;

202 
	`va_°¨t
(
≠
, 
zF‹m©
);

203 
zMsg
 = 
	`sqlôe3_vm¥ötf
(
zF‹m©
, 
≠
);

204 
	`va_íd
(
≠
);

205 
pInfo
->
	`xOut
(
zMsg
,ÖInfo->
pOutArg
);

206 
	`sqlôe3_‰ì
(
zMsg
);

207 
	}
}

213 
	$vf°ø˚_¥öt_îrcode
(

214 
vf°ø˚_öfo
 *
pInfo
,

215 c⁄° *
zF‹m©
,

216 
rc


218 
zBuf
[50];

219 *
zVÆ
;

220  
rc
 ){

221 
SQLITE_OK
: 
zVÆ
 = "SQLITE_OK"; ;

222 
SQLITE_ERROR
: 
zVÆ
 = "SQLITE_ERROR"; ;

223 
SQLITE_PERM
: 
zVÆ
 = "SQLITE_PERM"; ;

224 
SQLITE_ABORT
: 
zVÆ
 = "SQLITE_ABORT"; ;

225 
SQLITE_BUSY
: 
zVÆ
 = "SQLITE_BUSY"; ;

226 
SQLITE_NOMEM
: 
zVÆ
 = "SQLITE_NOMEM"; ;

227 
SQLITE_READONLY
: 
zVÆ
 = "SQLITE_READONLY"; ;

228 
SQLITE_INTERRUPT
: 
zVÆ
 = "SQLITE_INTERRUPT"; ;

229 
SQLITE_IOERR
: 
zVÆ
 = "SQLITE_IOERR"; ;

230 
SQLITE_CORRUPT
: 
zVÆ
 = "SQLITE_CORRUPT"; ;

231 
SQLITE_FULL
: 
zVÆ
 = "SQLITE_FULL"; ;

232 
SQLITE_CANTOPEN
: 
zVÆ
 = "SQLITE_CANTOPEN"; ;

233 
SQLITE_PROTOCOL
: 
zVÆ
 = "SQLITE_PROTOCOL"; ;

234 
SQLITE_EMPTY
: 
zVÆ
 = "SQLITE_EMPTY"; ;

235 
SQLITE_SCHEMA
: 
zVÆ
 = "SQLITE_SCHEMA"; ;

236 
SQLITE_CONSTRAINT
: 
zVÆ
 = "SQLITE_CONSTRAINT"; ;

237 
SQLITE_MISMATCH
: 
zVÆ
 = "SQLITE_MISMATCH"; ;

238 
SQLITE_MISUSE
: 
zVÆ
 = "SQLITE_MISUSE"; ;

239 
SQLITE_NOLFS
: 
zVÆ
 = "SQLITE_NOLFS"; ;

240 
SQLITE_IOERR_READ
: 
zVÆ
 = "SQLITE_IOERR_READ"; ;

241 
SQLITE_IOERR_SHORT_READ
: 
zVÆ
 = "SQLITE_IOERR_SHORT_READ"; ;

242 
SQLITE_IOERR_WRITE
: 
zVÆ
 = "SQLITE_IOERR_WRITE"; ;

243 
SQLITE_IOERR_FSYNC
: 
zVÆ
 = "SQLITE_IOERR_FSYNC"; ;

244 
SQLITE_IOERR_DIR_FSYNC
: 
zVÆ
 = "SQLITE_IOERR_DIR_FSYNC"; ;

245 
SQLITE_IOERR_TRUNCATE
: 
zVÆ
 = "SQLITE_IOERR_TRUNCATE"; ;

246 
SQLITE_IOERR_FSTAT
: 
zVÆ
 = "SQLITE_IOERR_FSTAT"; ;

247 
SQLITE_IOERR_UNLOCK
: 
zVÆ
 = "SQLITE_IOERR_UNLOCK"; ;

248 
SQLITE_IOERR_RDLOCK
: 
zVÆ
 = "SQLITE_IOERR_RDLOCK"; ;

249 
SQLITE_IOERR_DELETE
: 
zVÆ
 = "SQLITE_IOERR_DELETE"; ;

250 
SQLITE_IOERR_BLOCKED
: 
zVÆ
 = "SQLITE_IOERR_BLOCKED"; ;

251 
SQLITE_IOERR_NOMEM
: 
zVÆ
 = "SQLITE_IOERR_NOMEM"; ;

252 
SQLITE_IOERR_ACCESS
: 
zVÆ
 = "SQLITE_IOERR_ACCESS"; ;

253 
SQLITE_IOERR_CHECKRESERVEDLOCK
:

254 
zVÆ
 = "SQLITE_IOERR_CHECKRESERVEDLOCK"; ;

255 
SQLITE_IOERR_LOCK
: 
zVÆ
 = "SQLITE_IOERR_LOCK"; ;

256 
SQLITE_IOERR_CLOSE
: 
zVÆ
 = "SQLITE_IOERR_CLOSE"; ;

257 
SQLITE_IOERR_DIR_CLOSE
: 
zVÆ
 = "SQLITE_IOERR_DIR_CLOSE"; ;

258 
SQLITE_IOERR_SHMOPEN
: 
zVÆ
 = "SQLITE_IOERR_SHMOPEN"; ;

259 
SQLITE_IOERR_SHMSIZE
: 
zVÆ
 = "SQLITE_IOERR_SHMSIZE"; ;

260 
SQLITE_IOERR_SHMLOCK
: 
zVÆ
 = "SQLITE_IOERR_SHMLOCK"; ;

261 
SQLITE_IOERR_SHMMAP
: 
zVÆ
 = "SQLITE_IOERR_SHMMAP"; ;

262 
SQLITE_IOERR_SEEK
: 
zVÆ
 = "SQLITE_IOERR_SEEK"; ;

263 
SQLITE_IOERR_GETTEMPPATH
: 
zVÆ
 = "SQLITE_IOERR_GETTEMPPATH"; ;

264 
SQLITE_IOERR_CONVPATH
: 
zVÆ
 = "SQLITE_IOERR_CONVPATH"; ;

265 
SQLITE_READONLY_DBMOVED
: 
zVÆ
 = "SQLITE_READONLY_DBMOVED"; ;

266 
SQLITE_LOCKED_SHAREDCACHE
: 
zVÆ
 = "SQLITE_LOCKED_SHAREDCACHE"; ;

267 
SQLITE_BUSY_RECOVERY
: 
zVÆ
 = "SQLITE_BUSY_RECOVERY"; ;

268 
SQLITE_CANTOPEN_NOTEMPDIR
: 
zVÆ
 = "SQLITE_CANTOPEN_NOTEMPDIR"; ;

270 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%d", 
rc
);

271 
zVÆ
 = 
zBuf
;

275 
	`vf°ø˚_¥ötf
(
pInfo
, 
zF‹m©
, 
zVÆ
);

276 
	}
}

281 
	$°øµíd
(*
z
, *
pI
, c⁄° *
zAµíd
){

282 
i
 = *
pI
;

283  
zAµíd
[0] ){ 
z
[
i
++] = *(zAppend++); }

284 
z
[
i
] = 0;

285 *
pI
 = 
i
;

286 
	}
}

291 
	$vf°ø˚Clo£
(
sqlôe3_fûe
 *
pFûe
){

292 
vf°ø˚_fûe
 *
p
 = (vf°ø˚_fûê*)
pFûe
;

293 
vf°ø˚_öfo
 *
pInfo
 = 
p
->pInfo;

294 
rc
;

295 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xClo£(%s)",ÖInfo->
zVfsName
, 
p
->
zFName
);

296 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xClo£
(p->pReal);

297 
	`vf°ø˚_¥öt_îrcode
(
pInfo
, " -> %s\n", 
rc
);

298 if–
rc
==
SQLITE_OK
 ){

299 
	`sqlôe3_‰ì
((*)
p
->
ba£
.
pMëhods
);

300 
p
->
ba£
.
pMëhods
 = 0;

302  
rc
;

303 
	}
}

308 
	$vf°ø˚Ród
(

309 
sqlôe3_fûe
 *
pFûe
,

310 *
zBuf
,

311 
iAmt
,

312 
sqlôe_öt64
 
iOf°


314 
vf°ø˚_fûe
 *
p
 = (vf°ø˚_fûê*)
pFûe
;

315 
vf°ø˚_öfo
 *
pInfo
 = 
p
->pInfo;

316 
rc
;

317 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xRead(%s,n=%d,ofst=%lld)",

318 
pInfo
->
zVfsName
, 
p
->
zFName
, 
iAmt
, 
iOf°
);

319 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xRód
’->pRól, 
zBuf
, 
iAmt
, 
iOf°
);

320 
	`vf°ø˚_¥öt_îrcode
(
pInfo
, " -> %s\n", 
rc
);

321  
rc
;

322 
	}
}

327 
	$vf°ø˚Wrôe
(

328 
sqlôe3_fûe
 *
pFûe
,

329 c⁄° *
zBuf
,

330 
iAmt
,

331 
sqlôe_öt64
 
iOf°


333 
vf°ø˚_fûe
 *
p
 = (vf°ø˚_fûê*)
pFûe
;

334 
vf°ø˚_öfo
 *
pInfo
 = 
p
->pInfo;

335 
rc
;

336 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xWrite(%s,n=%d,ofst=%lld)",

337 
pInfo
->
zVfsName
, 
p
->
zFName
, 
iAmt
, 
iOf°
);

338 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xWrôe
’->pRól, 
zBuf
, 
iAmt
, 
iOf°
);

339 
	`vf°ø˚_¥öt_îrcode
(
pInfo
, " -> %s\n", 
rc
);

340  
rc
;

341 
	}
}

346 
	$vf°ø˚Trunˇã
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe_öt64
 
size
){

347 
vf°ø˚_fûe
 *
p
 = (vf°ø˚_fûê*)
pFûe
;

348 
vf°ø˚_öfo
 *
pInfo
 = 
p
->pInfo;

349 
rc
;

350 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xTrunˇã(%s,%Œd)",ÖInfo->
zVfsName
, 
p
->
zFName
,

351 
size
);

352 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xTrunˇã
’->pRól, 
size
);

353 
	`vf°ø˚_¥ötf
(
pInfo
, " -> %d\n", 
rc
);

354  
rc
;

355 
	}
}

360 
	$vf°ø˚Sync
(
sqlôe3_fûe
 *
pFûe
, 
Êags
){

361 
vf°ø˚_fûe
 *
p
 = (vf°ø˚_fûê*)
pFûe
;

362 
vf°ø˚_öfo
 *
pInfo
 = 
p
->pInfo;

363 
rc
;

364 
i
;

365 
zBuf
[100];

366 
	`mem˝y
(
zBuf
, "|0", 3);

367 
i
 = 0;

368 if–
Êags
 & 
SQLITE_SYNC_FULL
 ) 
	`°øµíd
(
zBuf
, &
i
, "|FULL");

369 if–
Êags
 & 
SQLITE_SYNC_NORMAL
 ) 
	`°øµíd
(
zBuf
, &
i
, "|NORMAL");

370 if–
Êags
 & 
SQLITE_SYNC_DATAONLY
 ) 
	`°øµíd
(
zBuf
, &
i
, "|DATAONLY");

371 if–
Êags
 & ~(
SQLITE_SYNC_FULL
|
SQLITE_SYNC_DATAONLY
) ){

372 
	`sqlôe3_¢¥ötf
((
zBuf
)-
i
, &zBuf[i], "|0x%x", 
Êags
);

374 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xSync(%s,%s)",ÖInfo->
zVfsName
, 
p
->
zFName
,

375 &
zBuf
[1]);

376 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xSync
’->pRól, 
Êags
);

377 
	`vf°ø˚_¥ötf
(
pInfo
, " -> %d\n", 
rc
);

378  
rc
;

379 
	}
}

384 
	$vf°ø˚FûeSize
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe_öt64
 *
pSize
){

385 
vf°ø˚_fûe
 *
p
 = (vf°ø˚_fûê*)
pFûe
;

386 
vf°ø˚_öfo
 *
pInfo
 = 
p
->pInfo;

387 
rc
;

388 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xFûeSize(%s)",ÖInfo->
zVfsName
, 
p
->
zFName
);

389 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xFûeSize
’->pRól, 
pSize
);

390 
	`vf°ø˚_¥öt_îrcode
(
pInfo
, " -> %s,", 
rc
);

391 
	`vf°ø˚_¥ötf
(
pInfo
, " size=%Œd\n", *
pSize
);

392  
rc
;

393 
	}
}

398 c⁄° *
	$lockName
(
eLock
){

399 c⁄° *
azLockNames
[] = {

402 if–
eLock
<0 ||ÉLock>=(
azLockNames
)/(azLockNames[0]) ){

405  
azLockNames
[
eLock
];

407 
	}
}

412 
	$vf°ø˚Lock
(
sqlôe3_fûe
 *
pFûe
, 
eLock
){

413 
vf°ø˚_fûe
 *
p
 = (vf°ø˚_fûê*)
pFûe
;

414 
vf°ø˚_öfo
 *
pInfo
 = 
p
->pInfo;

415 
rc
;

416 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xLock(%s,%s)",ÖInfo->
zVfsName
, 
p
->
zFName
,

417 
	`lockName
(
eLock
));

418 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xLock
’->pRól, 
eLock
);

419 
	`vf°ø˚_¥öt_îrcode
(
pInfo
, " -> %s\n", 
rc
);

420  
rc
;

421 
	}
}

426 
	$vf°ø˚U∆ock
(
sqlôe3_fûe
 *
pFûe
, 
eLock
){

427 
vf°ø˚_fûe
 *
p
 = (vf°ø˚_fûê*)
pFûe
;

428 
vf°ø˚_öfo
 *
pInfo
 = 
p
->pInfo;

429 
rc
;

430 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xU∆ock(%s,%s)",ÖInfo->
zVfsName
, 
p
->
zFName
,

431 
	`lockName
(
eLock
));

432 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xU∆ock
’->pRól, 
eLock
);

433 
	`vf°ø˚_¥öt_îrcode
(
pInfo
, " -> %s\n", 
rc
);

434  
rc
;

435 
	}
}

440 
	$vf°ø˚CheckRe£rvedLock
(
sqlôe3_fûe
 *
pFûe
, *
pResOut
){

441 
vf°ø˚_fûe
 *
p
 = (vf°ø˚_fûê*)
pFûe
;

442 
vf°ø˚_öfo
 *
pInfo
 = 
p
->pInfo;

443 
rc
;

444 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xCheckReservedLock(%s,%d)",

445 
pInfo
->
zVfsName
, 
p
->
zFName
);

446 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xCheckRe£rvedLock
’->pRól, 
pResOut
);

447 
	`vf°ø˚_¥öt_îrcode
(
pInfo
, " -> %s", 
rc
);

448 
	`vf°ø˚_¥ötf
(
pInfo
, ", out=%d\n", *
pResOut
);

449  
rc
;

450 
	}
}

455 
	$vf°ø˚FûeC⁄åﬁ
(
sqlôe3_fûe
 *
pFûe
, 
›
, *
pArg
){

456 
vf°ø˚_fûe
 *
p
 = (vf°ø˚_fûê*)
pFûe
;

457 
vf°ø˚_öfo
 *
pInfo
 = 
p
->pInfo;

458 
rc
;

459 
zBuf
[100];

460 *
zOp
;

461  
›
 ){

462 
SQLITE_FCNTL_LOCKSTATE
: 
zOp
 = "LOCKSTATE"; ;

463 
SQLITE_GET_LOCKPROXYFILE
: 
zOp
 = "GET_LOCKPROXYFILE"; ;

464 
SQLITE_SET_LOCKPROXYFILE
: 
zOp
 = "SET_LOCKPROXYFILE"; ;

465 
SQLITE_LAST_ERRNO
: 
zOp
 = "LAST_ERRNO"; ;

466 
SQLITE_FCNTL_SIZE_HINT
: {

467 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "SIZE_HINT,%lld",

468 *(
sqlôe3_öt64
*)
pArg
);

469 
zOp
 = 
zBuf
;

472 
SQLITE_FCNTL_CHUNK_SIZE
: {

473 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "CHUNK_SIZE,%d", *(*)
pArg
);

474 
zOp
 = 
zBuf
;

477 
SQLITE_FCNTL_FILE_POINTER
: 
zOp
 = "FILE_POINTER"; ;

478 
SQLITE_FCNTL_SYNC_OMITTED
: 
zOp
 = "SYNC_OMITTED"; ;

479 
SQLITE_FCNTL_WIN32_AV_RETRY
: 
zOp
 = "WIN32_AV_RETRY"; ;

480 
SQLITE_FCNTL_PERSIST_WAL
: 
zOp
 = "PERSIST_WAL"; ;

481 
SQLITE_FCNTL_OVERWRITE
: 
zOp
 = "OVERWRITE"; ;

482 
SQLITE_FCNTL_VFSNAME
: 
zOp
 = "VFSNAME"; ;

483 
SQLITE_FCNTL_TEMPFILENAME
: 
zOp
 = "TEMPFILENAME"; ;

484 0xˇ093Á0: 
zOp
 = "DB_UNCHANGED"; ;

485 
SQLITE_FCNTL_PRAGMA
: {

486 c⁄° *c⁄°* 
a
 = (c⁄° *c⁄°*)
pArg
;

487 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "PRAGMA,[%s,%s]",
a
[1],a[2]);

488 
zOp
 = 
zBuf
;

492 
	`sqlôe3_¢¥ötf
( 
zBuf
, zBuf, "%d", 
›
);

493 
zOp
 = 
zBuf
;

497 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xFileControl(%s,%s)",

498 
pInfo
->
zVfsName
, 
p
->
zFName
, 
zOp
);

499 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xFûeC⁄åﬁ
’->pRól, 
›
, 
pArg
);

500 
	`vf°ø˚_¥öt_îrcode
(
pInfo
, " -> %s\n", 
rc
);

501 if–
›
==
SQLITE_FCNTL_VFSNAME
 && 
rc
==
SQLITE_OK
 ){

502 *(**)
pArg
 = 
	`sqlôe3_m¥ötf
("vfstrace.%s/%z",

503 
pInfo
->
zVfsName
, *(**)
pArg
);

505 if–(
›
==
SQLITE_FCNTL_PRAGMA
 || op==
SQLITE_FCNTL_TEMPFILENAME
)

506 && 
rc
==
SQLITE_OK
 && *(**)
pArg
 ){

507 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xFileControl(%s,%s)Ñeturns %s",

508 
pInfo
->
zVfsName
, 
p
->
zFName
, 
zOp
, *(**)
pArg
);

510  
rc
;

511 
	}
}

516 
	$vf°ø˚Se˘‹Size
(
sqlôe3_fûe
 *
pFûe
){

517 
vf°ø˚_fûe
 *
p
 = (vf°ø˚_fûê*)
pFûe
;

518 
vf°ø˚_öfo
 *
pInfo
 = 
p
->pInfo;

519 
rc
;

520 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xSe˘‹Size(%s)",ÖInfo->
zVfsName
, 
p
->
zFName
);

521 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xSe˘‹Size
(p->pReal);

522 
	`vf°ø˚_¥ötf
(
pInfo
, " -> %d\n", 
rc
);

523  
rc
;

524 
	}
}

529 
	$vf°ø˚Devi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
 *
pFûe
){

530 
vf°ø˚_fûe
 *
p
 = (vf°ø˚_fûê*)
pFûe
;

531 
vf°ø˚_öfo
 *
pInfo
 = 
p
->pInfo;

532 
rc
;

533 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xDeviceCharacteristics(%s)",

534 
pInfo
->
zVfsName
, 
p
->
zFName
);

535 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xDevi˚Ch¨a˘îi°ics
(p->pReal);

536 
	`vf°ø˚_¥ötf
(
pInfo
, " -> 0x%08x\n", 
rc
);

537  
rc
;

538 
	}
}

543 
	$vf°ø˚ShmLock
(
sqlôe3_fûe
 *
pFûe
, 
of°
, 
n
, 
Êags
){

544 
vf°ø˚_fûe
 *
p
 = (vf°ø˚_fûê*)
pFûe
;

545 
vf°ø˚_öfo
 *
pInfo
 = 
p
->pInfo;

546 
rc
;

547 
zLck
[100];

548 
i
 = 0;

549 
	`mem˝y
(
zLck
, "|0", 3);

550 if–
Êags
 & 
SQLITE_SHM_UNLOCK
 ) 
	`°øµíd
(
zLck
, &
i
, "|UNLOCK");

551 if–
Êags
 & 
SQLITE_SHM_LOCK
 ) 
	`°øµíd
(
zLck
, &
i
, "|LOCK");

552 if–
Êags
 & 
SQLITE_SHM_SHARED
 ) 
	`°øµíd
(
zLck
, &
i
, "|SHARED");

553 if–
Êags
 & 
SQLITE_SHM_EXCLUSIVE
 ) 
	`°øµíd
(
zLck
, &
i
, "|EXCLUSIVE");

554 if–
Êags
 & ~(0xf) ){

555 
	`sqlôe3_¢¥ötf
((
zLck
)-
i
, &zLck[i], "|0x%x", 
Êags
);

557 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xShmLock(%s,ofst=%d,n=%d,%s)",

558 
pInfo
->
zVfsName
, 
p
->
zFName
, 
of°
, 
n
, &
zLck
[1]);

559 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xShmLock
’->pRól, 
of°
, 
n
, 
Êags
);

560 
	`vf°ø˚_¥öt_îrcode
(
pInfo
, " -> %s\n", 
rc
);

561  
rc
;

562 
	}
}

563 
	$vf°ø˚ShmM≠
(

564 
sqlôe3_fûe
 *
pFûe
,

565 
iRegi⁄
,

566 
szRegi⁄
,

567 
isWrôe
,

568 vﬁ©ûê**
µ


570 
vf°ø˚_fûe
 *
p
 = (vf°ø˚_fûê*)
pFûe
;

571 
vf°ø˚_öfo
 *
pInfo
 = 
p
->pInfo;

572 
rc
;

573 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xShmMap(%s,iRegion=%d,szRegion=%d,isWrite=%d,*)",

574 
pInfo
->
zVfsName
, 
p
->
zFName
, 
iRegi⁄
, 
szRegi⁄
, 
isWrôe
);

575 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xShmM≠
’->pRól, 
iRegi⁄
, 
szRegi⁄
, 
isWrôe
, 
µ
);

576 
	`vf°ø˚_¥öt_îrcode
(
pInfo
, " -> %s\n", 
rc
);

577  
rc
;

578 
	}
}

579 
	$vf°ø˚ShmB¨rõr
(
sqlôe3_fûe
 *
pFûe
){

580 
vf°ø˚_fûe
 *
p
 = (vf°ø˚_fûê*)
pFûe
;

581 
vf°ø˚_öfo
 *
pInfo
 = 
p
->pInfo;

582 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xShmB¨rõr(%s)\n",ÖInfo->
zVfsName
, 
p
->
zFName
);

583 
p
->
pRól
->
pMëhods
->
	`xShmB¨rõr
(p->pReal);

584 
	}
}

585 
	$vf°ø˚ShmUnm≠
(
sqlôe3_fûe
 *
pFûe
, 
dñFœg
){

586 
vf°ø˚_fûe
 *
p
 = (vf°ø˚_fûê*)
pFûe
;

587 
vf°ø˚_öfo
 *
pInfo
 = 
p
->pInfo;

588 
rc
;

589 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xShmUnmap(%s,delFlag=%d)",

590 
pInfo
->
zVfsName
, 
p
->
zFName
, 
dñFœg
);

591 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xShmUnm≠
’->pRól, 
dñFœg
);

592 
	`vf°ø˚_¥öt_îrcode
(
pInfo
, " -> %s\n", 
rc
);

593  
rc
;

594 
	}
}

601 
	$vf°ø˚O≥n
(

602 
sqlôe3_vfs
 *
pVfs
,

603 c⁄° *
zName
,

604 
sqlôe3_fûe
 *
pFûe
,

605 
Êags
,

606 *
pOutFœgs


608 
rc
;

609 
vf°ø˚_fûe
 *
p
 = (vf°ø˚_fûê*)
pFûe
;

610 
vf°ø˚_öfo
 *
pInfo
 = (vf°ø˚_öfo*)
pVfs
->
pAµD©a
;

611 
sqlôe3_vfs
 *
pRoŸ
 = 
pInfo
->
pRoŸVfs
;

612 
p
->
pInfo
 =ÖInfo;

613 
p
->
zFName
 = 
zName
 ? 
	`fûeTaû
(zName) : "<temp>";

614 
p
->
pRól
 = (
sqlôe3_fûe
 *)&p[1];

615 
rc
 = 
pRoŸ
->
	`xO≥n
’RoŸ, 
zName
, 
p
->
pRól
, 
Êags
, 
pOutFœgs
);

616 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xOpen(%s,flags=0x%x)",

617 
pInfo
->
zVfsName
, 
p
->
zFName
, 
Êags
);

618 if–
p
->
pRól
->
pMëhods
 ){

619 
sqlôe3_io_mëhods
 *
pNew
 = 
	`sqlôe3_mÆloc
( (*pNew) );

620 c⁄° 
sqlôe3_io_mëhods
 *
pSub
 = 
p
->
pRól
->
pMëhods
;

621 
	`mem£t
(
pNew
, 0, (*pNew));

622 
pNew
->
iVîsi⁄
 = 
pSub
->iVersion;

623 
pNew
->
xClo£
 = 
vf°ø˚Clo£
;

624 
pNew
->
xRód
 = 
vf°ø˚Ród
;

625 
pNew
->
xWrôe
 = 
vf°ø˚Wrôe
;

626 
pNew
->
xTrunˇã
 = 
vf°ø˚Trunˇã
;

627 
pNew
->
xSync
 = 
vf°ø˚Sync
;

628 
pNew
->
xFûeSize
 = 
vf°ø˚FûeSize
;

629 
pNew
->
xLock
 = 
vf°ø˚Lock
;

630 
pNew
->
xU∆ock
 = 
vf°ø˚U∆ock
;

631 
pNew
->
xCheckRe£rvedLock
 = 
vf°ø˚CheckRe£rvedLock
;

632 
pNew
->
xFûeC⁄åﬁ
 = 
vf°ø˚FûeC⁄åﬁ
;

633 
pNew
->
xSe˘‹Size
 = 
vf°ø˚Se˘‹Size
;

634 
pNew
->
xDevi˚Ch¨a˘îi°ics
 = 
vf°ø˚Devi˚Ch¨a˘îi°ics
;

635 if–
pNew
->
iVîsi⁄
>=2 ){

636 
pNew
->
xShmM≠
 = 
pSub
->xShmM≠ ? 
vf°ø˚ShmM≠
 : 0;

637 
pNew
->
xShmLock
 = 
pSub
->xShmLock ? 
vf°ø˚ShmLock
 : 0;

638 
pNew
->
xShmB¨rõr
 = 
pSub
->xShmB¨rõ∏? 
vf°ø˚ShmB¨rõr
 : 0;

639 
pNew
->
xShmUnm≠
 = 
pSub
->xShmUnm≠ ? 
vf°ø˚ShmUnm≠
 : 0;

641 
pFûe
->
pMëhods
 = 
pNew
;

643 
	`vf°ø˚_¥öt_îrcode
(
pInfo
, " -> %s", 
rc
);

644 if–
pOutFœgs
 ){

645 
	`vf°ø˚_¥ötf
(
pInfo
, ", outFœgs=0x%x\n", *
pOutFœgs
);

647 
	`vf°ø˚_¥ötf
(
pInfo
, "\n");

649  
rc
;

650 
	}
}

657 
	$vf°ø˚Dñëe
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zP©h
, 
dúSync
){

658 
vf°ø˚_öfo
 *
pInfo
 = (vf°ø˚_öfo*)
pVfs
->
pAµD©a
;

659 
sqlôe3_vfs
 *
pRoŸ
 = 
pInfo
->
pRoŸVfs
;

660 
rc
;

661 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xDelete(\"%s\",%d)",

662 
pInfo
->
zVfsName
, 
zP©h
, 
dúSync
);

663 
rc
 = 
pRoŸ
->
	`xDñëe
’RoŸ, 
zP©h
, 
dúSync
);

664 
	`vf°ø˚_¥öt_îrcode
(
pInfo
, " -> %s\n", 
rc
);

665  
rc
;

666 
	}
}

672 
	$vf°ø˚Ac˚ss
(

673 
sqlôe3_vfs
 *
pVfs
,

674 c⁄° *
zP©h
,

675 
Êags
,

676 *
pResOut


678 
vf°ø˚_öfo
 *
pInfo
 = (vf°ø˚_öfo*)
pVfs
->
pAµD©a
;

679 
sqlôe3_vfs
 *
pRoŸ
 = 
pInfo
->
pRoŸVfs
;

680 
rc
;

681 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xAccess(\"%s\",%d)",

682 
pInfo
->
zVfsName
, 
zP©h
, 
Êags
);

683 
rc
 = 
pRoŸ
->
	`xAc˚ss
’RoŸ, 
zP©h
, 
Êags
, 
pResOut
);

684 
	`vf°ø˚_¥öt_îrcode
(
pInfo
, " -> %s", 
rc
);

685 
	`vf°ø˚_¥ötf
(
pInfo
, ", out=%d\n", *
pResOut
);

686  
rc
;

687 
	}
}

694 
	$vf°ø˚FuŒP©h«me
(

695 
sqlôe3_vfs
 *
pVfs
,

696 c⁄° *
zP©h
,

697 
nOut
,

698 *
zOut


700 
vf°ø˚_öfo
 *
pInfo
 = (vf°ø˚_öfo*)
pVfs
->
pAµD©a
;

701 
sqlôe3_vfs
 *
pRoŸ
 = 
pInfo
->
pRoŸVfs
;

702 
rc
;

703 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xFullPathname(\"%s\")",

704 
pInfo
->
zVfsName
, 
zP©h
);

705 
rc
 = 
pRoŸ
->
	`xFuŒP©h«me
’RoŸ, 
zP©h
, 
nOut
, 
zOut
);

706 
	`vf°ø˚_¥öt_îrcode
(
pInfo
, " -> %s", 
rc
);

707 
	`vf°ø˚_¥ötf
(
pInfo
, ", out=\"%.*s\"\n", 
nOut
, 
zOut
);

708  
rc
;

709 
	}
}

714 *
	$vf°ø˚DlO≥n
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zP©h
){

715 
vf°ø˚_öfo
 *
pInfo
 = (vf°ø˚_öfo*)
pVfs
->
pAµD©a
;

716 
sqlôe3_vfs
 *
pRoŸ
 = 
pInfo
->
pRoŸVfs
;

717 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xDlO≥n(\"%s\")\n",ÖInfo->
zVfsName
, 
zP©h
);

718  
pRoŸ
->
	`xDlO≥n
’RoŸ, 
zP©h
);

719 
	}
}

726 
	$vf°ø˚DlEº‹
(
sqlôe3_vfs
 *
pVfs
, 
nByã
, *
zEºMsg
){

727 
vf°ø˚_öfo
 *
pInfo
 = (vf°ø˚_öfo*)
pVfs
->
pAµD©a
;

728 
sqlôe3_vfs
 *
pRoŸ
 = 
pInfo
->
pRoŸVfs
;

729 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xDlEº‹(%d)",ÖInfo->
zVfsName
, 
nByã
);

730 
pRoŸ
->
	`xDlEº‹
’RoŸ, 
nByã
, 
zEºMsg
);

731 
	`vf°ø˚_¥ötf
(
pInfo
, " -> \"%s\"", 
zEºMsg
);

732 
	}
}

737 (*
	$vf°ø˚DlSym
(
sqlôe3_vfs
 *
pVfs
,*
p
,c⁄° *
zSym
))(){

738 
vf°ø˚_öfo
 *
pInfo
 = (vf°ø˚_öfo*)
pVfs
->
pAµD©a
;

739 
sqlôe3_vfs
 *
pRoŸ
 = 
pInfo
->
pRoŸVfs
;

740 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xDlSym(\"%s\")\n",ÖInfo->
zVfsName
, 
zSym
);

741  
pRoŸ
->
	`xDlSym
’RoŸ, 
p
, 
zSym
);

742 
	}
}

747 
	$vf°ø˚DlClo£
(
sqlôe3_vfs
 *
pVfs
, *
pH™dÀ
){

748 
vf°ø˚_öfo
 *
pInfo
 = (vf°ø˚_öfo*)
pVfs
->
pAµD©a
;

749 
sqlôe3_vfs
 *
pRoŸ
 = 
pInfo
->
pRoŸVfs
;

750 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xDlO≥n()\n",ÖInfo->
zVfsName
);

751 
pRoŸ
->
	`xDlClo£
’RoŸ, 
pH™dÀ
);

752 
	}
}

758 
	$vf°ø˚R™dom√ss
(
sqlôe3_vfs
 *
pVfs
, 
nByã
, *
zBufOut
){

759 
vf°ø˚_öfo
 *
pInfo
 = (vf°ø˚_öfo*)
pVfs
->
pAµD©a
;

760 
sqlôe3_vfs
 *
pRoŸ
 = 
pInfo
->
pRoŸVfs
;

761 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xR™dom√ss(%d)\n",ÖInfo->
zVfsName
, 
nByã
);

762  
pRoŸ
->
	`xR™dom√ss
’RoŸ, 
nByã
, 
zBufOut
);

763 
	}
}

769 
	$vf°ø˚SÀï
(
sqlôe3_vfs
 *
pVfs
, 
nMi¸o
){

770 
vf°ø˚_öfo
 *
pInfo
 = (vf°ø˚_öfo*)
pVfs
->
pAµD©a
;

771 
sqlôe3_vfs
 *
pRoŸ
 = 
pInfo
->
pRoŸVfs
;

772  
pRoŸ
->
	`xSÀï
’RoŸ, 
nMi¸o
);

773 
	}
}

778 
	$vf°ø˚CuºítTime
(
sqlôe3_vfs
 *
pVfs
, *
pTimeOut
){

779 
vf°ø˚_öfo
 *
pInfo
 = (vf°ø˚_öfo*)
pVfs
->
pAµD©a
;

780 
sqlôe3_vfs
 *
pRoŸ
 = 
pInfo
->
pRoŸVfs
;

781  
pRoŸ
->
	`xCuºítTime
’RoŸ, 
pTimeOut
);

782 
	}
}

783 
	$vf°ø˚CuºítTimeI¡64
(
sqlôe3_vfs
 *
pVfs
, 
sqlôe3_öt64
 *
pTimeOut
){

784 
vf°ø˚_öfo
 *
pInfo
 = (vf°ø˚_öfo*)
pVfs
->
pAµD©a
;

785 
sqlôe3_vfs
 *
pRoŸ
 = 
pInfo
->
pRoŸVfs
;

786  
pRoŸ
->
	`xCuºítTimeI¡64
’RoŸ, 
pTimeOut
);

787 
	}
}

792 
	$vf°ø˚GëLa°Eº‹
(
sqlôe3_vfs
 *
pVfs
, 
iEº
, *
zEº
){

793 
vf°ø˚_öfo
 *
pInfo
 = (vf°ø˚_öfo*)
pVfs
->
pAµD©a
;

794 
sqlôe3_vfs
 *
pRoŸ
 = 
pInfo
->
pRoŸVfs
;

795  
pRoŸ
->
	`xGëLa°Eº‹
’RoŸ, 
iEº
, 
zEº
);

796 
	}
}

801 
	$vf°ø˚SëSy°emCÆl
(

802 
sqlôe3_vfs
 *
pVfs
,

803 c⁄° *
zName
,

804 
sqlôe3_sysˇŒ_±r
 
pFunc


806 
vf°ø˚_öfo
 *
pInfo
 = (vf°ø˚_öfo*)
pVfs
->
pAµD©a
;

807 
sqlôe3_vfs
 *
pRoŸ
 = 
pInfo
->
pRoŸVfs
;

808  
pRoŸ
->
	`xSëSy°emCÆl
’RoŸ, 
zName
, 
pFunc
);

809 
	}
}

810 
sqlôe3_sysˇŒ_±r
 
	$vf°ø˚GëSy°emCÆl
(

811 
sqlôe3_vfs
 *
pVfs
,

812 c⁄° *
zName


814 
vf°ø˚_öfo
 *
pInfo
 = (vf°ø˚_öfo*)
pVfs
->
pAµD©a
;

815 
sqlôe3_vfs
 *
pRoŸ
 = 
pInfo
->
pRoŸVfs
;

816  
pRoŸ
->
	`xGëSy°emCÆl
’RoŸ, 
zName
);

817 
	}
}

818 c⁄° *
	$vf°ø˚NextSy°emCÆl
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zName
){

819 
vf°ø˚_öfo
 *
pInfo
 = (vf°ø˚_öfo*)
pVfs
->
pAµD©a
;

820 
sqlôe3_vfs
 *
pRoŸ
 = 
pInfo
->
pRoŸVfs
;

821  
pRoŸ
->
	`xNextSy°emCÆl
’RoŸ, 
zName
);

822 
	}
}

833 
	$vf°ø˚_ªgi°î
(

834 c⁄° *
zTø˚Name
,

835 c⁄° *
zOldVfsName
,

836 (*
xOut
)(const *,*),

837 *
pOutArg
,

838 
makeDeÁu…


840 
sqlôe3_vfs
 *
pNew
;

841 
sqlôe3_vfs
 *
pRoŸ
;

842 
vf°ø˚_öfo
 *
pInfo
;

843 
nName
;

844 
nByã
;

846 
pRoŸ
 = 
	`sqlôe3_vfs_föd
(
zOldVfsName
);

847 if–
pRoŸ
==0 )  
SQLITE_NOTFOUND
;

848 
nName
 = 
	`°æí
(
zTø˚Name
);

849 
nByã
 = (*
pNew
Ë+ (*
pInfo
Ë+ 
nName
 + 1;

850 
pNew
 = 
	`sqlôe3_mÆloc
–
nByã
 );

851 if–
pNew
==0 )  
SQLITE_NOMEM
;

852 
	`mem£t
(
pNew
, 0, 
nByã
);

853 
pInfo
 = (
vf°ø˚_öfo
*)&
pNew
[1];

854 
pNew
->
iVîsi⁄
 = 
pRoŸ
->iVersion;

855 
pNew
->
szOsFûe
 = 
pRoŸ
->szOsFûê+ (
vf°ø˚_fûe
);

856 
pNew
->
mxP©h«me
 = 
pRoŸ
->mxPathname;

857 
pNew
->
zName
 = (*)&
pInfo
[1];

858 
	`mem˝y
((*)&
pInfo
[1], 
zTø˚Name
, 
nName
+1);

859 
pNew
->
pAµD©a
 = 
pInfo
;

860 
pNew
->
xO≥n
 = 
vf°ø˚O≥n
;

861 
pNew
->
xDñëe
 = 
vf°ø˚Dñëe
;

862 
pNew
->
xAc˚ss
 = 
vf°ø˚Ac˚ss
;

863 
pNew
->
xFuŒP©h«me
 = 
vf°ø˚FuŒP©h«me
;

864 
pNew
->
xDlO≥n
 = 
pRoŸ
->xDlO≥n==0 ? 0 : 
vf°ø˚DlO≥n
;

865 
pNew
->
xDlEº‹
 = 
pRoŸ
->xDlEº‹==0 ? 0 : 
vf°ø˚DlEº‹
;

866 
pNew
->
xDlSym
 = 
pRoŸ
->xDlSym==0 ? 0 : 
vf°ø˚DlSym
;

867 
pNew
->
xDlClo£
 = 
pRoŸ
->xDlClo£==0 ? 0 : 
vf°ø˚DlClo£
;

868 
pNew
->
xR™dom√ss
 = 
vf°ø˚R™dom√ss
;

869 
pNew
->
xSÀï
 = 
vf°ø˚SÀï
;

870 
pNew
->
xCuºítTime
 = 
vf°ø˚CuºítTime
;

871 
pNew
->
xGëLa°Eº‹
 = 
pRoŸ
->xGëLa°Eº‹==0 ? 0 : 
vf°ø˚GëLa°Eº‹
;

872 if–
pNew
->
iVîsi⁄
>=2 ){

873 
pNew
->
xCuºítTimeI¡64
 = 
pRoŸ
->xCurrentTimeInt64==0 ? 0 :

874 
vf°ø˚CuºítTimeI¡64
;

875 if–
pNew
->
iVîsi⁄
>=3 ){

876 
pNew
->
xSëSy°emCÆl
 = 
pRoŸ
->xSetSystemCall==0 ? 0 :

877 
vf°ø˚SëSy°emCÆl
;

878 
pNew
->
xGëSy°emCÆl
 = 
pRoŸ
->xGetSystemCall==0 ? 0 :

879 
vf°ø˚GëSy°emCÆl
;

880 
pNew
->
xNextSy°emCÆl
 = 
pRoŸ
->xNextSystemCall==0 ? 0 :

881 
vf°ø˚NextSy°emCÆl
;

884 
pInfo
->
pRoŸVfs
 = 
pRoŸ
;

885 
pInfo
->
xOut
 = xOut;

886 
pInfo
->
pOutArg
 =ÖOutArg;

887 
pInfo
->
zVfsName
 = 
pNew
->
zName
;

888 
pInfo
->
pTø˚Vfs
 = 
pNew
;

889 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.enabled_for(\"%s\")\n",

890 
pInfo
->
zVfsName
, 
pRoŸ
->
zName
);

891  
	`sqlôe3_vfs_ªgi°î
(
pNew
, 
makeDeÁu…
);

892 
	}
}

	@test_windirent.c

16 #i‡
deföed
(
_WIN32
Ë&& deföed(
_MSC_VER
)

18 
	~"ã°_wödúít.h
"

24 c⁄° *
	$wödúít_gëív
(

25 c⁄° *
«me


27 
vÆue
[32768];

28 
DWORD
 
dwSize
 = (
vÆue
) / ();

29 
DWORD
 
dwRë
;

31 
	`mem£t
(
vÆue
, 0, (value));

32 
dwRë
 = 
	`GëEnvú⁄mítV¨übÀA
(
«me
, 
vÆue
, 
dwSize
);

33 if–
dwRë
==0 || dwRë>
dwSize
 ){

44  
vÆue
;

46 
	}
}

51 
LPDIR
 
	$›ídú
(

52 c⁄° *
dú«me


54 
_född©a_t
 
d©a
;

55 
LPDIR
 
dúp
 = (LPDIR)
	`sqlôe3_mÆloc
((
DIR
));

56 
SIZE_T
 
«mesize
 = (
d©a
.
«me
) / (data.name[0]);

58 if–
dúp
==
NULL
 )  NULL;

59 
	`mem£t
(
dúp
, 0, (
DIR
));

62 if–
	`sqlôe3_°ricmp
(
dú«me
, "/")==0 ){

63 
dú«me
 = 
	`wödúít_gëív
("SystemDrive");

66 
	`_¢¥ötf
(
d©a
.
«me
, 
«mesize
, "%s\\*", 
dú«me
);

67 
dúp
->
d_h™dÀ
 = 
	`_födfú°
(
d©a
.
«me
, &data);

69 if–
dúp
->
d_h™dÀ
==
BAD_INTPTR_T
 ){

70 
	`˛o£dú
(
dúp
);

71  
NULL
;

75 if–
d©a
.
©åib
&
_A_HIDDEN
 || d©a.©åib&
_A_SYSTEM
 ){

76 if–
	`_föd√xt
(
dúp
->
d_h™dÀ
, &
d©a
)==-1 ){

77 
	`˛o£dú
(
dúp
);

78  
NULL
;

82 
dúp
->
d_fú°
.
d_©åibuãs
 = 
d©a
.
©åib
;

83 
	`°∫˝y
(
dúp
->
d_fú°
.
d_«me
, 
d©a
.
«me
, 
NAME_MAX
);

84 
dúp
->
d_fú°
.
d_«me
[
NAME_MAX
] = '\0';

86  
dúp
;

87 
	}
}

92 
LPDIRENT
 
	$ªaddú
(

93 
LPDIR
 
dúp


95 
_född©a_t
 
d©a
;

97 if–
dúp
==
NULL
 )  NULL;

99 if–
dúp
->
d_fú°
.
d_öo
==0 ){

100 
dúp
->
d_fú°
.
d_öo
++;

101 
dúp
->
d_√xt
.
d_öo
++;

103  &
dúp
->
d_fú°
;

106 
√xt
:

108 if–
	`_föd√xt
(
dúp
->
d_h™dÀ
, &
d©a
)==-1 )  
NULL
;

111 if–
d©a
.
©åib
&
_A_HIDDEN
 ) 
√xt
;

112 if–
d©a
.
©åib
&
_A_SYSTEM
 ) 
√xt
;

114 
dúp
->
d_√xt
.
d_öo
++;

115 
dúp
->
d_√xt
.
d_©åibuãs
 = 
d©a
.
©åib
;

116 
	`°∫˝y
(
dúp
->
d_√xt
.
d_«me
, 
d©a
.
«me
, 
NAME_MAX
);

117 
dúp
->
d_√xt
.
d_«me
[
NAME_MAX
] = '\0';

119  &
dúp
->
d_√xt
;

120 
	}
}

125 
INT
 
	$ªaddú_r
(

126 
LPDIR
 
dúp
,

127 
LPDIRENT
 
íåy
,

128 
LPDIRENT
 *
ªsu…


130 
_född©a_t
 
d©a
;

132 if–
dúp
==
NULL
 )  
EBADF
;

134 if–
dúp
->
d_fú°
.
d_öo
==0 ){

135 
dúp
->
d_fú°
.
d_öo
++;

136 
dúp
->
d_√xt
.
d_öo
++;

138 
íåy
->
d_öo
 = 
dúp
->
d_fú°
.d_ino;

139 
íåy
->
d_©åibuãs
 = 
dúp
->
d_fú°
.d_attributes;

140 
	`°∫˝y
(
íåy
->
d_«me
, 
dúp
->
d_fú°
.d_«me, 
NAME_MAX
);

141 
íåy
->
d_«me
[
NAME_MAX
] = '\0';

143 *
ªsu…
 = 
íåy
;

147 
√xt
:

149 if–
	`_föd√xt
(
dúp
->
d_h™dÀ
, &
d©a
)==-1 ){

150 *
ªsu…
 = 
NULL
;

151  
ENOENT
;

155 if–
d©a
.
©åib
&
_A_HIDDEN
 ) 
√xt
;

156 if–
d©a
.
©åib
&
_A_SYSTEM
 ) 
√xt
;

158 
íåy
->
d_öo
 = (
öo_t
)-1;

159 
íåy
->
d_©åibuãs
 = 
d©a
.
©åib
;

160 
	`°∫˝y
(
íåy
->
d_«me
, 
d©a
.
«me
, 
NAME_MAX
);

161 
íåy
->
d_«me
[
NAME_MAX
] = '\0';

163 *
ªsu…
 = 
íåy
;

165 
	}
}

170 
INT
 
	$˛o£dú
(

171 
LPDIR
 
dúp


173 
INT
 
ªsu…
 = 0;

175 if–
dúp
==
NULL
 )  
EINVAL
;

177 if–
dúp
->
d_h™dÀ
!=
NULL_INTPTR_T
 && dúp->d_h™dÀ!=
BAD_INTPTR_T
 ){

178 
ªsu…
 = 
	`_föd˛o£
(
dúp
->
d_h™dÀ
);

181 
	`sqlôe3_‰ì
(
dúp
);

182  
ªsu…
;

183 
	}
}

	@test_windirent.h

16 #i‡
deföed
(
_WIN32
Ë&& deföed(
_MSC_VER
)

22 
	#WIN32_LEAN_AND_MEAN


	)

23 
	~"wödows.h
"

29 
	~"sqlôe3.h
"

35 
	~<°dio.h
>

36 
	~<°dlib.h
>

37 
	~<î∫o.h
>

38 
	~<io.h
>

39 
	~<limôs.h
>

45 #i‚de‡
INO_T_DEFINED


46 
	#INO_T_DEFINED


	)

47 
	töo_t
;

54 #i‚de‡
NAME_MAX


55 #ifde‡
FILENAME_MAX


56 
	#NAME_MAX
 (
FILENAME_MAX
)

	)

58 
	#NAME_MAX
 (260)

	)

66 #i‚de‡
NULL_INTPTR_T


67 
	#NULL_INTPTR_T
 ((
öçå_t
)(0))

	)

70 #i‚de‡
BAD_INTPTR_T


71 
	#BAD_INTPTR_T
 ((
öçå_t
)(-1))

	)

78 
DIRENT
 
	tDIRENT
;

79 
DIR
 
	tDIR
;

80 
DIRENT
 *
	tLPDIRENT
;

81 
DIR
 *
	tLPDIR
;

83 
	sDIRENT
 {

84 
öo_t
 
	md_öo
;

85 
	md_©åibuãs
;

86 
	md_«me
[
NAME_MAX
 + 1];

89 
	sDIR
 {

90 
öçå_t
 
	md_h™dÀ
;

91 
DIRENT
 
	md_fú°
;

92 
DIRENT
 
	md_√xt
;

100 c⁄° *
wödúít_gëív
(c⁄° *
«me
);

107 
LPDIR
 
›ídú
(c⁄° *
dú«me
);

108 
LPDIRENT
 
ªaddú
(
LPDIR
 
dúp
);

109 
INT
 
ªaddú_r
(
LPDIR
 
dúp
, 
LPDIRENT
 
íåy
, LPDIRENT *
ªsu…
);

110 
INT
 
˛o£dú
(
LPDIR
 
dúp
);

	@test_wsd.c

18 #i‡
deföed
(
SQLITE_OMIT_WSD
Ë&& deföed(
SQLITE_TEST
)

20 
	~"sqlôeI¡.h
"

22 
	#PLS_HASHSIZE
 43

	)

24 
Pro˚ssLoˇlSt‹age
 
	tPro˚ssLoˇlSt‹age
;

25 
Pro˚ssLoˇlV¨
 
	tPro˚ssLoˇlV¨
;

27 
	sPro˚ssLoˇlSt‹age
 {

28 
Pro˚ssLoˇlV¨
 *
	maD©a
[
PLS_HASHSIZE
];

29 
	mnFªe
;

30 
u8
 *
	mpFªe
;

33 
	sPro˚ssLoˇlV¨
 {

34 *
	mpKey
;

35 
Pro˚ssLoˇlV¨
 *
	mpNext
;

38 
Pro˚ssLoˇlSt‹age
 *
	gpGlobÆ
 = 0;

40 
	$sqlôe3_wsd_öô
(
N
, 
J
){

41 if–!
pGlobÆ
 ){

42 
nMÆloc
 = 
N
 + (
Pro˚ssLoˇlSt‹age
Ë+ 
J
*(
Pro˚ssLoˇlV¨
);

43 
pGlobÆ
 = (
Pro˚ssLoˇlSt‹age
 *)
	`mÆloc
(
nMÆloc
);

44 if–
pGlobÆ
 ){

45 
	`mem£t
(
pGlobÆ
, 0, (
Pro˚ssLoˇlSt‹age
));

46 
pGlobÆ
->
nFªe
 = 
nMÆloc
 - (
Pro˚ssLoˇlSt‹age
);

47 
pGlobÆ
->
pFªe
 = (
u8
 *)&pGlobal[1];

51  
pGlobÆ
 ? 
SQLITE_OK
 : 
SQLITE_NOMEM
;

52 
	}
}

54 *
	$sqlôe3_wsd_föd
(*
K
, 
L
){

55 
i
;

56 
iHash
 = 0;

57 
Pro˚ssLoˇlV¨
 *
pV¨
;

60 
i
=0; i<(*); i++){

61 
iHash
 = (iHash<<3Ë+ ((*)&
K
)[
i
];

63 
iHash
 = iHash%
PLS_HASHSIZE
;

66 
pV¨
=
pGlobÆ
->
aD©a
[
iHash
];ÖV¨ &&ÖV¨->
pKey
!=
K
;ÖV¨ıV¨->
pNext
);

69 if–!
pV¨
 ){

70 
nByã
 = 
	`ROUND8
((
Pro˚ssLoˇlV¨
Ë+ 
L
);

71 
	`as£π
–
pGlobÆ
->
nFªe
>=
nByã
 );

72 
pV¨
 = (
Pro˚ssLoˇlV¨
 *)
pGlobÆ
->
pFªe
;

73 
pV¨
->
pKey
 = 
K
;

74 
pV¨
->
pNext
 = 
pGlobÆ
->
aD©a
[
iHash
];

75 
pGlobÆ
->
aD©a
[
iHash
] = 
pV¨
;

76 
pGlobÆ
->
nFªe
 -
nByã
;

77 
pGlobÆ
->
pFªe
 +
nByã
;

78 
	`mem˝y
(&
pV¨
[1], 
K
, 
L
);

81  (*)&
pV¨
[1];

82 
	}
}

	@threads.c

28 
	~"sqlôeI¡.h
"

29 #i‡
SQLITE_OS_WIN


30 
	~"os_wö.h
"

33 #i‡
SQLITE_MAX_WORKER_THREADS
>0

36 #i‡
SQLITE_OS_UNIX
 && 
deföed
(
SQLITE_MUTEX_PTHREADS
Ë&& 
SQLITE_THREADSAFE
>0

38 
	#SQLITE_THREADS_IMPLEMENTED
 1

	)

39 
	~<±hªad.h
>

42 
	sSQLôeThªad
 {

43 
±hªad_t
 
	mtid
;

44 
	md⁄e
;

45 *
	mpOut
;

46 *(*
	mxTask
)(*);

47 *
	mpIn
;

51 
	$sqlôe3ThªadCª©e
(

52 
SQLôeThªad
 **
µThªad
,

53 *(*
xTask
)(*),

54 *
pIn


56 
SQLôeThªad
 *
p
;

57 
rc
;

59 
	`as£π
–
µThªad
!=0 );

60 
	`as£π
–
xTask
!=0 );

62 
	`as£π
–
sqlôe3GlobÆC⁄fig
.
bC‹eMuãx
!=0 );

64 *
µThªad
 = 0;

65 
p
 = 
	`sqlôe3MÆloc
((*p));

66 if–
p
==0 )  
SQLITE_NOMEM_BKPT
;

67 
	`mem£t
(
p
, 0, (*p));

68 
p
->
xTask
 = xTask;

69 
p
->
pIn
 =ÖIn;

74 if–
	`sqlôe3Fau…Sim
(200) ){

75 
rc
 = 1;

77 
rc
 = 
	`±hªad_¸óã
(&
p
->
tid
, 0, 
xTask
, 
pIn
);

79 if–
rc
 ){

80 
p
->
d⁄e
 = 1;

81 
p
->
pOut
 = 
	`xTask
(
pIn
);

83 *
µThªad
 = 
p
;

84  
SQLITE_OK
;

85 
	}
}

88 
	$sqlôe3ThªadJoö
(
SQLôeThªad
 *
p
, **
µOut
){

89 
rc
;

91 
	`as£π
–
µOut
!=0 );

92 if–
	`NEVER
(
p
==0ËË 
SQLITE_NOMEM_BKPT
;

93 if–
p
->
d⁄e
 ){

94 *
µOut
 = 
p
->
pOut
;

95 
rc
 = 
SQLITE_OK
;

97 
rc
 = 
	`±hªad_joö
(
p
->
tid
, 
µOut
Ë? 
SQLITE_ERROR
 : 
SQLITE_OK
;

99 
	`sqlôe3_‰ì
(
p
);

100  
rc
;

101 
	}
}

108 #i‡
SQLITE_OS_WIN_THREADS


110 
	#SQLITE_THREADS_IMPLEMENTED
 1

	)

111 
	~<¥o˚ss.h
>

114 
	sSQLôeThªad
 {

115 *
	mtid
;

116 
	mid
;

117 *(*
	mxTask
)(*);

118 *
	mpIn
;

119 *
	mpResu…
;

123 
__°dˇŒ
 
	$sqlôe3ThªadProc
(

124 *
pArg


126 
SQLôeThªad
 *
p
 = (SQLôeThªad *)
pArg
;

128 
	`as£π
–
p
!=0 );

136 
	`as£π
–
p
->
id
==
	`GëCuºítThªadId
() );

138 
	`as£π
–
p
->
xTask
!=0 );

139 
p
->
pResu…
 =Ö->
	`xTask
’->
pIn
);

141 
	`_ídthªadex
(0);

143 
	}
}

146 
	$sqlôe3ThªadCª©e
(

147 
SQLôeThªad
 **
µThªad
,

148 *(*
xTask
)(*),

149 *
pIn


151 
SQLôeThªad
 *
p
;

153 
	`as£π
–
µThªad
!=0 );

154 
	`as£π
–
xTask
!=0 );

155 *
µThªad
 = 0;

156 
p
 = 
	`sqlôe3MÆloc
((*p));

157 if–
p
==0 )  
SQLITE_NOMEM_BKPT
;

163 if–
sqlôe3GlobÆC⁄fig
.
bC‹eMuãx
==0 || 
	`sqlôe3Fau…Sim
(200) ){

164 
	`mem£t
(
p
, 0, (*p));

166 
p
->
xTask
 = xTask;

167 
p
->
pIn
 =ÖIn;

168 
p
->
tid
 = (*)
	`_begöthªadex
(0, 0, 
sqlôe3ThªadProc
,Ö, 0, &p->
id
);

169 if–
p
->
tid
==0 ){

170 
	`mem£t
(
p
, 0, (*p));

173 if–
p
->
xTask
==0 ){

174 
p
->
id
 = 
	`GëCuºítThªadId
();

175 
p
->
pResu…
 = 
	`xTask
(
pIn
);

177 *
µThªad
 = 
p
;

178  
SQLITE_OK
;

179 
	}
}

181 
DWORD
 
sqlôe3Wö32Waô
(
HANDLE
 
hObje˘
);

184 
	$sqlôe3ThªadJoö
(
SQLôeThªad
 *
p
, **
µOut
){

185 
DWORD
 
rc
;

186 
BOOL
 
bRc
;

188 
	`as£π
–
µOut
!=0 );

189 if–
	`NEVER
(
p
==0ËË 
SQLITE_NOMEM_BKPT
;

190 if–
p
->
xTask
==0 ){

192 
rc
 = 
WAIT_OBJECT_0
;

193 
	`as£π
–
p
->
tid
==0 );

195 
	`as£π
–
p
->
id
!=0 &&Ö->id!=
	`GëCuºítThªadId
() );

196 
rc
 = 
	`sqlôe3Wö32Waô
((
HANDLE
)
p
->
tid
);

197 
	`as£π
–
rc
!=
WAIT_IO_COMPLETION
 );

198 
bRc
 = 
	`Clo£H™dÀ
((
HANDLE
)
p
->
tid
);

199 
	`as£π
–
bRc
 );

201 if–
rc
==
WAIT_OBJECT_0
 ) *
µOut
 = 
p
->
pResu…
;

202 
	`sqlôe3_‰ì
(
p
);

203  (
rc
==
WAIT_OBJECT_0
Ë? 
SQLITE_OK
 : 
SQLITE_ERROR
;

204 
	}
}

211 #i‚de‡
SQLITE_THREADS_IMPLEMENTED


219 
	sSQLôeThªad
 {

220 *(*
	mxTask
)(*);

221 *
	mpIn
;

222 *
	mpResu…
;

226 
	$sqlôe3ThªadCª©e
(

227 
SQLôeThªad
 **
µThªad
,

228 *(*
xTask
)(*),

229 *
pIn


231 
SQLôeThªad
 *
p
;

233 
	`as£π
–
µThªad
!=0 );

234 
	`as£π
–
xTask
!=0 );

235 *
µThªad
 = 0;

236 
p
 = 
	`sqlôe3MÆloc
((*p));

237 if–
p
==0 )  
SQLITE_NOMEM_BKPT
;

238 if–(
	`SQLITE_PTR_TO_INT
(
p
)/17)&1 ){

239 
p
->
xTask
 = xTask;

240 
p
->
pIn
 =ÖIn;

242 
p
->
xTask
 = 0;

243 
p
->
pResu…
 = 
	`xTask
(
pIn
);

245 *
µThªad
 = 
p
;

246  
SQLITE_OK
;

247 
	}
}

250 
	$sqlôe3ThªadJoö
(
SQLôeThªad
 *
p
, **
µOut
){

252 
	`as£π
–
µOut
!=0 );

253 if–
	`NEVER
(
p
==0ËË 
SQLITE_NOMEM_BKPT
;

254 if–
p
->
xTask
 ){

255 *
µOut
 = 
p
->
	`xTask
’->
pIn
);

257 *
µOut
 = 
p
->
pResu…
;

259 
	`sqlôe3_‰ì
(
p
);

261 #i‡
	`deföed
(
SQLITE_TEST
)

263 *
pT°AŒoc
 = 
	`sqlôe3MÆloc
(10);

264 i‡(!
pT°AŒoc
Ë 
SQLITE_NOMEM_BKPT
;

265 
	`sqlôe3_‰ì
(
pT°AŒoc
);

269  
SQLITE_OK
;

270 
	}
}

	@tokenize.c

18 
	~"sqlôeI¡.h
"

19 
	~<°dlib.h
>

29 
	#CC_X
 0

	)

30 
	#CC_KYWD
 1

	)

31 
	#CC_ID
 2

	)

32 
	#CC_DIGIT
 3

	)

33 
	#CC_DOLLAR
 4

	)

34 
	#CC_VARALPHA
 5

	)

35 
	#CC_VARNUM
 6

	)

36 
	#CC_SPACE
 7

	)

37 
	#CC_QUOTE
 8

	)

38 
	#CC_QUOTE2
 9

	)

39 
	#CC_PIPE
 10

	)

40 
	#CC_MINUS
 11

	)

41 
	#CC_LT
 12

	)

42 
	#CC_GT
 13

	)

43 
	#CC_EQ
 14

	)

44 
	#CC_BANG
 15

	)

45 
	#CC_SLASH
 16

	)

46 
	#CC_LP
 17

	)

47 
	#CC_RP
 18

	)

48 
	#CC_SEMI
 19

	)

49 
	#CC_PLUS
 20

	)

50 
	#CC_STAR
 21

	)

51 
	#CC_PERCENT
 22

	)

52 
	#CC_COMMA
 23

	)

53 
	#CC_AND
 24

	)

54 
	#CC_TILDA
 25

	)

55 
	#CC_DOT
 26

	)

56 
	#CC_ILLEGAL
 27

	)

58 c⁄° 
	gaiCœss
[] = {

59 #ifde‡
SQLITE_ASCII


78 #ifde‡
SQLITE_EBCDIC


108 #ifde‡
SQLITE_ASCII


109 
	#ch¨M≠
(
X
Ë
sqlôe3UµîToLowî
[()X]

	)

111 #ifde‡
SQLITE_EBCDIC


112 
	#ch¨M≠
(
X
Ë
ebcdicToAscii
[()X]

	)

113 c⁄° 
	gebcdicToAscii
[] = {

145 
	~"keyw‹dhash.h
"

164 #ifde‡
SQLITE_ASCII


165 
	#IdCh¨
(
C
Ë((
sqlôe3Cty≥M≠
[()C]&0x46)!=0)

	)

167 #ifde‡
SQLITE_EBCDIC


168 c⁄° 
	gsqlôe3IsEbcdicIdCh¨
[] = {

183 
	#IdCh¨
(
C
Ë(((
c
=C)>=0x42 && 
sqlôe3IsEbcdicIdCh¨
[c-0x40]))

	)

187 #i‚de‡
SQLITE_OMIT_COMPILEOPTION_DIAGS


188 
	$sqlôe3IsIdCh¨
(
u8
 
c
){  
	`IdCh¨
(c); 
	}
}

196 
	$sqlôe3GëTokí
(c⁄° *
z
, *
tokíTy≥
){

197 
i
, 
c
;

198  
aiCœss
[*
z
] ){

201 
CC_SPACE
: {

202 
	`ã°ˇ£
–
z
[0]==' ' );

203 
	`ã°ˇ£
–
z
[0]=='\t' );

204 
	`ã°ˇ£
–
z
[0]=='\n' );

205 
	`ã°ˇ£
–
z
[0]=='\f' );

206 
	`ã°ˇ£
–
z
[0]=='\r' );

207 
i
=1; 
	`sqlôe3Is•a˚
(
z
[i]); i++){}

208 *
tokíTy≥
 = 
TK_SPACE
;

209  
i
;

211 
CC_MINUS
: {

212 if–
z
[1]=='-' ){

213 
i
=2; (
c
=
z
[i])!=0 && c!='\n'; i++){}

214 *
tokíTy≥
 = 
TK_SPACE
;

215  
i
;

217 *
tokíTy≥
 = 
TK_MINUS
;

220 
CC_LP
: {

221 *
tokíTy≥
 = 
TK_LP
;

224 
CC_RP
: {

225 *
tokíTy≥
 = 
TK_RP
;

228 
CC_SEMI
: {

229 *
tokíTy≥
 = 
TK_SEMI
;

232 
CC_PLUS
: {

233 *
tokíTy≥
 = 
TK_PLUS
;

236 
CC_STAR
: {

237 *
tokíTy≥
 = 
TK_STAR
;

240 
CC_SLASH
: {

241 if–
z
[1]!='*' || z[2]==0 ){

242 *
tokíTy≥
 = 
TK_SLASH
;

245 
i
=3, 
c
=
z
[2]; (c!='*' || z[i]!='/') && (c=z[i])!=0; i++){}

246 if–
c
 ) 
i
++;

247 *
tokíTy≥
 = 
TK_SPACE
;

248  
i
;

250 
CC_PERCENT
: {

251 *
tokíTy≥
 = 
TK_REM
;

254 
CC_EQ
: {

255 *
tokíTy≥
 = 
TK_EQ
;

256  1 + (
z
[1]=='=');

258 
CC_LT
: {

259 if–(
c
=
z
[1])=='=' ){

260 *
tokíTy≥
 = 
TK_LE
;

262 }if–
c
=='>' ){

263 *
tokíTy≥
 = 
TK_NE
;

265 }if–
c
=='<' ){

266 *
tokíTy≥
 = 
TK_LSHIFT
;

269 *
tokíTy≥
 = 
TK_LT
;

273 
CC_GT
: {

274 if–(
c
=
z
[1])=='=' ){

275 *
tokíTy≥
 = 
TK_GE
;

277 }if–
c
=='>' ){

278 *
tokíTy≥
 = 
TK_RSHIFT
;

281 *
tokíTy≥
 = 
TK_GT
;

285 
CC_BANG
: {

286 if–
z
[1]!='=' ){

287 *
tokíTy≥
 = 
TK_ILLEGAL
;

290 *
tokíTy≥
 = 
TK_NE
;

294 
CC_PIPE
: {

295 if–
z
[1]!='|' ){

296 *
tokíTy≥
 = 
TK_BITOR
;

299 *
tokíTy≥
 = 
TK_CONCAT
;

303 
CC_COMMA
: {

304 *
tokíTy≥
 = 
TK_COMMA
;

307 
CC_AND
: {

308 *
tokíTy≥
 = 
TK_BITAND
;

311 
CC_TILDA
: {

312 *
tokíTy≥
 = 
TK_BITNOT
;

315 
CC_QUOTE
: {

316 
dñim
 = 
z
[0];

317 
	`ã°ˇ£
–
dñim
=='`' );

318 
	`ã°ˇ£
–
dñim
=='\'' );

319 
	`ã°ˇ£
–
dñim
=='"' );

320 
i
=1; (
c
=
z
[i])!=0; i++){

321 if–
c
==
dñim
 ){

322 if–
z
[
i
+1]==
dñim
 ){

323 
i
++;

329 if–
c
=='\'' ){

330 *
tokíTy≥
 = 
TK_STRING
;

331  
i
+1;

332 }if–
c
!=0 ){

333 *
tokíTy≥
 = 
TK_ID
;

334  
i
+1;

336 *
tokíTy≥
 = 
TK_ILLEGAL
;

337  
i
;

340 
CC_DOT
: {

341 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


342 if–!
	`sqlôe3Isdigô
(
z
[1]) )

345 *
tokíTy≥
 = 
TK_DOT
;

351 
CC_DIGIT
: {

352 
	`ã°ˇ£
–
z
[0]=='0' );Åestcase( z[0]=='1' );Åestcase( z[0]=='2' );

353 
	`ã°ˇ£
–
z
[0]=='3' );Åestcase( z[0]=='4' );Åestcase( z[0]=='5' );

354 
	`ã°ˇ£
–
z
[0]=='6' );Åestcase( z[0]=='7' );Åestcase( z[0]=='8' );

355 
	`ã°ˇ£
–
z
[0]=='9' );

356 *
tokíTy≥
 = 
TK_INTEGER
;

357 #i‚de‡
SQLITE_OMIT_HEX_INTEGER


358 if–
z
[0]=='0' && (z[1]=='x' || z[1]=='X'Ë&& 
	`sqlôe3Isxdigô
(z[2]) ){

359 
i
=3; 
	`sqlôe3Isxdigô
(
z
[i]); i++){}

360  
i
;

363 
i
=0; 
	`sqlôe3Isdigô
(
z
[i]); i++){}

364 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


365 if–
z
[
i
]=='.' ){

366 
i
++;

367  
	`sqlôe3Isdigô
(
z
[
i
]) ){ i++; }

368 *
tokíTy≥
 = 
TK_FLOAT
;

370 if–(
z
[
i
]=='e' || z[i]=='E') &&

371 –
	`sqlôe3Isdigô
(
z
[
i
+1])

372 || ((
z
[
i
+1]=='+' || z[i+1]=='-'Ë&& 
	`sqlôe3Isdigô
(z[i+2]))

375 
i
 += 2;

376  
	`sqlôe3Isdigô
(
z
[
i
]) ){ i++; }

377 *
tokíTy≥
 = 
TK_FLOAT
;

380  
	`IdCh¨
(
z
[
i
]) ){

381 *
tokíTy≥
 = 
TK_ILLEGAL
;

382 
i
++;

384  
i
;

386 
CC_QUOTE2
: {

387 
i
=1, 
c
=
z
[0]; c!=']' && (c=z[i])!=0; i++){}

388 *
tokíTy≥
 = 
c
==']' ? 
TK_ID
 : 
TK_ILLEGAL
;

389  
i
;

391 
CC_VARNUM
: {

392 *
tokíTy≥
 = 
TK_VARIABLE
;

393 
i
=1; 
	`sqlôe3Isdigô
(
z
[i]); i++){}

394  
i
;

396 
CC_DOLLAR
:

397 
CC_VARALPHA
: {

398 
n
 = 0;

399 
	`ã°ˇ£
–
z
[0]=='$' );Åestcase( z[0]=='@' );

400 
	`ã°ˇ£
–
z
[0]==':' );Åestcase( z[0]=='#' );

401 *
tokíTy≥
 = 
TK_VARIABLE
;

402 
i
=1; (
c
=
z
[i])!=0; i++){

403 if–
	`IdCh¨
(
c
) ){

404 
n
++;

405 #i‚de‡
SQLITE_OMIT_TCL_VARIABLE


406 }if–
c
=='(' && 
n
>0 ){

408 
i
++;

409 } (
c
=
z
[
i
])!=0 && !
	`sqlôe3Is•a˚
(c) && c!=')' );

410 if–
c
==')' ){

411 
i
++;

413 *
tokíTy≥
 = 
TK_ILLEGAL
;

416 }if–
c
==':' && 
z
[
i
+1]==':' ){

417 
i
++;

423 if–
n
==0 ) *
tokíTy≥
 = 
TK_ILLEGAL
;

424  
i
;

426 
CC_KYWD
: {

427 
i
=1; 
aiCœss
[
z
[i]]<=
CC_KYWD
; i++){}

428 if–
	`IdCh¨
(
z
[
i
]) ){

432 
i
++;

435 *
tokíTy≥
 = 
TK_ID
;

436  
	`keyw‹dCode
((*)
z
, 
i
, 
tokíTy≥
);

438 
CC_X
: {

439 #i‚de‡
SQLITE_OMIT_BLOB_LITERAL


440 
	`ã°ˇ£
–
z
[0]=='x' );Åestcase( z[0]=='X' );

441 if–
z
[1]=='\'' ){

442 *
tokíTy≥
 = 
TK_BLOB
;

443 
i
=2; 
	`sqlôe3Isxdigô
(
z
[i]); i++){}

444 if–
z
[
i
]!='\'' || i%2 ){

445 *
tokíTy≥
 = 
TK_ILLEGAL
;

446  
z
[
i
] && z[i]!='\'' ){ i++; }

448 if–
z
[
i
] ) i++;

449  
i
;

455 
CC_ID
: {

456 
i
 = 1;

460 *
tokíTy≥
 = 
TK_ILLEGAL
;

464  
	`IdCh¨
(
z
[
i
]) ){ i++; }

465 *
tokíTy≥
 = 
TK_ID
;

466  
i
;

467 
	}
}

476 
	$sqlôe3RunP¨£r
(
P¨£
 *
pP¨£
, c⁄° *
zSql
, **
pzEºMsg
){

477 
nEº
 = 0;

478 
i
;

479 *
pEngöe
;

480 
tokíTy≥
;

481 
œ°TokíP¨£d
 = -1;

482 
sqlôe3
 *
db
 = 
pP¨£
->db;

483 
mxSqlLí
;

485 
	`as£π
–
zSql
!=0 );

486 
mxSqlLí
 = 
db
->
aLimô
[
SQLITE_LIMIT_SQL_LENGTH
];

487 if–
db
->
nVdbeA˘ive
==0 ){

488 
db
->
u1
.
isI¡îru±ed
 = 0;

490 
pP¨£
->
rc
 = 
SQLITE_OK
;

491 
pP¨£
->
zTaû
 = 
zSql
;

492 
i
 = 0;

493 
	`as£π
–
pzEºMsg
!=0 );

495 
pEngöe
 = 
	`sqlôe3P¨£rAŒoc
(
sqlôe3MÆloc
);

496 if–
pEngöe
==0 ){

497 
	`sqlôe3OomFau…
(
db
);

498  
SQLITE_NOMEM_BKPT
;

500 
	`as£π
–
pP¨£
->
pNewTabÀ
==0 );

501 
	`as£π
–
pP¨£
->
pNewTriggî
==0 );

502 
	`as£π
–
pP¨£
->
nV¨
==0 );

503 
	`as£π
–
pP¨£
->
pVLi°
==0 );

505 
	`as£π
–
i
>=0 );

506 if–
zSql
[
i
]!=0 ){

507 
pP¨£
->
sLa°Tokí
.
z
 = &
zSql
[
i
];

508 
pP¨£
->
sLa°Tokí
.
n
 = 
	`sqlôe3GëTokí
((
u8
*)&
zSql
[
i
],&
tokíTy≥
);

509 
i
 +
pP¨£
->
sLa°Tokí
.
n
;

510 if–
i
>
mxSqlLí
 ){

511 
pP¨£
->
rc
 = 
SQLITE_TOOBIG
;

517 if–
œ°TokíP¨£d
==
TK_SEMI
 ){

518 
tokíTy≥
 = 0;

519 }if–
œ°TokíP¨£d
==0 ){

522 
tokíTy≥
 = 
TK_SEMI
;

525 if–
tokíTy≥
>=
TK_SPACE
 ){

526 
	`as£π
–
tokíTy≥
==
TK_SPACE
 ||ÅokíTy≥==
TK_ILLEGAL
 );

527 if–
db
->
u1
.
isI¡îru±ed
 ){

528 
pP¨£
->
rc
 = 
SQLITE_INTERRUPT
;

531 if–
tokíTy≥
==
TK_ILLEGAL
 ){

532 
	`sqlôe3Eº‹Msg
(
pP¨£
, "unrecognizedÅoken: \"%T\"",

533 &
pP¨£
->
sLa°Tokí
);

537 
	`sqlôe3P¨£r
(
pEngöe
, 
tokíTy≥
, 
pP¨£
->
sLa°Tokí
,ÖParse);

538 
œ°TokíP¨£d
 = 
tokíTy≥
;

539 if–
pP¨£
->
rc
!=
SQLITE_OK
 || 
db
->
mÆlocFaûed
 ) ;

542 
	`as£π
–
nEº
==0 );

543 
pP¨£
->
zTaû
 = &
zSql
[
i
];

544 #ifde‡
YYTRACKMAXSTACKDEPTH


545 
	`sqlôe3_muãx_íãr
(
	`sqlôe3MÆlocMuãx
());

546 
	`sqlôe3SètusHighw©î
(
SQLITE_STATUS_PARSER_STACK
,

547 
	`sqlôe3P¨£rSèckPók
(
pEngöe
)

549 
	`sqlôe3_muãx_Àave
(
	`sqlôe3MÆlocMuãx
());

551 
	`sqlôe3P¨£rFªe
(
pEngöe
, 
sqlôe3_‰ì
);

552 if–
db
->
mÆlocFaûed
 ){

553 
pP¨£
->
rc
 = 
SQLITE_NOMEM_BKPT
;

555 if–
pP¨£
->
rc
!=
SQLITE_OK
 &&ÖP¨£->rc!=
SQLITE_DONE
 &&ÖP¨£->
zEºMsg
==0 ){

556 
pP¨£
->
zEºMsg
 = 
	`sqlôe3MPrötf
(
db
, "%s", 
	`sqlôe3EºSå
’P¨£->
rc
));

558 
	`as£π
–
pzEºMsg
!=0 );

559 if–
pP¨£
->
zEºMsg
 ){

560 *
pzEºMsg
 = 
pP¨£
->
zEºMsg
;

561 
	`sqlôe3_log
(
pP¨£
->
rc
, "%s", *
pzEºMsg
);

562 
pP¨£
->
zEºMsg
 = 0;

563 
nEº
++;

565 if–
pP¨£
->
pVdbe
 &&ÖP¨£->
nEº
>0 &&ÖP¨£->
√°ed
==0 ){

566 
	`sqlôe3VdbeDñëe
(
pP¨£
->
pVdbe
);

567 
pP¨£
->
pVdbe
 = 0;

569 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


570 if–
pP¨£
->
√°ed
==0 ){

571 
	`sqlôe3DbFªe
(
db
, 
pP¨£
->
aTabÀLock
);

572 
pP¨£
->
aTabÀLock
 = 0;

573 
pP¨£
->
nTabÀLock
 = 0;

576 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


577 
	`sqlôe3_‰ì
(
pP¨£
->
≠VèbLock
);

580 if–!
IN_DECLARE_VTAB
 ){

585 
	`sqlôe3DñëeTabÀ
(
db
, 
pP¨£
->
pNewTabÀ
);

588 if–
pP¨£
->
pWôhToFªe
 ) 
	`sqlôe3WôhDñëe
(
db
,ÖParse->pWithToFree);

589 
	`sqlôe3DñëeTriggî
(
db
, 
pP¨£
->
pNewTriggî
);

590 
	`sqlôe3DbFªe
(
db
, 
pP¨£
->
pVLi°
);

591  
pP¨£
->
pAöc
 ){

592 
AutoöcInfo
 *
p
 = 
pP¨£
->
pAöc
;

593 
pP¨£
->
pAöc
 = 
p
->
pNext
;

594 
	`sqlôe3DbFªe
(
db
, 
p
);

596  
pP¨£
->
pZombõTab
 ){

597 
TabÀ
 *
p
 = 
pP¨£
->
pZombõTab
;

598 
pP¨£
->
pZombõTab
 = 
p
->
pNextZombõ
;

599 
	`sqlôe3DñëeTabÀ
(
db
, 
p
);

601 
	`as£π
–
nEº
==0 || 
pP¨£
->
rc
!=
SQLITE_OK
 );

602  
nEº
;

603 
	}
}

	@treeview.c

20 
	~"sqlôeI¡.h
"

21 #ifde‡
SQLITE_DEBUG


27 
TªeVõw
 *
	$sqlôe3TªeVõwPush
(
TªeVõw
 *
p
, 
u8
 
m‹eToFﬁlow
){

28 if–
p
==0 ){

29 
p
 = 
	`sqlôe3_mÆloc64
( (*p) );

30 if–
p
==0 )  0;

31 
	`mem£t
(
p
, 0, (*p));

33 
p
->
iLevñ
++;

35 
	`as£π
–
m‹eToFﬁlow
==0 || moreToFollow==1 );

36 if–
p
->
iLevñ
<’->
bLöe
ËËp->bLöe[p->iLevñ] = 
m‹eToFﬁlow
;

37  
p
;

38 
	}
}

43 
	$sqlôe3TªeVõwP›
(
TªeVõw
 *
p
){

44 if–
p
==0 ) ;

45 
p
->
iLevñ
--;

46 if–
p
->
iLevñ
<0 ) 
	`sqlôe3_‰ì
(p);

47 
	}
}

53 
	$sqlôe3TªeVõwLöe
(
TªeVõw
 *
p
, c⁄° *
zF‹m©
, ...){

54 
va_li°
 
≠
;

55 
i
;

56 
SåAccum
 
acc
;

57 
zBuf
[500];

58 
	`sqlôe3SåAccumInô
(&
acc
, 0, 
zBuf
, (zBuf), 0);

59 if–
p
 ){

60 
i
=0; i<
p
->
iLevñ
 && i<’->
bLöe
)-1; i++){

61 
	`sqlôe3SåAccumAµíd
(&
acc
, 
p
->
bLöe
[
i
] ? "| " : " ", 4);

63 
	`sqlôe3SåAccumAµíd
(&
acc
, 
p
->
bLöe
[
i
] ? "|-- " : "'-- ", 4);

65 
	`va_°¨t
(
≠
, 
zF‹m©
);

66 
	`sqlôe3VXPrötf
(&
acc
, 
zF‹m©
, 
≠
);

67 
	`va_íd
(
≠
);

68 
	`as£π
–
acc
.
nCh¨
>0 );

69 if–
zBuf
[
acc
.
nCh¨
-1]!='\n' ) 
	`sqlôe3SåAccumAµíd
(&acc, "\n", 1);

70 
	`sqlôe3SåAccumFöish
(&
acc
);

71 
	`Ârötf
(
°dout
,"%s", 
zBuf
);

72 
	`fÊush
(
°dout
);

73 
	}
}

78 
	$sqlôe3TªeVõwIãm
(
TªeVõw
 *
p
, c⁄° *
zLabñ
,
u8
 
m‹eFﬁlows
){

79 
p
 = 
	`sqlôe3TªeVõwPush
’, 
m‹eFﬁlows
);

80 
	`sqlôe3TªeVõwLöe
(
p
, "%s", 
zLabñ
);

81 
	}
}

86 
	$sqlôe3TªeVõwWôh
(
TªeVõw
 *
pVõw
, c⁄° 
Wôh
 *
pWôh
, 
u8
 
m‹eToFﬁlow
){

87 
i
;

88 if–
pWôh
==0 ) ;

89 if–
pWôh
->
nCã
==0 ) ;

90 if–
pWôh
->
pOuãr
 ){

91 
	`sqlôe3TªeVõwLöe
(
pVõw
, "WITH (0x%p,ÖOuãr=0x%p)",
pWôh
,pWôh->
pOuãr
);

93 
	`sqlôe3TªeVõwLöe
(
pVõw
, "WITH (0x%p)", 
pWôh
);

95 if–
pWôh
->
nCã
>0 ){

96 
pVõw
 = 
	`sqlôe3TªeVõwPush
(pView, 1);

97 
i
=0; i<
pWôh
->
nCã
; i++){

98 
SåAccum
 
x
;

99 
zLöe
[1000];

100 c⁄° 
Cã
 *
pCã
 = &
pWôh
->
a
[
i
];

101 
	`sqlôe3SåAccumInô
(&
x
, 0, 
zLöe
, (zLine), 0);

102 
	`sqlôe3XPrötf
(&
x
, "%s", 
pCã
->
zName
);

103 if–
pCã
->
pCﬁs
 &&ÖCã->pCﬁs->
nEx¥
>0 ){

104 
cSï
 = '(';

105 
j
;

106 
j
=0; j<
pCã
->
pCﬁs
->
nEx¥
; j++){

107 
	`sqlôe3XPrötf
(&
x
, "%c%s", 
cSï
, 
pCã
->
pCﬁs
->
a
[
j
].
zName
);

108 
cSï
 = ',';

110 
	`sqlôe3XPrötf
(&
x
, ")");

112 
	`sqlôe3XPrötf
(&
x
, " AS");

113 
	`sqlôe3SåAccumFöish
(&
x
);

114 
	`sqlôe3TªeVõwIãm
(
pVõw
, 
zLöe
, 
i
<
pWôh
->
nCã
-1);

115 
	`sqlôe3TªeVõwSñe˘
(
pVõw
, 
pCã
->
pSñe˘
, 0);

116 
	`sqlôe3TªeVõwP›
(
pVõw
);

118 
	`sqlôe3TªeVõwP›
(
pVõw
);

120 
	}
}

126 
	$sqlôe3TªeVõwSñe˘
(
TªeVõw
 *
pVõw
, c⁄° 
Sñe˘
 *
p
, 
u8
 
m‹eToFﬁlow
){

127 
n
 = 0;

128 
˙t
 = 0;

129 
pVõw
 = 
	`sqlôe3TªeVõwPush
’Võw, 
m‹eToFﬁlow
);

130 if–
p
->
pWôh
 ){

131 
	`sqlôe3TªeVõwWôh
(
pVõw
, 
p
->
pWôh
, 1);

132 
˙t
 = 1;

133 
	`sqlôe3TªeVõwPush
(
pVõw
, 1);

136 
	`sqlôe3TªeVõwLöe
(
pVõw
, "SELECT%s%s (0x%p) selFlags=0x%xÇSelectRow=%d",

137 ((
p
->
£lFœgs
 & 
SF_Di°ö˘
) ? " DISTINCT" : ""),

138 ((
p
->
£lFœgs
 & 
SF_Aggªg©e
) ? "ágg_flag" : ""),Ö,Ö->selFlags,

139 ()
p
->
nSñe˘Row


141 if–
˙t
++ ) 
	`sqlôe3TªeVõwP›
(
pVõw
);

142 if–
p
->
pPri‹
 ){

143 
n
 = 1000;

145 
n
 = 0;

146 if–
p
->
pSrc
 &&Ö->pSrc->
nSrc
 ) 
n
++;

147 if–
p
->
pWhîe
 ) 
n
++;

148 if–
p
->
pGroupBy
 ) 
n
++;

149 if–
p
->
pHavög
 ) 
n
++;

150 if–
p
->
pOrdîBy
 ) 
n
++;

151 if–
p
->
pLimô
 ) 
n
++;

152 if–
p
->
pOff£t
 ) 
n
++;

154 
	`sqlôe3TªeVõwEx¥Li°
(
pVõw
, 
p
->
pELi°
, (
n
--)>0, "result-set");

155 if–
p
->
pSrc
 &&Ö->pSrc->
nSrc
 ){

156 
i
;

157 
pVõw
 = 
	`sqlôe3TªeVõwPush
’Võw, (
n
--)>0);

158 
	`sqlôe3TªeVõwLöe
(
pVõw
, "FROM");

159 
i
=0; i<
p
->
pSrc
->
nSrc
; i++){

160 
SrcLi°_ôem
 *
pIãm
 = &
p
->
pSrc
->
a
[
i
];

161 
SåAccum
 
x
;

162 
zLöe
[100];

163 
	`sqlôe3SåAccumInô
(&
x
, 0, 
zLöe
, (zLine), 0);

164 
	`sqlôe3XPrötf
(&
x
, "{%d,*}", 
pIãm
->
iCurs‹
);

165 if–
pIãm
->
zD©aba£
 ){

166 
	`sqlôe3XPrötf
(&
x
, " %s.%s", 
pIãm
->
zD©aba£
,ÖIãm->
zName
);

167 }if–
pIãm
->
zName
 ){

168 
	`sqlôe3XPrötf
(&
x
, " %s", 
pIãm
->
zName
);

170 if–
pIãm
->
pTab
 ){

171 
	`sqlôe3XPrötf
(&
x
, "Åab«me=%Q", 
pIãm
->
pTab
->
zName
);

173 if–
pIãm
->
zAlüs
 ){

174 
	`sqlôe3XPrötf
(&
x
, " (AS %s)", 
pIãm
->
zAlüs
);

176 if–
pIãm
->
fg
.
joöty≥
 & 
JT_LEFT
 ){

177 
	`sqlôe3XPrötf
(&
x
, " LEFT-JOIN");

179 
	`sqlôe3SåAccumFöish
(&
x
);

180 
	`sqlôe3TªeVõwIãm
(
pVõw
, 
zLöe
, 
i
<
p
->
pSrc
->
nSrc
-1);

181 if–
pIãm
->
pSñe˘
 ){

182 
	`sqlôe3TªeVõwSñe˘
(
pVõw
, 
pIãm
->
pSñe˘
, 0);

184 if–
pIãm
->
fg
.
isTabFunc
 ){

185 
	`sqlôe3TªeVõwEx¥Li°
(
pVõw
, 
pIãm
->
u1
.
pFuncArg
, 0, "func-args:");

187 
	`sqlôe3TªeVõwP›
(
pVõw
);

189 
	`sqlôe3TªeVõwP›
(
pVõw
);

191 if–
p
->
pWhîe
 ){

192 
	`sqlôe3TªeVõwIãm
(
pVõw
, "WHERE", (
n
--)>0);

193 
	`sqlôe3TªeVõwEx¥
(
pVõw
, 
p
->
pWhîe
, 0);

194 
	`sqlôe3TªeVõwP›
(
pVõw
);

196 if–
p
->
pGroupBy
 ){

197 
	`sqlôe3TªeVõwEx¥Li°
(
pVõw
, 
p
->
pGroupBy
, (
n
--)>0, "GROUPBY");

199 if–
p
->
pHavög
 ){

200 
	`sqlôe3TªeVõwIãm
(
pVõw
, "HAVING", (
n
--)>0);

201 
	`sqlôe3TªeVõwEx¥
(
pVõw
, 
p
->
pHavög
, 0);

202 
	`sqlôe3TªeVõwP›
(
pVõw
);

204 if–
p
->
pOrdîBy
 ){

205 
	`sqlôe3TªeVõwEx¥Li°
(
pVõw
, 
p
->
pOrdîBy
, (
n
--)>0, "ORDERBY");

207 if–
p
->
pLimô
 ){

208 
	`sqlôe3TªeVõwIãm
(
pVõw
, "LIMIT", (
n
--)>0);

209 
	`sqlôe3TªeVõwEx¥
(
pVõw
, 
p
->
pLimô
, 0);

210 
	`sqlôe3TªeVõwP›
(
pVõw
);

212 if–
p
->
pOff£t
 ){

213 
	`sqlôe3TªeVõwIãm
(
pVõw
, "OFFSET", (
n
--)>0);

214 
	`sqlôe3TªeVõwEx¥
(
pVõw
, 
p
->
pOff£t
, 0);

215 
	`sqlôe3TªeVõwP›
(
pVõw
);

217 if–
p
->
pPri‹
 ){

218 c⁄° *
zOp
 = "UNION";

219  
p
->
›
 ){

220 
TK_ALL
: 
zOp
 = "UNION ALL"; ;

221 
TK_INTERSECT
: 
zOp
 = "INTERSECT"; ;

222 
TK_EXCEPT
: 
zOp
 = "EXCEPT"; ;

224 
	`sqlôe3TªeVõwIãm
(
pVõw
, 
zOp
, 1);

226 
p
 =Ö->
pPri‹
;

227 } 
p
!=0 );

228 
	`sqlôe3TªeVõwP›
(
pVõw
);

229 
	}
}

234 
	$sqlôe3TªeVõwEx¥
(
TªeVõw
 *
pVõw
, c⁄° 
Ex¥
 *
pEx¥
, 
u8
 
m‹eToFﬁlow
){

235 c⁄° *
zBöOp
 = 0;

236 c⁄° *
zUniOp
 = 0;

237 
zFlgs
[30];

238 
pVõw
 = 
	`sqlôe3TªeVõwPush
’Võw, 
m‹eToFﬁlow
);

239 if–
pEx¥
==0 ){

240 
	`sqlôe3TªeVõwLöe
(
pVõw
, "nil");

241 
	`sqlôe3TªeVõwP›
(
pVõw
);

244 if–
pEx¥
->
Êags
 ){

245 
	`sqlôe3_¢¥ötf
((
zFlgs
),zFlgs," fœgs=0x%x",
pEx¥
->
Êags
);

247 
zFlgs
[0] = 0;

249  
pEx¥
->
›
 ){

250 
TK_AGG_COLUMN
: {

251 
	`sqlôe3TªeVõwLöe
(
pVõw
, "AGG{%d:%d}%s",

252 
pEx¥
->
iTabÀ
,ÖEx¥->
iCﬁumn
, 
zFlgs
);

255 
TK_COLUMN
: {

256 if–
pEx¥
->
iTabÀ
<0 ){

258 
	`sqlôe3TªeVõwLöe
(
pVõw
, "COLUMN(%d)%s", 
pEx¥
->
iCﬁumn
, 
zFlgs
);

260 
	`sqlôe3TªeVõwLöe
(
pVõw
, "{%d:%d}%s",

261 
pEx¥
->
iTabÀ
,ÖEx¥->
iCﬁumn
, 
zFlgs
);

265 
TK_INTEGER
: {

266 if–
pEx¥
->
Êags
 & 
EP_I¡VÆue
 ){

267 
	`sqlôe3TªeVõwLöe
(
pVõw
, "%d", 
pEx¥
->
u
.
iVÆue
);

269 
	`sqlôe3TªeVõwLöe
(
pVõw
, "%s", 
pEx¥
->
u
.
zTokí
);

273 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


274 
TK_FLOAT
: {

275 
	`sqlôe3TªeVõwLöe
(
pVõw
,"%s", 
pEx¥
->
u
.
zTokí
);

279 
TK_STRING
: {

280 
	`sqlôe3TªeVõwLöe
(
pVõw
,"%Q", 
pEx¥
->
u
.
zTokí
);

283 
TK_NULL
: {

284 
	`sqlôe3TªeVõwLöe
(
pVõw
,"NULL");

287 #i‚de‡
SQLITE_OMIT_BLOB_LITERAL


288 
TK_BLOB
: {

289 
	`sqlôe3TªeVõwLöe
(
pVõw
,"%s", 
pEx¥
->
u
.
zTokí
);

293 
TK_VARIABLE
: {

294 
	`sqlôe3TªeVõwLöe
(
pVõw
,"VARIABLE(%s,%d)",

295 
pEx¥
->
u
.
zTokí
,ÖEx¥->
iCﬁumn
);

298 
TK_REGISTER
: {

299 
	`sqlôe3TªeVõwLöe
(
pVõw
,"REGISTER(%d)", 
pEx¥
->
iTabÀ
);

302 
TK_ID
: {

303 
	`sqlôe3TªeVõwLöe
(
pVõw
,"ID \"%w\"", 
pEx¥
->
u
.
zTokí
);

306 #i‚de‡
SQLITE_OMIT_CAST


307 
TK_CAST
: {

309 
	`sqlôe3TªeVõwLöe
(
pVõw
,"CAST %Q", 
pEx¥
->
u
.
zTokí
);

310 
	`sqlôe3TªeVõwEx¥
(
pVõw
, 
pEx¥
->
pLe·
, 0);

314 
TK_LT
: 
zBöOp
 = "LT"; ;

315 
TK_LE
: 
zBöOp
 = "LE"; ;

316 
TK_GT
: 
zBöOp
 = "GT"; ;

317 
TK_GE
: 
zBöOp
 = "GE"; ;

318 
TK_NE
: 
zBöOp
 = "NE"; ;

319 
TK_EQ
: 
zBöOp
 = "EQ"; ;

320 
TK_IS
: 
zBöOp
 = "IS"; ;

321 
TK_ISNOT
: 
zBöOp
 = "ISNOT"; ;

322 
TK_AND
: 
zBöOp
 = "AND"; ;

323 
TK_OR
: 
zBöOp
 = "OR"; ;

324 
TK_PLUS
: 
zBöOp
 = "ADD"; ;

325 
TK_STAR
: 
zBöOp
 = "MUL"; ;

326 
TK_MINUS
: 
zBöOp
 = "SUB"; ;

327 
TK_REM
: 
zBöOp
 = "REM"; ;

328 
TK_BITAND
: 
zBöOp
 = "BITAND"; ;

329 
TK_BITOR
: 
zBöOp
 = "BITOR"; ;

330 
TK_SLASH
: 
zBöOp
 = "DIV"; ;

331 
TK_LSHIFT
: 
zBöOp
 = "LSHIFT"; ;

332 
TK_RSHIFT
: 
zBöOp
 = "RSHIFT"; ;

333 
TK_CONCAT
: 
zBöOp
 = "CONCAT"; ;

334 
TK_DOT
: 
zBöOp
 = "DOT"; ;

336 
TK_UMINUS
: 
zUniOp
 = "UMINUS"; ;

337 
TK_UPLUS
: 
zUniOp
 = "UPLUS"; ;

338 
TK_BITNOT
: 
zUniOp
 = "BITNOT"; ;

339 
TK_NOT
: 
zUniOp
 = "NOT"; ;

340 
TK_ISNULL
: 
zUniOp
 = "ISNULL"; ;

341 
TK_NOTNULL
: 
zUniOp
 = "NOTNULL"; ;

343 
TK_SPAN
: {

344 
	`sqlôe3TªeVõwLöe
(
pVõw
, "SPAN %Q", 
pEx¥
->
u
.
zTokí
);

345 
	`sqlôe3TªeVõwEx¥
(
pVõw
, 
pEx¥
->
pLe·
, 0);

349 
TK_COLLATE
: {

350 
	`sqlôe3TªeVõwLöe
(
pVõw
, "COLLATE %Q", 
pEx¥
->
u
.
zTokí
);

351 
	`sqlôe3TªeVõwEx¥
(
pVõw
, 
pEx¥
->
pLe·
, 0);

355 
TK_AGG_FUNCTION
:

356 
TK_FUNCTION
: {

357 
Ex¥Li°
 *
pF¨g
;

358 if–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_TokíO∆y
) ){

359 
pF¨g
 = 0;

361 
pF¨g
 = 
pEx¥
->
x
.
pLi°
;

363 if–
pEx¥
->
›
==
TK_AGG_FUNCTION
 ){

364 
	`sqlôe3TªeVõwLöe
(
pVõw
, "AGG_FUNCTION%d %Q",

365 
pEx¥
->
›2
,ÖEx¥->
u
.
zTokí
);

367 
	`sqlôe3TªeVõwLöe
(
pVõw
, "FUNCTION %Q", 
pEx¥
->
u
.
zTokí
);

369 if–
pF¨g
 ){

370 
	`sqlôe3TªeVõwEx¥Li°
(
pVõw
, 
pF¨g
, 0, 0);

374 #i‚de‡
SQLITE_OMIT_SUBQUERY


375 
TK_EXISTS
: {

376 
	`sqlôe3TªeVõwLöe
(
pVõw
, "EXISTS-expr");

377 
	`sqlôe3TªeVõwSñe˘
(
pVõw
, 
pEx¥
->
x
.
pSñe˘
, 0);

380 
TK_SELECT
: {

381 
	`sqlôe3TªeVõwLöe
(
pVõw
, "SELECT-expr");

382 
	`sqlôe3TªeVõwSñe˘
(
pVõw
, 
pEx¥
->
x
.
pSñe˘
, 0);

385 
TK_IN
: {

386 
	`sqlôe3TªeVõwLöe
(
pVõw
, "IN");

387 
	`sqlôe3TªeVõwEx¥
(
pVõw
, 
pEx¥
->
pLe·
, 1);

388 if–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
) ){

389 
	`sqlôe3TªeVõwSñe˘
(
pVõw
, 
pEx¥
->
x
.
pSñe˘
, 0);

391 
	`sqlôe3TªeVõwEx¥Li°
(
pVõw
, 
pEx¥
->
x
.
pLi°
, 0, 0);

408 
TK_BETWEEN
: {

409 
Ex¥
 *
pX
 = 
pEx¥
->
pLe·
;

410 
Ex¥
 *
pY
 = 
pEx¥
->
x
.
pLi°
->
a
[0].pExpr;

411 
Ex¥
 *
pZ
 = 
pEx¥
->
x
.
pLi°
->
a
[1].pExpr;

412 
	`sqlôe3TªeVõwLöe
(
pVõw
, "BETWEEN");

413 
	`sqlôe3TªeVõwEx¥
(
pVõw
, 
pX
, 1);

414 
	`sqlôe3TªeVõwEx¥
(
pVõw
, 
pY
, 1);

415 
	`sqlôe3TªeVõwEx¥
(
pVõw
, 
pZ
, 0);

418 
TK_TRIGGER
: {

426 
	`sqlôe3TªeVõwLöe
(
pVõw
, "%s(%d)",

427 
pEx¥
->
iTabÀ
 ? "NEW" : "OLD",ÖEx¥->
iCﬁumn
);

430 
TK_CASE
: {

431 
	`sqlôe3TªeVõwLöe
(
pVõw
, "CASE");

432 
	`sqlôe3TªeVõwEx¥
(
pVõw
, 
pEx¥
->
pLe·
, 1);

433 
	`sqlôe3TªeVõwEx¥Li°
(
pVõw
, 
pEx¥
->
x
.
pLi°
, 0, 0);

436 #i‚de‡
SQLITE_OMIT_TRIGGER


437 
TK_RAISE
: {

438 c⁄° *
zTy≥
 = "unk";

439  
pEx¥
->
afföôy
 ){

440 
OE_Rﬁlback
: 
zTy≥
 = "rollback"; ;

441 
OE_Ab‹t
: 
zTy≥
 = "abort"; ;

442 
OE_Faû
: 
zTy≥
 = "fail"; ;

443 
OE_Ign‹e
: 
zTy≥
 = "ignore"; ;

445 
	`sqlôe3TªeVõwLöe
(
pVõw
, "RAISE %s(%Q)", 
zTy≥
, 
pEx¥
->
u
.
zTokí
);

449 
TK_MATCH
: {

450 
	`sqlôe3TªeVõwLöe
(
pVõw
, "MATCH {%d:%d}%s",

451 
pEx¥
->
iTabÀ
,ÖEx¥->
iCﬁumn
, 
zFlgs
);

452 
	`sqlôe3TªeVõwEx¥
(
pVõw
, 
pEx¥
->
pRight
, 0);

455 
TK_VECTOR
: {

456 
	`sqlôe3TªeVõwB¨eEx¥Li°
(
pVõw
, 
pEx¥
->
x
.
pLi°
, "VECTOR");

459 
TK_SELECT_COLUMN
: {

460 
	`sqlôe3TªeVõwLöe
(
pVõw
, "SELECT-COLUMN %d", 
pEx¥
->
iCﬁumn
);

461 
	`sqlôe3TªeVõwSñe˘
(
pVõw
, 
pEx¥
->
pLe·
->
x
.
pSñe˘
, 0);

465 
	`sqlôe3TªeVõwLöe
(
pVõw
, "›=%d", 
pEx¥
->
›
);

469 if–
zBöOp
 ){

470 
	`sqlôe3TªeVõwLöe
(
pVõw
, "%s%s", 
zBöOp
, 
zFlgs
);

471 
	`sqlôe3TªeVõwEx¥
(
pVõw
, 
pEx¥
->
pLe·
, 1);

472 
	`sqlôe3TªeVõwEx¥
(
pVõw
, 
pEx¥
->
pRight
, 0);

473 }if–
zUniOp
 ){

474 
	`sqlôe3TªeVõwLöe
(
pVõw
, "%s%s", 
zUniOp
, 
zFlgs
);

475 
	`sqlôe3TªeVõwEx¥
(
pVõw
, 
pEx¥
->
pLe·
, 0);

477 
	`sqlôe3TªeVõwP›
(
pVõw
);

478 
	}
}

484 
	$sqlôe3TªeVõwB¨eEx¥Li°
(

485 
TªeVõw
 *
pVõw
,

486 c⁄° 
Ex¥Li°
 *
pLi°
,

487 c⁄° *
zLabñ


489 if–
zLabñ
==0 || zLabel[0]==0 ) zLabel = "LIST";

490 if–
pLi°
==0 ){

491 
	`sqlôe3TªeVõwLöe
(
pVõw
, "%†”m±y)", 
zLabñ
);

493 
i
;

494 
	`sqlôe3TªeVõwLöe
(
pVõw
, "%s", 
zLabñ
);

495 
i
=0; i<
pLi°
->
nEx¥
; i++){

496 
j
 = 
pLi°
->
a
[
i
].
u
.
x
.
iOrdîByCﬁ
;

497 if–
j
 ){

498 
	`sqlôe3TªeVõwPush
(
pVõw
, 0);

499 
	`sqlôe3TªeVõwLöe
(
pVõw
, "iOrdîByCﬁ=%d", 
j
);

501 
	`sqlôe3TªeVõwEx¥
(
pVõw
, 
pLi°
->
a
[
i
].
pEx¥
, i<pLi°->
nEx¥
-1);

502 if–
j
 ) 
	`sqlôe3TªeVõwP›
(
pVõw
);

505 
	}
}

506 
	$sqlôe3TªeVõwEx¥Li°
(

507 
TªeVõw
 *
pVõw
,

508 c⁄° 
Ex¥Li°
 *
pLi°
,

509 
u8
 
m‹eToFﬁlow
,

510 c⁄° *
zLabñ


512 
pVõw
 = 
	`sqlôe3TªeVõwPush
’Võw, 
m‹eToFﬁlow
);

513 
	`sqlôe3TªeVõwB¨eEx¥Li°
(
pVõw
, 
pLi°
, 
zLabñ
);

514 
	`sqlôe3TªeVõwP›
(
pVõw
);

515 
	}
}

	@trigger.c

13 
	~"sqlôeI¡.h
"

15 #i‚de‡
SQLITE_OMIT_TRIGGER


19 
	$sqlôe3DñëeTriggîSãp
(
sqlôe3
 *
db
, 
TriggîSãp
 *
pTriggîSãp
){

20  
pTriggîSãp
 ){

21 
TriggîSãp
 * 
pTmp
 = 
pTriggîSãp
;

22 
pTriggîSãp
 =ÖTriggîSãp->
pNext
;

24 
	`sqlôe3Ex¥Dñëe
(
db
, 
pTmp
->
pWhîe
);

25 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pTmp
->
pEx¥Li°
);

26 
	`sqlôe3Sñe˘Dñëe
(
db
, 
pTmp
->
pSñe˘
);

27 
	`sqlôe3IdLi°Dñëe
(
db
, 
pTmp
->
pIdLi°
);

29 
	`sqlôe3DbFªe
(
db
, 
pTmp
);

31 
	}
}

47 
Triggî
 *
	$sqlôe3TriggîLi°
(
P¨£
 *
pP¨£
, 
TabÀ
 *
pTab
){

48 
Schema
 * c⁄° 
pTmpSchema
 = 
pP¨£
->
db
->
aDb
[1].
pSchema
;

49 
Triggî
 *
pLi°
 = 0;

51 if–
pP¨£
->
dißbÀTriggîs
 ){

55 if–
pTmpSchema
!=
pTab
->
pSchema
 ){

56 
HashEÀm
 *
p
;

57 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
pP¨£
->
db
, 0, 
pTmpSchema
) );

58 
p
=
	`sqlôeHashFú°
(&
pTmpSchema
->
åigHash
);Ö;Ö=
	`sqlôeHashNext
(p)){

59 
Triggî
 *
pTrig
 = (Triggî *)
	`sqlôeHashD©a
(
p
);

60 if–
pTrig
->
pTabSchema
==
pTab
->
pSchema


61 && 0==
	`sqlôe3SåICmp
(
pTrig
->
èbÀ
, 
pTab
->
zName
)

63 
pTrig
->
pNext
 = (
pLi°
 ?ÖLi° : 
pTab
->
pTriggî
);

64 
pLi°
 = 
pTrig
;

69  (
pLi°
 ?ÖLi° : 
pTab
->
pTriggî
);

70 
	}
}

80 
	$sqlôe3BegöTriggî
(

81 
P¨£
 *
pP¨£
,

82 
Tokí
 *
pName1
,

83 
Tokí
 *
pName2
,

84 
å_tm
,

85 
›
,

86 
IdLi°
 *
pCﬁumns
,

87 
SrcLi°
 *
pTabÀName
,

88 
Ex¥
 *
pWhí
,

89 
isTemp
,

90 
noEº


92 
Triggî
 *
pTriggî
 = 0;

93 
TabÀ
 *
pTab
;

94 *
zName
 = 0;

95 
sqlôe3
 *
db
 = 
pP¨£
->db;

96 
iDb
;

97 
Tokí
 *
pName
;

98 
DbFixî
 
sFix
;

100 
	`as£π
–
pName1
!=0 );

101 
	`as£π
–
pName2
!=0 );

102 
	`as£π
–
›
==
TK_INSERT
 || op==
TK_UPDATE
 || op==
TK_DELETE
 );

103 
	`as£π
–
›
>0 && op<0xff );

104 if–
isTemp
 ){

106 if–
pName2
->
n
>0 ){

107 
	`sqlôe3Eº‹Msg
(
pP¨£
, "temporaryÅrigger mayÇot have qualifiedÇame");

108 
åiggî_˛ónup
;

110 
iDb
 = 1;

111 
pName
 = 
pName1
;

114 
iDb
 = 
	`sqlôe3TwoP¨tName
(
pP¨£
, 
pName1
, 
pName2
, &
pName
);

115 if–
iDb
<0 ){

116 
åiggî_˛ónup
;

119 if–!
pTabÀName
 || 
db
->
mÆlocFaûed
 ){

120 
åiggî_˛ónup
;

131 if–
db
->
öô
.
busy
 && 
iDb
!=1 ){

132 
	`sqlôe3DbFªe
(
db
, 
pTabÀName
->
a
[0].
zD©aba£
);

133 
pTabÀName
->
a
[0].
zD©aba£
 = 0;

141 
pTab
 = 
	`sqlôe3SrcLi°Lookup
(
pP¨£
, 
pTabÀName
);

142 if–
db
->
öô
.
busy
==0 && 
pName2
->
n
==0 && 
pTab


143 && 
pTab
->
pSchema
==
db
->
aDb
[1].pSchema ){

144 
iDb
 = 1;

148 if–
db
->
mÆlocFaûed
 ) 
åiggî_˛ónup
;

149 
	`as£π
–
pTabÀName
->
nSrc
==1 );

150 
	`sqlôe3FixInô
(&
sFix
, 
pP¨£
, 
iDb
, "åiggî", 
pName
);

151 if–
	`sqlôe3FixSrcLi°
(&
sFix
, 
pTabÀName
) ){

152 
åiggî_˛ónup
;

154 
pTab
 = 
	`sqlôe3SrcLi°Lookup
(
pP¨£
, 
pTabÀName
);

155 if–!
pTab
 ){

157 if–
db
->
öô
.
iDb
==1 ){

166 
db
->
öô
.
‹ph™Triggî
 = 1;

168 
åiggî_˛ónup
;

170 if–
	`IsVútuÆ
(
pTab
) ){

171 
	`sqlôe3Eº‹Msg
(
pP¨£
, "cannot createÅriggers on virtualÅables");

172 
åiggî_˛ónup
;

177 
zName
 = 
	`sqlôe3NameFromTokí
(
db
, 
pName
);

178 if–!
zName
 || 
SQLITE_OK
!=
	`sqlôe3CheckObje˘Name
(
pP¨£
, zName) ){

179 
åiggî_˛ónup
;

181 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

182 if–
	`sqlôe3HashFöd
(&(
db
->
aDb
[
iDb
].
pSchema
->
åigHash
),
zName
) ){

183 if–!
noEº
 ){

184 
	`sqlôe3Eº‹Msg
(
pP¨£
, "åiggî %TáÃódyÉxi°s", 
pName
);

186 
	`as£π
–!
db
->
öô
.
busy
 );

187 
	`sqlôe3CodeVîifySchema
(
pP¨£
, 
iDb
);

189 
åiggî_˛ónup
;

193 if–
	`sqlôe3SåNICmp
(
pTab
->
zName
, "sqlite_", 7)==0 ){

194 
	`sqlôe3Eº‹Msg
(
pP¨£
, "cannot createÅrigger on systemÅable");

195 
åiggî_˛ónup
;

201 if–
pTab
->
pSñe˘
 && 
å_tm
!=
TK_INSTEAD
 ){

202 
	`sqlôe3Eº‹Msg
(
pP¨£
, "cannot create %sÅrigger on view: %S",

203 (
å_tm
 =
TK_BEFORE
)?"BEFORE":"AFTER", 
pTabÀName
, 0);

204 
åiggî_˛ónup
;

206 if–!
pTab
->
pSñe˘
 && 
å_tm
==
TK_INSTEAD
 ){

207 
	`sqlôe3Eº‹Msg
(
pP¨£
, "cannot create INSTEAD OF"

208 "Åriggî o¿èbÀ: %S", 
pTabÀName
, 0);

209 
åiggî_˛ónup
;

212 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


214 
iTabDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pTab
->
pSchema
);

215 
code
 = 
SQLITE_CREATE_TRIGGER
;

216 c⁄° *
zDb
 = 
db
->
aDb
[
iTabDb
].
zDbSName
;

217 c⁄° *
zDbTrig
 = 
isTemp
 ? 
db
->
aDb
[1].
zDbSName
 : 
zDb
;

218 if–
iTabDb
==1 || 
isTemp
 ) 
code
 = 
SQLITE_CREATE_TEMP_TRIGGER
;

219 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
code
, 
zName
, 
pTab
->zName, 
zDbTrig
) ){

220 
åiggî_˛ónup
;

222 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_INSERT
, 
	`SCHEMA_TABLE
(
iTabDb
),0,
zDb
)){

223 
åiggî_˛ónup
;

233 i‡(
å_tm
 =
TK_INSTEAD
){

234 
å_tm
 = 
TK_BEFORE
;

238 
pTriggî
 = (
Triggî
*)
	`sqlôe3DbMÆlocZîo
(
db
, (Trigger));

239 if–
pTriggî
==0 ) 
åiggî_˛ónup
;

240 
pTriggî
->
zName
 = zName;

241 
zName
 = 0;

242 
pTriggî
->
èbÀ
 = 
	`sqlôe3DbSåDup
(
db
, 
pTabÀName
->
a
[0].
zName
);

243 
pTriggî
->
pSchema
 = 
db
->
aDb
[
iDb
].pSchema;

244 
pTriggî
->
pTabSchema
 = 
pTab
->
pSchema
;

245 
pTriggî
->
›
 = (
u8
)op;

246 
pTriggî
->
å_tm
 =År_tm==
TK_BEFORE
 ? 
TRIGGER_BEFORE
 : 
TRIGGER_AFTER
;

247 
pTriggî
->
pWhí
 = 
	`sqlôe3Ex¥Dup
(
db
,ÖWhí, 
EXPRDUP_REDUCE
);

248 
pTriggî
->
pCﬁumns
 = 
	`sqlôe3IdLi°Dup
(
db
,ÖColumns);

249 
	`as£π
–
pP¨£
->
pNewTriggî
==0 );

250 
pP¨£
->
pNewTriggî
 = 
pTriggî
;

252 
åiggî_˛ónup
:

253 
	`sqlôe3DbFªe
(
db
, 
zName
);

254 
	`sqlôe3SrcLi°Dñëe
(
db
, 
pTabÀName
);

255 
	`sqlôe3IdLi°Dñëe
(
db
, 
pCﬁumns
);

256 
	`sqlôe3Ex¥Dñëe
(
db
, 
pWhí
);

257 if–!
pP¨£
->
pNewTriggî
 ){

258 
	`sqlôe3DñëeTriggî
(
db
, 
pTriggî
);

260 
	`as£π
–
pP¨£
->
pNewTriggî
==
pTriggî
 );

262 
	}
}

268 
	$sqlôe3FöishTriggî
(

269 
P¨£
 *
pP¨£
,

270 
TriggîSãp
 *
pSãpLi°
,

271 
Tokí
 *
pAŒ


273 
Triggî
 *
pTrig
 = 
pP¨£
->
pNewTriggî
;

274 *
zName
;

275 
sqlôe3
 *
db
 = 
pP¨£
->db;

276 
DbFixî
 
sFix
;

277 
iDb
;

278 
Tokí
 
«meTokí
;

280 
pP¨£
->
pNewTriggî
 = 0;

281 if–
	`NEVER
(
pP¨£
->
nEº
Ë|| !
pTrig
 ) 
åiggîföish_˛ónup
;

282 
zName
 = 
pTrig
->zName;

283 
iDb
 = 
	`sqlôe3SchemaToIndex
(
pP¨£
->
db
, 
pTrig
->
pSchema
);

284 
pTrig
->
°ï_li°
 = 
pSãpLi°
;

285  
pSãpLi°
 ){

286 
pSãpLi°
->
pTrig
 =ÖTrig;

287 
pSãpLi°
 =ÖSãpLi°->
pNext
;

289 
	`sqlôe3TokíInô
(&
«meTokí
, 
pTrig
->
zName
);

290 
	`sqlôe3FixInô
(&
sFix
, 
pP¨£
, 
iDb
, "åiggî", &
«meTokí
);

291 if–
	`sqlôe3FixTriggîSãp
(&
sFix
, 
pTrig
->
°ï_li°
)

292 || 
	`sqlôe3FixEx¥
(&
sFix
, 
pTrig
->
pWhí
)

294 
åiggîföish_˛ónup
;

300 if–!
db
->
öô
.
busy
 ){

301 
Vdbe
 *
v
;

302 *
z
;

305 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

306 if–
v
==0 ) 
åiggîföish_˛ónup
;

307 
	`sqlôe3BegöWrôeO≥øti⁄
(
pP¨£
, 0, 
iDb
);

308 
z
 = 
	`sqlôe3DbSåNDup
(
db
, (*)
pAŒ
->z,ÖAŒ->
n
);

309 
	`sqlôe3Ne°edP¨£
(
pP¨£
,

311 
db
->
aDb
[
iDb
].
zDbSName
, 
MASTER_NAME
, 
zName
,

312 
pTrig
->
èbÀ
, 
z
);

313 
	`sqlôe3DbFªe
(
db
, 
z
);

314 
	`sqlôe3Ch™geCookõ
(
pP¨£
, 
iDb
);

315 
	`sqlôe3VdbeAddP¨£SchemaOp
(
v
, 
iDb
,

316 
	`sqlôe3MPrötf
(
db
, "ty≥='åiggî' ANDÇame='%q'", 
zName
));

319 if–
db
->
öô
.
busy
 ){

320 
Triggî
 *
pLök
 = 
pTrig
;

321 
Hash
 *
pHash
 = &
db
->
aDb
[
iDb
].
pSchema
->
åigHash
;

322 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

323 
pTrig
 = 
	`sqlôe3HashIn£π
(
pHash
, 
zName
,ÖTrig);

324 if–
pTrig
 ){

325 
	`sqlôe3OomFau…
(
db
);

326 }if–
pLök
->
pSchema
=ıLök->
pTabSchema
 ){

327 
TabÀ
 *
pTab
;

328 
pTab
 = 
	`sqlôe3HashFöd
(&
pLök
->
pTabSchema
->
tblHash
,ÖLök->
èbÀ
);

329 
	`as£π
–
pTab
!=0 );

330 
pLök
->
pNext
 = 
pTab
->
pTriggî
;

331 
pTab
->
pTriggî
 = 
pLök
;

335 
åiggîföish_˛ónup
:

336 
	`sqlôe3DñëeTriggî
(
db
, 
pTrig
);

337 
	`as£π
–!
pP¨£
->
pNewTriggî
 );

338 
	`sqlôe3DñëeTriggîSãp
(
db
, 
pSãpLi°
);

339 
	}
}

348 
TriggîSãp
 *
	$sqlôe3TriggîSñe˘Sãp
(
sqlôe3
 *
db
, 
Sñe˘
 *
pSñe˘
){

349 
TriggîSãp
 *
pTriggîSãp
 = 
	`sqlôe3DbMÆlocZîo
(
db
, (TriggerStep));

350 if–
pTriggîSãp
==0 ) {

351 
	`sqlôe3Sñe˘Dñëe
(
db
, 
pSñe˘
);

354 
pTriggîSãp
->
›
 = 
TK_SELECT
;

355 
pTriggîSãp
->
pSñe˘
 =ÖSelect;

356 
pTriggîSãp
->
‹c⁄f
 = 
OE_DeÁu…
;

357  
pTriggîSãp
;

358 
	}
}

366 
TriggîSãp
 *
	$åiggîSãpAŒoˇã
(

367 
sqlôe3
 *
db
,

368 
u8
 
›
,

369 
Tokí
 *
pName


371 
TriggîSãp
 *
pTriggîSãp
;

373 
pTriggîSãp
 = 
	`sqlôe3DbMÆlocZîo
(
db
, (
TriggîSãp
Ë+ 
pName
->
n
 + 1);

374 if–
pTriggîSãp
 ){

375 *
z
 = (*)&
pTriggîSãp
[1];

376 
	`mem˝y
(
z
, 
pName
->z,ÖName->
n
);

377 
	`sqlôe3DequŸe
(
z
);

378 
pTriggîSãp
->
zT¨gë
 = 
z
;

379 
pTriggîSãp
->
›
 = op;

381  
pTriggîSãp
;

382 
	}
}

391 
TriggîSãp
 *
	$sqlôe3TriggîIn£πSãp
(

392 
sqlôe3
 *
db
,

393 
Tokí
 *
pTabÀName
,

394 
IdLi°
 *
pCﬁumn
,

395 
Sñe˘
 *
pSñe˘
,

396 
u8
 
‹c⁄f


398 
TriggîSãp
 *
pTriggîSãp
;

400 
	`as£π
(
pSñe˘
 !0 || 
db
->
mÆlocFaûed
);

402 
pTriggîSãp
 = 
	`åiggîSãpAŒoˇã
(
db
, 
TK_INSERT
, 
pTabÀName
);

403 if–
pTriggîSãp
 ){

404 
pTriggîSãp
->
pSñe˘
 = 
	`sqlôe3Sñe˘Dup
(
db
,ÖSñe˘, 
EXPRDUP_REDUCE
);

405 
pTriggîSãp
->
pIdLi°
 = 
pCﬁumn
;

406 
pTriggîSãp
->
‹c⁄f
 = orconf;

408 
	`sqlôe3IdLi°Dñëe
(
db
, 
pCﬁumn
);

410 
	`sqlôe3Sñe˘Dñëe
(
db
, 
pSñe˘
);

412  
pTriggîSãp
;

413 
	}
}

420 
TriggîSãp
 *
	$sqlôe3TriggîUpd©eSãp
(

421 
sqlôe3
 *
db
,

422 
Tokí
 *
pTabÀName
,

423 
Ex¥Li°
 *
pELi°
,

424 
Ex¥
 *
pWhîe
,

425 
u8
 
‹c⁄f


427 
TriggîSãp
 *
pTriggîSãp
;

429 
pTriggîSãp
 = 
	`åiggîSãpAŒoˇã
(
db
, 
TK_UPDATE
, 
pTabÀName
);

430 if–
pTriggîSãp
 ){

431 
pTriggîSãp
->
pEx¥Li°
 = 
	`sqlôe3Ex¥Li°Dup
(
db
, 
pELi°
, 
EXPRDUP_REDUCE
);

432 
pTriggîSãp
->
pWhîe
 = 
	`sqlôe3Ex¥Dup
(
db
,ÖWhîe, 
EXPRDUP_REDUCE
);

433 
pTriggîSãp
->
‹c⁄f
 = orconf;

435 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pELi°
);

436 
	`sqlôe3Ex¥Dñëe
(
db
, 
pWhîe
);

437  
pTriggîSãp
;

438 
	}
}

445 
TriggîSãp
 *
	$sqlôe3TriggîDñëeSãp
(

446 
sqlôe3
 *
db
,

447 
Tokí
 *
pTabÀName
,

448 
Ex¥
 *
pWhîe


450 
TriggîSãp
 *
pTriggîSãp
;

452 
pTriggîSãp
 = 
	`åiggîSãpAŒoˇã
(
db
, 
TK_DELETE
, 
pTabÀName
);

453 if–
pTriggîSãp
 ){

454 
pTriggîSãp
->
pWhîe
 = 
	`sqlôe3Ex¥Dup
(
db
,ÖWhîe, 
EXPRDUP_REDUCE
);

455 
pTriggîSãp
->
‹c⁄f
 = 
OE_DeÁu…
;

457 
	`sqlôe3Ex¥Dñëe
(
db
, 
pWhîe
);

458  
pTriggîSãp
;

459 
	}
}

464 
	$sqlôe3DñëeTriggî
(
sqlôe3
 *
db
, 
Triggî
 *
pTriggî
){

465 if–
pTriggî
==0 ) ;

466 
	`sqlôe3DñëeTriggîSãp
(
db
, 
pTriggî
->
°ï_li°
);

467 
	`sqlôe3DbFªe
(
db
, 
pTriggî
->
zName
);

468 
	`sqlôe3DbFªe
(
db
, 
pTriggî
->
èbÀ
);

469 
	`sqlôe3Ex¥Dñëe
(
db
, 
pTriggî
->
pWhí
);

470 
	`sqlôe3IdLi°Dñëe
(
db
, 
pTriggî
->
pCﬁumns
);

471 
	`sqlôe3DbFªe
(
db
, 
pTriggî
);

472 
	}
}

482 
	$sqlôe3Dr›Triggî
(
P¨£
 *
pP¨£
, 
SrcLi°
 *
pName
, 
noEº
){

483 
Triggî
 *
pTriggî
 = 0;

484 
i
;

485 c⁄° *
zDb
;

486 c⁄° *
zName
;

487 
sqlôe3
 *
db
 = 
pP¨£
->db;

489 if–
db
->
mÆlocFaûed
 ) 
dr›_åiggî_˛ónup
;

490 if–
SQLITE_OK
!=
	`sqlôe3RódSchema
(
pP¨£
) ){

491 
dr›_åiggî_˛ónup
;

494 
	`as£π
–
pName
->
nSrc
==1 );

495 
zDb
 = 
pName
->
a
[0].
zD©aba£
;

496 
zName
 = 
pName
->
a
[0].zName;

497 
	`as£π
–
zDb
!=0 || 
	`sqlôe3BåìHﬁdsAŒMuãxes
(
db
) );

498 
i
=
OMIT_TEMPDB
; i<
db
->
nDb
; i++){

499 
j
 = (
i
<2) ? i^1 : i;

500 if–
zDb
 && 
	`sqlôe3SåICmp
(
db
->
aDb
[
j
].
zDbSName
, zDb) ) ;

501 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
j
, 0) );

502 
pTriggî
 = 
	`sqlôe3HashFöd
(&(
db
->
aDb
[
j
].
pSchema
->
åigHash
), 
zName
);

503 if–
pTriggî
 ) ;

505 if–!
pTriggî
 ){

506 if–!
noEº
 ){

507 
	`sqlôe3Eº‹Msg
(
pP¨£
, "nÿsuchÅriggî: %S", 
pName
, 0);

509 
	`sqlôe3CodeVîifyNamedSchema
(
pP¨£
, 
zDb
);

511 
pP¨£
->
checkSchema
 = 1;

512 
dr›_åiggî_˛ónup
;

514 
	`sqlôe3Dr›TriggîPå
(
pP¨£
, 
pTriggî
);

516 
dr›_åiggî_˛ónup
:

517 
	`sqlôe3SrcLi°Dñëe
(
db
, 
pName
);

518 
	}
}

524 
TabÀ
 *
	$èbÀOfTriggî
(
Triggî
 *
pTriggî
){

525  
	`sqlôe3HashFöd
(&
pTriggî
->
pTabSchema
->
tblHash
,ÖTriggî->
èbÀ
);

526 
	}
}

532 
	$sqlôe3Dr›TriggîPå
(
P¨£
 *
pP¨£
, 
Triggî
 *
pTriggî
){

533 
TabÀ
 *
pTabÀ
;

534 
Vdbe
 *
v
;

535 
sqlôe3
 *
db
 = 
pP¨£
->db;

536 
iDb
;

538 
iDb
 = 
	`sqlôe3SchemaToIndex
(
pP¨£
->
db
, 
pTriggî
->
pSchema
);

539 
	`as£π
–
iDb
>=0 && iDb<
db
->
nDb
 );

540 
pTabÀ
 = 
	`èbÀOfTriggî
(
pTriggî
);

541 
	`as£π
–
pTabÀ
 );

542 
	`as£π
–
pTabÀ
->
pSchema
==
pTriggî
->pSchem®|| 
iDb
==1 );

543 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


545 
code
 = 
SQLITE_DROP_TRIGGER
;

546 c⁄° *
zDb
 = 
db
->
aDb
[
iDb
].
zDbSName
;

547 c⁄° *
zTab
 = 
	`SCHEMA_TABLE
(
iDb
);

548 if–
iDb
==1 ) 
code
 = 
SQLITE_DROP_TEMP_TRIGGER
;

549 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
code
, 
pTriggî
->
zName
, 
pTabÀ
->zName, 
zDb
) ||

550 
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_DELETE
, 
zTab
, 0, 
zDb
) ){

558 
	`as£π
–
pTabÀ
!=0 );

559 if–(
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
))!=0 ){

560 
	`sqlôe3Ne°edP¨£
(
pP¨£
,

562 
db
->
aDb
[
iDb
].
zDbSName
, 
MASTER_NAME
, 
pTriggî
->
zName


564 
	`sqlôe3Ch™geCookõ
(
pP¨£
, 
iDb
);

565 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Dr›Triggî
, 
iDb
, 0, 0, 
pTriggî
->
zName
, 0);

567 
	}
}

572 
	$sqlôe3U∆ökAndDñëeTriggî
(
sqlôe3
 *
db
, 
iDb
, c⁄° *
zName
){

573 
Triggî
 *
pTriggî
;

574 
Hash
 *
pHash
;

576 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

577 
pHash
 = &(
db
->
aDb
[
iDb
].
pSchema
->
åigHash
);

578 
pTriggî
 = 
	`sqlôe3HashIn£π
(
pHash
, 
zName
, 0);

579 if–
	`ALWAYS
(
pTriggî
) ){

580 if–
pTriggî
->
pSchema
=ıTriggî->
pTabSchema
 ){

581 
TabÀ
 *
pTab
 = 
	`èbÀOfTriggî
(
pTriggî
);

582 
Triggî
 **
µ
;

583 
µ
=&
pTab
->
pTriggî
; *µ!ıTriggî;Öp=&((*µ)->
pNext
));

584 *
µ
 = (*µ)->
pNext
;

586 
	`sqlôe3DñëeTriggî
(
db
, 
pTriggî
);

587 
db
->
Êags
 |
SQLITE_I¡înCh™ges
;

589 
	}
}

600 
	$checkCﬁumnOvîœp
(
IdLi°
 *
pIdLi°
, 
Ex¥Li°
 *
pELi°
){

601 
e
;

602 if–
pIdLi°
==0 || 
	`NEVER
(
pELi°
==0) )  1;

603 
e
=0;É<
pELi°
->
nEx¥
;É++){

604 if–
	`sqlôe3IdLi°Index
(
pIdLi°
, 
pELi°
->
a
[
e
].
zName
)>=0 )  1;

607 
	}
}

615 
Triggî
 *
	$sqlôe3TriggîsExi°
(

616 
P¨£
 *
pP¨£
,

617 
TabÀ
 *
pTab
,

618 
›
,

619 
Ex¥Li°
 *
pCh™ges
,

620 *
pMask


622 
mask
 = 0;

623 
Triggî
 *
pLi°
 = 0;

624 
Triggî
 *
p
;

626 if–(
pP¨£
->
db
->
Êags
 & 
SQLITE_E«bÀTriggî
)!=0 ){

627 
pLi°
 = 
	`sqlôe3TriggîLi°
(
pP¨£
, 
pTab
);

629 
	`as£π
–
pLi°
==0 || 
	`IsVútuÆ
(
pTab
)==0 );

630 
p
=
pLi°
;Ö;Öı->
pNext
){

631 if–
p
->
›
==› && 
	`checkCﬁumnOvîœp
’->
pCﬁumns
, 
pCh™ges
) ){

632 
mask
 |
p
->
å_tm
;

635 if–
pMask
 ){

636 *
pMask
 = 
mask
;

638  (
mask
 ? 
pLi°
 : 0);

639 
	}
}

651 
SrcLi°
 *
	$èrgëSrcLi°
(

652 
P¨£
 *
pP¨£
,

653 
TriggîSãp
 *
pSãp


655 
sqlôe3
 *
db
 = 
pP¨£
->db;

656 
iDb
;

657 
SrcLi°
 *
pSrc
;

659 
pSrc
 = 
	`sqlôe3SrcLi°Aµíd
(
db
, 0, 0, 0);

660 if–
pSrc
 ){

661 
	`as£π
–
pSrc
->
nSrc
>0 );

662 
pSrc
->
a
[pSrc->
nSrc
-1].
zName
 = 
	`sqlôe3DbSåDup
(
db
, 
pSãp
->
zT¨gë
);

663 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pSãp
->
pTrig
->
pSchema
);

664 if–
iDb
==0 || iDb>=2 ){

665 c⁄° *
zDb
;

666 
	`as£π
–
iDb
<
db
->
nDb
 );

667 
zDb
 = 
db
->
aDb
[
iDb
].
zDbSName
;

668 
pSrc
->
a
[pSrc->
nSrc
-1].
zD©aba£
 = 
	`sqlôe3DbSåDup
(
db
, 
zDb
);

671  
pSrc
;

672 
	}
}

678 
	$codeTriggîProgøm
(

679 
P¨£
 *
pP¨£
,

680 
TriggîSãp
 *
pSãpLi°
,

681 
‹c⁄f


683 
TriggîSãp
 *
pSãp
;

684 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

685 
sqlôe3
 *
db
 = 
pP¨£
->db;

687 
	`as£π
–
pP¨£
->
pTriggîTab
 &&ÖP¨£->
pT›Àvñ
 );

688 
	`as£π
–
pSãpLi°
 );

689 
	`as£π
–
v
!=0 );

690 
pSãp
=
pSãpLi°
;ÖSãp;ÖSãpıSãp->
pNext
){

704 
pP¨£
->
eOrc⁄f
 = (
‹c⁄f
==
OE_DeÁu…
)?
pSãp
->‹c⁄f:(
u8
)orconf;

705 
	`as£π
–
pP¨£
->
okC⁄°Fa˘‹
==0 );

707  
pSãp
->
›
 ){

708 
TK_UPDATE
: {

709 
	`sqlôe3Upd©e
(
pP¨£
,

710 
	`èrgëSrcLi°
(
pP¨£
, 
pSãp
),

711 
	`sqlôe3Ex¥Li°Dup
(
db
, 
pSãp
->
pEx¥Li°
, 0),

712 
	`sqlôe3Ex¥Dup
(
db
, 
pSãp
->
pWhîe
, 0),

713 
pP¨£
->
eOrc⁄f


717 
TK_INSERT
: {

718 
	`sqlôe3In£π
(
pP¨£
,

719 
	`èrgëSrcLi°
(
pP¨£
, 
pSãp
),

720 
	`sqlôe3Sñe˘Dup
(
db
, 
pSãp
->
pSñe˘
, 0),

721 
	`sqlôe3IdLi°Dup
(
db
, 
pSãp
->
pIdLi°
),

722 
pP¨£
->
eOrc⁄f


726 
TK_DELETE
: {

727 
	`sqlôe3DñëeFrom
(
pP¨£
,

728 
	`èrgëSrcLi°
(
pP¨£
, 
pSãp
),

729 
	`sqlôe3Ex¥Dup
(
db
, 
pSãp
->
pWhîe
, 0)

733 : 
	`as£π
–
pSãp
->
›
==
TK_SELECT
 ); {

734 
Sñe˘De°
 
sDe°
;

735 
Sñe˘
 *
pSñe˘
 = 
	`sqlôe3Sñe˘Dup
(
db
, 
pSãp
->pSelect, 0);

736 
	`sqlôe3Sñe˘De°Inô
(&
sDe°
, 
SRT_Disˇrd
, 0);

737 
	`sqlôe3Sñe˘
(
pP¨£
, 
pSñe˘
, &
sDe°
);

738 
	`sqlôe3Sñe˘Dñëe
(
db
, 
pSñe˘
);

742 if–
pSãp
->
›
!=
TK_SELECT
 ){

743 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_Re£tCou¡
);

748 
	}
}

750 #ifde‡
SQLITE_ENABLE_EXPLAIN_COMMENTS


755 c⁄° *
	$⁄Eº‹Text
(
⁄Eº‹
){

756  
⁄Eº‹
 ){

757 
OE_Ab‹t
:  "abort";

758 
OE_Rﬁlback
:  "rollback";

759 
OE_Faû
:  "fail";

760 
OE_Rïœ˚
:  "replace";

761 
OE_Ign‹e
:  "ignore";

762 
OE_DeÁu…
:  "default";

765 
	}
}

773 
	$å™s„rP¨£Eº‹
(
P¨£
 *
pTo
, P¨£ *
pFrom
){

774 
	`as£π
–
pFrom
->
zEºMsg
==0 ||ÖFrom->
nEº
 );

775 
	`as£π
–
pTo
->
zEºMsg
==0 ||ÖTo->
nEº
 );

776 if–
pTo
->
nEº
==0 ){

777 
pTo
->
zEºMsg
 = 
pFrom
->zErrMsg;

778 
pTo
->
nEº
 = 
pFrom
->nErr;

779 
pTo
->
rc
 = 
pFrom
->rc;

781 
	`sqlôe3DbFªe
(
pFrom
->
db
,ÖFrom->
zEºMsg
);

783 
	}
}

789 
TriggîPrg
 *
	$codeRowTriggî
(

790 
P¨£
 *
pP¨£
,

791 
Triggî
 *
pTriggî
,

792 
TabÀ
 *
pTab
,

793 
‹c⁄f


795 
P¨£
 *
pT›
 = 
	`sqlôe3P¨£T›Àvñ
(
pP¨£
);

796 
sqlôe3
 *
db
 = 
pP¨£
->db;

797 
TriggîPrg
 *
pPrg
;

798 
Ex¥
 *
pWhí
 = 0;

799 
Vdbe
 *
v
;

800 
NameC⁄ãxt
 
sNC
;

801 
SubProgøm
 *
pProgøm
 = 0;

802 
P¨£
 *
pSubP¨£
;

803 
iEndTriggî
 = 0;

805 
	`as£π
–
pTriggî
->
zName
==0 || 
pTab
==
	`èbÀOfTriggî
(pTrigger) );

806 
	`as£π
–
pT›
->
pVdbe
 );

811 
pPrg
 = 
	`sqlôe3DbMÆlocZîo
(
db
, (
TriggîPrg
));

812 if–!
pPrg
 )  0;

813 
pPrg
->
pNext
 = 
pT›
->
pTriggîPrg
;

814 
pT›
->
pTriggîPrg
 = 
pPrg
;

815 
pPrg
->
pProgøm
 =ÖProgøm = 
	`sqlôe3DbMÆlocZîo
(
db
, (
SubProgøm
));

816 if–!
pProgøm
 )  0;

817 
	`sqlôe3VdbeLökSubProgøm
(
pT›
->
pVdbe
, 
pProgøm
);

818 
pPrg
->
pTriggî
 =ÖTrigger;

819 
pPrg
->
‹c⁄f
 = orconf;

820 
pPrg
->
aCﬁmask
[0] = 0xffffffff;

821 
pPrg
->
aCﬁmask
[1] = 0xffffffff;

825 
pSubP¨£
 = 
	`sqlôe3SèckAŒocZîo
(
db
, (
P¨£
));

826 if–!
pSubP¨£
 )  0;

827 
	`mem£t
(&
sNC
, 0, (sNC));

828 
sNC
.
pP¨£
 = 
pSubP¨£
;

829 
pSubP¨£
->
db
 = db;

830 
pSubP¨£
->
pTriggîTab
 = 
pTab
;

831 
pSubP¨£
->
pT›Àvñ
 = 
pT›
;

832 
pSubP¨£
->
zAuthC⁄ãxt
 = 
pTriggî
->
zName
;

833 
pSubP¨£
->
eTriggîOp
 = 
pTriggî
->
›
;

834 
pSubP¨£
->
nQuîyLo›
 = 
pP¨£
->nQueryLoop;

836 
v
 = 
	`sqlôe3GëVdbe
(
pSubP¨£
);

837 if–
v
 ){

838 
	`VdbeCommít
((
v
, "Start: %s.%s (%s %s%s%s ON %s)",

839 
pTriggî
->
zName
, 
	`⁄Eº‹Text
(
‹c⁄f
),

840 (
pTriggî
->
å_tm
==
TRIGGER_BEFORE
 ? "BEFORE" : "AFTER"),

841 (
pTriggî
->
›
==
TK_UPDATE
 ? "UPDATE" : ""),

842 (
pTriggî
->
›
==
TK_INSERT
 ? "INSERT" : ""),

843 (
pTriggî
->
›
==
TK_DELETE
 ? "DELETE" : ""),

844 
pTab
->
zName


846 #i‚de‡
SQLITE_OMIT_TRACE


847 
	`sqlôe3VdbeCh™geP4
(
v
, -1,

848 
	`sqlôe3MPrötf
(
db
, "-- TRIGGER %s", 
pTriggî
->
zName
), 
P4_DYNAMIC


855 if–
pTriggî
->
pWhí
 ){

856 
pWhí
 = 
	`sqlôe3Ex¥Dup
(
db
, 
pTriggî
->pWhen, 0);

857 if–
SQLITE_OK
==
	`sqlôe3ResﬁveEx¥Names
(&
sNC
, 
pWhí
)

858 && 
db
->
mÆlocFaûed
==0

860 
iEndTriggî
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

861 
	`sqlôe3Ex¥IfFÆ£
(
pSubP¨£
, 
pWhí
, 
iEndTriggî
, 
SQLITE_JUMPIFNULL
);

863 
	`sqlôe3Ex¥Dñëe
(
db
, 
pWhí
);

867 
	`codeTriggîProgøm
(
pSubP¨£
, 
pTriggî
->
°ï_li°
, 
‹c⁄f
);

870 if–
iEndTriggî
 ){

871 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
iEndTriggî
);

873 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_HÆt
);

874 
	`VdbeCommít
((
v
, "End: %s.%s", 
pTriggî
->
zName
, 
	`⁄Eº‹Text
(
‹c⁄f
)));

876 
	`å™s„rP¨£Eº‹
(
pP¨£
, 
pSubP¨£
);

877 if–
db
->
mÆlocFaûed
==0 ){

878 
pProgøm
->
aOp
 = 
	`sqlôe3VdbeTakeOpAºay
(
v
, &pProgøm->
nOp
, &
pT›
->
nMaxArg
);

880 
pProgøm
->
nMem
 = 
pSubP¨£
->nMem;

881 
pProgøm
->
nC§
 = 
pSubP¨£
->
nTab
;

882 
pProgøm
->
tokí
 = (*)
pTriggî
;

883 
pPrg
->
aCﬁmask
[0] = 
pSubP¨£
->
ﬁdmask
;

884 
pPrg
->
aCﬁmask
[1] = 
pSubP¨£
->
√wmask
;

885 
	`sqlôe3VdbeDñëe
(
v
);

888 
	`as£π
–!
pSubP¨£
->
pAöc
 && !pSubP¨£->
pZombõTab
 );

889 
	`as£π
–!
pSubP¨£
->
pTriggîPrg
 && !pSubP¨£->
nMaxArg
 );

890 
	`sqlôe3P¨£rRe£t
(
pSubP¨£
);

891 
	`sqlôe3SèckFªe
(
db
, 
pSubP¨£
);

893  
pPrg
;

894 
	}
}

902 
TriggîPrg
 *
	$gëRowTriggî
(

903 
P¨£
 *
pP¨£
,

904 
Triggî
 *
pTriggî
,

905 
TabÀ
 *
pTab
,

906 
‹c⁄f


908 
P¨£
 *
pRoŸ
 = 
	`sqlôe3P¨£T›Àvñ
(
pP¨£
);

909 
TriggîPrg
 *
pPrg
;

911 
	`as£π
–
pTriggî
->
zName
==0 || 
pTab
==
	`èbÀOfTriggî
(pTrigger) );

917 
pPrg
=
pRoŸ
->
pTriggîPrg
;

918 
pPrg
 && (pPrg->
pTriggî
!ıTriggî ||ÖPrg->
‹c⁄f
!=orconf);

919 
pPrg
ıPrg->
pNext


923 if–!
pPrg
 ){

924 
pPrg
 = 
	`codeRowTriggî
(
pP¨£
, 
pTriggî
, 
pTab
, 
‹c⁄f
);

927  
pPrg
;

928 
	}
}

936 
	$sqlôe3CodeRowTriggîDúe˘
(

937 
P¨£
 *
pP¨£
,

938 
Triggî
 *
p
,

939 
TabÀ
 *
pTab
,

940 
ªg
,

941 
‹c⁄f
,

942 
ign‹eJump


944 
Vdbe
 *
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

945 
TriggîPrg
 *
pPrg
;

946 
pPrg
 = 
	`gëRowTriggî
(
pP¨£
, 
p
, 
pTab
, 
‹c⁄f
);

947 
	`as£π
–
pPrg
 || 
pP¨£
->
nEº
 ||ÖP¨£->
db
->
mÆlocFaûed
 );

951 if–
pPrg
 ){

952 
bRecursive
 = (
p
->
zName
 && 0==(
pP¨£
->
db
->
Êags
&
SQLITE_RecTriggîs
));

954 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Progøm
, 
ªg
, 
ign‹eJump
, ++
pP¨£
->
nMem
,

955 (c⁄° *)
pPrg
->
pProgøm
, 
P4_SUBPROGRAM
);

956 
	`VdbeCommít
(

957 (
v
, "CÆl: %s.%s", (
p
->
zName
?p->zName:"fkey"), 
	`⁄Eº‹Text
(
‹c⁄f
)));

964 
	`sqlôe3VdbeCh™geP5
(
v
, (
u8
)
bRecursive
);

966 
	}
}

1008 
	$sqlôe3CodeRowTriggî
(

1009 
P¨£
 *
pP¨£
,

1010 
Triggî
 *
pTriggî
,

1011 
›
,

1012 
Ex¥Li°
 *
pCh™ges
,

1013 
å_tm
,

1014 
TabÀ
 *
pTab
,

1015 
ªg
,

1016 
‹c⁄f
,

1017 
ign‹eJump


1019 
Triggî
 *
p
;

1021 
	`as£π
–
›
==
TK_UPDATE
 || op==
TK_INSERT
 || op==
TK_DELETE
 );

1022 
	`as£π
–
å_tm
==
TRIGGER_BEFORE
 ||År_tm==
TRIGGER_AFTER
 );

1023 
	`as£π
–(
›
==
TK_UPDATE
)==(
pCh™ges
!=0) );

1025 
p
=
pTriggî
;Ö;Öı->
pNext
){

1030 
	`as£π
–
p
->
pSchema
!=0 );

1031 
	`as£π
–
p
->
pTabSchema
!=0 );

1032 
	`as£π
–
p
->
pSchema
=ı->
pTabSchema


1033 || 
p
->
pSchema
==
pP¨£
->
db
->
aDb
[1].pSchema );

1036 if–
p
->
›
==op

1037 && 
p
->
å_tm
==tr_tm

1038 && 
	`checkCﬁumnOvîœp
(
p
->
pCﬁumns
, 
pCh™ges
)

1040 
	`sqlôe3CodeRowTriggîDúe˘
(
pP¨£
, 
p
, 
pTab
, 
ªg
, 
‹c⁄f
, 
ign‹eJump
);

1043 
	}
}

1070 
u32
 
	$sqlôe3TriggîCﬁmask
(

1071 
P¨£
 *
pP¨£
,

1072 
Triggî
 *
pTriggî
,

1073 
Ex¥Li°
 *
pCh™ges
,

1074 
isNew
,

1075 
å_tm
,

1076 
TabÀ
 *
pTab
,

1077 
‹c⁄f


1079 c⁄° 
›
 = 
pCh™ges
 ? 
TK_UPDATE
 : 
TK_DELETE
;

1080 
u32
 
mask
 = 0;

1081 
Triggî
 *
p
;

1083 
	`as£π
–
isNew
==1 || isNew==0 );

1084 
p
=
pTriggî
;Ö;Öı->
pNext
){

1085 if–
p
->
›
==› && (
å_tm
&p->tr_tm)

1086 && 
	`checkCﬁumnOvîœp
(
p
->
pCﬁumns
,
pCh™ges
)

1088 
TriggîPrg
 *
pPrg
;

1089 
pPrg
 = 
	`gëRowTriggî
(
pP¨£
, 
p
, 
pTab
, 
‹c⁄f
);

1090 if–
pPrg
 ){

1091 
mask
 |
pPrg
->
aCﬁmask
[
isNew
];

1096  
mask
;

1097 
	}
}

	@update.c

15 
	~"sqlôeI¡.h
"

17 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


19 
upd©eVútuÆTabÀ
(

20 
P¨£
 *
pP¨£
,

21 
SrcLi°
 *
pSrc
,

22 
TabÀ
 *
pTab
,

23 
Ex¥Li°
 *
pCh™ges
,

24 
Ex¥
 *
pRowidEx¥
,

25 *
aXRef
,

26 
Ex¥
 *
pWhîe
,

27 
⁄Eº‹


61 
	$sqlôe3CﬁumnDeÁu…
(
Vdbe
 *
v
, 
TabÀ
 *
pTab
, 
i
, 
iReg
){

62 
	`as£π
–
pTab
!=0 );

63 if–!
pTab
->
pSñe˘
 ){

64 
sqlôe3_vÆue
 *
pVÆue
 = 0;

65 
u8
 
íc
 = 
	`ENC
(
	`sqlôe3VdbeDb
(
v
));

66 
Cﬁumn
 *
pCﬁ
 = &
pTab
->
aCﬁ
[
i
];

67 
	`VdbeCommít
((
v
, "%s.%s", 
pTab
->
zName
, 
pCﬁ
->zName));

68 
	`as£π
–
i
<
pTab
->
nCﬁ
 );

69 
	`sqlôe3VÆueFromEx¥
(
	`sqlôe3VdbeDb
(
v
), 
pCﬁ
->
pDÊt
, 
íc
,

70 
pCﬁ
->
afföôy
, &
pVÆue
);

71 if–
pVÆue
 ){

72 
	`sqlôe3VdbeAµídP4
(
v
, 
pVÆue
, 
P4_MEM
);

74 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


75 if–
pTab
->
aCﬁ
[
i
].
afföôy
==
SQLITE_AFF_REAL
 ){

76 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_RólAfföôy
, 
iReg
);

80 
	}
}

89 
	$sqlôe3Upd©e
(

90 
P¨£
 *
pP¨£
,

91 
SrcLi°
 *
pTabLi°
,

92 
Ex¥Li°
 *
pCh™ges
,

93 
Ex¥
 *
pWhîe
,

94 
⁄Eº‹


96 
i
, 
j
;

97 
TabÀ
 *
pTab
;

98 
addrT›
 = 0;

99 
WhîeInfo
 *
pWInfo
;

100 
Vdbe
 *
v
;

101 
Index
 *
pIdx
;

102 
Index
 *
pPk
;

103 
nIdx
;

104 
iBa£Cur
;

105 
iD©aCur
;

106 
iIdxCur
;

107 
sqlôe3
 *
db
;

108 *
aRegIdx
 = 0;

109 *
aXRef
 = 0;

112 
u8
 *
aToO≥n
;

113 
u8
 
chngPk
;

114 
u8
 
chngRowid
;

115 
u8
 
chngKey
;

116 
Ex¥
 *
pRowidEx¥
 = 0;

117 
AuthC⁄ãxt
 
sC⁄ãxt
;

118 
NameC⁄ãxt
 
sNC
;

119 
iDb
;

120 
okO√Pass
;

121 
hasFK
;

122 
œbñBªak
;

123 
œbñC⁄töue
;

125 #i‚de‡
SQLITE_OMIT_TRIGGER


126 
isVõw
;

127 
Triggî
 *
pTriggî
;

128 
tmask
;

130 
√wmask
;

131 
iEph
 = 0;

132 
nKey
 = 0;

133 
aiCurO√Pass
[2];

136 
ªgRowCou¡
 = 0;

137 
ªgOldRowid
 = 0;

138 
ªgNewRowid
 = 0;

139 
ªgNew
 = 0;

140 
ªgOld
 = 0;

141 
ªgRowSë
 = 0;

142 
ªgKey
 = 0;

144 
	`mem£t
(&
sC⁄ãxt
, 0, (sContext));

145 
db
 = 
pP¨£
->db;

146 if–
pP¨£
->
nEº
 || 
db
->
mÆlocFaûed
 ){

147 
upd©e_˛ónup
;

149 
	`as£π
–
pTabLi°
->
nSrc
==1 );

153 
pTab
 = 
	`sqlôe3SrcLi°Lookup
(
pP¨£
, 
pTabLi°
);

154 if–
pTab
==0 ) 
upd©e_˛ónup
;

155 
iDb
 = 
	`sqlôe3SchemaToIndex
(
pP¨£
->
db
, 
pTab
->
pSchema
);

160 #i‚de‡
SQLITE_OMIT_TRIGGER


161 
pTriggî
 = 
	`sqlôe3TriggîsExi°
(
pP¨£
, 
pTab
, 
TK_UPDATE
, 
pCh™ges
, &
tmask
);

162 
isVõw
 = 
pTab
->
pSñe˘
!=0;

163 
	`as£π
–
pTriggî
 || 
tmask
==0 );

165 
	#pTriggî
 0

	)

166 
	#isVõw
 0

	)

167 
	#tmask
 0

	)

169 #ifde‡
SQLITE_OMIT_VIEW


170 #unde‡
isVõw


171 
	#isVõw
 0

	)

174 if–
	`sqlôe3VõwGëCﬁumnNames
(
pP¨£
, 
pTab
) ){

175 
upd©e_˛ónup
;

177 if–
	`sqlôe3IsRódO∆y
(
pP¨£
, 
pTab
, 
tmask
) ){

178 
upd©e_˛ónup
;

186 
pTabLi°
->
a
[0].
iCurs‹
 = 
iBa£Cur
 = 
iD©aCur
 = 
pP¨£
->
nTab
++;

187 
iIdxCur
 = 
iD©aCur
+1;

188 
pPk
 = 
	`HasRowid
(
pTab
Ë? 0 : 
	`sqlôe3Prim¨yKeyIndex
(pTab);

189 
nIdx
=0, 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
,ÇIdx++){

190 if–
	`IsPrim¨yKeyIndex
(
pIdx
Ë&& 
pPk
!=0 ){

191 
iD©aCur
 = 
pP¨£
->
nTab
;

192 
pTabLi°
->
a
[0].
iCurs‹
 = 
iD©aCur
;

194 
pP¨£
->
nTab
++;

200 
aXRef
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, (Ë* (
pTab
->
nCﬁ
+
nIdx
) +ÇIdx+2 );

201 if–
aXRef
==0 ) 
upd©e_˛ónup
;

202 
aRegIdx
 = 
aXRef
+
pTab
->
nCﬁ
;

203 
aToO≥n
 = (
u8
*)(
aRegIdx
+
nIdx
);

204 
	`mem£t
(
aToO≥n
, 1, 
nIdx
+1);

205 
aToO≥n
[
nIdx
+1] = 0;

206 
i
=0; i<
pTab
->
nCﬁ
; i++Ë
aXRef
[i] = -1;

209 
	`mem£t
(&
sNC
, 0, (sNC));

210 
sNC
.
pP¨£
 =ÖParse;

211 
sNC
.
pSrcLi°
 = 
pTabLi°
;

219 
chngRowid
 = 
chngPk
 = 0;

220 
i
=0; i<
pCh™ges
->
nEx¥
; i++){

221 if–
	`sqlôe3ResﬁveEx¥Names
(&
sNC
, 
pCh™ges
->
a
[
i
].
pEx¥
) ){

222 
upd©e_˛ónup
;

224 
j
=0; j<
pTab
->
nCﬁ
; j++){

225 if–
	`sqlôe3SåICmp
(
pTab
->
aCﬁ
[
j
].
zName
, 
pCh™ges
->
a
[
i
].zName)==0 ){

226 if–
j
==
pTab
->
iPKey
 ){

227 
chngRowid
 = 1;

228 
pRowidEx¥
 = 
pCh™ges
->
a
[
i
].
pEx¥
;

229 }if–
pPk
 && (
pTab
->
aCﬁ
[
j
].
cﬁFœgs
 & 
COLFLAG_PRIMKEY
)!=0 ){

230 
chngPk
 = 1;

232 
aXRef
[
j
] = 
i
;

236 if–
j
>=
pTab
->
nCﬁ
 ){

237 if–
pPk
==0 && 
	`sqlôe3IsRowid
(
pCh™ges
->
a
[
i
].
zName
) ){

238 
j
 = -1;

239 
chngRowid
 = 1;

240 
pRowidEx¥
 = 
pCh™ges
->
a
[
i
].
pEx¥
;

242 
	`sqlôe3Eº‹Msg
(
pP¨£
, "nÿsuch cﬁumn: %s", 
pCh™ges
->
a
[
i
].
zName
);

243 
pP¨£
->
checkSchema
 = 1;

244 
upd©e_˛ónup
;

247 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


249 
rc
;

250 
rc
 = 
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_UPDATE
, 
pTab
->
zName
,

251 
j
<0 ? "ROWID" : 
pTab
->
aCﬁ
[j].
zName
,

252 
db
->
aDb
[
iDb
].
zDbSName
);

253 if–
rc
==
SQLITE_DENY
 ){

254 
upd©e_˛ónup
;

255 }if–
rc
==
SQLITE_IGNORE
 ){

256 
aXRef
[
j
] = -1;

261 
	`as£π
–(
chngRowid
 & 
chngPk
)==0 );

262 
	`as£π
–
chngRowid
==0 || chngRowid==1 );

263 
	`as£π
–
chngPk
==0 || chngPk==1 );

264 
chngKey
 = 
chngRowid
 + 
chngPk
;

271 
pTabLi°
->
a
[0].
cﬁU£d
 = 
	`IsVútuÆ
(
pTab
Ë? 
ALLBITS
 : 0;

273 
hasFK
 = 
	`sqlôe3FkRequúed
(
pP¨£
, 
pTab
, 
aXRef
, 
chngKey
);

281 
j
=0, 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
, j++){

282 
ªg
;

283 if–
chngKey
 || 
hasFK
 || 
pIdx
->
pP¨tIdxWhîe
 ||ÖIdx==
pPk
 ){

284 
ªg
 = ++
pP¨£
->
nMem
;

285 
pP¨£
->
nMem
 +
pIdx
->
nCﬁumn
;

287 
ªg
 = 0;

288 
i
=0; i<
pIdx
->
nKeyCﬁ
; i++){

289 
i16
 
iIdxCﬁ
 = 
pIdx
->
aiCﬁumn
[
i
];

290 if–
iIdxCﬁ
<0 || 
aXRef
[iIdxCol]>=0 ){

291 
ªg
 = ++
pP¨£
->
nMem
;

292 
pP¨£
->
nMem
 +
pIdx
->
nCﬁumn
;

297 if–
ªg
==0 ) 
aToO≥n
[
j
+1] = 0;

298 
aRegIdx
[
j
] = 
ªg
;

302 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

303 if–
v
==0 ) 
upd©e_˛ónup
;

304 if–
pP¨£
->
√°ed
==0 ) 
	`sqlôe3VdbeCou¡Ch™ges
(
v
);

305 
	`sqlôe3BegöWrôeO≥øti⁄
(
pP¨£
, 1, 
iDb
);

308 if–!
	`IsVútuÆ
(
pTab
) ){

309 
ªgRowSë
 = ++
pP¨£
->
nMem
;

310 
ªgOldRowid
 = 
ªgNewRowid
 = ++
pP¨£
->
nMem
;

311 if–
chngPk
 || 
pTriggî
 || 
hasFK
 ){

312 
ªgOld
 = 
pP¨£
->
nMem
 + 1;

313 
pP¨£
->
nMem
 +
pTab
->
nCﬁ
;

315 if–
chngKey
 || 
pTriggî
 || 
hasFK
 ){

316 
ªgNewRowid
 = ++
pP¨£
->
nMem
;

318 
ªgNew
 = 
pP¨£
->
nMem
 + 1;

319 
pP¨£
->
nMem
 +
pTab
->
nCﬁ
;

323 if–
isVõw
 ){

324 
	`sqlôe3AuthC⁄ãxtPush
(
pP¨£
, &
sC⁄ãxt
, 
pTab
->
zName
);

330 #i‡!
	`deföed
(
SQLITE_OMIT_VIEW
Ë&& !deföed(
SQLITE_OMIT_TRIGGER
)

331 if–
isVõw
 ){

332 
	`sqlôe3M©îülizeVõw
(
pP¨£
, 
pTab
, 
pWhîe
, 
iD©aCur
);

339 if–
	`sqlôe3ResﬁveEx¥Names
(&
sNC
, 
pWhîe
) ){

340 
upd©e_˛ónup
;

343 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


345 if–
	`IsVútuÆ
(
pTab
) ){

346 
	`upd©eVútuÆTabÀ
(
pP¨£
, 
pTabLi°
, 
pTab
, 
pCh™ges
, 
pRowidEx¥
, 
aXRef
,

347 
pWhîe
, 
⁄Eº‹
);

348 
upd©e_˛ónup
;

354 if–
	`HasRowid
(
pTab
) ){

355 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_NuŒ
, 0, 
ªgRowSë
, 
ªgOldRowid
);

356 
pWInfo
 = 
	`sqlôe3WhîeBegö
(

357 
pP¨£
, 
pTabLi°
, 
pWhîe
, 0, 0,

358 
WHERE_ONEPASS_DESIRED
 | 
WHERE_SEEK_TABLE
, 
iIdxCur


360 if–
pWInfo
==0 ) 
upd©e_˛ónup
;

361 
okO√Pass
 = 
	`sqlôe3WhîeOkO√Pass
(
pWInfo
, 
aiCurO√Pass
);

365 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rowid
, 
iD©aCur
, 
ªgOldRowid
);

366 if–!
okO√Pass
 ){

367 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_RowSëAdd
, 
ªgRowSë
, 
ªgOldRowid
);

372 
	`sqlôe3WhîeEnd
(
pWInfo
);

374 
iPk
;

375 
i16
 
nPk
;

376 
addrO≥n
;

378 
	`as£π
–
pPk
!=0 );

379 
nPk
 = 
pPk
->
nKeyCﬁ
;

380 
iPk
 = 
pP¨£
->
nMem
+1;

381 
pP¨£
->
nMem
 +
nPk
;

382 
ªgKey
 = ++
pP¨£
->
nMem
;

383 
iEph
 = 
pP¨£
->
nTab
++;

384 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NuŒ
, 0, 
iPk
);

385 
addrO≥n
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_O≥nEphemîÆ
, 
iEph
, 
nPk
);

386 
	`sqlôe3VdbeSëP4KeyInfo
(
pP¨£
, 
pPk
);

387 
pWInfo
 = 
	`sqlôe3WhîeBegö
(
pP¨£
, 
pTabLi°
, 
pWhîe
, 0, 0,

388 
WHERE_ONEPASS_DESIRED
, 
iIdxCur
);

389 if–
pWInfo
==0 ) 
upd©e_˛ónup
;

390 
okO√Pass
 = 
	`sqlôe3WhîeOkO√Pass
(
pWInfo
, 
aiCurO√Pass
);

391 
i
=0; i<
nPk
; i++){

392 
	`as£π
–
pPk
->
aiCﬁumn
[
i
]>=0 );

393 
	`sqlôe3Ex¥CodeGëCﬁumnOfTabÀ
(
v
, 
pTab
, 
iD©aCur
, 
pPk
->
aiCﬁumn
[
i
],

394 
iPk
+
i
);

396 if–
okO√Pass
 ){

397 
	`sqlôe3VdbeCh™geToNo›
(
v
, 
addrO≥n
);

398 
nKey
 = 
nPk
;

399 
ªgKey
 = 
iPk
;

401 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_MakeRec‹d
, 
iPk
, 
nPk
, 
ªgKey
,

402 
	`sqlôe3IndexAfföôySå
(
db
, 
pPk
), 
nPk
);

403 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_IdxIn£π
, 
iEph
, 
ªgKey
, 
iPk
, 
nPk
);

405 
	`sqlôe3WhîeEnd
(
pWInfo
);

410 if–(
db
->
Êags
 & 
SQLITE_Cou¡Rows
Ë&& !
pP¨£
->
pTriggîTab
 ){

411 
ªgRowCou¡
 = ++
pP¨£
->
nMem
;

412 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 0, 
ªgRowCou¡
);

415 
œbñBªak
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

416 if–!
isVõw
 ){

423 if–
⁄Eº‹
==
OE_Rïœ˚
 ){

424 
	`mem£t
(
aToO≥n
, 1, 
nIdx
+1);

426 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
){

427 if–
pIdx
->
⁄Eº‹
==
OE_Rïœ˚
 ){

428 
	`mem£t
(
aToO≥n
, 1, 
nIdx
+1);

433 if–
okO√Pass
 ){

434 if–
aiCurO√Pass
[0]>=0 ) 
aToO≥n
[aiCurO√Pass[0]-
iBa£Cur
] = 0;

435 if–
aiCurO√Pass
[1]>=0 ) 
aToO≥n
[aiCurO√Pass[1]-
iBa£Cur
] = 0;

437 
	`sqlôe3O≥nTabÀAndIndi˚s
(
pP¨£
, 
pTab
, 
OP_O≥nWrôe
, 0, 
iBa£Cur
, 
aToO≥n
,

442 if–
okO√Pass
 ){

443 if–
aToO≥n
[
iD©aCur
-
iBa£Cur
] && !
isVõw
 ){

444 
	`as£π
–
pPk
 );

445 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_NŸFound
, 
iD©aCur
, 
œbñBªak
, 
ªgKey
, 
nKey
);

446 
	`VdbeCovîageNevîTakí
(
v
);

448 
œbñC⁄töue
 = 
œbñBªak
;

449 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IsNuŒ
, 
pPk
 ? 
ªgKey
 : 
ªgOldRowid
, 
œbñBªak
);

450 
	`VdbeCovîageIf
(
v
, 
pPk
==0);

451 
	`VdbeCovîageIf
(
v
, 
pPk
!=0);

452 }if–
pPk
 ){

453 
œbñC⁄töue
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

454 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rewöd
, 
iEph
, 
œbñBªak
); 
	`VdbeCovîage
(v);

455 
addrT›
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_RowD©a
, 
iEph
, 
ªgKey
);

456 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_NŸFound
, 
iD©aCur
, 
œbñC⁄töue
, 
ªgKey
, 0);

457 
	`VdbeCovîage
(
v
);

459 
œbñC⁄töue
 = 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_RowSëRód
, 
ªgRowSë
, 
œbñBªak
,

460 
ªgOldRowid
);

461 
	`VdbeCovîage
(
v
);

462 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_NŸExi°s
, 
iD©aCur
, 
œbñC⁄töue
, 
ªgOldRowid
);

463 
	`VdbeCovîage
(
v
);

470 
	`as£π
–
chngKey
 || 
pTriggî
 || 
hasFK
 || 
ªgOldRowid
==
ªgNewRowid
 );

471 if–
chngRowid
 ){

472 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pRowidEx¥
, 
ªgNewRowid
);

473 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Mu°BeI¡
, 
ªgNewRowid
); 
	`VdbeCovîage
(v);

478 if–
chngPk
 || 
hasFK
 || 
pTriggî
 ){

479 
u32
 
ﬁdmask
 = (
hasFK
 ? 
	`sqlôe3FkOldmask
(
pP¨£
, 
pTab
) : 0);

480 
ﬁdmask
 |
	`sqlôe3TriggîCﬁmask
(
pP¨£
,

481 
pTriggî
, 
pCh™ges
, 0, 
TRIGGER_BEFORE
|
TRIGGER_AFTER
, 
pTab
, 
⁄Eº‹


483 
i
=0; i<
pTab
->
nCﬁ
; i++){

484 if–
ﬁdmask
==0xffffffff

485 || (
i
<32 && (
ﬁdmask
 & 
	`MASKBIT32
(i))!=0)

486 || (
pTab
->
aCﬁ
[
i
].
cﬁFœgs
 & 
COLFLAG_PRIMKEY
)!=0

488 
	`ã°ˇ£
–
ﬁdmask
!=0xfffffff‡&& 
i
==31 );

489 
	`sqlôe3Ex¥CodeGëCﬁumnOfTabÀ
(
v
, 
pTab
, 
iD©aCur
, 
i
, 
ªgOld
+i);

491 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NuŒ
, 0, 
ªgOld
+
i
);

494 if–
chngRowid
==0 && 
pPk
==0 ){

495 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_C›y
, 
ªgOldRowid
, 
ªgNewRowid
);

512 
√wmask
 = 
	`sqlôe3TriggîCﬁmask
(

513 
pP¨£
, 
pTriggî
, 
pCh™ges
, 1, 
TRIGGER_BEFORE
, 
pTab
, 
⁄Eº‹


515 
i
=0; i<
pTab
->
nCﬁ
; i++){

516 if–
i
==
pTab
->
iPKey
 ){

517 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NuŒ
, 0, 
ªgNew
+
i
);

519 
j
 = 
aXRef
[
i
];

520 if–
j
>=0 ){

521 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pCh™ges
->
a
[
j
].
pEx¥
, 
ªgNew
+
i
);

522 }if–0==(
tmask
&
TRIGGER_BEFORE
Ë|| 
i
>31 || (
√wmask
 & 
	`MASKBIT32
(i)) ){

528 
	`ã°ˇ£
–
i
==31 );

529 
	`ã°ˇ£
–
i
==32 );

530 
	`sqlôe3Ex¥CodeGëCﬁumnToReg
(
pP¨£
, 
pTab
, 
i
, 
iD©aCur
, 
ªgNew
+i);

532 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NuŒ
, 0, 
ªgNew
+
i
);

540 if–
tmask
&
TRIGGER_BEFORE
 ){

541 
	`sqlôe3TabÀAfföôy
(
v
, 
pTab
, 
ªgNew
);

542 
	`sqlôe3CodeRowTriggî
(
pP¨£
, 
pTriggî
, 
TK_UPDATE
, 
pCh™ges
,

543 
TRIGGER_BEFORE
, 
pTab
, 
ªgOldRowid
, 
⁄Eº‹
, 
œbñC⁄töue
);

551 if–
pPk
 ){

552 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_NŸFound
, 
iD©aCur
, 
œbñC⁄töue
,
ªgKey
,
nKey
);

553 
	`VdbeCovîage
(
v
);

555 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_NŸExi°s
, 
iD©aCur
, 
œbñC⁄töue
, 
ªgOldRowid
);

556 
	`VdbeCovîage
(
v
);

564 
i
=0; i<
pTab
->
nCﬁ
; i++){

565 if–
aXRef
[
i
]<0 && i!=
pTab
->
iPKey
 ){

566 
	`sqlôe3Ex¥CodeGëCﬁumnOfTabÀ
(
v
, 
pTab
, 
iD©aCur
, 
i
, 
ªgNew
+i);

571 if–!
isVõw
 ){

572 
addr1
 = 0;

573 
bRïœ˚
 = 0;

576 
	`as£π
–
ªgOldRowid
>0 );

577 
	`sqlôe3Gíî©eC⁄°øötChecks
(
pP¨£
, 
pTab
, 
aRegIdx
, 
iD©aCur
, 
iIdxCur
,

578 
ªgNewRowid
, 
ªgOldRowid
, 
chngKey
, 
⁄Eº‹
, 
œbñC⁄töue
, &
bRïœ˚
,

579 
aXRef
);

582 if–
hasFK
 ){

583 
	`sqlôe3FkCheck
(
pP¨£
, 
pTab
, 
ªgOldRowid
, 0, 
aXRef
, 
chngKey
);

587 if–
bRïœ˚
 || 
chngKey
 ){

588 if–
pPk
 ){

589 
addr1
 = 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_NŸFound
, 
iD©aCur
, 0, 
ªgKey
, 
nKey
);

591 
addr1
 = 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_NŸExi°s
, 
iD©aCur
, 0, 
ªgOldRowid
);

593 
	`VdbeCovîageNevîTakí
(
v
);

595 
	`sqlôe3Gíî©eRowIndexDñëe
(
pP¨£
, 
pTab
, 
iD©aCur
, 
iIdxCur
, 
aRegIdx
, -1);

606 
	`as£π
–
ªgNew
==
ªgNewRowid
+1 );

607 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


608 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Dñëe
, 
iD©aCur
,

609 
OPFLAG_ISUPDATE
 | ((
hasFK
 || 
chngKey
 || 
pPk
!=0Ë? 0 : 
OPFLAG_ISNOOP
),

610 
ªgNewRowid


612 if–!
pP¨£
->
√°ed
 ){

613 
	`sqlôe3VdbeAµídP4
(
v
, 
pTab
, 
P4_TABLE
);

616 if–
hasFK
 || 
chngKey
 || 
pPk
!=0 ){

617 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Dñëe
, 
iD©aCur
, 0);

620 if–
bRïœ˚
 || 
chngKey
 ){

621 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr1
);

624 if–
hasFK
 ){

625 
	`sqlôe3FkCheck
(
pP¨£
, 
pTab
, 0, 
ªgNewRowid
, 
aXRef
, 
chngKey
);

629 
	`sqlôe3Com∂ëeIn£πi⁄
(
pP¨£
, 
pTab
, 
iD©aCur
, 
iIdxCur
,

630 
ªgNewRowid
, 
aRegIdx
, 1, 0, 0);

635 if–
hasFK
 ){

636 
	`sqlôe3FkA˘i⁄s
(
pP¨£
, 
pTab
, 
pCh™ges
, 
ªgOldRowid
, 
aXRef
, 
chngKey
);

642 if–(
db
->
Êags
 & 
SQLITE_Cou¡Rows
Ë&& !
pP¨£
->
pTriggîTab
){

643 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_AddImm
, 
ªgRowCou¡
, 1);

646 
	`sqlôe3CodeRowTriggî
(
pP¨£
, 
pTriggî
, 
TK_UPDATE
, 
pCh™ges
,

647 
TRIGGER_AFTER
, 
pTab
, 
ªgOldRowid
, 
⁄Eº‹
, 
œbñC⁄töue
);

652 if–
okO√Pass
 ){

654 }if–
pPk
 ){

655 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
œbñC⁄töue
);

656 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Next
, 
iEph
, 
addrT›
); 
	`VdbeCovîage
(v);

658 
	`sqlôe3VdbeGŸo
(
v
, 
œbñC⁄töue
);

660 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
œbñBªak
);

666 if–
pP¨£
->
√°ed
==0 &&ÖP¨£->
pTriggîTab
==0 ){

667 
	`sqlôe3Autoö¸emítEnd
(
pP¨£
);

675 if–(
db
->
Êags
&
SQLITE_Cou¡Rows
Ë&& !
pP¨£
->
pTriggîTab
 && !pP¨£->
√°ed
 ){

676 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 
ªgRowCou¡
, 1);

677 
	`sqlôe3VdbeSëNumCﬁs
(
v
, 1);

678 
	`sqlôe3VdbeSëCﬁName
(
v
, 0, 
COLNAME_NAME
, "row†upd©ed", 
SQLITE_STATIC
);

681 
upd©e_˛ónup
:

682 
	`sqlôe3AuthC⁄ãxtP›
(&
sC⁄ãxt
);

683 
	`sqlôe3DbFªe
(
db
, 
aXRef
);

684 
	`sqlôe3SrcLi°Dñëe
(
db
, 
pTabLi°
);

685 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pCh™ges
);

686 
	`sqlôe3Ex¥Dñëe
(
db
, 
pWhîe
);

688 
	}
}

692 #ifde‡
isVõw


693 #unde‡
isVõw


695 #ifde‡
pTriggî


696 #unde‡
pTriggî


699 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


721 
	$upd©eVútuÆTabÀ
(

722 
P¨£
 *
pP¨£
,

723 
SrcLi°
 *
pSrc
,

724 
TabÀ
 *
pTab
,

725 
Ex¥Li°
 *
pCh™ges
,

726 
Ex¥
 *
pRowid
,

727 *
aXRef
,

728 
Ex¥
 *
pWhîe
,

729 
⁄Eº‹


731 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

732 
ïhemTab
;

733 
i
;

734 
sqlôe3
 *
db
 = 
pP¨£
->db;

735 c⁄° *
pVTab
 = (c⁄° *)
	`sqlôe3GëVTabÀ
(
db
, 
pTab
);

736 
WhîeInfo
 *
pWInfo
;

737 
nArg
 = 2 + 
pTab
->
nCﬁ
;

738 
ªgArg
;

739 
ªgRec
;

740 
ªgRowid
;

741 
iC§
 = 
pSrc
->
a
[0].
iCurs‹
;

742 
aDummy
[2];

743 
bO√Pass
;

744 
addr
;

749 
	`as£π
–
v
 );

750 
ïhemTab
 = 
pP¨£
->
nTab
++;

751 
addr

	`sqlôe3VdbeAddOp2
(
v
, 
OP_O≥nEphemîÆ
, 
ïhemTab
, 
nArg
);

752 
ªgArg
 = 
pP¨£
->
nMem
 + 1;

753 
pP¨£
->
nMem
 +
nArg
;

754 
ªgRec
 = ++
pP¨£
->
nMem
;

755 
ªgRowid
 = ++
pP¨£
->
nMem
;

758 
pWInfo
 = 
	`sqlôe3WhîeBegö
(
pP¨£
, 
pSrc
, 
pWhîe
, 0,0,
WHERE_ONEPASS_DESIRED
,0);

759 if–
pWInfo
==0 ) ;

762 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rowid
, 
iC§
, 
ªgArg
);

763 if–
pRowid
 ){

764 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pRowid
, 
ªgArg
+1);

766 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rowid
, 
iC§
, 
ªgArg
+1);

768 
i
=0; i<
pTab
->
nCﬁ
; i++){

769 if–
aXRef
[
i
]>=0 ){

770 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pCh™ges
->
a
[
aXRef
[
i
]].
pEx¥
, 
ªgArg
+2+i);

772 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_VCﬁumn
, 
iC§
, 
i
, 
ªgArg
+2+i);

776 
bO√Pass
 = 
	`sqlôe3WhîeOkO√Pass
(
pWInfo
, 
aDummy
);

778 if–
bO√Pass
 ){

782 
	`sqlôe3VdbeCh™geToNo›
(
v
, 
addr
);

783 if–
	`sqlôe3IsT›Àvñ
(
pP¨£
) ){

784 
pP¨£
->
isMu…iWrôe
 = 0;

789 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MakeRec‹d
, 
ªgArg
, 
nArg
, 
ªgRec
);

790 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NewRowid
, 
ïhemTab
, 
ªgRowid
);

791 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_In£π
, 
ïhemTab
, 
ªgRec
, 
ªgRowid
);

795 if–
bO√Pass
==0 ){

797 
	`sqlôe3WhîeEnd
(
pWInfo
);

800 
addr
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Rewöd
, 
ïhemTab
); 
	`VdbeCovîage
(v);

804 
i
=0; i<
nArg
; i++){

805 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
ïhemTab
, 
i
, 
ªgArg
+i);

808 
	`sqlôe3VèbMakeWrôabÀ
(
pP¨£
, 
pTab
);

809 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_VUpd©e
, 0, 
nArg
, 
ªgArg
, 
pVTab
, 
P4_VTAB
);

810 
	`sqlôe3VdbeCh™geP5
(
v
, 
⁄Eº‹
==
OE_DeÁu…
 ? 
OE_Ab‹t
 : onError);

811 
	`sqlôe3MayAb‹t
(
pP¨£
);

815 if–
bO√Pass
==0 ){

816 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Next
, 
ïhemTab
, 
addr
+1); 
	`VdbeCovîage
(v);

817 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr
);

818 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Clo£
, 
ïhemTab
, 0);

820 
	`sqlôe3WhîeEnd
(
pWInfo
);

822 
	}
}

	@utf.c

36 
	~"sqlôeI¡.h
"

37 
	~<as£π.h
>

38 
	~"vdbeI¡.h
"

40 #i‡!
deföed
(
SQLITE_AMALGAMATION
Ë&& 
SQLITE_BYTEORDER
==0

45 c⁄° 
	gsqlôe3⁄e
 = 1;

52 c⁄° 
	gsqlôe3Utf8Tøns1
[] = {

64 
	#WRITE_UTF8
(
zOut
, 
c
) { \

65 if–
c
<0x00080 ){ \

66 *
zOut
++ = (
u8
)(
c
&0xFF); \

68 if–
c
<0x00800 ){ \

69 *
zOut
++ = 0xC0 + (
u8
)((
c
>>6)&0x1F); \

70 *
zOut
++ = 0x80 + (
u8
)(
c
 & 0x3F); \

72 if–
c
<0x10000 ){ \

73 *
zOut
++ = 0xE0 + (
u8
)((
c
>>12)&0x0F); \

74 *
zOut
++ = 0x80 + (
u8
)((
c
>>6) & 0x3F); \

75 *
zOut
++ = 0x80 + (
u8
)(
c
 & 0x3F); \

77 *
zOut
++ = 0xF0 + (
u8
)((
c
>>18) & 0x07); \

78 *
zOut
++ = 0x80 + (
u8
)((
c
>>12) & 0x3F); \

79 *
zOut
++ = 0x80 + (
u8
)((
c
>>6) & 0x3F); \

80 *
zOut
++ = 0x80 + (
u8
)(
c
 & 0x3F); \

82 }

	)

84 
	#WRITE_UTF16LE
(
zOut
, 
c
) { \

85 if–
c
<=0xFFFF ){ \

86 *
zOut
++ = (
u8
)(
c
&0x00FF); \

87 *
zOut
++ = (
u8
)((
c
>>8)&0x00FF); \

89 *
zOut
++ = (
u8
)(((
c
>>10)&0x003F) + (((c-0x10000)>>10)&0x00C0)); \

90 *
zOut
++ = (
u8
)(0x00D8 + (((
c
-0x10000)>>18)&0x03)); \

91 *
zOut
++ = (
u8
)(
c
&0x00FF); \

92 *
zOut
++ = (
u8
)(0x00DC + ((
c
>>8)&0x03)); \

94 }

	)

96 
	#WRITE_UTF16BE
(
zOut
, 
c
) { \

97 if–
c
<=0xFFFF ){ \

98 *
zOut
++ = (
u8
)((
c
>>8)&0x00FF); \

99 *
zOut
++ = (
u8
)(
c
&0x00FF); \

101 *
zOut
++ = (
u8
)(0x00D8 + (((
c
-0x10000)>>18)&0x03)); \

102 *
zOut
++ = (
u8
)(((
c
>>10)&0x003F) + (((c-0x10000)>>10)&0x00C0)); \

103 *
zOut
++ = (
u8
)(0x00DC + ((
c
>>8)&0x03)); \

104 *
zOut
++ = (
u8
)(
c
&0x00FF); \

106 }

	)

108 
	#READ_UTF16LE
(
zIn
, 
TERM
, 
c
){ \

109 
c
 = (*
zIn
++); \

110 
c
 +((*
zIn
++)<<8); \

111 if–
c
>=0xD800 && c<0xE000 && 
TERM
 ){ \

112 
c2
 = (*
zIn
++); \

113 
c2
 +((*
zIn
++)<<8); \

114 
c
 = (
c2
&0x03FF) + ((c&0x003F)<<10) + (((c&0x03C0)+0x0040)<<10); \

116 }

	)

118 
	#READ_UTF16BE
(
zIn
, 
TERM
, 
c
){ \

119 
c
 = ((*
zIn
++)<<8); \

120 
c
 +(*
zIn
++); \

121 if–
c
>=0xD800 && c<0xE000 && 
TERM
 ){ \

122 
c2
 = ((*
zIn
++)<<8); \

123 
c2
 +(*
zIn
++); \

124 
c
 = (
c2
&0x03FF) + ((c&0x003F)<<10) + (((c&0x03C0)+0x0040)<<10); \

126 }

	)

155 
	#READ_UTF8
(
zIn
, 
zTîm
, 
c
) \

156 
c
 = *(
zIn
++); \

157 if–
c
>=0xc0 ){ \

158 
c
 = 
sqlôe3Utf8Tøns1
[c-0xc0]; \

159  
zIn
!=
zTîm
 && (*zIn & 0xc0)==0x80 ){ \

160 
c
 = (c<<6Ë+ (0x3‡& *(
zIn
++)); \

162 if–
c
<0x80 \

163 || (
c
&0xFFFFF800)==0xD800 \

164 || (
c
&0xFFFFFFFE)==0xFFFE ){ c = 0xFFFD; } \

165 }

	)

166 
u32
 
	$sqlôe3Utf8Ród
(

167 c⁄° **
pz


169 
c
;

174 
c
 = *((*
pz
)++);

175 if–
c
>=0xc0 ){

176 
c
 = 
sqlôe3Utf8Tøns1
[c-0xc0];

177  (*(*
pz
) & 0xc0)==0x80 ){

178 
c
 = (c<<6Ë+ (0x3‡& *((*
pz
)++));

180 if–
c
<0x80

181 || (
c
&0xFFFFF800)==0xD800

182 || (
c
&0xFFFFFFFE)==0xFFFE ){ c = 0xFFFD; }

184  
c
;

185 
	}
}

196 #i‚de‡
SQLITE_OMIT_UTF16


202 
SQLITE_NOINLINE
 
	$sqlôe3VdbeMemTøn¶©e
(
Mem
 *
pMem
, 
u8
 
desúedEnc
){

203 
Àn
;

204 *
zOut
;

205 *
zIn
;

206 *
zTîm
;

207 *
z
;

208 
c
;

210 
	`as£π
–
pMem
->
db
==0 || 
	`sqlôe3_muãx_hñd
’Mem->db->
muãx
) );

211 
	`as£π
–
pMem
->
Êags
&
MEM_Så
 );

212 
	`as£π
–
pMem
->
íc
!=
desúedEnc
 );

213 
	`as£π
–
pMem
->
íc
!=0 );

214 
	`as£π
–
pMem
->
n
>=0 );

216 #i‡
	`deföed
(
TRANSLATE_TRACE
Ë&& deföed(
SQLITE_DEBUG
)

218 
zBuf
[100];

219 
	`sqlôe3VdbeMemPªâyPröt
(
pMem
, 
zBuf
);

220 
	`Ârötf
(
°dîr
, "INPUT: %s\n", 
zBuf
);

228 if–
pMem
->
íc
!=
SQLITE_UTF8
 && 
desúedEnc
!=SQLITE_UTF8 ){

229 
u8
 
ãmp
;

230 
rc
;

231 
rc
 = 
	`sqlôe3VdbeMemMakeWrôóbÀ
(
pMem
);

232 if–
rc
!=
SQLITE_OK
 ){

233 
	`as£π
–
rc
==
SQLITE_NOMEM
 );

234  
SQLITE_NOMEM_BKPT
;

236 
zIn
 = (
u8
*)
pMem
->
z
;

237 
zTîm
 = &
zIn
[
pMem
->
n
&~1];

238  
zIn
<
zTîm
 ){

239 
ãmp
 = *
zIn
;

240 *
zIn
 = *(zIn+1);

241 
zIn
++;

242 *
zIn
++ = 
ãmp
;

244 
pMem
->
íc
 = 
desúedEnc
;

245 
å™¶©e_out
;

249 if–
desúedEnc
==
SQLITE_UTF8
 ){

255 
pMem
->
n
 &= ~1;

256 
Àn
 = 
pMem
->
n
 * 2 + 1;

263 
Àn
 = 
pMem
->
n
 * 2 + 2;

272 
zIn
 = (
u8
*)
pMem
->
z
;

273 
zTîm
 = &
zIn
[
pMem
->
n
];

274 
zOut
 = 
	`sqlôe3DbMÆlocRaw
(
pMem
->
db
, 
Àn
);

275 if–!
zOut
 ){

276  
SQLITE_NOMEM_BKPT
;

278 
z
 = 
zOut
;

280 if–
pMem
->
íc
==
SQLITE_UTF8
 ){

281 if–
desúedEnc
==
SQLITE_UTF16LE
 ){

283  
zIn
<
zTîm
 ){

284 
	`READ_UTF8
(
zIn
, 
zTîm
, 
c
);

285 
	`WRITE_UTF16LE
(
z
, 
c
);

288 
	`as£π
–
desúedEnc
==
SQLITE_UTF16BE
 );

290  
zIn
<
zTîm
 ){

291 
	`READ_UTF8
(
zIn
, 
zTîm
, 
c
);

292 
	`WRITE_UTF16BE
(
z
, 
c
);

295 
pMem
->
n
 = ()(
z
 - 
zOut
);

296 *
z
++ = 0;

298 
	`as£π
–
desúedEnc
==
SQLITE_UTF8
 );

299 if–
pMem
->
íc
==
SQLITE_UTF16LE
 ){

301  
zIn
<
zTîm
 ){

302 
	`READ_UTF16LE
(
zIn
, zIn<
zTîm
, 
c
);

303 
	`WRITE_UTF8
(
z
, 
c
);

307  
zIn
<
zTîm
 ){

308 
	`READ_UTF16BE
(
zIn
, zIn<
zTîm
, 
c
);

309 
	`WRITE_UTF8
(
z
, 
c
);

312 
pMem
->
n
 = ()(
z
 - 
zOut
);

314 *
z
 = 0;

315 
	`as£π
–(
pMem
->
n
+(
desúedEnc
==
SQLITE_UTF8
?1:2))<=
Àn
 );

317 
c
 = 
pMem
->
Êags
;

318 
	`sqlôe3VdbeMemRñó£
(
pMem
);

319 
pMem
->
Êags
 = 
MEM_Så
|
MEM_Tîm
|(
c
&(
MEM_AffMask
|
MEM_Subty≥
));

320 
pMem
->
íc
 = 
desúedEnc
;

321 
pMem
->
z
 = (*)
zOut
;

322 
pMem
->
zMÆloc
 =ÖMem->
z
;

323 
pMem
->
szMÆloc
 = 
	`sqlôe3DbMÆlocSize
’Mem->
db
,ÖMem->
z
);

325 
å™¶©e_out
:

326 #i‡
	`deföed
(
TRANSLATE_TRACE
Ë&& deföed(
SQLITE_DEBUG
)

328 
zBuf
[100];

329 
	`sqlôe3VdbeMemPªâyPröt
(
pMem
, 
zBuf
);

330 
	`Ârötf
(
°dîr
, "OUTPUT: %s\n", 
zBuf
);

333  
SQLITE_OK
;

334 
	}
}

345 
	$sqlôe3VdbeMemH™dÀBom
(
Mem
 *
pMem
){

346 
rc
 = 
SQLITE_OK
;

347 
u8
 
bom
 = 0;

349 
	`as£π
–
pMem
->
n
>=0 );

350 if–
pMem
->
n
>1 ){

351 
u8
 
b1
 = *(u8 *)
pMem
->
z
;

352 
u8
 
b2
 = *(((u8 *)
pMem
->
z
) + 1);

353 if–
b1
==0xFE && 
b2
==0xFF ){

354 
bom
 = 
SQLITE_UTF16BE
;

356 if–
b1
==0xFF && 
b2
==0xFE ){

357 
bom
 = 
SQLITE_UTF16LE
;

361 if–
bom
 ){

362 
rc
 = 
	`sqlôe3VdbeMemMakeWrôóbÀ
(
pMem
);

363 if–
rc
==
SQLITE_OK
 ){

364 
pMem
->
n
 -= 2;

365 
	`memmove
(
pMem
->
z
, &pMem->z[2],ÖMem->
n
);

366 
pMem
->
z
[pMem->
n
] = '\0';

367 
pMem
->
z
[pMem->
n
+1] = '\0';

368 
pMem
->
Êags
 |
MEM_Tîm
;

369 
pMem
->
íc
 = 
bom
;

372  
rc
;

373 
	}
}

383 
	$sqlôe3Utf8Ch¨Lí
(c⁄° *
zIn
, 
nByã
){

384 
r
 = 0;

385 c⁄° 
u8
 *
z
 = (c⁄° u8*)
zIn
;

386 c⁄° 
u8
 *
zTîm
;

387 if–
nByã
>=0 ){

388 
zTîm
 = &
z
[
nByã
];

390 
zTîm
 = (c⁄° 
u8
*)(-1);

392 
	`as£π
–
z
<=
zTîm
 );

393  *
z
!=0 && z<
zTîm
 ){

394 
	`SQLITE_SKIP_UTF8
(
z
);

395 
r
++;

397  
r
;

398 
	}
}

403 #i‡
deföed
(
SQLITE_TEST
Ë&& deföed(
SQLITE_DEBUG
)

413 
	$sqlôe3Utf8To8
(*
zIn
){

414 *
zOut
 = 
zIn
;

415 *
zSèπ
 = 
zIn
;

416 
u32
 
c
;

418  
zIn
[0] && 
zOut
<=zIn ){

419 
c
 = 
	`sqlôe3Utf8Ród
((c⁄° 
u8
**)&
zIn
);

420 if–
c
!=0xfffd ){

421 
	`WRITE_UTF8
(
zOut
, 
c
);

424 *
zOut
 = 0;

425  ()(
zOut
 - 
zSèπ
);

426 
	}
}

429 #i‚de‡
SQLITE_OMIT_UTF16


437 *
	$sqlôe3Utf16to8
(
sqlôe3
 *
db
, c⁄° *
z
, 
nByã
, 
u8
 
íc
){

438 
Mem
 
m
;

439 
	`mem£t
(&
m
, 0, (m));

440 
m
.
db
 = db;

441 
	`sqlôe3VdbeMemSëSå
(&
m
, 
z
, 
nByã
, 
íc
, 
SQLITE_STATIC
);

442 
	`sqlôe3VdbeCh™geEncodög
(&
m
, 
SQLITE_UTF8
);

443 if–
db
->
mÆlocFaûed
 ){

444 
	`sqlôe3VdbeMemRñó£
(&
m
);

445 
m
.
z
 = 0;

447 
	`as£π
–(
m
.
Êags
 & 
MEM_Tîm
)!=0 || 
db
->
mÆlocFaûed
 );

448 
	`as£π
–(
m
.
Êags
 & 
MEM_Så
)!=0 || 
db
->
mÆlocFaûed
 );

449 
	`as£π
–
m
.
z
 || 
db
->
mÆlocFaûed
 );

450  
m
.
z
;

451 
	}
}

458 
	$sqlôe3Utf16ByãLí
(c⁄° *
zIn
, 
nCh¨
){

459 
c
;

460 c⁄° *
z
 = 
zIn
;

461 
n
 = 0;

463 if–
SQLITE_UTF16NATIVE
==
SQLITE_UTF16BE
 ){

464  
n
<
nCh¨
 ){

465 
	`READ_UTF16BE
(
z
, 1, 
c
);

466 
n
++;

469  
n
<
nCh¨
 ){

470 
	`READ_UTF16LE
(
z
, 1, 
c
);

471 
n
++;

474  ()(
z
-(c⁄° *)
zIn
);

475 
	}
}

477 #i‡
deföed
(
SQLITE_TEST
)

483 
	$sqlôe3UtfSñfTe°
(){

484 
i
, 
t
;

485 
zBuf
[20];

486 *
z
;

487 
n
;

488 
c
;

490 
i
=0; i<0x00110000; i++){

491 
z
 = 
zBuf
;

492 
	`WRITE_UTF8
(
z
, 
i
);

493 
n
 = ()(
z
-
zBuf
);

494 
	`as£π
–
n
>0 &&Ç<=4 );

495 
z
[0] = 0;

496 
z
 = 
zBuf
;

497 
c
 = 
	`sqlôe3Utf8Ród
((c⁄° 
u8
**)&
z
);

498 
t
 = 
i
;

499 if–
i
>=0xD800 && i<=0xDFFF ) 
t
 = 0xFFFD;

500 if–(
i
&0xFFFFFFFE)==0xFFFE ) 
t
 = 0xFFFD;

501 
	`as£π
–
c
==
t
 );

502 
	`as£π
–(
z
-
zBuf
)==
n
 );

504 
i
=0; i<0x00110000; i++){

505 if–
i
>=0xD800 && i<0xE000 ) ;

506 
z
 = 
zBuf
;

507 
	`WRITE_UTF16LE
(
z
, 
i
);

508 
n
 = ()(
z
-
zBuf
);

509 
	`as£π
–
n
>0 &&Ç<=4 );

510 
z
[0] = 0;

511 
z
 = 
zBuf
;

512 
	`READ_UTF16LE
(
z
, 1, 
c
);

513 
	`as£π
–
c
==
i
 );

514 
	`as£π
–(
z
-
zBuf
)==
n
 );

516 
i
=0; i<0x00110000; i++){

517 if–
i
>=0xD800 && i<0xE000 ) ;

518 
z
 = 
zBuf
;

519 
	`WRITE_UTF16BE
(
z
, 
i
);

520 
n
 = ()(
z
-
zBuf
);

521 
	`as£π
–
n
>0 &&Ç<=4 );

522 
z
[0] = 0;

523 
z
 = 
zBuf
;

524 
	`READ_UTF16BE
(
z
, 1, 
c
);

525 
	`as£π
–
c
==
i
 );

526 
	`as£π
–(
z
-
zBuf
)==
n
 );

528 
	}
}

	@util.c

18 
	~"sqlôeI¡.h
"

19 
	~<°d¨g.h
>

20 #i‡
HAVE_ISNAN
 || 
SQLITE_HAVE_ISNAN


21 
	~<m©h.h
>

27 #ifde‡
SQLITE_COVERAGE_TEST


28 
	$sqlôe3Covîage
(
x
){

29 
dummy
 = 0;

30 
dummy
 +()
x
;

31 
	}
}

45 #i‚de‡
SQLITE_UNTESTABLE


46 
	$sqlôe3Fau…Sim
(
iTe°
){

47 (*
xCÆlback
)(Ë
sqlôe3GlobÆC⁄fig
.
xTe°CÆlback
;

48  
xCÆlback
 ? 
	`xCÆlback
(
iTe°
Ë: 
SQLITE_OK
;

49 
	}
}

52 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


59 
	$sqlôe3IsNaN
(
x
){

60 
rc
;

61 #i‡!
SQLITE_HAVE_ISNAN
 && !
HAVE_ISNAN


85 #ifde‡
__FAST_MATH__


86 #îr‹ 
SQLôe
 
wûl
 
nŸ
 
w‹k
 
c‹ª˘ly
 
wôh
 
the
 -
fÁ°
-
m©h
 
›ti⁄
 
of
 
GCC
.

88 vﬁ©ûê
y
 = 
x
;

89 vﬁ©ûê
z
 = 
y
;

90 
rc
 = (
y
!=
z
);

92 
rc
 = 
	`i¢™
(
x
);

94 
	`ã°ˇ£
–
rc
 );

95  
rc
;

96 
	}
}

107 
	$sqlôe3SåÀn30
(c⁄° *
z
){

108 if–
z
==0 )  0;

109  0x3ffffff‡& ()
	`°æí
(
z
);

110 
	}
}

119 *
	$sqlôe3CﬁumnTy≥
(
Cﬁumn
 *
pCﬁ
, *
zDÊt
){

120 if–(
pCﬁ
->
cﬁFœgs
 & 
COLFLAG_HASTYPE
)==0 )  
zDÊt
;

121  
pCﬁ
->
zName
 + 
	`°æí
(pCol->zName) + 1;

122 
	}
}

129 
SQLITE_NOINLINE
 
	$sqlôe3Eº‹Föish
(
sqlôe3
 *
db
, 
îr_code
){

130 if–
db
->
pEº
 ) 
	`sqlôe3VÆueSëNuŒ
(db->pErr);

131 
	`sqlôe3Sy°emEº‹
(
db
, 
îr_code
);

132 
	}
}

139 
	$sqlôe3Eº‹
(
sqlôe3
 *
db
, 
îr_code
){

140 
	`as£π
–
db
!=0 );

141 
db
->
îrCode
 = 
îr_code
;

142 if–
îr_code
 || 
db
->
pEº
 ) 
	`sqlôe3Eº‹Föish
(db,Érr_code);

143 
	}
}

149 
	$sqlôe3Sy°emEº‹
(
sqlôe3
 *
db
, 
rc
){

150 if–
rc
==
SQLITE_IOERR_NOMEM
 ) ;

151 
rc
 &= 0xff;

152 if–
rc
==
SQLITE_CANTOPEN
 ||Ñc==
SQLITE_IOERR
 ){

153 
db
->
iSysEºno
 = 
	`sqlôe3OsGëLa°Eº‹
(db->
pVfs
);

155 
	}
}

178 
	$sqlôe3Eº‹WôhMsg
(
sqlôe3
 *
db
, 
îr_code
, c⁄° *
zF‹m©
, ...){

179 
	`as£π
–
db
!=0 );

180 
db
->
îrCode
 = 
îr_code
;

181 
	`sqlôe3Sy°emEº‹
(
db
, 
îr_code
);

182 if–
zF‹m©
==0 ){

183 
	`sqlôe3Eº‹
(
db
, 
îr_code
);

184 }if–
db
->
pEº
 || (db->pEº = 
	`sqlôe3VÆueNew
(db))!=0 ){

185 *
z
;

186 
va_li°
 
≠
;

187 
	`va_°¨t
(
≠
, 
zF‹m©
);

188 
z
 = 
	`sqlôe3VMPrötf
(
db
, 
zF‹m©
, 
≠
);

189 
	`va_íd
(
≠
);

190 
	`sqlôe3VÆueSëSå
(
db
->
pEº
, -1, 
z
, 
SQLITE_UTF8
, 
SQLITE_DYNAMIC
);

192 
	}
}

211 
	$sqlôe3Eº‹Msg
(
P¨£
 *
pP¨£
, c⁄° *
zF‹m©
, ...){

212 *
zMsg
;

213 
va_li°
 
≠
;

214 
sqlôe3
 *
db
 = 
pP¨£
->db;

215 
	`va_°¨t
(
≠
, 
zF‹m©
);

216 
zMsg
 = 
	`sqlôe3VMPrötf
(
db
, 
zF‹m©
, 
≠
);

217 
	`va_íd
(
≠
);

218 if–
db
->
suµªssEº
 ){

219 
	`sqlôe3DbFªe
(
db
, 
zMsg
);

221 
pP¨£
->
nEº
++;

222 
	`sqlôe3DbFªe
(
db
, 
pP¨£
->
zEºMsg
);

223 
pP¨£
->
zEºMsg
 = 
zMsg
;

224 
pP¨£
->
rc
 = 
SQLITE_ERROR
;

226 
	}
}

245 
	$sqlôe3DequŸe
(*
z
){

246 
quŸe
;

247 
i
, 
j
;

248 if–
z
==0 ) ;

249 
quŸe
 = 
z
[0];

250 if–!
	`sqlôe3IsquŸe
(
quŸe
) ) ;

251 if–
quŸe
=='[' ) quote = ']';

252 
i
=1, 
j
=0;; i++){

253 
	`as£π
–
z
[
i
] );

254 if–
z
[
i
]==
quŸe
 ){

255 if–
z
[
i
+1]==
quŸe
 ){

256 
z
[
j
++] = 
quŸe
;

257 
i
++;

262 
z
[
j
++] = z[
i
];

265 
z
[
j
] = 0;

266 
	}
}

271 
	$sqlôe3TokíInô
(
Tokí
 *
p
, *
z
){

272 
p
->
z
 = z;

273 
p
->
n
 = 
	`sqlôe3SåÀn30
(
z
);

274 
	}
}

277 
	#UµîToLowî
 
sqlôe3UµîToLowî


	)

289 
	$sqlôe3_°ricmp
(c⁄° *
zLe·
, c⁄° *
zRight
){

290 if–
zLe·
==0 ){

291  
zRight
 ? -1 : 0;

292 }if–
zRight
==0 ){

295  
	`sqlôe3SåICmp
(
zLe·
, 
zRight
);

296 
	}
}

297 
	$sqlôe3SåICmp
(c⁄° *
zLe·
, c⁄° *
zRight
){

298 *
a
, *
b
;

299 
c
;

300 
a
 = (*)
zLe·
;

301 
b
 = (*)
zRight
;

303 
c
 = ()
UµîToLowî
[*
a
] - ()UµîToLowî[*
b
];

304 if–
c
 || *
a
==0 ) ;

305 
a
++;

306 
b
++;

308  
c
;

309 
	}
}

310 
	$sqlôe3_°∫icmp
(c⁄° *
zLe·
, c⁄° *
zRight
, 
N
){

311 *
a
, *
b
;

312 if–
zLe·
==0 ){

313  
zRight
 ? -1 : 0;

314 }if–
zRight
==0 ){

317 
a
 = (*)
zLe·
;

318 
b
 = (*)
zRight
;

319  
N
-- > 0 && *
a
!=0 && 
UµîToLowî
[*a]==UµîToLowî[*
b
]){á++; b++; }

320  
N
<0 ? 0 : 
UµîToLowî
[*
a
] - UµîToLowî[*
b
];

321 
	}
}

345 
	$sqlôe3AtoF
(c⁄° *
z
, *
pResu…
, 
Àngth
, 
u8
 
íc
){

346 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


347 
ö¸
;

348 c⁄° *
zEnd
 = 
z
 + 
Àngth
;

350 
sign
 = 1;

351 
i64
 
s
 = 0;

352 
d
 = 0;

353 
esign
 = 1;

354 
e
 = 0;

355 
eVÆid
 = 1;

356 
ªsu…
;

357 
nDigôs
 = 0;

358 
n⁄Num
 = 0;

360 
	`as£π
–
íc
==
SQLITE_UTF8
 ||Énc==
SQLITE_UTF16LE
 ||Énc==
SQLITE_UTF16BE
 );

361 *
pResu…
 = 0.0;

363 if–
íc
==
SQLITE_UTF8
 ){

364 
ö¸
 = 1;

366 
i
;

367 
ö¸
 = 2;

368 
	`as£π
–
SQLITE_UTF16LE
==2 && 
SQLITE_UTF16BE
==3 );

369 
i
=3-
íc
; i<
Àngth
 && 
z
[i]==0; i+=2){}

370 
n⁄Num
 = 
i
<
Àngth
;

371 
zEnd
 = &
z
[
i
^1];

372 
z
 +(
íc
&1);

376  
z
<
zEnd
 && 
	`sqlôe3Is•a˚
(*zËËz+=
ö¸
;

377 if–
z
>=
zEnd
 )  0;

380 if–*
z
=='-' ){

381 
sign
 = -1;

382 
z
+=
ö¸
;

383 }if–*
z
=='+' ){

384 
z
+=
ö¸
;

388  
z
<
zEnd
 && 
	`sqlôe3Isdigô
(*zË&& 
s
<((
LARGEST_INT64
-9)/10) ){

389 
s
 = s*10 + (*
z
 - '0');

390 
z
+=
ö¸
, 
nDigôs
++;

395  
z
<
zEnd
 && 
	`sqlôe3Isdigô
(*zËËz+=
ö¸
, 
nDigôs
++, 
d
++;

396 if–
z
>=
zEnd
 ) 
do_©of_ˇlc
;

399 if–*
z
=='.' ){

400 
z
+=
ö¸
;

403  
z
<
zEnd
 && 
	`sqlôe3Isdigô
(*z) ){

404 if–
s
<((
LARGEST_INT64
-9)/10) ){

405 
s
 = s*10 + (*
z
 - '0');

406 
d
--;

408 
z
+=
ö¸
, 
nDigôs
++;

411 if–
z
>=
zEnd
 ) 
do_©of_ˇlc
;

414 if–*
z
=='e' || *z=='E' ){

415 
z
+=
ö¸
;

416 
eVÆid
 = 0;

421 if–
z
>=
zEnd
 ) 
do_©of_ˇlc
;

424 if–*
z
=='-' ){

425 
esign
 = -1;

426 
z
+=
ö¸
;

427 }if–*
z
=='+' ){

428 
z
+=
ö¸
;

431  
z
<
zEnd
 && 
	`sqlôe3Isdigô
(*z) ){

432 
e
 =É<10000 ? (e*10 + (*
z
 - '0')) : 10000;

433 
z
+=
ö¸
;

434 
eVÆid
 = 1;

439  
z
<
zEnd
 && 
	`sqlôe3Is•a˚
(*zËËz+=
ö¸
;

441 
do_©of_ˇlc
:

443 
e
 = (e*
esign
Ë+ 
d
;

444 if–
e
<0 ) {

445 
esign
 = -1;

446 
e
 *= -1;

448 
esign
 = 1;

451 if–
s
==0 ) {

453 
ªsu…
 = 
sign
<0 ? -()0 : ()0;

461  
e
>0 ){

462 if–
esign
>0 ){

463 if–
s
>=(
LARGEST_INT64
/10) ) ;

464 
s
 *= 10;

466 if–
s
%10!=0 ) ;

467 
s
 /= 10;

469 
e
--;

473 
s
 = 
sign
<0 ? -s : s;

475 if–
e
==0 ){

476 
ªsu…
 = ()
s
;

478 
LONGDOUBLE_TYPE
 
sˇÀ
 = 1.0;

480 if–
e
>307 ){

481 if–
e
<342 ){

482  
e
%308 ) { 
sˇÀ
 *= 1.0e+1;É -= 1; }

483 if–
esign
<0 ){

484 
ªsu…
 = 
s
 / 
sˇÀ
;

485 
ªsu…
 /= 1.0e+308;

487 
ªsu…
 = 
s
 * 
sˇÀ
;

488 
ªsu…
 *= 1.0e+308;

490 }{ 
	`as£π
–
e
>=342 );

491 if–
esign
<0 ){

492 
ªsu…
 = 0.0*
s
;

494 
ªsu…
 = 1e308*1e308*
s
;

500  
e
%22 ) { 
sˇÀ
 *= 1.0e+1;É -= 1; }

501  
e
>0 ) { 
sˇÀ
 *= 1.0e+22;É -= 22; }

502 if–
esign
<0 ){

503 
ªsu…
 = 
s
 / 
sˇÀ
;

505 
ªsu…
 = 
s
 * 
sˇÀ
;

512 *
pResu…
 = 
ªsu…
;

515  
z
==
zEnd
 && 
nDigôs
>0 && 
eVÆid
 && 
n⁄Num
==0;

517  !
	`sqlôe3Atoi64
(
z
, 
pResu…
, 
Àngth
, 
íc
);

519 
	}
}

535 
	$com∑ª2pow63
(c⁄° *
zNum
, 
ö¸
){

536 
c
 = 0;

537 
i
;

539 c⁄° *
pow63
 = "922337203685477580";

540 
i
=0; 
c
==0 && i<18; i++){

541 
c
 = (
zNum
[
i
*
ö¸
]-
pow63
[i])*10;

543 if–
c
==0 ){

544 
c
 = 
zNum
[18*
ö¸
] - '8';

545 
	`ã°ˇ£
–
c
==(-1) );

546 
	`ã°ˇ£
–
c
==0 );

547 
	`ã°ˇ£
–
c
==(+1) );

549  
c
;

550 
	}
}

571 
	$sqlôe3Atoi64
(c⁄° *
zNum
, 
i64
 *
pNum
, 
Àngth
, 
u8
 
íc
){

572 
ö¸
;

573 
u64
 
u
 = 0;

574 
√g
 = 0;

575 
i
;

576 
c
 = 0;

577 
n⁄Num
 = 0;

578 c⁄° *
zSèπ
;

579 c⁄° *
zEnd
 = 
zNum
 + 
Àngth
;

580 
	`as£π
–
íc
==
SQLITE_UTF8
 ||Énc==
SQLITE_UTF16LE
 ||Énc==
SQLITE_UTF16BE
 );

581 if–
íc
==
SQLITE_UTF8
 ){

582 
ö¸
 = 1;

584 
ö¸
 = 2;

585 
	`as£π
–
SQLITE_UTF16LE
==2 && 
SQLITE_UTF16BE
==3 );

586 
i
=3-
íc
; i<
Àngth
 && 
zNum
[i]==0; i+=2){}

587 
n⁄Num
 = 
i
<
Àngth
;

588 
zEnd
 = &
zNum
[
i
^1];

589 
zNum
 +(
íc
&1);

591  
zNum
<
zEnd
 && 
	`sqlôe3Is•a˚
(*zNumËËzNum+=
ö¸
;

592 if–
zNum
<
zEnd
 ){

593 if–*
zNum
=='-' ){

594 
√g
 = 1;

595 
zNum
+=
ö¸
;

596 }if–*
zNum
=='+' ){

597 
zNum
+=
ö¸
;

600 
zSèπ
 = 
zNum
;

601  
zNum
<
zEnd
 && zNum[0]=='0' ){ zNum+=
ö¸
; }

602 
i
=0; &
zNum
[i]<
zEnd
 && (
c
=zNum[i])>='0' && c<='9'; i+=
ö¸
){

603 
u
 = u*10 + 
c
 - '0';

605 if–
u
>
LARGEST_INT64
 ){

606 *
pNum
 = 
√g
 ? 
SMALLEST_INT64
 : 
LARGEST_INT64
;

607 }if–
√g
 ){

608 *
pNum
 = -(
i64
)
u
;

610 *
pNum
 = (
i64
)
u
;

612 
	`ã°ˇ£
–
i
==18 );

613 
	`ã°ˇ£
–
i
==19 );

614 
	`ã°ˇ£
–
i
==20 );

615 if–&
zNum
[
i
]<
zEnd


616 || (
i
==0 && 
zSèπ
==
zNum
)

617 || 
i
>19*
ö¸


618 || 
n⁄Num


623 }if–
i
<19*
ö¸
 ){

625 
	`as£π
–
u
<=
LARGEST_INT64
 );

629 
c
 = 
	`com∑ª2pow63
(
zNum
, 
ö¸
);

630 if–
c
<0 ){

632 
	`as£π
–
u
<=
LARGEST_INT64
 );

634 }if–
c
>0 ){

640 
	`as£π
–
u
-1==
LARGEST_INT64
 );

641  
√g
 ? 0 : 2;

644 
	}
}

657 
	$sqlôe3DecOrHexToI64
(c⁄° *
z
, 
i64
 *
pOut
){

658 #i‚de‡
SQLITE_OMIT_HEX_INTEGER


659 if–
z
[0]=='0'

660 && (
z
[1]=='x' || z[1]=='X')

662 
u64
 
u
 = 0;

663 
i
, 
k
;

664 
i
=2; 
z
[i]=='0'; i++){}

665 
k
=
i
; 
	`sqlôe3Isxdigô
(
z
[k]); k++){

666 
u
 = u*16 + 
	`sqlôe3HexToI¡
(
z
[
k
]);

668 
	`mem˝y
(
pOut
, &
u
, 8);

669  (
z
[
k
]==0 && k-
i
<=16) ? 0 : 1;

673  
	`sqlôe3Atoi64
(
z
, 
pOut
, 
	`sqlôe3SåÀn30
(z), 
SQLITE_UTF8
);

675 
	}
}

687 
	$sqlôe3GëI¡32
(c⁄° *
zNum
, *
pVÆue
){

688 
sqlôe_öt64
 
v
 = 0;

689 
i
, 
c
;

690 
√g
 = 0;

691 if–
zNum
[0]=='-' ){

692 
√g
 = 1;

693 
zNum
++;

694 }if–
zNum
[0]=='+' ){

695 
zNum
++;

697 #i‚de‡
SQLITE_OMIT_HEX_INTEGER


698 if–
zNum
[0]=='0'

699 && (
zNum
[1]=='x' || zNum[1]=='X')

700 && 
	`sqlôe3Isxdigô
(
zNum
[2])

702 
u32
 
u
 = 0;

703 
zNum
 += 2;

704  
zNum
[0]=='0' ) zNum++;

705 
i
=0; 
	`sqlôe3Isxdigô
(
zNum
[i]) && i<8; i++){

706 
u
 = u*16 + 
	`sqlôe3HexToI¡
(
zNum
[
i
]);

708 if–(
u
&0x80000000)==0 && 
	`sqlôe3Isxdigô
(
zNum
[
i
])==0 ){

709 
	`mem˝y
(
pVÆue
, &
u
, 4);

716  
zNum
[0]=='0' ) zNum++;

717 
i
=0; i<11 && (
c
 = 
zNum
[i] - '0')>=0 && c<=9; i++){

718 
v
 = v*10 + 
c
;

726 
	`ã°ˇ£
–
i
==10 );

727 if–
i
>10 ){

730 
	`ã°ˇ£
–
v
-
√g
==2147483647 );

731 if–
v
-
√g
>2147483647 ){

734 if–
√g
 ){

735 
v
 = -v;

737 *
pVÆue
 = ()
v
;

739 
	}
}

745 
	$sqlôe3Atoi
(c⁄° *
z
){

746 
x
 = 0;

747 if–
z
 ) 
	`sqlôe3GëI¡32
(z, &
x
);

748  
x
;

749 
	}
}

780 
SQLITE_NOINLINE
 
	$putV¨öt64
(*
p
, 
u64
 
v
){

781 
i
, 
j
, 
n
;

782 
u8
 
buf
[10];

783 if–
v
 & (((
u64
)0xff000000)<<32) ){

784 
p
[8] = (
u8
)
v
;

785 
v
 >>= 8;

786 
i
=7; i>=0; i--){

787 
p
[
i
] = (
u8
)((
v
 & 0x7f) | 0x80);

788 
v
 >>= 7;

792 
n
 = 0;

794 
buf
[
n
++] = (
u8
)((
v
 & 0x7f) | 0x80);

795 
v
 >>= 7;

796 } 
v
!=0 );

797 
buf
[0] &= 0x7f;

798 
	`as£π
–
n
<=9 );

799 
i
=0, 
j
=
n
-1; j>=0; j--, i++){

800 
p
[
i
] = 
buf
[
j
];

802  
n
;

803 
	}
}

804 
	$sqlôe3PutV¨öt
(*
p
, 
u64
 
v
){

805 if–
v
<=0x7f ){

806 
p
[0] = 
v
&0x7f;

809 if–
v
<=0x3fff ){

810 
p
[0] = ((
v
>>7)&0x7f)|0x80;

811 
p
[1] = 
v
&0x7f;

814  
	`putV¨öt64
(
p
,
v
);

815 
	}
}

826 
	#SLOT_2_0
 0x001fc07f

	)

827 
	#SLOT_4_2_0
 0xf01fc07f

	)

834 
u8
 
	$sqlôe3GëV¨öt
(c⁄° *
p
, 
u64
 *
v
){

835 
u32
 
a
,
b
,
s
;

837 
a
 = *
p
;

839 i‡(!(
a
&0x80))

841 *
v
 = 
a
;

845 
p
++;

846 
b
 = *
p
;

848 i‡(!(
b
&0x80))

850 
a
 &= 0x7f;

851 
a
 =á<<7;

852 
a
 |
b
;

853 *
v
 = 
a
;

858 
	`as£π
–
SLOT_2_0
 == ((0x7f<<14) | (0x7f)) );

859 
	`as£π
–
SLOT_4_2_0
 == ((0xfU<<28) | (0x7f<<14) | (0x7f)) );

861 
p
++;

862 
a
 =á<<14;

863 
a
 |*
p
;

865 i‡(!(
a
&0x80))

867 
a
 &
SLOT_2_0
;

868 
b
 &= 0x7f;

869 
b
 = b<<7;

870 
a
 |
b
;

871 *
v
 = 
a
;

876 
a
 &
SLOT_2_0
;

877 
p
++;

878 
b
 = b<<14;

879 
b
 |*
p
;

881 i‡(!(
b
&0x80))

883 
b
 &
SLOT_2_0
;

886 
a
 =á<<7;

887 
a
 |
b
;

888 *
v
 = 
a
;

897 
b
 &
SLOT_2_0
;

898 
s
 = 
a
;

901 
p
++;

902 
a
 =á<<14;

903 
a
 |*
p
;

905 i‡(!(
a
&0x80))

911 
b
 = b<<7;

912 
a
 |
b
;

913 
s
 = s>>18;

914 *
v
 = ((
u64
)
s
)<<32 | 
a
;

919 
s
 = s<<7;

920 
s
 |
b
;

923 
p
++;

924 
b
 = b<<14;

925 
b
 |*
p
;

927 i‡(!(
b
&0x80))

931 
a
 &
SLOT_2_0
;

932 
a
 =á<<7;

933 
a
 |
b
;

934 
s
 = s>>18;

935 *
v
 = ((
u64
)
s
)<<32 | 
a
;

939 
p
++;

940 
a
 =á<<14;

941 
a
 |*
p
;

943 i‡(!(
a
&0x80))

945 
a
 &
SLOT_4_2_0
;

946 
b
 &
SLOT_2_0
;

947 
b
 = b<<7;

948 
a
 |
b
;

949 
s
 = s>>11;

950 *
v
 = ((
u64
)
s
)<<32 | 
a
;

955 
a
 &
SLOT_2_0
;

956 
p
++;

957 
b
 = b<<14;

958 
b
 |*
p
;

960 i‡(!(
b
&0x80))

962 
b
 &
SLOT_4_2_0
;

965 
a
 =á<<7;

966 
a
 |
b
;

967 
s
 = s>>4;

968 *
v
 = ((
u64
)
s
)<<32 | 
a
;

972 
p
++;

973 
a
 =á<<15;

974 
a
 |*
p
;

979 
b
 &
SLOT_2_0
;

980 
b
 = b<<8;

981 
a
 |
b
;

983 
s
 = s<<4;

984 
b
 = 
p
[-4];

985 
b
 &= 0x7f;

986 
b
 = b>>3;

987 
s
 |
b
;

989 *
v
 = ((
u64
)
s
)<<32 | 
a
;

992 
	}
}

1005 
u8
 
	$sqlôe3GëV¨öt32
(c⁄° *
p
, 
u32
 *
v
){

1006 
u32
 
a
,
b
;

1010 
a
 = *
p
;

1012 #i‚de‡
gëV¨öt32


1013 i‡(!(
a
&0x80))

1016 *
v
 = 
a
;

1022 
p
++;

1023 
b
 = *
p
;

1025 i‡(!(
b
&0x80))

1028 
a
 &= 0x7f;

1029 
a
 =á<<7;

1030 *
v
 = 
a
 | 
b
;

1035 
p
++;

1036 
a
 =á<<14;

1037 
a
 |*
p
;

1039 i‡(!(
a
&0x80))

1042 
a
 &= (0x7f<<14)|(0x7f);

1043 
b
 &= 0x7f;

1044 
b
 = b<<7;

1045 *
v
 = 
a
 | 
b
;

1060 
u64
 
v64
;

1061 
u8
 
n
;

1063 
p
 -= 2;

1064 
n
 = 
	`sqlôe3GëV¨öt
(
p
, &
v64
);

1065 
	`as£π
–
n
>3 &&Ç<=9 );

1066 if–(
v64
 & 
SQLITE_MAX_U32
)!=v64 ){

1067 *
v
 = 0xffffffff;

1069 *
v
 = (
u32
)
v64
;

1071  
n
;

1079 
p
++;

1080 
b
 = b<<14;

1081 
b
 |*
p
;

1083 i‡(!(
b
&0x80))

1086 
b
 &= (0x7f<<14)|(0x7f);

1087 
a
 &= (0x7f<<14)|(0x7f);

1088 
a
 =á<<7;

1089 *
v
 = 
a
 | 
b
;

1093 
p
++;

1094 
a
 =á<<14;

1095 
a
 |*
p
;

1097 i‡(!(
a
&0x80))

1100 
a
 &
SLOT_4_2_0
;

1101 
b
 &
SLOT_4_2_0
;

1102 
b
 = b<<7;

1103 *
v
 = 
a
 | 
b
;

1112 
u64
 
v64
;

1113 
u8
 
n
;

1115 
p
 -= 4;

1116 
n
 = 
	`sqlôe3GëV¨öt
(
p
, &
v64
);

1117 
	`as£π
–
n
>5 &&Ç<=9 );

1118 *
v
 = (
u32
)
v64
;

1119  
n
;

1122 
	}
}

1128 
	$sqlôe3V¨ötLí
(
u64
 
v
){

1129 
i
;

1130 
i
=1; (
v
 >>7)!=0; i++){ 
	`as£π
( i<10 ); }

1131  
i
;

1132 
	}
}

1138 
u32
 
	$sqlôe3Gë4byã
(c⁄° 
u8
 *
p
){

1139 #i‡
SQLITE_BYTEORDER
==4321

1140 
u32
 
x
;

1141 
	`mem˝y
(&
x
,
p
,4);

1142  
x
;

1143 #ñi‡
SQLITE_BYTEORDER
==1234 && !
	`deföed
(
SQLITE_DISABLE_INTRINSIC
) \

1144 && 
	`deföed
(
__GNUC__
Ë&& 
GCC_VERSION
>=4003000

1145 
u32
 
x
;

1146 
	`mem˝y
(&
x
,
p
,4);

1147  
	`__buûtö_bsw≠32
(
x
);

1148 #ñi‡
SQLITE_BYTEORDER
==1234 && !
	`deföed
(
SQLITE_DISABLE_INTRINSIC
) \

1149 && 
	`deföed
(
_MSC_VER
) && _MSC_VER>=1300

1150 
u32
 
x
;

1151 
	`mem˝y
(&
x
,
p
,4);

1152  
	`_byãsw≠_ul⁄g
(
x
);

1154 
	`ã°ˇ£
–
p
[0]&0x80 );

1155  (()
p
[0]<<24) | (p[1]<<16) | (p[2]<<8) |Ö[3];

1157 
	}
}

1158 
	$sqlôe3Put4byã
(*
p
, 
u32
 
v
){

1159 #i‡
SQLITE_BYTEORDER
==4321

1160 
	`mem˝y
(
p
,&
v
,4);

1161 #ñi‡
SQLITE_BYTEORDER
==1234 && !
	`deföed
(
SQLITE_DISABLE_INTRINSIC
) \

1162 && 
	`deföed
(
__GNUC__
Ë&& 
GCC_VERSION
>=4003000

1163 
u32
 
x
 = 
	`__buûtö_bsw≠32
(
v
);

1164 
	`mem˝y
(
p
,&
x
,4);

1165 #ñi‡
SQLITE_BYTEORDER
==1234 && !
	`deföed
(
SQLITE_DISABLE_INTRINSIC
) \

1166 && 
	`deföed
(
_MSC_VER
) && _MSC_VER>=1300

1167 
u32
 
x
 = 
	`_byãsw≠_ul⁄g
(
v
);

1168 
	`mem˝y
(
p
,&
x
,4);

1170 
p
[0] = (
u8
)(
v
>>24);

1171 
p
[1] = (
u8
)(
v
>>16);

1172 
p
[2] = (
u8
)(
v
>>8);

1173 
p
[3] = (
u8
)
v
;

1175 
	}
}

1184 
u8
 
	$sqlôe3HexToI¡
(
h
){

1185 
	`as£π
–(
h
>='0' && h<='9') || (h>='a' && h<='f') || (h>='A' && h<='F') );

1186 #ifde‡
SQLITE_ASCII


1187 
h
 += 9*(1&(h>>6));

1189 #ifde‡
SQLITE_EBCDIC


1190 
h
 += 9*(1&~(h>>4));

1192  (
u8
)(
h
 & 0xf);

1193 
	}
}

1195 #i‡!
deföed
(
SQLITE_OMIT_BLOB_LITERAL
Ë|| deföed(
SQLITE_HAS_CODEC
)

1202 *
	$sqlôe3HexToBlob
(
sqlôe3
 *
db
, c⁄° *
z
, 
n
){

1203 *
zBlob
;

1204 
i
;

1206 
zBlob
 = (*)
	`sqlôe3DbMÆlocRawNN
(
db
, 
n
/2 + 1);

1207 
n
--;

1208 if–
zBlob
 ){

1209 
i
=0; i<
n
; i+=2){

1210 
zBlob
[
i
/2] = (
	`sqlôe3HexToI¡
(
z
[i])<<4) | sqlite3HexToInt(z[i+1]);

1212 
zBlob
[
i
/2] = 0;

1214  
zBlob
;

1215 
	}
}

1223 
	$logBadC⁄√˘i⁄
(c⁄° *
zTy≥
){

1224 
	`sqlôe3_log
(
SQLITE_MISUSE
,

1226 
zTy≥


1228 
	}
}

1244 
	$sqlôe3Sa„tyCheckOk
(
sqlôe3
 *
db
){

1245 
u32
 
magic
;

1246 if–
db
==0 ){

1247 
	`logBadC⁄√˘i⁄
("NULL");

1250 
magic
 = 
db
->magic;

1251 if–
magic
!=
SQLITE_MAGIC_OPEN
 ){

1252 if–
	`sqlôe3Sa„tyCheckSickOrOk
(
db
) ){

1253 
	`ã°ˇ£
–
sqlôe3GlobÆC⁄fig
.
xLog
!=0 );

1254 
	`logBadC⁄√˘i⁄
("unopened");

1260 
	}
}

1261 
	$sqlôe3Sa„tyCheckSickOrOk
(
sqlôe3
 *
db
){

1262 
u32
 
magic
;

1263 
magic
 = 
db
->magic;

1264 if–
magic
!=
SQLITE_MAGIC_SICK
 &&

1265 
magic
!=
SQLITE_MAGIC_OPEN
 &&

1266 
magic
!=
SQLITE_MAGIC_BUSY
 ){

1267 
	`ã°ˇ£
–
sqlôe3GlobÆC⁄fig
.
xLog
!=0 );

1268 
	`logBadC⁄√˘i⁄
("invalid");

1273 
	}
}

1281 
	$sqlôe3AddI¡64
(
i64
 *
pA
, i64 
iB
){

1282 
i64
 
iA
 = *
pA
;

1283 
	`ã°ˇ£
–
iA
==0 );Åestcase( iA==1 );

1284 
	`ã°ˇ£
–
iB
==-1 );Åestcase( iB==0 );

1285 if–
iB
>=0 ){

1286 
	`ã°ˇ£
–
iA
>0 && 
LARGEST_INT64
 - iA =
iB
 );

1287 
	`ã°ˇ£
–
iA
>0 && 
LARGEST_INT64
 - iA =
iB
 - 1 );

1288 if–
iA
>0 && 
LARGEST_INT64
 - iA < 
iB
 )  1;

1290 
	`ã°ˇ£
–
iA
<0 && -(iA + 
LARGEST_INT64
Ë=
iB
 + 1 );

1291 
	`ã°ˇ£
–
iA
<0 && -(iA + 
LARGEST_INT64
Ë=
iB
 + 2 );

1292 if–
iA
<0 && -(iA + 
LARGEST_INT64
Ë> 
iB
 + 1 )  1;

1294 *
pA
 +
iB
;

1296 
	}
}

1297 
	$sqlôe3SubI¡64
(
i64
 *
pA
, i64 
iB
){

1298 
	`ã°ˇ£
–
iB
==
SMALLEST_INT64
+1 );

1299 if–
iB
==
SMALLEST_INT64
 ){

1300 
	`ã°ˇ£
–(*
pA
)==(-1) );Åestcase( (*pA)==0 );

1301 if–(*
pA
)>=0 )  1;

1302 *
pA
 -
iB
;

1305  
	`sqlôe3AddI¡64
(
pA
, -
iB
);

1307 
	}
}

1308 
	$sqlôe3MulI¡64
(
i64
 *
pA
, i64 
iB
){

1309 
i64
 
iA
 = *
pA
;

1310 if–
iB
>0 ){

1311 if–
iA
>
LARGEST_INT64
/
iB
 )  1;

1312 if–
iA
<
SMALLEST_INT64
/
iB
 )  1;

1313 }if–
iB
<0 ){

1314 if–
iA
>0 ){

1315 if–
iB
<
SMALLEST_INT64
/
iA
 )  1;

1316 }if–
iA
<0 ){

1317 if–
iB
==
SMALLEST_INT64
 )  1;

1318 if–
iA
==
SMALLEST_INT64
 )  1;

1319 if–-
iA
>
LARGEST_INT64
/-
iB
 )  1;

1322 *
pA
 = 
iA
*
iB
;

1324 
	}
}

1330 
	$sqlôe3AbsI¡32
(
x
){

1331 if–
x
>=0 )  x;

1332 if–
x
==()0x80000000 )  0x7fffffff;

1333  -
x
;

1334 
	}
}

1336 #ifde‡
SQLITE_ENABLE_8_3_NAMES


1354 
	$sqlôe3FûeSuffix3
(c⁄° *
zBa£Fûíame
, *
z
){

1355 #i‡
SQLITE_ENABLE_8_3_NAMES
<2

1356 if–
	`sqlôe3_uri_boﬁón
(
zBa£Fûíame
, "8_3_names", 0) )

1359 
i
, 
sz
;

1360 
sz
 = 
	`sqlôe3SåÀn30
(
z
);

1361 
i
=
sz
-1; i>0 && 
z
[i]!='/' && z[i]!='.'; i--){}

1362 if–
z
[
i
]=='.' && 
	`ALWAYS
(
sz
>i+4ËË
	`memmove
(&z[i+1], &z[sz-3], 4);

1364 
	}
}

1373 
LogE°
 
	$sqlôe3LogE°Add
(
LogE°
 
a
, LogE° 
b
){

1374 c⁄° 
x
[] = {

1385 if–
a
>=
b
 ){

1386 if–
a
>
b
+49 ) á;

1387 if–
a
>
b
+31 ) á+1;

1388  
a
+
x
[a-
b
];

1390 if–
b
>
a
+49 )  b;

1391 if–
b
>
a
+31 )  b+1;

1392  
b
+
x
[b-
a
];

1394 
	}
}

1400 
LogE°
 
	$sqlôe3LogE°
(
u64
 
x
){

1401 
LogE°
 
a
[] = { 0, 2, 3, 5, 6, 7, 8, 9 };

1402 
LogE°
 
y
 = 40;

1403 if–
x
<8 ){

1404 if–
x
<2 )  0;

1405  
x
<8 ){ 
y
 -= 10; x <<= 1; }

1407  
x
>255 ){ 
y
 += 40; x >>= 4; }

1408  
x
>15 ){ 
y
 += 10; x >>= 1; }

1410  
a
[
x
&7] + 
y
 - 10;

1411 
	}
}

1413 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


1418 
LogE°
 
	$sqlôe3LogE°FromDoubÀ
(
x
){

1419 
u64
 
a
;

1420 
LogE°
 
e
;

1421 
	`as£π
–(
x
)==8 && (
a
)==8 );

1422 if–
x
<=1 )  0;

1423 if–
x
<=2000000000 )  
	`sqlôe3LogE°
((
u64
)x);

1424 
	`mem˝y
(&
a
, &
x
, 8);

1425 
e
 = (
a
>>52) - 1022;

1426  
e
*10;

1427 
	}
}

1430 #i‡
deföed
(
SQLITE_ENABLE_STMT_SCANSTATUS
) || \

1431 
deföed
(
SQLITE_ENABLE_STAT3_OR_STAT4
) || \

1432 
	$deföed
(
SQLITE_EXPLAIN_ESTIMATED_ROWS
)

1439 
u64
 
	$sqlôe3LogE°ToI¡
(
LogE°
 
x
){

1440 
u64
 
n
;

1441 
n
 = 
x
%10;

1442 
x
 /= 10;

1443 if–
n
>=5 )Ç -= 2;

1444 if–
n
>=1 )Ç -= 1;

1445 #i‡
	`deföed
(
SQLITE_ENABLE_STMT_SCANSTATUS
) || \

1446 
	`deföed
(
SQLITE_EXPLAIN_ESTIMATED_ROWS
)

1447 if–
x
>60 )  (
u64
)
LARGEST_INT64
;

1451 
	`as£π
–
x
<=60 );

1453  
x
>=3 ? (
n
+8)<<(x-3) : (n+8)>>(3-x);

1454 
	}
}

1493 
VLi°
 *
	$sqlôe3VLi°Add
(

1494 
sqlôe3
 *
db
,

1495 
VLi°
 *
pIn
,

1496 c⁄° *
zName
,

1497 
nName
,

1498 
iVÆ


1500 
nI¡
;

1501 *
z
;

1502 
i
;

1504 
nI¡
 = 
nName
/4 + 3;

1505 
	`as£π
–
pIn
==0 ||ÖIn[0]>=3 );

1506 if–
pIn
==0 ||ÖIn[1]+
nI¡
 >ÖIn[0] ){

1508 
nAŒoc
 = (
pIn
 ?ÖIn[0]*2 : 10Ë+ 
nI¡
;

1509 
VLi°
 *
pOut
 = 
	`sqlôe3DbRóŒoc
(
db
, 
pIn
, 
nAŒoc
*());

1510 if–
pOut
==0 )  
pIn
;

1511 if–
pIn
==0 ) 
pOut
[1] = 2;

1512 
pIn
 = 
pOut
;

1513 
pIn
[0] = 
nAŒoc
;

1515 
i
 = 
pIn
[1];

1516 
pIn
[
i
] = 
iVÆ
;

1517 
pIn
[
i
+1] = 
nI¡
;

1518 
z
 = (*)&
pIn
[
i
+2];

1519 
pIn
[1] = 
i
+
nI¡
;

1520 
	`as£π
–
pIn
[1]<=pIn[0] );

1521 
	`mem˝y
(
z
, 
zName
, 
nName
);

1522 
z
[
nName
] = 0;

1523  
pIn
;

1524 
	}
}

1531 c⁄° *
	$sqlôe3VLi°NumToName
(
VLi°
 *
pIn
, 
iVÆ
){

1532 
i
, 
mx
;

1533 if–
pIn
==0 )  0;

1534 
mx
 = 
pIn
[1];

1535 
i
 = 2;

1537 if–
pIn
[
i
]==
iVÆ
 )  (*)&pIn[i+2];

1538 
i
 +
pIn
[i+1];

1539 } 
i
<
mx
 );

1541 
	}
}

1547 
	$sqlôe3VLi°NameToNum
(
VLi°
 *
pIn
, c⁄° *
zName
, 
nName
){

1548 
i
, 
mx
;

1549 if–
pIn
==0 )  0;

1550 
mx
 = 
pIn
[1];

1551 
i
 = 2;

1553 c⁄° *
z
 = (c⁄° *)&
pIn
[
i
+2];

1554 if–
	`°∫cmp
(
z
,
zName
,
nName
)==0 && z[nName]==0 )  
pIn
[
i
];

1555 
i
 +
pIn
[i+1];

1556 } 
i
<
mx
 );

1558 
	}
}

	@vacuum.c

17 
	~"sqlôeI¡.h
"

18 
	~"vdbeI¡.h
"

20 #i‡!
deföed
(
SQLITE_OMIT_VACUUM
Ë&& !deföed(
SQLITE_OMIT_ATTACH
)

32 
	$execSql
(
sqlôe3
 *
db
, **
pzEºMsg
, c⁄° *
zSql
){

33 
sqlôe3_°mt
 *
pStmt
;

34 
rc
;

37 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
db
, 
zSql
, -1, &
pStmt
, 0);

38 if–
rc
!=
SQLITE_OK
 ) Ñc;

39  
SQLITE_ROW
==(
rc
 = 
	`sqlôe3_°ï
(
pStmt
)) ){

40 c⁄° *
zSubSql
 = (c⁄° *)
	`sqlôe3_cﬁumn_ãxt
(
pStmt
,0);

41 
	`as£π
–
	`sqlôe3_°∫icmp
(
zSql
,"SELECT",6)==0 );

42 if–
zSubSql
 ){

43 
	`as£π
–
zSubSql
[0]!='S' );

44 
rc
 = 
	`execSql
(
db
, 
pzEºMsg
, 
zSubSql
);

45 if–
rc
!=
SQLITE_OK
 ) ;

48 
	`as£π
–
rc
!=
SQLITE_ROW
 );

49 if–
rc
==
SQLITE_DONE
 )Ñ¯
SQLITE_OK
;

50 if–
rc
 ){

51 
	`sqlôe3SëSåög
(
pzEºMsg
, 
db
, 
	`sqlôe3_îrmsg
(db));

53 ()
	`sqlôe3_föÆize
(
pStmt
);

54  
rc
;

55 
	}
}

56 
	$execSqlF
(
sqlôe3
 *
db
, **
pzEºMsg
, c⁄° *
zSql
, ...){

57 *
z
;

58 
va_li°
 
≠
;

59 
rc
;

60 
	`va_°¨t
(
≠
, 
zSql
);

61 
z
 = 
	`sqlôe3VMPrötf
(
db
, 
zSql
, 
≠
);

62 
	`va_íd
(
≠
);

63 if–
z
==0 )  
SQLITE_NOMEM
;

64 
rc
 = 
	`execSql
(
db
, 
pzEºMsg
, 
z
);

65 
	`sqlôe3DbFªe
(
db
, 
z
);

66  
rc
;

67 
	}
}

99 
	$sqlôe3Vacuum
(
P¨£
 *
pP¨£
, 
Tokí
 *
pNm
){

100 
Vdbe
 *
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

101 
iDb
 = 
pNm
 ? 
	`sqlôe3TwoP¨tName
(
pP¨£
,ÖNm,ÖNm, &pNm) : 0;

102 if–
v
 && (
iDb
>=2 || iDb==0) ){

103 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Vacuum
, 
iDb
);

104 
	`sqlôe3VdbeU£sBåì
(
v
, 
iDb
);

107 
	}
}

112 
	$sqlôe3RunVacuum
(**
pzEºMsg
, 
sqlôe3
 *
db
, 
iDb
){

113 
rc
 = 
SQLITE_OK
;

114 
Båì
 *
pMaö
;

115 
Båì
 *
pTemp
;

116 
ßved_Êags
;

117 
ßved_nCh™ge
;

118 
ßved_nTŸÆCh™ge
;

119 
u8
 
ßved_mTø˚
;

120 
Db
 *
pDb
 = 0;

121 
isMemDb
;

122 
nRes
;

123 
nDb
;

124 c⁄° *
zDbMaö
;

126 if–!
db
->
autoCommô
 ){

127 
	`sqlôe3SëSåög
(
pzEºMsg
, 
db
, "cannot VACUUM from withináÅransaction");

128  
SQLITE_ERROR
;

130 if–
db
->
nVdbeA˘ive
>1 ){

131 
	`sqlôe3SëSåög
(
pzEºMsg
, 
db
,"cannot VACUUM - SQL statements inÖrogress");

132  
SQLITE_ERROR
;

138 
ßved_Êags
 = 
db
->
Êags
;

139 
ßved_nCh™ge
 = 
db
->
nCh™ge
;

140 
ßved_nTŸÆCh™ge
 = 
db
->
nTŸÆCh™ge
;

141 
ßved_mTø˚
 = 
db
->
mTø˚
;

142 
db
->
Êags
 |(
SQLITE_WrôeSchema
 | 
SQLITE_Ign‹eChecks


143 | 
SQLITE_Pª„rBuûtö
 | 
SQLITE_Vacuum
);

144 
db
->
Êags
 &~(
SQLITE_F‹eignKeys
 | 
SQLITE_Revî£Ordî
 | 
SQLITE_Cou¡Rows
);

145 
db
->
mTø˚
 = 0;

147 
zDbMaö
 = 
db
->
aDb
[
iDb
].
zDbSName
;

148 
pMaö
 = 
db
->
aDb
[
iDb
].
pBt
;

149 
isMemDb
 = 
	`sqlôe3PagîIsMemdb
(
	`sqlôe3BåìPagî
(
pMaö
));

165 
nDb
 = 
db
->nDb;

166 
rc
 = 
	`execSql
(
db
, 
pzEºMsg
, "ATTACH''AS vacuum_db");

167 if–
rc
!=
SQLITE_OK
 ) 
íd_of_vacuum
;

168 
	`as£π
–(
db
->
nDb
-1)==nDb );

169 
pDb
 = &
db
->
aDb
[
nDb
];

170 
	`as£π
–
	`°rcmp
(
pDb
->
zDbSName
,"vacuum_db")==0 );

171 
pTemp
 = 
pDb
->
pBt
;

177 
	`sqlôe3BåìCommô
(
pTemp
);

179 
nRes
 = 
	`sqlôe3BåìGëO±imÆRe£rve
(
pMaö
);

182 #ifde‡
SQLITE_HAS_CODEC


183 if–
db
->
√xtPagesize
 ){

184 
	`sqlôe3CodecGëKey
(
sqlôe3
*, , **, *);

185 
nKey
;

186 *
zKey
;

187 
	`sqlôe3CodecGëKey
(
db
, 0, (**)&
zKey
, &
nKey
);

188 if–
nKey
 ) 
db
->
√xtPagesize
 = 0;

192 
	`sqlôe3BåìSëCacheSize
(
pTemp
, 
db
->
aDb
[
iDb
].
pSchema
->
ˇche_size
);

193 
	`sqlôe3BåìSëSpûlSize
(
pTemp
, sqlôe3BåìSëSpûlSize(
pMaö
,0));

194 
	`sqlôe3BåìSëPagîFœgs
(
pTemp
, 
PAGER_SYNCHRONOUS_OFF
|
PAGER_CACHESPILL
);

200 
rc
 = 
	`execSql
(
db
, 
pzEºMsg
, "BEGIN");

201 if–
rc
!=
SQLITE_OK
 ) 
íd_of_vacuum
;

202 
rc
 = 
	`sqlôe3BåìBegöTøns
(
pMaö
, 2);

203 if–
rc
!=
SQLITE_OK
 ) 
íd_of_vacuum
;

206 if–
	`sqlôe3PagîGëJou∫ÆMode
(
	`sqlôe3BåìPagî
(
pMaö
))

207 ==
PAGER_JOURNALMODE_WAL
 ){

208 
db
->
√xtPagesize
 = 0;

211 if–
	`sqlôe3BåìSëPageSize
(
pTemp
, 
	`sqlôe3BåìGëPageSize
(
pMaö
), 
nRes
, 0)

212 || (!
isMemDb
 && 
	`sqlôe3BåìSëPageSize
(
pTemp
, 
db
->
√xtPagesize
, 
nRes
, 0))

213 || 
	`NEVER
(
db
->
mÆlocFaûed
)

215 
rc
 = 
SQLITE_NOMEM_BKPT
;

216 
íd_of_vacuum
;

219 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


220 
	`sqlôe3BåìSëAutoVacuum
(
pTemp
, 
db
->
√xtAutovac
>=0 ? db->nextAutovac :

221 
	`sqlôe3BåìGëAutoVacuum
(
pMaö
));

227 
db
->
öô
.
iDb
 = 
nDb
;

228 
rc
 = 
	`execSqlF
(
db
, 
pzEºMsg
,

232 
zDbMaö


234 if–
rc
!=
SQLITE_OK
 ) 
íd_of_vacuum
;

235 
rc
 = 
	`execSqlF
(
db
, 
pzEºMsg
,

238 
zDbMaö


240 if–
rc
!=
SQLITE_OK
 ) 
íd_of_vacuum
;

241 
db
->
öô
.
iDb
 = 0;

247 
rc
 = 
	`execSqlF
(
db
, 
pzEºMsg
,

252 
zDbMaö


254 
	`as£π
–(
db
->
Êags
 & 
SQLITE_Vacuum
)!=0 );

255 
db
->
Êags
 &~
SQLITE_Vacuum
;

256 if–
rc
!=
SQLITE_OK
 ) 
íd_of_vacuum
;

263 
rc
 = 
	`execSqlF
(
db
, 
pzEºMsg
,

268 
zDbMaö


270 if–
rc
 ) 
íd_of_vacuum
;

279 
u32
 
mëa
;

280 
i
;

288 c⁄° 
aC›y
[] = {

289 
BTREE_SCHEMA_VERSION
, 1,

290 
BTREE_DEFAULT_CACHE_SIZE
, 0,

291 
BTREE_TEXT_ENCODING
, 0,

292 
BTREE_USER_VERSION
, 0,

293 
BTREE_APPLICATION_ID
, 0,

296 
	`as£π
–1==
	`sqlôe3BåìIsInTøns
(
pTemp
) );

297 
	`as£π
–1==
	`sqlôe3BåìIsInTøns
(
pMaö
) );

300 
i
=0; i<
	`AºaySize
(
aC›y
); i+=2){

303 
	`sqlôe3BåìGëMëa
(
pMaö
, 
aC›y
[
i
], &
mëa
);

304 
rc
 = 
	`sqlôe3BåìUpd©eMëa
(
pTemp
, 
aC›y
[
i
], 
mëa
+aCopy[i+1]);

305 if–
	`NEVER
(
rc
!=
SQLITE_OK
ËË
íd_of_vacuum
;

308 
rc
 = 
	`sqlôe3BåìC›yFûe
(
pMaö
, 
pTemp
);

309 if–
rc
!=
SQLITE_OK
 ) 
íd_of_vacuum
;

310 
rc
 = 
	`sqlôe3BåìCommô
(
pTemp
);

311 if–
rc
!=
SQLITE_OK
 ) 
íd_of_vacuum
;

312 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


313 
	`sqlôe3BåìSëAutoVacuum
(
pMaö
, 
	`sqlôe3BåìGëAutoVacuum
(
pTemp
));

317 
	`as£π
–
rc
==
SQLITE_OK
 );

318 
rc
 = 
	`sqlôe3BåìSëPageSize
(
pMaö
, 
	`sqlôe3BåìGëPageSize
(
pTemp
), 
nRes
,1);

320 
íd_of_vacuum
:

322 
db
->
öô
.
iDb
 = 0;

323 
db
->
Êags
 = 
ßved_Êags
;

324 
db
->
nCh™ge
 = 
ßved_nCh™ge
;

325 
db
->
nTŸÆCh™ge
 = 
ßved_nTŸÆCh™ge
;

326 
db
->
mTø˚
 = 
ßved_mTø˚
;

327 
	`sqlôe3BåìSëPageSize
(
pMaö
, -1, -1, 1);

336 
db
->
autoCommô
 = 1;

338 if–
pDb
 ){

339 
	`sqlôe3BåìClo£
(
pDb
->
pBt
);

340 
pDb
->
pBt
 = 0;

341 
pDb
->
pSchema
 = 0;

346 
	`sqlôe3Re£tAŒSchemasOfC⁄√˘i⁄
(
db
);

348  
rc
;

349 
	}
}

	@vdbe.c

21 
	~"sqlôeI¡.h
"

22 
	~"vdbeI¡.h
"

33 #ifde‡
SQLITE_DEBUG


34 
	#memAboutToCh™ge
(
P
,
M
Ë
	`sqlôe3VdbeMemAboutToCh™ge
(P,M)

	)

36 
	#memAboutToCh™ge
(
P
,
M
)

	)

46 #ifde‡
SQLITE_TEST


47 
	gsqlôe3_£¨ch_cou¡
 = 0;

58 #ifde‡
SQLITE_TEST


59 
	gsqlôe3_öãºu±_cou¡
 = 0;

69 #ifde‡
SQLITE_TEST


70 
	gsqlôe3_s‹t_cou¡
 = 0;

80 #ifde‡
SQLITE_TEST


81 
	gsqlôe3_max_blobsize
 = 0;

82 
	$upd©eMaxBlobsize
(
Mem
 *
p
){

83 if–(
p
->
Êags
 & (
MEM_Så
|
MEM_Blob
))!=0 &&Ö->
n
>
sqlôe3_max_blobsize
 ){

84 
sqlôe3_max_blobsize
 = 
p
->
n
;

86 
	}
}

93 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


94 
	#HAS_UPDATE_HOOK
(
DB
Ë((DB)->
xPªUpd©eCÆlback
||(DB)->
xUpd©eCÆlback
)

	)

96 
	#HAS_UPDATE_HOOK
(
DB
Ë((DB)->
xUpd©eCÆlback
)

	)

106 #ifde‡
SQLITE_TEST


107 
	gsqlôe3_found_cou¡
 = 0;

114 #i‡
deföed
(
SQLITE_TEST
Ë&& !deföed(
SQLITE_UNTESTABLE
)

115 
	#UPDATE_MAX_BLOBSIZE
(
P
Ë
	`upd©eMaxBlobsize
(P)

	)

117 
	#UPDATE_MAX_BLOBSIZE
(
P
)

	)

136 #i‡!
deföed
(
SQLITE_VDBE_COVERAGE
)

137 
	#VdbeBønchTakí
(
I
,
M
)

	)

139 
	#VdbeBønchTakí
(
I
,
M
Ë
	`vdbeTakeBønch
(
pOp
->
iSrcLöe
,I,M)

	)

140 
	$vdbeTakeBønch
(
iSrcLöe
, 
u8
 
I
, u8 
M
){

141 if–
iSrcLöe
<=2 && 
	`ALWAYS
(iSrcLine>0) ){

142 
M
 = 
iSrcLöe
;

145 
	`as£π
–(
M
 & 
I
)==I );

147 if–
sqlôe3GlobÆC⁄fig
.
xVdbeBønch
==0 ) ;

148 
sqlôe3GlobÆC⁄fig
.
	`xVdbeBønch
(sqlôe3GlobÆC⁄fig.
pVdbeBønchArg
,

149 
iSrcLöe
,
I
,
M
);

151 
	}
}

158 
	#Såögify
(
P
, 
íc
) \

159 if(((
P
)->
Êags
&(
MEM_Så
|
MEM_Blob
))==0 && 
	`sqlôe3VdbeMemSåögify
(P,
íc
,0)) \

160 { 
no_mem
; }

	)

173 
	#DìphemîÆize
(
P
) \

174 if–((
P
)->
Êags
&
MEM_Ephem
)!=0 \

175 && 
	`sqlôe3VdbeMemMakeWrôóbÀ
(
P
Ë){ 
no_mem
;}

	)

178 
	#isS‹ãr
(
x
Ë((x)->
eCurTy≥
==
CURTYPE_SORTER
)

	)

184 
VdbeCurs‹
 *
	$ÆloˇãCurs‹
(

185 
Vdbe
 *
p
,

186 
iCur
,

187 
nFõld
,

188 
iDb
,

189 
u8
 
eCurTy≥


209 
Mem
 *
pMem
 = 
iCur
>0 ? &
p
->
aMem
[p->
nMem
-iCur] :Ö->aMem;

211 
nByã
;

212 
VdbeCurs‹
 *
pCx
 = 0;

213 
nByã
 =

214 
	`ROUND8
((
VdbeCurs‹
)Ë+ 2*(
u32
)*
nFõld
 +

215 (
eCurTy≥
==
CURTYPE_BTREE
?
	`sqlôe3BåìCurs‹Size
():0);

217 
	`as£π
–
iCur
>=0 && iCur<
p
->
nCurs‹
 );

218 if–
p
->
≠C§
[
iCur
] ){

219 
	`sqlôe3VdbeFªeCurs‹
(
p
,Ö->
≠C§
[
iCur
]);

220 
p
->
≠C§
[
iCur
] = 0;

222 if–
SQLITE_OK
==
	`sqlôe3VdbeMemCÀ¨AndResize
(
pMem
, 
nByã
) ){

223 
p
->
≠C§
[
iCur
] = 
pCx
 = (
VdbeCurs‹
*)
pMem
->
z
;

224 
	`mem£t
(
pCx
, 0, 
	`off£tof
(
VdbeCurs‹
,
pA…Curs‹
));

225 
pCx
->
eCurTy≥
 =ÉCurType;

226 
pCx
->
iDb
 = iDb;

227 
pCx
->
nFõld
 =ÇField;

228 
pCx
->
aOff£t
 = &pCx->
aTy≥
[
nFõld
];

229 if–
eCurTy≥
==
CURTYPE_BTREE
 ){

230 
pCx
->
uc
.
pCurs‹
 = (
BtCurs‹
*)

231 &
pMem
->
z
[
	`ROUND8
((
VdbeCurs‹
))+2*(
u32
)*
nFõld
];

232 
	`sqlôe3BåìCurs‹Zîo
(
pCx
->
uc
.
pCurs‹
);

235  
pCx
;

236 
	}
}

253 
	$≠∂yNumîicAfföôy
(
Mem
 *
pRec
, 
bTryF‹I¡
){

254 
rVÆue
;

255 
i64
 
iVÆue
;

256 
u8
 
íc
 = 
pRec
->enc;

257 
	`as£π
–(
pRec
->
Êags
 & (
MEM_Så
|
MEM_I¡
|
MEM_Ról
))==MEM_Str );

258 if–
	`sqlôe3AtoF
(
pRec
->
z
, &
rVÆue
,ÖRec->
n
, 
íc
)==0 ) ;

259 if–0==
	`sqlôe3Atoi64
(
pRec
->
z
, &
iVÆue
,ÖRec->
n
, 
íc
) ){

260 
pRec
->
u
.
i
 = 
iVÆue
;

261 
pRec
->
Êags
 |
MEM_I¡
;

263 
pRec
->
u
.
r
 = 
rVÆue
;

264 
pRec
->
Êags
 |
MEM_Ról
;

265 if–
bTryF‹I¡
 ) 
	`sqlôe3VdbeI¡egîAfföôy
(
pRec
);

267 
	}
}

287 
	$≠∂yAfföôy
(

288 
Mem
 *
pRec
,

289 
afföôy
,

290 
u8
 
íc


292 if–
afföôy
>=
SQLITE_AFF_NUMERIC
 ){

293 
	`as£π
–
afföôy
==
SQLITE_AFF_INTEGER
 ||áfföôy==
SQLITE_AFF_REAL


294 || 
afföôy
==
SQLITE_AFF_NUMERIC
 );

295 if–(
pRec
->
Êags
 & 
MEM_I¡
)==0 ){

296 if–(
pRec
->
Êags
 & 
MEM_Ról
)==0 ){

297 if–
pRec
->
Êags
 & 
MEM_Så
 ) 
	`≠∂yNumîicAfföôy
(pRec,1);

299 
	`sqlôe3VdbeI¡egîAfföôy
(
pRec
);

302 }if–
afföôy
==
SQLITE_AFF_TEXT
 ){

308 if–0==(
pRec
->
Êags
&
MEM_Så
) ){

309 if–(
pRec
->
Êags
&(
MEM_Ról
|
MEM_I¡
)) ){

310 
	`sqlôe3VdbeMemSåögify
(
pRec
, 
íc
, 1);

313 
pRec
->
Êags
 &~(
MEM_Ról
|
MEM_I¡
);

315 
	}
}

323 
	$sqlôe3_vÆue_numîic_ty≥
(
sqlôe3_vÆue
 *
pVÆ
){

324 
eTy≥
 = 
	`sqlôe3_vÆue_ty≥
(
pVÆ
);

325 if–
eTy≥
==
SQLITE_TEXT
 ){

326 
Mem
 *
pMem
 = (Mem*)
pVÆ
;

327 
	`≠∂yNumîicAfföôy
(
pMem
, 0);

328 
eTy≥
 = 
	`sqlôe3_vÆue_ty≥
(
pVÆ
);

330  
eTy≥
;

331 
	}
}

337 
	$sqlôe3VÆueAµlyAfföôy
(

338 
sqlôe3_vÆue
 *
pVÆ
,

339 
u8
 
afföôy
,

340 
u8
 
íc


342 
	`≠∂yAfföôy
((
Mem
 *)
pVÆ
, 
afföôy
, 
íc
);

343 
	}
}

351 
u16
 
SQLITE_NOINLINE
 
	$compuãNumîicTy≥
(
Mem
 *
pMem
){

352 
	`as£π
–(
pMem
->
Êags
 & (
MEM_I¡
|
MEM_Ról
))==0 );

353 
	`as£π
–(
pMem
->
Êags
 & (
MEM_Så
|
MEM_Blob
))!=0 );

354 if–
	`sqlôe3AtoF
(
pMem
->
z
, &pMem->
u
.
r
,ÖMem->
n
,ÖMem->
íc
)==0 ){

357 if–
	`sqlôe3Atoi64
(
pMem
->
z
, &pMem->
u
.
i
,ÖMem->
n
,ÖMem->
íc
)==
SQLITE_OK
 ){

358  
MEM_I¡
;

360  
MEM_Ról
;

361 
	}
}

370 
u16
 
	$numîicTy≥
(
Mem
 *
pMem
){

371 if–
pMem
->
Êags
 & (
MEM_I¡
|
MEM_Ról
) ){

372  
pMem
->
Êags
 & (
MEM_I¡
|
MEM_Ról
);

374 if–
pMem
->
Êags
 & (
MEM_Så
|
MEM_Blob
) ){

375  
	`compuãNumîicTy≥
(
pMem
);

378 
	}
}

380 #ifde‡
SQLITE_DEBUG


385 
	$sqlôe3VdbeMemPªâyPröt
(
Mem
 *
pMem
, *
zBuf
){

386 *
zC§
 = 
zBuf
;

387 
f
 = 
pMem
->
Êags
;

389 c⁄° *c⁄° 
í˙ames
[] = {"(X)", "(8)", "(16LE)", "(16BE)"};

391 if–
f
&
MEM_Blob
 ){

392 
i
;

393 
c
;

394 if–
f
 & 
MEM_Dyn
 ){

395 
c
 = 'z';

396 
	`as£π
–(
f
 & (
MEM_Sètic
|
MEM_Ephem
))==0 );

397 }if–
f
 & 
MEM_Sètic
 ){

398 
c
 = 't';

399 
	`as£π
–(
f
 & (
MEM_Dyn
|
MEM_Ephem
))==0 );

400 }if–
f
 & 
MEM_Ephem
 ){

401 
c
 = 'e';

402 
	`as£π
–(
f
 & (
MEM_Sètic
|
MEM_Dyn
))==0 );

404 
c
 = 's';

407 
	`sqlôe3_¢¥ötf
(100, 
zC§
, "%c", 
c
);

408 
zC§
 +
	`sqlôe3SåÀn30
(zCsr);

409 
	`sqlôe3_¢¥ötf
(100, 
zC§
, "%d[", 
pMem
->
n
);

410 
zC§
 +
	`sqlôe3SåÀn30
(zCsr);

411 
i
=0; i<16 && i<
pMem
->
n
; i++){

412 
	`sqlôe3_¢¥ötf
(100, 
zC§
, "%02X", (()
pMem
->
z
[
i
] & 0xFF));

413 
zC§
 +
	`sqlôe3SåÀn30
(zCsr);

415 
i
=0; i<16 && i<
pMem
->
n
; i++){

416 
z
 = 
pMem
->z[
i
];

417 if–
z
<32 || z>126 ) *
zC§
++ = '.';

418 *
zC§
++ = 
z
;

421 
	`sqlôe3_¢¥ötf
(100, 
zC§
, "]%s", 
í˙ames
[
pMem
->
íc
]);

422 
zC§
 +
	`sqlôe3SåÀn30
(zCsr);

423 if–
f
 & 
MEM_Zîo
 ){

424 
	`sqlôe3_¢¥ötf
(100, 
zC§
,"+%dz",
pMem
->
u
.
nZîo
);

425 
zC§
 +
	`sqlôe3SåÀn30
(zCsr);

427 *
zC§
 = '\0';

428 }if–
f
 & 
MEM_Så
 ){

429 
j
, 
k
;

430 
zBuf
[0] = ' ';

431 if–
f
 & 
MEM_Dyn
 ){

432 
zBuf
[1] = 'z';

433 
	`as£π
–(
f
 & (
MEM_Sètic
|
MEM_Ephem
))==0 );

434 }if–
f
 & 
MEM_Sètic
 ){

435 
zBuf
[1] = 't';

436 
	`as£π
–(
f
 & (
MEM_Dyn
|
MEM_Ephem
))==0 );

437 }if–
f
 & 
MEM_Ephem
 ){

438 
zBuf
[1] = 'e';

439 
	`as£π
–(
f
 & (
MEM_Sètic
|
MEM_Dyn
))==0 );

441 
zBuf
[1] = 's';

443 
k
 = 2;

444 
	`sqlôe3_¢¥ötf
(100, &
zBuf
[
k
], "%d", 
pMem
->
n
);

445 
k
 +
	`sqlôe3SåÀn30
(&
zBuf
[k]);

446 
zBuf
[
k
++] = '[';

447 
j
=0; j<15 && j<
pMem
->
n
; j++){

448 
u8
 
c
 = 
pMem
->
z
[
j
];

449 if–
c
>=0x20 && c<0x7f ){

450 
zBuf
[
k
++] = 
c
;

452 
zBuf
[
k
++] = '.';

455 
zBuf
[
k
++] = ']';

456 
	`sqlôe3_¢¥ötf
(100,&
zBuf
[
k
], 
í˙ames
[
pMem
->
íc
]);

457 
k
 +
	`sqlôe3SåÀn30
(&
zBuf
[k]);

458 
zBuf
[
k
++] = 0;

460 
	}
}

463 #ifde‡
SQLITE_DEBUG


467 
	$memTø˚Pröt
(
Mem
 *
p
){

468 if–
p
->
Êags
 & 
MEM_Undeföed
 ){

469 
	`¥ötf
(" undefined");

470 }if–
p
->
Êags
 & 
MEM_NuŒ
 ){

471 
	`¥ötf
(" NULL");

472 }if–(
p
->
Êags
 & (
MEM_I¡
|
MEM_Så
))==(MEM_Int|MEM_Str) ){

473 
	`¥ötf
(" si:%Œd", 
p
->
u
.
i
);

474 }if–
p
->
Êags
 & 
MEM_I¡
 ){

475 
	`¥ötf
(" i:%Œd", 
p
->
u
.
i
);

476 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


477 }if–
p
->
Êags
 & 
MEM_Ról
 ){

478 
	`¥ötf
("Ñ:%g", 
p
->
u
.
r
);

480 }if–
p
->
Êags
 & 
MEM_RowSë
 ){

481 
	`¥ötf
(" (rowset)");

483 
zBuf
[200];

484 
	`sqlôe3VdbeMemPªâyPröt
(
p
, 
zBuf
);

485 
	`¥ötf
(" %s", 
zBuf
);

487 if–
p
->
Êags
 & 
MEM_Subty≥
 ) 
	`¥ötf
(" subty≥=0x%02x",Ö->
eSubty≥
);

488 
	}
}

489 
	$ªgi°îTø˚
(
iReg
, 
Mem
 *
p
){

490 
	`¥ötf
("REG[%d] = ", 
iReg
);

491 
	`memTø˚Pröt
(
p
);

492 
	`¥ötf
("\n");

493 
	}
}

496 #ifde‡
SQLITE_DEBUG


497 
	#REGISTER_TRACE
(
R
,
M
Ëif(
db
->
Êags
&
SQLITE_VdbeTø˚
)
	`ªgi°îTø˚
(R,M)

	)

499 
	#REGISTER_TRACE
(
R
,
M
)

	)

503 #ifde‡
VDBE_PROFILE


509 
	~"hwtime.h
"

513 #i‚de‡
NDEBUG


524 
	$checkSavïoötCou¡
(
sqlôe3
 *
db
){

525 
n
 = 0;

526 
Savïoöt
 *
p
;

527 
p
=
db
->
pSavïoöt
;Ö;Öı->
pNext
Ë
n
++;

528 
	`as£π
–
n
==(
db
->
nSavïoöt
 + db->
isTønß˘i⁄Savïoöt
) );

530 
	}
}

537 
SQLITE_NOINLINE
 
Mem
 *
	$out2PªªÀa£WôhCÀ¨
(
Mem
 *
pOut
){

538 
	`sqlôe3VdbeMemSëNuŒ
(
pOut
);

539 
pOut
->
Êags
 = 
MEM_I¡
;

540  
pOut
;

541 
	}
}

542 
Mem
 *
	$out2PªªÀa£
(
Vdbe
 *
p
, 
VdbeOp
 *
pOp
){

543 
Mem
 *
pOut
;

544 
	`as£π
–
pOp
->
p2
>0 );

545 
	`as£π
–
pOp
->
p2
<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

546 
pOut
 = &
p
->
aMem
[
pOp
->
p2
];

547 
	`memAboutToCh™ge
(
p
, 
pOut
);

548 if–
	`VdbeMemDy«mic
(
pOut
) ){

549  
	`out2PªªÀa£WôhCÀ¨
(
pOut
);

551 
pOut
->
Êags
 = 
MEM_I¡
;

552  
pOut
;

554 
	}
}

561 
	$sqlôe3VdbeExec
(

562 
Vdbe
 *
p


564 
Op
 *
aOp
 = 
p
->aOp;

565 
Op
 *
pOp
 = 
aOp
;

566 #i‡
	`deföed
(
SQLITE_DEBUG
Ë|| deföed(
VDBE_PROFILE
)

567 
Op
 *
pOrigOp
;

569 #ifde‡
SQLITE_DEBUG


570 
nExåaDñëe
 = 0;

572 
rc
 = 
SQLITE_OK
;

573 
sqlôe3
 *
db
 = 
p
->db;

574 
u8
 
ª£tSchemaOnFau…
 = 0;

575 
u8
 
ícodög
 = 
	`ENC
(
db
);

576 
iCom∑ª
 = 0;

577 
nVmSãp
 = 0;

578 #i‚de‡
SQLITE_OMIT_PROGRESS_CALLBACK


579 
nProgªssLimô
 = 0;

581 
Mem
 *
aMem
 = 
p
->aMem;

582 
Mem
 *
pIn1
 = 0;

583 
Mem
 *
pIn2
 = 0;

584 
Mem
 *
pIn3
 = 0;

585 
Mem
 *
pOut
 = 0;

586 *
aPîmuã
 = 0;

587 
i64
 
œ°Rowid
 = 
db
->lastRowid;

588 #ifde‡
VDBE_PROFILE


589 
u64
 
°¨t
;

593 
	`as£π
–
p
->
magic
==
VDBE_MAGIC_RUN
 );

594 
	`sqlôe3VdbeE¡î
(
p
);

595 if–
p
->
rc
==
SQLITE_NOMEM
 ){

598 
no_mem
;

600 
	`as£π
–
p
->
rc
==
SQLITE_OK
 || (p->rc&0xff)==
SQLITE_BUSY
 );

601 
	`as£π
–
p
->
bIsRódî
 ||Ö->
ªadO∆y
!=0 );

602 
p
->
rc
 = 
SQLITE_OK
;

603 
p
->
iCuºítTime
 = 0;

604 
	`as£π
–
p
->
ex∂aö
==0 );

605 
p
->
pResu…Së
 = 0;

606 
db
->
busyH™dÀr
.
nBusy
 = 0;

607 if–
db
->
u1
.
isI¡îru±ed
 ) 
ab‹t_due_to_öãºu±
;

608 
	`sqlôe3VdbeIOTø˚Sql
(
p
);

609 #i‚de‡
SQLITE_OMIT_PROGRESS_CALLBACK


610 if–
db
->
xProgªss
 ){

611 
u32
 
iPri‹
 = 
p
->
aCou¡î
[
SQLITE_STMTSTATUS_VM_STEP
];

612 
	`as£π
–0 < 
db
->
nProgªssOps
 );

613 
nProgªssLimô
 = 
db
->
nProgªssOps
 - (
iPri‹
 % db->nProgressOps);

616 #ifde‡
SQLITE_DEBUG


617 
	`sqlôe3BegöBíignMÆloc
();

618 if–
p
->
pc
==0

619 && (
p
->
db
->
Êags
 & (
SQLITE_VdbeLi°ög
|
SQLITE_VdbeEQP
|
SQLITE_VdbeTø˚
))!=0

621 
i
;

622 
⁄˚
 = 1;

623 
	`sqlôe3VdbePrötSql
(
p
);

624 if–
p
->
db
->
Êags
 & 
SQLITE_VdbeLi°ög
 ){

625 
	`¥ötf
("VDBE Program Listing:\n");

626 
i
=0; i<
p
->
nOp
; i++){

627 
	`sqlôe3VdbePrötOp
(
°dout
, 
i
, &
aOp
[i]);

630 if–
p
->
db
->
Êags
 & 
SQLITE_VdbeEQP
 ){

631 
i
=0; i<
p
->
nOp
; i++){

632 if–
aOp
[
i
].
›code
==
OP_Ex∂aö
 ){

633 if–
⁄˚
 ) 
	`¥ötf
("VDBE Query Plan:\n");

634 
	`¥ötf
("%s\n", 
aOp
[
i
].
p4
.
z
);

635 
⁄˚
 = 0;

639 if–
p
->
db
->
Êags
 & 
SQLITE_VdbeTø˚
 ) 
	`¥ötf
("VDBE Trace:\n");

641 
	`sqlôe3EndBíignMÆloc
();

643 
pOp
=&
aOp
[
p
->
pc
]; 1;ÖOp++){

646 
	`as£π
–
rc
==
SQLITE_OK
 );

648 
	`as£π
–
pOp
>=
aOp
 &&ÖOp<&aOp[
p
->
nOp
]);

649 #ifde‡
VDBE_PROFILE


650 
°¨t
 = 
	`sqlôe3Hwtime
();

652 
nVmSãp
++;

653 #ifde‡
SQLITE_ENABLE_STMT_SCANSTATUS


654 if–
p
->
™Exec
 )Ö->™Exec[()(
pOp
-
aOp
)]++;

659 #ifde‡
SQLITE_DEBUG


660 if–
db
->
Êags
 & 
SQLITE_VdbeTø˚
 ){

661 
	`sqlôe3VdbePrötOp
(
°dout
, ()(
pOp
 - 
aOp
),ÖOp);

669 #ifde‡
SQLITE_TEST


670 if–
sqlôe3_öãºu±_cou¡
>0 ){

671 
sqlôe3_öãºu±_cou¡
--;

672 if–
sqlôe3_öãºu±_cou¡
==0 ){

673 
	`sqlôe3_öãºu±
(
db
);

679 #ifde‡
SQLITE_DEBUG


681 
u8
 
›Pr›îty
 = 
sqlôe3OpcodePr›îty
[
pOp
->
›code
];

682 if–(
›Pr›îty
 & 
OPFLG_IN1
)!=0 ){

683 
	`as£π
–
pOp
->
p1
>0 );

684 
	`as£π
–
pOp
->
p1
<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

685 
	`as£π
–
	`memIsVÆid
(&
aMem
[
pOp
->
p1
]) );

686 
	`as£π
–
	`sqlôe3VdbeCheckMemInv¨ü¡s
(&
aMem
[
pOp
->
p1
]) );

687 
	`REGISTER_TRACE
(
pOp
->
p1
, &
aMem
[pOp->p1]);

689 if–(
›Pr›îty
 & 
OPFLG_IN2
)!=0 ){

690 
	`as£π
–
pOp
->
p2
>0 );

691 
	`as£π
–
pOp
->
p2
<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

692 
	`as£π
–
	`memIsVÆid
(&
aMem
[
pOp
->
p2
]) );

693 
	`as£π
–
	`sqlôe3VdbeCheckMemInv¨ü¡s
(&
aMem
[
pOp
->
p2
]) );

694 
	`REGISTER_TRACE
(
pOp
->
p2
, &
aMem
[pOp->p2]);

696 if–(
›Pr›îty
 & 
OPFLG_IN3
)!=0 ){

697 
	`as£π
–
pOp
->
p3
>0 );

698 
	`as£π
–
pOp
->
p3
<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

699 
	`as£π
–
	`memIsVÆid
(&
aMem
[
pOp
->
p3
]) );

700 
	`as£π
–
	`sqlôe3VdbeCheckMemInv¨ü¡s
(&
aMem
[
pOp
->
p3
]) );

701 
	`REGISTER_TRACE
(
pOp
->
p3
, &
aMem
[pOp->p3]);

703 if–(
›Pr›îty
 & 
OPFLG_OUT2
)!=0 ){

704 
	`as£π
–
pOp
->
p2
>0 );

705 
	`as£π
–
pOp
->
p2
<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

706 
	`memAboutToCh™ge
(
p
, &
aMem
[
pOp
->
p2
]);

708 if–(
›Pr›îty
 & 
OPFLG_OUT3
)!=0 ){

709 
	`as£π
–
pOp
->
p3
>0 );

710 
	`as£π
–
pOp
->
p3
<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

711 
	`memAboutToCh™ge
(
p
, &
aMem
[
pOp
->
p3
]);

715 #i‡
	`deföed
(
SQLITE_DEBUG
Ë|| deföed(
VDBE_PROFILE
)

716 
pOrigOp
 = 
pOp
;

719  
pOp
->
›code
 ){

768 
OP_GŸo
: {

769 
jump_to_p2_™d_check_f‹_öãºu±
:

770 
pOp
 = &
aOp
[pOp->
p2
 - 1];

782 
check_f‹_öãºu±
:

783 if–
db
->
u1
.
isI¡îru±ed
 ) 
ab‹t_due_to_öãºu±
;

784 #i‚de‡
SQLITE_OMIT_PROGRESS_CALLBACK


791 if–
db
->
xProgªss
!=0 && 
nVmSãp
>=
nProgªssLimô
 ){

792 
	`as£π
–
db
->
nProgªssOps
!=0 );

793 
nProgªssLimô
 = 
nVmSãp
 + 
db
->
nProgªssOps
 - (nVmStep%db->nProgressOps);

794 if–
db
->
	`xProgªss
(db->
pProgªssArg
) ){

795 
rc
 = 
SQLITE_INTERRUPT
;

796 
ab‹t_due_to_îr‹
;

809 
OP_Gosub
: {

810 
	`as£π
–
pOp
->
p1
>0 &&ÖOp->p1<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

811 
pIn1
 = &
aMem
[
pOp
->
p1
];

812 
	`as£π
–
	`VdbeMemDy«mic
(
pIn1
)==0 );

813 
	`memAboutToCh™ge
(
p
, 
pIn1
);

814 
pIn1
->
Êags
 = 
MEM_I¡
;

815 
pIn1
->
u
.
i
 = ()(
pOp
-
aOp
);

816 
	`REGISTER_TRACE
(
pOp
->
p1
, 
pIn1
);

820 
jump_to_p2
:

821 
pOp
 = &
aOp
[pOp->
p2
 - 1];

830 
OP_Rëu∫
: {

831 
pIn1
 = &
aMem
[
pOp
->
p1
];

832 
	`as£π
–
pIn1
->
Êags
==
MEM_I¡
 );

833 
pOp
 = &
aOp
[
pIn1
->
u
.
i
];

834 
pIn1
->
Êags
 = 
MEM_Undeföed
;

849 
OP_InôC‹outöe
: {

850 
	`as£π
–
pOp
->
p1
>0 &&ÖOp->p1<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

851 
	`as£π
–
pOp
->
p2
>=0 &&ÖOp->p2<
p
->
nOp
 );

852 
	`as£π
–
pOp
->
p3
>=0 &&ÖOp->p3<
p
->
nOp
 );

853 
pOut
 = &
aMem
[
pOp
->
p1
];

854 
	`as£π
–!
	`VdbeMemDy«mic
(
pOut
) );

855 
pOut
->
u
.
i
 = 
pOp
->
p3
 - 1;

856 
pOut
->
Êags
 = 
MEM_I¡
;

857 if–
pOp
->
p2
 ) 
jump_to_p2
;

869 
OP_EndC‹outöe
: {

870 
VdbeOp
 *
pCÆÀr
;

871 
pIn1
 = &
aMem
[
pOp
->
p1
];

872 
	`as£π
–
pIn1
->
Êags
==
MEM_I¡
 );

873 
	`as£π
–
pIn1
->
u
.
i
>=0 &&ÖIn1->u.i<
p
->
nOp
 );

874 
pCÆÀr
 = &
aOp
[
pIn1
->
u
.
i
];

875 
	`as£π
–
pCÆÀr
->
›code
==
OP_Yõld
 );

876 
	`as£π
–
pCÆÀr
->
p2
>=0 &&ÖCÆÀr->p2<
p
->
nOp
 );

877 
pOp
 = &
aOp
[
pCÆÀr
->
p2
 - 1];

878 
pIn1
->
Êags
 = 
MEM_Undeföed
;

895 
OP_Yõld
: {

896 
pcDe°
;

897 
pIn1
 = &
aMem
[
pOp
->
p1
];

898 
	`as£π
–
	`VdbeMemDy«mic
(
pIn1
)==0 );

899 
pIn1
->
Êags
 = 
MEM_I¡
;

900 
pcDe°
 = ()
pIn1
->
u
.
i
;

901 
pIn1
->
u
.
i
 = ()(
pOp
 - 
aOp
);

902 
	`REGISTER_TRACE
(
pOp
->
p1
, 
pIn1
);

903 
pOp
 = &
aOp
[
pcDe°
];

915 
OP_HÆtIfNuŒ
: {

916 
pIn3
 = &
aMem
[
pOp
->
p3
];

917 if–(
pIn3
->
Êags
 & 
MEM_NuŒ
)==0 ) ;

951 
OP_HÆt
: {

952 
VdbeFøme
 *
pFøme
;

953 
pcx
;

955 
pcx
 = ()(
pOp
 - 
aOp
);

956 if–
pOp
->
p1
==
SQLITE_OK
 && 
p
->
pFøme
 ){

958 
pFøme
 = 
p
->pFrame;

959 
p
->
pFøme
 =ÖFøme->
pP¨ít
;

960 
p
->
nFøme
--;

961 
	`sqlôe3VdbeSëCh™ges
(
db
, 
p
->
nCh™ge
);

962 
pcx
 = 
	`sqlôe3VdbeFømeRe°‹e
(
pFøme
);

963 
œ°Rowid
 = 
db
->lastRowid;

964 if–
pOp
->
p2
==
OE_Ign‹e
 ){

970 
pcx
 = 
p
->
aOp
[pcx].
p2
-1;

972 
aOp
 = 
p
->aOp;

973 
aMem
 = 
p
->aMem;

974 
pOp
 = &
aOp
[
pcx
];

977 
p
->
rc
 = 
pOp
->
p1
;

978 
p
->
îr‹A˘i⁄
 = (
u8
)
pOp
->
p2
;

979 
p
->
pc
 = 
pcx
;

980 
	`as£π
–
pOp
->
p5
<=4 );

981 if–
p
->
rc
 ){

982 if–
pOp
->
p5
 ){

983 c⁄° * c⁄° 
azTy≥
[] = { "NOT NULL", "UNIQUE", "CHECK",

985 
	`ã°ˇ£
–
pOp
->
p5
==1 );

986 
	`ã°ˇ£
–
pOp
->
p5
==2 );

987 
	`ã°ˇ£
–
pOp
->
p5
==3 );

988 
	`ã°ˇ£
–
pOp
->
p5
==4 );

989 
	`sqlôe3VdbeEº‹
(
p
, "%†c⁄°øöàÁûed", 
azTy≥
[
pOp
->
p5
-1]);

990 if–
pOp
->
p4
.
z
 ){

991 
p
->
zEºMsg
 = 
	`sqlôe3MPrötf
(
db
, "%z: %s",Ö->zEºMsg, 
pOp
->
p4
.
z
);

994 
	`sqlôe3VdbeEº‹
(
p
, "%s", 
pOp
->
p4
.
z
);

996 
	`sqlôe3_log
(
pOp
->
p1
, "ab‹à© %d i¿[%s]: %s", 
pcx
, 
p
->
zSql
,Ö->
zEºMsg
);

998 
rc
 = 
	`sqlôe3VdbeHÆt
(
p
);

999 
	`as£π
–
rc
==
SQLITE_BUSY
 ||Ñc==
SQLITE_OK
 ||Ñc==
SQLITE_ERROR
 );

1000 if–
rc
==
SQLITE_BUSY
 ){

1001 
p
->
rc
 = 
SQLITE_BUSY
;

1003 
	`as£π
–
rc
==
SQLITE_OK
 || (
p
->rc&0xff)==
SQLITE_CONSTRAINT
 );

1004 
	`as£π
–
rc
==
SQLITE_OK
 || 
db
->
nDe„ºedC⁄s
>0 || db->
nDe„ºedImmC⁄s
>0 );

1005 
rc
 = 
p
->r¯? 
SQLITE_ERROR
 : 
SQLITE_DONE
;

1007 
vdbe_ªtu∫
;

1015 
OP_I¡egî
: {

1016 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

1017 
pOut
->
u
.
i
 = 
pOp
->
p1
;

1027 
OP_I¡64
: {

1028 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

1029 
	`as£π
–
pOp
->
p4
.
pI64
!=0 );

1030 
pOut
->
u
.
i
 = *
pOp
->
p4
.
pI64
;

1034 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


1041 
OP_Ról
: {

1042 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

1043 
pOut
->
Êags
 = 
MEM_Ról
;

1044 
	`as£π
–!
	`sqlôe3IsNaN
(*
pOp
->
p4
.
pRól
) );

1045 
pOut
->
u
.
r
 = *
pOp
->
p4
.
pRól
;

1058 
OP_Såög8
: {

1059 
	`as£π
–
pOp
->
p4
.
z
!=0 );

1060 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

1061 
pOp
->
›code
 = 
OP_Såög
;

1062 
pOp
->
p1
 = 
	`sqlôe3SåÀn30
’Op->
p4
.
z
);

1064 #i‚de‡
SQLITE_OMIT_UTF16


1065 if–
ícodög
!=
SQLITE_UTF8
 ){

1066 
rc
 = 
	`sqlôe3VdbeMemSëSå
(
pOut
, 
pOp
->
p4
.
z
, -1, 
SQLITE_UTF8
, 
SQLITE_STATIC
);

1067 
	`as£π
–
rc
==
SQLITE_OK
 ||Ñc==
SQLITE_TOOBIG
 );

1068 if–
SQLITE_OK
!=
	`sqlôe3VdbeCh™geEncodög
(
pOut
, 
ícodög
ËË
no_mem
;

1069 
	`as£π
–
pOut
->
szMÆloc
>0 &&ÖOut->
zMÆloc
=ıOut->
z
 );

1070 
	`as£π
–
	`VdbeMemDy«mic
(
pOut
)==0 );

1071 
pOut
->
szMÆloc
 = 0;

1072 
pOut
->
Êags
 |
MEM_Sètic
;

1073 if–
pOp
->
p4ty≥
==
P4_DYNAMIC
 ){

1074 
	`sqlôe3DbFªe
(
db
, 
pOp
->
p4
.
z
);

1076 
pOp
->
p4ty≥
 = 
P4_DYNAMIC
;

1077 
pOp
->
p4
.
z
 = 
pOut
->z;

1078 
pOp
->
p1
 = 
pOut
->
n
;

1080 
	`ã°ˇ£
–
rc
==
SQLITE_TOOBIG
 );

1082 if–
pOp
->
p1
>
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
] ){

1083 
too_big
;

1085 
	`as£π
–
rc
==
SQLITE_OK
 );

1101 
OP_Såög
: {

1102 
	`as£π
–
pOp
->
p4
.
z
!=0 );

1103 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

1104 
pOut
->
Êags
 = 
MEM_Så
|
MEM_Sètic
|
MEM_Tîm
;

1105 
pOut
->
z
 = 
pOp
->
p4
.z;

1106 
pOut
->
n
 = 
pOp
->
p1
;

1107 
pOut
->
íc
 = 
ícodög
;

1108 
	`UPDATE_MAX_BLOBSIZE
(
pOut
);

1109 #i‚de‡
SQLITE_LIKE_DOESNT_MATCH_BLOBS


1110 if–
pOp
->
p3
>0 ){

1111 
	`as£π
–
pOp
->
p3
<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

1112 
pIn3
 = &
aMem
[
pOp
->
p3
];

1113 
	`as£π
–
pIn3
->
Êags
 & 
MEM_I¡
 );

1114 if–
pIn3
->
u
.
i
==
pOp
->
p5
 ) 
pOut
->
Êags
 = 
MEM_Blob
|
MEM_Sètic
|
MEM_Tîm
;

1132 
OP_NuŒ
: {

1133 
˙t
;

1134 
u16
 
nuŒFœg
;

1135 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

1136 
˙t
 = 
pOp
->
p3
-pOp->
p2
;

1137 
	`as£π
–
pOp
->
p3
<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

1138 
pOut
->
Êags
 = 
nuŒFœg
 = 
pOp
->
p1
 ? (
MEM_NuŒ
|
MEM_CÀ¨ed
) : MEM_Null;

1139 
pOut
->
n
 = 0;

1140  
˙t
>0 ){

1141 
pOut
++;

1142 
	`memAboutToCh™ge
(
p
, 
pOut
);

1143 
	`sqlôe3VdbeMemSëNuŒ
(
pOut
);

1144 
pOut
->
Êags
 = 
nuŒFœg
;

1145 
pOut
->
n
 = 0;

1146 
˙t
--;

1159 
OP_So·NuŒ
: {

1160 
	`as£π
–
pOp
->
p1
>0 &&ÖOp->p1<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

1161 
pOut
 = &
aMem
[
pOp
->
p1
];

1162 
pOut
->
Êags
 = (pOut->Êags|
MEM_NuŒ
)&~
MEM_Undeföed
;

1172 
OP_Blob
: {

1173 
	`as£π
–
pOp
->
p1
 <
SQLITE_MAX_LENGTH
 );

1174 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

1175 
	`sqlôe3VdbeMemSëSå
(
pOut
, 
pOp
->
p4
.
z
,ÖOp->
p1
, 0, 0);

1176 
pOut
->
íc
 = 
ícodög
;

1177 
	`UPDATE_MAX_BLOBSIZE
(
pOut
);

1189 
OP_V¨übÀ
: {

1190 
Mem
 *
pV¨
;

1192 
	`as£π
–
pOp
->
p1
>0 &&ÖOp->p1<=
p
->
nV¨
 );

1193 
	`as£π
–
pOp
->
p4
.
z
==0 ||ÖOp->p4.z==
	`sqlôe3VLi°NumToName
(
p
->
pVLi°
,pOp->
p1
) );

1194 
pV¨
 = &
p
->
aV¨
[
pOp
->
p1
 - 1];

1195 if–
	`sqlôe3VdbeMemTooBig
(
pV¨
) ){

1196 
too_big
;

1198 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

1199 
	`sqlôe3VdbeMemShÆlowC›y
(
pOut
, 
pV¨
, 
MEM_Sètic
);

1200 
	`UPDATE_MAX_BLOBSIZE
(
pOut
);

1213 
OP_Move
: {

1214 
n
;

1215 
p1
;

1216 
p2
;

1218 
n
 = 
pOp
->
p3
;

1219 
p1
 = 
pOp
->p1;

1220 
p2
 = 
pOp
->p2;

1221 
	`as£π
–
n
>0 && 
p1
>0 && 
p2
>0 );

1222 
	`as£π
–
p1
+
n
<=
p2
 ||Ö2+n<=p1 );

1224 
pIn1
 = &
aMem
[
p1
];

1225 
pOut
 = &
aMem
[
p2
];

1227 
	`as£π
–
pOut
<=&
aMem
[(
p
->
nMem
+1 -Ö->
nCurs‹
)] );

1228 
	`as£π
–
pIn1
<=&
aMem
[(
p
->
nMem
+1 -Ö->
nCurs‹
)] );

1229 
	`as£π
–
	`memIsVÆid
(
pIn1
) );

1230 
	`memAboutToCh™ge
(
p
, 
pOut
);

1231 
	`sqlôe3VdbeMemMove
(
pOut
, 
pIn1
);

1232 #ifde‡
SQLITE_DEBUG


1233 if–
pOut
->
pSc›yFrom
>=&
aMem
[
p1
] &&ÖOut->pScopyFrom<pOut ){

1234 
pOut
->
pSc›yFrom
 +
pOp
->
p2
 - 
p1
;

1237 
	`DìphemîÆize
(
pOut
);

1238 
	`REGISTER_TRACE
(
p2
++, 
pOut
);

1239 
pIn1
++;

1240 
pOut
++;

1241 } --
n
 );

1253 
OP_C›y
: {

1254 
n
;

1256 
n
 = 
pOp
->
p3
;

1257 
pIn1
 = &
aMem
[
pOp
->
p1
];

1258 
pOut
 = &
aMem
[
pOp
->
p2
];

1259 
	`as£π
–
pOut
!=
pIn1
 );

1261 
	`sqlôe3VdbeMemShÆlowC›y
(
pOut
, 
pIn1
, 
MEM_Ephem
);

1262 
	`DìphemîÆize
(
pOut
);

1263 #ifde‡
SQLITE_DEBUG


1264 
pOut
->
pSc›yFrom
 = 0;

1266 
	`REGISTER_TRACE
(
pOp
->
p2
+pOp->
p3
-
n
, 
pOut
);

1267 if–(
n
--)==0 ) ;

1268 
pOut
++;

1269 
pIn1
++;

1287 
OP_SC›y
: {

1288 
pIn1
 = &
aMem
[
pOp
->
p1
];

1289 
pOut
 = &
aMem
[
pOp
->
p2
];

1290 
	`as£π
–
pOut
!=
pIn1
 );

1291 
	`sqlôe3VdbeMemShÆlowC›y
(
pOut
, 
pIn1
, 
MEM_Ephem
);

1292 #ifde‡
SQLITE_DEBUG


1293 if–
pOut
->
pSc›yFrom
==0 )ÖOut->pSc›yFrom = 
pIn1
;

1306 
OP_I¡C›y
: {

1307 
pIn1
 = &
aMem
[
pOp
->
p1
];

1308 
	`as£π
–(
pIn1
->
Êags
 & 
MEM_I¡
)!=0 );

1309 
pOut
 = &
aMem
[
pOp
->
p2
];

1310 
	`sqlôe3VdbeMemSëI¡64
(
pOut
, 
pIn1
->
u
.
i
);

1323 
OP_Resu…Row
: {

1324 
Mem
 *
pMem
;

1325 
i
;

1326 
	`as£π
–
p
->
nResCﬁumn
==
pOp
->
p2
 );

1327 
	`as£π
–
pOp
->
p1
>0 );

1328 
	`as£π
–
pOp
->
p1
+pOp->
p2
<=(
p
->
nMem
+1 -Ö->
nCurs‹
)+1 );

1330 #i‚de‡
SQLITE_OMIT_PROGRESS_CALLBACK


1333 if–
db
->
xProgªss
!=0

1334 && 
nVmSãp
>=
nProgªssLimô


1335 && 
db
->
	`xProgªss
(db->
pProgªssArg
)!=0

1337 
rc
 = 
SQLITE_INTERRUPT
;

1338 
ab‹t_due_to_îr‹
;

1345 if–
SQLITE_OK
!=(
rc
 = 
	`sqlôe3VdbeCheckFk
(
p
, 0)) ){

1346 
	`as£π
–
db
->
Êags
&
SQLITE_Cou¡Rows
 );

1347 
	`as£π
–
p
->
u£sStmtJou∫Æ
 );

1348 
ab‹t_due_to_îr‹
;

1366 
	`as£π
–
p
->
iSèãmít
==0 || 
db
->
Êags
&
SQLITE_Cou¡Rows
 );

1367 
rc
 = 
	`sqlôe3VdbeClo£Sèãmít
(
p
, 
SAVEPOINT_RELEASE
);

1368 
	`as£π
–
rc
==
SQLITE_OK
 );

1371 
p
->
ˇcheCå
 = (p->cacheCtr + 2)|1;

1377 
pMem
 = 
p
->
pResu…Së
 = &
aMem
[
pOp
->
p1
];

1378 
i
=0; i<
pOp
->
p2
; i++){

1379 
	`as£π
–
	`memIsVÆid
(&
pMem
[
i
]) );

1380 
	`DìphemîÆize
(&
pMem
[
i
]);

1381 
	`as£π
–(
pMem
[
i
].
Êags
 & 
MEM_Ephem
)==0

1382 || (
pMem
[
i
].
Êags
 & (
MEM_Så
|
MEM_Blob
))==0 );

1383 
	`sqlôe3VdbeMemNulTîmö©e
(&
pMem
[
i
]);

1384 
	`REGISTER_TRACE
(
pOp
->
p1
+
i
, &
pMem
[i]);

1386 if–
db
->
mÆlocFaûed
 ) 
no_mem
;

1388 if–
db
->
mTø˚
 & 
SQLITE_TRACE_ROW
 ){

1389 
db
->
	`xTø˚
(
SQLITE_TRACE_ROW
, db->
pTø˚Arg
, 
p
, 0);

1394 
p
->
pc
 = ()(
pOp
 - 
aOp
) + 1;

1395 
rc
 = 
SQLITE_ROW
;

1396 
vdbe_ªtu∫
;

1412 
OP_C⁄ˇt
: {

1413 
i64
 
nByã
;

1415 
pIn1
 = &
aMem
[
pOp
->
p1
];

1416 
pIn2
 = &
aMem
[
pOp
->
p2
];

1417 
pOut
 = &
aMem
[
pOp
->
p3
];

1418 
	`as£π
–
pIn1
!=
pOut
 );

1419 if–(
pIn1
->
Êags
 | 
pIn2
->ÊagsË& 
MEM_NuŒ
 ){

1420 
	`sqlôe3VdbeMemSëNuŒ
(
pOut
);

1423 if–
	`Ex∑ndBlob
(
pIn1
Ë|| Ex∑ndBlob(
pIn2
ËË
no_mem
;

1424 
	`Såögify
(
pIn1
, 
ícodög
);

1425 
	`Såögify
(
pIn2
, 
ícodög
);

1426 
nByã
 = 
pIn1
->
n
 + 
pIn2
->n;

1427 if–
nByã
>
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
] ){

1428 
too_big
;

1430 if–
	`sqlôe3VdbeMemGrow
(
pOut
, ()
nByã
+2,ÖOut==
pIn2
) ){

1431 
no_mem
;

1433 
	`MemSëTy≥Fœg
(
pOut
, 
MEM_Så
);

1434 if–
pOut
!=
pIn2
 ){

1435 
	`mem˝y
(
pOut
->
z
, 
pIn2
->z,ÖIn2->
n
);

1437 
	`mem˝y
(&
pOut
->
z
[
pIn2
->
n
], 
pIn1
->z,ÖIn1->n);

1438 
pOut
->
z
[
nByã
]=0;

1439 
pOut
->
z
[
nByã
+1] = 0;

1440 
pOut
->
Êags
 |
MEM_Tîm
;

1441 
pOut
->
n
 = ()
nByã
;

1442 
pOut
->
íc
 = 
ícodög
;

1443 
	`UPDATE_MAX_BLOBSIZE
(
pOut
);

1485 
OP_Add
:

1486 
OP_Subåa˘
:

1487 
OP_Mu…ùly
:

1488 
OP_Divide
:

1489 
OP_Remaödî
: {

1490 
bI¡öt
;

1491 
u16
 
Êags
;

1492 
u16
 
ty≥1
;

1493 
u16
 
ty≥2
;

1494 
i64
 
iA
;

1495 
i64
 
iB
;

1496 
rA
;

1497 
rB
;

1499 
pIn1
 = &
aMem
[
pOp
->
p1
];

1500 
ty≥1
 = 
	`numîicTy≥
(
pIn1
);

1501 
pIn2
 = &
aMem
[
pOp
->
p2
];

1502 
ty≥2
 = 
	`numîicTy≥
(
pIn2
);

1503 
pOut
 = &
aMem
[
pOp
->
p3
];

1504 
Êags
 = 
pIn1
->Êag†| 
pIn2
->flags;

1505 if–(
Êags
 & 
MEM_NuŒ
)!=0 ) 
¨ôhmëic_ªsu…_is_nuŒ
;

1506 if–(
ty≥1
 & 
ty≥2
 & 
MEM_I¡
)!=0 ){

1507 
iA
 = 
pIn1
->
u
.
i
;

1508 
iB
 = 
pIn2
->
u
.
i
;

1509 
bI¡öt
 = 1;

1510  
pOp
->
›code
 ){

1511 
OP_Add
: if–
	`sqlôe3AddI¡64
(&
iB
,
iA
ËË
Â_m©h
; ;

1512 
OP_Subåa˘
: if–
	`sqlôe3SubI¡64
(&
iB
,
iA
ËË
Â_m©h
; ;

1513 
OP_Mu…ùly
: if–
	`sqlôe3MulI¡64
(&
iB
,
iA
ËË
Â_m©h
; ;

1514 
OP_Divide
: {

1515 if–
iA
==0 ) 
¨ôhmëic_ªsu…_is_nuŒ
;

1516 if–
iA
==-1 && 
iB
==
SMALLEST_INT64
 ) 
Â_m©h
;

1517 
iB
 /
iA
;

1521 if–
iA
==0 ) 
¨ôhmëic_ªsu…_is_nuŒ
;

1522 if–
iA
==-1 ) iA = 1;

1523 
iB
 %
iA
;

1527 
pOut
->
u
.
i
 = 
iB
;

1528 
	`MemSëTy≥Fœg
(
pOut
, 
MEM_I¡
);

1530 
bI¡öt
 = 0;

1531 
Â_m©h
:

1532 
rA
 = 
	`sqlôe3VdbeRólVÆue
(
pIn1
);

1533 
rB
 = 
	`sqlôe3VdbeRólVÆue
(
pIn2
);

1534  
pOp
->
›code
 ){

1535 
OP_Add
: 
rB
 +
rA
; ;

1536 
OP_Subåa˘
: 
rB
 -
rA
; ;

1537 
OP_Mu…ùly
: 
rB
 *
rA
; ;

1538 
OP_Divide
: {

1540 if–
rA
==()0 ) 
¨ôhmëic_ªsu…_is_nuŒ
;

1541 
rB
 /
rA
;

1545 
iA
 = (
i64
)
rA
;

1546 
iB
 = (
i64
)
rB
;

1547 if–
iA
==0 ) 
¨ôhmëic_ªsu…_is_nuŒ
;

1548 if–
iA
==-1 ) iA = 1;

1549 
rB
 = ()(
iB
 % 
iA
);

1553 #ifde‡
SQLITE_OMIT_FLOATING_POINT


1554 
pOut
->
u
.
i
 = 
rB
;

1555 
	`MemSëTy≥Fœg
(
pOut
, 
MEM_I¡
);

1557 if–
	`sqlôe3IsNaN
(
rB
) ){

1558 
¨ôhmëic_ªsu…_is_nuŒ
;

1560 
pOut
->
u
.
r
 = 
rB
;

1561 
	`MemSëTy≥Fœg
(
pOut
, 
MEM_Ról
);

1562 if–((
ty≥1
|
ty≥2
)&
MEM_Ról
)==0 && !
bI¡öt
 ){

1563 
	`sqlôe3VdbeI¡egîAfföôy
(
pOut
);

1569 
¨ôhmëic_ªsu…_is_nuŒ
:

1570 
	`sqlôe3VdbeMemSëNuŒ
(
pOut
);

1589 
OP_CﬁlSeq
: {

1590 
	`as£π
–
pOp
->
p4ty≥
==
P4_COLLSEQ
 );

1591 if–
pOp
->
p1
 ){

1592 
	`sqlôe3VdbeMemSëI¡64
(&
aMem
[
pOp
->
p1
], 0);

1638 
OP_Fun˘i⁄0
: {

1639 
n
;

1640 
sqlôe3_c⁄ãxt
 *
pCtx
;

1642 
	`as£π
–
pOp
->
p4ty≥
==
P4_FUNCDEF
 );

1643 
n
 = 
pOp
->
p5
;

1644 
	`as£π
–
pOp
->
p3
>0 &&ÖOp->p3<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

1645 
	`as£π
–
n
==0 || (
pOp
->
p2
>0 &&ÖOp->p2+n<=(
p
->
nMem
+1 -Ö->
nCurs‹
)+1) );

1646 
	`as£π
–
pOp
->
p3
<pOp->
p2
 ||ÖOp->p3>ıOp->p2+
n
 );

1647 
pCtx
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, (*pCtxË+ (
n
-1)*(
sqlôe3_vÆue
*));

1648 if–
pCtx
==0 ) 
no_mem
;

1649 
pCtx
->
pOut
 = 0;

1650 
pCtx
->
pFunc
 = 
pOp
->
p4
.pFunc;

1651 
pCtx
->
iOp
 = ()(
pOp
 - 
aOp
);

1652 
pCtx
->
pVdbe
 = 
p
;

1653 
pCtx
->
¨gc
 = 
n
;

1654 
pOp
->
p4ty≥
 = 
P4_FUNCCTX
;

1655 
pOp
->
p4
.
pCtx
 =ÖCtx;

1656 
pOp
->
›code
 = 
OP_Fun˘i⁄
;

1659 
OP_Fun˘i⁄
: {

1660 
i
;

1661 
sqlôe3_c⁄ãxt
 *
pCtx
;

1663 
	`as£π
–
pOp
->
p4ty≥
==
P4_FUNCCTX
 );

1664 
pCtx
 = 
pOp
->
p4
.pCtx;

1670 
pOut
 = &
aMem
[
pOp
->
p3
];

1671 if–
pCtx
->
pOut
 !=ÖOut ){

1672 
pCtx
->
pOut
 =ÖOut;

1673 
i
=
pCtx
->
¨gc
-1; i>=0; i--ËpCtx->
¨gv
[i] = &
aMem
[
pOp
->
p2
+i];

1676 
	`memAboutToCh™ge
(
p
, 
pCtx
->
pOut
);

1677 #ifde‡
SQLITE_DEBUG


1678 
i
=0; i<
pCtx
->
¨gc
; i++){

1679 
	`as£π
–
	`memIsVÆid
(
pCtx
->
¨gv
[
i
]) );

1680 
	`REGISTER_TRACE
(
pOp
->
p2
+
i
, 
pCtx
->
¨gv
[i]);

1683 
	`MemSëTy≥Fœg
(
pCtx
->
pOut
, 
MEM_NuŒ
);

1684 
pCtx
->
fEº‹OrAux
 = 0;

1685 
db
->
œ°Rowid
 =ÜastRowid;

1686 (*
pCtx
->
pFunc
->
xSFunc
)’Ctx,ÖCtx->
¨gc
,ÖCtx->
¨gv
);

1687 
œ°Rowid
 = 
db
->lastRowid;

1690 if–
pCtx
->
fEº‹OrAux
 ){

1691 if–
pCtx
->
isEº‹
 ){

1692 
	`sqlôe3VdbeEº‹
(
p
, "%s", 
	`sqlôe3_vÆue_ãxt
(
pCtx
->
pOut
));

1693 
rc
 = 
pCtx
->
isEº‹
;

1695 
	`sqlôe3VdbeDñëeAuxD©a
(
db
, &
p
->
pAuxD©a
, 
pCtx
->
iOp
, 
pOp
->
p1
);

1696 if–
rc
 ) 
ab‹t_due_to_îr‹
;

1700 if–
pOut
->
Êags
 & (
MEM_Så
|
MEM_Blob
) ){

1701 
	`sqlôe3VdbeCh™geEncodög
(
pCtx
->
pOut
, 
ícodög
);

1702 if–
	`sqlôe3VdbeMemTooBig
(
pCtx
->
pOut
ËË
too_big
;

1705 
	`REGISTER_TRACE
(
pOp
->
p3
, 
pCtx
->
pOut
);

1706 
	`UPDATE_MAX_BLOBSIZE
(
pCtx
->
pOut
);

1740 
OP_BôAnd
:

1741 
OP_BôOr
:

1742 
OP_Shi·Le·
:

1743 
OP_Shi·Right
: {

1744 
i64
 
iA
;

1745 
u64
 
uA
;

1746 
i64
 
iB
;

1747 
u8
 
›
;

1749 
pIn1
 = &
aMem
[
pOp
->
p1
];

1750 
pIn2
 = &
aMem
[
pOp
->
p2
];

1751 
pOut
 = &
aMem
[
pOp
->
p3
];

1752 if–(
pIn1
->
Êags
 | 
pIn2
->ÊagsË& 
MEM_NuŒ
 ){

1753 
	`sqlôe3VdbeMemSëNuŒ
(
pOut
);

1756 
iA
 = 
	`sqlôe3VdbeI¡VÆue
(
pIn2
);

1757 
iB
 = 
	`sqlôe3VdbeI¡VÆue
(
pIn1
);

1758 
›
 = 
pOp
->
›code
;

1759 if–
›
==
OP_BôAnd
 ){

1760 
iA
 &
iB
;

1761 }if–
›
==
OP_BôOr
 ){

1762 
iA
 |
iB
;

1763 }if–
iB
!=0 ){

1764 
	`as£π
–
›
==
OP_Shi·Right
 || op==
OP_Shi·Le·
 );

1767 if–
iB
<0 ){

1768 
	`as£π
–
OP_Shi·Right
==
OP_Shi·Le·
+1 );

1769 
›
 = 2*
OP_Shi·Le·
 + 1 - op;

1770 
iB
 = iB>(-64) ? -iB : 64;

1773 if–
iB
>=64 ){

1774 
iA
 = (iA>=0 || 
›
==
OP_Shi·Le·
) ? 0 : -1;

1776 
	`mem˝y
(&
uA
, &
iA
, (uA));

1777 if–
›
==
OP_Shi·Le·
 ){

1778 
uA
 <<
iB
;

1780 
uA
 >>
iB
;

1782 if–
iA
<0 ) 
uA
 |((((
u64
)0xffffffff)<<32)|0xffffffffË<< (64-
iB
);

1784 
	`mem˝y
(&
iA
, &
uA
, (iA));

1787 
pOut
->
u
.
i
 = 
iA
;

1788 
	`MemSëTy≥Fœg
(
pOut
, 
MEM_I¡
);

1800 
OP_AddImm
: {

1801 
pIn1
 = &
aMem
[
pOp
->
p1
];

1802 
	`memAboutToCh™ge
(
p
, 
pIn1
);

1803 
	`sqlôe3VdbeMemI¡egîify
(
pIn1
);

1804 
pIn1
->
u
.
i
 +
pOp
->
p2
;

1815 
OP_Mu°BeI¡
: {

1816 
pIn1
 = &
aMem
[
pOp
->
p1
];

1817 if–(
pIn1
->
Êags
 & 
MEM_I¡
)==0 ){

1818 
	`≠∂yAfföôy
(
pIn1
, 
SQLITE_AFF_NUMERIC
, 
ícodög
);

1819 
	`VdbeBønchTakí
((
pIn1
->
Êags
&
MEM_I¡
)==0, 2);

1820 if–(
pIn1
->
Êags
 & 
MEM_I¡
)==0 ){

1821 if–
pOp
->
p2
==0 ){

1822 
rc
 = 
SQLITE_MISMATCH
;

1823 
ab‹t_due_to_îr‹
;

1825 
jump_to_p2
;

1829 
	`MemSëTy≥Fœg
(
pIn1
, 
MEM_I¡
);

1833 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


1843 
OP_RólAfföôy
: {

1844 
pIn1
 = &
aMem
[
pOp
->
p1
];

1845 if–
pIn1
->
Êags
 & 
MEM_I¡
 ){

1846 
	`sqlôe3VdbeMemRólify
(
pIn1
);

1852 #i‚de‡
SQLITE_OMIT_CAST


1868 
OP_Ca°
: {

1869 
	`as£π
–
pOp
->
p2
>=
SQLITE_AFF_BLOB
 &&ÖOp->p2<=
SQLITE_AFF_REAL
 );

1870 
	`ã°ˇ£
–
pOp
->
p2
==
SQLITE_AFF_TEXT
 );

1871 
	`ã°ˇ£
–
pOp
->
p2
==
SQLITE_AFF_BLOB
 );

1872 
	`ã°ˇ£
–
pOp
->
p2
==
SQLITE_AFF_NUMERIC
 );

1873 
	`ã°ˇ£
–
pOp
->
p2
==
SQLITE_AFF_INTEGER
 );

1874 
	`ã°ˇ£
–
pOp
->
p2
==
SQLITE_AFF_REAL
 );

1875 
pIn1
 = &
aMem
[
pOp
->
p1
];

1876 
	`memAboutToCh™ge
(
p
, 
pIn1
);

1877 
rc
 = 
	`Ex∑ndBlob
(
pIn1
);

1878 
	`sqlôe3VdbeMemCa°
(
pIn1
, 
pOp
->
p2
, 
ícodög
);

1879 
	`UPDATE_MAX_BLOBSIZE
(
pIn1
);

1880 if–
rc
 ) 
ab‹t_due_to_îr‹
;

1981 
OP_Eq
:

1982 
OP_Ne
:

1983 
OP_Lt
:

1984 
OP_Le
:

1985 
OP_Gt
:

1986 
OP_Ge
: {

1987 
ªs
, 
ªs2
;

1988 
afföôy
;

1989 
u16
 
Êags1
;

1990 
u16
 
Êags3
;

1992 
pIn1
 = &
aMem
[
pOp
->
p1
];

1993 
pIn3
 = &
aMem
[
pOp
->
p3
];

1994 
Êags1
 = 
pIn1
->
Êags
;

1995 
Êags3
 = 
pIn3
->
Êags
;

1996 if–(
Êags1
 | 
Êags3
)&
MEM_NuŒ
 ){

1998 if–
pOp
->
p5
 & 
SQLITE_NULLEQ
 ){

2003 
	`as£π
–
pOp
->
›code
==
OP_Eq
 ||ÖOp->›code==
OP_Ne
 );

2004 
	`as£π
–(
Êags1
 & 
MEM_CÀ¨ed
)==0 );

2005 
	`as£π
–(
pOp
->
p5
 & 
SQLITE_JUMPIFNULL
)==0 );

2006 if–(
Êags1
&
Êags3
&
MEM_NuŒ
)!=0

2007 && (
Êags3
&
MEM_CÀ¨ed
)==0

2009 
ªs
 = 0;

2011 
ªs
 = 1;

2018 if–
pOp
->
p5
 & 
SQLITE_STOREP2
 ){

2019 
pOut
 = &
aMem
[
pOp
->
p2
];

2020 
iCom∑ª
 = 1;

2021 
	`memAboutToCh™ge
(
p
, 
pOut
);

2022 
	`MemSëTy≥Fœg
(
pOut
, 
MEM_NuŒ
);

2023 
	`REGISTER_TRACE
(
pOp
->
p2
, 
pOut
);

2025 
	`VdbeBønchTakí
(2,3);

2026 if–
pOp
->
p5
 & 
SQLITE_JUMPIFNULL
 ){

2027 
jump_to_p2
;

2034 
afföôy
 = 
pOp
->
p5
 & 
SQLITE_AFF_MASK
;

2035 if–
afföôy
>=
SQLITE_AFF_NUMERIC
 ){

2036 if–(
Êags1
 | 
Êags3
)&
MEM_Så
 ){

2037 if–(
Êags1
 & (
MEM_I¡
|
MEM_Ról
|
MEM_Så
))==MEM_Str ){

2038 
	`≠∂yNumîicAfföôy
(
pIn1
,0);

2039 
	`ã°ˇ£
–
Êags3
!=
pIn3
->
Êags
 );

2040 
Êags3
 = 
pIn3
->
Êags
;

2042 if–(
Êags3
 & (
MEM_I¡
|
MEM_Ról
|
MEM_Så
))==MEM_Str ){

2043 
	`≠∂yNumîicAfföôy
(
pIn3
,0);

2048 if–(
pIn1
->
Êags
 & 
pIn3
->Êag†& 
MEM_I¡
)!=0 ){

2049 if–
pIn3
->
u
.
i
 > 
pIn1
->u.ò){ 
ªs
 = +1; 
com∑ª_›
; }

2050 if–
pIn3
->
u
.
i
 < 
pIn1
->u.ò){ 
ªs
 = -1; 
com∑ª_›
; }

2051 
ªs
 = 0;

2052 
com∑ª_›
;

2054 }if–
afföôy
==
SQLITE_AFF_TEXT
 ){

2055 if–(
Êags1
 & 
MEM_Så
)==0 && (Êags1 & (
MEM_I¡
|
MEM_Ról
))!=0 ){

2056 
	`ã°ˇ£
–
pIn1
->
Êags
 & 
MEM_I¡
 );

2057 
	`ã°ˇ£
–
pIn1
->
Êags
 & 
MEM_Ról
 );

2058 
	`sqlôe3VdbeMemSåögify
(
pIn1
, 
ícodög
, 1);

2059 
	`ã°ˇ£
–(
Êags1
&
MEM_Dyn
Ë!(
pIn1
->
Êags
&MEM_Dyn) );

2060 
Êags1
 = (
pIn1
->
Êags
 & ~
MEM_Ty≥Mask
) | (flags1 & MEM_TypeMask);

2061 
	`as£π
–
pIn1
!=
pIn3
 );

2063 if–(
Êags3
 & 
MEM_Så
)==0 && (Êags3 & (
MEM_I¡
|
MEM_Ról
))!=0 ){

2064 
	`ã°ˇ£
–
pIn3
->
Êags
 & 
MEM_I¡
 );

2065 
	`ã°ˇ£
–
pIn3
->
Êags
 & 
MEM_Ról
 );

2066 
	`sqlôe3VdbeMemSåögify
(
pIn3
, 
ícodög
, 1);

2067 
	`ã°ˇ£
–(
Êags3
&
MEM_Dyn
Ë!(
pIn3
->
Êags
&MEM_Dyn) );

2068 
Êags3
 = (
pIn3
->
Êags
 & ~
MEM_Ty≥Mask
) | (flags3 & MEM_TypeMask);

2071 
	`as£π
–
pOp
->
p4ty≥
==
P4_COLLSEQ
 ||ÖOp->
p4
.
pCﬁl
==0 );

2072 
ªs
 = 
	`sqlôe3MemCom∑ª
(
pIn3
, 
pIn1
, 
pOp
->
p4
.
pCﬁl
);

2074 
com∑ª_›
:

2075  
pOp
->
›code
 ){

2076 
OP_Eq
: 
ªs2
 = 
ªs
==0; ;

2077 
OP_Ne
: 
ªs2
 = 
ªs
; ;

2078 
OP_Lt
: 
ªs2
 = 
ªs
<0; ;

2079 
OP_Le
: 
ªs2
 = 
ªs
<=0; ;

2080 
OP_Gt
: 
ªs2
 = 
ªs
>0; ;

2081 : 
ªs2
 = 
ªs
>=0; ;

2085 
	`as£π
–(
pIn1
->
Êags
 & 
MEM_Dyn
Ë=(
Êags1
 & MEM_Dyn) );

2086 
pIn1
->
Êags
 = 
Êags1
;

2087 
	`as£π
–(
pIn3
->
Êags
 & 
MEM_Dyn
Ë=(
Êags3
 & MEM_Dyn) );

2088 
pIn3
->
Êags
 = 
Êags3
;

2090 if–
pOp
->
p5
 & 
SQLITE_STOREP2
 ){

2091 
pOut
 = &
aMem
[
pOp
->
p2
];

2092 
iCom∑ª
 = 
ªs
;

2093 
ªs2
 =Ñes2!=0;

2094 if–(
pOp
->
p5
 & 
SQLITE_KEEPNULL
)!=0 ){

2102 
	`as£π
–
pOp
->
›code
==
OP_Ne
 ||ÖOp->›code==
OP_Eq
 );

2103 
	`as£π
–
ªs2
==0 ||Ñes2==1 );

2104 
	`ã°ˇ£
–
ªs2
==0 && 
pOp
->
›code
==
OP_Eq
 );

2105 
	`ã°ˇ£
–
ªs2
==1 && 
pOp
->
›code
==
OP_Eq
 );

2106 
	`ã°ˇ£
–
ªs2
==0 && 
pOp
->
›code
==
OP_Ne
 );

2107 
	`ã°ˇ£
–
ªs2
==1 && 
pOp
->
›code
==
OP_Ne
 );

2108 if–(
pOp
->
›code
==
OP_Eq
)==
ªs2
 ) ;

2110 
	`memAboutToCh™ge
(
p
, 
pOut
);

2111 
	`MemSëTy≥Fœg
(
pOut
, 
MEM_I¡
);

2112 
pOut
->
u
.
i
 = 
ªs2
;

2113 
	`REGISTER_TRACE
(
pOp
->
p2
, 
pOut
);

2115 
	`VdbeBønchTakí
(
ªs
!=0, (
pOp
->
p5
 & 
SQLITE_NULLEQ
)?2:3);

2116 if–
ªs2
 ){

2117 
jump_to_p2
;

2131 
OP_El£NŸEq
: {

2132 
	`as£π
–
pOp
>
aOp
 );

2133 
	`as£π
–
pOp
[-1].
›code
==
OP_Lt
 ||ÖOp[-1].›code==
OP_Gt
 );

2134 
	`as£π
–
pOp
[-1].
p5
 & 
SQLITE_STOREP2
 );

2135 
	`VdbeBønchTakí
(
iCom∑ª
!=0, 2);

2136 if–
iCom∑ª
!=0 ) 
jump_to_p2
;

2153 
OP_Pîmuèti⁄
: {

2154 
	`as£π
–
pOp
->
p4ty≥
==
P4_INTARRAY
 );

2155 
	`as£π
–
pOp
->
p4
.
ai
 );

2156 
aPîmuã
 = 
pOp
->
p4
.
ai
 + 1;

2180 
OP_Com∑ª
: {

2181 
n
;

2182 
i
;

2183 
p1
;

2184 
p2
;

2185 c⁄° 
KeyInfo
 *
pKeyInfo
;

2186 
idx
;

2187 
CﬁlSeq
 *
pCﬁl
;

2188 
bRev
;

2190 if–(
pOp
->
p5
 & 
OPFLAG_PERMUTE
)==0 ) 
aPîmuã
 = 0;

2191 
n
 = 
pOp
->
p3
;

2192 
pKeyInfo
 = 
pOp
->
p4
.pKeyInfo;

2193 
	`as£π
–
n
>0 );

2194 
	`as£π
–
pKeyInfo
!=0 );

2195 
p1
 = 
pOp
->p1;

2196 
p2
 = 
pOp
->p2;

2197 #i‡
SQLITE_DEBUG


2198 if–
aPîmuã
 ){

2199 
k
, 
mx
 = 0;

2200 
k
=0; k<
n
; k++Ëif–
aPîmuã
[k]>
mx
 ) mx =áPermute[k];

2201 
	`as£π
–
p1
>0 &&Ö1+
mx
<=(
p
->
nMem
+1 -Ö->
nCurs‹
)+1 );

2202 
	`as£π
–
p2
>0 &&Ö2+
mx
<=(
p
->
nMem
+1 -Ö->
nCurs‹
)+1 );

2204 
	`as£π
–
p1
>0 &&Ö1+
n
<=(
p
->
nMem
+1 -Ö->
nCurs‹
)+1 );

2205 
	`as£π
–
p2
>0 &&Ö2+
n
<=(
p
->
nMem
+1 -Ö->
nCurs‹
)+1 );

2208 
i
=0; i<
n
; i++){

2209 
idx
 = 
aPîmuã
 ?áPîmuã[
i
] : i;

2210 
	`as£π
–
	`memIsVÆid
(&
aMem
[
p1
+
idx
]) );

2211 
	`as£π
–
	`memIsVÆid
(&
aMem
[
p2
+
idx
]) );

2212 
	`REGISTER_TRACE
(
p1
+
idx
, &
aMem
[p1+idx]);

2213 
	`REGISTER_TRACE
(
p2
+
idx
, &
aMem
[p2+idx]);

2214 
	`as£π
–
i
<
pKeyInfo
->
nFõld
 );

2215 
pCﬁl
 = 
pKeyInfo
->
aCﬁl
[
i
];

2216 
bRev
 = 
pKeyInfo
->
aS‹tOrdî
[
i
];

2217 
iCom∑ª
 = 
	`sqlôe3MemCom∑ª
(&
aMem
[
p1
+
idx
], &aMem[
p2
+idx], 
pCﬁl
);

2218 if–
iCom∑ª
 ){

2219 if–
bRev
 ) 
iCom∑ª
 = -iCompare;

2223 
aPîmuã
 = 0;

2233 
OP_Jump
: {

2234 if–
iCom∑ª
<0 ){

2235 
	`VdbeBønchTakí
(0,3); 
pOp
 = &
aOp
[pOp->
p1
 - 1];

2236 }if–
iCom∑ª
==0 ){

2237 
	`VdbeBønchTakí
(1,3); 
pOp
 = &
aOp
[pOp->
p2
 - 1];

2239 
	`VdbeBønchTakí
(2,3); 
pOp
 = &
aOp
[pOp->
p3
 - 1];

2264 
OP_And
:

2265 
OP_Or
: {

2266 
v1
;

2267 
v2
;

2269 
pIn1
 = &
aMem
[
pOp
->
p1
];

2270 if–
pIn1
->
Êags
 & 
MEM_NuŒ
 ){

2271 
v1
 = 2;

2273 
v1
 = 
	`sqlôe3VdbeI¡VÆue
(
pIn1
)!=0;

2275 
pIn2
 = &
aMem
[
pOp
->
p2
];

2276 if–
pIn2
->
Êags
 & 
MEM_NuŒ
 ){

2277 
v2
 = 2;

2279 
v2
 = 
	`sqlôe3VdbeI¡VÆue
(
pIn2
)!=0;

2281 if–
pOp
->
›code
==
OP_And
 ){

2282 c⁄° 
™d_logic
[] = { 0, 0, 0, 0, 1, 2, 0, 2, 2 };

2283 
v1
 = 
™d_logic
[v1*3+
v2
];

2285 c⁄° 
‹_logic
[] = { 0, 1, 2, 1, 1, 1, 2, 1, 2 };

2286 
v1
 = 
‹_logic
[v1*3+
v2
];

2288 
pOut
 = &
aMem
[
pOp
->
p3
];

2289 if–
v1
==2 ){

2290 
	`MemSëTy≥Fœg
(
pOut
, 
MEM_NuŒ
);

2292 
pOut
->
u
.
i
 = 
v1
;

2293 
	`MemSëTy≥Fœg
(
pOut
, 
MEM_I¡
);

2305 
OP_NŸ
: {

2306 
pIn1
 = &
aMem
[
pOp
->
p1
];

2307 
pOut
 = &
aMem
[
pOp
->
p2
];

2308 
	`sqlôe3VdbeMemSëNuŒ
(
pOut
);

2309 if–(
pIn1
->
Êags
 & 
MEM_NuŒ
)==0 ){

2310 
pOut
->
Êags
 = 
MEM_I¡
;

2311 
pOut
->
u
.
i
 = !
	`sqlôe3VdbeI¡VÆue
(
pIn1
);

2323 
OP_BôNŸ
: {

2324 
pIn1
 = &
aMem
[
pOp
->
p1
];

2325 
pOut
 = &
aMem
[
pOp
->
p2
];

2326 
	`sqlôe3VdbeMemSëNuŒ
(
pOut
);

2327 if–(
pIn1
->
Êags
 & 
MEM_NuŒ
)==0 ){

2328 
pOut
->
Êags
 = 
MEM_I¡
;

2329 
pOut
->
u
.
i
 = ~
	`sqlôe3VdbeI¡VÆue
(
pIn1
);

2341 
OP_On˚
: {

2342 
	`as£π
–
p
->
aOp
[0].
›code
==
OP_Inô
 );

2343 
	`VdbeBønchTakí
(
p
->
aOp
[0].
p1
==
pOp
->p1, 2);

2344 if–
p
->
aOp
[0].
p1
==
pOp
->p1 ){

2345 
jump_to_p2
;

2347 
pOp
->
p1
 = 
p
->
aOp
[0].p1;

2364 
OP_If
:

2365 
OP_IfNŸ
: {

2366 
c
;

2367 
pIn1
 = &
aMem
[
pOp
->
p1
];

2368 if–
pIn1
->
Êags
 & 
MEM_NuŒ
 ){

2369 
c
 = 
pOp
->
p3
;

2371 #ifde‡
SQLITE_OMIT_FLOATING_POINT


2372 
c
 = 
	`sqlôe3VdbeI¡VÆue
(
pIn1
)!=0;

2374 
c
 = 
	`sqlôe3VdbeRólVÆue
(
pIn1
)!=0.0;

2376 if–
pOp
->
›code
==
OP_IfNŸ
 ) 
c
 = !c;

2378 
	`VdbeBønchTakí
(
c
!=0, 2);

2379 if–
c
 ){

2380 
jump_to_p2
;

2390 
OP_IsNuŒ
: {

2391 
pIn1
 = &
aMem
[
pOp
->
p1
];

2392 
	`VdbeBønchTakí
–(
pIn1
->
Êags
 & 
MEM_NuŒ
)!=0, 2);

2393 if–(
pIn1
->
Êags
 & 
MEM_NuŒ
)!=0 ){

2394 
jump_to_p2
;

2404 
OP_NŸNuŒ
: {

2405 
pIn1
 = &
aMem
[
pOp
->
p1
];

2406 
	`VdbeBønchTakí
–(
pIn1
->
Êags
 & 
MEM_NuŒ
)==0, 2);

2407 if–(
pIn1
->
Êags
 & 
MEM_NuŒ
)==0 ){

2408 
jump_to_p2
;

2438 
OP_Cﬁumn
: {

2439 
p2
;

2440 
VdbeCurs‹
 *
pC
;

2441 
BtCurs‹
 *
pCr§
;

2442 
u32
 *
aOff£t
;

2443 
Àn
;

2444 
i
;

2445 
Mem
 *
pDe°
;

2446 
Mem
 
sMem
;

2447 c⁄° 
u8
 *
zD©a
;

2448 c⁄° 
u8
 *
zHdr
;

2449 c⁄° 
u8
 *
zEndHdr
;

2450 
u32
 
off£t
;

2451 
u64
 
off£t64
;

2452 
u32
 
avaû
;

2453 
u32
 
t
;

2454 
Mem
 *
pReg
;

2456 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

2457 
p2
 = 
pOp
->p2;

2460 
rc
 = 
	`sqlôe3VdbeCurs‹Movëo
(&
pC
, &
p2
);

2461 if–
rc
 ) 
ab‹t_due_to_îr‹
;

2463 
	`as£π
–
pOp
->
p3
>0 &&ÖOp->p3<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

2464 
pDe°
 = &
aMem
[
pOp
->
p3
];

2465 
	`memAboutToCh™ge
(
p
, 
pDe°
);

2466 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

2467 
	`as£π
–
pC
!=0 );

2468 
	`as£π
–
p2
<
pC
->
nFõld
 );

2469 
aOff£t
 = 
pC
->aOffset;

2470 
	`as£π
–
pC
->
eCurTy≥
!=
CURTYPE_VTAB
 );

2471 
	`as£π
–
pC
->
eCurTy≥
!=
CURTYPE_PSEUDO
 ||ÖC->
nuŒRow
 );

2472 
	`as£π
–
pC
->
eCurTy≥
!=
CURTYPE_SORTER
 );

2474 if–
pC
->
ˇcheSètus
!=
p
->
ˇcheCå
 ){

2475 if–
pC
->
nuŒRow
 ){

2476 if–
pC
->
eCurTy≥
==
CURTYPE_PSEUDO
 ){

2477 
	`as£π
–
pC
->
uc
.
p£udoTabÀReg
>0 );

2478 
pReg
 = &
aMem
[
pC
->
uc
.
p£udoTabÀReg
];

2479 
	`as£π
–
pReg
->
Êags
 & 
MEM_Blob
 );

2480 
	`as£π
–
	`memIsVÆid
(
pReg
) );

2481 
pC
->
∑ylﬂdSize
 =ÖC->
szRow
 = 
avaû
 = 
pReg
->
n
;

2482 
pC
->
aRow
 = (
u8
*)
pReg
->
z
;

2484 
	`sqlôe3VdbeMemSëNuŒ
(
pDe°
);

2485 
›_cﬁumn_out
;

2488 
pCr§
 = 
pC
->
uc
.
pCurs‹
;

2489 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

2490 
	`as£π
–
pCr§
 );

2491 
	`as£π
–
	`sqlôe3BåìCurs‹IsVÆid
(
pCr§
) );

2492 
pC
->
∑ylﬂdSize
 = 
	`sqlôe3BåìPaylﬂdSize
(
pCr§
);

2493 
pC
->
aRow
 = 
	`sqlôe3BåìPaylﬂdFëch
(
pCr§
, &
avaû
);

2494 
	`as£π
–
avaû
<=65536 );

2495 if–
pC
->
∑ylﬂdSize
 <(
u32
)
avaû
 ){

2496 
pC
->
szRow
 =ÖC->
∑ylﬂdSize
;

2497 }if–
pC
->
∑ylﬂdSize
 > (
u32
)
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
] ){

2498 
too_big
;

2500 
pC
->
szRow
 = 
avaû
;

2503 
pC
->
ˇcheSètus
 = 
p
->
ˇcheCå
;

2504 
pC
->
iHdrOff£t
 = 
	`gëV¨öt32
’C->
aRow
, 
off£t
);

2505 
pC
->
nHdrP¨£d
 = 0;

2506 
aOff£t
[0] = 
off£t
;

2509 if–
avaû
<
off£t
 ){

2514 
pC
->
aRow
 = 0;

2515 
pC
->
szRow
 = 0;

2526 if–
off£t
 > 98307 || off£à> 
pC
->
∑ylﬂdSize
 ){

2527 
rc
 = 
SQLITE_CORRUPT_BKPT
;

2528 
ab‹t_due_to_îr‹
;

2530 }if–
off£t
>0 ){

2535 
zD©a
 = 
pC
->
aRow
;

2536 
	`as£π
–
pC
->
nHdrP¨£d
<=
p2
 );

2537 
›_cﬁumn_ªad_hódî
;

2544 if–
pC
->
nHdrP¨£d
<=
p2
 ){

2548 if–
pC
->
iHdrOff£t
<
aOff£t
[0] ){

2550 if–
pC
->
aRow
==0 ){

2551 
	`mem£t
(&
sMem
, 0, (sMem));

2552 
rc
 = 
	`sqlôe3VdbeMemFromBåì
(
pC
->
uc
.
pCurs‹
, 0, 
aOff£t
[0], &
sMem
);

2553 if–
rc
!=
SQLITE_OK
 ) 
ab‹t_due_to_îr‹
;

2554 
zD©a
 = (
u8
*)
sMem
.
z
;

2556 
zD©a
 = 
pC
->
aRow
;

2560 
›_cﬁumn_ªad_hódî
:

2561 
i
 = 
pC
->
nHdrP¨£d
;

2562 
off£t64
 = 
aOff£t
[
i
];

2563 
zHdr
 = 
zD©a
 + 
pC
->
iHdrOff£t
;

2564 
zEndHdr
 = 
zD©a
 + 
aOff£t
[0];

2566 if–(
t
 = 
zHdr
[0])<0x80 ){

2567 
zHdr
++;

2568 
off£t64
 +
	`sqlôe3VdbeO√ByãSîülTy≥Lí
(
t
);

2570 
zHdr
 +
	`sqlôe3GëV¨öt32
(zHdr, &
t
);

2571 
off£t64
 +
	`sqlôe3VdbeSîülTy≥Lí
(
t
);

2573 
pC
->
aTy≥
[
i
++] = 
t
;

2574 
aOff£t
[
i
] = (
u32
)(
off£t64
 & 0xffffffff);

2575 } 
i
<=
p2
 && 
zHdr
<
zEndHdr
 );

2582 if–(
zHdr
>=
zEndHdr
 && (zHdr>zEndHd∏|| 
off£t64
!=
pC
->
∑ylﬂdSize
))

2583 || (
off£t64
 > 
pC
->
∑ylﬂdSize
)

2585 if–
pC
->
aRow
==0 ) 
	`sqlôe3VdbeMemRñó£
(&
sMem
);

2586 
rc
 = 
SQLITE_CORRUPT_BKPT
;

2587 
ab‹t_due_to_îr‹
;

2590 
pC
->
nHdrP¨£d
 = 
i
;

2591 
pC
->
iHdrOff£t
 = (
u32
)(
zHdr
 - 
zD©a
);

2592 if–
pC
->
aRow
==0 ) 
	`sqlôe3VdbeMemRñó£
(&
sMem
);

2594 
t
 = 0;

2601 if–
pC
->
nHdrP¨£d
<=
p2
 ){

2602 if–
pOp
->
p4ty≥
==
P4_MEM
 ){

2603 
	`sqlôe3VdbeMemShÆlowC›y
(
pDe°
, 
pOp
->
p4
.
pMem
, 
MEM_Sètic
);

2605 
	`sqlôe3VdbeMemSëNuŒ
(
pDe°
);

2607 
›_cﬁumn_out
;

2610 
t
 = 
pC
->
aTy≥
[
p2
];

2617 
	`as£π
–
p2
<
pC
->
nHdrP¨£d
 );

2618 
	`as£π
–
rc
==
SQLITE_OK
 );

2619 
	`as£π
–
	`sqlôe3VdbeCheckMemInv¨ü¡s
(
pDe°
) );

2620 if–
	`VdbeMemDy«mic
(
pDe°
) ){

2621 
	`sqlôe3VdbeMemSëNuŒ
(
pDe°
);

2623 
	`as£π
–
t
==
pC
->
aTy≥
[
p2
] );

2624 if–
pC
->
szRow
>=
aOff£t
[
p2
+1] ){

2627 
zD©a
 = 
pC
->
aRow
 + 
aOff£t
[
p2
];

2628 if–
t
<12 ){

2629 
	`sqlôe3VdbeSîülGë
(
zD©a
, 
t
, 
pDe°
);

2635 c⁄° 
u16
 
aFœg
[] = { 
MEM_Blob
, 
MEM_Så
|
MEM_Tîm
 };

2636 
pDe°
->
n
 = 
Àn
 = (
t
-12)/2;

2637 
pDe°
->
íc
 = 
ícodög
;

2638 if–
pDe°
->
szMÆloc
 < 
Àn
+2 ){

2639 
pDe°
->
Êags
 = 
MEM_NuŒ
;

2640 if–
	`sqlôe3VdbeMemGrow
(
pDe°
, 
Àn
+2, 0ËË
no_mem
;

2642 
pDe°
->
z
 =ÖDe°->
zMÆloc
;

2644 
	`mem˝y
(
pDe°
->
z
, 
zD©a
, 
Àn
);

2645 
pDe°
->
z
[
Àn
] = 0;

2646 
pDe°
->
z
[
Àn
+1] = 0;

2647 
pDe°
->
Êags
 = 
aFœg
[
t
&1];

2650 
pDe°
->
íc
 = 
ícodög
;

2652 if–((
pOp
->
p5
 & (
OPFLAG_LENGTHARG
|
OPFLAG_TYPEOFARG
))!=0

2653 && ((
t
>=12 && (t&1)==0Ë|| (
pOp
->
p5
 & 
OPFLAG_TYPEOFARG
)!=0))

2654 || (
Àn
 = 
	`sqlôe3VdbeSîülTy≥Lí
(
t
))==0

2662 
u8
 
aZîo
[8];

2663 
	`sqlôe3VdbeSîülGë
(
aZîo
, 
t
, 
pDe°
);

2665 
rc
 = 
	`sqlôe3VdbeMemFromBåì
(
pC
->
uc
.
pCurs‹
, 
aOff£t
[
p2
], 
Àn
, 
pDe°
);

2666 if–
rc
!=
SQLITE_OK
 ) 
ab‹t_due_to_îr‹
;

2667 
	`sqlôe3VdbeSîülGë
((c⁄° 
u8
*)
pDe°
->
z
, 
t
,ÖDest);

2668 
pDe°
->
Êags
 &~
MEM_Ephem
;

2672 
›_cﬁumn_out
:

2673 
	`UPDATE_MAX_BLOBSIZE
(
pDe°
);

2674 
	`REGISTER_TRACE
(
pOp
->
p3
, 
pDe°
);

2687 
OP_Afföôy
: {

2688 c⁄° *
zAfföôy
;

2689 
cAff
;

2691 
zAfföôy
 = 
pOp
->
p4
.
z
;

2692 
	`as£π
–
zAfföôy
!=0 );

2693 
	`as£π
–
zAfföôy
[
pOp
->
p2
]==0 );

2694 
pIn1
 = &
aMem
[
pOp
->
p1
];

2695  (
cAff
 = *(
zAfföôy
++))!=0 ){

2696 
	`as£π
–
pIn1
 <&
p
->
aMem
[’->
nMem
+1 -Ö->
nCurs‹
)] );

2697 
	`as£π
–
	`memIsVÆid
(
pIn1
) );

2698 
	`≠∂yAfföôy
(
pIn1
, 
cAff
, 
ícodög
);

2699 
pIn1
++;

2720 
OP_MakeRec‹d
: {

2721 
u8
 *
zNewRec‹d
;

2722 
Mem
 *
pRec
;

2723 
u64
 
nD©a
;

2724 
nHdr
;

2725 
i64
 
nByã
;

2726 
i64
 
nZîo
;

2727 
nV¨öt
;

2728 
u32
 
£rül_ty≥
;

2729 
Mem
 *
pD©a0
;

2730 
Mem
 *
pLa°
;

2731 
nFõld
;

2732 *
zAfföôy
;

2733 
fûe_f‹m©
;

2734 
i
;

2735 
j
;

2736 
u32
 
Àn
;

2753 
nD©a
 = 0;

2754 
nHdr
 = 0;

2755 
nZîo
 = 0;

2756 
nFõld
 = 
pOp
->
p1
;

2757 
zAfföôy
 = 
pOp
->
p4
.
z
;

2758 
	`as£π
–
nFõld
>0 && 
pOp
->
p2
>0 &&ÖOp->p2+nFõld<=(
p
->
nMem
+1 -Ö->
nCurs‹
)+1 );

2759 
pD©a0
 = &
aMem
[
nFõld
];

2760 
nFõld
 = 
pOp
->
p2
;

2761 
pLa°
 = &
pD©a0
[
nFõld
-1];

2762 
fûe_f‹m©
 = 
p
->
möWrôeFûeF‹m©
;

2765 
	`as£π
–
pOp
->
p3
<pOp->
p1
 ||ÖOp->p3>ıOp->p1+pOp->
p2
 );

2766 
pOut
 = &
aMem
[
pOp
->
p3
];

2767 
	`memAboutToCh™ge
(
p
, 
pOut
);

2771 
	`as£π
–
pD©a0
<=
pLa°
 );

2772 if–
zAfföôy
 ){

2773 
pRec
 = 
pD©a0
;

2775 
	`≠∂yAfföôy
(
pRec
++, *(
zAfföôy
++), 
ícodög
);

2776 
	`as£π
–
zAfföôy
[0]==0 || 
pRec
<=
pLa°
 );

2777 } 
zAfföôy
[0] );

2783 
pRec
 = 
pLa°
;

2785 
	`as£π
–
	`memIsVÆid
(
pRec
) );

2786 
pRec
->
uTemp
 = 
£rül_ty≥
 = 
	`sqlôe3VdbeSîülTy≥
’Rec, 
fûe_f‹m©
, &
Àn
);

2787 if–
pRec
->
Êags
 & 
MEM_Zîo
 ){

2788 if–
nD©a
 ){

2789 if–
	`sqlôe3VdbeMemEx∑ndBlob
(
pRec
ËË
no_mem
;

2791 
nZîo
 +
pRec
->
u
.nZero;

2792 
Àn
 -
pRec
->
u
.
nZîo
;

2795 
nD©a
 +
Àn
;

2796 
	`ã°ˇ£
–
£rül_ty≥
==127 );

2797 
	`ã°ˇ£
–
£rül_ty≥
==128 );

2798 
nHdr
 +
£rül_ty≥
<=127 ? 1 : 
	`sqlôe3V¨ötLí
(serial_type);

2799 if–
pRec
==
pD©a0
 ) ;

2800 
pRec
--;

2807 
	`ã°ˇ£
–
nHdr
==126 );

2808 
	`ã°ˇ£
–
nHdr
==127 );

2809 if–
nHdr
<=126 ){

2811 
nHdr
 += 1;

2814 
nV¨öt
 = 
	`sqlôe3V¨ötLí
(
nHdr
);

2815 
nHdr
 +
nV¨öt
;

2816 if–
nV¨öt
<
	`sqlôe3V¨ötLí
(
nHdr
) )ÇHdr++;

2818 
nByã
 = 
nHdr
+
nD©a
;

2819 if–
nByã
+
nZîo
>
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
] ){

2820 
too_big
;

2828 if–
	`sqlôe3VdbeMemCÀ¨AndResize
(
pOut
, ()
nByã
) ){

2829 
no_mem
;

2831 
zNewRec‹d
 = (
u8
 *)
pOut
->
z
;

2834 
i
 = 
	`putV¨öt32
(
zNewRec‹d
, 
nHdr
);

2835 
j
 = 
nHdr
;

2836 
	`as£π
–
pD©a0
<=
pLa°
 );

2837 
pRec
 = 
pD©a0
;

2839 
£rül_ty≥
 = 
pRec
->
uTemp
;

2842 
i
 +
	`putV¨öt32
(&
zNewRec‹d
[i], 
£rül_ty≥
);

2845 
j
 +
	`sqlôe3VdbeSîülPut
(&
zNewRec‹d
[j], 
pRec
, 
£rül_ty≥
);

2846 } (++
pRec
)<=
pLa°
 );

2847 
	`as£π
–
i
==
nHdr
 );

2848 
	`as£π
–
j
==
nByã
 );

2850 
	`as£π
–
pOp
->
p3
>0 &&ÖOp->p3<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

2851 
pOut
->
n
 = ()
nByã
;

2852 
pOut
->
Êags
 = 
MEM_Blob
;

2853 if–
nZîo
 ){

2854 
pOut
->
u
.
nZîo
 =ÇZero;

2855 
pOut
->
Êags
 |
MEM_Zîo
;

2857 
pOut
->
íc
 = 
SQLITE_UTF8
;

2858 
	`REGISTER_TRACE
(
pOp
->
p3
, 
pOut
);

2859 
	`UPDATE_MAX_BLOBSIZE
(
pOut
);

2869 #i‚de‡
SQLITE_OMIT_BTREECOUNT


2870 
OP_Cou¡
: {

2871 
i64
 
nE¡ry
;

2872 
BtCurs‹
 *
pCr§
;

2874 
	`as£π
–
p
->
≠C§
[
pOp
->
p1
]->
eCurTy≥
==
CURTYPE_BTREE
 );

2875 
pCr§
 = 
p
->
≠C§
[
pOp
->
p1
]->
uc
.
pCurs‹
;

2876 
	`as£π
–
pCr§
 );

2877 
nE¡ry
 = 0;

2878 
rc
 = 
	`sqlôe3BåìCou¡
(
pCr§
, &
nE¡ry
);

2879 if–
rc
 ) 
ab‹t_due_to_îr‹
;

2880 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

2881 
pOut
->
u
.
i
 = 
nE¡ry
;

2892 
OP_Savïoöt
: {

2893 
p1
;

2894 *
zName
;

2895 
nName
;

2896 
Savïoöt
 *
pNew
;

2897 
Savïoöt
 *
pSavïoöt
;

2898 
Savïoöt
 *
pTmp
;

2899 
iSavïoöt
;

2900 
ii
;

2902 
p1
 = 
pOp
->p1;

2903 
zName
 = 
pOp
->
p4
.
z
;

2908 
	`as£π
–
db
->
pSavïoöt
==0 || db->
autoCommô
==0 );

2909 
	`as£π
–
p1
==
SAVEPOINT_BEGIN
||p1==
SAVEPOINT_RELEASE
||p1==
SAVEPOINT_ROLLBACK
 );

2910 
	`as£π
–
db
->
pSavïoöt
 || db->
isTønß˘i⁄Savïoöt
==0 );

2911 
	`as£π
–
	`checkSavïoötCou¡
(
db
) );

2912 
	`as£π
–
p
->
bIsRódî
 );

2914 if–
p1
==
SAVEPOINT_BEGIN
 ){

2915 if–
db
->
nVdbeWrôe
>0 ){

2919 
	`sqlôe3VdbeEº‹
(
p
, "cannot open savepoint - SQL statements inÖrogress");

2920 
rc
 = 
SQLITE_BUSY
;

2922 
nName
 = 
	`sqlôe3SåÀn30
(
zName
);

2924 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


2929 
	`as£π
–
db
->
autoCommô
==0 || db->
nVTøns
==0 );

2930 
rc
 = 
	`sqlôe3VèbSavïoöt
(
db
, 
SAVEPOINT_BEGIN
,

2931 
db
->
nSèãmít
+db->
nSavïoöt
);

2932 if–
rc
!=
SQLITE_OK
 ) 
ab‹t_due_to_îr‹
;

2936 
pNew
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, (
Savïoöt
)+
nName
+1);

2937 if–
pNew
 ){

2938 
pNew
->
zName
 = (*)&pNew[1];

2939 
	`mem˝y
(
pNew
->
zName
, zName, 
nName
+1);

2943 if–
db
->
autoCommô
 ){

2944 
db
->
autoCommô
 = 0;

2945 
db
->
isTønß˘i⁄Savïoöt
 = 1;

2947 
db
->
nSavïoöt
++;

2951 
pNew
->
pNext
 = 
db
->
pSavïoöt
;

2952 
db
->
pSavïoöt
 = 
pNew
;

2953 
pNew
->
nDe„ºedC⁄s
 = 
db
->nDeferredCons;

2954 
pNew
->
nDe„ºedImmC⁄s
 = 
db
->nDeferredImmCons;

2958 
iSavïoöt
 = 0;

2963 
pSavïoöt
 = 
db
->pSavepoint;

2964 
pSavïoöt
 && 
	`sqlôe3SåICmp
’Savïoöt->
zName
, zName);

2965 
pSavïoöt
 =ÖSavïoöt->
pNext


2967 
iSavïoöt
++;

2969 if–!
pSavïoöt
 ){

2970 
	`sqlôe3VdbeEº‹
(
p
, "nÿsuch savïoöt: %s", 
zName
);

2971 
rc
 = 
SQLITE_ERROR
;

2972 }if–
db
->
nVdbeWrôe
>0 && 
p1
==
SAVEPOINT_RELEASE
 ){

2976 
	`sqlôe3VdbeEº‹
(
p
, "cannotÑelease savepoint - "

2978 
rc
 = 
SQLITE_BUSY
;

2985 
isTønß˘i⁄
 = 
pSavïoöt
->
pNext
==0 && 
db
->
isTønß˘i⁄Savïoöt
;

2986 if–
isTønß˘i⁄
 && 
p1
==
SAVEPOINT_RELEASE
 ){

2987 if–(
rc
 = 
	`sqlôe3VdbeCheckFk
(
p
, 1))!=
SQLITE_OK
 ){

2988 
vdbe_ªtu∫
;

2990 
db
->
autoCommô
 = 1;

2991 if–
	`sqlôe3VdbeHÆt
(
p
)==
SQLITE_BUSY
 ){

2992 
p
->
pc
 = ()(
pOp
 - 
aOp
);

2993 
db
->
autoCommô
 = 0;

2994 
p
->
rc
 =Ñ¯
SQLITE_BUSY
;

2995 
vdbe_ªtu∫
;

2997 
db
->
isTønß˘i⁄Savïoöt
 = 0;

2998 
rc
 = 
p
->rc;

3000 
isSchemaCh™ge
;

3001 
iSavïoöt
 = 
db
->
nSavïoöt
 - iSavepoint - 1;

3002 if–
p1
==
SAVEPOINT_ROLLBACK
 ){

3003 
isSchemaCh™ge
 = (
db
->
Êags
 & 
SQLITE_I¡înCh™ges
)!=0;

3004 
ii
=0; ii<
db
->
nDb
; ii++){

3005 
rc
 = 
	`sqlôe3BåìTrùAŒCurs‹s
(
db
->
aDb
[
ii
].
pBt
,

3006 
SQLITE_ABORT_ROLLBACK
,

3007 
isSchemaCh™ge
==0);

3008 if–
rc
!=
SQLITE_OK
 ) 
ab‹t_due_to_îr‹
;

3011 
isSchemaCh™ge
 = 0;

3013 
ii
=0; ii<
db
->
nDb
; ii++){

3014 
rc
 = 
	`sqlôe3BåìSavïoöt
(
db
->
aDb
[
ii
].
pBt
, 
p1
, 
iSavïoöt
);

3015 if–
rc
!=
SQLITE_OK
 ){

3016 
ab‹t_due_to_îr‹
;

3019 if–
isSchemaCh™ge
 ){

3020 
	`sqlôe3ExpúePª∑ªdSèãmíts
(
db
);

3021 
	`sqlôe3Re£tAŒSchemasOfC⁄√˘i⁄
(
db
);

3022 
db
->
Êags
 = (db->Êag†| 
SQLITE_I¡înCh™ges
);

3028  
db
->
pSavïoöt
!=pSavepoint ){

3029 
pTmp
 = 
db
->
pSavïoöt
;

3030 
db
->
pSavïoöt
 = 
pTmp
->
pNext
;

3031 
	`sqlôe3DbFªe
(
db
, 
pTmp
);

3032 
db
->
nSavïoöt
--;

3039 if–
p1
==
SAVEPOINT_RELEASE
 ){

3040 
	`as£π
–
pSavïoöt
==
db
->pSavepoint );

3041 
db
->
pSavïoöt
 =ÖSavïoöt->
pNext
;

3042 
	`sqlôe3DbFªe
(
db
, 
pSavïoöt
);

3043 if–!
isTønß˘i⁄
 ){

3044 
db
->
nSavïoöt
--;

3047 
db
->
nDe„ºedC⁄s
 = 
pSavïoöt
->nDeferredCons;

3048 
db
->
nDe„ºedImmC⁄s
 = 
pSavïoöt
->nDeferredImmCons;

3051 if–!
isTønß˘i⁄
 || 
p1
==
SAVEPOINT_ROLLBACK
 ){

3052 
rc
 = 
	`sqlôe3VèbSavïoöt
(
db
, 
p1
, 
iSavïoöt
);

3053 if–
rc
!=
SQLITE_OK
 ) 
ab‹t_due_to_îr‹
;

3057 if–
rc
 ) 
ab‹t_due_to_îr‹
;

3071 
OP_AutoCommô
: {

3072 
desúedAutoCommô
;

3073 
iRﬁlback
;

3075 
desúedAutoCommô
 = 
pOp
->
p1
;

3076 
iRﬁlback
 = 
pOp
->
p2
;

3077 
	`as£π
–
desúedAutoCommô
==1 || desiredAutoCommit==0 );

3078 
	`as£π
–
desúedAutoCommô
==1 || 
iRﬁlback
==0 );

3079 
	`as£π
–
db
->
nVdbeA˘ive
>0 );

3080 
	`as£π
–
p
->
bIsRódî
 );

3082 if–
desúedAutoCommô
!=
db
->
autoCommô
 ){

3083 if–
iRﬁlback
 ){

3084 
	`as£π
–
desúedAutoCommô
==1 );

3085 
	`sqlôe3RﬁlbackAŒ
(
db
, 
SQLITE_ABORT_ROLLBACK
);

3086 
db
->
autoCommô
 = 1;

3087 }if–
desúedAutoCommô
 && 
db
->
nVdbeWrôe
>0 ){

3091 
	`sqlôe3VdbeEº‹
(
p
, "cannot commitÅransaction - "

3093 
rc
 = 
SQLITE_BUSY
;

3094 
ab‹t_due_to_îr‹
;

3095 }if–(
rc
 = 
	`sqlôe3VdbeCheckFk
(
p
, 1))!=
SQLITE_OK
 ){

3096 
vdbe_ªtu∫
;

3098 
db
->
autoCommô
 = (
u8
)
desúedAutoCommô
;

3100 if–
	`sqlôe3VdbeHÆt
(
p
)==
SQLITE_BUSY
 ){

3101 
p
->
pc
 = ()(
pOp
 - 
aOp
);

3102 
db
->
autoCommô
 = (
u8
)(1-
desúedAutoCommô
);

3103 
p
->
rc
 =Ñ¯
SQLITE_BUSY
;

3104 
vdbe_ªtu∫
;

3106 
	`as£π
–
db
->
nSèãmít
==0 );

3107 
	`sqlôe3Clo£Savïoöts
(
db
);

3108 if–
p
->
rc
==
SQLITE_OK
 ){

3109 
rc
 = 
SQLITE_DONE
;

3111 
rc
 = 
SQLITE_ERROR
;

3113 
vdbe_ªtu∫
;

3115 
	`sqlôe3VdbeEº‹
(
p
,

3116 (!
desúedAutoCommô
)?"cannot startáÅransaction withináÅransaction":(

3117 (
iRﬁlback
)?"cannotÑollback -ÇoÅransaction isáctive":

3120 
rc
 = 
SQLITE_ERROR
;

3121 
ab‹t_due_to_îr‹
;

3160 
OP_Tønß˘i⁄
: {

3161 
Båì
 *
pBt
;

3162 
iMëa
;

3163 
iGí
;

3165 
	`as£π
–
p
->
bIsRódî
 );

3166 
	`as£π
–
p
->
ªadO∆y
==0 || 
pOp
->
p2
==0 );

3167 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
db
->
nDb
 );

3168 
	`as£π
–
	`DbMaskTe°
(
p
->
båìMask
, 
pOp
->
p1
) );

3169 if–
pOp
->
p2
 && (
db
->
Êags
 & 
SQLITE_QuîyO∆y
)!=0 ){

3170 
rc
 = 
SQLITE_READONLY
;

3171 
ab‹t_due_to_îr‹
;

3173 
pBt
 = 
db
->
aDb
[
pOp
->
p1
].pBt;

3175 if–
pBt
 ){

3176 
rc
 = 
	`sqlôe3BåìBegöTøns
(
pBt
, 
pOp
->
p2
);

3177 
	`ã°ˇ£
–
rc
==
SQLITE_BUSY_SNAPSHOT
 );

3178 
	`ã°ˇ£
–
rc
==
SQLITE_BUSY_RECOVERY
 );

3179 if–
rc
!=
SQLITE_OK
 ){

3180 if–(
rc
&0xff)==
SQLITE_BUSY
 ){

3181 
p
->
pc
 = ()(
pOp
 - 
aOp
);

3182 
p
->
rc
 =Ñc;

3183 
vdbe_ªtu∫
;

3185 
ab‹t_due_to_îr‹
;

3188 if–
pOp
->
p2
 && 
p
->
u£sStmtJou∫Æ


3189 && (
db
->
autoCommô
==0 || db->
nVdbeRód
>1)

3191 
	`as£π
–
	`sqlôe3BåìIsInTøns
(
pBt
) );

3192 if–
p
->
iSèãmít
==0 ){

3193 
	`as£π
–
db
->
nSèãmít
>=0 && db->
nSavïoöt
>=0 );

3194 
db
->
nSèãmít
++;

3195 
p
->
iSèãmít
 = 
db
->
nSavïoöt
 + db->
nSèãmít
;

3198 
rc
 = 
	`sqlôe3VèbSavïoöt
(
db
, 
SAVEPOINT_BEGIN
, 
p
->
iSèãmít
-1);

3199 if–
rc
==
SQLITE_OK
 ){

3200 
rc
 = 
	`sqlôe3BåìBegöStmt
(
pBt
, 
p
->
iSèãmít
);

3206 
p
->
nStmtDefC⁄s
 = 
db
->
nDe„ºedC⁄s
;

3207 
p
->
nStmtDefImmC⁄s
 = 
db
->
nDe„ºedImmC⁄s
;

3215 
	`sqlôe3BåìGëMëa
(
pBt
, 
BTREE_SCHEMA_VERSION
, (
u32
 *)&
iMëa
);

3216 
iGí
 = 
db
->
aDb
[
pOp
->
p1
].
pSchema
->
iGíî©i⁄
;

3218 
iGí
 = 
iMëa
 = 0;

3220 
	`as£π
–
pOp
->
p5
==0 ||ÖOp->
p4ty≥
==
P4_INT32
 );

3221 if–
pOp
->
p5
 && (
iMëa
!ıOp->
p3
 || 
iGí
!ıOp->
p4
.
i
) ){

3222 
	`sqlôe3DbFªe
(
db
, 
p
->
zEºMsg
);

3223 
p
->
zEºMsg
 = 
	`sqlôe3DbSåDup
(
db
, "database schema has changed");

3237 if–
db
->
aDb
[
pOp
->
p1
].
pSchema
->
schema_cookõ
!=
iMëa
 ){

3238 
	`sqlôe3Re£tO√Schema
(
db
, 
pOp
->
p1
);

3240 
p
->
expúed
 = 1;

3241 
rc
 = 
SQLITE_SCHEMA
;

3243 if–
rc
 ) 
ab‹t_due_to_îr‹
;

3259 
OP_RódCookõ
: {

3260 
iMëa
;

3261 
iDb
;

3262 
iCookõ
;

3264 
	`as£π
–
p
->
bIsRódî
 );

3265 
iDb
 = 
pOp
->
p1
;

3266 
iCookõ
 = 
pOp
->
p3
;

3267 
	`as£π
–
pOp
->
p3
<
SQLITE_N_BTREE_META
 );

3268 
	`as£π
–
iDb
>=0 && iDb<
db
->
nDb
 );

3269 
	`as£π
–
db
->
aDb
[
iDb
].
pBt
!=0 );

3270 
	`as£π
–
	`DbMaskTe°
(
p
->
båìMask
, 
iDb
) );

3272 
	`sqlôe3BåìGëMëa
(
db
->
aDb
[
iDb
].
pBt
, 
iCookõ
, (
u32
 *)&
iMëa
);

3273 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

3274 
pOut
->
u
.
i
 = 
iMëa
;

3288 
OP_SëCookõ
: {

3289 
Db
 *
pDb
;

3290 
	`as£π
–
pOp
->
p2
<
SQLITE_N_BTREE_META
 );

3291 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
db
->
nDb
 );

3292 
	`as£π
–
	`DbMaskTe°
(
p
->
båìMask
, 
pOp
->
p1
) );

3293 
	`as£π
–
p
->
ªadO∆y
==0 );

3294 
pDb
 = &
db
->
aDb
[
pOp
->
p1
];

3295 
	`as£π
–
pDb
->
pBt
!=0 );

3296 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
pOp
->
p1
, 0) );

3298 
rc
 = 
	`sqlôe3BåìUpd©eMëa
(
pDb
->
pBt
, 
pOp
->
p2
,ÖOp->
p3
);

3299 if–
pOp
->
p2
==
BTREE_SCHEMA_VERSION
 ){

3301 
pDb
->
pSchema
->
schema_cookõ
 = 
pOp
->
p3
;

3302 
db
->
Êags
 |
SQLITE_I¡înCh™ges
;

3303 }if–
pOp
->
p2
==
BTREE_FILE_FORMAT
 ){

3305 
pDb
->
pSchema
->
fûe_f‹m©
 = 
pOp
->
p3
;

3307 if–
pOp
->
p1
==1 ){

3310 
	`sqlôe3ExpúePª∑ªdSèãmíts
(
db
);

3311 
p
->
expúed
 = 0;

3313 if–
rc
 ) 
ab‹t_due_to_îr‹
;

3382 
OP_Re›íIdx
: {

3383 
nFõld
;

3384 
KeyInfo
 *
pKeyInfo
;

3385 
p2
;

3386 
iDb
;

3387 
wrFœg
;

3388 
Båì
 *
pX
;

3389 
VdbeCurs‹
 *
pCur
;

3390 
Db
 *
pDb
;

3392 
	`as£π
–
pOp
->
p5
==0 ||ÖOp->p5==
OPFLAG_SEEKEQ
 );

3393 
	`as£π
–
pOp
->
p4ty≥
==
P4_KEYINFO
 );

3394 
pCur
 = 
p
->
≠C§
[
pOp
->
p1
];

3395 if–
pCur
 &&ÖCur->
pgnoRoŸ
==(
u32
)
pOp
->
p2
 ){

3396 
	`as£π
–
pCur
->
iDb
==
pOp
->
p3
 );

3397 
›í_curs‹_£t_höts
;

3401 
OP_O≥nRód
:

3402 
OP_O≥nWrôe
:

3406 
	`as£π
–
pOp
->
›code
==
OP_O≥nWrôe
 ||ÖOp->
p5
==0 ||ÖOp->p5==
OPFLAG_SEEKEQ
 );

3407 
	`as£π
–
p
->
bIsRódî
 );

3408 
	`as£π
–
pOp
->
›code
==
OP_O≥nRód
 ||ÖOp->›code==
OP_Re›íIdx


3409 || 
p
->
ªadO∆y
==0 );

3411 if–
p
->
expúed
 ){

3412 
rc
 = 
SQLITE_ABORT_ROLLBACK
;

3413 
ab‹t_due_to_îr‹
;

3416 
nFõld
 = 0;

3417 
pKeyInfo
 = 0;

3418 
p2
 = 
pOp
->p2;

3419 
iDb
 = 
pOp
->
p3
;

3420 
	`as£π
–
iDb
>=0 && iDb<
db
->
nDb
 );

3421 
	`as£π
–
	`DbMaskTe°
(
p
->
båìMask
, 
iDb
) );

3422 
pDb
 = &
db
->
aDb
[
iDb
];

3423 
pX
 = 
pDb
->
pBt
;

3424 
	`as£π
–
pX
!=0 );

3425 if–
pOp
->
›code
==
OP_O≥nWrôe
 ){

3426 
	`as£π
–
OPFLAG_FORDELETE
==
BTREE_FORDELETE
 );

3427 
wrFœg
 = 
BTREE_WRCSR
 | (
pOp
->
p5
 & 
OPFLAG_FORDELETE
);

3428 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

3429 if–
pDb
->
pSchema
->
fûe_f‹m©
 < 
p
->
möWrôeFûeF‹m©
 ){

3430 
p
->
möWrôeFûeF‹m©
 = 
pDb
->
pSchema
->
fûe_f‹m©
;

3433 
wrFœg
 = 0;

3435 if–
pOp
->
p5
 & 
OPFLAG_P2ISREG
 ){

3436 
	`as£π
–
p2
>0 );

3437 
	`as£π
–
p2
<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

3438 
pIn2
 = &
aMem
[
p2
];

3439 
	`as£π
–
	`memIsVÆid
(
pIn2
) );

3440 
	`as£π
–(
pIn2
->
Êags
 & 
MEM_I¡
)!=0 );

3441 
	`sqlôe3VdbeMemI¡egîify
(
pIn2
);

3442 
p2
 = ()
pIn2
->
u
.
i
;

3447 
	`as£π
–
p2
>=2 );

3449 if–
pOp
->
p4ty≥
==
P4_KEYINFO
 ){

3450 
pKeyInfo
 = 
pOp
->
p4
.pKeyInfo;

3451 
	`as£π
–
pKeyInfo
->
íc
==
	`ENC
(
db
) );

3452 
	`as£π
–
pKeyInfo
->
db
==db );

3453 
nFõld
 = 
pKeyInfo
->nFõld+pKeyInfo->
nXFõld
;

3454 }if–
pOp
->
p4ty≥
==
P4_INT32
 ){

3455 
nFõld
 = 
pOp
->
p4
.
i
;

3457 
	`as£π
–
pOp
->
p1
>=0 );

3458 
	`as£π
–
nFõld
>=0 );

3459 
	`ã°ˇ£
–
nFõld
==0 );

3460 
pCur
 = 
	`ÆloˇãCurs‹
(
p
, 
pOp
->
p1
, 
nFõld
, 
iDb
, 
CURTYPE_BTREE
);

3461 if–
pCur
==0 ) 
no_mem
;

3462 
pCur
->
nuŒRow
 = 1;

3463 
pCur
->
isOrdîed
 = 1;

3464 
pCur
->
pgnoRoŸ
 = 
p2
;

3465 #ifde‡
SQLITE_DEBUG


3466 
pCur
->
wrFœg
 = wrFlag;

3468 
rc
 = 
	`sqlôe3BåìCurs‹
(
pX
, 
p2
, 
wrFœg
, 
pKeyInfo
, 
pCur
->
uc
.
pCurs‹
);

3469 
pCur
->
pKeyInfo
 =ÖKeyInfo;

3474 
pCur
->
isTabÀ
 = 
pOp
->
p4ty≥
!=
P4_KEYINFO
;

3476 
›í_curs‹_£t_höts
:

3477 
	`as£π
–
OPFLAG_BULKCSR
==
BTREE_BULKLOAD
 );

3478 
	`as£π
–
OPFLAG_SEEKEQ
==
BTREE_SEEK_EQ
 );

3479 
	`ã°ˇ£
–
pOp
->
p5
 & 
OPFLAG_BULKCSR
 );

3480 #ifde‡
SQLITE_ENABLE_CURSOR_HINTS


3481 
	`ã°ˇ£
–
pOp
->
p2
 & 
OPFLAG_SEEKEQ
 );

3483 
	`sqlôe3BåìCurs‹HötFœgs
(
pCur
->
uc
.
pCurs‹
,

3484 (
pOp
->
p5
 & (
OPFLAG_BULKCSR
|
OPFLAG_SEEKEQ
)));

3485 if–
rc
 ) 
ab‹t_due_to_îr‹
;

3515 
OP_O≥nAutoödex
:

3516 
OP_O≥nEphemîÆ
: {

3517 
VdbeCurs‹
 *
pCx
;

3518 
KeyInfo
 *
pKeyInfo
;

3520 c⁄° 
vfsFœgs
 =

3521 
SQLITE_OPEN_READWRITE
 |

3522 
SQLITE_OPEN_CREATE
 |

3523 
SQLITE_OPEN_EXCLUSIVE
 |

3524 
SQLITE_OPEN_DELETEONCLOSE
 |

3525 
SQLITE_OPEN_TRANSIENT_DB
;

3526 
	`as£π
–
pOp
->
p1
>=0 );

3527 
	`as£π
–
pOp
->
p2
>=0 );

3528 
pCx
 = 
	`ÆloˇãCurs‹
(
p
, 
pOp
->
p1
,ÖOp->
p2
, -1, 
CURTYPE_BTREE
);

3529 if–
pCx
==0 ) 
no_mem
;

3530 
pCx
->
nuŒRow
 = 1;

3531 
pCx
->
isEphemîÆ
 = 1;

3532 
rc
 = 
	`sqlôe3BåìO≥n
(
db
->
pVfs
, 0, db, &
pCx
->
pBtx
,

3533 
BTREE_OMIT_JOURNAL
 | 
BTREE_SINGLE
 | 
pOp
->
p5
, 
vfsFœgs
);

3534 if–
rc
==
SQLITE_OK
 ){

3535 
rc
 = 
	`sqlôe3BåìBegöTøns
(
pCx
->
pBtx
, 1);

3537 if–
rc
==
SQLITE_OK
 ){

3543 if–(
pCx
->
pKeyInfo
 =ÖKeyInfÿ
pOp
->
p4
.pKeyInfo)!=0 ){

3544 
pgno
;

3545 
	`as£π
–
pOp
->
p4ty≥
==
P4_KEYINFO
 );

3546 
rc
 = 
	`sqlôe3BåìCª©eTabÀ
(
pCx
->
pBtx
, &
pgno
, 
BTREE_BLOBKEY
 | 
pOp
->
p5
);

3547 if–
rc
==
SQLITE_OK
 ){

3548 
	`as£π
–
pgno
==
MASTER_ROOT
+1 );

3549 
	`as£π
–
pKeyInfo
->
db
==db );

3550 
	`as£π
–
pKeyInfo
->
íc
==
	`ENC
(
db
) );

3551 
rc
 = 
	`sqlôe3BåìCurs‹
(
pCx
->
pBtx
, 
pgno
, 
BTREE_WRCSR
,

3552 
pKeyInfo
, 
pCx
->
uc
.
pCurs‹
);

3554 
pCx
->
isTabÀ
 = 0;

3556 
rc
 = 
	`sqlôe3BåìCurs‹
(
pCx
->
pBtx
, 
MASTER_ROOT
, 
BTREE_WRCSR
,

3557 0, 
pCx
->
uc
.
pCurs‹
);

3558 
pCx
->
isTabÀ
 = 1;

3561 if–
rc
 ) 
ab‹t_due_to_îr‹
;

3562 
pCx
->
isOrdîed
 = (
pOp
->
p5
!=
BTREE_UNORDERED
);

3576 
OP_S‹ãrO≥n
: {

3577 
VdbeCurs‹
 *
pCx
;

3579 
	`as£π
–
pOp
->
p1
>=0 );

3580 
	`as£π
–
pOp
->
p2
>=0 );

3581 
pCx
 = 
	`ÆloˇãCurs‹
(
p
, 
pOp
->
p1
,ÖOp->
p2
, -1, 
CURTYPE_SORTER
);

3582 if–
pCx
==0 ) 
no_mem
;

3583 
pCx
->
pKeyInfo
 = 
pOp
->
p4
.pKeyInfo;

3584 
	`as£π
–
pCx
->
pKeyInfo
->
db
==db );

3585 
	`as£π
–
pCx
->
pKeyInfo
->
íc
==
	`ENC
(
db
) );

3586 
rc
 = 
	`sqlôe3VdbeS‹ãrInô
(
db
, 
pOp
->
p3
, 
pCx
);

3587 if–
rc
 ) 
ab‹t_due_to_îr‹
;

3598 
OP_Sequí˚Te°
: {

3599 
VdbeCurs‹
 *
pC
;

3600 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

3601 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

3602 
	`as£π
–
	`isS‹ãr
(
pC
) );

3603 if–(
pC
->
£qCou¡
++)==0 ){

3604 
jump_to_p2
;

3625 
OP_O≥nP£udo
: {

3626 
VdbeCurs‹
 *
pCx
;

3628 
	`as£π
–
pOp
->
p1
>=0 );

3629 
	`as£π
–
pOp
->
p3
>=0 );

3630 
pCx
 = 
	`ÆloˇãCurs‹
(
p
, 
pOp
->
p1
,ÖOp->
p3
, -1, 
CURTYPE_PSEUDO
);

3631 if–
pCx
==0 ) 
no_mem
;

3632 
pCx
->
nuŒRow
 = 1;

3633 
pCx
->
uc
.
p£udoTabÀReg
 = 
pOp
->
p2
;

3634 
pCx
->
isTabÀ
 = 1;

3635 
	`as£π
–
pOp
->
p5
==0 );

3644 
OP_Clo£
: {

3645 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

3646 
	`sqlôe3VdbeFªeCurs‹
(
p
,Ö->
≠C§
[
pOp
->
p1
]);

3647 
p
->
≠C§
[
pOp
->
p1
] = 0;

3651 #ifde‡
SQLITE_ENABLE_COLUMN_USED_MASK


3662 
OP_CﬁumnsU£d
: {

3663 
VdbeCurs‹
 *
pC
;

3664 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

3665 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

3666 
pC
->
maskU£d
 = *(
u64
*)
pOp
->
p4
.
pI64
;

3757 
OP_SìkLT
:

3758 
OP_SìkLE
:

3759 
OP_SìkGE
:

3760 
OP_SìkGT
: {

3761 
ªs
;

3762 
oc
;

3763 
VdbeCurs‹
 *
pC
;

3764 
U≈ackedRec‹d
 
r
;

3765 
nFõld
;

3766 
i64
 
iKey
;

3767 
eqO∆y
;

3769 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

3770 
	`as£π
–
pOp
->
p2
!=0 );

3771 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

3772 
	`as£π
–
pC
!=0 );

3773 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

3774 
	`as£π
–
OP_SìkLE
 =
OP_SìkLT
+1 );

3775 
	`as£π
–
OP_SìkGE
 =
OP_SìkLT
+2 );

3776 
	`as£π
–
OP_SìkGT
 =
OP_SìkLT
+3 );

3777 
	`as£π
–
pC
->
isOrdîed
 );

3778 
	`as£π
–
pC
->
uc
.
pCurs‹
!=0 );

3779 
oc
 = 
pOp
->
›code
;

3780 
eqO∆y
 = 0;

3781 
pC
->
nuŒRow
 = 0;

3782 #ifde‡
SQLITE_DEBUG


3783 
pC
->
£ekOp
 = 
pOp
->
›code
;

3786 if–
pC
->
isTabÀ
 ){

3788 
	`as£π
–
	`sqlôe3BåìCurs‹HasHöt
(
pC
->
uc
.
pCurs‹
, 
BTREE_SEEK_EQ
)==0

3789 || 
CORRUPT_DB
 );

3794 
pIn3
 = &
aMem
[
pOp
->
p3
];

3795 if–(
pIn3
->
Êags
 & (
MEM_I¡
|
MEM_Ról
|
MEM_Så
))==MEM_Str ){

3796 
	`≠∂yNumîicAfföôy
(
pIn3
, 0);

3798 
iKey
 = 
	`sqlôe3VdbeI¡VÆue
(
pIn3
);

3802 if–(
pIn3
->
Êags
 & 
MEM_I¡
)==0 ){

3803 if–(
pIn3
->
Êags
 & 
MEM_Ról
)==0 ){

3806 
	`VdbeBønchTakí
(1,2); 
jump_to_p2
;

3817 if–
pIn3
->
u
.
r
<()
iKey
 ){

3818 
	`as£π
–
OP_SìkGE
==(
OP_SìkGT
-1) );

3819 
	`as£π
–
OP_SìkLT
==(
OP_SìkLE
-1) );

3820 
	`as£π
–(
OP_SìkLE
 & 0x0001)==(
OP_SìkGT
 & 0x0001) );

3821 if–(
oc
 & 0x0001)==(
OP_SìkGT
 & 0x0001) ) oc--;

3826 if–
pIn3
->
u
.
r
>()
iKey
 ){

3827 
	`as£π
–
OP_SìkLE
==(
OP_SìkLT
+1) );

3828 
	`as£π
–
OP_SìkGT
==(
OP_SìkGE
+1) );

3829 
	`as£π
–(
OP_SìkLT
 & 0x0001)==(
OP_SìkGE
 & 0x0001) );

3830 if–(
oc
 & 0x0001)==(
OP_SìkLT
 & 0x0001) ) oc++;

3833 
rc
 = 
	`sqlôe3BåìMovëoU≈acked
(
pC
->
uc
.
pCurs‹
, 0, (
u64
)
iKey
, 0, &
ªs
);

3834 
pC
->
movëoT¨gë
 = 
iKey
;

3835 if–
rc
!=
SQLITE_OK
 ){

3836 
ab‹t_due_to_îr‹
;

3843 if–
	`sqlôe3BåìCurs‹HasHöt
(
pC
->
uc
.
pCurs‹
, 
BTREE_SEEK_EQ
) ){

3844 
eqO∆y
 = 1;

3845 
	`as£π
–
pOp
->
›code
==
OP_SìkGE
 ||ÖOp->›code==
OP_SìkLE
 );

3846 
	`as£π
–
pOp
[1].
›code
==
OP_IdxLT
 ||ÖOp[1].›code==
OP_IdxGT
 );

3847 
	`as£π
–
pOp
[1].
p1
==pOp[0].p1 );

3848 
	`as£π
–
pOp
[1].
p2
==pOp[0].p2 );

3849 
	`as£π
–
pOp
[1].
p3
==pOp[0].p3 );

3850 
	`as£π
–
pOp
[1].
p4
.
i
==pOp[0].p4.i );

3853 
nFõld
 = 
pOp
->
p4
.
i
;

3854 
	`as£π
–
pOp
->
p4ty≥
==
P4_INT32
 );

3855 
	`as£π
–
nFõld
>0 );

3856 
r
.
pKeyInfo
 = 
pC
->pKeyInfo;

3857 
r
.
nFõld
 = (
u16
)nField;

3866 
r
.
deÁu…_rc
 = ((1 & (
oc
 - 
OP_SìkLT
)) ? -1 : +1);

3867 
	`as£π
–
oc
!=
OP_SìkGT
 || 
r
.
deÁu…_rc
==-1 );

3868 
	`as£π
–
oc
!=
OP_SìkLE
 || 
r
.
deÁu…_rc
==-1 );

3869 
	`as£π
–
oc
!=
OP_SìkGE
 || 
r
.
deÁu…_rc
==+1 );

3870 
	`as£π
–
oc
!=
OP_SìkLT
 || 
r
.
deÁu…_rc
==+1 );

3872 
r
.
aMem
 = &aMem[
pOp
->
p3
];

3873 #ifde‡
SQLITE_DEBUG


3874 { 
i
; i=0; i<
r
.
nFõld
; i++Ë
	`as£π
–
	`memIsVÆid
(&r.
aMem
[i]) ); }

3876 
r
.
eqSìn
 = 0;

3877 
rc
 = 
	`sqlôe3BåìMovëoU≈acked
(
pC
->
uc
.
pCurs‹
, &
r
, 0, 0, &
ªs
);

3878 if–
rc
!=
SQLITE_OK
 ){

3879 
ab‹t_due_to_îr‹
;

3881 if–
eqO∆y
 && 
r
.
eqSìn
==0 ){

3882 
	`as£π
–
ªs
!=0 );

3883 
£ek_nŸ_found
;

3886 
pC
->
de„ºedMovëo
 = 0;

3887 
pC
->
ˇcheSètus
 = 
CACHE_STALE
;

3888 #ifde‡
SQLITE_TEST


3889 
sqlôe3_£¨ch_cou¡
++;

3891 if–
oc
>=
OP_SìkGE
 ){ 
	`as£π
–oc==OP_SìkGE || oc==
OP_SìkGT
 );

3892 if–
ªs
<0 || (ªs==0 && 
oc
==
OP_SìkGT
) ){

3893 
ªs
 = 0;

3894 
rc
 = 
	`sqlôe3BåìNext
(
pC
->
uc
.
pCurs‹
, &
ªs
);

3895 if–
rc
!=
SQLITE_OK
 ) 
ab‹t_due_to_îr‹
;

3897 
ªs
 = 0;

3900 
	`as£π
–
oc
==
OP_SìkLT
 || oc==
OP_SìkLE
 );

3901 if–
ªs
>0 || (ªs==0 && 
oc
==
OP_SìkLT
) ){

3902 
ªs
 = 0;

3903 
rc
 = 
	`sqlôe3BåìPªvious
(
pC
->
uc
.
pCurs‹
, &
ªs
);

3904 if–
rc
!=
SQLITE_OK
 ) 
ab‹t_due_to_îr‹
;

3909 
ªs
 = 
	`sqlôe3BåìEof
(
pC
->
uc
.
pCurs‹
);

3912 
£ek_nŸ_found
:

3913 
	`as£π
–
pOp
->
p2
>0 );

3914 
	`VdbeBønchTakí
(
ªs
!=0,2);

3915 if–
ªs
 ){

3916 
jump_to_p2
;

3917 }if–
eqO∆y
 ){

3918 
	`as£π
–
pOp
[1].
›code
==
OP_IdxLT
 ||ÖOp[1].›code==
OP_IdxGT
 );

3919 
pOp
++;

3983 
OP_NoC⁄Êi˘
:

3984 
OP_NŸFound
:

3985 
OP_Found
: {

3986 
ÆªadyExi°s
;

3987 
èkeJump
;

3988 
ii
;

3989 
VdbeCurs‹
 *
pC
;

3990 
ªs
;

3991 
U≈ackedRec‹d
 *
pFªe
;

3992 
U≈ackedRec‹d
 *
pIdxKey
;

3993 
U≈ackedRec‹d
 
r
;

3995 #ifde‡
SQLITE_TEST


3996 if–
pOp
->
›code
!=
OP_NoC⁄Êi˘
 ) 
sqlôe3_found_cou¡
++;

3999 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

4000 
	`as£π
–
pOp
->
p4ty≥
==
P4_INT32
 );

4001 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

4002 
	`as£π
–
pC
!=0 );

4003 #ifde‡
SQLITE_DEBUG


4004 
pC
->
£ekOp
 = 
pOp
->
›code
;

4006 
pIn3
 = &
aMem
[
pOp
->
p3
];

4007 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

4008 
	`as£π
–
pC
->
uc
.
pCurs‹
!=0 );

4009 
	`as£π
–
pC
->
isTabÀ
==0 );

4010 if–
pOp
->
p4
.
i
>0 ){

4011 
r
.
pKeyInfo
 = 
pC
->pKeyInfo;

4012 
r
.
nFõld
 = (
u16
)
pOp
->
p4
.
i
;

4013 
r
.
aMem
 = 
pIn3
;

4014 #ifde‡
SQLITE_DEBUG


4015 
ii
=0; ii<
r
.
nFõld
; ii++){

4016 
	`as£π
–
	`memIsVÆid
(&
r
.
aMem
[
ii
]) );

4017 
	`as£π
–(
r
.
aMem
[
ii
].
Êags
 & 
MEM_Zîo
)==0 ||Ñ.aMem[ii].
n
==0 );

4018 if–
ii
 ) 
	`REGISTER_TRACE
(
pOp
->
p3
+ii, &
r
.
aMem
[ii]);

4021 
pIdxKey
 = &
r
;

4022 
pFªe
 = 0;

4024 
pFªe
 = 
pIdxKey
 = 
	`sqlôe3VdbeAŒocU≈ackedRec‹d
(
pC
->
pKeyInfo
);

4025 if–
pIdxKey
==0 ) 
no_mem
;

4026 
	`as£π
–
pIn3
->
Êags
 & 
MEM_Blob
 );

4027 ()
	`Ex∑ndBlob
(
pIn3
);

4028 
	`sqlôe3VdbeRec‹dU≈ack
(
pC
->
pKeyInfo
, 
pIn3
->
n
,ÖIn3->
z
, 
pIdxKey
);

4030 
pIdxKey
->
deÁu…_rc
 = 0;

4031 
èkeJump
 = 0;

4032 if–
pOp
->
›code
==
OP_NoC⁄Êi˘
 ){

4036 
ii
=0; ii<
pIdxKey
->
nFõld
; ii++){

4037 if–
pIdxKey
->
aMem
[
ii
].
Êags
 & 
MEM_NuŒ
 ){

4038 
èkeJump
 = 1;

4043 
rc
 = 
	`sqlôe3BåìMovëoU≈acked
(
pC
->
uc
.
pCurs‹
, 
pIdxKey
, 0, 0, &
ªs
);

4044 if–
pFªe
 ) 
	`sqlôe3DbFªe
(
db
,ÖFree);

4045 if–
rc
!=
SQLITE_OK
 ){

4046 
ab‹t_due_to_îr‹
;

4048 
pC
->
£ekResu…
 = 
ªs
;

4049 
ÆªadyExi°s
 = (
ªs
==0);

4050 
pC
->
nuŒRow
 = 1-
ÆªadyExi°s
;

4051 
pC
->
de„ºedMovëo
 = 0;

4052 
pC
->
ˇcheSètus
 = 
CACHE_STALE
;

4053 if–
pOp
->
›code
==
OP_Found
 ){

4054 
	`VdbeBønchTakí
(
ÆªadyExi°s
!=0,2);

4055 if–
ÆªadyExi°s
 ) 
jump_to_p2
;

4057 
	`VdbeBønchTakí
(
èkeJump
||
ÆªadyExi°s
==0,2);

4058 if–
èkeJump
 || !
ÆªadyExi°s
 ) 
jump_to_p2
;

4110 
OP_SìkRowid
: {

4111 
VdbeCurs‹
 *
pC
;

4112 
BtCurs‹
 *
pCr§
;

4113 
ªs
;

4114 
u64
 
iKey
;

4116 
pIn3
 = &
aMem
[
pOp
->
p3
];

4117 if–(
pIn3
->
Êags
 & 
MEM_I¡
)==0 ){

4118 
	`≠∂yAfföôy
(
pIn3
, 
SQLITE_AFF_NUMERIC
, 
ícodög
);

4119 if–(
pIn3
->
Êags
 & 
MEM_I¡
)==0 ) 
jump_to_p2
;

4122 
OP_NŸExi°s
:

4123 
pIn3
 = &
aMem
[
pOp
->
p3
];

4124 
	`as£π
–
pIn3
->
Êags
 & 
MEM_I¡
 );

4125 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

4126 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

4127 
	`as£π
–
pC
!=0 );

4128 #ifde‡
SQLITE_DEBUG


4129 
pC
->
£ekOp
 = 0;

4131 
	`as£π
–
pC
->
isTabÀ
 );

4132 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

4133 
pCr§
 = 
pC
->
uc
.
pCurs‹
;

4134 
	`as£π
–
pCr§
!=0 );

4135 
ªs
 = 0;

4136 
iKey
 = 
pIn3
->
u
.
i
;

4137 
rc
 = 
	`sqlôe3BåìMovëoU≈acked
(
pCr§
, 0, 
iKey
, 0, &
ªs
);

4138 
	`as£π
–
rc
==
SQLITE_OK
 || 
ªs
==0 );

4139 
pC
->
movëoT¨gë
 = 
iKey
;

4140 
pC
->
nuŒRow
 = 0;

4141 
pC
->
ˇcheSètus
 = 
CACHE_STALE
;

4142 
pC
->
de„ºedMovëo
 = 0;

4143 
	`VdbeBønchTakí
(
ªs
!=0,2);

4144 
pC
->
£ekResu…
 = 
ªs
;

4145 if–
ªs
!=0 ){

4146 
	`as£π
–
rc
==
SQLITE_OK
 );

4147 if–
pOp
->
p2
==0 ){

4148 
rc
 = 
SQLITE_CORRUPT_BKPT
;

4150 
jump_to_p2
;

4153 if–
rc
 ) 
ab‹t_due_to_îr‹
;

4165 
OP_Sequí˚
: {

4166 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

4167 
	`as£π
–
p
->
≠C§
[
pOp
->
p1
]!=0 );

4168 
	`as£π
–
p
->
≠C§
[
pOp
->
p1
]->
eCurTy≥
!=
CURTYPE_VTAB
 );

4169 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

4170 
pOut
->
u
.
i
 = 
p
->
≠C§
[
pOp
->
p1
]->
£qCou¡
++;

4190 
OP_NewRowid
: {

4191 
i64
 
v
;

4192 
VdbeCurs‹
 *
pC
;

4193 
ªs
;

4194 
˙t
;

4195 
Mem
 *
pMem
;

4196 
VdbeFøme
 *
pFøme
;

4198 
v
 = 0;

4199 
ªs
 = 0;

4200 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

4201 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

4202 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

4203 
	`as£π
–
pC
!=0 );

4204 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

4205 
	`as£π
–
pC
->
uc
.
pCurs‹
!=0 );

4220 
	`as£π
–
pC
->
isTabÀ
 );

4222 #ifde‡
SQLITE_32BIT_ROWID


4223 
	#MAX_ROWID
 0x7fffffff

	)

4229 
	#MAX_ROWID
 (
i64
)–(((
u64
)0x7fffffff)<<32Ë| (u64)0xfffffff‡)

	)

4232 if–!
pC
->
u£R™domRowid
 ){

4235 
rc
 = 
	`sqlôe3BåìLa°
(
pC
->
uc
.
pCurs‹
, &
ªs
);

4236 if–
rc
!=
SQLITE_OK
 ){

4237 
ab‹t_due_to_îr‹
;

4239 if–
ªs
 ){

4240 
v
 = 1;

4242 
	`as£π
–
	`sqlôe3BåìCurs‹IsVÆid
(
pC
->
uc
.
pCurs‹
) );

4243 
v
 = 
	`sqlôe3BåìI¡egîKey
(
pC
->
uc
.
pCurs‹
);

4244 if–
v
>=
MAX_ROWID
 ){

4245 
pC
->
u£R™domRowid
 = 1;

4247 
v
++;

4252 #i‚de‡
SQLITE_OMIT_AUTOINCREMENT


4253 if–
pOp
->
p3
 ){

4255 
	`as£π
–
pOp
->
p3
>0 );

4256 if–
p
->
pFøme
 ){

4257 
pFøme
=
p
->pFøme;ÖFøme->
pP¨ít
;ÖFrame=pFrame->pParent);

4259 
	`as£π
–
pOp
->
p3
<=
pFøme
->
nMem
 );

4260 
pMem
 = &
pFøme
->
aMem
[
pOp
->
p3
];

4263 
	`as£π
–
pOp
->
p3
<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

4264 
pMem
 = &
aMem
[
pOp
->
p3
];

4265 
	`memAboutToCh™ge
(
p
, 
pMem
);

4267 
	`as£π
–
	`memIsVÆid
(
pMem
) );

4269 
	`REGISTER_TRACE
(
pOp
->
p3
, 
pMem
);

4270 
	`sqlôe3VdbeMemI¡egîify
(
pMem
);

4271 
	`as£π
–(
pMem
->
Êags
 & 
MEM_I¡
)!=0 );

4272 if–
pMem
->
u
.
i
==
MAX_ROWID
 || 
pC
->
u£R™domRowid
 ){

4273 
rc
 = 
SQLITE_FULL
;

4274 
ab‹t_due_to_îr‹
;

4276 if–
v
<
pMem
->
u
.
i
+1 ){

4277 
v
 = 
pMem
->
u
.
i
 + 1;

4279 
pMem
->
u
.
i
 = 
v
;

4282 if–
pC
->
u£R™domRowid
 ){

4287 
	`as£π
–
pOp
->
p3
==0 );

4289 
˙t
 = 0;

4291 
	`sqlôe3_øndom√ss
((
v
), &v);

4292 
v
 &(
MAX_ROWID
>>1); v++;

4293 } ((
rc
 = 
	`sqlôe3BåìMovëoU≈acked
(
pC
->
uc
.
pCurs‹
, 0, (
u64
)
v
,

4294 0, &
ªs
))==
SQLITE_OK
)

4295 && (
ªs
==0)

4296 && (++
˙t
<100));

4297 if–
rc
 ) 
ab‹t_due_to_îr‹
;

4298 if–
ªs
==0 ){

4299 
rc
 = 
SQLITE_FULL
;

4300 
ab‹t_due_to_îr‹
;

4302 
	`as£π
–
v
>0 );

4304 
pC
->
de„ºedMovëo
 = 0;

4305 
pC
->
ˇcheSètus
 = 
CACHE_STALE
;

4307 
pOut
->
u
.
i
 = 
v
;

4354 
OP_In£π
:

4355 
OP_In£πI¡
: {

4356 
Mem
 *
pD©a
;

4357 
Mem
 *
pKey
;

4358 
VdbeCurs‹
 *
pC
;

4359 
£ekResu…
;

4360 c⁄° *
zDb
;

4361 
TabÀ
 *
pTab
;

4362 
›
;

4363 
BåìPaylﬂd
 
x
;

4365 
›
 = 0;

4366 
pD©a
 = &
aMem
[
pOp
->
p2
];

4367 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

4368 
	`as£π
–
	`memIsVÆid
(
pD©a
) );

4369 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

4370 
	`as£π
–
pC
!=0 );

4371 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

4372 
	`as£π
–
pC
->
uc
.
pCurs‹
!=0 );

4373 
	`as£π
–
pC
->
isTabÀ
 );

4374 
	`as£π
–
pOp
->
p4ty≥
==
P4_TABLE
 ||ÖOp->p4ty≥>=
P4_STATIC
 );

4375 
	`REGISTER_TRACE
(
pOp
->
p2
, 
pD©a
);

4377 if–
pOp
->
›code
==
OP_In£π
 ){

4378 
pKey
 = &
aMem
[
pOp
->
p3
];

4379 
	`as£π
–
pKey
->
Êags
 & 
MEM_I¡
 );

4380 
	`as£π
–
	`memIsVÆid
(
pKey
) );

4381 
	`REGISTER_TRACE
(
pOp
->
p3
, 
pKey
);

4382 
x
.
nKey
 = 
pKey
->
u
.
i
;

4384 
	`as£π
–
pOp
->
›code
==
OP_In£πI¡
 );

4385 
x
.
nKey
 = 
pOp
->
p3
;

4388 if–
pOp
->
p4ty≥
==
P4_TABLE
 && 
	`HAS_UPDATE_HOOK
(
db
) ){

4389 
	`as£π
–
pC
->
isTabÀ
 );

4390 
	`as£π
–
pC
->
iDb
>=0 );

4391 
zDb
 = 
db
->
aDb
[
pC
->
iDb
].
zDbSName
;

4392 
pTab
 = 
pOp
->
p4
.pTab;

4393 
	`as£π
–
	`HasRowid
(
pTab
) );

4394 
›
 = ((
pOp
->
p5
 & 
OPFLAG_ISUPDATE
Ë? 
SQLITE_UPDATE
 : 
SQLITE_INSERT
);

4396 
pTab
 = 0;

4397 
zDb
 = 0;

4400 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


4402 if–
db
->
xPªUpd©eCÆlback


4403 && 
pOp
->
p4ty≥
==
P4_TABLE


4404 && !(
pOp
->
p5
 & 
OPFLAG_ISUPDATE
)

4406 
	`sqlôe3VdbePªUpd©eHook
(
p
, 
pC
, 
SQLITE_INSERT
, 
zDb
, 
pTab
, 
x
.
nKey
, 
pOp
->
p2
);

4410 if–
pOp
->
p5
 & 
OPFLAG_NCHANGE
 ) 
p
->
nCh™ge
++;

4411 if–
pOp
->
p5
 & 
OPFLAG_LASTROWID
 ) 
db
->
œ°Rowid
 =Üa°Rowid = 
x
.
nKey
;

4412 if–
pD©a
->
Êags
 & 
MEM_NuŒ
 ){

4413 
x
.
pD©a
 = 0;

4414 
x
.
nD©a
 = 0;

4416 
	`as£π
–
pD©a
->
Êags
 & (
MEM_Blob
|
MEM_Så
) );

4417 
x
.
pD©a
 =ÖD©a->
z
;

4418 
x
.
nD©a
 = 
pD©a
->
n
;

4420 
£ekResu…
 = ((
pOp
->
p5
 & 
OPFLAG_USESEEKRESULT
Ë? 
pC
->seekResult : 0);

4421 if–
pD©a
->
Êags
 & 
MEM_Zîo
 ){

4422 
x
.
nZîo
 = 
pD©a
->
u
.nZero;

4424 
x
.
nZîo
 = 0;

4426 
x
.
pKey
 = 0;

4430 
rc
 = 
	`sqlôe3BåìIn£π
(
pC
->
uc
.
pCurs‹
, &
x
,

4431 (
pOp
->
p5
 & 
OPFLAG_APPEND
)!=0, 
£ekResu…


4433 
pC
->
de„ºedMovëo
 = 0;

4434 
pC
->
ˇcheSètus
 = 
CACHE_STALE
;

4437 if–
rc
 ) 
ab‹t_due_to_îr‹
;

4438 if–
db
->
xUpd©eCÆlback
 && 
›
 ){

4439 
db
->
	`xUpd©eCÆlback
(db->
pUpd©eArg
, 
›
, 
zDb
, 
pTab
->
zName
, 
x
.
nKey
);

4479 
OP_Dñëe
: {

4480 
VdbeCurs‹
 *
pC
;

4481 c⁄° *
zDb
;

4482 
TabÀ
 *
pTab
;

4483 
›Êags
;

4485 
›Êags
 = 
pOp
->
p2
;

4486 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

4487 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

4488 
	`as£π
–
pC
!=0 );

4489 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

4490 
	`as£π
–
pC
->
uc
.
pCurs‹
!=0 );

4491 
	`as£π
–
pC
->
de„ºedMovëo
==0 );

4493 #ifde‡
SQLITE_DEBUG


4494 if–
pOp
->
p4ty≥
==
P4_TABLE
 && 
	`HasRowid
’Op->
p4
.
pTab
Ë&&ÖOp->
p5
==0 ){

4498 
i64
 
iKey
 = 
	`sqlôe3BåìI¡egîKey
(
pC
->
uc
.
pCurs‹
);

4499 
	`as£π
–
pC
->
movëoT¨gë
==
iKey
 );

4508 if–
pOp
->
p4ty≥
==
P4_TABLE
 && 
	`HAS_UPDATE_HOOK
(
db
) ){

4509 
	`as£π
–
pC
->
iDb
>=0 );

4510 
	`as£π
–
pOp
->
p4
.
pTab
!=0 );

4511 
zDb
 = 
db
->
aDb
[
pC
->
iDb
].
zDbSName
;

4512 
pTab
 = 
pOp
->
p4
.pTab;

4513 if–(
pOp
->
p5
 & 
OPFLAG_SAVEPOSITION
)!=0 && 
pC
->
isTabÀ
 ){

4514 
pC
->
movëoT¨gë
 = 
	`sqlôe3BåìI¡egîKey
’C->
uc
.
pCurs‹
);

4517 
zDb
 = 0;

4518 
pTab
 = 0;

4521 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


4523 if–
db
->
xPªUpd©eCÆlback
 && 
pOp
->
p4
.
pTab
 && 
	`HasRowid
(pTab) ){

4524 
	`as£π
–!(
›Êags
 & 
OPFLAG_ISUPDATE
Ë|| (
aMem
[
pOp
->
p3
].
Êags
 & 
MEM_I¡
) );

4525 
	`sqlôe3VdbePªUpd©eHook
(
p
, 
pC
,

4526 (
›Êags
 & 
OPFLAG_ISUPDATE
Ë? 
SQLITE_UPDATE
 : 
SQLITE_DELETE
,

4527 
zDb
, 
pTab
, 
pC
->
movëoT¨gë
,

4528 
pOp
->
p3


4531 if–
›Êags
 & 
OPFLAG_ISNOOP
 ) ;

4535 
	`as£π
–(
pOp
->
p5
 & ~(
OPFLAG_SAVEPOSITION
|
OPFLAG_AUXDELETE
))==0 );

4536 
	`as£π
–
OPFLAG_SAVEPOSITION
==
BTREE_SAVEPOSITION
 );

4537 
	`as£π
–
OPFLAG_AUXDELETE
==
BTREE_AUXDELETE
 );

4539 #ifde‡
SQLITE_DEBUG


4540 if–
p
->
pFøme
==0 ){

4541 if–
pC
->
isEphemîÆ
==0

4542 && (
pOp
->
p5
 & 
OPFLAG_AUXDELETE
)==0

4543 && (
pC
->
wrFœg
 & 
OPFLAG_FORDELETE
)==0

4545 
nExåaDñëe
++;

4547 if–
pOp
->
p2
 & 
OPFLAG_NCHANGE
 ){

4548 
nExåaDñëe
--;

4553 
rc
 = 
	`sqlôe3BåìDñëe
(
pC
->
uc
.
pCurs‹
, 
pOp
->
p5
);

4554 
pC
->
ˇcheSètus
 = 
CACHE_STALE
;

4555 
pC
->
£ekResu…
 = 0;

4556 if–
rc
 ) 
ab‹t_due_to_îr‹
;

4559 if–
›Êags
 & 
OPFLAG_NCHANGE
 ){

4560 
p
->
nCh™ge
++;

4561 if–
db
->
xUpd©eCÆlback
 && 
	`HasRowid
(
pTab
) ){

4562 
db
->
	`xUpd©eCÆlback
(db->
pUpd©eArg
, 
SQLITE_DELETE
, 
zDb
, 
pTab
->
zName
,

4563 
pC
->
movëoT¨gë
);

4564 
	`as£π
–
pC
->
iDb
>=0 );

4577 
OP_Re£tCou¡
: {

4578 
	`sqlôe3VdbeSëCh™ges
(
db
, 
p
->
nCh™ge
);

4579 
p
->
nCh™ge
 = 0;

4598 
OP_S‹ãrCom∑ª
: {

4599 
VdbeCurs‹
 *
pC
;

4600 
ªs
;

4601 
nKeyCﬁ
;

4603 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

4604 
	`as£π
–
	`isS‹ãr
(
pC
) );

4605 
	`as£π
–
pOp
->
p4ty≥
==
P4_INT32
 );

4606 
pIn3
 = &
aMem
[
pOp
->
p3
];

4607 
nKeyCﬁ
 = 
pOp
->
p4
.
i
;

4608 
ªs
 = 0;

4609 
rc
 = 
	`sqlôe3VdbeS‹ãrCom∑ª
(
pC
, 
pIn3
, 
nKeyCﬁ
, &
ªs
);

4610 
	`VdbeBønchTakí
(
ªs
!=0,2);

4611 if–
rc
 ) 
ab‹t_due_to_îr‹
;

4612 if–
ªs
 ) 
jump_to_p2
;

4628 
OP_S‹ãrD©a
: {

4629 
VdbeCurs‹
 *
pC
;

4631 
pOut
 = &
aMem
[
pOp
->
p2
];

4632 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

4633 
	`as£π
–
	`isS‹ãr
(
pC
) );

4634 
rc
 = 
	`sqlôe3VdbeS‹ãrRowkey
(
pC
, 
pOut
);

4635 
	`as£π
–
rc
!=
SQLITE_OK
 || (
pOut
->
Êags
 & 
MEM_Blob
) );

4636 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

4637 if–
rc
 ) 
ab‹t_due_to_îr‹
;

4638 
p
->
≠C§
[
pOp
->
p3
]->
ˇcheSètus
 = 
CACHE_STALE
;

4657 
OP_RowD©a
: {

4658 
VdbeCurs‹
 *
pC
;

4659 
BtCurs‹
 *
pCr§
;

4660 
u32
 
n
;

4662 
pOut
 = &
aMem
[
pOp
->
p2
];

4663 
	`memAboutToCh™ge
(
p
, 
pOut
);

4665 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

4666 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

4667 
	`as£π
–
pC
!=0 );

4668 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

4669 
	`as£π
–
	`isS‹ãr
(
pC
)==0 );

4670 
	`as£π
–
pC
->
nuŒRow
==0 );

4671 
	`as£π
–
pC
->
uc
.
pCurs‹
!=0 );

4672 
pCr§
 = 
pC
->
uc
.
pCurs‹
;

4682 
	`as£π
–
pC
->
de„ºedMovëo
==0 );

4683 
	`as£π
–
	`sqlôe3BåìCurs‹IsVÆid
(
pCr§
) );

4685 
rc
 = 
	`sqlôe3VdbeCurs‹Movëo
(
pC
);

4686 if–
rc
!=
SQLITE_OK
 ) 
ab‹t_due_to_îr‹
;

4689 
n
 = 
	`sqlôe3BåìPaylﬂdSize
(
pCr§
);

4690 if–
n
>(
u32
)
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
] ){

4691 
too_big
;

4693 
	`ã°ˇ£
–
n
==0 );

4694 if–
	`sqlôe3VdbeMemCÀ¨AndResize
(
pOut
, 
	`MAX
(
n
,32)) ){

4695 
no_mem
;

4697 
pOut
->
n
 =Ç;

4698 
	`MemSëTy≥Fœg
(
pOut
, 
MEM_Blob
);

4699 
rc
 = 
	`sqlôe3BåìPaylﬂd
(
pCr§
, 0, 
n
, 
pOut
->
z
);

4700 if–
rc
 ) 
ab‹t_due_to_îr‹
;

4701 
pOut
->
íc
 = 
SQLITE_UTF8
;

4702 
	`UPDATE_MAX_BLOBSIZE
(
pOut
);

4703 
	`REGISTER_TRACE
(
pOp
->
p2
, 
pOut
);

4717 
OP_Rowid
: {

4718 
VdbeCurs‹
 *
pC
;

4719 
i64
 
v
;

4720 
sqlôe3_vèb
 *
pVèb
;

4721 c⁄° 
sqlôe3_moduÀ
 *
pModuÀ
;

4723 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

4724 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

4725 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

4726 
	`as£π
–
pC
!=0 );

4727 
	`as£π
–
pC
->
eCurTy≥
!=
CURTYPE_PSEUDO
 ||ÖC->
nuŒRow
 );

4728 if–
pC
->
nuŒRow
 ){

4729 
pOut
->
Êags
 = 
MEM_NuŒ
;

4731 }if–
pC
->
de„ºedMovëo
 ){

4732 
v
 = 
pC
->
movëoT¨gë
;

4733 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


4734 }if–
pC
->
eCurTy≥
==
CURTYPE_VTAB
 ){

4735 
	`as£π
–
pC
->
uc
.
pVCur
!=0 );

4736 
pVèb
 = 
pC
->
uc
.
pVCur
->pVtab;

4737 
pModuÀ
 = 
pVèb
->pModule;

4738 
	`as£π
–
pModuÀ
->
xRowid
 );

4739 
rc
 = 
pModuÀ
->
	`xRowid
(
pC
->
uc
.
pVCur
, &
v
);

4740 
	`sqlôe3VèbImp‹tEºmsg
(
p
, 
pVèb
);

4741 if–
rc
 ) 
ab‹t_due_to_îr‹
;

4744 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

4745 
	`as£π
–
pC
->
uc
.
pCurs‹
!=0 );

4746 
rc
 = 
	`sqlôe3VdbeCurs‹Re°‹e
(
pC
);

4747 if–
rc
 ) 
ab‹t_due_to_îr‹
;

4748 if–
pC
->
nuŒRow
 ){

4749 
pOut
->
Êags
 = 
MEM_NuŒ
;

4752 
v
 = 
	`sqlôe3BåìI¡egîKey
(
pC
->
uc
.
pCurs‹
);

4754 
pOut
->
u
.
i
 = 
v
;

4764 
OP_NuŒRow
: {

4765 
VdbeCurs‹
 *
pC
;

4767 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

4768 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

4769 
	`as£π
–
pC
!=0 );

4770 
pC
->
nuŒRow
 = 1;

4771 
pC
->
ˇcheSètus
 = 
CACHE_STALE
;

4772 if–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 ){

4773 
	`as£π
–
pC
->
uc
.
pCurs‹
!=0 );

4774 
	`sqlôe3BåìCÀ¨Curs‹
(
pC
->
uc
.
pCurs‹
);

4798 
OP_La°
: {

4799 
VdbeCurs‹
 *
pC
;

4800 
BtCurs‹
 *
pCr§
;

4801 
ªs
;

4803 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

4804 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

4805 
	`as£π
–
pC
!=0 );

4806 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

4807 
pCr§
 = 
pC
->
uc
.
pCurs‹
;

4808 
ªs
 = 0;

4809 
	`as£π
–
pCr§
!=0 );

4810 
pC
->
£ekResu…
 = 
pOp
->
p3
;

4811 #ifde‡
SQLITE_DEBUG


4812 
pC
->
£ekOp
 = 
OP_La°
;

4814 if–
pOp
->
p3
==0 || !
	`sqlôe3BåìCurs‹IsVÆidNN
(
pCr§
) ){

4815 
rc
 = 
	`sqlôe3BåìLa°
(
pCr§
, &
ªs
);

4816 
pC
->
nuŒRow
 = (
u8
)
ªs
;

4817 
pC
->
de„ºedMovëo
 = 0;

4818 
pC
->
ˇcheSètus
 = 
CACHE_STALE
;

4819 if–
rc
 ) 
ab‹t_due_to_îr‹
;

4820 if–
pOp
->
p2
>0 ){

4821 
	`VdbeBønchTakí
(
ªs
!=0,2);

4822 if–
ªs
 ) 
jump_to_p2
;

4825 
	`as£π
–
pOp
->
p2
==0 );

4852 
OP_S‹ãrS‹t
:

4853 
OP_S‹t
: {

4854 #ifde‡
SQLITE_TEST


4855 
sqlôe3_s‹t_cou¡
++;

4856 
sqlôe3_£¨ch_cou¡
--;

4858 
p
->
aCou¡î
[
SQLITE_STMTSTATUS_SORT
]++;

4873 
OP_Rewöd
: {

4874 
VdbeCurs‹
 *
pC
;

4875 
BtCurs‹
 *
pCr§
;

4876 
ªs
;

4878 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

4879 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

4880 
	`as£π
–
pC
!=0 );

4881 
	`as£π
–
	`isS‹ãr
(
pC
)==(
pOp
->
›code
==
OP_S‹ãrS‹t
) );

4882 
ªs
 = 1;

4883 #ifde‡
SQLITE_DEBUG


4884 
pC
->
£ekOp
 = 
OP_Rewöd
;

4886 if–
	`isS‹ãr
(
pC
) ){

4887 
rc
 = 
	`sqlôe3VdbeS‹ãrRewöd
(
pC
, &
ªs
);

4889 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

4890 
pCr§
 = 
pC
->
uc
.
pCurs‹
;

4891 
	`as£π
–
pCr§
 );

4892 
rc
 = 
	`sqlôe3BåìFú°
(
pCr§
, &
ªs
);

4893 
pC
->
de„ºedMovëo
 = 0;

4894 
pC
->
ˇcheSètus
 = 
CACHE_STALE
;

4896 if–
rc
 ) 
ab‹t_due_to_îr‹
;

4897 
pC
->
nuŒRow
 = (
u8
)
ªs
;

4898 
	`as£π
–
pOp
->
p2
>0 &&ÖOp->p2<
p
->
nOp
 );

4899 
	`VdbeBønchTakí
(
ªs
!=0,2);

4900 if–
ªs
 ) 
jump_to_p2
;

4974 
OP_S‹ãrNext
: {

4975 
VdbeCurs‹
 *
pC
;

4976 
ªs
;

4978 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

4979 
	`as£π
–
	`isS‹ãr
(
pC
) );

4980 
ªs
 = 0;

4981 
rc
 = 
	`sqlôe3VdbeS‹ãrNext
(
db
, 
pC
, &
ªs
);

4982 
√xt_èû
;

4983 
OP_PªvIfO≥n
:

4984 
OP_NextIfO≥n
:

4985 if–
p
->
≠C§
[
pOp
->
p1
]==0 ) ;

4987 
OP_Pªv
:

4988 
OP_Next
:

4989 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

4990 
	`as£π
–
pOp
->
p5
<
	`AºaySize
(
p
->
aCou¡î
) );

4991 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

4992 
ªs
 = 
pOp
->
p3
;

4993 
	`as£π
–
pC
!=0 );

4994 
	`as£π
–
pC
->
de„ºedMovëo
==0 );

4995 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

4996 
	`as£π
–
ªs
==0 || (ªs==1 && 
pC
->
isTabÀ
==0) );

4997 
	`ã°ˇ£
–
ªs
==1 );

4998 
	`as£π
–
pOp
->
›code
!=
OP_Next
 ||ÖOp->
p4
.
xAdv™˚
==
sqlôe3BåìNext
 );

4999 
	`as£π
–
pOp
->
›code
!=
OP_Pªv
 ||ÖOp->
p4
.
xAdv™˚
==
sqlôe3BåìPªvious
 );

5000 
	`as£π
–
pOp
->
›code
!=
OP_NextIfO≥n
 ||ÖOp->
p4
.
xAdv™˚
==
sqlôe3BåìNext
 );

5001 
	`as£π
–
pOp
->
›code
!=
OP_PªvIfO≥n
 ||ÖOp->
p4
.
xAdv™˚
==
sqlôe3BåìPªvious
);

5005 
	`as£π
–
pOp
->
›code
!=
OP_Next
 ||ÖOp->›code!=
OP_NextIfO≥n


5006 || 
pC
->
£ekOp
==
OP_SìkGT
 ||ÖC->£ekOp==
OP_SìkGE


5007 || 
pC
->
£ekOp
==
OP_Rewöd
 ||ÖC->£ekOp==
OP_Found
);

5008 
	`as£π
–
pOp
->
›code
!=
OP_Pªv
 ||ÖOp->›code!=
OP_PªvIfO≥n


5009 || 
pC
->
£ekOp
==
OP_SìkLT
 ||ÖC->£ekOp==
OP_SìkLE


5010 || 
pC
->
£ekOp
==
OP_La°
 );

5012 
rc
 = 
pOp
->
p4
.
	`xAdv™˚
(
pC
->
uc
.
pCurs‹
, &
ªs
);

5013 
√xt_èû
:

5014 
pC
->
ˇcheSètus
 = 
CACHE_STALE
;

5015 
	`VdbeBønchTakí
(
ªs
==0,2);

5016 if–
rc
 ) 
ab‹t_due_to_îr‹
;

5017 if–
ªs
==0 ){

5018 
pC
->
nuŒRow
 = 0;

5019 
p
->
aCou¡î
[
pOp
->
p5
]++;

5020 #ifde‡
SQLITE_TEST


5021 
sqlôe3_£¨ch_cou¡
++;

5023 
jump_to_p2_™d_check_f‹_öãºu±
;

5025 
pC
->
nuŒRow
 = 1;

5027 
check_f‹_öãºu±
;

5065 
OP_S‹ãrIn£π
:

5066 
OP_IdxIn£π
: {

5067 
VdbeCurs‹
 *
pC
;

5068 
BåìPaylﬂd
 
x
;

5070 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

5071 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

5072 
	`as£π
–
pC
!=0 );

5073 
	`as£π
–
	`isS‹ãr
(
pC
)==(
pOp
->
›code
==
OP_S‹ãrIn£π
) );

5074 
pIn2
 = &
aMem
[
pOp
->
p2
];

5075 
	`as£π
–
pIn2
->
Êags
 & 
MEM_Blob
 );

5076 if–
pOp
->
p5
 & 
OPFLAG_NCHANGE
 ) 
p
->
nCh™ge
++;

5077 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 || 
pOp
->
›code
==
OP_S‹ãrIn£π
 );

5078 
	`as£π
–
pC
->
isTabÀ
==0 );

5079 
rc
 = 
	`Ex∑ndBlob
(
pIn2
);

5080 if–
rc
 ) 
ab‹t_due_to_îr‹
;

5081 if–
pOp
->
›code
==
OP_S‹ãrIn£π
 ){

5082 
rc
 = 
	`sqlôe3VdbeS‹ãrWrôe
(
pC
, 
pIn2
);

5084 
x
.
nKey
 = 
pIn2
->
n
;

5085 
x
.
pKey
 = 
pIn2
->
z
;

5086 
x
.
aMem
 =áMem + 
pOp
->
p3
;

5087 
x
.
nMem
 = (
u16
)
pOp
->
p4
.
i
;

5091 
rc
 = 
	`sqlôe3BåìIn£π
(
pC
->
uc
.
pCurs‹
, &
x
,

5092 (
pOp
->
p5
 & 
OPFLAG_APPEND
)!=0,

5093 ((
pOp
->
p5
 & 
OPFLAG_USESEEKRESULT
Ë? 
pC
->
£ekResu…
 : 0)

5095 
	`as£π
–
pC
->
de„ºedMovëo
==0 );

5096 
pC
->
ˇcheSètus
 = 
CACHE_STALE
;

5098 if–
rc
Ë
ab‹t_due_to_îr‹
;

5109 
OP_IdxDñëe
: {

5110 
VdbeCurs‹
 *
pC
;

5111 
BtCurs‹
 *
pCr§
;

5112 
ªs
;

5113 
U≈ackedRec‹d
 
r
;

5115 
	`as£π
–
pOp
->
p3
>0 );

5116 
	`as£π
–
pOp
->
p2
>0 &&ÖOp->p2+pOp->
p3
<=(
p
->
nMem
+1 -Ö->
nCurs‹
)+1 );

5117 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

5118 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

5119 
	`as£π
–
pC
!=0 );

5120 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

5121 
pCr§
 = 
pC
->
uc
.
pCurs‹
;

5122 
	`as£π
–
pCr§
!=0 );

5123 
	`as£π
–
pOp
->
p5
==0 );

5124 
r
.
pKeyInfo
 = 
pC
->pKeyInfo;

5125 
r
.
nFõld
 = (
u16
)
pOp
->
p3
;

5126 
r
.
deÁu…_rc
 = 0;

5127 
r
.
aMem
 = &aMem[
pOp
->
p2
];

5128 
rc
 = 
	`sqlôe3BåìMovëoU≈acked
(
pCr§
, &
r
, 0, 0, &
ªs
);

5129 if–
rc
 ) 
ab‹t_due_to_îr‹
;

5130 if–
ªs
==0 ){

5131 
rc
 = 
	`sqlôe3BåìDñëe
(
pCr§
, 
BTREE_AUXDELETE
);

5132 if–
rc
 ) 
ab‹t_due_to_îr‹
;

5134 
	`as£π
–
pC
->
de„ºedMovëo
==0 );

5135 
pC
->
ˇcheSètus
 = 
CACHE_STALE
;

5136 
pC
->
£ekResu…
 = 0;

5168 
OP_Sìk
:

5169 
OP_IdxRowid
: {

5170 
VdbeCurs‹
 *
pC
;

5171 
VdbeCurs‹
 *
pTabCur
;

5172 
i64
 
rowid
;

5174 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

5175 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

5176 
	`as£π
–
pC
!=0 );

5177 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

5178 
	`as£π
–
pC
->
uc
.
pCurs‹
!=0 );

5179 
	`as£π
–
pC
->
isTabÀ
==0 );

5180 
	`as£π
–
pC
->
de„ºedMovëo
==0 );

5181 
	`as£π
–!
pC
->
nuŒRow
 || 
pOp
->
›code
==
OP_IdxRowid
 );

5185 
rc
 = 
	`sqlôe3VdbeCurs‹Re°‹e
(
pC
);

5190 if–
	`NEVER
(
rc
!=
SQLITE_OK
ËË
ab‹t_due_to_îr‹
;

5192 if–!
pC
->
nuŒRow
 ){

5193 
rowid
 = 0;

5194 
rc
 = 
	`sqlôe3VdbeIdxRowid
(
db
, 
pC
->
uc
.
pCurs‹
, &
rowid
);

5195 if–
rc
!=
SQLITE_OK
 ){

5196 
ab‹t_due_to_îr‹
;

5198 if–
pOp
->
›code
==
OP_Sìk
 ){

5199 
	`as£π
–
pOp
->
p3
>=0 &&ÖOp->p3<
p
->
nCurs‹
 );

5200 
pTabCur
 = 
p
->
≠C§
[
pOp
->
p3
];

5201 
	`as£π
–
pTabCur
!=0 );

5202 
	`as£π
–
pTabCur
->
eCurTy≥
==
CURTYPE_BTREE
 );

5203 
	`as£π
–
pTabCur
->
uc
.
pCurs‹
!=0 );

5204 
	`as£π
–
pTabCur
->
isTabÀ
 );

5205 
pTabCur
->
nuŒRow
 = 0;

5206 
pTabCur
->
movëoT¨gë
 = 
rowid
;

5207 
pTabCur
->
de„ºedMovëo
 = 1;

5208 
	`as£π
–
pOp
->
p4ty≥
==
P4_INTARRAY
 ||ÖOp->
p4
.
ai
==0 );

5209 
pTabCur
->
aA…M≠
 = 
pOp
->
p4
.
ai
;

5210 
pTabCur
->
pA…Curs‹
 = 
pC
;

5212 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

5213 
pOut
->
u
.
i
 = 
rowid
;

5214 
pOut
->
Êags
 = 
MEM_I¡
;

5217 
	`as£π
–
pOp
->
›code
==
OP_IdxRowid
 );

5218 
	`sqlôe3VdbeMemSëNuŒ
(&
aMem
[
pOp
->
p2
]);

5267 
OP_IdxLE
:

5268 
OP_IdxGT
:

5269 
OP_IdxLT
:

5270 
OP_IdxGE
: {

5271 
VdbeCurs‹
 *
pC
;

5272 
ªs
;

5273 
U≈ackedRec‹d
 
r
;

5275 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

5276 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

5277 
	`as£π
–
pC
!=0 );

5278 
	`as£π
–
pC
->
isOrdîed
 );

5279 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

5280 
	`as£π
–
pC
->
uc
.
pCurs‹
!=0);

5281 
	`as£π
–
pC
->
de„ºedMovëo
==0 );

5282 
	`as£π
–
pOp
->
p5
==0 ||ÖOp->p5==1 );

5283 
	`as£π
–
pOp
->
p4ty≥
==
P4_INT32
 );

5284 
r
.
pKeyInfo
 = 
pC
->pKeyInfo;

5285 
r
.
nFõld
 = (
u16
)
pOp
->
p4
.
i
;

5286 if–
pOp
->
›code
<
OP_IdxLT
 ){

5287 
	`as£π
–
pOp
->
›code
==
OP_IdxLE
 ||ÖOp->›code==
OP_IdxGT
 );

5288 
r
.
deÁu…_rc
 = -1;

5290 
	`as£π
–
pOp
->
›code
==
OP_IdxGE
 ||ÖOp->›code==
OP_IdxLT
 );

5291 
r
.
deÁu…_rc
 = 0;

5293 
r
.
aMem
 = &aMem[
pOp
->
p3
];

5294 #ifde‡
SQLITE_DEBUG


5295 { 
i
; i=0; i<
r
.
nFõld
; i++Ë
	`as£π
–
	`memIsVÆid
(&r.
aMem
[i]) ); }

5297 
ªs
 = 0;

5298 
rc
 = 
	`sqlôe3VdbeIdxKeyCom∑ª
(
db
, 
pC
, &
r
, &
ªs
);

5299 
	`as£π
–(
OP_IdxLE
&1)==(
OP_IdxLT
&1Ë&& (
OP_IdxGE
&1)==(
OP_IdxGT
&1) );

5300 if–(
pOp
->
›code
&1)==(
OP_IdxLT
&1) ){

5301 
	`as£π
–
pOp
->
›code
==
OP_IdxLE
 ||ÖOp->›code==
OP_IdxLT
 );

5302 
ªs
 = -res;

5304 
	`as£π
–
pOp
->
›code
==
OP_IdxGE
 ||ÖOp->›code==
OP_IdxGT
 );

5305 
ªs
++;

5307 
	`VdbeBønchTakí
(
ªs
>0,2);

5308 if–
rc
 ) 
ab‹t_due_to_îr‹
;

5309 if–
ªs
>0 ) 
jump_to_p2
;

5333 
OP_De°roy
: {

5334 
iMoved
;

5335 
iDb
;

5337 
	`as£π
–
p
->
ªadO∆y
==0 );

5338 
	`as£π
–
pOp
->
p1
>1 );

5339 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

5340 
pOut
->
Êags
 = 
MEM_NuŒ
;

5341 if–
db
->
nVdbeRód
 > db->
nVDe°roy
+1 ){

5342 
rc
 = 
SQLITE_LOCKED
;

5343 
p
->
îr‹A˘i⁄
 = 
OE_Ab‹t
;

5344 
ab‹t_due_to_îr‹
;

5346 
iDb
 = 
pOp
->
p3
;

5347 
	`as£π
–
	`DbMaskTe°
(
p
->
båìMask
, 
iDb
) );

5348 
iMoved
 = 0;

5349 
rc
 = 
	`sqlôe3BåìDr›TabÀ
(
db
->
aDb
[
iDb
].
pBt
, 
pOp
->
p1
, &
iMoved
);

5350 
pOut
->
Êags
 = 
MEM_I¡
;

5351 
pOut
->
u
.
i
 = 
iMoved
;

5352 if–
rc
 ) 
ab‹t_due_to_îr‹
;

5353 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


5354 if–
iMoved
!=0 ){

5355 
	`sqlôe3RoŸPageMoved
(
db
, 
iDb
, 
iMoved
, 
pOp
->
p1
);

5357 
	`as£π
–
ª£tSchemaOnFau…
==0 ||Ñe£tSchemaOnFau…==
iDb
+1 );

5358 
ª£tSchemaOnFau…
 = 
iDb
+1;

5383 
OP_CÀ¨
: {

5384 
nCh™ge
;

5386 
nCh™ge
 = 0;

5387 
	`as£π
–
p
->
ªadO∆y
==0 );

5388 
	`as£π
–
	`DbMaskTe°
(
p
->
båìMask
, 
pOp
->
p2
) );

5389 
rc
 = 
	`sqlôe3BåìCÀ¨TabÀ
(

5390 
db
->
aDb
[
pOp
->
p2
].
pBt
,ÖOp->
p1
, (pOp->
p3
 ? &
nCh™ge
 : 0)

5392 if–
pOp
->
p3
 ){

5393 
p
->
nCh™ge
 +=ÇChange;

5394 if–
pOp
->
p3
>0 ){

5395 
	`as£π
–
	`memIsVÆid
(&
aMem
[
pOp
->
p3
]) );

5396 
	`memAboutToCh™ge
(
p
, &
aMem
[
pOp
->
p3
]);

5397 
aMem
[
pOp
->
p3
].
u
.
i
 +
nCh™ge
;

5400 if–
rc
 ) 
ab‹t_due_to_îr‹
;

5412 
OP_Re£tS‹ãr
: {

5413 
VdbeCurs‹
 *
pC
;

5415 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

5416 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

5417 
	`as£π
–
pC
!=0 );

5418 if–
	`isS‹ãr
(
pC
) ){

5419 
	`sqlôe3VdbeS‹ãrRe£t
(
db
, 
pC
->
uc
.
pS‹ãr
);

5421 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

5422 
	`as£π
–
pC
->
isEphemîÆ
 );

5423 
rc
 = 
	`sqlôe3BåìCÀ¨TabÀOfCurs‹
(
pC
->
uc
.
pCurs‹
);

5424 if–
rc
 ) 
ab‹t_due_to_îr‹
;

5453 
OP_Cª©eIndex
:

5454 
OP_Cª©eTabÀ
: {

5455 
pgno
;

5456 
Êags
;

5457 
Db
 *
pDb
;

5459 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

5460 
pgno
 = 0;

5461 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
db
->
nDb
 );

5462 
	`as£π
–
	`DbMaskTe°
(
p
->
båìMask
, 
pOp
->
p1
) );

5463 
	`as£π
–
p
->
ªadO∆y
==0 );

5464 
pDb
 = &
db
->
aDb
[
pOp
->
p1
];

5465 
	`as£π
–
pDb
->
pBt
!=0 );

5466 if–
pOp
->
›code
==
OP_Cª©eTabÀ
 ){

5468 
Êags
 = 
BTREE_INTKEY
;

5470 
Êags
 = 
BTREE_BLOBKEY
;

5472 
rc
 = 
	`sqlôe3BåìCª©eTabÀ
(
pDb
->
pBt
, &
pgno
, 
Êags
);

5473 if–
rc
 ) 
ab‹t_due_to_îr‹
;

5474 
pOut
->
u
.
i
 = 
pgno
;

5486 
OP_P¨£Schema
: {

5487 
iDb
;

5488 c⁄° *
zMa°î
;

5489 *
zSql
;

5490 
InôD©a
 
öôD©a
;

5496 #ifde‡
SQLITE_DEBUG


5497 
iDb
=0; iDb<
db
->
nDb
; iDb++){

5498 
	`as£π
–
iDb
==1 || 
	`sqlôe3BåìHﬁdsMuãx
(
db
->
aDb
[iDb].
pBt
) );

5502 
iDb
 = 
pOp
->
p1
;

5503 
	`as£π
–
iDb
>=0 && iDb<
db
->
nDb
 );

5504 
	`as£π
–
	`DbHasPr›îty
(
db
, 
iDb
, 
DB_SchemaLﬂded
) );

5506 
zMa°î
 = 
MASTER_NAME
;

5507 
öôD©a
.
db
 = db;

5508 
öôD©a
.
iDb
 = 
pOp
->
p1
;

5509 
öôD©a
.
pzEºMsg
 = &
p
->
zEºMsg
;

5510 
zSql
 = 
	`sqlôe3MPrötf
(
db
,

5512 
db
->
aDb
[
iDb
].
zDbSName
, 
zMa°î
, 
pOp
->
p4
.
z
);

5513 if–
zSql
==0 ){

5514 
rc
 = 
SQLITE_NOMEM_BKPT
;

5516 
	`as£π
–
db
->
öô
.
busy
==0 );

5517 
db
->
öô
.
busy
 = 1;

5518 
öôD©a
.
rc
 = 
SQLITE_OK
;

5519 
	`as£π
–!
db
->
mÆlocFaûed
 );

5520 
rc
 = 
	`sqlôe3_exec
(
db
, 
zSql
, 
sqlôe3InôCÆlback
, &
öôD©a
, 0);

5521 if–
rc
==
SQLITE_OK
 )Ñ¯
öôD©a
.rc;

5522 
	`sqlôe3DbFªe
(
db
, 
zSql
);

5523 
db
->
öô
.
busy
 = 0;

5526 if–
rc
 ){

5527 
	`sqlôe3Re£tAŒSchemasOfC⁄√˘i⁄
(
db
);

5528 if–
rc
==
SQLITE_NOMEM
 ){

5529 
no_mem
;

5531 
ab‹t_due_to_îr‹
;

5536 #i‡!
	`deföed
(
SQLITE_OMIT_ANALYZE
)

5543 
OP_LﬂdA«lysis
: {

5544 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
db
->
nDb
 );

5545 
rc
 = 
	`sqlôe3A«lysisLﬂd
(
db
, 
pOp
->
p1
);

5546 if–
rc
 ) 
ab‹t_due_to_îr‹
;

5559 
OP_Dr›TabÀ
: {

5560 
	`sqlôe3U∆ökAndDñëeTabÀ
(
db
, 
pOp
->
p1
,ÖOp->
p4
.
z
);

5572 
OP_Dr›Index
: {

5573 
	`sqlôe3U∆ökAndDñëeIndex
(
db
, 
pOp
->
p1
,ÖOp->
p4
.
z
);

5585 
OP_Dr›Triggî
: {

5586 
	`sqlôe3U∆ökAndDñëeTriggî
(
db
, 
pOp
->
p1
,ÖOp->
p4
.
z
);

5591 #i‚de‡
SQLITE_OMIT_INTEGRITY_CHECK


5611 
OP_I¡egrôyCk
: {

5612 
nRoŸ
;

5613 *
aRoŸ
;

5614 
nEº
;

5615 *
z
;

5616 
Mem
 *
≤Eº
;

5618 
	`as£π
–
p
->
bIsRódî
 );

5619 
nRoŸ
 = 
pOp
->
p2
;

5620 
aRoŸ
 = 
pOp
->
p4
.
ai
;

5621 
	`as£π
–
nRoŸ
>0 );

5622 
	`as£π
–
aRoŸ
[
nRoŸ
]==0 );

5623 
	`as£π
–
pOp
->
p3
>0 &&ÖOp->p3<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

5624 
≤Eº
 = &
aMem
[
pOp
->
p3
];

5625 
	`as£π
–(
≤Eº
->
Êags
 & 
MEM_I¡
)!=0 );

5626 
	`as£π
–(
≤Eº
->
Êags
 & (
MEM_Så
|
MEM_Blob
))==0 );

5627 
pIn1
 = &
aMem
[
pOp
->
p1
];

5628 
	`as£π
–
pOp
->
p5
<
db
->
nDb
 );

5629 
	`as£π
–
	`DbMaskTe°
(
p
->
båìMask
, 
pOp
->
p5
) );

5630 
z
 = 
	`sqlôe3BåìI¡egrôyCheck
(
db
->
aDb
[
pOp
->
p5
].
pBt
, 
aRoŸ
, 
nRoŸ
,

5631 ()
≤Eº
->
u
.
i
, &
nEº
);

5632 
≤Eº
->
u
.
i
 -
nEº
;

5633 
	`sqlôe3VdbeMemSëNuŒ
(
pIn1
);

5634 if–
nEº
==0 ){

5635 
	`as£π
–
z
==0 );

5636 }if–
z
==0 ){

5637 
no_mem
;

5639 
	`sqlôe3VdbeMemSëSå
(
pIn1
, 
z
, -1, 
SQLITE_UTF8
, 
sqlôe3_‰ì
);

5641 
	`UPDATE_MAX_BLOBSIZE
(
pIn1
);

5642 
	`sqlôe3VdbeCh™geEncodög
(
pIn1
, 
ícodög
);

5655 
OP_RowSëAdd
: {

5656 
pIn1
 = &
aMem
[
pOp
->
p1
];

5657 
pIn2
 = &
aMem
[
pOp
->
p2
];

5658 
	`as£π
–(
pIn2
->
Êags
 & 
MEM_I¡
)!=0 );

5659 if–(
pIn1
->
Êags
 & 
MEM_RowSë
)==0 ){

5660 
	`sqlôe3VdbeMemSëRowSë
(
pIn1
);

5661 if–(
pIn1
->
Êags
 & 
MEM_RowSë
)==0 ) 
no_mem
;

5663 
	`sqlôe3RowSëIn£π
(
pIn1
->
u
.
pRowSë
, 
pIn2
->u.
i
);

5674 
OP_RowSëRód
: {

5675 
i64
 
vÆ
;

5677 
pIn1
 = &
aMem
[
pOp
->
p1
];

5678 if–(
pIn1
->
Êags
 & 
MEM_RowSë
)==0

5679 || 
	`sqlôe3RowSëNext
(
pIn1
->
u
.
pRowSë
, &
vÆ
)==0

5682 
	`sqlôe3VdbeMemSëNuŒ
(
pIn1
);

5683 
	`VdbeBønchTakí
(1,2);

5684 
jump_to_p2_™d_check_f‹_öãºu±
;

5687 
	`VdbeBønchTakí
(0,2);

5688 
	`sqlôe3VdbeMemSëI¡64
(&
aMem
[
pOp
->
p3
], 
vÆ
);

5690 
check_f‹_öãºu±
;

5717 
OP_RowSëTe°
: {

5718 
iSë
;

5719 
exi°s
;

5721 
pIn1
 = &
aMem
[
pOp
->
p1
];

5722 
pIn3
 = &
aMem
[
pOp
->
p3
];

5723 
iSë
 = 
pOp
->
p4
.
i
;

5724 
	`as£π
–
pIn3
->
Êags
&
MEM_I¡
 );

5729 if–(
pIn1
->
Êags
 & 
MEM_RowSë
)==0 ){

5730 
	`sqlôe3VdbeMemSëRowSë
(
pIn1
);

5731 if–(
pIn1
->
Êags
 & 
MEM_RowSë
)==0 ) 
no_mem
;

5734 
	`as£π
–
pOp
->
p4ty≥
==
P4_INT32
 );

5735 
	`as£π
–
iSë
==-1 || iSet>=0 );

5736 if–
iSë
 ){

5737 
exi°s
 = 
	`sqlôe3RowSëTe°
(
pIn1
->
u
.
pRowSë
, 
iSë
, 
pIn3
->u.
i
);

5738 
	`VdbeBønchTakí
(
exi°s
!=0,2);

5739 if–
exi°s
 ) 
jump_to_p2
;

5741 if–
iSë
>=0 ){

5742 
	`sqlôe3RowSëIn£π
(
pIn1
->
u
.
pRowSë
, 
pIn3
->u.
i
);

5748 #i‚de‡
SQLITE_OMIT_TRIGGER


5765 
OP_Progøm
: {

5766 
nMem
;

5767 
nByã
;

5768 
Mem
 *
pRt
;

5769 
Mem
 *
pMem
;

5770 
Mem
 *
pEnd
;

5771 
VdbeFøme
 *
pFøme
;

5772 
SubProgøm
 *
pProgøm
;

5773 *
t
;

5775 
pProgøm
 = 
pOp
->
p4
.pProgram;

5776 
pRt
 = &
aMem
[
pOp
->
p3
];

5777 
	`as£π
–
pProgøm
->
nOp
>0 );

5790 if–
pOp
->
p5
 ){

5791 
t
 = 
pProgøm
->
tokí
;

5792 
pFøme
=
p
->pFøme;ÖFømê&&ÖFøme->
tokí
!=
t
;ÖFømeıFøme->
pP¨ít
);

5793 if–
pFøme
 ) ;

5796 if–
p
->
nFøme
>=
db
->
aLimô
[
SQLITE_LIMIT_TRIGGER_DEPTH
] ){

5797 
rc
 = 
SQLITE_ERROR
;

5798 
	`sqlôe3VdbeEº‹
(
p
, "too manyÜevels ofÅriggerÑecursion");

5799 
ab‹t_due_to_îr‹
;

5806 if–(
pRt
->
Êags
&
MEM_Føme
)==0 ){

5812 
nMem
 = 
pProgøm
->nMem +ÖProgøm->
nC§
;

5813 
	`as£π
–
nMem
>0 );

5814 if–
pProgøm
->
nC§
==0 ) 
nMem
++;

5815 
nByã
 = 
	`ROUND8
((
VdbeFøme
))

5816 + 
nMem
 * (
Mem
)

5817 + 
pProgøm
->
nC§
 * (
VdbeCurs‹
 *);

5818 
pFøme
 = 
	`sqlôe3DbMÆlocZîo
(
db
, 
nByã
);

5819 if–!
pFøme
 ){

5820 
no_mem
;

5822 
	`sqlôe3VdbeMemRñó£
(
pRt
);

5823 
pRt
->
Êags
 = 
MEM_Føme
;

5824 
pRt
->
u
.
pFøme
 =ÖFrame;

5826 
pFøme
->
v
 = 
p
;

5827 
pFøme
->
nChûdMem
 = 
nMem
;

5828 
pFøme
->
nChûdC§
 = 
pProgøm
->
nC§
;

5829 
pFøme
->
pc
 = ()(
pOp
 - 
aOp
);

5830 
pFøme
->
aMem
 = 
p
->aMem;

5831 
pFøme
->
nMem
 = 
p
->nMem;

5832 
pFøme
->
≠C§
 = 
p
->apCsr;

5833 
pFøme
->
nCurs‹
 = 
p
->nCursor;

5834 
pFøme
->
aOp
 = 
p
->aOp;

5835 
pFøme
->
nOp
 = 
p
->nOp;

5836 
pFøme
->
tokí
 = 
pProgøm
->token;

5837 #ifde‡
SQLITE_ENABLE_STMT_SCANSTATUS


5838 
pFøme
->
™Exec
 = 
p
->anExec;

5841 
pEnd
 = &
	`VdbeFømeMem
(
pFøme
)[pFøme->
nChûdMem
];

5842 
pMem
=
	`VdbeFømeMem
(
pFøme
);ÖMem!=
pEnd
;ÖMem++){

5843 
pMem
->
Êags
 = 
MEM_Undeföed
;

5844 
pMem
->
db
 = db;

5847 
pFøme
 = 
pRt
->
u
.pFrame;

5848 
	`as£π
–
pProgøm
->
nMem
+pProgøm->
nC§
==
pFøme
->
nChûdMem


5849 || (
pProgøm
->
nC§
==0 &&ÖProgøm->
nMem
+1==
pFøme
->
nChûdMem
) );

5850 
	`as£π
–
pProgøm
->
nC§
==
pFøme
->
nChûdC§
 );

5851 
	`as£π
–()(
pOp
 - 
aOp
)==
pFøme
->
pc
 );

5854 
p
->
nFøme
++;

5855 
pFøme
->
pP¨ít
 = 
p
->pFrame;

5856 
pFøme
->
œ°Rowid
 =ÜastRowid;

5857 
pFøme
->
nCh™ge
 = 
p
->nChange;

5858 
pFøme
->
nDbCh™ge
 = 
p
->
db
->
nCh™ge
;

5859 
	`as£π
–
pFøme
->
pAuxD©a
==0 );

5860 
pFøme
->
pAuxD©a
 = 
p
->pAuxData;

5861 
p
->
pAuxD©a
 = 0;

5862 
p
->
nCh™ge
 = 0;

5863 
p
->
pFøme
 =ÖFrame;

5864 
p
->
aMem
 =áMem = 
	`VdbeFømeMem
(
pFøme
);

5865 
p
->
nMem
 = 
pFøme
->
nChûdMem
;

5866 
p
->
nCurs‹
 = (
u16
)
pFøme
->
nChûdC§
;

5867 
p
->
≠C§
 = (
VdbeCurs‹
 **)&
aMem
[p->
nMem
];

5868 
p
->
aOp
 =áO∞
pProgøm
->aOp;

5869 
p
->
nOp
 = 
pProgøm
->nOp;

5870 #ifde‡
SQLITE_ENABLE_STMT_SCANSTATUS


5871 
p
->
™Exec
 = 0;

5873 
pOp
 = &
aOp
[-1];

5890 
OP_P¨am
: {

5891 
VdbeFøme
 *
pFøme
;

5892 
Mem
 *
pIn
;

5893 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

5894 
pFøme
 = 
p
->pFrame;

5895 
pIn
 = &
pFøme
->
aMem
[
pOp
->
p1
 +ÖFøme->
aOp
[pFøme->
pc
].p1];

5896 
	`sqlôe3VdbeMemShÆlowC›y
(
pOut
, 
pIn
, 
MEM_Ephem
);

5902 #i‚de‡
SQLITE_OMIT_FOREIGN_KEY


5911 
OP_FkCou¡î
: {

5912 if–
db
->
Êags
 & 
SQLITE_De„rFKs
 ){

5913 
db
->
nDe„ºedImmC⁄s
 +
pOp
->
p2
;

5914 }if–
pOp
->
p1
 ){

5915 
db
->
nDe„ºedC⁄s
 +
pOp
->
p2
;

5917 
p
->
nFkC⁄°øöt
 +
pOp
->
p2
;

5934 
OP_FkIfZîo
: {

5935 if–
pOp
->
p1
 ){

5936 
	`VdbeBønchTakí
(
db
->
nDe„ºedC⁄s
==0 && db->
nDe„ºedImmC⁄s
==0, 2);

5937 if–
db
->
nDe„ºedC⁄s
==0 && db->
nDe„ºedImmC⁄s
==0 ) 
jump_to_p2
;

5939 
	`VdbeBønchTakí
(
p
->
nFkC⁄°øöt
==0 && 
db
->
nDe„ºedImmC⁄s
==0, 2);

5940 if–
p
->
nFkC⁄°øöt
==0 && 
db
->
nDe„ºedImmC⁄s
==0 ) 
jump_to_p2
;

5946 #i‚de‡
SQLITE_OMIT_AUTOINCREMENT


5958 
OP_MemMax
: {

5959 
VdbeFøme
 *
pFøme
;

5960 if–
p
->
pFøme
 ){

5961 
pFøme
=
p
->pFøme;ÖFøme->
pP¨ít
;ÖFrame=pFrame->pParent);

5962 
pIn1
 = &
pFøme
->
aMem
[
pOp
->
p1
];

5964 
pIn1
 = &
aMem
[
pOp
->
p1
];

5966 
	`as£π
–
	`memIsVÆid
(
pIn1
) );

5967 
	`sqlôe3VdbeMemI¡egîify
(
pIn1
);

5968 
pIn2
 = &
aMem
[
pOp
->
p2
];

5969 
	`sqlôe3VdbeMemI¡egîify
(
pIn2
);

5970 if–
pIn1
->
u
.
i
<
pIn2
->u.i){

5971 
pIn1
->
u
.
i
 = 
pIn2
->u.i;

5987 
OP_IfPos
: {

5988 
pIn1
 = &
aMem
[
pOp
->
p1
];

5989 
	`as£π
–
pIn1
->
Êags
&
MEM_I¡
 );

5990 
	`VdbeBønchTakí
–
pIn1
->
u
.
i
>0, 2);

5991 if–
pIn1
->
u
.
i
>0 ){

5992 
pIn1
->
u
.
i
 -
pOp
->
p3
;

5993 
jump_to_p2
;

6016 
OP_Off£tLimô
: {

6017 
i64
 
x
;

6018 
pIn1
 = &
aMem
[
pOp
->
p1
];

6019 
pIn3
 = &
aMem
[
pOp
->
p3
];

6020 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

6021 
	`as£π
–
pIn1
->
Êags
 & 
MEM_I¡
 );

6022 
	`as£π
–
pIn3
->
Êags
 & 
MEM_I¡
 );

6023 
x
 = 
pIn1
->
u
.
i
;

6024 if–
x
<=0 || 
	`sqlôe3AddI¡64
(&x, 
pIn3
->
u
.
i
>0?pIn3->u.i:0) ){

6032 
pOut
->
u
.
i
 = -1;

6034 
pOut
->
u
.
i
 = 
x
;

6047 
OP_IfNŸZîo
: {

6048 
pIn1
 = &
aMem
[
pOp
->
p1
];

6049 
	`as£π
–
pIn1
->
Êags
&
MEM_I¡
 );

6050 
	`VdbeBønchTakí
(
pIn1
->
u
.
i
<0, 2);

6051 if–
pIn1
->
u
.
i
 ){

6052 if–
pIn1
->
u
.
i
>0 )ÖIn1->u.i--;

6053 
jump_to_p2
;

6064 
OP_De¸JumpZîo
: {

6065 
pIn1
 = &
aMem
[
pOp
->
p1
];

6066 
	`as£π
–
pIn1
->
Êags
&
MEM_I¡
 );

6067 if–
pIn1
->
u
.
i
>
SMALLEST_INT64
 )ÖIn1->u.i--;

6068 
	`VdbeBønchTakí
(
pIn1
->
u
.
i
==0, 2);

6069 if–
pIn1
->
u
.
i
==0 ) 
jump_to_p2
;

6102 
OP_AggSãp0
: {

6103 
n
;

6104 
sqlôe3_c⁄ãxt
 *
pCtx
;

6106 
	`as£π
–
pOp
->
p4ty≥
==
P4_FUNCDEF
 );

6107 
n
 = 
pOp
->
p5
;

6108 
	`as£π
–
pOp
->
p3
>0 &&ÖOp->p3<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

6109 
	`as£π
–
n
==0 || (
pOp
->
p2
>0 &&ÖOp->p2+n<=(
p
->
nMem
+1 -Ö->
nCurs‹
)+1) );

6110 
	`as£π
–
pOp
->
p3
<pOp->
p2
 ||ÖOp->p3>ıOp->p2+
n
 );

6111 
pCtx
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, (*pCtxË+ (
n
-1)*(
sqlôe3_vÆue
*));

6112 if–
pCtx
==0 ) 
no_mem
;

6113 
pCtx
->
pMem
 = 0;

6114 
pCtx
->
pFunc
 = 
pOp
->
p4
.pFunc;

6115 
pCtx
->
iOp
 = ()(
pOp
 - 
aOp
);

6116 
pCtx
->
pVdbe
 = 
p
;

6117 
pCtx
->
¨gc
 = 
n
;

6118 
pOp
->
p4ty≥
 = 
P4_FUNCCTX
;

6119 
pOp
->
p4
.
pCtx
 =ÖCtx;

6120 
pOp
->
›code
 = 
OP_AggSãp
;

6123 
OP_AggSãp
: {

6124 
i
;

6125 
sqlôe3_c⁄ãxt
 *
pCtx
;

6126 
Mem
 *
pMem
;

6127 
Mem
 
t
;

6129 
	`as£π
–
pOp
->
p4ty≥
==
P4_FUNCCTX
 );

6130 
pCtx
 = 
pOp
->
p4
.pCtx;

6131 
pMem
 = &
aMem
[
pOp
->
p3
];

6137 if–
pCtx
->
pMem
 !=ÖMem ){

6138 
pCtx
->
pMem
 =ÖMem;

6139 
i
=
pCtx
->
¨gc
-1; i>=0; i--ËpCtx->
¨gv
[i] = &
aMem
[
pOp
->
p2
+i];

6142 #ifde‡
SQLITE_DEBUG


6143 
i
=0; i<
pCtx
->
¨gc
; i++){

6144 
	`as£π
–
	`memIsVÆid
(
pCtx
->
¨gv
[
i
]) );

6145 
	`REGISTER_TRACE
(
pOp
->
p2
+
i
, 
pCtx
->
¨gv
[i]);

6149 
pMem
->
n
++;

6150 
	`sqlôe3VdbeMemInô
(&
t
, 
db
, 
MEM_NuŒ
);

6151 
pCtx
->
pOut
 = &
t
;

6152 
pCtx
->
fEº‹OrAux
 = 0;

6153 
pCtx
->
skùFœg
 = 0;

6154 (
pCtx
->
pFunc
->
xSFunc
)’Ctx,pCtx->
¨gc
,pCtx->
¨gv
);

6155 if–
pCtx
->
fEº‹OrAux
 ){

6156 if–
pCtx
->
isEº‹
 ){

6157 
	`sqlôe3VdbeEº‹
(
p
, "%s", 
	`sqlôe3_vÆue_ãxt
(&
t
));

6158 
rc
 = 
pCtx
->
isEº‹
;

6160 
	`sqlôe3VdbeMemRñó£
(&
t
);

6161 if–
rc
 ) 
ab‹t_due_to_îr‹
;

6163 
	`as£π
–
t
.
Êags
==
MEM_NuŒ
 );

6165 if–
pCtx
->
skùFœg
 ){

6166 
	`as£π
–
pOp
[-1].
›code
==
OP_CﬁlSeq
 );

6167 
i
 = 
pOp
[-1].
p1
;

6168 if–
i
 ) 
	`sqlôe3VdbeMemSëI¡64
(&
aMem
[i], 1);

6186 
OP_AggFöÆ
: {

6187 
Mem
 *
pMem
;

6188 
	`as£π
–
pOp
->
p1
>0 &&ÖOp->p1<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

6189 
pMem
 = &
aMem
[
pOp
->
p1
];

6190 
	`as£π
–(
pMem
->
Êags
 & ~(
MEM_NuŒ
|
MEM_Agg
))==0 );

6191 
rc
 = 
	`sqlôe3VdbeMemFöÆize
(
pMem
, 
pOp
->
p4
.
pFunc
);

6192 if–
rc
 ){

6193 
	`sqlôe3VdbeEº‹
(
p
, "%s", 
	`sqlôe3_vÆue_ãxt
(
pMem
));

6194 
ab‹t_due_to_îr‹
;

6196 
	`sqlôe3VdbeCh™geEncodög
(
pMem
, 
ícodög
);

6197 
	`UPDATE_MAX_BLOBSIZE
(
pMem
);

6198 if–
	`sqlôe3VdbeMemTooBig
(
pMem
) ){

6199 
too_big
;

6204 #i‚de‡
SQLITE_OMIT_WAL


6216 
OP_Checkpoöt
: {

6217 
i
;

6218 
aRes
[3];

6219 
Mem
 *
pMem
;

6221 
	`as£π
–
p
->
ªadO∆y
==0 );

6222 
aRes
[0] = 0;

6223 
aRes
[1] =áRes[2] = -1;

6224 
	`as£π
–
pOp
->
p2
==
SQLITE_CHECKPOINT_PASSIVE


6225 || 
pOp
->
p2
==
SQLITE_CHECKPOINT_FULL


6226 || 
pOp
->
p2
==
SQLITE_CHECKPOINT_RESTART


6227 || 
pOp
->
p2
==
SQLITE_CHECKPOINT_TRUNCATE


6229 
rc
 = 
	`sqlôe3Checkpoöt
(
db
, 
pOp
->
p1
,ÖOp->
p2
, &
aRes
[1], &aRes[2]);

6230 if–
rc
 ){

6231 if–
rc
!=
SQLITE_BUSY
 ) 
ab‹t_due_to_îr‹
;

6232 
rc
 = 
SQLITE_OK
;

6233 
aRes
[0] = 1;

6235 
i
=0, 
pMem
 = &
aMem
[
pOp
->
p3
]; i<3; i++,ÖMem++){

6236 
	`sqlôe3VdbeMemSëI¡64
(
pMem
, (
i64
)
aRes
[
i
]);

6242 #i‚de‡
SQLITE_OMIT_PRAGMA


6254 
OP_Jou∫ÆMode
: {

6255 
Båì
 *
pBt
;

6256 
Pagî
 *
pPagî
;

6257 
eNew
;

6258 
eOld
;

6259 #i‚de‡
SQLITE_OMIT_WAL


6260 c⁄° *
zFûíame
;

6263 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

6264 
eNew
 = 
pOp
->
p3
;

6265 
	`as£π
–
eNew
==
PAGER_JOURNALMODE_DELETE


6266 || 
eNew
==
PAGER_JOURNALMODE_TRUNCATE


6267 || 
eNew
==
PAGER_JOURNALMODE_PERSIST


6268 || 
eNew
==
PAGER_JOURNALMODE_OFF


6269 || 
eNew
==
PAGER_JOURNALMODE_MEMORY


6270 || 
eNew
==
PAGER_JOURNALMODE_WAL


6271 || 
eNew
==
PAGER_JOURNALMODE_QUERY


6273 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
db
->
nDb
 );

6274 
	`as£π
–
p
->
ªadO∆y
==0 );

6276 
pBt
 = 
db
->
aDb
[
pOp
->
p1
].pBt;

6277 
pPagî
 = 
	`sqlôe3BåìPagî
(
pBt
);

6278 
eOld
 = 
	`sqlôe3PagîGëJou∫ÆMode
(
pPagî
);

6279 if–
eNew
==
PAGER_JOURNALMODE_QUERY
 )ÉNew = 
eOld
;

6280 if–!
	`sqlôe3PagîOkToCh™geJou∫ÆMode
(
pPagî
ËË
eNew
 = 
eOld
;

6282 #i‚de‡
SQLITE_OMIT_WAL


6283 
zFûíame
 = 
	`sqlôe3PagîFûíame
(
pPagî
, 1);

6288 if–
eNew
==
PAGER_JOURNALMODE_WAL


6289 && (
	`sqlôe3SåÀn30
(
zFûíame
)==0

6290 || !
	`sqlôe3PagîWÆSuµ‹ãd
(
pPagî
))

6292 
eNew
 = 
eOld
;

6295 if–(
eNew
!=
eOld
)

6296 && (
eOld
==
PAGER_JOURNALMODE_WAL
 || 
eNew
==PAGER_JOURNALMODE_WAL)

6298 if–!
db
->
autoCommô
 || db->
nVdbeRód
>1 ){

6299 
rc
 = 
SQLITE_ERROR
;

6300 
	`sqlôe3VdbeEº‹
(
p
,

6302 (
eNew
==
PAGER_JOURNALMODE_WAL
 ? "into" : "out of")

6304 
ab‹t_due_to_îr‹
;

6307 if–
eOld
==
PAGER_JOURNALMODE_WAL
 ){

6313 
rc
 = 
	`sqlôe3PagîClo£WÆ
(
pPagî
, 
db
);

6314 if–
rc
==
SQLITE_OK
 ){

6315 
	`sqlôe3PagîSëJou∫ÆMode
(
pPagî
, 
eNew
);

6317 }if–
eOld
==
PAGER_JOURNALMODE_MEMORY
 ){

6320 
	`sqlôe3PagîSëJou∫ÆMode
(
pPagî
, 
PAGER_JOURNALMODE_OFF
);

6326 
	`as£π
–
	`sqlôe3BåìIsInTøns
(
pBt
)==0 );

6327 if–
rc
==
SQLITE_OK
 ){

6328 
rc
 = 
	`sqlôe3BåìSëVîsi⁄
(
pBt
, (
eNew
==
PAGER_JOURNALMODE_WAL
 ? 2 : 1));

6334 if–
rc
 ) 
eNew
 = 
eOld
;

6335 
eNew
 = 
	`sqlôe3PagîSëJou∫ÆMode
(
pPagî
,ÉNew);

6337 
pOut
->
Êags
 = 
MEM_Så
|
MEM_Sètic
|
MEM_Tîm
;

6338 
pOut
->
z
 = (*)
	`sqlôe3Jou∫ÆModíame
(
eNew
);

6339 
pOut
->
n
 = 
	`sqlôe3SåÀn30
’Out->
z
);

6340 
pOut
->
íc
 = 
SQLITE_UTF8
;

6341 
	`sqlôe3VdbeCh™geEncodög
(
pOut
, 
ícodög
);

6342 if–
rc
 ) 
ab‹t_due_to_îr‹
;

6347 #i‡!
	`deföed
(
SQLITE_OMIT_VACUUM
Ë&& !deföed(
SQLITE_OMIT_ATTACH
)

6353 
OP_Vacuum
: {

6354 
	`as£π
–
p
->
ªadO∆y
==0 );

6355 
rc
 = 
	`sqlôe3RunVacuum
(&
p
->
zEºMsg
, 
db
, 
pOp
->
p1
);

6356 if–
rc
 ) 
ab‹t_due_to_îr‹
;

6361 #i‡!
	`deföed
(
SQLITE_OMIT_AUTOVACUUM
)

6368 
OP_In¸Vacuum
: {

6369 
Båì
 *
pBt
;

6371 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
db
->
nDb
 );

6372 
	`as£π
–
	`DbMaskTe°
(
p
->
båìMask
, 
pOp
->
p1
) );

6373 
	`as£π
–
p
->
ªadO∆y
==0 );

6374 
pBt
 = 
db
->
aDb
[
pOp
->
p1
].pBt;

6375 
rc
 = 
	`sqlôe3BåìIn¸Vacuum
(
pBt
);

6376 
	`VdbeBønchTakí
(
rc
==
SQLITE_DONE
,2);

6377 if–
rc
 ){

6378 if–
rc
!=
SQLITE_DONE
 ) 
ab‹t_due_to_îr‹
;

6379 
rc
 = 
SQLITE_OK
;

6380 
jump_to_p2
;

6396 
OP_Expúe
: {

6397 if–!
pOp
->
p1
 ){

6398 
	`sqlôe3ExpúePª∑ªdSèãmíts
(
db
);

6400 
p
->
expúed
 = 1;

6405 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


6421 
OP_TabÀLock
: {

6422 
u8
 
isWrôeLock
 = (u8)
pOp
->
p3
;

6423 if–
isWrôeLock
 || 0==(
db
->
Êags
&
SQLITE_RódUncommôãd
) ){

6424 
p1
 = 
pOp
->p1;

6425 
	`as£π
–
p1
>=0 &&Ö1<
db
->
nDb
 );

6426 
	`as£π
–
	`DbMaskTe°
(
p
->
båìMask
, 
p1
) );

6427 
	`as£π
–
isWrôeLock
==0 || isWriteLock==1 );

6428 
rc
 = 
	`sqlôe3BåìLockTabÀ
(
db
->
aDb
[
p1
].
pBt
, 
pOp
->
p2
, 
isWrôeLock
);

6429 if–
rc
 ){

6430 if–(
rc
&0xFF)==
SQLITE_LOCKED
 ){

6431 c⁄° *
z
 = 
pOp
->
p4
.z;

6432 
	`sqlôe3VdbeEº‹
(
p
, "d©aba£ÅabÀ i†locked: %s", 
z
);

6434 
ab‹t_due_to_îr‹
;

6441 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


6451 
OP_VBegö
: {

6452 
VTabÀ
 *
pVTab
;

6453 
pVTab
 = 
pOp
->
p4
.
pVèb
;

6454 
rc
 = 
	`sqlôe3VèbBegö
(
db
, 
pVTab
);

6455 if–
pVTab
 ) 
	`sqlôe3VèbImp‹tEºmsg
(
p
,ÖVTab->
pVèb
);

6456 if–
rc
 ) 
ab‹t_due_to_îr‹
;

6461 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


6467 
OP_VCª©e
: {

6468 
Mem
 
sMem
;

6469 c⁄° *
zTab
;

6471 
	`mem£t
(&
sMem
, 0, (sMem));

6472 
sMem
.
db
 = db;

6475 
	`as£π
–(
aMem
[
pOp
->
p2
].
Êags
 & 
MEM_Så
)!=0 );

6476 
	`as£π
–(
aMem
[
pOp
->
p2
].
Êags
 & 
MEM_Sètic
)!=0 );

6477 
rc
 = 
	`sqlôe3VdbeMemC›y
(&
sMem
, &
aMem
[
pOp
->
p2
]);

6478 
	`as£π
–
rc
==
SQLITE_OK
 );

6479 
zTab
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(&
sMem
);

6480 
	`as£π
–
zTab
 || 
db
->
mÆlocFaûed
 );

6481 if–
zTab
 ){

6482 
rc
 = 
	`sqlôe3VèbCÆlCª©e
(
db
, 
pOp
->
p1
, 
zTab
, &
p
->
zEºMsg
);

6484 
	`sqlôe3VdbeMemRñó£
(&
sMem
);

6485 if–
rc
 ) 
ab‹t_due_to_îr‹
;

6490 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


6496 
OP_VDe°roy
: {

6497 
db
->
nVDe°roy
++;

6498 
rc
 = 
	`sqlôe3VèbCÆlDe°roy
(
db
, 
pOp
->
p1
,ÖOp->
p4
.
z
);

6499 
db
->
nVDe°roy
--;

6500 if–
rc
 ) 
ab‹t_due_to_îr‹
;

6505 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


6512 
OP_VO≥n
: {

6513 
VdbeCurs‹
 *
pCur
;

6514 
sqlôe3_vèb_curs‹
 *
pVCur
;

6515 
sqlôe3_vèb
 *
pVèb
;

6516 c⁄° 
sqlôe3_moduÀ
 *
pModuÀ
;

6518 
	`as£π
–
p
->
bIsRódî
 );

6519 
pCur
 = 0;

6520 
pVCur
 = 0;

6521 
pVèb
 = 
pOp
->
p4
.pVtab->pVtab;

6522 if–
pVèb
==0 || 
	`NEVER
’Vèb->
pModuÀ
==0) ){

6523 
rc
 = 
SQLITE_LOCKED
;

6524 
ab‹t_due_to_îr‹
;

6526 
pModuÀ
 = 
pVèb
->pModule;

6527 
rc
 = 
pModuÀ
->
	`xO≥n
(
pVèb
, &
pVCur
);

6528 
	`sqlôe3VèbImp‹tEºmsg
(
p
, 
pVèb
);

6529 if–
rc
 ) 
ab‹t_due_to_îr‹
;

6532 
pVCur
->
pVèb
 =ÖVtab;

6535 
pCur
 = 
	`ÆloˇãCurs‹
(
p
, 
pOp
->
p1
, 0, -1, 
CURTYPE_VTAB
);

6536 if–
pCur
 ){

6537 
pCur
->
uc
.
pVCur
 =ÖVCur;

6538 
pVèb
->
nRef
++;

6540 
	`as£π
–
db
->
mÆlocFaûed
 );

6541 
pModuÀ
->
	`xClo£
(
pVCur
);

6542 
no_mem
;

6548 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


6568 
OP_VFûãr
: {

6569 
nArg
;

6570 
iQuîy
;

6571 c⁄° 
sqlôe3_moduÀ
 *
pModuÀ
;

6572 
Mem
 *
pQuîy
;

6573 
Mem
 *
pArgc
;

6574 
sqlôe3_vèb_curs‹
 *
pVCur
;

6575 
sqlôe3_vèb
 *
pVèb
;

6576 
VdbeCurs‹
 *
pCur
;

6577 
ªs
;

6578 
i
;

6579 
Mem
 **
≠Arg
;

6581 
pQuîy
 = &
aMem
[
pOp
->
p3
];

6582 
pArgc
 = &
pQuîy
[1];

6583 
pCur
 = 
p
->
≠C§
[
pOp
->
p1
];

6584 
	`as£π
–
	`memIsVÆid
(
pQuîy
) );

6585 
	`REGISTER_TRACE
(
pOp
->
p3
, 
pQuîy
);

6586 
	`as£π
–
pCur
->
eCurTy≥
==
CURTYPE_VTAB
 );

6587 
pVCur
 = 
pCur
->
uc
.pVCur;

6588 
pVèb
 = 
pVCur
->pVtab;

6589 
pModuÀ
 = 
pVèb
->pModule;

6592 
	`as£π
–(
pQuîy
->
Êags
&
MEM_I¡
)!=0 && 
pArgc
->flags==MEM_Int );

6593 
nArg
 = ()
pArgc
->
u
.
i
;

6594 
iQuîy
 = ()
pQuîy
->
u
.
i
;

6597 
ªs
 = 0;

6598 
≠Arg
 = 
p
->apArg;

6599 
i
 = 0; i<
nArg
; i++){

6600 
≠Arg
[
i
] = &
pArgc
[i+1];

6602 
rc
 = 
pModuÀ
->
	`xFûãr
(
pVCur
, 
iQuîy
, 
pOp
->
p4
.
z
, 
nArg
, 
≠Arg
);

6603 
	`sqlôe3VèbImp‹tEºmsg
(
p
, 
pVèb
);

6604 if–
rc
 ) 
ab‹t_due_to_îr‹
;

6605 
ªs
 = 
pModuÀ
->
	`xEof
(
pVCur
);

6606 
pCur
->
nuŒRow
 = 0;

6607 
	`VdbeBønchTakí
(
ªs
!=0,2);

6608 if–
ªs
 ) 
jump_to_p2
;

6613 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


6621 
OP_VCﬁumn
: {

6622 
sqlôe3_vèb
 *
pVèb
;

6623 c⁄° 
sqlôe3_moduÀ
 *
pModuÀ
;

6624 
Mem
 *
pDe°
;

6625 
sqlôe3_c⁄ãxt
 
sC⁄ãxt
;

6627 
VdbeCurs‹
 *
pCur
 = 
p
->
≠C§
[
pOp
->
p1
];

6628 
	`as£π
–
pCur
->
eCurTy≥
==
CURTYPE_VTAB
 );

6629 
	`as£π
–
pOp
->
p3
>0 &&ÖOp->p3<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

6630 
pDe°
 = &
aMem
[
pOp
->
p3
];

6631 
	`memAboutToCh™ge
(
p
, 
pDe°
);

6632 if–
pCur
->
nuŒRow
 ){

6633 
	`sqlôe3VdbeMemSëNuŒ
(
pDe°
);

6636 
pVèb
 = 
pCur
->
uc
.
pVCur
->pVtab;

6637 
pModuÀ
 = 
pVèb
->pModule;

6638 
	`as£π
–
pModuÀ
->
xCﬁumn
 );

6639 
	`mem£t
(&
sC⁄ãxt
, 0, (sContext));

6640 
sC⁄ãxt
.
pOut
 = 
pDe°
;

6641 
	`MemSëTy≥Fœg
(
pDe°
, 
MEM_NuŒ
);

6642 
rc
 = 
pModuÀ
->
	`xCﬁumn
(
pCur
->
uc
.
pVCur
, &
sC⁄ãxt
, 
pOp
->
p2
);

6643 
	`sqlôe3VèbImp‹tEºmsg
(
p
, 
pVèb
);

6644 if–
sC⁄ãxt
.
isEº‹
 ){

6645 
rc
 = 
sC⁄ãxt
.
isEº‹
;

6647 
	`sqlôe3VdbeCh™geEncodög
(
pDe°
, 
ícodög
);

6648 
	`REGISTER_TRACE
(
pOp
->
p3
, 
pDe°
);

6649 
	`UPDATE_MAX_BLOBSIZE
(
pDe°
);

6651 if–
	`sqlôe3VdbeMemTooBig
(
pDe°
) ){

6652 
too_big
;

6654 if–
rc
 ) 
ab‹t_due_to_îr‹
;

6659 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


6666 
OP_VNext
: {

6667 
sqlôe3_vèb
 *
pVèb
;

6668 c⁄° 
sqlôe3_moduÀ
 *
pModuÀ
;

6669 
ªs
;

6670 
VdbeCurs‹
 *
pCur
;

6672 
ªs
 = 0;

6673 
pCur
 = 
p
->
≠C§
[
pOp
->
p1
];

6674 
	`as£π
–
pCur
->
eCurTy≥
==
CURTYPE_VTAB
 );

6675 if–
pCur
->
nuŒRow
 ){

6678 
pVèb
 = 
pCur
->
uc
.
pVCur
->pVtab;

6679 
pModuÀ
 = 
pVèb
->pModule;

6680 
	`as£π
–
pModuÀ
->
xNext
 );

6688 
rc
 = 
pModuÀ
->
	`xNext
(
pCur
->
uc
.
pVCur
);

6689 
	`sqlôe3VèbImp‹tEºmsg
(
p
, 
pVèb
);

6690 if–
rc
 ) 
ab‹t_due_to_îr‹
;

6691 
ªs
 = 
pModuÀ
->
	`xEof
(
pCur
->
uc
.
pVCur
);

6692 
	`VdbeBønchTakí
(!
ªs
,2);

6693 if–!
ªs
 ){

6695 
jump_to_p2_™d_check_f‹_öãºu±
;

6697 
check_f‹_öãºu±
;

6701 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


6708 
OP_VRíame
: {

6709 
sqlôe3_vèb
 *
pVèb
;

6710 
Mem
 *
pName
;

6712 
pVèb
 = 
pOp
->
p4
.pVtab->pVtab;

6713 
pName
 = &
aMem
[
pOp
->
p1
];

6714 
	`as£π
–
pVèb
->
pModuÀ
->
xRíame
 );

6715 
	`as£π
–
	`memIsVÆid
(
pName
) );

6716 
	`as£π
–
p
->
ªadO∆y
==0 );

6717 
	`REGISTER_TRACE
(
pOp
->
p1
, 
pName
);

6718 
	`as£π
–
pName
->
Êags
 & 
MEM_Så
 );

6719 
	`ã°ˇ£
–
pName
->
íc
==
SQLITE_UTF8
 );

6720 
	`ã°ˇ£
–
pName
->
íc
==
SQLITE_UTF16BE
 );

6721 
	`ã°ˇ£
–
pName
->
íc
==
SQLITE_UTF16LE
 );

6722 
rc
 = 
	`sqlôe3VdbeCh™geEncodög
(
pName
, 
SQLITE_UTF8
);

6723 if–
rc
 ) 
ab‹t_due_to_îr‹
;

6724 
rc
 = 
pVèb
->
pModuÀ
->
	`xRíame
’Vèb, 
pName
->
z
);

6725 
	`sqlôe3VèbImp‹tEºmsg
(
p
, 
pVèb
);

6726 
p
->
expúed
 = 0;

6727 if–
rc
 ) 
ab‹t_due_to_îr‹
;

6732 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


6760 
OP_VUpd©e
: {

6761 
sqlôe3_vèb
 *
pVèb
;

6762 c⁄° 
sqlôe3_moduÀ
 *
pModuÀ
;

6763 
nArg
;

6764 
i
;

6765 
sqlôe_öt64
 
rowid
;

6766 
Mem
 **
≠Arg
;

6767 
Mem
 *
pX
;

6769 
	`as£π
–
pOp
->
p2
==1 ||ÖOp->
p5
==
OE_Faû
 ||ÖOp->p5==
OE_Rﬁlback


6770 || 
pOp
->
p5
==
OE_Ab‹t
 ||ÖOp->p5==
OE_Ign‹e
 ||ÖOp->p5==
OE_Rïœ˚


6772 
	`as£π
–
p
->
ªadO∆y
==0 );

6773 
pVèb
 = 
pOp
->
p4
.pVtab->pVtab;

6774 if–
pVèb
==0 || 
	`NEVER
’Vèb->
pModuÀ
==0) ){

6775 
rc
 = 
SQLITE_LOCKED
;

6776 
ab‹t_due_to_îr‹
;

6778 
pModuÀ
 = 
pVèb
->pModule;

6779 
nArg
 = 
pOp
->
p2
;

6780 
	`as£π
–
pOp
->
p4ty≥
==
P4_VTAB
 );

6781 if–
	`ALWAYS
(
pModuÀ
->
xUpd©e
) ){

6782 
u8
 
vèbOnC⁄Êi˘
 = 
db
->vtabOnConflict;

6783 
≠Arg
 = 
p
->apArg;

6784 
pX
 = &
aMem
[
pOp
->
p3
];

6785 
i
=0; i<
nArg
; i++){

6786 
	`as£π
–
	`memIsVÆid
(
pX
) );

6787 
	`memAboutToCh™ge
(
p
, 
pX
);

6788 
≠Arg
[
i
] = 
pX
;

6789 
pX
++;

6791 
db
->
vèbOnC⁄Êi˘
 = 
pOp
->
p5
;

6792 
rc
 = 
pModuÀ
->
	`xUpd©e
(
pVèb
, 
nArg
, 
≠Arg
, &
rowid
);

6793 
db
->
vèbOnC⁄Êi˘
 = vtabOnConflict;

6794 
	`sqlôe3VèbImp‹tEºmsg
(
p
, 
pVèb
);

6795 if–
rc
==
SQLITE_OK
 && 
pOp
->
p1
 ){

6796 
	`as£π
–
nArg
>1 && 
≠Arg
[0] && (≠Arg[0]->
Êags
&
MEM_NuŒ
) );

6797 
db
->
œ°Rowid
 =Üa°Rowid = 
rowid
;

6799 if–(
rc
&0xff)==
SQLITE_CONSTRAINT
 && 
pOp
->
p4
.
pVèb
->
bC⁄°øöt
 ){

6800 if–
pOp
->
p5
==
OE_Ign‹e
 ){

6801 
rc
 = 
SQLITE_OK
;

6803 
p
->
îr‹A˘i⁄
 = ((
pOp
->
p5
==
OE_Rïœ˚
Ë? 
OE_Ab‹t
 :ÖOp->p5);

6806 
p
->
nCh™ge
++;

6808 if–
rc
 ) 
ab‹t_due_to_îr‹
;

6814 #i‚de‡ 
SQLITE_OMIT_PAGER_PRAGMAS


6819 
OP_Pagecou¡
: {

6820 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

6821 
pOut
->
u
.
i
 = 
	`sqlôe3BåìLa°Page
(
db
->
aDb
[
pOp
->
p1
].
pBt
);

6827 #i‚de‡ 
SQLITE_OMIT_PAGER_PRAGMAS


6836 
OP_MaxPg˙t
: {

6837 
√wMax
;

6838 
Båì
 *
pBt
;

6840 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

6841 
pBt
 = 
db
->
aDb
[
pOp
->
p1
].pBt;

6842 
√wMax
 = 0;

6843 if–
pOp
->
p3
 ){

6844 
√wMax
 = 
	`sqlôe3BåìLa°Page
(
pBt
);

6845 if–
√wMax
 < ()
pOp
->
p3
 )ÇewMax = ()pOp->p3;

6847 
pOut
->
u
.
i
 = 
	`sqlôe3BåìMaxPageCou¡
(
pBt
, 
√wMax
);

6868 
OP_Inô
: {

6869 *
zTø˚
;

6870 
i
;

6881 
	`as£π
–
pOp
->
p4
.
z
==0 || 
	`°∫cmp
(pOp->p4.z, "-" "- ", 3)==0 );

6882 
	`as£π
–
pOp
==
p
->
aOp
 );

6884 #i‚de‡
SQLITE_OMIT_TRACE


6885 if–(
db
->
mTø˚
 & (
SQLITE_TRACE_STMT
|
SQLITE_TRACE_LEGACY
))!=0

6886 && !
p
->
doögRîun


6887 && (
zTø˚
 = (
pOp
->
p4
.
z
 ?ÖOp->p4.z : 
p
->
zSql
))!=0

6889 #i‚de‡
SQLITE_OMIT_DEPRECATED


6890 if–
db
->
mTø˚
 & 
SQLITE_TRACE_LEGACY
 ){

6891 (*
x
)(*,c⁄° *Ë((*)(*,c⁄° *))
db
->
xTø˚
;

6892 *
z
 = 
	`sqlôe3VdbeEx∑ndSql
(
p
, 
zTø˚
);

6893 
	`x
(
db
->
pTø˚Arg
, 
z
);

6894 
	`sqlôe3_‰ì
(
z
);

6898 ()
db
->
	`xTø˚
(
SQLITE_TRACE_STMT
, db->
pTø˚Arg
, 
p
, 
zTø˚
);

6901 #ifde‡
SQLITE_USE_FCNTL_TRACE


6902 
zTø˚
 = (
pOp
->
p4
.
z
 ?ÖOp->p4.z : 
p
->
zSql
);

6903 if–
zTø˚
 ){

6904 
j
;

6905 
j
=0; j<
db
->
nDb
; j++){

6906 if–
	`DbMaskTe°
(
p
->
båìMask
, 
j
)==0 ) ;

6907 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, db->
aDb
[
j
].
zDbSName
, 
SQLITE_FCNTL_TRACE
, 
zTø˚
);

6911 #ifde‡
SQLITE_DEBUG


6912 if–(
db
->
Êags
 & 
SQLITE_SqlTø˚
)!=0

6913 && (
zTø˚
 = (
pOp
->
p4
.
z
 ?ÖOp->p4.z : 
p
->
zSql
))!=0

6915 
	`sqlôe3DebugPrötf
("SQL-åa˚: %s\n", 
zTø˚
);

6919 
	`as£π
–
pOp
->
p2
>0 );

6920 if–
pOp
->
p1
>=
sqlôe3GlobÆC⁄fig
.
iOn˚Re£tThªshﬁd
 ){

6921 
i
=1; i<
p
->
nOp
; i++){

6922 if–
p
->
aOp
[
i
].
›code
==
OP_On˚
 )Ö->aOp[i].
p1
 = 0;

6924 
pOp
->
p1
 = 0;

6926 
pOp
->
p1
++;

6927 
jump_to_p2
;

6930 #ifde‡
SQLITE_ENABLE_CURSOR_HINTS


6938 
OP_Curs‹Höt
: {

6939 
VdbeCurs‹
 *
pC
;

6941 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

6942 
	`as£π
–
pOp
->
p4ty≥
==
P4_EXPR
 );

6943 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

6944 if–
pC
 ){

6945 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

6946 
	`sqlôe3BåìCurs‹Höt
(
pC
->
uc
.
pCurs‹
, 
BTREE_HINT_RANGE
,

6947 
pOp
->
p4
.
pEx¥
, 
aMem
);

6965 
	`as£π
–
pOp
->
›code
==
OP_No›
 ||ÖOp->›code==
OP_Ex∂aö
 );

6977 #ifde‡
VDBE_PROFILE


6979 
u64
 
ídTime
 = 
	`sqlôe3Hwtime
();

6980 if–
ídTime
>
°¨t
 ) 
pOrigOp
->
cy˛es
 +=ÉndTime - start;

6981 
pOrigOp
->
˙t
++;

6990 #i‚de‡
NDEBUG


6991 
	`as£π
–
pOp
>=&
aOp
[-1] &&ÖOp<&aOp[
p
->
nOp
-1] );

6993 #ifde‡
SQLITE_DEBUG


6994 if–
db
->
Êags
 & 
SQLITE_VdbeTø˚
 ){

6995 
u8
 
›Pr›îty
 = 
sqlôe3OpcodePr›îty
[
pOrigOp
->
›code
];

6996 if–
rc
!=0 ) 
	`¥ötf
("rc=%d\n",rc);

6997 if–
›Pr›îty
 & (
OPFLG_OUT2
) ){

6998 
	`ªgi°îTø˚
(
pOrigOp
->
p2
, &
aMem
[pOrigOp->p2]);

7000 if–
›Pr›îty
 & 
OPFLG_OUT3
 ){

7001 
	`ªgi°îTø˚
(
pOrigOp
->
p3
, &
aMem
[pOrigOp->p3]);

7011 
ab‹t_due_to_îr‹
:

7012 if–
db
->
mÆlocFaûed
 ) 
rc
 = 
SQLITE_NOMEM_BKPT
;

7013 
	`as£π
–
rc
 );

7014 if–
p
->
zEºMsg
==0 && 
rc
!=
SQLITE_IOERR_NOMEM
 ){

7015 
	`sqlôe3VdbeEº‹
(
p
, "%s", 
	`sqlôe3EºSå
(
rc
));

7017 
p
->
rc
 =Ñc;

7018 
	`sqlôe3Sy°emEº‹
(
db
, 
rc
);

7019 
	`ã°ˇ£
–
sqlôe3GlobÆC⁄fig
.
xLog
!=0 );

7020 
	`sqlôe3_log
(
rc
, "statementábortsát %d: [%s] %s",

7021 ()(
pOp
 - 
aOp
), 
p
->
zSql
,Ö->
zEºMsg
);

7022 
	`sqlôe3VdbeHÆt
(
p
);

7023 if–
rc
==
SQLITE_IOERR_NOMEM
 ) 
	`sqlôe3OomFau…
(
db
);

7024 
rc
 = 
SQLITE_ERROR
;

7025 if–
ª£tSchemaOnFau…
>0 ){

7026 
	`sqlôe3Re£tO√Schema
(
db
, 
ª£tSchemaOnFau…
-1);

7032 
vdbe_ªtu∫
:

7033 
db
->
œ°Rowid
 =ÜastRowid;

7034 
	`ã°ˇ£
–
nVmSãp
>0 );

7035 
p
->
aCou¡î
[
SQLITE_STMTSTATUS_VM_STEP
] +()
nVmSãp
;

7036 
	`sqlôe3VdbeLóve
(
p
);

7037 
	`as£π
–
rc
!=
SQLITE_OK
 || 
nExåaDñëe
==0

7038 || 
	`sqlôe3_°æike
("DELETE%",
p
->
zSql
,0)!=0

7040  
rc
;

7045 
too_big
:

7046 
	`sqlôe3VdbeEº‹
(
p
, "string or blobÅoo big");

7047 
rc
 = 
SQLITE_TOOBIG
;

7048 
ab‹t_due_to_îr‹
;

7052 
no_mem
:

7053 
	`sqlôe3OomFau…
(
db
);

7054 
	`sqlôe3VdbeEº‹
(
p
, "out of memory");

7055 
rc
 = 
SQLITE_NOMEM_BKPT
;

7056 
ab‹t_due_to_îr‹
;

7061 
ab‹t_due_to_öãºu±
:

7062 
	`as£π
–
db
->
u1
.
isI¡îru±ed
 );

7063 
rc
 = 
db
->
mÆlocFaûed
 ? 
SQLITE_NOMEM_BKPT
 : 
SQLITE_INTERRUPT
;

7064 
p
->
rc
 =Ñc;

7065 
	`sqlôe3VdbeEº‹
(
p
, "%s", 
	`sqlôe3EºSå
(
rc
));

7066 
ab‹t_due_to_îr‹
;

7067 
	}
}

	@vdbe.h

18 #i‚de‡
SQLITE_VDBE_H


19 
	#SQLITE_VDBE_H


	)

20 
	~<°dio.h
>

27 
Vdbe
 
	tVdbe
;

33 
Mem
 
	tMem
;

34 
SubProgøm
 
	tSubProgøm
;

41 
	sVdbeOp
 {

42 
u8
 
	m›code
;

43 sig√d 
	mp4ty≥
;

44 
u8
 
	mnŸU£d1
;

45 
u8
 
	mp5
;

46 
	mp1
;

47 
	mp2
;

48 
	mp3
;

49 
	up4uni⁄
 {

50 
	mi
;

51 *
	mp
;

52 *
	mz
;

53 
i64
 *
	mpI64
;

54 *
	mpRól
;

55 
FuncDef
 *
	mpFunc
;

56 
sqlôe3_c⁄ãxt
 *
	mpCtx
;

57 
CﬁlSeq
 *
	mpCﬁl
;

58 
Mem
 *
	mpMem
;

59 
VTabÀ
 *
	mpVèb
;

60 
KeyInfo
 *
	mpKeyInfo
;

61 *
	mai
;

62 
SubProgøm
 *
	mpProgøm
;

63 
TabÀ
 *
	mpTab
;

64 #ifde‡
SQLITE_ENABLE_CURSOR_HINTS


65 
Ex¥
 *
	mpEx¥
;

67 (*
	mxAdv™˚
)(
	mBtCurs‹
 *, *);

68 } 
	mp4
;

69 #ifde‡
SQLITE_ENABLE_EXPLAIN_COMMENTS


70 *
	mzCommít
;

72 #ifde‡
VDBE_PROFILE


73 
u32
 
	m˙t
;

74 
u64
 
	mcy˛es
;

76 #ifde‡
SQLITE_VDBE_COVERAGE


77 
	miSrcLöe
;

80 
VdbeOp
 
	tVdbeOp
;

86 
	sSubProgøm
 {

87 
VdbeOp
 *
	maOp
;

88 
	mnOp
;

89 
	mnMem
;

90 
	mnC§
;

91 *
	mtokí
;

92 
SubProgøm
 *
	mpNext
;

99 
	sVdbeOpLi°
 {

100 
u8
 
	m›code
;

101 sig√d 
	mp1
;

102 sig√d 
	mp2
;

103 sig√d 
	mp3
;

105 
VdbeOpLi°
 
	tVdbeOpLi°
;

110 
	#P4_NOTUSED
 0

	)

111 
	#P4_DYNAMIC
 (-1Ë

	)

112 
	#P4_STATIC
 (-2Ë

	)

113 
	#P4_COLLSEQ
 (-3Ë

	)

114 
	#P4_FUNCDEF
 (-4Ë

	)

115 
	#P4_KEYINFO
 (-5Ë

	)

116 
	#P4_EXPR
 (-6Ë

	)

117 
	#P4_MEM
 (-7Ë

	)

118 
	#P4_TRANSIENT
 0

	)

119 
	#P4_VTAB
 (-8Ë

	)

120 
	#P4_REAL
 (-9Ë

	)

121 
	#P4_INT64
 (-10Ë

	)

122 
	#P4_INT32
 (-11Ë

	)

123 
	#P4_INTARRAY
 (-12Ë

	)

124 
	#P4_SUBPROGRAM
 (-13Ë

	)

125 
	#P4_ADVANCE
 (-14Ë

	)

126 
	#P4_TABLE
 (-15Ë

	)

127 
	#P4_FUNCCTX
 (-16Ë

	)

130 
	#P5_C⁄°øötNŸNuŒ
 1

	)

131 
	#P5_C⁄°øötUnique
 2

	)

132 
	#P5_C⁄°øötCheck
 3

	)

133 
	#P5_C⁄°øötFK
 4

	)

139 
	#COLNAME_NAME
 0

	)

140 
	#COLNAME_DECLTYPE
 1

	)

141 
	#COLNAME_DATABASE
 2

	)

142 
	#COLNAME_TABLE
 3

	)

143 
	#COLNAME_COLUMN
 4

	)

144 #ifde‡
SQLITE_ENABLE_COLUMN_METADATA


145 
	#COLNAME_N
 5

	)

147 #ifde‡
SQLITE_OMIT_DECLTYPE


148 
	#COLNAME_N
 1

	)

150 
	#COLNAME_N
 2

	)

160 
	#ADDR
(
X
Ë(-1-(X))

	)

166 
	~"›codes.h
"

172 
Vdbe
 *
sqlôe3VdbeCª©e
(
P¨£
*);

173 
sqlôe3VdbeAddOp0
(
Vdbe
*,);

174 
sqlôe3VdbeAddOp1
(
Vdbe
*,,);

175 
sqlôe3VdbeAddOp2
(
Vdbe
*,,,);

176 
sqlôe3VdbeGŸo
(
Vdbe
*,);

177 
sqlôe3VdbeLﬂdSåög
(
Vdbe
*,,const *);

178 
sqlôe3VdbeMu…iLﬂd
(
Vdbe
*,,const *,...);

179 
sqlôe3VdbeAddOp3
(
Vdbe
*,,,,);

180 
sqlôe3VdbeAddOp4
(
Vdbe
*,,,,,c⁄° *
zP4
,);

181 
sqlôe3VdbeAddOp4Dup8
(
Vdbe
*,,,,,c⁄° 
u8
*,);

182 
sqlôe3VdbeAddOp4I¡
(
Vdbe
*,,,,,);

183 
sqlôe3VdbeEndC‹outöe
(
Vdbe
*,);

184 #i‡
deföed
(
SQLITE_DEBUG
Ë&& !deföed(
SQLITE_TEST_REALLOC_STRESS
)

185 
sqlôe3VdbeVîifyNoMÆlocRequúed
(
Vdbe
 *
p
, 
N
);

187 
	#sqlôe3VdbeVîifyNoMÆlocRequúed
(
A
,
B
)

	)

189 
VdbeOp
 *
sqlôe3VdbeAddOpLi°
(
Vdbe
*, 
nOp
, 
VdbeOpLi°
 c⁄° *
aOp
, 
iLöío
);

190 
sqlôe3VdbeAddP¨£SchemaOp
(
Vdbe
*,,*);

191 
sqlôe3VdbeCh™geOpcode
(
Vdbe
*, 
u32
 
addr
, 
u8
);

192 
sqlôe3VdbeCh™geP1
(
Vdbe
*, 
u32
 
addr
, 
P1
);

193 
sqlôe3VdbeCh™geP2
(
Vdbe
*, 
u32
 
addr
, 
P2
);

194 
sqlôe3VdbeCh™geP3
(
Vdbe
*, 
u32
 
addr
, 
P3
);

195 
sqlôe3VdbeCh™geP5
(
Vdbe
*, 
u8
 
P5
);

196 
sqlôe3VdbeJumpHîe
(
Vdbe
*, 
addr
);

197 
sqlôe3VdbeCh™geToNo›
(
Vdbe
*, 
addr
);

198 
sqlôe3VdbeDñëePri‹Opcode
(
Vdbe
*, 
u8
 
›
);

199 
sqlôe3VdbeCh™geP4
(
Vdbe
*, 
addr
, c⁄° *
zP4
, 
N
);

200 
sqlôe3VdbeAµídP4
(
Vdbe
*, *
pP4
, 
p4ty≥
);

201 
sqlôe3VdbeSëP4KeyInfo
(
P¨£
*, 
Index
*);

202 
sqlôe3VdbeU£sBåì
(
Vdbe
*, );

203 
VdbeOp
 *
sqlôe3VdbeGëOp
(
Vdbe
*, );

204 
sqlôe3VdbeMakeLabñ
(
Vdbe
*);

205 
sqlôe3VdbeRunO∆yOn˚
(
Vdbe
*);

206 
sqlôe3VdbeReußbÀ
(
Vdbe
*);

207 
sqlôe3VdbeDñëe
(
Vdbe
*);

208 
sqlôe3VdbeCÀ¨Obje˘
(
sqlôe3
*,
Vdbe
*);

209 
sqlôe3VdbeMakeRódy
(
Vdbe
*,
P¨£
*);

210 
sqlôe3VdbeFöÆize
(
Vdbe
*);

211 
sqlôe3VdbeResﬁveLabñ
(
Vdbe
*, );

212 
sqlôe3VdbeCuºítAddr
(
Vdbe
*);

213 #ifde‡
SQLITE_DEBUG


214 
sqlôe3VdbeAs£πMayAb‹t
(
Vdbe
 *, );

216 
sqlôe3VdbeRe£tSãpResu…
(
Vdbe
*);

217 
sqlôe3VdbeRewöd
(
Vdbe
*);

218 
sqlôe3VdbeRe£t
(
Vdbe
*);

219 
sqlôe3VdbeSëNumCﬁs
(
Vdbe
*,);

220 
sqlôe3VdbeSëCﬁName
(
Vdbe
*, , , const *, (*)(*));

221 
	`sqlôe3VdbeCou¡Ch™ges
(
Vdbe
*);

222 
sqlôe3
 *
	`sqlôe3VdbeDb
(
Vdbe
*);

223 
	`sqlôe3VdbeSëSql
(
Vdbe
*, c⁄° *
z
, 
n
, );

224 
	`sqlôe3VdbeSw≠
(
Vdbe
*,Vdbe*);

225 
VdbeOp
 *
	`sqlôe3VdbeTakeOpAºay
(
Vdbe
*, *, *);

226 
sqlôe3_vÆue
 *
	`sqlôe3VdbeGëBoundVÆue
(
Vdbe
*, , 
u8
);

227 
	`sqlôe3VdbeSëV¨mask
(
Vdbe
*, );

228 #i‚de‡
SQLITE_OMIT_TRACE


229 *
	`sqlôe3VdbeEx∑ndSql
(
Vdbe
*, const *);

231 
	`sqlôe3MemCom∑ª
(c⁄° 
Mem
*, c⁄° Mem*, c⁄° 
CﬁlSeq
*);

233 
	`sqlôe3VdbeRec‹dU≈ack
(
KeyInfo
*,,c⁄° *,
U≈ackedRec‹d
*);

234 
	`sqlôe3VdbeRec‹dCom∑ª
(,c⁄° *,
U≈ackedRec‹d
*);

235 
	`sqlôe3VdbeRec‹dCom∑ªWôhSkù
(, c⁄° *, 
U≈ackedRec‹d
 *, );

236 
U≈ackedRec‹d
 *
	`sqlôe3VdbeAŒocU≈ackedRec‹d
(
KeyInfo
*);

238 (*
	tRec‹dCom∑ª
)(,c⁄° *,
	tU≈ackedRec‹d
*);

239 
Rec‹dCom∑ª
 
	`sqlôe3VdbeFödCom∑ª
(
U≈ackedRec‹d
*);

241 #i‚de‡
SQLITE_OMIT_TRIGGER


242 
	`sqlôe3VdbeLökSubProgøm
(
Vdbe
 *, 
SubProgøm
 *);

252 #ifde‡
SQLITE_ENABLE_EXPLAIN_COMMENTS


253 
	`sqlôe3VdbeCommít
(
Vdbe
*, const *, ...);

254 
	#VdbeCommít
(
X
Ë
sqlôe3VdbeCommít
 
	)
X

255 
	`sqlôe3VdbeNo›Commít
(
Vdbe
*, const *, ...);

256 
	#VdbeNo›Commít
(
X
Ë
sqlôe3VdbeNo›Commít
 
	)
X

257 #ifde‡
SQLITE_ENABLE_MODULE_COMMENTS


258 
	#VdbeModuÀCommít
(
X
Ë
sqlôe3VdbeNo›Commít
 
	)
X

260 
	#VdbeModuÀCommít
(
X
)

	)

263 
	#VdbeCommít
(
X
)

	)

264 
	#VdbeNo›Commít
(
X
)

	)

265 
	#VdbeModuÀCommít
(
X
)

	)

290 #ifde‡
SQLITE_VDBE_COVERAGE


291 
	`sqlôe3VdbeSëLöeNumbî
(
Vdbe
*,);

292 
	#VdbeCovîage
(
v
Ë
	`sqlôe3VdbeSëLöeNumbî
(v,
__LINE__
)

	)

293 
	#VdbeCovîageIf
(
v
,
x
Ëif(x)
	`sqlôe3VdbeSëLöeNumbî
(v,
__LINE__
)

	)

294 
	#VdbeCovîageAlwaysTakí
(
v
Ë
	`sqlôe3VdbeSëLöeNumbî
(v,2);

	)

295 
	#VdbeCovîageNevîTakí
(
v
Ë
	`sqlôe3VdbeSëLöeNumbî
(v,1);

	)

296 
	#VDBE_OFFSET_LINENO
(
x
Ë(
__LINE__
+x)

	)

298 
	#VdbeCovîage
(
v
)

	)

299 
	#VdbeCovîageIf
(
v
,
x
)

	)

300 
	#VdbeCovîageAlwaysTakí
(
v
)

	)

301 
	#VdbeCovîageNevîTakí
(
v
)

	)

302 
	#VDBE_OFFSET_LINENO
(
x
Ë0

	)

305 #ifde‡
SQLITE_ENABLE_STMT_SCANSTATUS


306 
	`sqlôe3VdbeSˇnSètus
(
Vdbe
*, , , , 
LogE°
, const *);

308 
	#sqlôe3VdbeSˇnSètus
(
a
,
b
,
c
,
d
,
e
)

	)

	@vdbeInt.h

18 #i‚de‡
SQLITE_VDBEINT_H


19 
	#SQLITE_VDBEINT_H


	)

25 #i‚de‡
SQLITE_MAX_SCHEMA_RETRY


26 
	#SQLITE_MAX_SCHEMA_RETRY
 50

	)

33 #i‡!
deföed
(
SQLITE_OMIT_EXPLAIN
Ë|| !deföed(
NDEBUG
) \

34 || 
deföed
(
VDBE_PROFILE
Ë|| 
	$deföed
(
SQLITE_DEBUG
)

35 
	#VDBE_DISPLAY_P4
 1

	)

37 
	#VDBE_DISPLAY_P4
 0

	)

45 
VdbeOp
 
	tOp
;

50 
	tBoﬁ
;

53 
VdbeS‹ãr
 
	tVdbeS‹ãr
;

56 
AuxD©a
 
	tAuxD©a
;

59 
	#CURTYPE_BTREE
 0

	)

60 
	#CURTYPE_SORTER
 1

	)

61 
	#CURTYPE_VTAB
 2

	)

62 
	#CURTYPE_PSEUDO
 3

	)

74 
VdbeCurs‹
 
	tVdbeCurs‹
;

75 
	sVdbeCurs‹
 {

76 
u8
 
eCurTy≥
;

77 
i8
 
iDb
;

78 
u8
 
nuŒRow
;

79 
u8
 
de„ºedMovëo
;

80 
u8
 
isTabÀ
;

81 #ifde‡
SQLITE_DEBUG


82 
u8
 
£ekOp
;

83 
u8
 
wrFœg
;

85 
Boﬁ
 
isEphemîÆ
:1;

86 
Boﬁ
 
u£R™domRowid
:1;

87 
Boﬁ
 
isOrdîed
:1;

88 
Båì
 *
pBtx
;

89 
i64
 
£qCou¡
;

90 *
aA…M≠
;

96 
u32
 
ˇcheSètus
;

97 
£ekResu…
;

105 
VdbeCurs‹
 *
pA…Curs‹
;

107 
BtCurs‹
 *
pCurs‹
;

108 
sqlôe3_vèb_curs‹
 *
pVCur
;

109 
p£udoTabÀReg
;

110 
VdbeS‹ãr
 *
pS‹ãr
;

111 } 
uc
;

112 
KeyInfo
 *
pKeyInfo
;

113 
u32
 
iHdrOff£t
;

114 
Pgno
 
pgnoRoŸ
;

115 
i16
 
nFõld
;

116 
u16
 
nHdrP¨£d
;

117 
i64
 
movëoT¨gë
;

118 
u32
 *
aOff£t
;

119 c⁄° 
u8
 *
aRow
;

120 
u32
 
∑ylﬂdSize
;

121 
u32
 
szRow
;

122 #ifde‡
SQLITE_ENABLE_COLUMN_USED_MASK


123 
u64
 
maskU£d
;

129 
u32
 
aTy≥
[1];

136 
	#CACHE_STALE
 0

	)

159 
VdbeFøme
 
	tVdbeFøme
;

160 
	sVdbeFøme
 {

161 
Vdbe
 *
v
;

162 
VdbeFøme
 *
pP¨ít
;

163 
Op
 *
aOp
;

164 
i64
 *
™Exec
;

165 
Mem
 *
aMem
;

166 
VdbeCurs‹
 **
≠C§
;

167 *
tokí
;

168 
i64
 
œ°Rowid
;

169 
AuxD©a
 *
pAuxD©a
;

170 
nCurs‹
;

171 
pc
;

172 
nOp
;

173 
nMem
;

174 
nChûdMem
;

175 
nChûdC§
;

176 
nCh™ge
;

177 
nDbCh™ge
;

180 
	#VdbeFømeMem
(
p
Ë((
Mem
 *)&((
u8
 *Ì)[
	`ROUND8
((
VdbeFøme
))])

	)

187 
	sMem
 {

188 
	uMemVÆue
 {

189 
r
;

190 
i64
 
i
;

191 
nZîo
;

192 
FuncDef
 *
pDef
;

193 
RowSë
 *
pRowSë
;

194 
VdbeFøme
 *
pFøme
;

195 } 
u
;

196 
u16
 
Êags
;

197 
u8
 
íc
;

198 
u8
 
eSubty≥
;

199 
n
;

200 *
z
;

202 *
zMÆloc
;

203 
szMÆloc
;

204 
u32
 
uTemp
;

205 
sqlôe3
 *
db
;

206 (*
xDñ
)(*);

207 #ifde‡
SQLITE_DEBUG


208 
Mem
 *
pSc›yFrom
;

209 *
pFûÀr
;

217 
	#MEMCELLSIZE
 
	`off£tof
(
Mem
,
zMÆloc
)

	)

231 
	#MEM_NuŒ
 0x0001

	)

232 
	#MEM_Så
 0x0002

	)

233 
	#MEM_I¡
 0x0004

	)

234 
	#MEM_Ról
 0x0008

	)

235 
	#MEM_Blob
 0x0010

	)

236 
	#MEM_AffMask
 0x001‡

	)

237 
	#MEM_RowSë
 0x0020

	)

238 
	#MEM_Føme
 0x0040

	)

239 
	#MEM_Undeföed
 0x0080

	)

240 
	#MEM_CÀ¨ed
 0x0100

	)

241 
	#MEM_Ty≥Mask
 0x81f‡

	)

249 
	#MEM_Tîm
 0x0200

	)

250 
	#MEM_Dyn
 0x0400

	)

251 
	#MEM_Sètic
 0x0800

	)

252 
	#MEM_Ephem
 0x1000

	)

253 
	#MEM_Agg
 0x2000

	)

254 
	#MEM_Zîo
 0x4000

	)

255 
	#MEM_Subty≥
 0x8000

	)

256 #ifde‡
SQLITE_OMIT_INCRBLOB


257 #unde‡
MEM_Zîo


258 
	#MEM_Zîo
 0x0000

	)

264 
	#VdbeMemDy«mic
(
X
) \

265 (((
X
)->
Êags
&(
MEM_Agg
|
MEM_Dyn
|
MEM_RowSë
|
MEM_Føme
))!=0)

	)

270 
	#MemSëTy≥Fœg
(
p
, 
f
) \

271 ((
p
)->
Êags
 = (’)->Êags&~(
MEM_Ty≥Mask
|
MEM_Zîo
))|
f
)

	)

277 #ifde‡
SQLITE_DEBUG


278 
	#memIsVÆid
(
M
Ë((M)->
Êags
 & 
MEM_Undeföed
)==0

	)

288 
	sAuxD©a
 {

289 
iOp
;

290 
iArg
;

291 *
pAux
;

292 (*
xDñëe
)(*);

293 
AuxD©a
 *
pNext
;

309 
	ssqlôe3_c⁄ãxt
 {

310 
Mem
 *
pOut
;

311 
FuncDef
 *
pFunc
;

312 
Mem
 *
pMem
;

313 
Vdbe
 *
pVdbe
;

314 
iOp
;

315 
isEº‹
;

316 
u8
 
skùFœg
;

317 
u8
 
fEº‹OrAux
;

318 
u8
 
¨gc
;

319 
sqlôe3_vÆue
 *
¨gv
[1];

325 
	tb·
;

327 
SˇnSètus
 
	tSˇnSètus
;

328 
	sSˇnSètus
 {

329 
addrEx∂aö
;

330 
addrLo›
;

331 
addrVisô
;

332 
iSñe˘ID
;

333 
LogE°
 
nE°
;

334 *
zName
;

344 
	sVdbe
 {

345 
sqlôe3
 *
db
;

346 
Vdbe
 *
pPªv
,*
pNext
;

347 
P¨£
 *
pP¨£
;

348 
ynV¨
 
nV¨
;

349 
u32
 
magic
;

350 
nMem
;

351 
nCurs‹
;

352 
u32
 
ˇcheCå
;

353 
pc
;

354 
rc
;

355 
nCh™ge
;

356 
iSèãmít
;

357 
i64
 
iCuºítTime
;

358 
i64
 
nFkC⁄°øöt
;

359 
i64
 
nStmtDefC⁄s
;

360 
i64
 
nStmtDefImmC⁄s
;

365 
Op
 *
aOp
;

366 
Mem
 *
aMem
;

367 
Mem
 **
≠Arg
;

368 
Mem
 *
aCﬁName
;

369 
Mem
 *
pResu…Së
;

370 *
zEºMsg
;

371 
VdbeCurs‹
 **
≠C§
;

372 
Mem
 *
aV¨
;

373 
VLi°
 *
pVLi°
;

374 #i‚de‡
SQLITE_OMIT_TRACE


375 
i64
 
°¨tTime
;

377 
nOp
;

378 #ifde‡
SQLITE_DEBUG


379 
rcAµ
;

381 
u16
 
nResCﬁumn
;

382 
u8
 
îr‹A˘i⁄
;

383 
u8
 
möWrôeFûeF‹m©
;

384 
b·
 
expúed
:1;

385 
b·
 
doögRîun
:1;

386 
b·
 
ex∂aö
:2;

387 
b·
 
ch™geC¡On
:1;

388 
b·
 
runO∆yOn˚
:1;

389 
b·
 
u£sStmtJou∫Æ
:1;

390 
b·
 
ªadO∆y
:1;

391 
b·
 
bIsRódî
:1;

392 
b·
 
isPª∑ªV2
:1;

393 
yDbMask
 
båìMask
;

394 
yDbMask
 
lockMask
;

395 
u32
 
aCou¡î
[5];

396 *
zSql
;

397 *
pFªe
;

398 
VdbeFøme
 *
pFøme
;

399 
VdbeFøme
 *
pDñFøme
;

400 
nFøme
;

401 
u32
 
expmask
;

402 
SubProgøm
 *
pProgøm
;

403 
AuxD©a
 *
pAuxD©a
;

404 #ifde‡
SQLITE_ENABLE_STMT_SCANSTATUS


405 
i64
 *
™Exec
;

406 
nSˇn
;

407 
SˇnSètus
 *
aSˇn
;

414 
	#VDBE_MAGIC_INIT
 0x16b˚Ø5

	)

415 
	#VDBE_MAGIC_RUN
 0x2df20da3

	)

416 
	#VDBE_MAGIC_HALT
 0x319c2973

	)

417 
	#VDBE_MAGIC_RESET
 0x48Á9f76

	)

418 
	#VDBE_MAGIC_DEAD
 0x5606c3c8

	)

424 
	sPªUpd©e
 {

425 
Vdbe
 *
v
;

426 
VdbeCurs‹
 *
pC§
;

427 
›
;

428 
u8
 *
aRec‹d
;

429 
KeyInfo
 
keyöfo
;

430 
U≈ackedRec‹d
 *
pU≈acked
;

431 
U≈ackedRec‹d
 *
pNewU≈acked
;

432 
iNewReg
;

433 
i64
 
iKey1
;

434 
i64
 
iKey2
;

435 
Mem
 *
aNew
;

436 
TabÀ
 *
pTab
;

442 
	`sqlôe3VdbeEº‹
(
Vdbe
*, const *, ...);

443 
	`sqlôe3VdbeFªeCurs‹
(
Vdbe
 *, 
VdbeCurs‹
*);

444 
	`sqlôeVdbeP›Sèck
(
Vdbe
*,);

445 
	`sqlôe3VdbeCurs‹Movëo
(
VdbeCurs‹
**, *);

446 
	`sqlôe3VdbeCurs‹Re°‹e
(
VdbeCurs‹
*);

447 #i‡
	`deföed
(
SQLITE_DEBUG
Ë|| deföed(
VDBE_PROFILE
)

448 
	`sqlôe3VdbePrötOp
(
FILE
*, , 
Op
*);

450 
u32
 
	`sqlôe3VdbeSîülTy≥Lí
(u32);

451 
u8
 
	`sqlôe3VdbeO√ByãSîülTy≥Lí
(u8);

452 
u32
 
	`sqlôe3VdbeSîülTy≥
(
Mem
*, , u32*);

453 
u32
 
	`sqlôe3VdbeSîülPut
(*, 
Mem
*, u32);

454 
u32
 
	`sqlôe3VdbeSîülGë
(c⁄° *, u32, 
Mem
*);

455 
	`sqlôe3VdbeDñëeAuxD©a
(
sqlôe3
*, 
AuxD©a
**, , );

457 
	`sqlôe2BåìKeyCom∑ª
(
BtCurs‹
 *, const *, , , *);

458 
	`sqlôe3VdbeIdxKeyCom∑ª
(
sqlôe3
*,
VdbeCurs‹
*,
U≈ackedRec‹d
*,*);

459 
	`sqlôe3VdbeIdxRowid
(
sqlôe3
*, 
BtCurs‹
*, 
i64
*);

460 
	`sqlôe3VdbeExec
(
Vdbe
*);

461 
	`sqlôe3VdbeLi°
(
Vdbe
*);

462 
	`sqlôe3VdbeHÆt
(
Vdbe
*);

463 
	`sqlôe3VdbeCh™geEncodög
(
Mem
 *, );

464 
	`sqlôe3VdbeMemTooBig
(
Mem
*);

465 
	`sqlôe3VdbeMemC›y
(
Mem
*, const Mem*);

466 
	`sqlôe3VdbeMemShÆlowC›y
(
Mem
*, const Mem*, );

467 
	`sqlôe3VdbeMemMove
(
Mem
*, Mem*);

468 
	`sqlôe3VdbeMemNulTîmö©e
(
Mem
*);

469 
	`sqlôe3VdbeMemSëSå
(
Mem
*, c⁄° *, , 
u8
, (*)(*));

470 
	`sqlôe3VdbeMemSëI¡64
(
Mem
*, 
i64
);

471 #ifde‡
SQLITE_OMIT_FLOATING_POINT


472 
	#sqlôe3VdbeMemSëDoubÀ
 
sqlôe3VdbeMemSëI¡64


	)

474 
	`sqlôe3VdbeMemSëDoubÀ
(
Mem
*, );

476 
	`sqlôe3VdbeMemInô
(
Mem
*,
sqlôe3
*,
u16
);

477 
	`sqlôe3VdbeMemSëNuŒ
(
Mem
*);

478 
	`sqlôe3VdbeMemSëZîoBlob
(
Mem
*,);

479 
	`sqlôe3VdbeMemSëRowSë
(
Mem
*);

480 
	`sqlôe3VdbeMemMakeWrôóbÀ
(
Mem
*);

481 
	`sqlôe3VdbeMemSåögify
(
Mem
*, 
u8
, u8);

482 
i64
 
	`sqlôe3VdbeI¡VÆue
(
Mem
*);

483 
	`sqlôe3VdbeMemI¡egîify
(
Mem
*);

484 
	`sqlôe3VdbeRólVÆue
(
Mem
*);

485 
	`sqlôe3VdbeI¡egîAfföôy
(
Mem
*);

486 
	`sqlôe3VdbeMemRólify
(
Mem
*);

487 
	`sqlôe3VdbeMemNumîify
(
Mem
*);

488 
	`sqlôe3VdbeMemCa°
(
Mem
*,
u8
,u8);

489 
	`sqlôe3VdbeMemFromBåì
(
BtCurs‹
*,
u32
,u32,
Mem
*);

490 
	`sqlôe3VdbeMemRñó£
(
Mem
 *
p
);

491 
	`sqlôe3VdbeMemFöÆize
(
Mem
*, 
FuncDef
*);

492 c⁄° *
	`sqlôe3OpcodeName
();

493 
	`sqlôe3VdbeMemGrow
(
Mem
 *
pMem
, 
n
, 
¥e£rve
);

494 
	`sqlôe3VdbeMemCÀ¨AndResize
(
Mem
 *
pMem
, 
n
);

495 
	`sqlôe3VdbeClo£Sèãmít
(
Vdbe
 *, );

496 
	`sqlôe3VdbeFømeDñëe
(
VdbeFøme
*);

497 
	`sqlôe3VdbeFømeRe°‹e
(
VdbeFøme
 *);

498 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


499 
	`sqlôe3VdbePªUpd©eHook
(
Vdbe
*,
VdbeCurs‹
*,,c⁄° *,
TabÀ
*,
i64
,);

501 
	`sqlôe3VdbeTøns„rEº‹
(
Vdbe
 *
p
);

503 
	`sqlôe3VdbeS‹ãrInô
(
sqlôe3
 *, , 
VdbeCurs‹
 *);

504 
	`sqlôe3VdbeS‹ãrRe£t
(
sqlôe3
 *, 
VdbeS‹ãr
 *);

505 
	`sqlôe3VdbeS‹ãrClo£
(
sqlôe3
 *, 
VdbeCurs‹
 *);

506 
	`sqlôe3VdbeS‹ãrRowkey
(c⁄° 
VdbeCurs‹
 *, 
Mem
 *);

507 
	`sqlôe3VdbeS‹ãrNext
(
sqlôe3
 *, c⁄° 
VdbeCurs‹
 *, *);

508 
	`sqlôe3VdbeS‹ãrRewöd
(c⁄° 
VdbeCurs‹
 *, *);

509 
	`sqlôe3VdbeS‹ãrWrôe
(c⁄° 
VdbeCurs‹
 *, 
Mem
 *);

510 
	`sqlôe3VdbeS‹ãrCom∑ª
(c⁄° 
VdbeCurs‹
 *, 
Mem
 *, , *);

512 #i‡!
	`deföed
(
SQLITE_OMIT_SHARED_CACHE
)

513 
	`sqlôe3VdbeE¡î
(
Vdbe
*);

515 
	#sqlôe3VdbeE¡î
(
X
)

	)

518 #i‡!
	`deföed
(
SQLITE_OMIT_SHARED_CACHE
Ë&& 
SQLITE_THREADSAFE
>0

519 
	`sqlôe3VdbeLóve
(
Vdbe
*);

521 
	#sqlôe3VdbeLóve
(
X
)

	)

524 #ifde‡
SQLITE_DEBUG


525 
	`sqlôe3VdbeMemAboutToCh™ge
(
Vdbe
*,
Mem
*);

526 
	`sqlôe3VdbeCheckMemInv¨ü¡s
(
Mem
*);

529 #i‚de‡
SQLITE_OMIT_FOREIGN_KEY


530 
	`sqlôe3VdbeCheckFk
(
Vdbe
 *, );

532 
	#sqlôe3VdbeCheckFk
(
p
,
i
Ë0

	)

535 
	`sqlôe3VdbeMemTøn¶©e
(
Mem
*, 
u8
);

536 #ifde‡
SQLITE_DEBUG


537 
	`sqlôe3VdbePrötSql
(
Vdbe
*);

538 
	`sqlôe3VdbeMemPªâyPröt
(
Mem
 *
pMem
, *
zBuf
);

540 
	`sqlôe3VdbeMemH™dÀBom
(
Mem
 *
pMem
);

542 #i‚de‡
SQLITE_OMIT_INCRBLOB


543 
	`sqlôe3VdbeMemEx∑ndBlob
(
Mem
 *);

544 
	#Ex∑ndBlob
(
P
Ë(((P)->
Êags
&
MEM_Zîo
)?
	`sqlôe3VdbeMemEx∑ndBlob
(P):0)

	)

546 
	#sqlôe3VdbeMemEx∑ndBlob
(
x
Ë
SQLITE_OK


	)

547 
	#Ex∑ndBlob
(
P
Ë
SQLITE_OK


	)

	@vdbeapi.c

16 
	~"sqlôeI¡.h
"

17 
	~"vdbeI¡.h
"

19 #i‚de‡
SQLITE_OMIT_DEPRECATED


28 
	$sqlôe3_expúed
(
sqlôe3_°mt
 *
pStmt
){

29 
Vdbe
 *
p
 = (Vdbe*)
pStmt
;

30  
p
==0 ||Ö->
expúed
;

31 
	}
}

39 
	$vdbeSa„ty
(
Vdbe
 *
p
){

40 if–
p
->
db
==0 ){

41 
	`sqlôe3_log
(
SQLITE_MISUSE
, "API called with finalizedÖrepared statement");

46 
	}
}

47 
	$vdbeSa„tyNŸNuŒ
(
Vdbe
 *
p
){

48 if–
p
==0 ){

49 
	`sqlôe3_log
(
SQLITE_MISUSE
, "API called with NULLÖrepared statement");

52  
	`vdbeSa„ty
(
p
);

54 
	}
}

56 #i‚de‡
SQLITE_OMIT_TRACE


61 
SQLITE_NOINLINE
 
	$övokeProfûeCÆlback
(
sqlôe3
 *
db
, 
Vdbe
 *
p
){

62 
sqlôe3_öt64
 
iNow
;

63 
sqlôe3_öt64
 
iEœp£
;

64 
	`as£π
–
p
->
°¨tTime
>0 );

65 
	`as£π
–
db
->
xProfûe
!=0 || (db->
mTø˚
 & 
SQLITE_TRACE_PROFILE
)!=0 );

66 
	`as£π
–
db
->
öô
.
busy
==0 );

67 
	`as£π
–
p
->
zSql
!=0 );

68 
	`sqlôe3OsCuºítTimeI¡64
(
db
->
pVfs
, &
iNow
);

69 
iEœp£
 = (
iNow
 - 
p
->
°¨tTime
)*1000000;

70 if–
db
->
xProfûe
 ){

71 
db
->
	`xProfûe
(db->
pProfûeArg
, 
p
->
zSql
, 
iEœp£
);

73 if–
db
->
mTø˚
 & 
SQLITE_TRACE_PROFILE
 ){

74 
db
->
	`xTø˚
(
SQLITE_TRACE_PROFILE
, db->
pTø˚Arg
, 
p
, (*)&
iEœp£
);

76 
p
->
°¨tTime
 = 0;

77 
	}
}

82 
	#checkProfûeCÆlback
(
DB
,
P
) \

83 if–((
P
)->
°¨tTime
)>0 ){ 
	`övokeProfûeCÆlback
(
DB
,P); }

	)

85 
	#checkProfûeCÆlback
(
DB
,
P
Ë

	)

97 
	$sqlôe3_föÆize
(
sqlôe3_°mt
 *
pStmt
){

98 
rc
;

99 if–
pStmt
==0 ){

102 
rc
 = 
SQLITE_OK
;

104 
Vdbe
 *
v
 = (Vdbe*)
pStmt
;

105 
sqlôe3
 *
db
 = 
v
->db;

106 if–
	`vdbeSa„ty
(
v
ËË 
SQLITE_MISUSE_BKPT
;

107 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

108 
	`checkProfûeCÆlback
(
db
, 
v
);

109 
rc
 = 
	`sqlôe3VdbeFöÆize
(
v
);

110 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

111 
	`sqlôe3LóveMuãxAndClo£Zombõ
(
db
);

113  
rc
;

114 
	}
}

124 
	$sqlôe3_ª£t
(
sqlôe3_°mt
 *
pStmt
){

125 
rc
;

126 if–
pStmt
==0 ){

127 
rc
 = 
SQLITE_OK
;

129 
Vdbe
 *
v
 = (Vdbe*)
pStmt
;

130 
sqlôe3
 *
db
 = 
v
->db;

131 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

132 
	`checkProfûeCÆlback
(
db
, 
v
);

133 
rc
 = 
	`sqlôe3VdbeRe£t
(
v
);

134 
	`sqlôe3VdbeRewöd
(
v
);

135 
	`as£π
–(
rc
 & (
db
->
îrMask
))==rc );

136 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

137 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

139  
rc
;

140 
	}
}

145 
	$sqlôe3_˛ór_bödögs
(
sqlôe3_°mt
 *
pStmt
){

146 
i
;

147 
rc
 = 
SQLITE_OK
;

148 
Vdbe
 *
p
 = (Vdbe*)
pStmt
;

149 #i‡
SQLITE_THREADSAFE


150 
sqlôe3_muãx
 *
muãx
 = ((
Vdbe
*)
pStmt
)->
db
->mutex;

152 
	`sqlôe3_muãx_íãr
(
muãx
);

153 
i
=0; i<
p
->
nV¨
; i++){

154 
	`sqlôe3VdbeMemRñó£
(&
p
->
aV¨
[
i
]);

155 
p
->
aV¨
[
i
].
Êags
 = 
MEM_NuŒ
;

157 if–
p
->
isPª∑ªV2
 &&Ö->
expmask
 ){

158 
p
->
expúed
 = 1;

160 
	`sqlôe3_muãx_Àave
(
muãx
);

161  
rc
;

162 
	}
}

169 c⁄° *
	$sqlôe3_vÆue_blob
(
sqlôe3_vÆue
 *
pVÆ
){

170 
Mem
 *
p
 = (Mem*)
pVÆ
;

171 if–
p
->
Êags
 & (
MEM_Blob
|
MEM_Så
) ){

172 if–
	`Ex∑ndBlob
(
p
)!=
SQLITE_OK
 ){

173 
	`as£π
–
p
->
Êags
==
MEM_NuŒ
 &&Ö->
z
==0 );

176 
p
->
Êags
 |
MEM_Blob
;

177  
p
->
n
 ?Ö->
z
 : 0;

179  
	`sqlôe3_vÆue_ãxt
(
pVÆ
);

181 
	}
}

182 
	$sqlôe3_vÆue_byãs
(
sqlôe3_vÆue
 *
pVÆ
){

183  
	`sqlôe3VÆueByãs
(
pVÆ
, 
SQLITE_UTF8
);

184 
	}
}

185 
	$sqlôe3_vÆue_byãs16
(
sqlôe3_vÆue
 *
pVÆ
){

186  
	`sqlôe3VÆueByãs
(
pVÆ
, 
SQLITE_UTF16NATIVE
);

187 
	}
}

188 
	$sqlôe3_vÆue_doubÀ
(
sqlôe3_vÆue
 *
pVÆ
){

189  
	`sqlôe3VdbeRólVÆue
((
Mem
*)
pVÆ
);

190 
	}
}

191 
	$sqlôe3_vÆue_öt
(
sqlôe3_vÆue
 *
pVÆ
){

192  ()
	`sqlôe3VdbeI¡VÆue
((
Mem
*)
pVÆ
);

193 
	}
}

194 
sqlôe_öt64
 
	$sqlôe3_vÆue_öt64
(
sqlôe3_vÆue
 *
pVÆ
){

195  
	`sqlôe3VdbeI¡VÆue
((
Mem
*)
pVÆ
);

196 
	}
}

197 
	$sqlôe3_vÆue_subty≥
(
sqlôe3_vÆue
 *
pVÆ
){

198 
Mem
 *
pMem
 = (Mem*)
pVÆ
;

199  ((
pMem
->
Êags
 & 
MEM_Subty≥
Ë?ÖMem->
eSubty≥
 : 0);

200 
	}
}

201 c⁄° *
	$sqlôe3_vÆue_ãxt
(
sqlôe3_vÆue
 *
pVÆ
){

202  (c⁄° *)
	`sqlôe3VÆueText
(
pVÆ
, 
SQLITE_UTF8
);

203 
	}
}

204 #i‚de‡
SQLITE_OMIT_UTF16


205 c⁄° *
	$sqlôe3_vÆue_ãxt16
(
sqlôe3_vÆue
* 
pVÆ
){

206  
	`sqlôe3VÆueText
(
pVÆ
, 
SQLITE_UTF16NATIVE
);

207 
	}
}

208 c⁄° *
	$sqlôe3_vÆue_ãxt16be
(
sqlôe3_vÆue
 *
pVÆ
){

209  
	`sqlôe3VÆueText
(
pVÆ
, 
SQLITE_UTF16BE
);

210 
	}
}

211 c⁄° *
	$sqlôe3_vÆue_ãxt16À
(
sqlôe3_vÆue
 *
pVÆ
){

212  
	`sqlôe3VÆueText
(
pVÆ
, 
SQLITE_UTF16LE
);

213 
	}
}

219 
	$sqlôe3_vÆue_ty≥
(
sqlôe3_vÆue
* 
pVÆ
){

220 c⁄° 
u8
 
aTy≥
[] = {

221 
SQLITE_BLOB
,

222 
SQLITE_NULL
,

223 
SQLITE_TEXT
,

224 
SQLITE_NULL
,

225 
SQLITE_INTEGER
,

226 
SQLITE_NULL
,

227 
SQLITE_INTEGER
,

228 
SQLITE_NULL
,

229 
SQLITE_FLOAT
,

230 
SQLITE_NULL
,

231 
SQLITE_FLOAT
,

232 
SQLITE_NULL
,

233 
SQLITE_INTEGER
,

234 
SQLITE_NULL
,

235 
SQLITE_INTEGER
,

236 
SQLITE_NULL
,

237 
SQLITE_BLOB
,

238 
SQLITE_NULL
,

239 
SQLITE_TEXT
,

240 
SQLITE_NULL
,

241 
SQLITE_INTEGER
,

242 
SQLITE_NULL
,

243 
SQLITE_INTEGER
,

244 
SQLITE_NULL
,

245 
SQLITE_FLOAT
,

246 
SQLITE_NULL
,

247 
SQLITE_FLOAT
,

248 
SQLITE_NULL
,

249 
SQLITE_INTEGER
,

250 
SQLITE_NULL
,

251 
SQLITE_INTEGER
,

252 
SQLITE_NULL
,

254  
aTy≥
[
pVÆ
->
Êags
&
MEM_AffMask
];

255 
	}
}

259 
sqlôe3_vÆue
 *
	$sqlôe3_vÆue_dup
(c⁄° 
sqlôe3_vÆue
 *
pOrig
){

260 
sqlôe3_vÆue
 *
pNew
;

261 if–
pOrig
==0 )  0;

262 
pNew
 = 
	`sqlôe3_mÆloc
( (*pNew) );

263 if–
pNew
==0 )  0;

264 
	`mem£t
(
pNew
, 0, (*pNew));

265 
	`mem˝y
(
pNew
, 
pOrig
, 
MEMCELLSIZE
);

266 
pNew
->
Êags
 &~
MEM_Dyn
;

267 
pNew
->
db
 = 0;

268 if–
pNew
->
Êags
&(
MEM_Så
|
MEM_Blob
) ){

269 
pNew
->
Êags
 &~(
MEM_Sètic
|
MEM_Dyn
);

270 
pNew
->
Êags
 |
MEM_Ephem
;

271 if–
	`sqlôe3VdbeMemMakeWrôóbÀ
(
pNew
)!=
SQLITE_OK
 ){

272 
	`sqlôe3VÆueFªe
(
pNew
);

273 
pNew
 = 0;

276  
pNew
;

277 
	}
}

282 
	$sqlôe3_vÆue_‰ì
(
sqlôe3_vÆue
 *
pOld
){

283 
	`sqlôe3VÆueFªe
(
pOld
);

284 
	}
}

298 
	$£tResu…SåOrEº‹
(

299 
sqlôe3_c⁄ãxt
 *
pCtx
,

300 c⁄° *
z
,

301 
n
,

302 
u8
 
íc
,

303 (*
xDñ
)(*)

305 if–
	`sqlôe3VdbeMemSëSå
(
pCtx
->
pOut
, 
z
, 
n
, 
íc
, 
xDñ
)==
SQLITE_TOOBIG
 ){

306 
	`sqlôe3_ªsu…_îr‹_toobig
(
pCtx
);

308 
	}
}

309 
	$övokeVÆueDe°ru˘‹
(

310 c⁄° *
p
,

311 (*
xDñ
)(*),

312 
sqlôe3_c⁄ãxt
 *
pCtx


314 
	`as£π
–
xDñ
!=
SQLITE_DYNAMIC
 );

315 if–
xDñ
==0 ){

317 }if–
xDñ
==
SQLITE_TRANSIENT
 ){

320 
	`xDñ
((*)
p
);

322 if–
pCtx
 ) 
	`sqlôe3_ªsu…_îr‹_toobig
(pCtx);

323  
SQLITE_TOOBIG
;

324 
	}
}

325 
	$sqlôe3_ªsu…_blob
(

326 
sqlôe3_c⁄ãxt
 *
pCtx
,

327 c⁄° *
z
,

328 
n
,

329 (*
xDñ
)(*)

331 
	`as£π
–
n
>=0 );

332 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

333 
	`£tResu…SåOrEº‹
(
pCtx
, 
z
, 
n
, 0, 
xDñ
);

334 
	}
}

335 
	$sqlôe3_ªsu…_blob64
(

336 
sqlôe3_c⁄ãxt
 *
pCtx
,

337 c⁄° *
z
,

338 
sqlôe3_uöt64
 
n
,

339 (*
xDñ
)(*)

341 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

342 
	`as£π
–
xDñ
!=
SQLITE_DYNAMIC
 );

343 if–
n
>0x7fffffff ){

344 ()
	`övokeVÆueDe°ru˘‹
(
z
, 
xDñ
, 
pCtx
);

346 
	`£tResu…SåOrEº‹
(
pCtx
, 
z
, ()
n
, 0, 
xDñ
);

348 
	}
}

349 
	$sqlôe3_ªsu…_doubÀ
(
sqlôe3_c⁄ãxt
 *
pCtx
, 
rVÆ
){

350 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

351 
	`sqlôe3VdbeMemSëDoubÀ
(
pCtx
->
pOut
, 
rVÆ
);

352 
	}
}

353 
	$sqlôe3_ªsu…_îr‹
(
sqlôe3_c⁄ãxt
 *
pCtx
, c⁄° *
z
, 
n
){

354 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

355 
pCtx
->
isEº‹
 = 
SQLITE_ERROR
;

356 
pCtx
->
fEº‹OrAux
 = 1;

357 
	`sqlôe3VdbeMemSëSå
(
pCtx
->
pOut
, 
z
, 
n
, 
SQLITE_UTF8
, 
SQLITE_TRANSIENT
);

358 
	}
}

359 #i‚de‡
SQLITE_OMIT_UTF16


360 
	$sqlôe3_ªsu…_îr‹16
(
sqlôe3_c⁄ãxt
 *
pCtx
, c⁄° *
z
, 
n
){

361 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

362 
pCtx
->
isEº‹
 = 
SQLITE_ERROR
;

363 
pCtx
->
fEº‹OrAux
 = 1;

364 
	`sqlôe3VdbeMemSëSå
(
pCtx
->
pOut
, 
z
, 
n
, 
SQLITE_UTF16NATIVE
, 
SQLITE_TRANSIENT
);

365 
	}
}

367 
	$sqlôe3_ªsu…_öt
(
sqlôe3_c⁄ãxt
 *
pCtx
, 
iVÆ
){

368 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

369 
	`sqlôe3VdbeMemSëI¡64
(
pCtx
->
pOut
, (
i64
)
iVÆ
);

370 
	}
}

371 
	$sqlôe3_ªsu…_öt64
(
sqlôe3_c⁄ãxt
 *
pCtx
, 
i64
 
iVÆ
){

372 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

373 
	`sqlôe3VdbeMemSëI¡64
(
pCtx
->
pOut
, 
iVÆ
);

374 
	}
}

375 
	$sqlôe3_ªsu…_nuŒ
(
sqlôe3_c⁄ãxt
 *
pCtx
){

376 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

377 
	`sqlôe3VdbeMemSëNuŒ
(
pCtx
->
pOut
);

378 
	}
}

379 
	$sqlôe3_ªsu…_subty≥
(
sqlôe3_c⁄ãxt
 *
pCtx
, 
eSubty≥
){

380 
Mem
 *
pOut
 = 
pCtx
->pOut;

381 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pOut
->
db
->
muãx
) );

382 
pOut
->
eSubty≥
 =ÉSubtype & 0xff;

383 
pOut
->
Êags
 |
MEM_Subty≥
;

384 
	}
}

385 
	$sqlôe3_ªsu…_ãxt
(

386 
sqlôe3_c⁄ãxt
 *
pCtx
,

387 c⁄° *
z
,

388 
n
,

389 (*
xDñ
)(*)

391 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

392 
	`£tResu…SåOrEº‹
(
pCtx
, 
z
, 
n
, 
SQLITE_UTF8
, 
xDñ
);

393 
	}
}

394 
	$sqlôe3_ªsu…_ãxt64
(

395 
sqlôe3_c⁄ãxt
 *
pCtx
,

396 c⁄° *
z
,

397 
sqlôe3_uöt64
 
n
,

398 (*
xDñ
)(*),

399 
íc


401 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

402 
	`as£π
–
xDñ
!=
SQLITE_DYNAMIC
 );

403 if–
íc
==
SQLITE_UTF16
 )Én¯
SQLITE_UTF16NATIVE
;

404 if–
n
>0x7fffffff ){

405 ()
	`övokeVÆueDe°ru˘‹
(
z
, 
xDñ
, 
pCtx
);

407 
	`£tResu…SåOrEº‹
(
pCtx
, 
z
, ()
n
, 
íc
, 
xDñ
);

409 
	}
}

410 #i‚de‡
SQLITE_OMIT_UTF16


411 
	$sqlôe3_ªsu…_ãxt16
(

412 
sqlôe3_c⁄ãxt
 *
pCtx
,

413 c⁄° *
z
,

414 
n
,

415 (*
xDñ
)(*)

417 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

418 
	`£tResu…SåOrEº‹
(
pCtx
, 
z
, 
n
, 
SQLITE_UTF16NATIVE
, 
xDñ
);

419 
	}
}

420 
	$sqlôe3_ªsu…_ãxt16be
(

421 
sqlôe3_c⁄ãxt
 *
pCtx
,

422 c⁄° *
z
,

423 
n
,

424 (*
xDñ
)(*)

426 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

427 
	`£tResu…SåOrEº‹
(
pCtx
, 
z
, 
n
, 
SQLITE_UTF16BE
, 
xDñ
);

428 
	}
}

429 
	$sqlôe3_ªsu…_ãxt16À
(

430 
sqlôe3_c⁄ãxt
 *
pCtx
,

431 c⁄° *
z
,

432 
n
,

433 (*
xDñ
)(*)

435 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

436 
	`£tResu…SåOrEº‹
(
pCtx
, 
z
, 
n
, 
SQLITE_UTF16LE
, 
xDñ
);

437 
	}
}

439 
	$sqlôe3_ªsu…_vÆue
(
sqlôe3_c⁄ãxt
 *
pCtx
, 
sqlôe3_vÆue
 *
pVÆue
){

440 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

441 
	`sqlôe3VdbeMemC›y
(
pCtx
->
pOut
, 
pVÆue
);

442 
	}
}

443 
	$sqlôe3_ªsu…_zîoblob
(
sqlôe3_c⁄ãxt
 *
pCtx
, 
n
){

444 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

445 
	`sqlôe3VdbeMemSëZîoBlob
(
pCtx
->
pOut
, 
n
);

446 
	}
}

447 
	$sqlôe3_ªsu…_zîoblob64
(
sqlôe3_c⁄ãxt
 *
pCtx
, 
u64
 
n
){

448 
Mem
 *
pOut
 = 
pCtx
->pOut;

449 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pOut
->
db
->
muãx
) );

450 if–
n
>(
u64
)
pOut
->
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
] ){

451  
SQLITE_TOOBIG
;

453 
	`sqlôe3VdbeMemSëZîoBlob
(
pCtx
->
pOut
, ()
n
);

454  
SQLITE_OK
;

455 
	}
}

456 
	$sqlôe3_ªsu…_îr‹_code
(
sqlôe3_c⁄ãxt
 *
pCtx
, 
îrCode
){

457 
pCtx
->
isEº‹
 = 
îrCode
;

458 
pCtx
->
fEº‹OrAux
 = 1;

459 #ifde‡
SQLITE_DEBUG


460 if–
pCtx
->
pVdbe
 )ÖCtx->pVdbe->
rcAµ
 = 
îrCode
;

462 if–
pCtx
->
pOut
->
Êags
 & 
MEM_NuŒ
 ){

463 
	`sqlôe3VdbeMemSëSå
(
pCtx
->
pOut
, 
	`sqlôe3EºSå
(
îrCode
), -1,

464 
SQLITE_UTF8
, 
SQLITE_STATIC
);

466 
	}
}

469 
	$sqlôe3_ªsu…_îr‹_toobig
(
sqlôe3_c⁄ãxt
 *
pCtx
){

470 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

471 
pCtx
->
isEº‹
 = 
SQLITE_TOOBIG
;

472 
pCtx
->
fEº‹OrAux
 = 1;

473 
	`sqlôe3VdbeMemSëSå
(
pCtx
->
pOut
, "string or blobÅoo big", -1,

474 
SQLITE_UTF8
, 
SQLITE_STATIC
);

475 
	}
}

478 
	$sqlôe3_ªsu…_îr‹_nomem
(
sqlôe3_c⁄ãxt
 *
pCtx
){

479 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

480 
	`sqlôe3VdbeMemSëNuŒ
(
pCtx
->
pOut
);

481 
pCtx
->
isEº‹
 = 
SQLITE_NOMEM_BKPT
;

482 
pCtx
->
fEº‹OrAux
 = 1;

483 
	`sqlôe3OomFau…
(
pCtx
->
pOut
->
db
);

484 
	}
}

490 
	$doWÆCÆlbacks
(
sqlôe3
 *
db
){

491 
rc
 = 
SQLITE_OK
;

492 #i‚de‡
SQLITE_OMIT_WAL


493 
i
;

494 
i
=0; i<
db
->
nDb
; i++){

495 
Båì
 *
pBt
 = 
db
->
aDb
[
i
].pBt;

496 if–
pBt
 ){

497 
nE¡ry
;

498 
	`sqlôe3BåìE¡î
(
pBt
);

499 
nE¡ry
 = 
	`sqlôe3PagîWÆCÆlback
(
	`sqlôe3BåìPagî
(
pBt
));

500 
	`sqlôe3BåìLóve
(
pBt
);

501 if–
db
->
xWÆCÆlback
 && 
nE¡ry
>0 && 
rc
==
SQLITE_OK
 ){

502 
rc
 = 
db
->
	`xWÆCÆlback
(db->
pWÆArg
, db, db->
aDb
[
i
].
zDbSName
, 
nE¡ry
);

507  
rc
;

508 
	}
}

520 
	$sqlôe3Sãp
(
Vdbe
 *
p
){

521 
sqlôe3
 *
db
;

522 
rc
;

524 
	`as£π
(
p
);

525 if–
p
->
magic
!=
VDBE_MAGIC_RUN
 ){

542 #ifde‡
SQLITE_OMIT_AUTORESET


543 if–(
rc
 = 
p
->rc&0xff)==
SQLITE_BUSY
 ||Ñc==
SQLITE_LOCKED
 ){

544 
	`sqlôe3_ª£t
((
sqlôe3_°mt
*)
p
);

546  
SQLITE_MISUSE_BKPT
;

549 
	`sqlôe3_ª£t
((
sqlôe3_°mt
*)
p
);

554 
db
 = 
p
->db;

555 if–
db
->
mÆlocFaûed
 ){

556 
p
->
rc
 = 
SQLITE_NOMEM
;

557  
SQLITE_NOMEM_BKPT
;

560 if–
p
->
pc
<=0 &&Ö->
expúed
 ){

561 
p
->
rc
 = 
SQLITE_SCHEMA
;

562 
rc
 = 
SQLITE_ERROR
;

563 
íd_of_°ï
;

565 if–
p
->
pc
<0 ){

570 if–
db
->
nVdbeA˘ive
==0 ){

571 
db
->
u1
.
isI¡îru±ed
 = 0;

574 
	`as£π
–
db
->
nVdbeWrôe
>0 || db->
autoCommô
==0

575 || (
db
->
nDe„ºedC⁄s
==0 && db->
nDe„ºedImmC⁄s
==0)

578 #i‚de‡
SQLITE_OMIT_TRACE


579 if–(
db
->
xProfûe
 || (db->
mTø˚
 & 
SQLITE_TRACE_PROFILE
)!=0)

580 && !
db
->
öô
.
busy
 && 
p
->
zSql
 ){

581 
	`sqlôe3OsCuºítTimeI¡64
(
db
->
pVfs
, &
p
->
°¨tTime
);

583 
	`as£π
–
p
->
°¨tTime
==0 );

587 
db
->
nVdbeA˘ive
++;

588 if–
p
->
ªadO∆y
==0 ) 
db
->
nVdbeWrôe
++;

589 if–
p
->
bIsRódî
 ) 
db
->
nVdbeRód
++;

590 
p
->
pc
 = 0;

592 #ifde‡
SQLITE_DEBUG


593 
p
->
rcAµ
 = 
SQLITE_OK
;

595 #i‚de‡
SQLITE_OMIT_EXPLAIN


596 if–
p
->
ex∂aö
 ){

597 
rc
 = 
	`sqlôe3VdbeLi°
(
p
);

601 
db
->
nVdbeExec
++;

602 
rc
 = 
	`sqlôe3VdbeExec
(
p
);

603 
db
->
nVdbeExec
--;

606 #i‚de‡
SQLITE_OMIT_TRACE


608 if–
rc
!=
SQLITE_ROW
 ) 
	`checkProfûeCÆlback
(
db
, 
p
);

611 if–
rc
==
SQLITE_DONE
 ){

612 
	`as£π
–
p
->
rc
==
SQLITE_OK
 );

613 
p
->
rc
 = 
	`doWÆCÆlbacks
(
db
);

614 if–
p
->
rc
!=
SQLITE_OK
 ){

615 
rc
 = 
SQLITE_ERROR
;

619 
db
->
îrCode
 = 
rc
;

620 if–
SQLITE_NOMEM
==
	`sqlôe3ApiExô
(
p
->
db
,Ö->
rc
) ){

621 
p
->
rc
 = 
SQLITE_NOMEM_BKPT
;

623 
íd_of_°ï
:

631 
	`as£π
–
rc
==
SQLITE_ROW
 ||Ñc==
SQLITE_DONE
 ||Ñc==
SQLITE_ERROR


632 || (
rc
&0xff)==
SQLITE_BUSY
 ||Ñc==
SQLITE_MISUSE


634 
	`as£π
–(
p
->
rc
!=
SQLITE_ROW
 &&Ö->rc!=
SQLITE_DONE
Ë||Ö->rc=ı->
rcAµ
 );

635 if–
p
->
isPª∑ªV2
 && 
rc
!=
SQLITE_ROW
 &&Ñc!=
SQLITE_DONE
 ){

640 
rc
 = 
	`sqlôe3VdbeTøns„rEº‹
(
p
);

642  (
rc
&
db
->
îrMask
);

643 
	}
}

650 
	$sqlôe3_°ï
(
sqlôe3_°mt
 *
pStmt
){

651 
rc
 = 
SQLITE_OK
;

652 
rc2
 = 
SQLITE_OK
;

653 
Vdbe
 *
v
 = (Vdbe*)
pStmt
;

654 
˙t
 = 0;

655 
sqlôe3
 *
db
;

657 if–
	`vdbeSa„tyNŸNuŒ
(
v
) ){

658  
SQLITE_MISUSE_BKPT
;

660 
db
 = 
v
->db;

661 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

662 
v
->
doögRîun
 = 0;

663  (
rc
 = 
	`sqlôe3Sãp
(
v
))==
SQLITE_SCHEMA


664 && 
˙t
++ < 
SQLITE_MAX_SCHEMA_RETRY
 ){

665 
ßvedPc
 = 
v
->
pc
;

666 
rc2
 = 
rc
 = 
	`sqlôe3Rïª∑ª
(
v
);

667 if–
rc
!=
SQLITE_OK
) ;

668 
	`sqlôe3_ª£t
(
pStmt
);

669 if–
ßvedPc
>=0 ) 
v
->
doögRîun
 = 1;

670 
	`as£π
–
v
->
expúed
==0 );

672 if–
rc2
!=
SQLITE_OK
 ){

681 c⁄° *
zEº
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
db
->
pEº
);

682 
	`sqlôe3DbFªe
(
db
, 
v
->
zEºMsg
);

683 if–!
db
->
mÆlocFaûed
 ){

684 
v
->
zEºMsg
 = 
	`sqlôe3DbSåDup
(
db
, 
zEº
);

685 
v
->
rc
 = 
rc2
;

687 
v
->
zEºMsg
 = 0;

688 
v
->
rc
 =Ñ¯
SQLITE_NOMEM_BKPT
;

691 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

692 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

693  
rc
;

694 
	}
}

701 *
	$sqlôe3_u£r_d©a
(
sqlôe3_c⁄ãxt
 *
p
){

702 
	`as£π
–
p
 &&Ö->
pFunc
 );

703  
p
->
pFunc
->
pU£rD©a
;

704 
	}
}

716 
sqlôe3
 *
	$sqlôe3_c⁄ãxt_db_h™dÀ
(
sqlôe3_c⁄ãxt
 *
p
){

717 
	`as£π
–
p
 &&Ö->
pOut
 );

718  
p
->
pOut
->
db
;

719 
	}
}

728 
sqlôe3_öt64
 
	$sqlôe3StmtCuºítTime
(
sqlôe3_c⁄ãxt
 *
p
){

729 
rc
;

730 #i‚de‡
SQLITE_ENABLE_STAT3_OR_STAT4


731 
sqlôe3_öt64
 *
piTime
 = &
p
->
pVdbe
->
iCuºítTime
;

732 
	`as£π
–
p
->
pVdbe
!=0 );

734 
sqlôe3_öt64
 
iTime
 = 0;

735 
sqlôe3_öt64
 *
piTime
 = 
p
->
pVdbe
!=0 ? &p->pVdbe->
iCuºítTime
 : &
iTime
;

737 if–*
piTime
==0 ){

738 
rc
 = 
	`sqlôe3OsCuºítTimeI¡64
(
p
->
pOut
->
db
->
pVfs
, 
piTime
);

739 if–
rc
 ) *
piTime
 = 0;

741  *
piTime
;

742 
	}
}

752 
	$sqlôe3InvÆidFun˘i⁄
(

753 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

754 
NŸU£d
,

755 
sqlôe3_vÆue
 **
NŸU£d2


757 c⁄° *
zName
 = 
c⁄ãxt
->
pFunc
->zName;

758 *
zEº
;

759 
	`UNUSED_PARAMETER2
(
NŸU£d
, 
NŸU£d2
);

760 
zEº
 = 
	`sqlôe3_m¥ötf
(

761 "u«bÀÅÿu£ fun˘i⁄ %†öÅhêªque°ed c⁄ãxt", 
zName
);

762 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
, 
zEº
, -1);

763 
	`sqlôe3_‰ì
(
zEº
);

764 
	}
}

770 
SQLITE_NOINLINE
 *
	$¸óãAggC⁄ãxt
(
sqlôe3_c⁄ãxt
 *
p
, 
nByã
){

771 
Mem
 *
pMem
 = 
p
->pMem;

772 
	`as£π
–(
pMem
->
Êags
 & 
MEM_Agg
)==0 );

773 if–
nByã
<=0 ){

774 
	`sqlôe3VdbeMemSëNuŒ
(
pMem
);

775 
pMem
->
z
 = 0;

777 
	`sqlôe3VdbeMemCÀ¨AndResize
(
pMem
, 
nByã
);

778 
pMem
->
Êags
 = 
MEM_Agg
;

779 
pMem
->
u
.
pDef
 = 
p
->
pFunc
;

780 if–
pMem
->
z
 ){

781 
	`mem£t
(
pMem
->
z
, 0, 
nByã
);

784  (*)
pMem
->
z
;

785 
	}
}

792 *
	$sqlôe3_aggªg©e_c⁄ãxt
(
sqlôe3_c⁄ãxt
 *
p
, 
nByã
){

793 
	`as£π
–
p
 &&Ö->
pFunc
 &&Ö->pFunc->
xFöÆize
 );

794 
	`as£π
–
	`sqlôe3_muãx_hñd
(
p
->
pOut
->
db
->
muãx
) );

795 
	`ã°ˇ£
–
nByã
<0 );

796 if–(
p
->
pMem
->
Êags
 & 
MEM_Agg
)==0 ){

797  
	`¸óãAggC⁄ãxt
(
p
, 
nByã
);

799  (*)
p
->
pMem
->
z
;

801 
	}
}

807 *
	$sqlôe3_gë_auxd©a
(
sqlôe3_c⁄ãxt
 *
pCtx
, 
iArg
){

808 
AuxD©a
 *
pAuxD©a
;

810 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

811 #i‡
SQLITE_ENABLE_STAT3_OR_STAT4


812 if–
pCtx
->
pVdbe
==0 )  0;

814 
	`as£π
–
pCtx
->
pVdbe
!=0 );

816 
pAuxD©a
=
pCtx
->
pVdbe
->pAuxD©a;ÖAuxD©a;ÖAuxD©aıAuxD©a->
pNext
){

817 if–
pAuxD©a
->
iOp
==
pCtx
->iO∞&&ÖAuxD©a->
iArg
==iArg ) ;

820  (
pAuxD©a
 ?ÖAuxD©a->
pAux
 : 0);

821 
	}
}

828 
	$sqlôe3_£t_auxd©a
(

829 
sqlôe3_c⁄ãxt
 *
pCtx
,

830 
iArg
,

831 *
pAux
,

832 (*
xDñëe
)(*)

834 
AuxD©a
 *
pAuxD©a
;

835 
Vdbe
 *
pVdbe
 = 
pCtx
->pVdbe;

837 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

838 if–
iArg
<0 ) 
Áûed
;

839 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


840 if–
pVdbe
==0 ) 
Áûed
;

842 
	`as£π
–
pVdbe
!=0 );

845 
pAuxD©a
=
pVdbe
->pAuxD©a;ÖAuxD©a;ÖAuxD©aıAuxD©a->
pNext
){

846 if–
pAuxD©a
->
iOp
==
pCtx
->iO∞&&ÖAuxD©a->
iArg
==iArg ) ;

848 if–
pAuxD©a
==0 ){

849 
pAuxD©a
 = 
	`sqlôe3DbMÆlocZîo
(
pVdbe
->
db
, (
AuxD©a
));

850 if–!
pAuxD©a
 ) 
Áûed
;

851 
pAuxD©a
->
iOp
 = 
pCtx
->iOp;

852 
pAuxD©a
->
iArg
 = iArg;

853 
pAuxD©a
->
pNext
 = 
pVdbe
->pAuxData;

854 
pVdbe
->
pAuxD©a
 =ÖAuxData;

855 if–
pCtx
->
fEº‹OrAux
==0 ){

856 
pCtx
->
isEº‹
 = 0;

857 
pCtx
->
fEº‹OrAux
 = 1;

859 }if–
pAuxD©a
->
xDñëe
 ){

860 
pAuxD©a
->
	`xDñëe
’AuxD©a->
pAux
);

863 
pAuxD©a
->
pAux
 =ÖAux;

864 
pAuxD©a
->
xDñëe
 = xDelete;

867 
Áûed
:

868 if–
xDñëe
 ){

869 
	`xDñëe
(
pAux
);

871 
	}
}

873 #i‚de‡
SQLITE_OMIT_DEPRECATED


883 
	$sqlôe3_aggªg©e_cou¡
(
sqlôe3_c⁄ãxt
 *
p
){

884 
	`as£π
–
p
 &&Ö->
pMem
 &&Ö->
pFunc
 &&Ö->pFunc->
xFöÆize
 );

885  
p
->
pMem
->
n
;

886 
	}
}

892 
	$sqlôe3_cﬁumn_cou¡
(
sqlôe3_°mt
 *
pStmt
){

893 
Vdbe
 *
pVm
 = (Vdbê*)
pStmt
;

894  
pVm
 ?ÖVm->
nResCﬁumn
 : 0;

895 
	}
}

901 
	$sqlôe3_d©a_cou¡
(
sqlôe3_°mt
 *
pStmt
){

902 
Vdbe
 *
pVm
 = (Vdbê*)
pStmt
;

903 if–
pVm
==0 ||ÖVm->
pResu…Së
==0 )  0;

904  
pVm
->
nResCﬁumn
;

905 
	}
}

910 c⁄° 
Mem
 *
	$cﬁumnNuŒVÆue
(){

920 c⁄° 
Mem
 
nuŒMem


921 #i‡
	`deföed
(
SQLITE_DEBUG
Ë&& deföed(
__GNUC__
)

922 
	`__©åibuã__
((
	`Æig√d
(8)))

926  (
u16
)
MEM_NuŒ
,

927  (
u8
)0,

928  (
u8
)0,

933  (
u32
)0,

934  (
sqlôe3
*)0,

936 #ifde‡
SQLITE_DEBUG


937  (
Mem
*)0,

941  &
nuŒMem
;

942 
	}
}

950 
Mem
 *
	$cﬁumnMem
(
sqlôe3_°mt
 *
pStmt
, 
i
){

951 
Vdbe
 *
pVm
;

952 
Mem
 *
pOut
;

954 
pVm
 = (
Vdbe
 *)
pStmt
;

955 if–
pVm
==0 )  (
Mem
*)
	`cﬁumnNuŒVÆue
();

956 
	`as£π
–
pVm
->
db
 );

957 
	`sqlôe3_muãx_íãr
(
pVm
->
db
->
muãx
);

958 if–
pVm
->
pResu…Së
!=0 && 
i
<pVm->
nResCﬁumn
 && i>=0 ){

959 
pOut
 = &
pVm
->
pResu…Së
[
i
];

961 
	`sqlôe3Eº‹
(
pVm
->
db
, 
SQLITE_RANGE
);

962 
pOut
 = (
Mem
*)
	`cﬁumnNuŒVÆue
();

964  
pOut
;

965 
	}
}

985 
	$cﬁumnMÆlocFaûuª
(
sqlôe3_°mt
 *
pStmt
)

992 
Vdbe
 *
p
 = (Vdbê*)
pStmt
;

993 if–
p
 ){

994 
	`as£π
–
p
->
db
!=0 );

995 
	`as£π
–
	`sqlôe3_muãx_hñd
(
p
->
db
->
muãx
) );

996 
p
->
rc
 = 
	`sqlôe3ApiExô
’->
db
,Ö->rc);

997 
	`sqlôe3_muãx_Àave
(
p
->
db
->
muãx
);

999 
	}
}

1005 c⁄° *
	$sqlôe3_cﬁumn_blob
(
sqlôe3_°mt
 *
pStmt
, 
i
){

1006 c⁄° *
vÆ
;

1007 
vÆ
 = 
	`sqlôe3_vÆue_blob
–
	`cﬁumnMem
(
pStmt
,
i
) );

1012 
	`cﬁumnMÆlocFaûuª
(
pStmt
);

1013  
vÆ
;

1014 
	}
}

1015 
	$sqlôe3_cﬁumn_byãs
(
sqlôe3_°mt
 *
pStmt
, 
i
){

1016 
vÆ
 = 
	`sqlôe3_vÆue_byãs
–
	`cﬁumnMem
(
pStmt
,
i
) );

1017 
	`cﬁumnMÆlocFaûuª
(
pStmt
);

1018  
vÆ
;

1019 
	}
}

1020 
	$sqlôe3_cﬁumn_byãs16
(
sqlôe3_°mt
 *
pStmt
, 
i
){

1021 
vÆ
 = 
	`sqlôe3_vÆue_byãs16
–
	`cﬁumnMem
(
pStmt
,
i
) );

1022 
	`cﬁumnMÆlocFaûuª
(
pStmt
);

1023  
vÆ
;

1024 
	}
}

1025 
	$sqlôe3_cﬁumn_doubÀ
(
sqlôe3_°mt
 *
pStmt
, 
i
){

1026 
vÆ
 = 
	`sqlôe3_vÆue_doubÀ
–
	`cﬁumnMem
(
pStmt
,
i
) );

1027 
	`cﬁumnMÆlocFaûuª
(
pStmt
);

1028  
vÆ
;

1029 
	}
}

1030 
	$sqlôe3_cﬁumn_öt
(
sqlôe3_°mt
 *
pStmt
, 
i
){

1031 
vÆ
 = 
	`sqlôe3_vÆue_öt
–
	`cﬁumnMem
(
pStmt
,
i
) );

1032 
	`cﬁumnMÆlocFaûuª
(
pStmt
);

1033  
vÆ
;

1034 
	}
}

1035 
sqlôe_öt64
 
	$sqlôe3_cﬁumn_öt64
(
sqlôe3_°mt
 *
pStmt
, 
i
){

1036 
sqlôe_öt64
 
vÆ
 = 
	`sqlôe3_vÆue_öt64
–
	`cﬁumnMem
(
pStmt
,
i
) );

1037 
	`cﬁumnMÆlocFaûuª
(
pStmt
);

1038  
vÆ
;

1039 
	}
}

1040 c⁄° *
	$sqlôe3_cﬁumn_ãxt
(
sqlôe3_°mt
 *
pStmt
, 
i
){

1041 c⁄° *
vÆ
 = 
	`sqlôe3_vÆue_ãxt
–
	`cﬁumnMem
(
pStmt
,
i
) );

1042 
	`cﬁumnMÆlocFaûuª
(
pStmt
);

1043  
vÆ
;

1044 
	}
}

1045 
sqlôe3_vÆue
 *
	$sqlôe3_cﬁumn_vÆue
(
sqlôe3_°mt
 *
pStmt
, 
i
){

1046 
Mem
 *
pOut
 = 
	`cﬁumnMem
(
pStmt
, 
i
);

1047 if–
pOut
->
Êags
&
MEM_Sètic
 ){

1048 
pOut
->
Êags
 &~
MEM_Sètic
;

1049 
pOut
->
Êags
 |
MEM_Ephem
;

1051 
	`cﬁumnMÆlocFaûuª
(
pStmt
);

1052  (
sqlôe3_vÆue
 *)
pOut
;

1053 
	}
}

1054 #i‚de‡
SQLITE_OMIT_UTF16


1055 c⁄° *
	$sqlôe3_cﬁumn_ãxt16
(
sqlôe3_°mt
 *
pStmt
, 
i
){

1056 c⁄° *
vÆ
 = 
	`sqlôe3_vÆue_ãxt16
–
	`cﬁumnMem
(
pStmt
,
i
) );

1057 
	`cﬁumnMÆlocFaûuª
(
pStmt
);

1058  
vÆ
;

1059 
	}
}

1061 
	$sqlôe3_cﬁumn_ty≥
(
sqlôe3_°mt
 *
pStmt
, 
i
){

1062 
iTy≥
 = 
	`sqlôe3_vÆue_ty≥
–
	`cﬁumnMem
(
pStmt
,
i
) );

1063 
	`cﬁumnMÆlocFaûuª
(
pStmt
);

1064  
iTy≥
;

1065 
	}
}

1083 c⁄° *
	$cﬁumnName
(

1084 
sqlôe3_°mt
 *
pStmt
,

1085 
N
,

1086 c⁄° *(*
xFunc
)(
Mem
*),

1087 
u£Ty≥


1089 c⁄° *
ªt
;

1090 
Vdbe
 *
p
;

1091 
n
;

1092 
sqlôe3
 *
db
;

1093 #ifde‡
SQLITE_ENABLE_API_ARMOR


1094 if–
pStmt
==0 ){

1095 ()
SQLITE_MISUSE_BKPT
;

1099 
ªt
 = 0;

1100 
p
 = (
Vdbe
 *)
pStmt
;

1101 
db
 = 
p
->db;

1102 
	`as£π
–
db
!=0 );

1103 
n
 = 
	`sqlôe3_cﬁumn_cou¡
(
pStmt
);

1104 if–
N
<
n
 && N>=0 ){

1105 
N
 +
u£Ty≥
*
n
;

1106 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

1107 
	`as£π
–
db
->
mÆlocFaûed
==0 );

1108 
ªt
 = 
	`xFunc
(&
p
->
aCﬁName
[
N
]);

1112 if–
db
->
mÆlocFaûed
 ){

1113 
	`sqlôe3OomCÀ¨
(
db
);

1114 
ªt
 = 0;

1116 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

1118  
ªt
;

1119 
	}
}

1125 c⁄° *
	$sqlôe3_cﬁumn_«me
(
sqlôe3_°mt
 *
pStmt
, 
N
){

1126  
	`cﬁumnName
(

1127 
pStmt
, 
N
, (c⁄° *(*)(
Mem
*))
sqlôe3_vÆue_ãxt
, 
COLNAME_NAME
);

1128 
	}
}

1129 #i‚de‡
SQLITE_OMIT_UTF16


1130 c⁄° *
	$sqlôe3_cﬁumn_«me16
(
sqlôe3_°mt
 *
pStmt
, 
N
){

1131  
	`cﬁumnName
(

1132 
pStmt
, 
N
, (c⁄° *(*)(
Mem
*))
sqlôe3_vÆue_ãxt16
, 
COLNAME_NAME
);

1133 
	}
}

1140 #i‡
deföed
(
SQLITE_OMIT_DECLTYPE
Ë&& deföed(
SQLITE_ENABLE_COLUMN_METADATA
)

1145 #i‚de‡
SQLITE_OMIT_DECLTYPE


1150 c⁄° *
	$sqlôe3_cﬁumn_de˛ty≥
(
sqlôe3_°mt
 *
pStmt
, 
N
){

1151  
	`cﬁumnName
(

1152 
pStmt
, 
N
, (c⁄° *(*)(
Mem
*))
sqlôe3_vÆue_ãxt
, 
COLNAME_DECLTYPE
);

1153 
	}
}

1154 #i‚de‡
SQLITE_OMIT_UTF16


1155 c⁄° *
	$sqlôe3_cﬁumn_de˛ty≥16
(
sqlôe3_°mt
 *
pStmt
, 
N
){

1156  
	`cﬁumnName
(

1157 
pStmt
, 
N
, (c⁄° *(*)(
Mem
*))
sqlôe3_vÆue_ãxt16
, 
COLNAME_DECLTYPE
);

1158 
	}
}

1162 #ifde‡
SQLITE_ENABLE_COLUMN_METADATA


1168 c⁄° *
	$sqlôe3_cﬁumn_d©aba£_«me
(
sqlôe3_°mt
 *
pStmt
, 
N
){

1169  
	`cﬁumnName
(

1170 
pStmt
, 
N
, (c⁄° *(*)(
Mem
*))
sqlôe3_vÆue_ãxt
, 
COLNAME_DATABASE
);

1171 
	}
}

1172 #i‚de‡
SQLITE_OMIT_UTF16


1173 c⁄° *
	$sqlôe3_cﬁumn_d©aba£_«me16
(
sqlôe3_°mt
 *
pStmt
, 
N
){

1174  
	`cﬁumnName
(

1175 
pStmt
, 
N
, (c⁄° *(*)(
Mem
*))
sqlôe3_vÆue_ãxt16
, 
COLNAME_DATABASE
);

1176 
	}
}

1184 c⁄° *
	$sqlôe3_cﬁumn_èbÀ_«me
(
sqlôe3_°mt
 *
pStmt
, 
N
){

1185  
	`cﬁumnName
(

1186 
pStmt
, 
N
, (c⁄° *(*)(
Mem
*))
sqlôe3_vÆue_ãxt
, 
COLNAME_TABLE
);

1187 
	}
}

1188 #i‚de‡
SQLITE_OMIT_UTF16


1189 c⁄° *
	$sqlôe3_cﬁumn_èbÀ_«me16
(
sqlôe3_°mt
 *
pStmt
, 
N
){

1190  
	`cﬁumnName
(

1191 
pStmt
, 
N
, (c⁄° *(*)(
Mem
*))
sqlôe3_vÆue_ãxt16
, 
COLNAME_TABLE
);

1192 
	}
}

1200 c⁄° *
	$sqlôe3_cﬁumn_‹igö_«me
(
sqlôe3_°mt
 *
pStmt
, 
N
){

1201  
	`cﬁumnName
(

1202 
pStmt
, 
N
, (c⁄° *(*)(
Mem
*))
sqlôe3_vÆue_ãxt
, 
COLNAME_COLUMN
);

1203 
	}
}

1204 #i‚de‡
SQLITE_OMIT_UTF16


1205 c⁄° *
	$sqlôe3_cﬁumn_‹igö_«me16
(
sqlôe3_°mt
 *
pStmt
, 
N
){

1206  
	`cﬁumnName
(

1207 
pStmt
, 
N
, (c⁄° *(*)(
Mem
*))
sqlôe3_vÆue_ãxt16
, 
COLNAME_COLUMN
);

1208 
	}
}

1228 
	$vdbeUnböd
(
Vdbe
 *
p
, 
i
){

1229 
Mem
 *
pV¨
;

1230 if–
	`vdbeSa„tyNŸNuŒ
(
p
) ){

1231  
SQLITE_MISUSE_BKPT
;

1233 
	`sqlôe3_muãx_íãr
(
p
->
db
->
muãx
);

1234 if–
p
->
magic
!=
VDBE_MAGIC_RUN
 ||Ö->
pc
>=0 ){

1235 
	`sqlôe3Eº‹
(
p
->
db
, 
SQLITE_MISUSE
);

1236 
	`sqlôe3_muãx_Àave
(
p
->
db
->
muãx
);

1237 
	`sqlôe3_log
(
SQLITE_MISUSE
,

1238 "böd o¿®busyÖª∑ªd sèãmít: [%s]", 
p
->
zSql
);

1239  
SQLITE_MISUSE_BKPT
;

1241 if–
i
<1 || i>
p
->
nV¨
 ){

1242 
	`sqlôe3Eº‹
(
p
->
db
, 
SQLITE_RANGE
);

1243 
	`sqlôe3_muãx_Àave
(
p
->
db
->
muãx
);

1244  
SQLITE_RANGE
;

1246 
i
--;

1247 
pV¨
 = &
p
->
aV¨
[
i
];

1248 
	`sqlôe3VdbeMemRñó£
(
pV¨
);

1249 
pV¨
->
Êags
 = 
MEM_NuŒ
;

1250 
	`sqlôe3Eº‹
(
p
->
db
, 
SQLITE_OK
);

1261 if–
p
->
isPª∑ªV2
 &&

1262 ((
i
<32 && 
p
->
expmask
 & ((
u32
)1 << i)) ||Ö->expmask==0xffffffff)

1264 
p
->
expúed
 = 1;

1266  
SQLITE_OK
;

1267 
	}
}

1272 
	$bödText
(

1273 
sqlôe3_°mt
 *
pStmt
,

1274 
i
,

1275 c⁄° *
zD©a
,

1276 
nD©a
,

1277 (*
xDñ
)(*),

1278 
u8
 
ícodög


1280 
Vdbe
 *
p
 = (Vdbê*)
pStmt
;

1281 
Mem
 *
pV¨
;

1282 
rc
;

1284 
rc
 = 
	`vdbeUnböd
(
p
, 
i
);

1285 if–
rc
==
SQLITE_OK
 ){

1286 if–
zD©a
!=0 ){

1287 
pV¨
 = &
p
->
aV¨
[
i
-1];

1288 
rc
 = 
	`sqlôe3VdbeMemSëSå
(
pV¨
, 
zD©a
, 
nD©a
, 
ícodög
, 
xDñ
);

1289 if–
rc
==
SQLITE_OK
 && 
ícodög
!=0 ){

1290 
rc
 = 
	`sqlôe3VdbeCh™geEncodög
(
pV¨
, 
	`ENC
(
p
->
db
));

1292 
	`sqlôe3Eº‹
(
p
->
db
, 
rc
);

1293 
rc
 = 
	`sqlôe3ApiExô
(
p
->
db
,Ñc);

1295 
	`sqlôe3_muãx_Àave
(
p
->
db
->
muãx
);

1296 }if–
xDñ
!=
SQLITE_STATIC
 && xDñ!=
SQLITE_TRANSIENT
 ){

1297 
	`xDñ
((*)
zD©a
);

1299  
rc
;

1300 
	}
}

1306 
	$sqlôe3_böd_blob
(

1307 
sqlôe3_°mt
 *
pStmt
,

1308 
i
,

1309 c⁄° *
zD©a
,

1310 
nD©a
,

1311 (*
xDñ
)(*)

1313 #ifde‡
SQLITE_ENABLE_API_ARMOR


1314 if–
nD©a
<0 )  
SQLITE_MISUSE_BKPT
;

1316  
	`bödText
(
pStmt
, 
i
, 
zD©a
, 
nD©a
, 
xDñ
, 0);

1317 
	}
}

1318 
	$sqlôe3_böd_blob64
(

1319 
sqlôe3_°mt
 *
pStmt
,

1320 
i
,

1321 c⁄° *
zD©a
,

1322 
sqlôe3_uöt64
 
nD©a
,

1323 (*
xDñ
)(*)

1325 
	`as£π
–
xDñ
!=
SQLITE_DYNAMIC
 );

1326 if–
nD©a
>0x7fffffff ){

1327  
	`övokeVÆueDe°ru˘‹
(
zD©a
, 
xDñ
, 0);

1329  
	`bödText
(
pStmt
, 
i
, 
zD©a
, ()
nD©a
, 
xDñ
, 0);

1331 
	}
}

1332 
	$sqlôe3_böd_doubÀ
(
sqlôe3_°mt
 *
pStmt
, 
i
, 
rVÆue
){

1333 
rc
;

1334 
Vdbe
 *
p
 = (Vdbê*)
pStmt
;

1335 
rc
 = 
	`vdbeUnböd
(
p
, 
i
);

1336 if–
rc
==
SQLITE_OK
 ){

1337 
	`sqlôe3VdbeMemSëDoubÀ
(&
p
->
aV¨
[
i
-1], 
rVÆue
);

1338 
	`sqlôe3_muãx_Àave
(
p
->
db
->
muãx
);

1340  
rc
;

1341 
	}
}

1342 
	$sqlôe3_böd_öt
(
sqlôe3_°mt
 *
p
, 
i
, 
iVÆue
){

1343  
	`sqlôe3_böd_öt64
(
p
, 
i
, (
i64
)
iVÆue
);

1344 
	}
}

1345 
	$sqlôe3_böd_öt64
(
sqlôe3_°mt
 *
pStmt
, 
i
, 
sqlôe_öt64
 
iVÆue
){

1346 
rc
;

1347 
Vdbe
 *
p
 = (Vdbê*)
pStmt
;

1348 
rc
 = 
	`vdbeUnböd
(
p
, 
i
);

1349 if–
rc
==
SQLITE_OK
 ){

1350 
	`sqlôe3VdbeMemSëI¡64
(&
p
->
aV¨
[
i
-1], 
iVÆue
);

1351 
	`sqlôe3_muãx_Àave
(
p
->
db
->
muãx
);

1353  
rc
;

1354 
	}
}

1355 
	$sqlôe3_böd_nuŒ
(
sqlôe3_°mt
 *
pStmt
, 
i
){

1356 
rc
;

1357 
Vdbe
 *
p
 = (Vdbe*)
pStmt
;

1358 
rc
 = 
	`vdbeUnböd
(
p
, 
i
);

1359 if–
rc
==
SQLITE_OK
 ){

1360 
	`sqlôe3_muãx_Àave
(
p
->
db
->
muãx
);

1362  
rc
;

1363 
	}
}

1364 
	$sqlôe3_böd_ãxt
(

1365 
sqlôe3_°mt
 *
pStmt
,

1366 
i
,

1367 c⁄° *
zD©a
,

1368 
nD©a
,

1369 (*
xDñ
)(*)

1371  
	`bödText
(
pStmt
, 
i
, 
zD©a
, 
nD©a
, 
xDñ
, 
SQLITE_UTF8
);

1372 
	}
}

1373 
	$sqlôe3_böd_ãxt64
(

1374 
sqlôe3_°mt
 *
pStmt
,

1375 
i
,

1376 c⁄° *
zD©a
,

1377 
sqlôe3_uöt64
 
nD©a
,

1378 (*
xDñ
)(*),

1379 
íc


1381 
	`as£π
–
xDñ
!=
SQLITE_DYNAMIC
 );

1382 if–
nD©a
>0x7fffffff ){

1383  
	`övokeVÆueDe°ru˘‹
(
zD©a
, 
xDñ
, 0);

1385 if–
íc
==
SQLITE_UTF16
 )Én¯
SQLITE_UTF16NATIVE
;

1386  
	`bödText
(
pStmt
, 
i
, 
zD©a
, ()
nD©a
, 
xDñ
, 
íc
);

1388 
	}
}

1389 #i‚de‡
SQLITE_OMIT_UTF16


1390 
	$sqlôe3_böd_ãxt16
(

1391 
sqlôe3_°mt
 *
pStmt
,

1392 
i
,

1393 c⁄° *
zD©a
,

1394 
nD©a
,

1395 (*
xDñ
)(*)

1397  
	`bödText
(
pStmt
, 
i
, 
zD©a
, 
nD©a
, 
xDñ
, 
SQLITE_UTF16NATIVE
);

1398 
	}
}

1400 
	$sqlôe3_böd_vÆue
(
sqlôe3_°mt
 *
pStmt
, 
i
, c⁄° 
sqlôe3_vÆue
 *
pVÆue
){

1401 
rc
;

1402  
	`sqlôe3_vÆue_ty≥
((
sqlôe3_vÆue
*)
pVÆue
) ){

1403 
SQLITE_INTEGER
: {

1404 
rc
 = 
	`sqlôe3_böd_öt64
(
pStmt
, 
i
, 
pVÆue
->
u
.i);

1407 
SQLITE_FLOAT
: {

1408 
rc
 = 
	`sqlôe3_böd_doubÀ
(
pStmt
, 
i
, 
pVÆue
->
u
.
r
);

1411 
SQLITE_BLOB
: {

1412 if–
pVÆue
->
Êags
 & 
MEM_Zîo
 ){

1413 
rc
 = 
	`sqlôe3_böd_zîoblob
(
pStmt
, 
i
, 
pVÆue
->
u
.
nZîo
);

1415 
rc
 = 
	`sqlôe3_böd_blob
(
pStmt
, 
i
, 
pVÆue
->
z
,ÖVÆue->
n
,
SQLITE_TRANSIENT
);

1419 
SQLITE_TEXT
: {

1420 
rc
 = 
	`bödText
(
pStmt
,
i
, 
pVÆue
->
z
,ÖVÆue->
n
, 
SQLITE_TRANSIENT
,

1421 
pVÆue
->
íc
);

1425 
rc
 = 
	`sqlôe3_böd_nuŒ
(
pStmt
, 
i
);

1429  
rc
;

1430 
	}
}

1431 
	$sqlôe3_böd_zîoblob
(
sqlôe3_°mt
 *
pStmt
, 
i
, 
n
){

1432 
rc
;

1433 
Vdbe
 *
p
 = (Vdbê*)
pStmt
;

1434 
rc
 = 
	`vdbeUnböd
(
p
, 
i
);

1435 if–
rc
==
SQLITE_OK
 ){

1436 
	`sqlôe3VdbeMemSëZîoBlob
(&
p
->
aV¨
[
i
-1], 
n
);

1437 
	`sqlôe3_muãx_Àave
(
p
->
db
->
muãx
);

1439  
rc
;

1440 
	}
}

1441 
	$sqlôe3_böd_zîoblob64
(
sqlôe3_°mt
 *
pStmt
, 
i
, 
sqlôe3_uöt64
 
n
){

1442 
rc
;

1443 
Vdbe
 *
p
 = (Vdbê*)
pStmt
;

1444 
	`sqlôe3_muãx_íãr
(
p
->
db
->
muãx
);

1445 if–
n
>(
u64
)
p
->
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
] ){

1446 
rc
 = 
SQLITE_TOOBIG
;

1448 
	`as£π
–(
n
 & 0x7FFFFFFF)==n );

1449 
rc
 = 
	`sqlôe3_böd_zîoblob
(
pStmt
, 
i
, 
n
);

1451 
rc
 = 
	`sqlôe3ApiExô
(
p
->
db
,Ñc);

1452 
	`sqlôe3_muãx_Àave
(
p
->
db
->
muãx
);

1453  
rc
;

1454 
	}
}

1460 
	$sqlôe3_böd_∑ømëî_cou¡
(
sqlôe3_°mt
 *
pStmt
){

1461 
Vdbe
 *
p
 = (Vdbe*)
pStmt
;

1462  
p
 ?Ö->
nV¨
 : 0;

1463 
	}
}

1471 c⁄° *
	$sqlôe3_böd_∑ømëî_«me
(
sqlôe3_°mt
 *
pStmt
, 
i
){

1472 
Vdbe
 *
p
 = (Vdbe*)
pStmt
;

1473 if–
p
==0 )  0;

1474  
	`sqlôe3VLi°NumToName
(
p
->
pVLi°
, 
i
);

1475 
	}
}

1482 
	$sqlôe3VdbeP¨amëîIndex
(
Vdbe
 *
p
, c⁄° *
zName
, 
nName
){

1483 if–
p
==0 || 
zName
==0 )  0;

1484  
	`sqlôe3VLi°NameToNum
(
p
->
pVLi°
, 
zName
, 
nName
);

1485 
	}
}

1486 
	$sqlôe3_böd_∑ømëî_ödex
(
sqlôe3_°mt
 *
pStmt
, c⁄° *
zName
){

1487  
	`sqlôe3VdbeP¨amëîIndex
((
Vdbe
*)
pStmt
, 
zName
, 
	`sqlôe3SåÀn30
(zName));

1488 
	}
}

1493 
	$sqlôe3Tøns„rBödögs
(
sqlôe3_°mt
 *
pFromStmt
, sqlôe3_°mà*
pToStmt
){

1494 
Vdbe
 *
pFrom
 = (Vdbe*)
pFromStmt
;

1495 
Vdbe
 *
pTo
 = (Vdbe*)
pToStmt
;

1496 
i
;

1497 
	`as£π
–
pTo
->
db
==
pFrom
->db );

1498 
	`as£π
–
pTo
->
nV¨
==
pFrom
->nVar );

1499 
	`sqlôe3_muãx_íãr
(
pTo
->
db
->
muãx
);

1500 
i
=0; i<
pFrom
->
nV¨
; i++){

1501 
	`sqlôe3VdbeMemMove
(&
pTo
->
aV¨
[
i
], &
pFrom
->aVar[i]);

1503 
	`sqlôe3_muãx_Àave
(
pTo
->
db
->
muãx
);

1504  
SQLITE_OK
;

1505 
	}
}

1507 #i‚de‡
SQLITE_OMIT_DEPRECATED


1520 
	$sqlôe3_å™s„r_bödögs
(
sqlôe3_°mt
 *
pFromStmt
, sqlôe3_°mà*
pToStmt
){

1521 
Vdbe
 *
pFrom
 = (Vdbe*)
pFromStmt
;

1522 
Vdbe
 *
pTo
 = (Vdbe*)
pToStmt
;

1523 if–
pFrom
->
nV¨
!=
pTo
->nVar ){

1524  
SQLITE_ERROR
;

1526 if–
pTo
->
isPª∑ªV2
 &&ÖTo->
expmask
 ){

1527 
pTo
->
expúed
 = 1;

1529 if–
pFrom
->
isPª∑ªV2
 &&ÖFrom->
expmask
 ){

1530 
pFrom
->
expúed
 = 1;

1532  
	`sqlôe3Tøns„rBödögs
(
pFromStmt
, 
pToStmt
);

1533 
	}
}

1542 
sqlôe3
 *
	$sqlôe3_db_h™dÀ
(
sqlôe3_°mt
 *
pStmt
){

1543  
pStmt
 ? ((
Vdbe
*ÌStmt)->
db
 : 0;

1544 
	}
}

1550 
	$sqlôe3_°mt_ªad⁄ly
(
sqlôe3_°mt
 *
pStmt
){

1551  
pStmt
 ? ((
Vdbe
*ÌStmt)->
ªadO∆y
 : 1;

1552 
	}
}

1557 
	$sqlôe3_°mt_busy
(
sqlôe3_°mt
 *
pStmt
){

1558 
Vdbe
 *
v
 = (Vdbe*)
pStmt
;

1559  
v
!=0 && v->
magic
==
VDBE_MAGIC_RUN
 && v->
pc
>=0;

1560 
	}
}

1568 
sqlôe3_°mt
 *
	$sqlôe3_√xt_°mt
(
sqlôe3
 *
pDb
, 
sqlôe3_°mt
 *
pStmt
){

1569 
sqlôe3_°mt
 *
pNext
;

1570 #ifde‡
SQLITE_ENABLE_API_ARMOR


1571 if–!
	`sqlôe3Sa„tyCheckOk
(
pDb
) ){

1572 ()
SQLITE_MISUSE_BKPT
;

1576 
	`sqlôe3_muãx_íãr
(
pDb
->
muãx
);

1577 if–
pStmt
==0 ){

1578 
pNext
 = (
sqlôe3_°mt
*)
pDb
->
pVdbe
;

1580 
pNext
 = (
sqlôe3_°mt
*)((
Vdbe
*)
pStmt
)->pNext;

1582 
	`sqlôe3_muãx_Àave
(
pDb
->
muãx
);

1583  
pNext
;

1584 
	}
}

1589 
	$sqlôe3_°mt_°©us
(
sqlôe3_°mt
 *
pStmt
, 
›
, 
ª£tFœg
){

1590 
Vdbe
 *
pVdbe
 = (Vdbe*)
pStmt
;

1591 
u32
 
v
;

1592 #ifde‡
SQLITE_ENABLE_API_ARMOR


1593 if–!
pStmt
 ){

1594 ()
SQLITE_MISUSE_BKPT
;

1598 
v
 = 
pVdbe
->
aCou¡î
[
›
];

1599 if–
ª£tFœg
 ) 
pVdbe
->
aCou¡î
[
›
] = 0;

1600  ()
v
;

1601 
	}
}

1606 c⁄° *
	$sqlôe3_sql
(
sqlôe3_°mt
 *
pStmt
){

1607 
Vdbe
 *
p
 = (Vdbê*)
pStmt
;

1608  
p
 ?Ö->
zSql
 : 0;

1609 
	}
}

1620 *
	$sqlôe3_ex∑nded_sql
(
sqlôe3_°mt
 *
pStmt
){

1621 #ifde‡
SQLITE_OMIT_TRACE


1624 *
z
 = 0;

1625 c⁄° *
zSql
 = 
	`sqlôe3_sql
(
pStmt
);

1626 if–
zSql
 ){

1627 
Vdbe
 *
p
 = (Vdbê*)
pStmt
;

1628 
	`sqlôe3_muãx_íãr
(
p
->
db
->
muãx
);

1629 
z
 = 
	`sqlôe3VdbeEx∑ndSql
(
p
, 
zSql
);

1630 
	`sqlôe3_muãx_Àave
(
p
->
db
->
muãx
);

1632  
z
;

1634 
	}
}

1636 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


1642 
U≈ackedRec‹d
 *
	$vdbeU≈ackRec‹d
(

1643 
KeyInfo
 *
pKeyInfo
,

1644 
nKey
,

1645 c⁄° *
pKey


1647 
U≈ackedRec‹d
 *
pRë
;

1649 
pRë
 = 
	`sqlôe3VdbeAŒocU≈ackedRec‹d
(
pKeyInfo
);

1650 if–
pRë
 ){

1651 
	`mem£t
(
pRë
->
aMem
, 0, (
Mem
)*(
pKeyInfo
->
nFõld
+1));

1652 
	`sqlôe3VdbeRec‹dU≈ack
(
pKeyInfo
, 
nKey
, 
pKey
, 
pRë
);

1654  
pRë
;

1655 
	}
}

1661 
	$sqlôe3_¥eupd©e_ﬁd
(
sqlôe3
 *
db
, 
iIdx
, 
sqlôe3_vÆue
 **
µVÆue
){

1662 
PªUpd©e
 *
p
 = 
db
->
pPªUpd©e
;

1663 
rc
 = 
SQLITE_OK
;

1667 if–!
p
 ||Ö->
›
==
SQLITE_INSERT
 ){

1668 
rc
 = 
SQLITE_MISUSE_BKPT
;

1669 
¥eupd©e_ﬁd_out
;

1671 if–
iIdx
>=
p
->
pC§
->
nFõld
 || iIdx<0 ){

1672 
rc
 = 
SQLITE_RANGE
;

1673 
¥eupd©e_ﬁd_out
;

1677 if–
p
->
pU≈acked
==0 ){

1678 
u32
 
nRec
;

1679 
u8
 *
aRec
;

1681 
nRec
 = 
	`sqlôe3BåìPaylﬂdSize
(
p
->
pC§
->
uc
.
pCurs‹
);

1682 
aRec
 = 
	`sqlôe3DbMÆlocRaw
(
db
, 
nRec
);

1683 if–!
aRec
 ) 
¥eupd©e_ﬁd_out
;

1684 
rc
 = 
	`sqlôe3BåìPaylﬂd
(
p
->
pC§
->
uc
.
pCurs‹
, 0, 
nRec
, 
aRec
);

1685 if–
rc
==
SQLITE_OK
 ){

1686 
p
->
pU≈acked
 = 
	`vdbeU≈ackRec‹d
(&p->
keyöfo
, 
nRec
, 
aRec
);

1687 if–!
p
->
pU≈acked
 ) 
rc
 = 
SQLITE_NOMEM
;

1689 if–
rc
!=
SQLITE_OK
 ){

1690 
	`sqlôe3DbFªe
(
db
, 
aRec
);

1691 
¥eupd©e_ﬁd_out
;

1693 
p
->
aRec‹d
 = 
aRec
;

1696 if–
iIdx
>=
p
->
pU≈acked
->
nFõld
 ){

1697 *
µVÆue
 = (
sqlôe3_vÆue
 *)
	`cﬁumnNuŒVÆue
();

1699 
Mem
 *
pMem
 = *
µVÆue
 = &
p
->
pU≈acked
->
aMem
[
iIdx
];

1700 *
µVÆue
 = &
p
->
pU≈acked
->
aMem
[
iIdx
];

1701 if–
iIdx
==
p
->
pTab
->
iPKey
 ){

1702 
	`sqlôe3VdbeMemSëI¡64
(
pMem
, 
p
->
iKey1
);

1703 }if–
p
->
pTab
->
aCﬁ
[
iIdx
].
afföôy
==
SQLITE_AFF_REAL
 ){

1704 if–
pMem
->
Êags
 & 
MEM_I¡
 ){

1705 
	`sqlôe3VdbeMemRólify
(
pMem
);

1710 
¥eupd©e_ﬁd_out
:

1711 
	`sqlôe3Eº‹
(
db
, 
rc
);

1712  
	`sqlôe3ApiExô
(
db
, 
rc
);

1713 
	}
}

1716 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


1721 
	$sqlôe3_¥eupd©e_cou¡
(
sqlôe3
 *
db
){

1722 
PªUpd©e
 *
p
 = 
db
->
pPªUpd©e
;

1723  (
p
 ?Ö->
keyöfo
.
nFõld
 : 0);

1724 
	}
}

1727 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


1739 
	$sqlôe3_¥eupd©e_dïth
(
sqlôe3
 *
db
){

1740 
PªUpd©e
 *
p
 = 
db
->
pPªUpd©e
;

1741  (
p
 ?Ö->
v
->
nFøme
 : 0);

1742 
	}
}

1745 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


1750 
	$sqlôe3_¥eupd©e_√w
(
sqlôe3
 *
db
, 
iIdx
, 
sqlôe3_vÆue
 **
µVÆue
){

1751 
PªUpd©e
 *
p
 = 
db
->
pPªUpd©e
;

1752 
rc
 = 
SQLITE_OK
;

1753 
Mem
 *
pMem
;

1755 if–!
p
 ||Ö->
›
==
SQLITE_DELETE
 ){

1756 
rc
 = 
SQLITE_MISUSE_BKPT
;

1757 
¥eupd©e_√w_out
;

1759 if–
iIdx
>=
p
->
pC§
->
nFõld
 || iIdx<0 ){

1760 
rc
 = 
SQLITE_RANGE
;

1761 
¥eupd©e_√w_out
;

1764 if–
p
->
›
==
SQLITE_INSERT
 ){

1767 
U≈ackedRec‹d
 *
pU≈ack
 = 
p
->
pNewU≈acked
;

1768 if–!
pU≈ack
 ){

1769 
Mem
 *
pD©a
 = &
p
->
v
->
aMem
[p->
iNewReg
];

1770 
rc
 = 
	`Ex∑ndBlob
(
pD©a
);

1771 if–
rc
!=
SQLITE_OK
 ) 
¥eupd©e_√w_out
;

1772 
pU≈ack
 = 
	`vdbeU≈ackRec‹d
(&
p
->
keyöfo
, 
pD©a
->
n
,ÖD©a->
z
);

1773 if–!
pU≈ack
 ){

1774 
rc
 = 
SQLITE_NOMEM
;

1775 
¥eupd©e_√w_out
;

1777 
p
->
pNewU≈acked
 = 
pU≈ack
;

1779 if–
iIdx
>=
pU≈ack
->
nFõld
 ){

1780 
pMem
 = (
sqlôe3_vÆue
 *)
	`cﬁumnNuŒVÆue
();

1782 
pMem
 = &
pU≈ack
->
aMem
[
iIdx
];

1783 if–
iIdx
==
p
->
pTab
->
iPKey
 ){

1784 
	`sqlôe3VdbeMemSëI¡64
(
pMem
, 
p
->
iKey2
);

1793 
	`as£π
–
p
->
›
==
SQLITE_UPDATE
 );

1794 if–!
p
->
aNew
 ){

1795 
p
->
aNew
 = (
Mem
 *)
	`sqlôe3DbMÆlocZîo
(
db
, (MemË*Ö->
pC§
->
nFõld
);

1796 if–!
p
->
aNew
 ){

1797 
rc
 = 
SQLITE_NOMEM
;

1798 
¥eupd©e_√w_out
;

1801 
	`as£π
–
iIdx
>=0 && iIdx<
p
->
pC§
->
nFõld
 );

1802 
pMem
 = &
p
->
aNew
[
iIdx
];

1803 if–
pMem
->
Êags
==0 ){

1804 if–
iIdx
==
p
->
pTab
->
iPKey
 ){

1805 
	`sqlôe3VdbeMemSëI¡64
(
pMem
, 
p
->
iKey2
);

1807 
rc
 = 
	`sqlôe3VdbeMemC›y
(
pMem
, &
p
->
v
->
aMem
[p->
iNewReg
+1+
iIdx
]);

1808 if–
rc
!=
SQLITE_OK
 ) 
¥eupd©e_√w_out
;

1812 *
µVÆue
 = 
pMem
;

1814 
¥eupd©e_√w_out
:

1815 
	`sqlôe3Eº‹
(
db
, 
rc
);

1816  
	`sqlôe3ApiExô
(
db
, 
rc
);

1817 
	}
}

1820 #ifde‡
SQLITE_ENABLE_STMT_SCANSTATUS


1824 
	$sqlôe3_°mt_sˇn°©us
(

1825 
sqlôe3_°mt
 *
pStmt
,

1826 
idx
,

1827 
iSˇnSètusOp
,

1828 *
pOut


1830 
Vdbe
 *
p
 = (Vdbe*)
pStmt
;

1831 
SˇnSètus
 *
pSˇn
;

1832 if–
idx
<0 || idx>=
p
->
nSˇn
 )  1;

1833 
pSˇn
 = &
p
->
aSˇn
[
idx
];

1834  
iSˇnSètusOp
 ){

1835 
SQLITE_SCANSTAT_NLOOP
: {

1836 *(
sqlôe3_öt64
*)
pOut
 = 
p
->
™Exec
[
pSˇn
->
addrLo›
];

1839 
SQLITE_SCANSTAT_NVISIT
: {

1840 *(
sqlôe3_öt64
*)
pOut
 = 
p
->
™Exec
[
pSˇn
->
addrVisô
];

1843 
SQLITE_SCANSTAT_EST
: {

1844 
r
 = 1.0;

1845 
LogE°
 
x
 = 
pSˇn
->
nE°
;

1846  
x
<100 ){

1847 
x
 += 10;

1848 
r
 *= 0.5;

1850 *(*)
pOut
 = 
r
*
	`sqlôe3LogE°ToI¡
(
x
);

1853 
SQLITE_SCANSTAT_NAME
: {

1854 *(c⁄° **)
pOut
 = 
pSˇn
->
zName
;

1857 
SQLITE_SCANSTAT_EXPLAIN
: {

1858 if–
pSˇn
->
addrEx∂aö
 ){

1859 *(c⁄° **)
pOut
 = 
p
->
aOp
[ 
pSˇn
->
addrEx∂aö
 ].
p4
.
z
;

1861 *(c⁄° **)
pOut
 = 0;

1865 
SQLITE_SCANSTAT_SELECTID
: {

1866 if–
pSˇn
->
addrEx∂aö
 ){

1867 *(*)
pOut
 = 
p
->
aOp
[ 
pSˇn
->
addrEx∂aö
 ].
p1
;

1869 *(*)
pOut
 = -1;

1878 
	}
}

1883 
	$sqlôe3_°mt_sˇn°©us_ª£t
(
sqlôe3_°mt
 *
pStmt
){

1884 
Vdbe
 *
p
 = (Vdbe*)
pStmt
;

1885 
	`mem£t
(
p
->
™Exec
, 0,Ö->
nOp
 * (
i64
));

1886 
	}
}

	@vdbeaux.c

15 
	~"sqlôeI¡.h
"

16 
	~"vdbeI¡.h
"

17 
	~"li°.h
"

22 
Vdbe
 *
	$sqlôe3VdbeCª©e
(
P¨£
 *
pP¨£
){

23 
sqlôe3
 *
db
 = 
pP¨£
->db;

24 
Vdbe
 *
p
;

25 
p
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, (
Vdbe
) );

26 if–
p
==0 )  0;

27 
	`mem£t
(&
p
->
aOp
, 0, (
Vdbe
)-
	`off£tof
(Vdbe,aOp));

28 
p
->
db
 = db;

29 if–
db
->
pVdbe
 ){

30 
db
->
pVdbe
->
pPªv
 = 
p
;

32 
p
->
pNext
 = 
db
->
pVdbe
;

33 
p
->
pPªv
 = 0;

34 
db
->
pVdbe
 = 
p
;

35 
p
->
magic
 = 
VDBE_MAGIC_INIT
;

36 
p
->
pP¨£
 =ÖParse;

37 
	`as£π
–
pP¨£
->
aLabñ
==0 );

38 
	`as£π
–
pP¨£
->
nLabñ
==0 );

39 
	`as£π
–
pP¨£
->
nOpAŒoc
==0 );

40 
	`as£π
–
pP¨£
->
szOpAŒoc
==0 );

41  
p
;

42 
	}
}

47 
	$sqlôe3VdbeEº‹
(
Vdbe
 *
p
, c⁄° *
zF‹m©
, ...){

48 
va_li°
 
≠
;

49 
	`sqlôe3DbFªe
(
p
->
db
,Ö->
zEºMsg
);

50 
	`va_°¨t
(
≠
, 
zF‹m©
);

51 
p
->
zEºMsg
 = 
	`sqlôe3VMPrötf
’->
db
, 
zF‹m©
, 
≠
);

52 
	`va_íd
(
≠
);

53 
	}
}

58 
	$sqlôe3VdbeSëSql
(
Vdbe
 *
p
, c⁄° *
z
, 
n
, 
isPª∑ªV2
){

59 
	`as£π
–
isPª∑ªV2
==1 || isPrepareV2==0 );

60 if–
p
==0 ) ;

61 #i‡
	`deföed
(
SQLITE_OMIT_TRACE
Ë&& !deföed(
SQLITE_ENABLE_SQLLOG
)

62 if–!
isPª∑ªV2
 ) ;

64 
	`as£π
–
p
->
zSql
==0 );

65 
p
->
zSql
 = 
	`sqlôe3DbSåNDup
’->
db
, 
z
, 
n
);

66 
p
->
isPª∑ªV2
 = (
u8
)isPrepareV2;

67 
	}
}

72 
	$sqlôe3VdbeSw≠
(
Vdbe
 *
pA
, Vdbê*
pB
){

73 
Vdbe
 
tmp
, *
pTmp
;

74 *
zTmp
;

75 
	`as£π
–
pA
->
db
==
pB
->db );

76 
tmp
 = *
pA
;

77 *
pA
 = *
pB
;

78 *
pB
 = 
tmp
;

79 
pTmp
 = 
pA
->
pNext
;

80 
pA
->
pNext
 = 
pB
->pNext;

81 
pB
->
pNext
 = 
pTmp
;

82 
pTmp
 = 
pA
->
pPªv
;

83 
pA
->
pPªv
 = 
pB
->pPrev;

84 
pB
->
pPªv
 = 
pTmp
;

85 
zTmp
 = 
pA
->
zSql
;

86 
pA
->
zSql
 = 
pB
->zSql;

87 
pB
->
zSql
 = 
zTmp
;

88 
pB
->
isPª∑ªV2
 = 
pA
->isPrepareV2;

89 
	}
}

101 
	$growOpAºay
(
Vdbe
 *
v
, 
nOp
){

102 
VdbeOp
 *
pNew
;

103 
P¨£
 *
p
 = 
v
->
pP¨£
;

112 #ifde‡
SQLITE_TEST_REALLOC_STRESS


113 
nNew
 = (
p
->
nOpAŒoc
>=512 ?Ö->nOpAŒoc*2 :Ö->nOpAŒoc+
nOp
);

115 
nNew
 = (
p
->
nOpAŒoc
 ?Ö->nOpAŒoc*2 : ()(1024/(
Op
)));

116 
	`UNUSED_PARAMETER
(
nOp
);

119 
	`as£π
–
nOp
<=(1024/(
Op
)) );

120 
	`as£π
–
nNew
>=(
p
->
nOpAŒoc
+
nOp
) );

121 
pNew
 = 
	`sqlôe3DbRóŒoc
(
p
->
db
, 
v
->
aOp
, 
nNew
*(
Op
));

122 if–
pNew
 ){

123 
p
->
szOpAŒoc
 = 
	`sqlôe3DbMÆlocSize
’->
db
, 
pNew
);

124 
p
->
nOpAŒoc
 =Ö->
szOpAŒoc
/(
Op
);

125 
v
->
aOp
 = 
pNew
;

127  (
pNew
 ? 
SQLITE_OK
 : 
SQLITE_NOMEM_BKPT
);

128 
	}
}

130 #ifde‡
SQLITE_DEBUG


135 
	$ã°_add›_bªakpoöt
(){

136 
n
 = 0;

137 
n
++;

138 
	}
}

157 
SQLITE_NOINLINE
 
	$growOp3
(
Vdbe
 *
p
, 
›
, 
p1
, 
p2
, 
p3
){

158 
	`as£π
–
p
->
pP¨£
->
nOpAŒoc
<ı->
nOp
 );

159 if–
	`growOpAºay
(
p
, 1) )  1;

160 
	`as£π
–
p
->
pP¨£
->
nOpAŒoc
>p->
nOp
 );

161  
	`sqlôe3VdbeAddOp3
(
p
, 
›
, 
p1
, 
p2
, 
p3
);

162 
	}
}

163 
	$sqlôe3VdbeAddOp3
(
Vdbe
 *
p
, 
›
, 
p1
, 
p2
, 
p3
){

164 
i
;

165 
VdbeOp
 *
pOp
;

167 
i
 = 
p
->
nOp
;

168 
	`as£π
–
p
->
magic
==
VDBE_MAGIC_INIT
 );

169 
	`as£π
–
›
>=0 && op<0xff );

170 if–
p
->
pP¨£
->
nOpAŒoc
<=
i
 ){

171  
	`growOp3
(
p
, 
›
, 
p1
, 
p2
, 
p3
);

173 
p
->
nOp
++;

174 
pOp
 = &
p
->
aOp
[
i
];

175 
pOp
->
›code
 = (
u8
)
›
;

176 
pOp
->
p5
 = 0;

177 
pOp
->
p1
 =Ö1;

178 
pOp
->
p2
 =Ö2;

179 
pOp
->
p3
 =Ö3;

180 
pOp
->
p4
.
p
 = 0;

181 
pOp
->
p4ty≥
 = 
P4_NOTUSED
;

182 #ifde‡
SQLITE_ENABLE_EXPLAIN_COMMENTS


183 
pOp
->
zCommít
 = 0;

185 #ifde‡
SQLITE_DEBUG


186 if–
p
->
db
->
Êags
 & 
SQLITE_VdbeAdd›Tø˚
 ){

187 
jj
, 
kk
;

188 
P¨£
 *
pP¨£
 = 
p
->pParse;

189 
jj
=
kk
=0; jj<
pP¨£
->
nCﬁCache
; jj++){

190 
yCﬁCache
 *
x
 = 
pP¨£
->
aCﬁCache
 + 
jj
;

191 
	`¥ötf
("Ñ[%d]={%d:%d}", 
x
->
iReg
, x->
iTabÀ
, x->
iCﬁumn
);

192 
kk
++;

194 if–
kk
 ) 
	`¥ötf
("\n");

195 
	`sqlôe3VdbePrötOp
(0, 
i
, &
p
->
aOp
[i]);

196 
	`ã°_add›_bªakpoöt
();

199 #ifde‡
VDBE_PROFILE


200 
pOp
->
cy˛es
 = 0;

201 
pOp
->
˙t
 = 0;

203 #ifde‡
SQLITE_VDBE_COVERAGE


204 
pOp
->
iSrcLöe
 = 0;

206  
i
;

207 
	}
}

208 
	$sqlôe3VdbeAddOp0
(
Vdbe
 *
p
, 
›
){

209  
	`sqlôe3VdbeAddOp3
(
p
, 
›
, 0, 0, 0);

210 
	}
}

211 
	$sqlôe3VdbeAddOp1
(
Vdbe
 *
p
, 
›
, 
p1
){

212  
	`sqlôe3VdbeAddOp3
(
p
, 
›
, 
p1
, 0, 0);

213 
	}
}

214 
	$sqlôe3VdbeAddOp2
(
Vdbe
 *
p
, 
›
, 
p1
, 
p2
){

215  
	`sqlôe3VdbeAddOp3
(
p
, 
›
, 
p1
, 
p2
, 0);

216 
	}
}

220 
	$sqlôe3VdbeGŸo
(
Vdbe
 *
p
, 
iDe°
){

221  
	`sqlôe3VdbeAddOp3
(
p
, 
OP_GŸo
, 0, 
iDe°
, 0);

222 
	}
}

227 
	$sqlôe3VdbeLﬂdSåög
(
Vdbe
 *
p
, 
iDe°
, c⁄° *
zSå
){

228  
	`sqlôe3VdbeAddOp4
(
p
, 
OP_Såög8
, 0, 
iDe°
, 0, 
zSå
, 0);

229 
	}
}

239 
	$sqlôe3VdbeMu…iLﬂd
(
Vdbe
 *
p
, 
iDe°
, c⁄° *
zTy≥s
, ...){

240 
va_li°
 
≠
;

241 
i
;

242 
c
;

243 
	`va_°¨t
(
≠
, 
zTy≥s
);

244 
i
=0; (
c
 = 
zTy≥s
[i])!=0; i++){

245 if–
c
=='s' ){

246 c⁄° *
z
 = 
	`va_¨g
(
≠
, const *);

247 
	`sqlôe3VdbeAddOp4
(
p
, 
z
==0 ? 
OP_NuŒ
 : 
OP_Såög8
, 0, 
iDe°
++, 0, z, 0);

249 
	`as£π
–
c
=='i' );

250 
	`sqlôe3VdbeAddOp2
(
p
, 
OP_I¡egî
, 
	`va_¨g
(
≠
, ), 
iDe°
++);

253 
	`va_íd
(
≠
);

254 
	}
}

259 
	$sqlôe3VdbeAddOp4
(

260 
Vdbe
 *
p
,

261 
›
,

262 
p1
,

263 
p2
,

264 
p3
,

265 c⁄° *
zP4
,

266 
p4ty≥


268 
addr
 = 
	`sqlôe3VdbeAddOp3
(
p
, 
›
, 
p1
, 
p2
, 
p3
);

269 
	`sqlôe3VdbeCh™geP4
(
p
, 
addr
, 
zP4
, 
p4ty≥
);

270  
addr
;

271 
	}
}

277 
	$sqlôe3VdbeAddOp4Dup8
(

278 
Vdbe
 *
p
,

279 
›
,

280 
p1
,

281 
p2
,

282 
p3
,

283 c⁄° 
u8
 *
zP4
,

284 
p4ty≥


286 *
p4c›y
 = 
	`sqlôe3DbMÆlocRawNN
(
	`sqlôe3VdbeDb
(
p
), 8);

287 if–
p4c›y
 ) 
	`mem˝y
’4c›y, 
zP4
, 8);

288  
	`sqlôe3VdbeAddOp4
(
p
, 
›
, 
p1
, 
p2
, 
p3
, 
p4c›y
, 
p4ty≥
);

289 
	}
}

299 
	$sqlôe3VdbeAddP¨£SchemaOp
(
Vdbe
 *
p
, 
iDb
, *
zWhîe
){

300 
j
;

301 
	`sqlôe3VdbeAddOp4
(
p
, 
OP_P¨£Schema
, 
iDb
, 0, 0, 
zWhîe
, 
P4_DYNAMIC
);

302 
j
=0; j<
p
->
db
->
nDb
; j++Ë
	`sqlôe3VdbeU£sBåì
(p, j);

303 
	}
}

308 
	$sqlôe3VdbeAddOp4I¡
(

309 
Vdbe
 *
p
,

310 
›
,

311 
p1
,

312 
p2
,

313 
p3
,

314 
p4


316 
addr
 = 
	`sqlôe3VdbeAddOp3
(
p
, 
›
, 
p1
, 
p2
, 
p3
);

317 if–
p
->
db
->
mÆlocFaûed
==0 ){

318 
VdbeOp
 *
pOp
 = &
p
->
aOp
[
addr
];

319 
pOp
->
p4ty≥
 = 
P4_INT32
;

320 
pOp
->
p4
.
i
 =Ö4;

322  
addr
;

323 
	}
}

327 
	$sqlôe3VdbeEndC‹outöe
(
Vdbe
 *
v
, 
ªgYõld
){

328 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_EndC‹outöe
, 
ªgYõld
);

336 
v
->
pP¨£
->
nTempReg
 = 0;

337 
v
->
pP¨£
->
nR™geReg
 = 0;

338 
	}
}

354 
	$sqlôe3VdbeMakeLabñ
(
Vdbe
 *
v
){

355 
P¨£
 *
p
 = 
v
->
pP¨£
;

356 
i
 = 
p
->
nLabñ
++;

357 
	`as£π
–
v
->
magic
==
VDBE_MAGIC_INIT
 );

358 if–(
i
 & (i-1))==0 ){

359 
p
->
aLabñ
 = 
	`sqlôe3DbRóŒocOrFªe
’->
db
,Ö->aLabel,

360 (
i
*2+1)*(
p
->
aLabñ
[0]));

362 if–
p
->
aLabñ
 ){

363 
p
->
aLabñ
[
i
] = -1;

365  
	`ADDR
(
i
);

366 
	}
}

373 
	$sqlôe3VdbeResﬁveLabñ
(
Vdbe
 *
v
, 
x
){

374 
P¨£
 *
p
 = 
v
->
pP¨£
;

375 
j
 = 
	`ADDR
(
x
);

376 
	`as£π
–
v
->
magic
==
VDBE_MAGIC_INIT
 );

377 
	`as£π
–
j
<
p
->
nLabñ
 );

378 
	`as£π
–
j
>=0 );

379 if–
p
->
aLabñ
 ){

380 
p
->
aLabñ
[
j
] = 
v
->
nOp
;

382 
	}
}

387 
	$sqlôe3VdbeRunO∆yOn˚
(
Vdbe
 *
p
){

388 
p
->
runO∆yOn˚
 = 1;

389 
	}
}

394 
	$sqlôe3VdbeReußbÀ
(
Vdbe
 *
p
){

395 
p
->
runO∆yOn˚
 = 0;

396 
	}
}

398 #ifde‡
SQLITE_DEBUG


416 
VdbeOpIãr
 
	tVdbeOpIãr
;

417 
	sVdbeOpIãr
 {

418 
Vdbe
 *
	mv
;

419 
SubProgøm
 **
	m≠Sub
;

420 
	mnSub
;

421 
	miAddr
;

422 
	miSub
;

424 
Op
 *
	$›IãrNext
(
VdbeOpIãr
 *
p
){

425 
Vdbe
 *
v
 = 
p
->v;

426 
Op
 *
pRë
 = 0;

427 
Op
 *
aOp
;

428 
nOp
;

430 if–
p
->
iSub
<ı->
nSub
 ){

432 if–
p
->
iSub
==0 ){

433 
aOp
 = 
v
->aOp;

434 
nOp
 = 
v
->nOp;

436 
aOp
 = 
p
->
≠Sub
[p->
iSub
-1]->aOp;

437 
nOp
 = 
p
->
≠Sub
[p->
iSub
-1]->nOp;

439 
	`as£π
–
p
->
iAddr
<
nOp
 );

441 
pRë
 = &
aOp
[
p
->
iAddr
];

442 
p
->
iAddr
++;

443 if–
p
->
iAddr
==
nOp
 ){

444 
p
->
iSub
++;

445 
p
->
iAddr
 = 0;

448 if–
pRë
->
p4ty≥
==
P4_SUBPROGRAM
 ){

449 
nByã
 = (
p
->
nSub
+1)*(
SubProgøm
*);

450 
j
;

451 
j
=0; j<
p
->
nSub
; j++){

452 if–
p
->
≠Sub
[
j
]==
pRë
->
p4
.
pProgøm
 ) ;

454 if–
j
==
p
->
nSub
 ){

455 
p
->
≠Sub
 = 
	`sqlôe3DbRóŒocOrFªe
(
v
->
db
,Ö->≠Sub, 
nByã
);

456 if–!
p
->
≠Sub
 ){

457 
pRë
 = 0;

459 
p
->
≠Sub
[p->
nSub
++] = 
pRë
->
p4
.
pProgøm
;

465  
pRë
;

466 
	}
}

489 
	$sqlôe3VdbeAs£πMayAb‹t
(
Vdbe
 *
v
, 
mayAb‹t
){

490 
hasAb‹t
 = 0;

491 
hasFkCou¡î
 = 0;

492 
hasCª©eTabÀ
 = 0;

493 
hasInôC‹outöe
 = 0;

494 
Op
 *
pOp
;

495 
VdbeOpIãr
 
sIãr
;

496 
	`mem£t
(&
sIãr
, 0, (sIter));

497 
sIãr
.
v
 = v;

499  (
pOp
 = 
	`›IãrNext
(&
sIãr
))!=0 ){

500 
›code
 = 
pOp
->opcode;

501 if–
›code
==
OP_De°roy
 || opcode==
OP_VUpd©e
 || opcode==
OP_VRíame


502 || ((
›code
==
OP_HÆt
 || opcode==
OP_HÆtIfNuŒ
)

503 && ((
pOp
->
p1
&0xff)==
SQLITE_CONSTRAINT
 &&ÖOp->
p2
==
OE_Ab‹t
))

505 
hasAb‹t
 = 1;

508 if–
›code
==
OP_Cª©eTabÀ
 ) 
hasCª©eTabÀ
 = 1;

509 if–
›code
==
OP_InôC‹outöe
 ) 
hasInôC‹outöe
 = 1;

510 #i‚de‡
SQLITE_OMIT_FOREIGN_KEY


511 if–
›code
==
OP_FkCou¡î
 && 
pOp
->
p1
==0 &&ÖOp->
p2
==1 ){

512 
hasFkCou¡î
 = 1;

516 
	`sqlôe3DbFªe
(
v
->
db
, 
sIãr
.
≠Sub
);

523  ( 
v
->
db
->
mÆlocFaûed
 || 
hasAb‹t
==
mayAb‹t
 || 
hasFkCou¡î


524 || (
hasCª©eTabÀ
 && 
hasInôC‹outöe
) );

525 
	}
}

549 
	$ªsﬁveP2VÆues
(
Vdbe
 *
p
, *
pMaxFuncArgs
){

550 
nMaxArgs
 = *
pMaxFuncArgs
;

551 
Op
 *
pOp
;

552 
P¨£
 *
pP¨£
 = 
p
->pParse;

553 *
aLabñ
 = 
pP¨£
->aLabel;

554 
p
->
ªadO∆y
 = 1;

555 
p
->
bIsRódî
 = 0;

556 
pOp
 = &
p
->
aOp
[p->
nOp
-1];

565 if–
pOp
->
›code
<=
SQLITE_MX_JUMP_OPCODE
 ){

568  
pOp
->
›code
 ){

569 
OP_Tønß˘i⁄
: {

570 if–
pOp
->
p2
!=0 ) 
p
->
ªadO∆y
 = 0;

573 
OP_AutoCommô
:

574 
OP_Savïoöt
: {

575 
p
->
bIsRódî
 = 1;

578 #i‚de‡
SQLITE_OMIT_WAL


579 
OP_Checkpoöt
:

581 
OP_Vacuum
:

582 
OP_Jou∫ÆMode
: {

583 
p
->
ªadO∆y
 = 0;

584 
p
->
bIsRódî
 = 1;

587 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


588 
OP_VUpd©e
: {

589 if–
pOp
->
p2
>
nMaxArgs
 )ÇMaxArgs =ÖOp->p2;

592 
OP_VFûãr
: {

593 
n
;

594 
	`as£π
–(
pOp
 - 
p
->
aOp
) >= 3 );

595 
	`as£π
–
pOp
[-1].
›code
==
OP_I¡egî
 );

596 
n
 = 
pOp
[-1].
p1
;

597 if–
n
>
nMaxArgs
 )ÇMaxArgs =Ç;

601 
OP_Next
:

602 
OP_NextIfO≥n
:

603 
OP_S‹ãrNext
: {

604 
pOp
->
p4
.
xAdv™˚
 = 
sqlôe3BåìNext
;

605 
pOp
->
p4ty≥
 = 
P4_ADVANCE
;

608 
OP_Pªv
:

609 
OP_PªvIfO≥n
: {

610 
pOp
->
p4
.
xAdv™˚
 = 
sqlôe3BåìPªvious
;

611 
pOp
->
p4ty≥
 = 
P4_ADVANCE
;

615 if–(
sqlôe3OpcodePr›îty
[
pOp
->
›code
] & 
OPFLG_JUMP
)!=0 &&ÖOp->
p2
<0 ){

616 
	`as£π
–
	`ADDR
(
pOp
->
p2
)<
pP¨£
->
nLabñ
 );

617 
pOp
->
p2
 = 
aLabñ
[
	`ADDR
(pOp->p2)];

620 if–
pOp
==
p
->
aOp
 ) ;

621 
pOp
--;

623 
	`sqlôe3DbFªe
(
p
->
db
, 
pP¨£
->
aLabñ
);

624 
pP¨£
->
aLabñ
 = 0;

625 
pP¨£
->
nLabñ
 = 0;

626 *
pMaxFuncArgs
 = 
nMaxArgs
;

627 
	`as£π
–
p
->
bIsRódî
!=0 || 
	`DbMaskAŒZîo
’->
båìMask
) );

628 
	}
}

633 
	$sqlôe3VdbeCuºítAddr
(
Vdbe
 *
p
){

634 
	`as£π
–
p
->
magic
==
VDBE_MAGIC_INIT
 );

635  
p
->
nOp
;

636 
	}
}

646 #i‡
deföed
(
SQLITE_DEBUG
Ë&& !deföed(
SQLITE_TEST_REALLOC_STRESS
)

647 
	$sqlôe3VdbeVîifyNoMÆlocRequúed
(
Vdbe
 *
p
, 
N
){

648 
	`as£π
–
p
->
nOp
 + 
N
 <p->
pP¨£
->
nOpAŒoc
 );

649 
	}
}

663 
VdbeOp
 *
	$sqlôe3VdbeTakeOpAºay
(
Vdbe
 *
p
, *
≤Op
, *
≤MaxArg
){

664 
VdbeOp
 *
aOp
 = 
p
->aOp;

665 
	`as£π
–
aOp
 && !
p
->
db
->
mÆlocFaûed
 );

668 
	`as£π
–
	`DbMaskAŒZîo
(
p
->
båìMask
) );

670 
	`ªsﬁveP2VÆues
(
p
, 
≤MaxArg
);

671 *
≤Op
 = 
p
->
nOp
;

672 
p
->
aOp
 = 0;

673  
aOp
;

674 
	}
}

683 
VdbeOp
 *
	$sqlôe3VdbeAddOpLi°
(

684 
Vdbe
 *
p
,

685 
nOp
,

686 
VdbeOpLi°
 c⁄° *
aOp
,

687 
iLöío


689 
i
;

690 
VdbeOp
 *
pOut
, *
pFú°
;

691 
	`as£π
–
nOp
>0 );

692 
	`as£π
–
p
->
magic
==
VDBE_MAGIC_INIT
 );

693 if–
p
->
nOp
 +ÇO∞>Ö->
pP¨£
->
nOpAŒoc
 && 
	`growOpAºay
(p,ÇOp) ){

696 
pFú°
 = 
pOut
 = &
p
->
aOp
[p->
nOp
];

697 
i
=0; i<
nOp
; i++, 
aOp
++, 
pOut
++){

698 
pOut
->
›code
 = 
aOp
->opcode;

699 
pOut
->
p1
 = 
aOp
->p1;

700 
pOut
->
p2
 = 
aOp
->p2;

701 
	`as£π
–
aOp
->
p2
>=0 );

702 if–(
sqlôe3OpcodePr›îty
[
aOp
->
›code
] & 
OPFLG_JUMP
)!=0 &&áOp->
p2
>0 ){

703 
pOut
->
p2
 +
p
->
nOp
;

705 
pOut
->
p3
 = 
aOp
->p3;

706 
pOut
->
p4ty≥
 = 
P4_NOTUSED
;

707 
pOut
->
p4
.
p
 = 0;

708 
pOut
->
p5
 = 0;

709 #ifde‡
SQLITE_ENABLE_EXPLAIN_COMMENTS


710 
pOut
->
zCommít
 = 0;

712 #ifde‡
SQLITE_VDBE_COVERAGE


713 
pOut
->
iSrcLöe
 = 
iLöío
+
i
;

715 ()
iLöío
;

717 #ifde‡
SQLITE_DEBUG


718 if–
p
->
db
->
Êags
 & 
SQLITE_VdbeAdd›Tø˚
 ){

719 
	`sqlôe3VdbePrötOp
(0, 
i
+
p
->
nOp
, &p->
aOp
[i+p->nOp]);

723 
p
->
nOp
 +=ÇOp;

724  
pFú°
;

725 
	}
}

727 #i‡
deföed
(
SQLITE_ENABLE_STMT_SCANSTATUS
)

731 
	$sqlôe3VdbeSˇnSètus
(

732 
Vdbe
 *
p
,

733 
addrEx∂aö
,

734 
addrLo›
,

735 
addrVisô
,

736 
LogE°
 
nE°
,

737 c⁄° *
zName


739 
nByã
 = (
p
->
nSˇn
+1Ë* (
SˇnSètus
);

740 
SˇnSètus
 *
aNew
;

741 
aNew
 = (
SˇnSètus
*)
	`sqlôe3DbRóŒoc
(
p
->
db
,Ö->
aSˇn
, 
nByã
);

742 if–
aNew
 ){

743 
SˇnSètus
 *
pNew
 = &
aNew
[
p
->
nSˇn
++];

744 
pNew
->
addrEx∂aö
 =áddrExplain;

745 
pNew
->
addrLo›
 =áddrLoop;

746 
pNew
->
addrVisô
 =áddrVisit;

747 
pNew
->
nE°
 =ÇEst;

748 
pNew
->
zName
 = 
	`sqlôe3DbSåDup
(
p
->
db
, zName);

749 
p
->
aSˇn
 = 
aNew
;

751 
	}
}

759 
	$sqlôe3VdbeCh™geOpcode
(
Vdbe
 *
p
, 
u32
 
addr
, 
u8
 
iNewOpcode
){

760 
	`sqlôe3VdbeGëOp
(
p
,
addr
)->
›code
 = 
iNewOpcode
;

761 
	}
}

762 
	$sqlôe3VdbeCh™geP1
(
Vdbe
 *
p
, 
u32
 
addr
, 
vÆ
){

763 
	`sqlôe3VdbeGëOp
(
p
,
addr
)->
p1
 = 
vÆ
;

764 
	}
}

765 
	$sqlôe3VdbeCh™geP2
(
Vdbe
 *
p
, 
u32
 
addr
, 
vÆ
){

766 
	`sqlôe3VdbeGëOp
(
p
,
addr
)->
p2
 = 
vÆ
;

767 
	}
}

768 
	$sqlôe3VdbeCh™geP3
(
Vdbe
 *
p
, 
u32
 
addr
, 
vÆ
){

769 
	`sqlôe3VdbeGëOp
(
p
,
addr
)->
p3
 = 
vÆ
;

770 
	}
}

771 
	$sqlôe3VdbeCh™geP5
(
Vdbe
 *
p
, 
u8
 
p5
){

772 
	`as£π
–
p
->
nOp
>0 ||Ö->
db
->
mÆlocFaûed
 );

773 if–
p
->
nOp
>0 )Ö->
aOp
[p->nOp-1].
p5
 =Ö5;

774 
	}
}

780 
	$sqlôe3VdbeJumpHîe
(
Vdbe
 *
p
, 
addr
){

781 
	`sqlôe3VdbeCh™geP2
(
p
, 
addr
,Ö->
nOp
);

782 
	}
}

789 
	$‰ìEphemîÆFun˘i⁄
(
sqlôe3
 *
db
, 
FuncDef
 *
pDef
){

790 if–(
pDef
->
funcFœgs
 & 
SQLITE_FUNC_EPHEM
)!=0 ){

791 
	`sqlôe3DbFªe
(
db
, 
pDef
);

793 
	}
}

795 
vdbeFªeOpAºay
(
sqlôe3
 *, 
Op
 *, );

800 
SQLITE_NOINLINE
 
	$‰ìP4Mem
(
sqlôe3
 *
db
, 
Mem
 *
p
){

801 if–
p
->
szMÆloc
 ) 
	`sqlôe3DbFªe
(
db
,Ö->
zMÆloc
);

802 
	`sqlôe3DbFªe
(
db
, 
p
);

803 
	}
}

804 
SQLITE_NOINLINE
 
	$‰ìP4FuncCtx
(
sqlôe3
 *
db
, 
sqlôe3_c⁄ãxt
 *
p
){

805 
	`‰ìEphemîÆFun˘i⁄
(
db
, 
p
->
pFunc
);

806 
	`sqlôe3DbFªe
(
db
, 
p
);

807 
	}
}

808 
	$‰ìP4
(
sqlôe3
 *
db
, 
p4ty≥
, *
p4
){

809 
	`as£π
–
db
 );

810  
p4ty≥
 ){

811 
P4_FUNCCTX
: {

812 
	`‰ìP4FuncCtx
(
db
, (
sqlôe3_c⁄ãxt
*)
p4
);

815 
P4_REAL
:

816 
P4_INT64
:

817 
P4_DYNAMIC
:

818 
P4_INTARRAY
: {

819 
	`sqlôe3DbFªe
(
db
, 
p4
);

822 
P4_KEYINFO
: {

823 if–
db
->
≤ByãsFªed
==0 ) 
	`sqlôe3KeyInfoUƒef
((
KeyInfo
*)
p4
);

826 #ifde‡
SQLITE_ENABLE_CURSOR_HINTS


827 
P4_EXPR
: {

828 
	`sqlôe3Ex¥Dñëe
(
db
, (
Ex¥
*)
p4
);

832 
P4_FUNCDEF
: {

833 
	`‰ìEphemîÆFun˘i⁄
(
db
, (
FuncDef
*)
p4
);

836 
P4_MEM
: {

837 if–
db
->
≤ByãsFªed
==0 ){

838 
	`sqlôe3VÆueFªe
((
sqlôe3_vÆue
*)
p4
);

840 
	`‰ìP4Mem
(
db
, (
Mem
*)
p4
);

844 
P4_VTAB
 : {

845 if–
db
->
≤ByãsFªed
==0 ) 
	`sqlôe3VèbU∆ock
((
VTabÀ
 *)
p4
);

849 
	}
}

856 
	$vdbeFªeOpAºay
(
sqlôe3
 *
db
, 
Op
 *
aOp
, 
nOp
){

857 if–
aOp
 ){

858 
Op
 *
pOp
;

859 
pOp
=
aOp
;ÖOp<&aOp[
nOp
];ÖOp++){

860 if–
pOp
->
p4ty≥
 ) 
	`‰ìP4
(
db
,ÖOp->p4ty≥,ÖOp->
p4
.
p
);

861 #ifde‡
SQLITE_ENABLE_EXPLAIN_COMMENTS


862 
	`sqlôe3DbFªe
(
db
, 
pOp
->
zCommít
);

866 
	`sqlôe3DbFªe
(
db
, 
aOp
);

867 
	}
}

874 
	$sqlôe3VdbeLökSubProgøm
(
Vdbe
 *
pVdbe
, 
SubProgøm
 *
p
){

875 
p
->
pNext
 = 
pVdbe
->
pProgøm
;

876 
pVdbe
->
pProgøm
 = 
p
;

877 
	}
}

882 
	$sqlôe3VdbeCh™geToNo›
(
Vdbe
 *
p
, 
addr
){

883 
VdbeOp
 *
pOp
;

884 if–
p
->
db
->
mÆlocFaûed
 )  0;

885 
	`as£π
–
addr
>=0 &&áddr<
p
->
nOp
 );

886 
pOp
 = &
p
->
aOp
[
addr
];

887 
	`‰ìP4
(
p
->
db
, 
pOp
->
p4ty≥
,ÖOp->
p4
.p);

888 
pOp
->
p4ty≥
 = 
P4_NOTUSED
;

889 
pOp
->
p4
.
z
 = 0;

890 
pOp
->
›code
 = 
OP_No›
;

892 
	}
}

898 
	$sqlôe3VdbeDñëePri‹Opcode
(
Vdbe
 *
p
, 
u8
 
›
){

899 if–
p
->
nOp
>0 &&Ö->
aOp
[p->nOp-1].
›code
==
›
 ){

900  
	`sqlôe3VdbeCh™geToNo›
(
p
,Ö->
nOp
-1);

904 
	}
}

923 
SQLITE_NOINLINE
 
	$vdbeCh™geP4FuŒ
(

924 
Vdbe
 *
p
,

925 
Op
 *
pOp
,

926 c⁄° *
zP4
,

927 
n


929 if–
pOp
->
p4ty≥
 ){

930 
	`‰ìP4
(
p
->
db
, 
pOp
->
p4ty≥
,ÖOp->
p4
.p);

931 
pOp
->
p4ty≥
 = 0;

932 
pOp
->
p4
.
p
 = 0;

934 if–
n
<0 ){

935 
	`sqlôe3VdbeCh™geP4
(
p
, ()(
pOp
 -Ö->
aOp
), 
zP4
, 
n
);

937 if–
n
==0 )Ç = 
	`sqlôe3SåÀn30
(
zP4
);

938 
pOp
->
p4
.
z
 = 
	`sqlôe3DbSåNDup
(
p
->
db
, 
zP4
, 
n
);

939 
pOp
->
p4ty≥
 = 
P4_DYNAMIC
;

941 
	}
}

942 
	$sqlôe3VdbeCh™geP4
(
Vdbe
 *
p
, 
addr
, c⁄° *
zP4
, 
n
){

943 
Op
 *
pOp
;

944 
sqlôe3
 *
db
;

945 
	`as£π
–
p
!=0 );

946 
db
 = 
p
->db;

947 
	`as£π
–
p
->
magic
==
VDBE_MAGIC_INIT
 );

948 
	`as£π
–
p
->
aOp
!=0 || 
db
->
mÆlocFaûed
 );

949 if–
db
->
mÆlocFaûed
 ){

950 if–
n
!=
P4_VTAB
 ) 
	`‰ìP4
(
db
,Ç, (*)*(**)&
zP4
);

953 
	`as£π
–
p
->
nOp
>0 );

954 
	`as£π
–
addr
<
p
->
nOp
 );

955 if–
addr
<0 ){

956 
addr
 = 
p
->
nOp
 - 1;

958 
pOp
 = &
p
->
aOp
[
addr
];

959 if–
n
>=0 || 
pOp
->
p4ty≥
 ){

960 
	`vdbeCh™geP4FuŒ
(
p
, 
pOp
, 
zP4
, 
n
);

963 if–
n
==
P4_INT32
 ){

966 
pOp
->
p4
.
i
 = 
	`SQLITE_PTR_TO_INT
(
zP4
);

967 
pOp
->
p4ty≥
 = 
P4_INT32
;

968 }if–
zP4
!=0 ){

969 
	`as£π
–
n
<0 );

970 
pOp
->
p4
.
p
 = (*)
zP4
;

971 
pOp
->
p4ty≥
 = (sig√d )
n
;

972 if–
n
==
P4_VTAB
 ) 
	`sqlôe3VèbLock
((
VTabÀ
*)
zP4
);

974 
	}
}

985 
	$sqlôe3VdbeAµídP4
(
Vdbe
 *
p
, *
pP4
, 
n
){

986 
VdbeOp
 *
pOp
;

987 
	`as£π
–
n
!=
P4_INT32
 &&Ç!=
P4_VTAB
 );

988 
	`as£π
–
n
<=0 );

989 if–
p
->
db
->
mÆlocFaûed
 ){

990 
	`‰ìP4
(
p
->
db
, 
n
, 
pP4
);

992 
	`as£π
–
pP4
!=0 );

993 
	`as£π
–
p
->
nOp
>0 );

994 
pOp
 = &
p
->
aOp
[p->
nOp
-1];

995 
	`as£π
–
pOp
->
p4ty≥
==
P4_NOTUSED
 );

996 
pOp
->
p4ty≥
 = 
n
;

997 
pOp
->
p4
.
p
 = 
pP4
;

999 
	}
}

1005 
	$sqlôe3VdbeSëP4KeyInfo
(
P¨£
 *
pP¨£
, 
Index
 *
pIdx
){

1006 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

1007 
KeyInfo
 *
pKeyInfo
;

1008 
	`as£π
–
v
!=0 );

1009 
	`as£π
–
pIdx
!=0 );

1010 
pKeyInfo
 = 
	`sqlôe3KeyInfoOfIndex
(
pP¨£
, 
pIdx
);

1011 if–
pKeyInfo
 ) 
	`sqlôe3VdbeAµídP4
(
v
,ÖKeyInfo, 
P4_KEYINFO
);

1012 
	}
}

1014 #ifde‡
SQLITE_ENABLE_EXPLAIN_COMMENTS


1021 
	$vdbeVCommít
(
Vdbe
 *
p
, c⁄° *
zF‹m©
, 
va_li°
 
≠
){

1022 
	`as£π
–
p
->
nOp
>0 ||Ö->
aOp
==0 );

1023 
	`as£π
–
p
->
aOp
==0 ||Ö->aOp[p->
nOp
-1].
zCommít
==0 ||Ö->
db
->
mÆlocFaûed
 );

1024 if–
p
->
nOp
 ){

1025 
	`as£π
–
p
->
aOp
 );

1026 
	`sqlôe3DbFªe
(
p
->
db
,Ö->
aOp
[p->
nOp
-1].
zCommít
);

1027 
p
->
aOp
[p->
nOp
-1].
zCommít
 = 
	`sqlôe3VMPrötf
’->
db
, 
zF‹m©
, 
≠
);

1029 
	}
}

1030 
	$sqlôe3VdbeCommít
(
Vdbe
 *
p
, c⁄° *
zF‹m©
, ...){

1031 
va_li°
 
≠
;

1032 if–
p
 ){

1033 
	`va_°¨t
(
≠
, 
zF‹m©
);

1034 
	`vdbeVCommít
(
p
, 
zF‹m©
, 
≠
);

1035 
	`va_íd
(
≠
);

1037 
	}
}

1038 
	$sqlôe3VdbeNo›Commít
(
Vdbe
 *
p
, c⁄° *
zF‹m©
, ...){

1039 
va_li°
 
≠
;

1040 if–
p
 ){

1041 
	`sqlôe3VdbeAddOp0
(
p
, 
OP_No›
);

1042 
	`va_°¨t
(
≠
, 
zF‹m©
);

1043 
	`vdbeVCommít
(
p
, 
zF‹m©
, 
≠
);

1044 
	`va_íd
(
≠
);

1046 
	}
}

1049 #ifde‡
SQLITE_VDBE_COVERAGE


1053 
	$sqlôe3VdbeSëLöeNumbî
(
Vdbe
 *
v
, 
iLöe
){

1054 
	`sqlôe3VdbeGëOp
(
v
,-1)->
iSrcLöe
 = 
iLöe
;

1055 
	}
}

1071 
VdbeOp
 *
	$sqlôe3VdbeGëOp
(
Vdbe
 *
p
, 
addr
){

1074 
VdbeOp
 
dummy
;

1075 
	`as£π
–
p
->
magic
==
VDBE_MAGIC_INIT
 );

1076 if–
addr
<0 ){

1077 
addr
 = 
p
->
nOp
 - 1;

1079 
	`as£π
–(
addr
>=0 &&áddr<
p
->
nOp
Ë||Ö->
db
->
mÆlocFaûed
 );

1080 if–
p
->
db
->
mÆlocFaûed
 ){

1081  (
VdbeOp
*)&
dummy
;

1083  &
p
->
aOp
[
addr
];

1085 
	}
}

1087 #i‡
deföed
(
SQLITE_ENABLE_EXPLAIN_COMMENTS
)

1092 
	$å™¶©eP
(
c
, c⁄° 
Op
 *
pOp
){

1093 if–
c
=='1' )  
pOp
->
p1
;

1094 if–
c
=='2' )  
pOp
->
p2
;

1095 if–
c
=='3' )  
pOp
->
p3
;

1096 if–
c
=='4' )  
pOp
->
p4
.
i
;

1097  
pOp
->
p5
;

1098 
	}
}

1113 
	$di•œyCommít
(

1114 c⁄° 
Op
 *
pOp
,

1115 c⁄° *
zP4
,

1116 *
zTemp
,

1117 
nTemp


1119 c⁄° *
zOpName
;

1120 c⁄° *
zSyn›sis
;

1121 
nOpName
;

1122 
ii
, 
jj
;

1123 
zA…
[50];

1124 
zOpName
 = 
	`sqlôe3OpcodeName
(
pOp
->
›code
);

1125 
nOpName
 = 
	`sqlôe3SåÀn30
(
zOpName
);

1126 if–
zOpName
[
nOpName
+1] ){

1127 
£íCom
 = 0;

1128 
c
;

1129 
zSyn›sis
 = 
zOpName
 +
nOpName
 + 1;

1130 if–
	`°∫cmp
(
zSyn›sis
,"IF ",3)==0 ){

1131 if–
pOp
->
p5
 & 
SQLITE_STOREP2
 ){

1132 
	`sqlôe3_¢¥ötf
((
zA…
), zA…, "r[P2] = (%s)", 
zSyn›sis
+3);

1134 
	`sqlôe3_¢¥ötf
((
zA…
), zA…, "i‡%†gŸÿP2", 
zSyn›sis
+3);

1136 
zSyn›sis
 = 
zA…
;

1138 
ii
=
jj
=0; jj<
nTemp
-1 && (
c
 = 
zSyn›sis
[ii])!=0; ii++){

1139 if–
c
=='P' ){

1140 
c
 = 
zSyn›sis
[++
ii
];

1141 if–
c
=='4' ){

1142 
	`sqlôe3_¢¥ötf
(
nTemp
-
jj
, 
zTemp
+jj, "%s", 
zP4
);

1143 }if–
c
=='X' ){

1144 
	`sqlôe3_¢¥ötf
(
nTemp
-
jj
, 
zTemp
+jj, "%s", 
pOp
->
zCommít
);

1145 
£íCom
 = 1;

1147 
v1
 = 
	`å™¶©eP
(
c
, 
pOp
);

1148 
v2
;

1149 
	`sqlôe3_¢¥ötf
(
nTemp
-
jj
, 
zTemp
+jj, "%d", 
v1
);

1150 if–
	`°∫cmp
(
zSyn›sis
+
ii
+1, "@P", 2)==0 ){

1151 
ii
 += 3;

1152 
jj
 +
	`sqlôe3SåÀn30
(
zTemp
+jj);

1153 
v2
 = 
	`å™¶©eP
(
zSyn›sis
[
ii
], 
pOp
);

1154 if–
	`°∫cmp
(
zSyn›sis
+
ii
+1,"+1",2)==0 ){

1155 
ii
 += 2;

1156 
v2
++;

1158 if–
v2
>1 ){

1159 
	`sqlôe3_¢¥ötf
(
nTemp
-
jj
, 
zTemp
+jj, "..%d", 
v1
+
v2
-1);

1161 }if–
	`°∫cmp
(
zSyn›sis
+
ii
+1, "..P3", 4)==0 && 
pOp
->
p3
==0 ){

1162 
ii
 += 4;

1165 
jj
 +
	`sqlôe3SåÀn30
(
zTemp
+jj);

1167 
zTemp
[
jj
++] = 
c
;

1170 if–!
£íCom
 && 
jj
<
nTemp
-5 && 
pOp
->
zCommít
 ){

1171 
	`sqlôe3_¢¥ötf
(
nTemp
-
jj
, 
zTemp
+jj, "; %s", 
pOp
->
zCommít
);

1172 
jj
 +
	`sqlôe3SåÀn30
(
zTemp
+jj);

1174 if–
jj
<
nTemp
 ) 
zTemp
[jj] = 0;

1175 }if–
pOp
->
zCommít
 ){

1176 
	`sqlôe3_¢¥ötf
(
nTemp
, 
zTemp
, "%s", 
pOp
->
zCommít
);

1177 
jj
 = 
	`sqlôe3SåÀn30
(
zTemp
);

1179 
zTemp
[0] = 0;

1180 
jj
 = 0;

1182  
jj
;

1183 
	}
}

1186 #i‡
VDBE_DISPLAY_P4
 && 
deföed
(
SQLITE_ENABLE_CURSOR_HINTS
)

1191 
	$di•œyP4Ex¥
(
SåAccum
 *
p
, 
Ex¥
 *
pEx¥
){

1192 c⁄° *
zOp
 = 0;

1193  
pEx¥
->
›
 ){

1194 
TK_STRING
:

1195 
	`sqlôe3XPrötf
(
p
, "%Q", 
pEx¥
->
u
.
zTokí
);

1197 
TK_INTEGER
:

1198 
	`sqlôe3XPrötf
(
p
, "%d", 
pEx¥
->
u
.
iVÆue
);

1200 
TK_NULL
:

1201 
	`sqlôe3XPrötf
(
p
, "NULL");

1203 
TK_REGISTER
: {

1204 
	`sqlôe3XPrötf
(
p
, "r[%d]", 
pEx¥
->
iTabÀ
);

1207 
TK_COLUMN
: {

1208 if–
pEx¥
->
iCﬁumn
<0 ){

1209 
	`sqlôe3XPrötf
(
p
, "rowid");

1211 
	`sqlôe3XPrötf
(
p
, "c%d", ()
pEx¥
->
iCﬁumn
);

1215 
TK_LT
: 
zOp
 = "LT"; ;

1216 
TK_LE
: 
zOp
 = "LE"; ;

1217 
TK_GT
: 
zOp
 = "GT"; ;

1218 
TK_GE
: 
zOp
 = "GE"; ;

1219 
TK_NE
: 
zOp
 = "NE"; ;

1220 
TK_EQ
: 
zOp
 = "EQ"; ;

1221 
TK_IS
: 
zOp
 = "IS"; ;

1222 
TK_ISNOT
: 
zOp
 = "ISNOT"; ;

1223 
TK_AND
: 
zOp
 = "AND"; ;

1224 
TK_OR
: 
zOp
 = "OR"; ;

1225 
TK_PLUS
: 
zOp
 = "ADD"; ;

1226 
TK_STAR
: 
zOp
 = "MUL"; ;

1227 
TK_MINUS
: 
zOp
 = "SUB"; ;

1228 
TK_REM
: 
zOp
 = "REM"; ;

1229 
TK_BITAND
: 
zOp
 = "BITAND"; ;

1230 
TK_BITOR
: 
zOp
 = "BITOR"; ;

1231 
TK_SLASH
: 
zOp
 = "DIV"; ;

1232 
TK_LSHIFT
: 
zOp
 = "LSHIFT"; ;

1233 
TK_RSHIFT
: 
zOp
 = "RSHIFT"; ;

1234 
TK_CONCAT
: 
zOp
 = "CONCAT"; ;

1235 
TK_UMINUS
: 
zOp
 = "MINUS"; ;

1236 
TK_UPLUS
: 
zOp
 = "PLUS"; ;

1237 
TK_BITNOT
: 
zOp
 = "BITNOT"; ;

1238 
TK_NOT
: 
zOp
 = "NOT"; ;

1239 
TK_ISNULL
: 
zOp
 = "ISNULL"; ;

1240 
TK_NOTNULL
: 
zOp
 = "NOTNULL"; ;

1243 
	`sqlôe3XPrötf
(
p
, "%s", "expr");

1247 if–
zOp
 ){

1248 
	`sqlôe3XPrötf
(
p
, "%s(", 
zOp
);

1249 
	`di•œyP4Ex¥
(
p
, 
pEx¥
->
pLe·
);

1250 if–
pEx¥
->
pRight
 ){

1251 
	`sqlôe3SåAccumAµíd
(
p
, ",", 1);

1252 
	`di•œyP4Ex¥
(
p
, 
pEx¥
->
pRight
);

1254 
	`sqlôe3SåAccumAµíd
(
p
, ")", 1);

1256 
	}
}

1260 #i‡
VDBE_DISPLAY_P4


1265 *
	$di•œyP4
(
Op
 *
pOp
, *
zTemp
, 
nTemp
){

1266 *
zP4
 = 
zTemp
;

1267 
SåAccum
 
x
;

1268 
	`as£π
–
nTemp
>=20 );

1269 
	`sqlôe3SåAccumInô
(&
x
, 0, 
zTemp
, 
nTemp
, 0);

1270  
pOp
->
p4ty≥
 ){

1271 
P4_KEYINFO
: {

1272 
j
;

1273 
KeyInfo
 *
pKeyInfo
 = 
pOp
->
p4
.pKeyInfo;

1274 
	`as£π
–
pKeyInfo
->
aS‹tOrdî
!=0 );

1275 
	`sqlôe3XPrötf
(&
x
, "k(%d", 
pKeyInfo
->
nFõld
);

1276 
j
=0; j<
pKeyInfo
->
nFõld
; j++){

1277 
CﬁlSeq
 *
pCﬁl
 = 
pKeyInfo
->
aCﬁl
[
j
];

1278 c⁄° *
zCﬁl
 = 
pCﬁl
 ?ÖCﬁl->
zName
 : "";

1279 if–
	`°rcmp
(
zCﬁl
, "BINARY")==0 ) zColl = "B";

1280 
	`sqlôe3XPrötf
(&
x
, ",%s%s", 
pKeyInfo
->
aS‹tOrdî
[
j
] ? "-" : "", 
zCﬁl
);

1282 
	`sqlôe3SåAccumAµíd
(&
x
, ")", 1);

1285 #ifde‡
SQLITE_ENABLE_CURSOR_HINTS


1286 
P4_EXPR
: {

1287 
	`di•œyP4Ex¥
(&
x
, 
pOp
->
p4
.
pEx¥
);

1291 
P4_COLLSEQ
: {

1292 
CﬁlSeq
 *
pCﬁl
 = 
pOp
->
p4
.pColl;

1293 
	`sqlôe3XPrötf
(&
x
, "(%.20s)", 
pCﬁl
->
zName
);

1296 
P4_FUNCDEF
: {

1297 
FuncDef
 *
pDef
 = 
pOp
->
p4
.
pFunc
;

1298 
	`sqlôe3XPrötf
(&
x
, "%s(%d)", 
pDef
->
zName
,ÖDef->
nArg
);

1301 #i‡
	`deföed
(
SQLITE_DEBUG
Ë|| deföed(
VDBE_PROFILE
)

1302 
P4_FUNCCTX
: {

1303 
FuncDef
 *
pDef
 = 
pOp
->
p4
.
pCtx
->
pFunc
;

1304 
	`sqlôe3XPrötf
(&
x
, "%s(%d)", 
pDef
->
zName
,ÖDef->
nArg
);

1308 
P4_INT64
: {

1309 
	`sqlôe3XPrötf
(&
x
, "%Œd", *
pOp
->
p4
.
pI64
);

1312 
P4_INT32
: {

1313 
	`sqlôe3XPrötf
(&
x
, "%d", 
pOp
->
p4
.
i
);

1316 
P4_REAL
: {

1317 
	`sqlôe3XPrötf
(&
x
, "%.16g", *
pOp
->
p4
.
pRól
);

1320 
P4_MEM
: {

1321 
Mem
 *
pMem
 = 
pOp
->
p4
.pMem;

1322 if–
pMem
->
Êags
 & 
MEM_Så
 ){

1323 
zP4
 = 
pMem
->
z
;

1324 }if–
pMem
->
Êags
 & 
MEM_I¡
 ){

1325 
	`sqlôe3XPrötf
(&
x
, "%Œd", 
pMem
->
u
.
i
);

1326 }if–
pMem
->
Êags
 & 
MEM_Ról
 ){

1327 
	`sqlôe3XPrötf
(&
x
, "%.16g", 
pMem
->
u
.
r
);

1328 }if–
pMem
->
Êags
 & 
MEM_NuŒ
 ){

1329 
zP4
 = "NULL";

1331 
	`as£π
–
pMem
->
Êags
 & 
MEM_Blob
 );

1332 
zP4
 = "(blob)";

1336 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


1337 
P4_VTAB
: {

1338 
sqlôe3_vèb
 *
pVèb
 = 
pOp
->
p4
.pVtab->pVtab;

1339 
	`sqlôe3XPrötf
(&
x
, "vèb:%p", 
pVèb
);

1343 
P4_INTARRAY
: {

1344 
i
;

1345 *
ai
 = 
pOp
->
p4
.ai;

1346 
n
 = 
ai
[0];

1348 
i
=1; i<
n
; i++){

1349 
	`sqlôe3XPrötf
(&
x
, ",%d", 
ai
[
i
]);

1351 
zTemp
[0] = '[';

1352 
	`sqlôe3SåAccumAµíd
(&
x
, "]", 1);

1355 
P4_SUBPROGRAM
: {

1356 
	`sqlôe3XPrötf
(&
x
, "program");

1359 
P4_ADVANCE
: {

1360 
zTemp
[0] = 0;

1363 
P4_TABLE
: {

1364 
	`sqlôe3XPrötf
(&
x
, "%s", 
pOp
->
p4
.
pTab
->
zName
);

1368 
zP4
 = 
pOp
->
p4
.
z
;

1369 if–
zP4
==0 ){

1370 
zP4
 = 
zTemp
;

1371 
zTemp
[0] = 0;

1375 
	`sqlôe3SåAccumFöish
(&
x
);

1376 
	`as£π
–
zP4
!=0 );

1377  
zP4
;

1378 
	}
}

1389 
	$sqlôe3VdbeU£sBåì
(
Vdbe
 *
p
, 
i
){

1390 
	`as£π
–
i
>=0 && i<
p
->
db
->
nDb
 && i<()(
yDbMask
)*8 );

1391 
	`as£π
–
i
<()(
p
->
båìMask
)*8 );

1392 
	`DbMaskSë
(
p
->
båìMask
, 
i
);

1393 if–
i
!=1 && 
	`sqlôe3BåìSh¨abÀ
(
p
->
db
->
aDb
[i].
pBt
) ){

1394 
	`DbMaskSë
(
p
->
lockMask
, 
i
);

1396 
	}
}

1398 #i‡!
deföed
(
SQLITE_OMIT_SHARED_CACHE
)

1420 
	$sqlôe3VdbeE¡î
(
Vdbe
 *
p
){

1421 
i
;

1422 
sqlôe3
 *
db
;

1423 
Db
 *
aDb
;

1424 
nDb
;

1425 if–
	`DbMaskAŒZîo
(
p
->
lockMask
) ) ;

1426 
db
 = 
p
->db;

1427 
aDb
 = 
db
->aDb;

1428 
nDb
 = 
db
->nDb;

1429 
i
=0; i<
nDb
; i++){

1430 if–
i
!=1 && 
	`DbMaskTe°
(
p
->
lockMask
,iË&& 
	`ALWAYS
(
aDb
[i].
pBt
!=0) ){

1431 
	`sqlôe3BåìE¡î
(
aDb
[
i
].
pBt
);

1434 
	}
}

1437 #i‡!
deföed
(
SQLITE_OMIT_SHARED_CACHE
Ë&& 
SQLITE_THREADSAFE
>0

1441 
SQLITE_NOINLINE
 
	$vdbeLóve
(
Vdbe
 *
p
){

1442 
i
;

1443 
sqlôe3
 *
db
;

1444 
Db
 *
aDb
;

1445 
nDb
;

1446 
db
 = 
p
->db;

1447 
aDb
 = 
db
->aDb;

1448 
nDb
 = 
db
->nDb;

1449 
i
=0; i<
nDb
; i++){

1450 if–
i
!=1 && 
	`DbMaskTe°
(
p
->
lockMask
,iË&& 
	`ALWAYS
(
aDb
[i].
pBt
!=0) ){

1451 
	`sqlôe3BåìLóve
(
aDb
[
i
].
pBt
);

1454 
	}
}

1455 
	$sqlôe3VdbeLóve
(
Vdbe
 *
p
){

1456 if–
	`DbMaskAŒZîo
(
p
->
lockMask
) ) ;

1457 
	`vdbeLóve
(
p
);

1458 
	}
}

1461 #i‡
deföed
(
VDBE_PROFILE
Ë|| deföed(
SQLITE_DEBUG
)

1465 
	$sqlôe3VdbePrötOp
(
FILE
 *
pOut
, 
pc
, 
Op
 *
pOp
){

1466 *
zP4
;

1467 
zPå
[50];

1468 
zCom
[100];

1469 c⁄° *
zF‹m©1
 = "%4d %-13s %4d %4d %4d %-13s %.2X %s\n";

1470 if–
pOut
==0 )ÖOuà
°dout
;

1471 
zP4
 = 
	`di•œyP4
(
pOp
, 
zPå
, (zPtr));

1472 #ifde‡
SQLITE_ENABLE_EXPLAIN_COMMENTS


1473 
	`di•œyCommít
(
pOp
, 
zP4
, 
zCom
, (zCom));

1475 
zCom
[0] = 0;

1480 
	`Ârötf
(
pOut
, 
zF‹m©1
, 
pc
,

1481 
	`sqlôe3OpcodeName
(
pOp
->
›code
),ÖOp->
p1
,ÖOp->
p2
,ÖOp->
p3
, 
zP4
,ÖOp->
p5
,

1482 
zCom


1484 
	`fÊush
(
pOut
);

1485 
	}
}

1491 
	$öôMemAºay
(
Mem
 *
p
, 
N
, 
sqlôe3
 *
db
, 
u16
 
Êags
){

1492  (
N
--)>0 ){

1493 
p
->
db
 = db;

1494 
p
->
Êags
 = flags;

1495 
p
->
szMÆloc
 = 0;

1496 #ifde‡
SQLITE_DEBUG


1497 
p
->
pSc›yFrom
 = 0;

1499 
p
++;

1501 
	}
}

1506 
	$ªÀa£MemAºay
(
Mem
 *
p
, 
N
){

1507 if–
p
 && 
N
 ){

1508 
Mem
 *
pEnd
 = &
p
[
N
];

1509 
sqlôe3
 *
db
 = 
p
->db;

1510 if–
db
->
≤ByãsFªed
 ){

1512 if–
p
->
szMÆloc
 ) 
	`sqlôe3DbFªe
(
db
,Ö->
zMÆloc
);

1513 } (++
p
)<
pEnd
 );

1517 
	`as£π
–(&
p
[1])==
pEnd
 ||Ö[0].
db
==p[1].db );

1518 
	`as£π
–
	`sqlôe3VdbeCheckMemInv¨ü¡s
(
p
) );

1532 
	`ã°ˇ£
–
p
->
Êags
 & 
MEM_Agg
 );

1533 
	`ã°ˇ£
–
p
->
Êags
 & 
MEM_Dyn
 );

1534 
	`ã°ˇ£
–
p
->
Êags
 & 
MEM_Føme
 );

1535 
	`ã°ˇ£
–
p
->
Êags
 & 
MEM_RowSë
 );

1536 if–
p
->
Êags
&(
MEM_Agg
|
MEM_Dyn
|
MEM_Føme
|
MEM_RowSë
) ){

1537 
	`sqlôe3VdbeMemRñó£
(
p
);

1538 }if–
p
->
szMÆloc
 ){

1539 
	`sqlôe3DbFªe
(
db
, 
p
->
zMÆloc
);

1540 
p
->
szMÆloc
 = 0;

1543 
p
->
Êags
 = 
MEM_Undeföed
;

1544 } (++
p
)<
pEnd
 );

1546 
	}
}

1552 
	$sqlôe3VdbeFømeDñëe
(
VdbeFøme
 *
p
){

1553 
i
;

1554 
Mem
 *
aMem
 = 
	`VdbeFømeMem
(
p
);

1555 
VdbeCurs‹
 **
≠C§
 = (VdbeCurs‹ **)&
aMem
[
p
->
nChûdMem
];

1556 
i
=0; i<
p
->
nChûdC§
; i++){

1557 
	`sqlôe3VdbeFªeCurs‹
(
p
->
v
, 
≠C§
[
i
]);

1559 
	`ªÀa£MemAºay
(
aMem
, 
p
->
nChûdMem
);

1560 
	`sqlôe3VdbeDñëeAuxD©a
(
p
->
v
->
db
, &p->
pAuxD©a
, -1, 0);

1561 
	`sqlôe3DbFªe
(
p
->
v
->
db
,Ö);

1562 
	}
}

1564 #i‚de‡
SQLITE_OMIT_EXPLAIN


1580 
	$sqlôe3VdbeLi°
(

1581 
Vdbe
 *
p


1583 
nRow
;

1584 
nSub
 = 0;

1585 
SubProgøm
 **
≠Sub
 = 0;

1586 
Mem
 *
pSub
 = 0;

1587 
sqlôe3
 *
db
 = 
p
->db;

1588 
i
;

1589 
rc
 = 
SQLITE_OK
;

1590 
Mem
 *
pMem
 = &
p
->
aMem
[1];

1592 
	`as£π
–
p
->
ex∂aö
 );

1593 
	`as£π
–
p
->
magic
==
VDBE_MAGIC_RUN
 );

1594 
	`as£π
–
p
->
rc
==
SQLITE_OK
 ||Ö->rc==
SQLITE_BUSY
 ||Ö->rc==
SQLITE_NOMEM
 );

1600 
	`ªÀa£MemAºay
(
pMem
, 8);

1601 
p
->
pResu…Së
 = 0;

1603 if–
p
->
rc
==
SQLITE_NOMEM_BKPT
 ){

1606 
	`sqlôe3OomFau…
(
db
);

1607  
SQLITE_ERROR
;

1617 
nRow
 = 
p
->
nOp
;

1618 if–
p
->
ex∂aö
==1 ){

1623 
	`as£π
–
p
->
nMem
>9 );

1624 
pSub
 = &
p
->
aMem
[9];

1625 if–
pSub
->
Êags
&
MEM_Blob
 ){

1628 
nSub
 = 
pSub
->
n
/(
Vdbe
*);

1629 
≠Sub
 = (
SubProgøm
 **)
pSub
->
z
;

1631 
i
=0; i<
nSub
; i++){

1632 
nRow
 +
≠Sub
[
i
]->
nOp
;

1637 
i
 = 
p
->
pc
++;

1638 } 
i
<
nRow
 && 
p
->
ex∂aö
==2 &&Ö->
aOp
[i].
›code
!=
OP_Ex∂aö
 );

1639 if–
i
>=
nRow
 ){

1640 
p
->
rc
 = 
SQLITE_OK
;

1641 
rc
 = 
SQLITE_DONE
;

1642 }if–
db
->
u1
.
isI¡îru±ed
 ){

1643 
p
->
rc
 = 
SQLITE_INTERRUPT
;

1644 
rc
 = 
SQLITE_ERROR
;

1645 
	`sqlôe3VdbeEº‹
(
p
, 
	`sqlôe3EºSå
’->
rc
));

1647 *
zP4
;

1648 
Op
 *
pOp
;

1649 if–
i
<
p
->
nOp
 ){

1652 
pOp
 = &
p
->
aOp
[
i
];

1656 
j
;

1657 
i
 -
p
->
nOp
;

1658 
j
=0; 
i
>=
≠Sub
[j]->
nOp
; j++){

1659 
i
 -
≠Sub
[
j
]->
nOp
;

1661 
pOp
 = &
≠Sub
[
j
]->
aOp
[
i
];

1663 if–
p
->
ex∂aö
==1 ){

1664 
pMem
->
Êags
 = 
MEM_I¡
;

1665 
pMem
->
u
.
i
 = i;

1666 
pMem
++;

1668 
pMem
->
Êags
 = 
MEM_Sètic
|
MEM_Så
|
MEM_Tîm
;

1669 
pMem
->
z
 = (*)
	`sqlôe3OpcodeName
(
pOp
->
›code
);

1670 
	`as£π
–
pMem
->
z
!=0 );

1671 
pMem
->
n
 = 
	`sqlôe3SåÀn30
’Mem->
z
);

1672 
pMem
->
íc
 = 
SQLITE_UTF8
;

1673 
pMem
++;

1680 if–
pOp
->
p4ty≥
==
P4_SUBPROGRAM
 ){

1681 
nByã
 = (
nSub
+1)*(
SubProgøm
*);

1682 
j
;

1683 
j
=0; j<
nSub
; j++){

1684 if–
≠Sub
[
j
]==
pOp
->
p4
.
pProgøm
 ) ;

1686 if–
j
==
nSub
 && 
SQLITE_OK
==
	`sqlôe3VdbeMemGrow
(
pSub
, 
nByã
,ÇSub!=0) ){

1687 
≠Sub
 = (
SubProgøm
 **)
pSub
->
z
;

1688 
≠Sub
[
nSub
++] = 
pOp
->
p4
.
pProgøm
;

1689 
pSub
->
Êags
 |
MEM_Blob
;

1690 
pSub
->
n
 = 
nSub
*(
SubProgøm
*);

1695 
pMem
->
Êags
 = 
MEM_I¡
;

1696 
pMem
->
u
.
i
 = 
pOp
->
p1
;

1697 
pMem
++;

1699 
pMem
->
Êags
 = 
MEM_I¡
;

1700 
pMem
->
u
.
i
 = 
pOp
->
p2
;

1701 
pMem
++;

1703 
pMem
->
Êags
 = 
MEM_I¡
;

1704 
pMem
->
u
.
i
 = 
pOp
->
p3
;

1705 
pMem
++;

1707 if–
	`sqlôe3VdbeMemCÀ¨AndResize
(
pMem
, 100) ){

1708 
	`as£π
–
p
->
db
->
mÆlocFaûed
 );

1709  
SQLITE_ERROR
;

1711 
pMem
->
Êags
 = 
MEM_Så
|
MEM_Tîm
;

1712 
zP4
 = 
	`di•œyP4
(
pOp
, 
pMem
->
z
,ÖMem->
szMÆloc
);

1713 if–
zP4
!=
pMem
->
z
 ){

1714 
pMem
->
n
 = 0;

1715 
	`sqlôe3VdbeMemSëSå
(
pMem
, 
zP4
, -1, 
SQLITE_UTF8
, 0);

1717 
	`as£π
–
pMem
->
z
!=0 );

1718 
pMem
->
n
 = 
	`sqlôe3SåÀn30
’Mem->
z
);

1719 
pMem
->
íc
 = 
SQLITE_UTF8
;

1721 
pMem
++;

1723 if–
p
->
ex∂aö
==1 ){

1724 if–
	`sqlôe3VdbeMemCÀ¨AndResize
(
pMem
, 4) ){

1725 
	`as£π
–
p
->
db
->
mÆlocFaûed
 );

1726  
SQLITE_ERROR
;

1728 
pMem
->
Êags
 = 
MEM_Så
|
MEM_Tîm
;

1729 
pMem
->
n
 = 2;

1730 
	`sqlôe3_¢¥ötf
(3, 
pMem
->
z
, "%.2x", 
pOp
->
p5
);

1731 
pMem
->
íc
 = 
SQLITE_UTF8
;

1732 
pMem
++;

1734 #ifde‡
SQLITE_ENABLE_EXPLAIN_COMMENTS


1735 if–
	`sqlôe3VdbeMemCÀ¨AndResize
(
pMem
, 500) ){

1736 
	`as£π
–
p
->
db
->
mÆlocFaûed
 );

1737  
SQLITE_ERROR
;

1739 
pMem
->
Êags
 = 
MEM_Så
|
MEM_Tîm
;

1740 
pMem
->
n
 = 
	`di•œyCommít
(
pOp
, 
zP4
,ÖMem->
z
, 500);

1741 
pMem
->
íc
 = 
SQLITE_UTF8
;

1743 
pMem
->
Êags
 = 
MEM_NuŒ
;

1747 
p
->
nResCﬁumn
 = 8 - 4*’->
ex∂aö
-1);

1748 
p
->
pResu…Së
 = &p->
aMem
[1];

1749 
p
->
rc
 = 
SQLITE_OK
;

1750 
rc
 = 
SQLITE_ROW
;

1752  
rc
;

1753 
	}
}

1756 #ifde‡
SQLITE_DEBUG


1760 
	$sqlôe3VdbePrötSql
(
Vdbe
 *
p
){

1761 c⁄° *
z
 = 0;

1762 if–
p
->
zSql
 ){

1763 
z
 = 
p
->
zSql
;

1764 }if–
p
->
nOp
>=1 ){

1765 c⁄° 
VdbeOp
 *
pOp
 = &
p
->
aOp
[0];

1766 if–
pOp
->
›code
==
OP_Inô
 &&ÖOp->
p4
.
z
!=0 ){

1767 
z
 = 
pOp
->
p4
.z;

1768  
	`sqlôe3Is•a˚
(*
z
) ) z++;

1771 if–
z
 ) 
	`¥ötf
("SQL: [%s]\n", z);

1772 
	}
}

1775 #i‡!
deföed
(
SQLITE_OMIT_TRACE
Ë&& deföed(
SQLITE_ENABLE_IOTRACE
)

1779 
	$sqlôe3VdbeIOTø˚Sql
(
Vdbe
 *
p
){

1780 
nOp
 = 
p
->nOp;

1781 
VdbeOp
 *
pOp
;

1782 if–
sqlôe3IoTø˚
==0 ) ;

1783 if–
nOp
<1 ) ;

1784 
pOp
 = &
p
->
aOp
[0];

1785 if–
pOp
->
›code
==
OP_Inô
 &&ÖOp->
p4
.
z
!=0 ){

1786 
i
, 
j
;

1787 
z
[1000];

1788 
	`sqlôe3_¢¥ötf
((
z
), z, "%s", 
pOp
->
p4
.z);

1789 
i
=0; 
	`sqlôe3Is•a˚
(
z
[i]); i++){}

1790 
j
=0; 
z
[
i
]; i++){

1791 if–
	`sqlôe3Is•a˚
(
z
[
i
]) ){

1792 if–
z
[
i
-1]!=' ' ){

1793 
z
[
j
++] = ' ';

1796 
z
[
j
++] = z[
i
];

1799 
z
[
j
] = 0;

1800 
	`sqlôe3IoTø˚
("SQL %s\n", 
z
);

1802 
	}
}

1809 
	sReußbÀS∑˚
 {

1810 
u8
 *
	mpS∑˚
;

1811 
	mnFªe
;

1812 
	mnNìded
;

1829 *
	$ÆlocS∑˚
(

1830 
ReußbÀS∑˚
 *
p
,

1831 *
pBuf
,

1832 
nByã


1834 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(
p
->
pS∑˚
) );

1835 if–
pBuf
==0 ){

1836 
nByã
 = 
	`ROUND8
(nByte);

1837 if–
nByã
 <
p
->
nFªe
 ){

1838 
p
->
nFªe
 -
nByã
;

1839 
pBuf
 = &
p
->
pS∑˚
[p->
nFªe
];

1841 
p
->
nNìded
 +
nByã
;

1844 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(
pBuf
) );

1845  
pBuf
;

1846 
	}
}

1852 
	$sqlôe3VdbeRewöd
(
Vdbe
 *
p
){

1853 #i‡
	`deföed
(
SQLITE_DEBUG
Ë|| deföed(
VDBE_PROFILE
)

1854 
i
;

1856 
	`as£π
–
p
!=0 );

1857 
	`as£π
–
p
->
magic
==
VDBE_MAGIC_INIT
 ||Ö->magic==
VDBE_MAGIC_RESET
 );

1861 
	`as£π
–
p
->
nOp
>0 );

1864 
p
->
magic
 = 
VDBE_MAGIC_RUN
;

1866 #ifde‡
SQLITE_DEBUG


1867 
i
=0; i<
p
->
nMem
; i++){

1868 
	`as£π
–
p
->
aMem
[
i
].
db
==p->db );

1871 
p
->
pc
 = -1;

1872 
p
->
rc
 = 
SQLITE_OK
;

1873 
p
->
îr‹A˘i⁄
 = 
OE_Ab‹t
;

1874 
p
->
nCh™ge
 = 0;

1875 
p
->
ˇcheCå
 = 1;

1876 
p
->
möWrôeFûeF‹m©
 = 255;

1877 
p
->
iSèãmít
 = 0;

1878 
p
->
nFkC⁄°øöt
 = 0;

1879 #ifde‡
VDBE_PROFILE


1880 
i
=0; i<
p
->
nOp
; i++){

1881 
p
->
aOp
[
i
].
˙t
 = 0;

1882 
p
->
aOp
[
i
].
cy˛es
 = 0;

1885 
	}
}

1905 
	$sqlôe3VdbeMakeRódy
(

1906 
Vdbe
 *
p
,

1907 
P¨£
 *
pP¨£


1909 
sqlôe3
 *
db
;

1910 
nV¨
;

1911 
nMem
;

1912 
nCurs‹
;

1913 
nArg
;

1914 
n
;

1915 
ReußbÀS∑˚
 
x
;

1917 
	`as£π
–
p
!=0 );

1918 
	`as£π
–
p
->
nOp
>0 );

1919 
	`as£π
–
pP¨£
!=0 );

1920 
	`as£π
–
p
->
magic
==
VDBE_MAGIC_INIT
 );

1921 
	`as£π
–
pP¨£
==
p
->pParse );

1922 
db
 = 
p
->db;

1923 
	`as£π
–
db
->
mÆlocFaûed
==0 );

1924 
nV¨
 = 
pP¨£
->nVar;

1925 
nMem
 = 
pP¨£
->nMem;

1926 
nCurs‹
 = 
pP¨£
->
nTab
;

1927 
nArg
 = 
pP¨£
->
nMaxArg
;

1934 
nMem
 +
nCurs‹
;

1935 if–
nCurs‹
==0 && 
nMem
>0 )ÇMem++;

1941 
n
 = 
	`ROUND8
((
Op
)*
p
->
nOp
);

1942 
x
.
pS∑˚
 = &((
u8
*)
p
->
aOp
)[
n
];

1943 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(
x
.
pS∑˚
) );

1944 
x
.
nFªe
 = 
	`ROUNDDOWN8
(
pP¨£
->
szOpAŒoc
 - 
n
);

1945 
	`as£π
–
x
.
nFªe
>=0 );

1946 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(&
x
.
pS∑˚
[x.
nFªe
]) );

1948 
	`ªsﬁveP2VÆues
(
p
, &
nArg
);

1949 
p
->
u£sStmtJou∫Æ
 = (
u8
)(
pP¨£
->
isMu…iWrôe
 &&ÖP¨£->
mayAb‹t
);

1950 if–
pP¨£
->
ex∂aö
 && 
nMem
<10 ){

1951 
nMem
 = 10;

1953 
p
->
expúed
 = 0;

1966 
x
.
nNìded
 = 0;

1967 
p
->
aMem
 = 
	`ÆlocS∑˚
(&
x
,Ö->aMem, 
nMem
*(
Mem
));

1968 
p
->
aV¨
 = 
	`ÆlocS∑˚
(&
x
,Ö->aV¨, 
nV¨
*(
Mem
));

1969 
p
->
≠Arg
 = 
	`ÆlocS∑˚
(&
x
,Ö->≠Arg, 
nArg
*(
Mem
*));

1970 
p
->
≠C§
 = 
	`ÆlocS∑˚
(&
x
,Ö->≠C§, 
nCurs‹
*(
VdbeCurs‹
*));

1971 #ifde‡
SQLITE_ENABLE_STMT_SCANSTATUS


1972 
p
->
™Exec
 = 
	`ÆlocS∑˚
(&
x
,Ö->™Exec,Ö->
nOp
*(
i64
));

1974 if–
x
.
nNìded
==0 ) ;

1975 
x
.
pS∑˚
 = 
p
->
pFªe
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, x.
nNìded
);

1976 
x
.
nFªe
 = x.
nNìded
;

1977 } !
db
->
mÆlocFaûed
 );

1979 
p
->
pVLi°
 = 
pP¨£
->pVList;

1980 
pP¨£
->
pVLi°
 = 0;

1981 
p
->
ex∂aö
 = 
pP¨£
->explain;

1982 if–
db
->
mÆlocFaûed
 ){

1983 
p
->
nV¨
 = 0;

1984 
p
->
nCurs‹
 = 0;

1985 
p
->
nMem
 = 0;

1987 
p
->
nCurs‹
 =ÇCursor;

1988 
p
->
nV¨
 = (
ynV¨
)nVar;

1989 
	`öôMemAºay
(
p
->
aV¨
, 
nV¨
, 
db
, 
MEM_NuŒ
);

1990 
p
->
nMem
 =ÇMem;

1991 
	`öôMemAºay
(
p
->
aMem
, 
nMem
, 
db
, 
MEM_Undeföed
);

1992 
	`mem£t
(
p
->
≠C§
, 0, 
nCurs‹
*(
VdbeCurs‹
*));

1993 #ifde‡
SQLITE_ENABLE_STMT_SCANSTATUS


1994 
	`mem£t
(
p
->
™Exec
, 0,Ö->
nOp
*(
i64
));

1997 
	`sqlôe3VdbeRewöd
(
p
);

1998 
	}
}

2004 
	$sqlôe3VdbeFªeCurs‹
(
Vdbe
 *
p
, 
VdbeCurs‹
 *
pCx
){

2005 if–
pCx
==0 ){

2008 
	`as£π
–
pCx
->
pBtx
==0 ||ÖCx->
eCurTy≥
==
CURTYPE_BTREE
 );

2009  
pCx
->
eCurTy≥
 ){

2010 
CURTYPE_SORTER
: {

2011 
	`sqlôe3VdbeS‹ãrClo£
(
p
->
db
, 
pCx
);

2014 
CURTYPE_BTREE
: {

2015 if–
pCx
->
pBtx
 ){

2016 
	`sqlôe3BåìClo£
(
pCx
->
pBtx
);

2020 
	`as£π
–
pCx
->
uc
.
pCurs‹
!=0 );

2021 
	`sqlôe3BåìClo£Curs‹
(
pCx
->
uc
.
pCurs‹
);

2025 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


2026 
CURTYPE_VTAB
: {

2027 
sqlôe3_vèb_curs‹
 *
pVCur
 = 
pCx
->
uc
.pVCur;

2028 c⁄° 
sqlôe3_moduÀ
 *
pModuÀ
 = 
pVCur
->
pVèb
->pModule;

2029 
	`as£π
–
pVCur
->
pVèb
->
nRef
>0 );

2030 
pVCur
->
pVèb
->
nRef
--;

2031 
pModuÀ
->
	`xClo£
(
pVCur
);

2036 
	}
}

2041 
	$˛o£Curs‹sInFøme
(
Vdbe
 *
p
){

2042 if–
p
->
≠C§
 ){

2043 
i
;

2044 
i
=0; i<
p
->
nCurs‹
; i++){

2045 
VdbeCurs‹
 *
pC
 = 
p
->
≠C§
[
i
];

2046 if–
pC
 ){

2047 
	`sqlôe3VdbeFªeCurs‹
(
p
, 
pC
);

2048 
p
->
≠C§
[
i
] = 0;

2052 
	}
}

2059 
	$sqlôe3VdbeFømeRe°‹e
(
VdbeFøme
 *
pFøme
){

2060 
Vdbe
 *
v
 = 
pFøme
->v;

2061 
	`˛o£Curs‹sInFøme
(
v
);

2062 #ifde‡
SQLITE_ENABLE_STMT_SCANSTATUS


2063 
v
->
™Exec
 = 
pFøme
->anExec;

2065 
v
->
aOp
 = 
pFøme
->aOp;

2066 
v
->
nOp
 = 
pFøme
->nOp;

2067 
v
->
aMem
 = 
pFøme
->aMem;

2068 
v
->
nMem
 = 
pFøme
->nMem;

2069 
v
->
≠C§
 = 
pFøme
->apCsr;

2070 
v
->
nCurs‹
 = 
pFøme
->nCursor;

2071 
v
->
db
->
œ°Rowid
 = 
pFøme
->lastRowid;

2072 
v
->
nCh™ge
 = 
pFøme
->nChange;

2073 
v
->
db
->
nCh™ge
 = 
pFøme
->
nDbCh™ge
;

2074 
	`sqlôe3VdbeDñëeAuxD©a
(
v
->
db
, &v->
pAuxD©a
, -1, 0);

2075 
v
->
pAuxD©a
 = 
pFøme
->pAuxData;

2076 
pFøme
->
pAuxD©a
 = 0;

2077  
pFøme
->
pc
;

2078 
	}
}

2088 
	$˛o£AŒCurs‹s
(
Vdbe
 *
p
){

2089 if–
p
->
pFøme
 ){

2090 
VdbeFøme
 *
pFøme
;

2091 
pFøme
=
p
->pFøme;ÖFøme->
pP¨ít
;ÖFrame=pFrame->pParent);

2092 
	`sqlôe3VdbeFømeRe°‹e
(
pFøme
);

2093 
p
->
pFøme
 = 0;

2094 
p
->
nFøme
 = 0;

2096 
	`as£π
–
p
->
nFøme
==0 );

2097 
	`˛o£Curs‹sInFøme
(
p
);

2098 if–
p
->
aMem
 ){

2099 
	`ªÀa£MemAºay
(
p
->
aMem
,Ö->
nMem
);

2101  
p
->
pDñFøme
 ){

2102 
VdbeFøme
 *
pDñ
 = 
p
->
pDñFøme
;

2103 
p
->
pDñFøme
 = 
pDñ
->
pP¨ít
;

2104 
	`sqlôe3VdbeFømeDñëe
(
pDñ
);

2108 if–
p
->
pAuxD©a
 ) 
	`sqlôe3VdbeDñëeAuxD©a
’->
db
, &p->pAuxData, -1, 0);

2109 
	`as£π
–
p
->
pAuxD©a
==0 );

2110 
	}
}

2115 
	$CÀ™up
(
Vdbe
 *
p
){

2116 
sqlôe3
 *
db
 = 
p
->db;

2118 #ifde‡
SQLITE_DEBUG


2121 
i
;

2122 if–
p
->
≠C§
 ) 
i
=0; i<p->
nCurs‹
; i++Ë
	`as£π
(Ö->apCsr[i]==0 );

2123 if–
p
->
aMem
 ){

2124 
i
=0; i<
p
->
nMem
; i++Ë
	`as£π
–p->
aMem
[i].
Êags
==
MEM_Undeföed
 );

2128 
	`sqlôe3DbFªe
(
db
, 
p
->
zEºMsg
);

2129 
p
->
zEºMsg
 = 0;

2130 
p
->
pResu…Së
 = 0;

2131 
	}
}

2139 
	$sqlôe3VdbeSëNumCﬁs
(
Vdbe
 *
p
, 
nResCﬁumn
){

2140 
Mem
 *
pCﬁName
;

2141 
n
;

2142 
sqlôe3
 *
db
 = 
p
->db;

2144 
	`ªÀa£MemAºay
(
p
->
aCﬁName
,Ö->
nResCﬁumn
*
COLNAME_N
);

2145 
	`sqlôe3DbFªe
(
db
, 
p
->
aCﬁName
);

2146 
n
 = 
nResCﬁumn
*
COLNAME_N
;

2147 
p
->
nResCﬁumn
 = (
u16
)nResColumn;

2148 
p
->
aCﬁName
 = 
pCﬁName
 = (
Mem
*)
	`sqlôe3DbMÆlocRawNN
(
db
, (Mem)*
n
 );

2149 if–
p
->
aCﬁName
==0 ) ;

2150 
	`öôMemAºay
(
p
->
aCﬁName
, 
n
,Ö->
db
, 
MEM_NuŒ
);

2151 
	}
}

2163 
	$sqlôe3VdbeSëCﬁName
(

2164 
Vdbe
 *
p
,

2165 
idx
,

2166 
v¨
,

2167 c⁄° *
zName
,

2168 (*
xDñ
)(*)

2170 
rc
;

2171 
Mem
 *
pCﬁName
;

2172 
	`as£π
–
idx
<
p
->
nResCﬁumn
 );

2173 
	`as£π
–
v¨
<
COLNAME_N
 );

2174 if–
p
->
db
->
mÆlocFaûed
 ){

2175 
	`as£π
–!
zName
 || 
xDñ
!=
SQLITE_DYNAMIC
 );

2176  
SQLITE_NOMEM_BKPT
;

2178 
	`as£π
–
p
->
aCﬁName
!=0 );

2179 
pCﬁName
 = &(
p
->
aCﬁName
[
idx
+
v¨
*p->
nResCﬁumn
]);

2180 
rc
 = 
	`sqlôe3VdbeMemSëSå
(
pCﬁName
, 
zName
, -1, 
SQLITE_UTF8
, 
xDñ
);

2181 
	`as£π
–
rc
!=0 || !
zName
 || (
pCﬁName
->
Êags
&
MEM_Tîm
)!=0 );

2182  
rc
;

2183 
	}
}

2191 
	$vdbeCommô
(
sqlôe3
 *
db
, 
Vdbe
 *
p
){

2192 
i
;

2193 
nTøns
 = 0;

2196 
rc
 = 
SQLITE_OK
;

2197 
√edXcommô
 = 0;

2199 #ifde‡
SQLITE_OMIT_VIRTUALTABLE


2203 
	`UNUSED_PARAMETER
(
p
);

2212 
rc
 = 
	`sqlôe3VèbSync
(
db
, 
p
);

2220 
i
=0; 
rc
==
SQLITE_OK
 && i<
db
->
nDb
; i++){

2221 
Båì
 *
pBt
 = 
db
->
aDb
[
i
].pBt;

2222 if–
	`sqlôe3BåìIsInTøns
(
pBt
) ){

2226 c⁄° 
u8
 
aMJNìded
[] = {

2234 
Pagî
 *
pPagî
;

2235 
√edXcommô
 = 1;

2236 
	`sqlôe3BåìE¡î
(
pBt
);

2237 
pPagî
 = 
	`sqlôe3BåìPagî
(
pBt
);

2238 if–
db
->
aDb
[
i
].
ß„ty_Àvñ
!=
PAGER_SYNCHRONOUS_OFF


2239 && 
aMJNìded
[
	`sqlôe3PagîGëJou∫ÆMode
(
pPagî
)]

2241 
	`as£π
–
i
!=1 );

2242 
nTøns
++;

2244 
rc
 = 
	`sqlôe3PagîEx˛usiveLock
(
pPagî
);

2245 
	`sqlôe3BåìLóve
(
pBt
);

2248 if–
rc
!=
SQLITE_OK
 ){

2249  
rc
;

2253 if–
√edXcommô
 && 
db
->
xCommôCÆlback
 ){

2254 
rc
 = 
db
->
	`xCommôCÆlback
(db->
pCommôArg
);

2255 if–
rc
 ){

2256  
SQLITE_CONSTRAINT_COMMITHOOK
;

2269 if–0==
	`sqlôe3SåÀn30
(
	`sqlôe3BåìGëFûíame
(
db
->
aDb
[0].
pBt
))

2270 || 
nTøns
<=1

2272 
i
=0; 
rc
==
SQLITE_OK
 && i<
db
->
nDb
; i++){

2273 
Båì
 *
pBt
 = 
db
->
aDb
[
i
].pBt;

2274 if–
pBt
 ){

2275 
rc
 = 
	`sqlôe3BåìCommôPha£O√
(
pBt
, 0);

2284 
i
=0; 
rc
==
SQLITE_OK
 && i<
db
->
nDb
; i++){

2285 
Båì
 *
pBt
 = 
db
->
aDb
[
i
].pBt;

2286 if–
pBt
 ){

2287 
rc
 = 
	`sqlôe3BåìCommôPha£Two
(
pBt
, 0);

2290 if–
rc
==
SQLITE_OK
 ){

2291 
	`sqlôe3VèbCommô
(
db
);

2299 #i‚de‡
SQLITE_OMIT_DISKIO


2301 
sqlôe3_vfs
 *
pVfs
 = 
db
->pVfs;

2302 *
zMa°î
 = 0;

2303 c⁄° *
zMaöFûe
 = 
	`sqlôe3BåìGëFûíame
(
db
->
aDb
[0].
pBt
);

2304 
sqlôe3_fûe
 *
pMa°î
 = 0;

2305 
i64
 
off£t
 = 0;

2306 
ªs
;

2307 
ªåyCou¡
 = 0;

2308 
nMaöFûe
;

2311 
nMaöFûe
 = 
	`sqlôe3SåÀn30
(
zMaöFûe
);

2312 
zMa°î
 = 
	`sqlôe3MPrötf
(
db
, "%s-mjXXXXXX9XXz", 
zMaöFûe
);

2313 if–
zMa°î
==0 )  
SQLITE_NOMEM_BKPT
;

2315 
u32
 
iR™dom
;

2316 if–
ªåyCou¡
 ){

2317 if–
ªåyCou¡
>100 ){

2318 
	`sqlôe3_log
(
SQLITE_FULL
, "MJ dñëe: %s", 
zMa°î
);

2319 
	`sqlôe3OsDñëe
(
pVfs
, 
zMa°î
, 0);

2321 }if–
ªåyCou¡
==1 ){

2322 
	`sqlôe3_log
(
SQLITE_FULL
, "MJ cﬁlide: %s", 
zMa°î
);

2325 
ªåyCou¡
++;

2326 
	`sqlôe3_øndom√ss
((
iR™dom
), &iRandom);

2327 
	`sqlôe3_¢¥ötf
(13, &
zMa°î
[
nMaöFûe
], "-mj%06X9%02X",

2328 (
iR™dom
>>8)&0xffffff, iRandom&0xff);

2331 
	`as£π
–
zMa°î
[
	`sqlôe3SåÀn30
(zMaster)-3]=='9' );

2332 
	`sqlôe3FûeSuffix3
(
zMaöFûe
, 
zMa°î
);

2333 
rc
 = 
	`sqlôe3OsAc˚ss
(
pVfs
, 
zMa°î
, 
SQLITE_ACCESS_EXISTS
, &
ªs
);

2334 } 
rc
==
SQLITE_OK
 && 
ªs
 );

2335 if–
rc
==
SQLITE_OK
 ){

2337 
rc
 = 
	`sqlôe3OsO≥nMÆloc
(
pVfs
, 
zMa°î
, &
pMa°î
,

2338 
SQLITE_OPEN_READWRITE
|
SQLITE_OPEN_CREATE
|

2339 
SQLITE_OPEN_EXCLUSIVE
|
SQLITE_OPEN_MASTER_JOURNAL
, 0

2342 if–
rc
!=
SQLITE_OK
 ){

2343 
	`sqlôe3DbFªe
(
db
, 
zMa°î
);

2344  
rc
;

2353 
i
=0; i<
db
->
nDb
; i++){

2354 
Båì
 *
pBt
 = 
db
->
aDb
[
i
].pBt;

2355 if–
	`sqlôe3BåìIsInTøns
(
pBt
) ){

2356 c⁄° *
zFûe
 = 
	`sqlôe3BåìGëJou∫Æ«me
(
pBt
);

2357 if–
zFûe
==0 ){

2360 
	`as£π
–
zFûe
[0]!=0 );

2361 
rc
 = 
	`sqlôe3OsWrôe
(
pMa°î
, 
zFûe
, 
	`sqlôe3SåÀn30
(zFûe)+1, 
off£t
);

2362 
off£t
 +
	`sqlôe3SåÀn30
(
zFûe
)+1;

2363 if–
rc
!=
SQLITE_OK
 ){

2364 
	`sqlôe3OsClo£Fªe
(
pMa°î
);

2365 
	`sqlôe3OsDñëe
(
pVfs
, 
zMa°î
, 0);

2366 
	`sqlôe3DbFªe
(
db
, 
zMa°î
);

2367  
rc
;

2375 if–0==(
	`sqlôe3OsDevi˚Ch¨a˘îi°ics
(
pMa°î
)&
SQLITE_IOCAP_SEQUENTIAL
)

2376 && 
SQLITE_OK
!=(
rc
 = 
	`sqlôe3OsSync
(
pMa°î
, 
SQLITE_SYNC_NORMAL
))

2378 
	`sqlôe3OsClo£Fªe
(
pMa°î
);

2379 
	`sqlôe3OsDñëe
(
pVfs
, 
zMa°î
, 0);

2380 
	`sqlôe3DbFªe
(
db
, 
zMa°î
);

2381  
rc
;

2394 
i
=0; 
rc
==
SQLITE_OK
 && i<
db
->
nDb
; i++){

2395 
Båì
 *
pBt
 = 
db
->
aDb
[
i
].pBt;

2396 if–
pBt
 ){

2397 
rc
 = 
	`sqlôe3BåìCommôPha£O√
(
pBt
, 
zMa°î
);

2400 
	`sqlôe3OsClo£Fªe
(
pMa°î
);

2401 
	`as£π
–
rc
!=
SQLITE_BUSY
 );

2402 if–
rc
!=
SQLITE_OK
 ){

2403 
	`sqlôe3DbFªe
(
db
, 
zMa°î
);

2404  
rc
;

2411 
rc
 = 
	`sqlôe3OsDñëe
(
pVfs
, 
zMa°î
, 1);

2412 
	`sqlôe3DbFªe
(
db
, 
zMa°î
);

2413 
zMa°î
 = 0;

2414 if–
rc
 ){

2415  
rc
;

2425 
	`dißbÀ_simuœãd_io_îr‹s
();

2426 
	`sqlôe3BegöBíignMÆloc
();

2427 
i
=0; i<
db
->
nDb
; i++){

2428 
Båì
 *
pBt
 = 
db
->
aDb
[
i
].pBt;

2429 if–
pBt
 ){

2430 
	`sqlôe3BåìCommôPha£Two
(
pBt
, 1);

2433 
	`sqlôe3EndBíignMÆloc
();

2434 
	`íabÀ_simuœãd_io_îr‹s
();

2436 
	`sqlôe3VèbCommô
(
db
);

2440  
rc
;

2441 
	}
}

2452 #i‚de‡
NDEBUG


2453 
	$checkA˘iveVdbeC¡
(
sqlôe3
 *
db
){

2454 
Vdbe
 *
p
;

2455 
˙t
 = 0;

2456 
nWrôe
 = 0;

2457 
nRód
 = 0;

2458 
p
 = 
db
->
pVdbe
;

2459  
p
 ){

2460 if–
	`sqlôe3_°mt_busy
((
sqlôe3_°mt
*)
p
) ){

2461 
˙t
++;

2462 if–
p
->
ªadO∆y
==0 ) 
nWrôe
++;

2463 if–
p
->
bIsRódî
 ) 
nRód
++;

2465 
p
 =Ö->
pNext
;

2467 
	`as£π
–
˙t
==
db
->
nVdbeA˘ive
 );

2468 
	`as£π
–
nWrôe
==
db
->
nVdbeWrôe
 );

2469 
	`as£π
–
nRód
==
db
->
nVdbeRód
 );

2470 
	}
}

2472 
	#checkA˘iveVdbeC¡
(
x
)

	)

2485 
	$sqlôe3VdbeClo£Sèãmít
(
Vdbe
 *
p
, 
eOp
){

2486 
sqlôe3
 *c⁄° 
db
 = 
p
->db;

2487 
rc
 = 
SQLITE_OK
;

2494 if–
db
->
nSèãmít
 && 
p
->
iSèãmít
 ){

2495 
i
;

2496 c⁄° 
iSavïoöt
 = 
p
->
iSèãmít
-1;

2498 
	`as£π
–
eOp
==
SAVEPOINT_ROLLBACK
 ||ÉOp==
SAVEPOINT_RELEASE
);

2499 
	`as£π
–
db
->
nSèãmít
>0 );

2500 
	`as£π
–
p
->
iSèãmít
==(
db
->
nSèãmít
+db->
nSavïoöt
) );

2502 
i
=0; i<
db
->
nDb
; i++){

2503 
rc2
 = 
SQLITE_OK
;

2504 
Båì
 *
pBt
 = 
db
->
aDb
[
i
].pBt;

2505 if–
pBt
 ){

2506 if–
eOp
==
SAVEPOINT_ROLLBACK
 ){

2507 
rc2
 = 
	`sqlôe3BåìSavïoöt
(
pBt
, 
SAVEPOINT_ROLLBACK
, 
iSavïoöt
);

2509 if–
rc2
==
SQLITE_OK
 ){

2510 
rc2
 = 
	`sqlôe3BåìSavïoöt
(
pBt
, 
SAVEPOINT_RELEASE
, 
iSavïoöt
);

2512 if–
rc
==
SQLITE_OK
 ){

2513 
rc
 = 
rc2
;

2517 
db
->
nSèãmít
--;

2518 
p
->
iSèãmít
 = 0;

2520 if–
rc
==
SQLITE_OK
 ){

2521 if–
eOp
==
SAVEPOINT_ROLLBACK
 ){

2522 
rc
 = 
	`sqlôe3VèbSavïoöt
(
db
, 
SAVEPOINT_ROLLBACK
, 
iSavïoöt
);

2524 if–
rc
==
SQLITE_OK
 ){

2525 
rc
 = 
	`sqlôe3VèbSavïoöt
(
db
, 
SAVEPOINT_RELEASE
, 
iSavïoöt
);

2532 if–
eOp
==
SAVEPOINT_ROLLBACK
 ){

2533 
db
->
nDe„ºedC⁄s
 = 
p
->
nStmtDefC⁄s
;

2534 
db
->
nDe„ºedImmC⁄s
 = 
p
->
nStmtDefImmC⁄s
;

2537  
rc
;

2538 
	}
}

2550 #i‚de‡
SQLITE_OMIT_FOREIGN_KEY


2551 
	$sqlôe3VdbeCheckFk
(
Vdbe
 *
p
, 
de„ºed
){

2552 
sqlôe3
 *
db
 = 
p
->db;

2553 if–(
de„ºed
 && (
db
->
nDe„ºedC⁄s
+db->
nDe„ºedImmC⁄s
)>0)

2554 || (!
de„ºed
 && 
p
->
nFkC⁄°øöt
>0)

2556 
p
->
rc
 = 
SQLITE_CONSTRAINT_FOREIGNKEY
;

2557 
p
->
îr‹A˘i⁄
 = 
OE_Ab‹t
;

2558 
	`sqlôe3VdbeEº‹
(
p
, "FOREIGN KEY constraint failed");

2559  
SQLITE_ERROR
;

2561  
SQLITE_OK
;

2562 
	}
}

2578 
	$sqlôe3VdbeHÆt
(
Vdbe
 *
p
){

2579 
rc
;

2580 
sqlôe3
 *
db
 = 
p
->db;

2598 if–
db
->
mÆlocFaûed
 ){

2599 
p
->
rc
 = 
SQLITE_NOMEM_BKPT
;

2601 
	`˛o£AŒCurs‹s
(
p
);

2602 if–
p
->
magic
!=
VDBE_MAGIC_RUN
 ){

2603  
SQLITE_OK
;

2605 
	`checkA˘iveVdbeC¡
(
db
);

2609 if–
p
->
pc
>=0 &&Ö->
bIsRódî
 ){

2610 
mrc
;

2611 
eSèãmítOp
 = 0;

2612 
isS≥cülEº‹
;

2615 
	`sqlôe3VdbeE¡î
(
p
);

2618 
mrc
 = 
p
->
rc
 & 0xff;

2619 
isS≥cülEº‹
 = 
mrc
==
SQLITE_NOMEM
 || mrc==
SQLITE_IOERR


2620 || 
mrc
==
SQLITE_INTERRUPT
 || mrc==
SQLITE_FULL
;

2621 if–
isS≥cülEº‹
 ){

2634 if–!
p
->
ªadO∆y
 || 
mrc
!=
SQLITE_INTERRUPT
 ){

2635 if–(
mrc
==
SQLITE_NOMEM
 || mrc==
SQLITE_FULL
Ë&& 
p
->
u£sStmtJou∫Æ
 ){

2636 
eSèãmítOp
 = 
SAVEPOINT_ROLLBACK
;

2641 
	`sqlôe3RﬁlbackAŒ
(
db
, 
SQLITE_ABORT_ROLLBACK
);

2642 
	`sqlôe3Clo£Savïoöts
(
db
);

2643 
db
->
autoCommô
 = 1;

2644 
p
->
nCh™ge
 = 0;

2650 if–
p
->
rc
==
SQLITE_OK
 ){

2651 
	`sqlôe3VdbeCheckFk
(
p
, 0);

2660 if–!
	`sqlôe3VèbInSync
(
db
)

2661 && 
db
->
autoCommô


2662 && 
db
->
nVdbeWrôe
==(
p
->
ªadO∆y
==0)

2664 if–
p
->
rc
==
SQLITE_OK
 || (p->
îr‹A˘i⁄
==
OE_Faû
 && !
isS≥cülEº‹
) ){

2665 
rc
 = 
	`sqlôe3VdbeCheckFk
(
p
, 1);

2666 if–
rc
!=
SQLITE_OK
 ){

2667 if–
	`NEVER
(
p
->
ªadO∆y
) ){

2668 
	`sqlôe3VdbeLóve
(
p
);

2669  
SQLITE_ERROR
;

2671 
rc
 = 
SQLITE_CONSTRAINT_FOREIGNKEY
;

2677 
rc
 = 
	`vdbeCommô
(
db
, 
p
);

2679 if–
rc
==
SQLITE_BUSY
 && 
p
->
ªadO∆y
 ){

2680 
	`sqlôe3VdbeLóve
(
p
);

2681  
SQLITE_BUSY
;

2682 }if–
rc
!=
SQLITE_OK
 ){

2683 
p
->
rc
 =Ñc;

2684 
	`sqlôe3RﬁlbackAŒ
(
db
, 
SQLITE_OK
);

2685 
p
->
nCh™ge
 = 0;

2687 
db
->
nDe„ºedC⁄s
 = 0;

2688 
db
->
nDe„ºedImmC⁄s
 = 0;

2689 
db
->
Êags
 &~
SQLITE_De„rFKs
;

2690 
	`sqlôe3CommôI¡î«lCh™ges
(
db
);

2693 
	`sqlôe3RﬁlbackAŒ
(
db
, 
SQLITE_OK
);

2694 
p
->
nCh™ge
 = 0;

2696 
db
->
nSèãmít
 = 0;

2697 }if–
eSèãmítOp
==0 ){

2698 if–
p
->
rc
==
SQLITE_OK
 ||Ö->
îr‹A˘i⁄
==
OE_Faû
 ){

2699 
eSèãmítOp
 = 
SAVEPOINT_RELEASE
;

2700 }if–
p
->
îr‹A˘i⁄
==
OE_Ab‹t
 ){

2701 
eSèãmítOp
 = 
SAVEPOINT_ROLLBACK
;

2703 
	`sqlôe3RﬁlbackAŒ
(
db
, 
SQLITE_ABORT_ROLLBACK
);

2704 
	`sqlôe3Clo£Savïoöts
(
db
);

2705 
db
->
autoCommô
 = 1;

2706 
p
->
nCh™ge
 = 0;

2716 if–
eSèãmítOp
 ){

2717 
rc
 = 
	`sqlôe3VdbeClo£Sèãmít
(
p
, 
eSèãmítOp
);

2718 if–
rc
 ){

2719 if–
p
->
rc
==
SQLITE_OK
 || (p->rc&0xff)==
SQLITE_CONSTRAINT
 ){

2720 
p
->
rc
 =Ñc;

2721 
	`sqlôe3DbFªe
(
db
, 
p
->
zEºMsg
);

2722 
p
->
zEºMsg
 = 0;

2724 
	`sqlôe3RﬁlbackAŒ
(
db
, 
SQLITE_ABORT_ROLLBACK
);

2725 
	`sqlôe3Clo£Savïoöts
(
db
);

2726 
db
->
autoCommô
 = 1;

2727 
p
->
nCh™ge
 = 0;

2734 if–
p
->
ch™geC¡On
 ){

2735 if–
eSèãmítOp
!=
SAVEPOINT_ROLLBACK
 ){

2736 
	`sqlôe3VdbeSëCh™ges
(
db
, 
p
->
nCh™ge
);

2738 
	`sqlôe3VdbeSëCh™ges
(
db
, 0);

2740 
p
->
nCh™ge
 = 0;

2744 
	`sqlôe3VdbeLóve
(
p
);

2748 if–
p
->
pc
>=0 ){

2749 
db
->
nVdbeA˘ive
--;

2750 if–!
p
->
ªadO∆y
 ) 
db
->
nVdbeWrôe
--;

2751 if–
p
->
bIsRódî
 ) 
db
->
nVdbeRód
--;

2752 
	`as£π
–
db
->
nVdbeA˘ive
>=db->
nVdbeRód
 );

2753 
	`as£π
–
db
->
nVdbeRód
>=db->
nVdbeWrôe
 );

2754 
	`as£π
–
db
->
nVdbeWrôe
>=0 );

2756 
p
->
magic
 = 
VDBE_MAGIC_HALT
;

2757 
	`checkA˘iveVdbeC¡
(
db
);

2758 if–
db
->
mÆlocFaûed
 ){

2759 
p
->
rc
 = 
SQLITE_NOMEM_BKPT
;

2766 if–
db
->
autoCommô
 ){

2767 
	`sqlôe3C⁄√˘i⁄U∆ocked
(
db
);

2770 
	`as£π
–
db
->
nVdbeA˘ive
>0 || db->
autoCommô
==0 || db->
nSèãmít
==0 );

2771  (
p
->
rc
==
SQLITE_BUSY
 ? SQLITE_BUSY : 
SQLITE_OK
);

2772 
	}
}

2779 
	$sqlôe3VdbeRe£tSãpResu…
(
Vdbe
 *
p
){

2780 
p
->
rc
 = 
SQLITE_OK
;

2781 
	}
}

2791 
	$sqlôe3VdbeTøns„rEº‹
(
Vdbe
 *
p
){

2792 
sqlôe3
 *
db
 = 
p
->db;

2793 
rc
 = 
p
->rc;

2794 if–
p
->
zEºMsg
 ){

2795 
db
->
bBíignMÆloc
++;

2796 
	`sqlôe3BegöBíignMÆloc
();

2797 if–
db
->
pEº
==0 ) db->pEº = 
	`sqlôe3VÆueNew
(db);

2798 
	`sqlôe3VÆueSëSå
(
db
->
pEº
, -1, 
p
->
zEºMsg
, 
SQLITE_UTF8
, 
SQLITE_TRANSIENT
);

2799 
	`sqlôe3EndBíignMÆloc
();

2800 
db
->
bBíignMÆloc
--;

2801 
db
->
îrCode
 = 
rc
;

2803 
	`sqlôe3Eº‹
(
db
, 
rc
);

2805  
rc
;

2806 
	}
}

2808 #ifde‡
SQLITE_ENABLE_SQLLOG


2813 
	$vdbeInvokeSqŒog
(
Vdbe
 *
v
){

2814 if–
sqlôe3GlobÆC⁄fig
.
xSqŒog
 && 
v
->
rc
==
SQLITE_OK
 && v->
zSql
 && v->
pc
>=0 ){

2815 *
zEx∑nded
 = 
	`sqlôe3VdbeEx∑ndSql
(
v
, v->
zSql
);

2816 
	`as£π
–
v
->
db
->
öô
.
busy
==0 );

2817 if–
zEx∑nded
 ){

2818 
sqlôe3GlobÆC⁄fig
.
	`xSqŒog
(

2819 
sqlôe3GlobÆC⁄fig
.
pSqŒogArg
, 
v
->
db
, 
zEx∑nded
, 1

2821 
	`sqlôe3DbFªe
(
v
->
db
, 
zEx∑nded
);

2824 
	}
}

2826 
	#vdbeInvokeSqŒog
(
x
)

	)

2840 
	$sqlôe3VdbeRe£t
(
Vdbe
 *
p
){

2841 
sqlôe3
 *
db
;

2842 
db
 = 
p
->db;

2848 
	`sqlôe3VdbeHÆt
(
p
);

2855 if–
p
->
pc
>=0 ){

2856 
	`vdbeInvokeSqŒog
(
p
);

2857 
	`sqlôe3VdbeTøns„rEº‹
(
p
);

2858 
	`sqlôe3DbFªe
(
db
, 
p
->
zEºMsg
);

2859 
p
->
zEºMsg
 = 0;

2860 if–
p
->
runO∆yOn˚
 )Ö->
expúed
 = 1;

2861 }if–
p
->
rc
 &&Ö->
expúed
 ){

2866 
	`sqlôe3Eº‹WôhMsg
(
db
, 
p
->
rc
,Ö->
zEºMsg
 ? "%s" : 0,Ö->zErrMsg);

2867 
	`sqlôe3DbFªe
(
db
, 
p
->
zEºMsg
);

2868 
p
->
zEºMsg
 = 0;

2873 
	`CÀ™up
(
p
);

2877 #ifde‡
VDBE_PROFILE


2879 
FILE
 *
out
 = 
	`f›í
("vdbe_profile.out", "a");

2880 if–
out
 ){

2881 
i
;

2882 
	`Ârötf
(
out
, "---- ");

2883 
i
=0; i<
p
->
nOp
; i++){

2884 
	`Ârötf
(
out
, "%02x", 
p
->
aOp
[
i
].
›code
);

2886 
	`Ârötf
(
out
, "\n");

2887 if–
p
->
zSql
 ){

2888 
c
, 
pc
 = 0;

2889 
	`Ârötf
(
out
, "-- ");

2890 
i
=0; (
c
 = 
p
->
zSql
[i])!=0; i++){

2891 if–
pc
=='\n' ) 
	`Ârötf
(
out
, "-- ");

2892 
	`putc
(
c
, 
out
);

2893 
pc
 = 
c
;

2895 if–
pc
!='\n' ) 
	`Ârötf
(
out
, "\n");

2897 
i
=0; i<
p
->
nOp
; i++){

2898 
zHdr
[100];

2899 
	`sqlôe3_¢¥ötf
((
zHdr
), zHdr, "%6u %12llu %8llu ",

2900 
p
->
aOp
[
i
].
˙t
,

2901 
p
->
aOp
[
i
].
cy˛es
,

2902 
p
->
aOp
[
i
].
˙t
>0 ?Ö->aOp[i].
cy˛es
/p->aOp[i].cnt : 0

2904 
	`Ârötf
(
out
, "%s", 
zHdr
);

2905 
	`sqlôe3VdbePrötOp
(
out
, 
i
, &
p
->
aOp
[i]);

2907 
	`f˛o£
(
out
);

2911 
p
->
iCuºítTime
 = 0;

2912 
p
->
magic
 = 
VDBE_MAGIC_RESET
;

2913  
p
->
rc
 & 
db
->
îrMask
;

2914 
	}
}

2920 
	$sqlôe3VdbeFöÆize
(
Vdbe
 *
p
){

2921 
rc
 = 
SQLITE_OK
;

2922 if–
p
->
magic
==
VDBE_MAGIC_RUN
 ||Ö->magic==
VDBE_MAGIC_HALT
 ){

2923 
rc
 = 
	`sqlôe3VdbeRe£t
(
p
);

2924 
	`as£π
–(
rc
 & 
p
->
db
->
îrMask
)==rc );

2926 
	`sqlôe3VdbeDñëe
(
p
);

2927  
rc
;

2928 
	}
}

2946 
	$sqlôe3VdbeDñëeAuxD©a
(
sqlôe3
 *
db
, 
AuxD©a
 **
µ
, 
iOp
, 
mask
){

2947  *
µ
 ){

2948 
AuxD©a
 *
pAux
 = *
µ
;

2949 if–(
iOp
<0)

2950 || (
pAux
->
iOp
==iO∞&& (pAux->
iArg
>31 || !(
mask
 & 
	`MASKBIT32
(pAux->iArg))))

2952 
	`ã°ˇ£
–
pAux
->
iArg
==31 );

2953 if–
pAux
->
xDñëe
 ){

2954 
pAux
->
	`xDñëe
(pAux->pAux);

2956 *
µ
 = 
pAux
->
pNext
;

2957 
	`sqlôe3DbFªe
(
db
, 
pAux
);

2959 
µ
&
pAux
->
pNext
;

2962 
	}
}

2972 
	$sqlôe3VdbeCÀ¨Obje˘
(
sqlôe3
 *
db
, 
Vdbe
 *
p
){

2973 
SubProgøm
 *
pSub
, *
pNext
;

2974 
	`as£π
–
p
->
db
==0 ||Ö->db==db );

2975 
	`ªÀa£MemAºay
(
p
->
aCﬁName
,Ö->
nResCﬁumn
*
COLNAME_N
);

2976 
pSub
=
p
->
pProgøm
;ÖSub;ÖSub=
pNext
){

2977 
pNext
 = 
pSub
->pNext;

2978 
	`vdbeFªeOpAºay
(
db
, 
pSub
->
aOp
,ÖSub->
nOp
);

2979 
	`sqlôe3DbFªe
(
db
, 
pSub
);

2981 if–
p
->
magic
!=
VDBE_MAGIC_INIT
 ){

2982 
	`ªÀa£MemAºay
(
p
->
aV¨
,Ö->
nV¨
);

2983 
	`sqlôe3DbFªe
(
db
, 
p
->
pVLi°
);

2984 
	`sqlôe3DbFªe
(
db
, 
p
->
pFªe
);

2986 
	`vdbeFªeOpAºay
(
db
, 
p
->
aOp
,Ö->
nOp
);

2987 
	`sqlôe3DbFªe
(
db
, 
p
->
aCﬁName
);

2988 
	`sqlôe3DbFªe
(
db
, 
p
->
zSql
);

2989 #ifde‡
SQLITE_ENABLE_STMT_SCANSTATUS


2991 
i
;

2992 
i
=0; i<
p
->
nSˇn
; i++){

2993 
	`sqlôe3DbFªe
(
db
, 
p
->
aSˇn
[
i
].
zName
);

2995 
	`sqlôe3DbFªe
(
db
, 
p
->
aSˇn
);

2998 
	}
}

3003 
	$sqlôe3VdbeDñëe
(
Vdbe
 *
p
){

3004 
sqlôe3
 *
db
;

3006 if–
	`NEVER
(
p
==0) ) ;

3007 
db
 = 
p
->db;

3008 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

3009 
	`sqlôe3VdbeCÀ¨Obje˘
(
db
, 
p
);

3010 if–
p
->
pPªv
 ){

3011 
p
->
pPªv
->
pNext
 =Ö->pNext;

3013 
	`as£π
–
db
->
pVdbe
==
p
 );

3014 
db
->
pVdbe
 = 
p
->
pNext
;

3016 if–
p
->
pNext
 ){

3017 
p
->
pNext
->
pPªv
 =Ö->pPrev;

3019 
p
->
magic
 = 
VDBE_MAGIC_DEAD
;

3020 
p
->
db
 = 0;

3021 
	`sqlôe3DbFªe
(
db
, 
p
);

3022 
	}
}

3029 
SQLITE_NOINLINE
 
	$h™dÀDe„ºedMovëo
(
VdbeCurs‹
 *
p
){

3030 
ªs
, 
rc
;

3031 #ifde‡
SQLITE_TEST


3032 
sqlôe3_£¨ch_cou¡
;

3034 
	`as£π
–
p
->
de„ºedMovëo
 );

3035 
	`as£π
–
p
->
isTabÀ
 );

3036 
	`as£π
–
p
->
eCurTy≥
==
CURTYPE_BTREE
 );

3037 
rc
 = 
	`sqlôe3BåìMovëoU≈acked
(
p
->
uc
.
pCurs‹
, 0,Ö->
movëoT¨gë
, 0, &
ªs
);

3038 if–
rc
 ) Ñc;

3039 if–
ªs
!=0 )  
SQLITE_CORRUPT_BKPT
;

3040 #ifde‡
SQLITE_TEST


3041 
sqlôe3_£¨ch_cou¡
++;

3043 
p
->
de„ºedMovëo
 = 0;

3044 
p
->
ˇcheSètus
 = 
CACHE_STALE
;

3045  
SQLITE_OK
;

3046 
	}
}

3055 
SQLITE_NOINLINE
 
	$h™dÀMovedCurs‹
(
VdbeCurs‹
 *
p
){

3056 
isDif„ª¡Row
, 
rc
;

3057 
	`as£π
–
p
->
eCurTy≥
==
CURTYPE_BTREE
 );

3058 
	`as£π
–
p
->
uc
.
pCurs‹
!=0 );

3059 
	`as£π
–
	`sqlôe3BåìCurs‹HasMoved
(
p
->
uc
.
pCurs‹
) );

3060 
rc
 = 
	`sqlôe3BåìCurs‹Re°‹e
(
p
->
uc
.
pCurs‹
, &
isDif„ª¡Row
);

3061 
p
->
ˇcheSètus
 = 
CACHE_STALE
;

3062 if–
isDif„ª¡Row
 ) 
p
->
nuŒRow
 = 1;

3063  
rc
;

3064 
	}
}

3070 
	$sqlôe3VdbeCurs‹Re°‹e
(
VdbeCurs‹
 *
p
){

3071 
	`as£π
–
p
->
eCurTy≥
==
CURTYPE_BTREE
 );

3072 if–
	`sqlôe3BåìCurs‹HasMoved
(
p
->
uc
.
pCurs‹
) ){

3073  
	`h™dÀMovedCurs‹
(
p
);

3075  
SQLITE_OK
;

3076 
	}
}

3091 
	$sqlôe3VdbeCurs‹Movëo
(
VdbeCurs‹
 **
µ
, *
piCﬁ
){

3092 
VdbeCurs‹
 *
p
 = *
µ
;

3093 if–
p
->
eCurTy≥
==
CURTYPE_BTREE
 ){

3094 if–
p
->
de„ºedMovëo
 ){

3095 
iM≠
;

3096 if–
p
->
aA…M≠
 && (
iM≠
 =Ö->aA…M≠[1+*
piCﬁ
])>0 ){

3097 *
µ
 = 
p
->
pA…Curs‹
;

3098 *
piCﬁ
 = 
iM≠
 - 1;

3099  
SQLITE_OK
;

3101  
	`h™dÀDe„ºedMovëo
(
p
);

3103 if–
	`sqlôe3BåìCurs‹HasMoved
(
p
->
uc
.
pCurs‹
) ){

3104  
	`h™dÀMovedCurs‹
(
p
);

3107  
SQLITE_OK
;

3108 
	}
}

3155 
u32
 
	$sqlôe3VdbeSîülTy≥
(
Mem
 *
pMem
, 
fûe_f‹m©
, 
u32
 *
pLí
){

3156 
Êags
 = 
pMem
->flags;

3157 
u32
 
n
;

3159 
	`as£π
–
pLí
!=0 );

3160 if–
Êags
&
MEM_NuŒ
 ){

3161 *
pLí
 = 0;

3164 if–
Êags
&
MEM_I¡
 ){

3166 
	#MAX_6BYTE
 ((((
i64
)0x00008000)<<32)-1)

	)

3167 
i64
 
i
 = 
pMem
->
u
.i;

3168 
u64
 
u
;

3169 if–
i
<0 ){

3170 
u
 = ~
i
;

3172 
u
 = 
i
;

3174 if–
u
<=127 ){

3175 if–(
i
&1)==ò&& 
fûe_f‹m©
>=4 ){

3176 *
pLí
 = 0;

3177  8+(
u32
)
u
;

3179 *
pLí
 = 1;

3183 if–
u
<=32767 ){ *
pLí
 = 2;  2; }

3184 if–
u
<=8388607 ){ *
pLí
 = 3;  3; }

3185 if–
u
<=2147483647 ){ *
pLí
 = 4;  4; }

3186 if–
u
<=
MAX_6BYTE
 ){ *
pLí
 = 6;  5; }

3187 *
pLí
 = 8;

3190 if–
Êags
&
MEM_Ról
 ){

3191 *
pLí
 = 8;

3194 
	`as£π
–
pMem
->
db
->
mÆlocFaûed
 || 
Êags
&(
MEM_Så
|
MEM_Blob
) );

3195 
	`as£π
–
pMem
->
n
>=0 );

3196 
n
 = (
u32
)
pMem
->n;

3197 if–
Êags
 & 
MEM_Zîo
 ){

3198 
n
 +
pMem
->
u
.
nZîo
;

3200 *
pLí
 = 
n
;

3201  ((
n
*2Ë+ 12 + ((
Êags
&
MEM_Så
)!=0));

3202 
	}
}

3207 c⁄° 
u8
 
	gsqlôe3SmÆlTy≥Sizes
[] = {

3227 
u32
 
	$sqlôe3VdbeSîülTy≥Lí
(
u32
 
£rül_ty≥
){

3228 if–
£rül_ty≥
>=128 ){

3229  (
£rül_ty≥
-12)/2;

3231 
	`as£π
–
£rül_ty≥
<12

3232 || 
sqlôe3SmÆlTy≥Sizes
[
£rül_ty≥
]==(serial_type - 12)/2 );

3233  
sqlôe3SmÆlTy≥Sizes
[
£rül_ty≥
];

3235 
	}
}

3236 
u8
 
	$sqlôe3VdbeO√ByãSîülTy≥Lí
(
u8
 
£rül_ty≥
){

3237 
	`as£π
–
£rül_ty≥
<128 );

3238  
sqlôe3SmÆlTy≥Sizes
[
£rül_ty≥
];

3239 
	}
}

3275 #ifde‡
SQLITE_MIXED_ENDIAN_64BIT_FLOAT


3276 
u64
 
	$ÊﬂtSw≠
(
u64
 
ö
){

3278 
u64
 
r
;

3279 
u32
 
i
[2];

3280 } 
u
;

3281 
u32
 
t
;

3283 
u
.
r
 = 
ö
;

3284 
t
 = 
u
.
i
[0];

3285 
u
.
i
[0] = u.i[1];

3286 
u
.
i
[1] = 
t
;

3287  
u
.
r
;

3288 
	}
}

3289 
	#sw≠MixedEndünFlﬂt
(
X
ËX = 
	`ÊﬂtSw≠
(X)

	)

3291 
	#sw≠MixedEndünFlﬂt
(
X
)

	)

3307 
u32
 
	$sqlôe3VdbeSîülPut
(
u8
 *
buf
, 
Mem
 *
pMem
, 
u32
 
£rül_ty≥
){

3308 
u32
 
Àn
;

3311 if–
£rül_ty≥
<=7 && serial_type>0 ){

3312 
u64
 
v
;

3313 
u32
 
i
;

3314 if–
£rül_ty≥
==7 ){

3315 
	`as£π
–(
v
)==(
pMem
->
u
.
r
) );

3316 
	`mem˝y
(&
v
, &
pMem
->
u
.
r
, (v));

3317 
	`sw≠MixedEndünFlﬂt
(
v
);

3319 
v
 = 
pMem
->
u
.
i
;

3321 
Àn
 = 
i
 = 
sqlôe3SmÆlTy≥Sizes
[
£rül_ty≥
];

3322 
	`as£π
–
i
>0 );

3324 
buf
[--
i
] = (
u8
)(
v
&0xFF);

3325 
v
 >>= 8;

3326 } 
i
 );

3327  
Àn
;

3331 if–
£rül_ty≥
>=12 ){

3332 
	`as£π
–
pMem
->
n
 + (’Mem->
Êags
 & 
MEM_Zîo
)?pMem->
u
.
nZîo
:0)

3333 =()
	`sqlôe3VdbeSîülTy≥Lí
(
£rül_ty≥
) );

3334 
Àn
 = 
pMem
->
n
;

3335 if–
Àn
>0 ) 
	`mem˝y
(
buf
, 
pMem
->
z
,Üen);

3336  
Àn
;

3341 
	}
}

3346 
	#ONE_BYTE_INT
(
x
Ë((
i8
)(x)[0])

	)

3347 
	#TWO_BYTE_INT
(
x
Ë(256*(
i8
)((x)[0])|(x)[1])

	)

3348 
	#THREE_BYTE_INT
(
x
Ë(65536*(
i8
)((x)[0])|((x)[1]<<8)|(x)[2])

	)

3349 
	#FOUR_BYTE_UINT
(
x
Ë(((
u32
)(x)[0]<<24)|((x)[1]<<16)|((x)[2]<<8)|(x)[3])

	)

3350 
	#FOUR_BYTE_INT
(
x
Ë(16777216*(
i8
)((x)[0])|((x)[1]<<16)|((x)[2]<<8)|(x)[3])

	)

3361 
u32
 
SQLITE_NOINLINE
 
	$£rülGë
(

3362 c⁄° *
buf
,

3363 
u32
 
£rül_ty≥
,

3364 
Mem
 *
pMem


3366 
u64
 
x
 = 
	`FOUR_BYTE_UINT
(
buf
);

3367 
u32
 
y
 = 
	`FOUR_BYTE_UINT
(
buf
+4);

3368 
x
 = (x<<32Ë+ 
y
;

3369 if–
£rül_ty≥
==6 ){

3372 
pMem
->
u
.
i
 = *(
i64
*)&
x
;

3373 
pMem
->
Êags
 = 
MEM_I¡
;

3374 
	`ã°ˇ£
–
pMem
->
u
.
i
<0 );

3378 #i‡!
	`deföed
(
NDEBUG
Ë&& !deföed(
SQLITE_OMIT_FLOATING_POINT
)

3384 c⁄° 
u64
 
t1
 = ((u64)0x3ff00000)<<32;

3385 c⁄° 
r1
 = 1.0;

3386 
u64
 
t2
 = 
t1
;

3387 
	`sw≠MixedEndünFlﬂt
(
t2
);

3388 
	`as£π
–(
r1
)==(
t2
Ë&& 
	`memcmp
(&r1, &t2, (r1))==0 );

3390 
	`as£π
–(
x
)==8 && (
pMem
->
u
.
r
)==8 );

3391 
	`sw≠MixedEndünFlﬂt
(
x
);

3392 
	`mem˝y
(&
pMem
->
u
.
r
, &
x
, (x));

3393 
pMem
->
Êags
 = 
	`sqlôe3IsNaN
’Mem->
u
.
r
Ë? 
MEM_NuŒ
 : 
MEM_Ról
;

3396 
	}
}

3397 
u32
 
	$sqlôe3VdbeSîülGë
(

3398 c⁄° *
buf
,

3399 
u32
 
£rül_ty≥
,

3400 
Mem
 *
pMem


3402  
£rül_ty≥
 ){

3407 
pMem
->
Êags
 = 
MEM_NuŒ
;

3413 
pMem
->
u
.
i
 = 
	`ONE_BYTE_INT
(
buf
);

3414 
pMem
->
Êags
 = 
MEM_I¡
;

3415 
	`ã°ˇ£
–
pMem
->
u
.
i
<0 );

3421 
pMem
->
u
.
i
 = 
	`TWO_BYTE_INT
(
buf
);

3422 
pMem
->
Êags
 = 
MEM_I¡
;

3423 
	`ã°ˇ£
–
pMem
->
u
.
i
<0 );

3429 
pMem
->
u
.
i
 = 
	`THREE_BYTE_INT
(
buf
);

3430 
pMem
->
Êags
 = 
MEM_I¡
;

3431 
	`ã°ˇ£
–
pMem
->
u
.
i
<0 );

3437 
pMem
->
u
.
i
 = 
	`FOUR_BYTE_INT
(
buf
);

3438 #ifde‡
__HP_cc


3440 if–
buf
[0]&0x80 ) 
pMem
->
u
.
i
 |= 0xffffffff80000000LL;

3442 
pMem
->
Êags
 = 
MEM_I¡
;

3443 
	`ã°ˇ£
–
pMem
->
u
.
i
<0 );

3449 
pMem
->
u
.
i
 = 
	`FOUR_BYTE_UINT
(
buf
+2Ë+ (((
i64
)1)<<32)*
	`TWO_BYTE_INT
(buf);

3450 
pMem
->
Êags
 = 
MEM_I¡
;

3451 
	`ã°ˇ£
–
pMem
->
u
.
i
<0 );

3458  
	`£rülGë
(
buf
,
£rül_ty≥
,
pMem
);

3464 
pMem
->
u
.
i
 = 
£rül_ty≥
-8;

3465 
pMem
->
Êags
 = 
MEM_I¡
;

3473 c⁄° 
u16
 
aFœg
[] = { 
MEM_Blob
|
MEM_Ephem
, 
MEM_Så
|MEM_Ephem };

3474 
pMem
->
z
 = (*)
buf
;

3475 
pMem
->
n
 = (
£rül_ty≥
-12)/2;

3476 
pMem
->
Êags
 = 
aFœg
[
£rül_ty≥
&1];

3477  
pMem
->
n
;

3481 
	}
}

3496 
U≈ackedRec‹d
 *
	$sqlôe3VdbeAŒocU≈ackedRec‹d
(

3497 
KeyInfo
 *
pKeyInfo


3499 
U≈ackedRec‹d
 *
p
;

3500 
nByã
;

3501 
nByã
 = 
	`ROUND8
((
U≈ackedRec‹d
)Ë+ (
Mem
)*(
pKeyInfo
->
nFõld
+1);

3502 
p
 = (
U≈ackedRec‹d
 *)
	`sqlôe3DbMÆlocRaw
(
pKeyInfo
->
db
, 
nByã
);

3503 if–!
p
 )  0;

3504 
p
->
aMem
 = (
Mem
*)&((*Ì)[
	`ROUND8
((
U≈ackedRec‹d
))];

3505 
	`as£π
–
pKeyInfo
->
aS‹tOrdî
!=0 );

3506 
p
->
pKeyInfo
 =ÖKeyInfo;

3507 
p
->
nFõld
 = 
pKeyInfo
->nField + 1;

3508  
p
;

3509 
	}
}

3516 
	$sqlôe3VdbeRec‹dU≈ack
(

3517 
KeyInfo
 *
pKeyInfo
,

3518 
nKey
,

3519 c⁄° *
pKey
,

3520 
U≈ackedRec‹d
 *
p


3522 c⁄° *
aKey
 = (c⁄° *)
pKey
;

3523 
d
;

3524 
u32
 
idx
;

3525 
u16
 
u
;

3526 
u32
 
szHdr
;

3527 
Mem
 *
pMem
 = 
p
->
aMem
;

3529 
p
->
deÁu…_rc
 = 0;

3530 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(
pMem
) );

3531 
idx
 = 
	`gëV¨öt32
(
aKey
, 
szHdr
);

3532 
d
 = 
szHdr
;

3533 
u
 = 0;

3534  
idx
<
szHdr
 && 
d
<=
nKey
 ){

3535 
u32
 
£rül_ty≥
;

3537 
idx
 +
	`gëV¨öt32
(&
aKey
[idx], 
£rül_ty≥
);

3538 
pMem
->
íc
 = 
pKeyInfo
->enc;

3539 
pMem
->
db
 = 
pKeyInfo
->db;

3541 
pMem
->
szMÆloc
 = 0;

3542 
pMem
->
z
 = 0;

3543 
d
 +
	`sqlôe3VdbeSîülGë
(&
aKey
[d], 
£rül_ty≥
, 
pMem
);

3544 
pMem
++;

3545 if–(++
u
)>=
p
->
nFõld
 ) ;

3547 
	`as£π
–
u
<=
pKeyInfo
->
nFõld
 + 1 );

3548 
p
->
nFõld
 = 
u
;

3549 
	}
}

3551 #i‡
SQLITE_DEBUG


3563 
	$vdbeRec‹dCom∑ªDebug
(

3564 
nKey1
, c⁄° *
pKey1
,

3565 c⁄° 
U≈ackedRec‹d
 *
pPKey2
,

3566 
desúedResu…


3568 
u32
 
d1
;

3569 
u32
 
idx1
;

3570 
u32
 
szHdr1
;

3571 
i
 = 0;

3572 
rc
 = 0;

3573 c⁄° *
aKey1
 = (c⁄° *)
pKey1
;

3574 
KeyInfo
 *
pKeyInfo
;

3575 
Mem
 
mem1
;

3577 
pKeyInfo
 = 
pPKey2
->pKeyInfo;

3578 if–
pKeyInfo
->
db
==0 )  1;

3579 
mem1
.
íc
 = 
pKeyInfo
->enc;

3580 
mem1
.
db
 = 
pKeyInfo
->db;

3582 
	`VVA_ONLY
–
mem1
.
szMÆloc
 = 0; )

3593 
idx1
 = 
	`gëV¨öt32
(
aKey1
, 
szHdr1
);

3594 if–
szHdr1
>98307 )  
SQLITE_CORRUPT
;

3595 
d1
 = 
szHdr1
;

3596 
	`as£π
–
pKeyInfo
->
nFõld
+pKeyInfo->
nXFõld
>=
pPKey2
->nFõld || 
CORRUPT_DB
 );

3597 
	`as£π
–
pKeyInfo
->
aS‹tOrdî
!=0 );

3598 
	`as£π
–
pKeyInfo
->
nFõld
>0 );

3599 
	`as£π
–
idx1
<=
szHdr1
 || 
CORRUPT_DB
 );

3601 
u32
 
£rül_ty≥1
;

3604 
idx1
 +
	`gëV¨öt32
–
aKey1
+idx1, 
£rül_ty≥1
 );

3612 if–
d1
+
£rül_ty≥1
+2>(
u32
)
nKey1


3613 && 
d1
+
	`sqlôe3VdbeSîülTy≥Lí
(
£rül_ty≥1
)>(
u32
)
nKey1


3620 
d1
 +
	`sqlôe3VdbeSîülGë
(&
aKey1
[d1], 
£rül_ty≥1
, &
mem1
);

3624 
rc
 = 
	`sqlôe3MemCom∑ª
(&
mem1
, &
pPKey2
->
aMem
[
i
], 
pKeyInfo
->
aCﬁl
[i]);

3625 if–
rc
!=0 ){

3626 
	`as£π
–
mem1
.
szMÆloc
==0 );

3627 if–
pKeyInfo
->
aS‹tOrdî
[
i
] ){

3628 
rc
 = -rc;

3630 
debugCom∑ªEnd
;

3632 
i
++;

3633 } 
idx1
<
szHdr1
 && 
i
<
pPKey2
->
nFõld
 );

3639 
	`as£π
–
mem1
.
szMÆloc
==0 );

3644 
rc
 = 
pPKey2
->
deÁu…_rc
;

3646 
debugCom∑ªEnd
:

3647 if–
desúedResu…
==0 && 
rc
==0 )  1;

3648 if–
desúedResu…
<0 && 
rc
<0 )  1;

3649 if–
desúedResu…
>0 && 
rc
>0 )  1;

3650 if–
CORRUPT_DB
 )  1;

3651 if–
pKeyInfo
->
db
->
mÆlocFaûed
 )  1;

3653 
	}
}

3656 #i‡
SQLITE_DEBUG


3668 
	$vdbeAs£πFõldCou¡WôhöLimôs
(

3669 
nKey
, c⁄° *
pKey
,

3670 c⁄° 
KeyInfo
 *
pKeyInfo


3672 
nFõld
 = 0;

3673 
u32
 
szHdr
;

3674 
u32
 
idx
;

3675 
u32
 
nŸU£d
;

3676 c⁄° *
aKey
 = (c⁄° *)
pKey
;

3678 if–
CORRUPT_DB
 ) ;

3679 
idx
 = 
	`gëV¨öt32
(
aKey
, 
szHdr
);

3680 
	`as£π
–
nKey
>=0 );

3681 
	`as£π
–
szHdr
<=(
u32
)
nKey
 );

3682  
idx
<
szHdr
 ){

3683 
idx
 +
	`gëV¨öt32
(
aKey
+idx, 
nŸU£d
);

3684 
nFõld
++;

3686 
	`as£π
–
nFõld
 <
pKeyInfo
->nFõld+pKeyInfo->
nXFõld
 );

3687 
	}
}

3689 
	#vdbeAs£πFõldCou¡WôhöLimôs
(
A
,
B
,
C
)

	)

3698 
	$vdbeCom∑ªMemSåög
(

3699 c⁄° 
Mem
 *
pMem1
,

3700 c⁄° 
Mem
 *
pMem2
,

3701 c⁄° 
CﬁlSeq
 *
pCﬁl
,

3702 
u8
 *
¥cEº


3704 if–
pMem1
->
íc
==
pCﬁl
->enc ){

3707  
pCﬁl
->
	`xCmp
’Cﬁl->
pU£r
,
pMem1
->
n
,pMem1->
z
,
pMem2
->n,pMem2->z);

3709 
rc
;

3710 c⁄° *
v1
, *
v2
;

3711 
n1
, 
n2
;

3712 
Mem
 
c1
;

3713 
Mem
 
c2
;

3714 
	`sqlôe3VdbeMemInô
(&
c1
, 
pMem1
->
db
, 
MEM_NuŒ
);

3715 
	`sqlôe3VdbeMemInô
(&
c2
, 
pMem1
->
db
, 
MEM_NuŒ
);

3716 
	`sqlôe3VdbeMemShÆlowC›y
(&
c1
, 
pMem1
, 
MEM_Ephem
);

3717 
	`sqlôe3VdbeMemShÆlowC›y
(&
c2
, 
pMem2
, 
MEM_Ephem
);

3718 
v1
 = 
	`sqlôe3VÆueText
((
sqlôe3_vÆue
*)&
c1
, 
pCﬁl
->
íc
);

3719 
n1
 = 
v1
==0 ? 0 : 
c1
.
n
;

3720 
v2
 = 
	`sqlôe3VÆueText
((
sqlôe3_vÆue
*)&
c2
, 
pCﬁl
->
íc
);

3721 
n2
 = 
v2
==0 ? 0 : 
c2
.
n
;

3722 
rc
 = 
pCﬁl
->
	`xCmp
’Cﬁl->
pU£r
, 
n1
, 
v1
, 
n2
, 
v2
);

3723 if–(
v1
==0 || 
v2
==0Ë&& 
¥cEº
 ) *¥cEº = 
SQLITE_NOMEM_BKPT
;

3724 
	`sqlôe3VdbeMemRñó£
(&
c1
);

3725 
	`sqlôe3VdbeMemRñó£
(&
c2
);

3726  
rc
;

3728 
	}
}

3734 
	$isAŒZîo
(c⁄° *
z
, 
n
){

3735 
i
;

3736 
i
=0; i<
n
; i++){

3737 if–
z
[
i
] )  0;

3740 
	}
}

3747 
SQLITE_NOINLINE
 
	$sqlôe3BlobCom∑ª
(c⁄° 
Mem
 *
pB1
, c⁄° Mem *
pB2
){

3748 
c
;

3749 
n1
 = 
pB1
->
n
;

3750 
n2
 = 
pB2
->
n
;

3756 
	`as£π
–(
pB1
->
Êags
 & 
MEM_Zîo
)==0 || 
n1
==0 );

3757 
	`as£π
–(
pB2
->
Êags
 & 
MEM_Zîo
)==0 || 
n2
==0 );

3759 if–(
pB1
->
Êags
|
pB2
->ÊagsË& 
MEM_Zîo
 ){

3760 if–
pB1
->
Êags
 & 
pB2
->Êag†& 
MEM_Zîo
 ){

3761  
pB1
->
u
.
nZîo
 - 
pB2
->u.nZero;

3762 }if–
pB1
->
Êags
 & 
MEM_Zîo
 ){

3763 if–!
	`isAŒZîo
(
pB2
->
z
,ÖB2->
n
) )  -1;

3764  
pB1
->
u
.
nZîo
 - 
n2
;

3766 if–!
	`isAŒZîo
(
pB1
->
z
,ÖB1->
n
) )  +1;

3767  
n1
 - 
pB2
->
u
.
nZîo
;

3770 
c
 = 
	`memcmp
(
pB1
->
z
, 
pB2
->z, 
n1
>
n2
 ?Ç2 :Ç1);

3771 if–
c
 )  c;

3772  
n1
 - 
n2
;

3773 
	}
}

3780 
	$sqlôe3I¡FlﬂtCom∑ª
(
i64
 
i
, 
r
){

3781 if–(
LONGDOUBLE_TYPE
)>8 ){

3782 
LONGDOUBLE_TYPE
 
x
 = (LONGDOUBLE_TYPE)
i
;

3783 if–
x
<
r
 )  -1;

3784 if–
x
>
r
 )  +1;

3787 
i64
 
y
;

3788 
s
;

3789 if–
r
<-9223372036854775808.0 )  +1;

3790 if–
r
>9223372036854775807.0 )  -1;

3791 
y
 = (
i64
)
r
;

3792 if–
i
<
y
 )  -1;

3793 if–
i
>
y
 ){

3794 if–
y
==
SMALLEST_INT64
 && 
r
>0.0 )  -1;

3797 
s
 = ()
i
;

3798 if–
s
<
r
 )  -1;

3799 if–
s
>
r
 )  +1;

3802 
	}
}

3813 
	$sqlôe3MemCom∑ª
(c⁄° 
Mem
 *
pMem1
, c⁄° Mem *
pMem2
, c⁄° 
CﬁlSeq
 *
pCﬁl
){

3814 
f1
, 
f2
;

3815 
comböed_Êags
;

3817 
f1
 = 
pMem1
->
Êags
;

3818 
f2
 = 
pMem2
->
Êags
;

3819 
comböed_Êags
 = 
f1
|
f2
;

3820 
	`as£π
–(
comböed_Êags
 & 
MEM_RowSë
)==0 );

3825 if–
comböed_Êags
&
MEM_NuŒ
 ){

3826  (
f2
&
MEM_NuŒ
Ë- (
f1
&MEM_Null);

3831 if–
comböed_Êags
&(
MEM_I¡
|
MEM_Ról
) ){

3832 if–(
f1
 & 
f2
 & 
MEM_I¡
)!=0 ){

3833 if–
pMem1
->
u
.
i
 < 
pMem2
->u.i )  -1;

3834 if–
pMem1
->
u
.
i
 > 
pMem2
->u.i )  +1;

3837 if–(
f1
 & 
f2
 & 
MEM_Ról
)!=0 ){

3838 if–
pMem1
->
u
.
r
 < 
pMem2
->u.r )  -1;

3839 if–
pMem1
->
u
.
r
 > 
pMem2
->u.r )  +1;

3842 if–(
f1
&
MEM_I¡
)!=0 ){

3843 if–(
f2
&
MEM_Ról
)!=0 ){

3844  
	`sqlôe3I¡FlﬂtCom∑ª
(
pMem1
->
u
.
i
, 
pMem2
->u.
r
);

3849 if–(
f1
&
MEM_Ról
)!=0 ){

3850 if–(
f2
&
MEM_I¡
)!=0 ){

3851  -
	`sqlôe3I¡FlﬂtCom∑ª
(
pMem2
->
u
.
i
, 
pMem1
->u.
r
);

3862 if–
comböed_Êags
&
MEM_Så
 ){

3863 if–(
f1
 & 
MEM_Så
)==0 ){

3866 if–(
f2
 & 
MEM_Så
)==0 ){

3870 
	`as£π
–
pMem1
->
íc
==
pMem2
->í¯||ÖMem1->
db
->
mÆlocFaûed
 );

3871 
	`as£π
–
pMem1
->
íc
==
SQLITE_UTF8
 ||

3872 
pMem1
->
íc
==
SQLITE_UTF16LE
 ||ÖMem1->íc==
SQLITE_UTF16BE
 );

3878 
	`as£π
–!
pCﬁl
 ||ÖCﬁl->
xCmp
 );

3880 if–
pCﬁl
 ){

3881  
	`vdbeCom∑ªMemSåög
(
pMem1
, 
pMem2
, 
pCﬁl
, 0);

3888  
	`sqlôe3BlobCom∑ª
(
pMem1
, 
pMem2
);

3889 
	}
}

3899 
i64
 
	$vdbeRec‹dDecodeI¡
(
u32
 
£rül_ty≥
, c⁄° 
u8
 *
aKey
){

3900 
u32
 
y
;

3901 
	`as£π
–
CORRUPT_DB
 || (
£rül_ty≥
>=1 && serial_type<=9 && serial_type!=7) );

3902  
£rül_ty≥
 ){

3905 
	`ã°ˇ£
–
aKey
[0]&0x80 );

3906  
	`ONE_BYTE_INT
(
aKey
);

3908 
	`ã°ˇ£
–
aKey
[0]&0x80 );

3909  
	`TWO_BYTE_INT
(
aKey
);

3911 
	`ã°ˇ£
–
aKey
[0]&0x80 );

3912  
	`THREE_BYTE_INT
(
aKey
);

3914 
	`ã°ˇ£
–
aKey
[0]&0x80 );

3915 
y
 = 
	`FOUR_BYTE_UINT
(
aKey
);

3916  (
i64
)*(*)&
y
;

3919 
	`ã°ˇ£
–
aKey
[0]&0x80 );

3920  
	`FOUR_BYTE_UINT
(
aKey
+2Ë+ (((
i64
)1)<<32)*
	`TWO_BYTE_INT
(aKey);

3923 
u64
 
x
 = 
	`FOUR_BYTE_UINT
(
aKey
);

3924 
	`ã°ˇ£
–
aKey
[0]&0x80 );

3925 
x
 = (x<<32Ë| 
	`FOUR_BYTE_UINT
(
aKey
+4);

3926  (
i64
)*(i64*)&
x
;

3930  (
£rül_ty≥
 - 8);

3931 
	}
}

3954 
	$sqlôe3VdbeRec‹dCom∑ªWôhSkù
(

3955 
nKey1
, c⁄° *
pKey1
,

3956 
U≈ackedRec‹d
 *
pPKey2
,

3957 
bSkù


3959 
u32
 
d1
;

3960 
i
;

3961 
u32
 
szHdr1
;

3962 
u32
 
idx1
;

3963 
rc
 = 0;

3964 
Mem
 *
pRhs
 = 
pPKey2
->
aMem
;

3965 
KeyInfo
 *
pKeyInfo
 = 
pPKey2
->pKeyInfo;

3966 c⁄° *
aKey1
 = (c⁄° *)
pKey1
;

3967 
Mem
 
mem1
;

3972 if–
bSkù
 ){

3973 
u32
 
s1
;

3974 
idx1
 = 1 + 
	`gëV¨öt32
(&
aKey1
[1], 
s1
);

3975 
szHdr1
 = 
aKey1
[0];

3976 
d1
 = 
szHdr1
 + 
	`sqlôe3VdbeSîülTy≥Lí
(
s1
);

3977 
i
 = 1;

3978 
pRhs
++;

3980 
idx1
 = 
	`gëV¨öt32
(
aKey1
, 
szHdr1
);

3981 
d1
 = 
szHdr1
;

3982 if–
d1
>()
nKey1
 ){

3983 
pPKey2
->
îrCode
 = (
u8
)
SQLITE_CORRUPT_BKPT
;

3986 
i
 = 0;

3989 
	`VVA_ONLY
–
mem1
.
szMÆloc
 = 0; )

3990 
	`as£π
–
pPKey2
->
pKeyInfo
->
nFõld
+pPKey2->pKeyInfo->
nXFõld
>=pPKey2->nField

3991 || 
CORRUPT_DB
 );

3992 
	`as£π
–
pPKey2
->
pKeyInfo
->
aS‹tOrdî
!=0 );

3993 
	`as£π
–
pPKey2
->
pKeyInfo
->
nFõld
>0 );

3994 
	`as£π
–
idx1
<=
szHdr1
 || 
CORRUPT_DB
 );

3996 
u32
 
£rül_ty≥
;

3999 if–
pRhs
->
Êags
 & 
MEM_I¡
 ){

4000 
£rül_ty≥
 = 
aKey1
[
idx1
];

4001 
	`ã°ˇ£
–
£rül_ty≥
==12 );

4002 if–
£rül_ty≥
>=10 ){

4003 
rc
 = +1;

4004 }if–
£rül_ty≥
==0 ){

4005 
rc
 = -1;

4006 }if–
£rül_ty≥
==7 ){

4007 
	`sqlôe3VdbeSîülGë
(&
aKey1
[
d1
], 
£rül_ty≥
, &
mem1
);

4008 
rc
 = -
	`sqlôe3I¡FlﬂtCom∑ª
(
pRhs
->
u
.
i
, 
mem1
.u.
r
);

4010 
i64
 
lhs
 = 
	`vdbeRec‹dDecodeI¡
(
£rül_ty≥
, &
aKey1
[
d1
]);

4011 
i64
 
rhs
 = 
pRhs
->
u
.
i
;

4012 if–
lhs
<
rhs
 ){

4013 
rc
 = -1;

4014 }if–
lhs
>
rhs
 ){

4015 
rc
 = +1;

4021 if–
pRhs
->
Êags
 & 
MEM_Ról
 ){

4022 
£rül_ty≥
 = 
aKey1
[
idx1
];

4023 if–
£rül_ty≥
>=10 ){

4028 
rc
 = +1;

4029 }if–
£rül_ty≥
==0 ){

4030 
rc
 = -1;

4032 
	`sqlôe3VdbeSîülGë
(&
aKey1
[
d1
], 
£rül_ty≥
, &
mem1
);

4033 if–
£rül_ty≥
==7 ){

4034 if–
mem1
.
u
.
r
<
pRhs
->u.r ){

4035 
rc
 = -1;

4036 }if–
mem1
.
u
.
r
>
pRhs
->u.r ){

4037 
rc
 = +1;

4040 
rc
 = 
	`sqlôe3I¡FlﬂtCom∑ª
(
mem1
.
u
.
i
, 
pRhs
->u.
r
);

4046 if–
pRhs
->
Êags
 & 
MEM_Så
 ){

4047 
	`gëV¨öt32
(&
aKey1
[
idx1
], 
£rül_ty≥
);

4048 
	`ã°ˇ£
–
£rül_ty≥
==12 );

4049 if–
£rül_ty≥
<12 ){

4050 
rc
 = -1;

4051 }if–!(
£rül_ty≥
 & 0x01) ){

4052 
rc
 = +1;

4054 
mem1
.
n
 = (
£rül_ty≥
 - 12) / 2;

4055 
	`ã°ˇ£
–(
d1
+
mem1
.
n
)==()
nKey1
 );

4056 
	`ã°ˇ£
–(
d1
+
mem1
.
n
+1)==()
nKey1
 );

4057 if–(
d1
+
mem1
.
n
Ë> ()
nKey1
 ){

4058 
pPKey2
->
îrCode
 = (
u8
)
SQLITE_CORRUPT_BKPT
;

4060 }if–
pKeyInfo
->
aCﬁl
[
i
] ){

4061 
mem1
.
íc
 = 
pKeyInfo
->enc;

4062 
mem1
.
db
 = 
pKeyInfo
->db;

4063 
mem1
.
Êags
 = 
MEM_Så
;

4064 
mem1
.
z
 = (*)&
aKey1
[
d1
];

4065 
rc
 = 
	`vdbeCom∑ªMemSåög
(

4066 &
mem1
, 
pRhs
, 
pKeyInfo
->
aCﬁl
[
i
], &
pPKey2
->
îrCode


4069 
nCmp
 = 
	`MIN
(
mem1
.
n
, 
pRhs
->n);

4070 
rc
 = 
	`memcmp
(&
aKey1
[
d1
], 
pRhs
->
z
, 
nCmp
);

4071 if–
rc
==0 )Ñ¯
mem1
.
n
 - 
pRhs
->n;

4077 if–
pRhs
->
Êags
 & 
MEM_Blob
 ){

4078 
	`as£π
–(
pRhs
->
Êags
 & 
MEM_Zîo
)==0 ||ÖRhs->
n
==0 );

4079 
	`gëV¨öt32
(&
aKey1
[
idx1
], 
£rül_ty≥
);

4080 
	`ã°ˇ£
–
£rül_ty≥
==12 );

4081 if–
£rül_ty≥
<12 || (serial_type & 0x01) ){

4082 
rc
 = -1;

4084 
nSå
 = (
£rül_ty≥
 - 12) / 2;

4085 
	`ã°ˇ£
–(
d1
+
nSå
)==()
nKey1
 );

4086 
	`ã°ˇ£
–(
d1
+
nSå
+1)==()
nKey1
 );

4087 if–(
d1
+
nSå
Ë> ()
nKey1
 ){

4088 
pPKey2
->
îrCode
 = (
u8
)
SQLITE_CORRUPT_BKPT
;

4090 }if–
pRhs
->
Êags
 & 
MEM_Zîo
 ){

4091 if–!
	`isAŒZîo
((c⁄° *)&
aKey1
[
d1
],
nSå
) ){

4092 
rc
 = 1;

4094 
rc
 = 
nSå
 - 
pRhs
->
u
.
nZîo
;

4097 
nCmp
 = 
	`MIN
(
nSå
, 
pRhs
->
n
);

4098 
rc
 = 
	`memcmp
(&
aKey1
[
d1
], 
pRhs
->
z
, 
nCmp
);

4099 if–
rc
==0 )Ñ¯
nSå
 - 
pRhs
->
n
;

4106 
£rül_ty≥
 = 
aKey1
[
idx1
];

4107 
rc
 = (
£rül_ty≥
!=0);

4110 if–
rc
!=0 ){

4111 if–
pKeyInfo
->
aS‹tOrdî
[
i
] ){

4112 
rc
 = -rc;

4114 
	`as£π
–
	`vdbeRec‹dCom∑ªDebug
(
nKey1
, 
pKey1
, 
pPKey2
, 
rc
) );

4115 
	`as£π
–
mem1
.
szMÆloc
==0 );

4116  
rc
;

4119 
i
++;

4120 
pRhs
++;

4121 
d1
 +
	`sqlôe3VdbeSîülTy≥Lí
(
£rül_ty≥
);

4122 
idx1
 +
	`sqlôe3V¨ötLí
(
£rül_ty≥
);

4123 } 
idx1
<()
szHdr1
 && 
i
<
pPKey2
->
nFõld
 && 
d1
<=()
nKey1
 );

4128 
	`as£π
–
mem1
.
szMÆloc
==0 );

4133 
	`as£π
–
CORRUPT_DB


4134 || 
	`vdbeRec‹dCom∑ªDebug
(
nKey1
, 
pKey1
, 
pPKey2
,ÖPKey2->
deÁu…_rc
)

4135 || 
pKeyInfo
->
db
->
mÆlocFaûed


4137 
pPKey2
->
eqSìn
 = 1;

4138  
pPKey2
->
deÁu…_rc
;

4139 
	}
}

4140 
	$sqlôe3VdbeRec‹dCom∑ª
(

4141 
nKey1
, c⁄° *
pKey1
,

4142 
U≈ackedRec‹d
 *
pPKey2


4144  
	`sqlôe3VdbeRec‹dCom∑ªWôhSkù
(
nKey1
, 
pKey1
, 
pPKey2
, 0);

4145 
	}
}

4157 
	$vdbeRec‹dCom∑ªI¡
(

4158 
nKey1
, c⁄° *
pKey1
,

4159 
U≈ackedRec‹d
 *
pPKey2


4161 c⁄° 
u8
 *
aKey
 = &((c⁄° u8*)
pKey1
)[*(const u8*)pKey1 & 0x3F];

4162 
£rül_ty≥
 = ((c⁄° 
u8
*)
pKey1
)[1];

4163 
ªs
;

4164 
u32
 
y
;

4165 
u64
 
x
;

4166 
i64
 
v
;

4167 
i64
 
lhs
;

4169 
	`vdbeAs£πFõldCou¡WôhöLimôs
(
nKey1
, 
pKey1
, 
pPKey2
->
pKeyInfo
);

4170 
	`as£π
–(*(
u8
*)
pKey1
)<=0x3F || 
CORRUPT_DB
 );

4171  
£rül_ty≥
 ){

4173 
lhs
 = 
	`ONE_BYTE_INT
(
aKey
);

4174 
	`ã°ˇ£
–
lhs
<0 );

4178 
lhs
 = 
	`TWO_BYTE_INT
(
aKey
);

4179 
	`ã°ˇ£
–
lhs
<0 );

4183 
lhs
 = 
	`THREE_BYTE_INT
(
aKey
);

4184 
	`ã°ˇ£
–
lhs
<0 );

4188 
y
 = 
	`FOUR_BYTE_UINT
(
aKey
);

4189 
lhs
 = (
i64
)*(*)&
y
;

4190 
	`ã°ˇ£
–
lhs
<0 );

4194 
lhs
 = 
	`FOUR_BYTE_UINT
(
aKey
+2Ë+ (((
i64
)1)<<32)*
	`TWO_BYTE_INT
(aKey);

4195 
	`ã°ˇ£
–
lhs
<0 );

4199 
x
 = 
	`FOUR_BYTE_UINT
(
aKey
);

4200 
x
 = (x<<32Ë| 
	`FOUR_BYTE_UINT
(
aKey
+4);

4201 
lhs
 = *(
i64
*)&
x
;

4202 
	`ã°ˇ£
–
lhs
<0 );

4206 
lhs
 = 0;

4209 
lhs
 = 1;

4219  
	`sqlôe3VdbeRec‹dCom∑ª
(
nKey1
, 
pKey1
, 
pPKey2
);

4222  
	`sqlôe3VdbeRec‹dCom∑ª
(
nKey1
, 
pKey1
, 
pPKey2
);

4225 
v
 = 
pPKey2
->
aMem
[0].
u
.
i
;

4226 if–
v
>
lhs
 ){

4227 
ªs
 = 
pPKey2
->
r1
;

4228 }if–
v
<
lhs
 ){

4229 
ªs
 = 
pPKey2
->
r2
;

4230 }if–
pPKey2
->
nFõld
>1 ){

4233 
ªs
 = 
	`sqlôe3VdbeRec‹dCom∑ªWôhSkù
(
nKey1
, 
pKey1
, 
pPKey2
, 1);

4237 
ªs
 = 
pPKey2
->
deÁu…_rc
;

4238 
pPKey2
->
eqSìn
 = 1;

4241 
	`as£π
–
	`vdbeRec‹dCom∑ªDebug
(
nKey1
, 
pKey1
, 
pPKey2
, 
ªs
) );

4242  
ªs
;

4243 
	}
}

4251 
	$vdbeRec‹dCom∑ªSåög
(

4252 
nKey1
, c⁄° *
pKey1
,

4253 
U≈ackedRec‹d
 *
pPKey2


4255 c⁄° 
u8
 *
aKey1
 = (c⁄° u8*)
pKey1
;

4256 
£rül_ty≥
;

4257 
ªs
;

4259 
	`as£π
–
pPKey2
->
aMem
[0].
Êags
 & 
MEM_Så
 );

4260 
	`vdbeAs£πFõldCou¡WôhöLimôs
(
nKey1
, 
pKey1
, 
pPKey2
->
pKeyInfo
);

4261 
	`gëV¨öt32
(&
aKey1
[1], 
£rül_ty≥
);

4262 if–
£rül_ty≥
<12 ){

4263 
ªs
 = 
pPKey2
->
r1
;

4264 }if–!(
£rül_ty≥
 & 0x01) ){

4265 
ªs
 = 
pPKey2
->
r2
;

4267 
nCmp
;

4268 
nSå
;

4269 
szHdr
 = 
aKey1
[0];

4271 
nSå
 = (
£rül_ty≥
-12) / 2;

4272 if–(
szHdr
 + 
nSå
Ë> 
nKey1
 ){

4273 
pPKey2
->
îrCode
 = (
u8
)
SQLITE_CORRUPT_BKPT
;

4276 
nCmp
 = 
	`MIN
–
pPKey2
->
aMem
[0].
n
, 
nSå
 );

4277 
ªs
 = 
	`memcmp
(&
aKey1
[
szHdr
], 
pPKey2
->
aMem
[0].
z
, 
nCmp
);

4279 if–
ªs
==0 ){

4280 
ªs
 = 
nSå
 - 
pPKey2
->
aMem
[0].
n
;

4281 if–
ªs
==0 ){

4282 if–
pPKey2
->
nFõld
>1 ){

4283 
ªs
 = 
	`sqlôe3VdbeRec‹dCom∑ªWôhSkù
(
nKey1
, 
pKey1
, 
pPKey2
, 1);

4285 
ªs
 = 
pPKey2
->
deÁu…_rc
;

4286 
pPKey2
->
eqSìn
 = 1;

4288 }if–
ªs
>0 ){

4289 
ªs
 = 
pPKey2
->
r2
;

4291 
ªs
 = 
pPKey2
->
r1
;

4293 }if–
ªs
>0 ){

4294 
ªs
 = 
pPKey2
->
r2
;

4296 
ªs
 = 
pPKey2
->
r1
;

4300 
	`as£π
–
	`vdbeRec‹dCom∑ªDebug
(
nKey1
, 
pKey1
, 
pPKey2
, 
ªs
)

4301 || 
CORRUPT_DB


4302 || 
pPKey2
->
pKeyInfo
->
db
->
mÆlocFaûed


4304  
ªs
;

4305 
	}
}

4312 
Rec‹dCom∑ª
 
	$sqlôe3VdbeFödCom∑ª
(
U≈ackedRec‹d
 *
p
){

4326 
p
->
pKeyInfo
->
xCom∑ª
){

4327 
WALINT
:

4328  
vdbeRec‹dCom∑ªI¡
;

4329 
WALSTRING
:

4330  
vdbeRec‹dCom∑ªSåög
;

4331 
WALRECORD
:

4332  
sqlôe3VdbeRec‹dCom∑ª
;

4334 if–(
p
->
pKeyInfo
->
nFõld
 +Ö->pKeyInfo->
nXFõld
)<=13 ){

4335 
Êags
 = 
p
->
aMem
[0].flags;

4336 if–
p
->
pKeyInfo
->
aS‹tOrdî
[0] ){

4337 
p
->
r1
 = 1;

4338 
p
->
r2
 = -1;

4340 
p
->
r1
 = -1;

4341 
p
->
r2
 = 1;

4343 if–(
Êags
 & 
MEM_I¡
) ){

4344 
p
->
pKeyInfo
->
xCom∑ª
 = 
INT
;

4345  
vdbeRec‹dCom∑ªI¡
;

4347 
	`ã°ˇ£
–
Êags
 & 
MEM_Ról
 );

4348 
	`ã°ˇ£
–
Êags
 & 
MEM_NuŒ
 );

4349 
	`ã°ˇ£
–
Êags
 & 
MEM_Blob
 );

4350 if–(
Êags
 & (
MEM_Ról
|
MEM_NuŒ
|
MEM_Blob
))==0 && 
p
->
pKeyInfo
->
aCﬁl
[0]==0 ){

4351 
	`as£π
–
Êags
 & 
MEM_Så
 );

4352 
p
->
pKeyInfo
->
xCom∑ª
 = 
STRING
;

4353  
vdbeRec‹dCom∑ªSåög
;

4356 
p
->
pKeyInfo
->
xCom∑ª
 = 
RECORD
;

4357  
sqlôe3VdbeRec‹dCom∑ª
;

4358 
	}
}

4368 
	$sqlôe3VdbeIdxRowid
(
sqlôe3
 *
db
, 
BtCurs‹
 *
pCur
, 
i64
 *
rowid
){

4369 
i64
 
nCñlKey
 = 0;

4370 
rc
;

4371 
u32
 
szHdr
;

4372 
u32
 
ty≥Rowid
;

4373 
u32
 
ÀnRowid
;

4374 
Mem
 
m
, 
v
;

4381 
	`as£π
–
	`sqlôe3BåìCurs‹IsVÆid
(
pCur
) );

4382 
nCñlKey
 = 
	`sqlôe3BåìPaylﬂdSize
(
pCur
);

4383 
	`as£π
–(
nCñlKey
 & 
SQLITE_MAX_U32
)==(
u64
)nCellKey );

4386 
	`sqlôe3VdbeMemInô
(&
m
, 
db
, 0);

4387 
rc
 = 
	`sqlôe3VdbeMemFromBåì
(
pCur
, 0, (
u32
)
nCñlKey
, &
m
);

4388 if–
rc
 ){

4389  
rc
;

4393 ()
	`gëV¨öt32
((
u8
*)
m
.
z
, 
szHdr
);

4394 
	`ã°ˇ£
–
szHdr
==3 );

4395 
	`ã°ˇ£
–
szHdr
==
m
.
n
 );

4396 if–
	`u∆ikñy
(
szHdr
<3 || ()szHdr>
m
.
n
) ){

4397 
idx_rowid_c‹ru±i⁄
;

4402 ()
	`gëV¨öt32
((
u8
*)&
m
.
z
[
szHdr
-1], 
ty≥Rowid
);

4403 
	`ã°ˇ£
–
ty≥Rowid
==1 );

4404 
	`ã°ˇ£
–
ty≥Rowid
==2 );

4405 
	`ã°ˇ£
–
ty≥Rowid
==3 );

4406 
	`ã°ˇ£
–
ty≥Rowid
==4 );

4407 
	`ã°ˇ£
–
ty≥Rowid
==5 );

4408 
	`ã°ˇ£
–
ty≥Rowid
==6 );

4409 
	`ã°ˇ£
–
ty≥Rowid
==8 );

4410 
	`ã°ˇ£
–
ty≥Rowid
==9 );

4411 if–
	`u∆ikñy
(
ty≥Rowid
<1 ||ÅypeRowid>9 ||ÅypeRowid==7) ){

4412 
idx_rowid_c‹ru±i⁄
;

4414 
ÀnRowid
 = 
sqlôe3SmÆlTy≥Sizes
[
ty≥Rowid
];

4415 
	`ã°ˇ£
–(
u32
)
m
.
n
==
szHdr
+
ÀnRowid
 );

4416 if–
	`u∆ikñy
((
u32
)
m
.
n
<
szHdr
+
ÀnRowid
) ){

4417 
idx_rowid_c‹ru±i⁄
;

4421 
	`sqlôe3VdbeSîülGë
((
u8
*)&
m
.
z
[m.
n
-
ÀnRowid
], 
ty≥Rowid
, &
v
);

4422 *
rowid
 = 
v
.
u
.
i
;

4423 
	`sqlôe3VdbeMemRñó£
(&
m
);

4424  
SQLITE_OK
;

4428 
idx_rowid_c‹ru±i⁄
:

4429 
	`ã°ˇ£
–
m
.
szMÆloc
!=0 );

4430 
	`sqlôe3VdbeMemRñó£
(&
m
);

4431  
SQLITE_CORRUPT_BKPT
;

4432 
	}
}

4445 
	$sqlôe3VdbeIdxKeyCom∑ª
(

4446 
sqlôe3
 *
db
,

4447 
VdbeCurs‹
 *
pC
,

4448 
U≈ackedRec‹d
 *
pU≈acked
,

4449 *
ªs


4451 
i64
 
nCñlKey
 = 0;

4452 
rc
;

4453 
BtCurs‹
 *
pCur
;

4454 
Mem
 
m
;

4456 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

4457 
pCur
 = 
pC
->
uc
.
pCurs‹
;

4458 
	`as£π
–
	`sqlôe3BåìCurs‹IsVÆid
(
pCur
) );

4459 
nCñlKey
 = 
	`sqlôe3BåìPaylﬂdSize
(
pCur
);

4462 if–
nCñlKey
<=0 ||ÇCellKey>0x7fffffff ){

4463 *
ªs
 = 0;

4464  
SQLITE_CORRUPT_BKPT
;

4466 
	`sqlôe3VdbeMemInô
(&
m
, 
db
, 0);

4467 
rc
 = 
	`sqlôe3VdbeMemFromBåì
(
pCur
, 0, (
u32
)
nCñlKey
, &
m
);

4468 if–
rc
 ){

4469  
rc
;

4471 *
ªs
 = 
	`sqlôe3VdbeRec‹dCom∑ª
(
m
.
n
, m.
z
, 
pU≈acked
);

4472 
	`sqlôe3VdbeMemRñó£
(&
m
);

4473  
SQLITE_OK
;

4474 
	}
}

4480 
	$sqlôe3VdbeSëCh™ges
(
sqlôe3
 *
db
, 
nCh™ge
){

4481 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

4482 
db
->
nCh™ge
 =ÇChange;

4483 
db
->
nTŸÆCh™ge
 +
nCh™ge
;

4484 
	}
}

4490 
	$sqlôe3VdbeCou¡Ch™ges
(
Vdbe
 *
v
){

4491 
v
->
ch™geC¡On
 = 1;

4492 
	}
}

4504 
	$sqlôe3ExpúePª∑ªdSèãmíts
(
sqlôe3
 *
db
){

4505 
Vdbe
 *
p
;

4506 
p
 = 
db
->
pVdbe
;Ö;Öı->
pNext
){

4507 
p
->
expúed
 = 1;

4509 
	}
}

4514 
sqlôe3
 *
	$sqlôe3VdbeDb
(
Vdbe
 *
v
){

4515  
v
->
db
;

4516 
	}
}

4526 
sqlôe3_vÆue
 *
	$sqlôe3VdbeGëBoundVÆue
(
Vdbe
 *
v
, 
iV¨
, 
u8
 
aff
){

4527 
	`as£π
–
iV¨
>0 );

4528 if–
v
 ){

4529 
Mem
 *
pMem
 = &
v
->
aV¨
[
iV¨
-1];

4530 if–0==(
pMem
->
Êags
 & 
MEM_NuŒ
) ){

4531 
sqlôe3_vÆue
 *
pRë
 = 
	`sqlôe3VÆueNew
(
v
->
db
);

4532 if–
pRë
 ){

4533 
	`sqlôe3VdbeMemC›y
((
Mem
 *)
pRë
, 
pMem
);

4534 
	`sqlôe3VÆueAµlyAfföôy
(
pRë
, 
aff
, 
SQLITE_UTF8
);

4536  
pRë
;

4540 
	}
}

4547 
	$sqlôe3VdbeSëV¨mask
(
Vdbe
 *
v
, 
iV¨
){

4548 
	`as£π
–
iV¨
>0 );

4549 if–
iV¨
>32 ){

4550 
v
->
expmask
 = 0xffffffff;

4552 
v
->
expmask
 |((
u32
)1 << (
iV¨
-1));

4554 
	}
}

4556 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


4562 
	$sqlôe3VèbImp‹tEºmsg
(
Vdbe
 *
p
, 
sqlôe3_vèb
 *
pVèb
){

4563 if–
pVèb
->
zEºMsg
 ){

4564 
sqlôe3
 *
db
 = 
p
->db;

4565 
	`sqlôe3DbFªe
(
db
, 
p
->
zEºMsg
);

4566 
p
->
zEºMsg
 = 
	`sqlôe3DbSåDup
(
db
, 
pVèb
->zErrMsg);

4567 
	`sqlôe3_‰ì
(
pVèb
->
zEºMsg
);

4568 
pVèb
->
zEºMsg
 = 0;

4570 
	}
}

4573 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


4583 
	$vdbeFªeU≈acked
(
sqlôe3
 *
db
, 
U≈ackedRec‹d
 *
p
){

4584 if–
p
 ){

4585 
i
;

4586 
i
=0; i<
p
->
nFõld
; i++){

4587 
Mem
 *
pMem
 = &
p
->
aMem
[
i
];

4588 if–
pMem
->
zMÆloc
 ) 
	`sqlôe3VdbeMemRñó£
(pMem);

4590 
	`sqlôe3DbFªe
(
db
, 
p
);

4592 
	}
}

4595 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


4602 
	$sqlôe3VdbePªUpd©eHook
(

4603 
Vdbe
 *
v
,

4604 
VdbeCurs‹
 *
pC§
,

4605 
›
,

4606 c⁄° *
zDb
,

4607 
TabÀ
 *
pTab
,

4608 
i64
 
iKey1
,

4609 
iReg


4611 
sqlôe3
 *
db
 = 
v
->db;

4612 
i64
 
iKey2
;

4613 
PªUpd©e
 
¥eupd©e
;

4614 c⁄° *
zTbl
 = 
pTab
->
zName
;

4615 c⁄° 
u8
 
ÁkeS‹tOrdî
 = 0;

4617 
	`as£π
–
db
->
pPªUpd©e
==0 );

4618 
	`mem£t
(&
¥eupd©e
, 0, (
PªUpd©e
));

4619 if–
›
==
SQLITE_UPDATE
 ){

4620 
iKey2
 = 
v
->
aMem
[
iReg
].
u
.
i
;

4622 
iKey2
 = 
iKey1
;

4625 
	`as£π
–
pC§
->
nFõld
==
pTab
->
nCﬁ


4626 || (
pC§
->
nFõld
==
pTab
->
nCﬁ
+1 && 
›
==
SQLITE_DELETE
 && 
iReg
==-1)

4629 
¥eupd©e
.
v
 = v;

4630 
¥eupd©e
.
pC§
 =ÖCsr;

4631 
¥eupd©e
.
›
 = op;

4632 
¥eupd©e
.
iNewReg
 = 
iReg
;

4633 
¥eupd©e
.
keyöfo
.
db
 = db;

4634 
¥eupd©e
.
keyöfo
.
íc
 = 
	`ENC
(
db
);

4635 
¥eupd©e
.
keyöfo
.
nFõld
 = 
pTab
->
nCﬁ
;

4636 
¥eupd©e
.
keyöfo
.
aS‹tOrdî
 = (
u8
*)&
ÁkeS‹tOrdî
;

4637 
¥eupd©e
.
iKey1
 = iKey1;

4638 
¥eupd©e
.
iKey2
 = iKey2;

4639 
¥eupd©e
.
pTab
 =ÖTab;

4641 
db
->
pPªUpd©e
 = &
¥eupd©e
;

4642 
db
->
	`xPªUpd©eCÆlback
(db->
pPªUpd©eArg
, db, 
›
, 
zDb
, 
zTbl
, 
iKey1
, 
iKey2
);

4643 
db
->
pPªUpd©e
 = 0;

4644 
	`sqlôe3DbFªe
(
db
, 
¥eupd©e
.
aRec‹d
);

4645 
	`vdbeFªeU≈acked
(
db
, 
¥eupd©e
.
pU≈acked
);

4646 
	`vdbeFªeU≈acked
(
db
, 
¥eupd©e
.
pNewU≈acked
);

4647 if–
¥eupd©e
.
aNew
 ){

4648 
i
;

4649 
i
=0; i<
pC§
->
nFõld
; i++){

4650 
	`sqlôe3VdbeMemRñó£
(&
¥eupd©e
.
aNew
[
i
]);

4652 
	`sqlôe3DbFªe
(
db
, 
¥eupd©e
.
aNew
);

4654 
	}
}

	@vdbeblob.c

16 
	~"sqlôeI¡.h
"

17 
	~"vdbeI¡.h
"

19 #i‚de‡
SQLITE_OMIT_INCRBLOB


24 
In¸blob
 
	tIn¸blob
;

25 
	sIn¸blob
 {

26 
	mÊags
;

27 
	mnByã
;

28 
	miOff£t
;

29 
	miCﬁ
;

30 
BtCurs‹
 *
	mpC§
;

31 
sqlôe3_°mt
 *
	mpStmt
;

32 
sqlôe3
 *
	mdb
;

33 *
	mzDb
;

34 
TabÀ
 *
	mpTab
;

55 
	$blobSìkToRow
(
In¸blob
 *
p
, 
sqlôe3_öt64
 
iRow
, **
pzEº
){

56 
rc
;

57 *
zEº
 = 0;

58 
Vdbe
 *
v
 = (Vdbê*)
p
->
pStmt
;

64 
	`as£π
–
v
->
aV¨
[0].
Êags
&
MEM_I¡
 );

65 
v
->
aV¨
[0].
u
.
i
 = 
iRow
;

67 
rc
 = 
	`sqlôe3_°ï
(
p
->
pStmt
);

68 if–
rc
==
SQLITE_ROW
 ){

69 
VdbeCurs‹
 *
pC
 = 
v
->
≠C§
[0];

70 
u32
 
ty≥
 = 
pC
->
aTy≥
[
p
->
iCﬁ
];

71 if–
ty≥
<12 ){

72 
zEº
 = 
	`sqlôe3MPrötf
(
p
->
db
, "cannot open value ofÅype %s",

73 
ty≥
==0?"null":Åype==7?"real": "integer"

75 
rc
 = 
SQLITE_ERROR
;

76 
	`sqlôe3_föÆize
(
p
->
pStmt
);

77 
p
->
pStmt
 = 0;

79 
p
->
iOff£t
 = 
pC
->
aTy≥
[p->
iCﬁ
 +ÖC->
nFõld
];

80 
p
->
nByã
 = 
	`sqlôe3VdbeSîülTy≥Lí
(
ty≥
);

81 
p
->
pC§
 = 
pC
->
uc
.
pCurs‹
;

82 
	`sqlôe3BåìIn¸blobCurs‹
(
p
->
pC§
);

86 if–
rc
==
SQLITE_ROW
 ){

87 
rc
 = 
SQLITE_OK
;

88 }if–
p
->
pStmt
 ){

89 
rc
 = 
	`sqlôe3_föÆize
(
p
->
pStmt
);

90 
p
->
pStmt
 = 0;

91 if–
rc
==
SQLITE_OK
 ){

92 
zEº
 = 
	`sqlôe3MPrötf
(
p
->
db
, "nÿsuchÑowid: %Œd", 
iRow
);

93 
rc
 = 
SQLITE_ERROR
;

95 
zEº
 = 
	`sqlôe3MPrötf
(
p
->
db
, "%s", 
	`sqlôe3_îrmsg
(p->db));

99 
	`as£π
–
rc
!=
SQLITE_OK
 || 
zEº
==0 );

100 
	`as£π
–
rc
!=
SQLITE_ROW
 &&Ñc!=
SQLITE_DONE
 );

102 *
pzEº
 = 
zEº
;

103  
rc
;

104 
	}
}

109 
	$sqlôe3_blob_›í
(

110 
sqlôe3
* 
db
,

111 c⁄° *
zDb
,

112 c⁄° *
zTabÀ
,

113 c⁄° *
zCﬁumn
,

114 
sqlôe_öt64
 
iRow
,

115 
Êags
,

116 
sqlôe3_blob
 **
µBlob


118 
nAâem±
 = 0;

119 
iCﬁ
;

120 
rc
 = 
SQLITE_OK
;

121 *
zEº
 = 0;

122 
TabÀ
 *
pTab
;

123 
P¨£
 *
pP¨£
 = 0;

124 
In¸blob
 *
pBlob
 = 0;

126 #ifde‡
SQLITE_ENABLE_API_ARMOR


127 if–
µBlob
==0 ){

128  
SQLITE_MISUSE_BKPT
;

131 *
µBlob
 = 0;

132 #ifde‡
SQLITE_ENABLE_API_ARMOR


133 if–!
	`sqlôe3Sa„tyCheckOk
(
db
Ë|| 
zTabÀ
==0 ){

134  
SQLITE_MISUSE_BKPT
;

137 
Êags
 = !!flags;

139 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

141 
pBlob
 = (
In¸blob
 *)
	`sqlôe3DbMÆlocZîo
(
db
, (Incrblob));

142 if–!
pBlob
 ) 
blob_›í_out
;

143 
pP¨£
 = 
	`sqlôe3SèckAŒocRaw
(
db
, (*pParse));

144 if–!
pP¨£
 ) 
blob_›í_out
;

147 
	`mem£t
(
pP¨£
, 0, (
P¨£
));

148 
pP¨£
->
db
 = db;

149 
	`sqlôe3DbFªe
(
db
, 
zEº
);

150 
zEº
 = 0;

152 
	`sqlôe3BåìE¡îAŒ
(
db
);

153 
pTab
 = 
	`sqlôe3LoˇãTabÀ
(
pP¨£
, 0, 
zTabÀ
, 
zDb
);

154 if–
pTab
 && 
	`IsVútuÆ
(pTab) ){

155 
pTab
 = 0;

156 
	`sqlôe3Eº‹Msg
(
pP¨£
, "ˇ¬Ÿ o≥¿vútuÆÅabÀ: %s", 
zTabÀ
);

158 if–
pTab
 && !
	`HasRowid
(pTab) ){

159 
pTab
 = 0;

160 
	`sqlôe3Eº‹Msg
(
pP¨£
, "ˇ¬Ÿ o≥¿èbÀ wôhouàrowid: %s", 
zTabÀ
);

162 #i‚de‡
SQLITE_OMIT_VIEW


163 if–
pTab
 &&ÖTab->
pSñe˘
 ){

164 
pTab
 = 0;

165 
	`sqlôe3Eº‹Msg
(
pP¨£
, "ˇ¬Ÿ o≥¿võw: %s", 
zTabÀ
);

168 if–!
pTab
 ){

169 if–
pP¨£
->
zEºMsg
 ){

170 
	`sqlôe3DbFªe
(
db
, 
zEº
);

171 
zEº
 = 
pP¨£
->
zEºMsg
;

172 
pP¨£
->
zEºMsg
 = 0;

174 
rc
 = 
SQLITE_ERROR
;

175 
	`sqlôe3BåìLóveAŒ
(
db
);

176 
blob_›í_out
;

178 
pBlob
->
pTab
 =ÖTab;

179 
pBlob
->
zDb
 = 
db
->
aDb
[
	`sqlôe3SchemaToIndex
(db, 
pTab
->
pSchema
)].
zDbSName
;

182 
iCﬁ
=0; iCﬁ<
pTab
->
nCﬁ
; iCol++) {

183 if–
	`sqlôe3SåICmp
(
pTab
->
aCﬁ
[
iCﬁ
].
zName
, 
zCﬁumn
)==0 ){

187 if–
iCﬁ
==
pTab
->
nCﬁ
 ){

188 
	`sqlôe3DbFªe
(
db
, 
zEº
);

189 
zEº
 = 
	`sqlôe3MPrötf
(
db
, "nÿsuch cﬁumn: \"%s\"", 
zCﬁumn
);

190 
rc
 = 
SQLITE_ERROR
;

191 
	`sqlôe3BåìLóveAŒ
(
db
);

192 
blob_›í_out
;

199 if–
Êags
 ){

200 c⁄° *
zFau…
 = 0;

201 
Index
 *
pIdx
;

202 #i‚de‡
SQLITE_OMIT_FOREIGN_KEY


203 if–
db
->
Êags
&
SQLITE_F‹eignKeys
 ){

208 
FKey
 *
pFKey
;

209 
pFKey
=
pTab
->pFKey;ÖFKey;ÖFKeyıFKey->
pNextFrom
){

210 
j
;

211 
j
=0; j<
pFKey
->
nCﬁ
; j++){

212 if–
pFKey
->
aCﬁ
[
j
].
iFrom
==
iCﬁ
 ){

213 
zFau…
 = "foreign key";

219 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
){

220 
j
;

221 
j
=0; j<
pIdx
->
nKeyCﬁ
; j++){

223 if–
pIdx
->
aiCﬁumn
[
j
]==
iCﬁ
 ||ÖIdx->aiCﬁumn[j]==
XN_EXPR
 ){

224 
zFau…
 = "indexed";

228 if–
zFau…
 ){

229 
	`sqlôe3DbFªe
(
db
, 
zEº
);

230 
zEº
 = 
	`sqlôe3MPrötf
(
db
, "ˇ¬Ÿ o≥¿%†cﬁum¿f‹ wrôög", 
zFau…
);

231 
rc
 = 
SQLITE_ERROR
;

232 
	`sqlôe3BåìLóveAŒ
(
db
);

233 
blob_›í_out
;

237 
pBlob
->
pStmt
 = (
sqlôe3_°mt
 *)
	`sqlôe3VdbeCª©e
(
pP¨£
);

238 
	`as£π
–
pBlob
->
pStmt
 || 
db
->
mÆlocFaûed
 );

239 if–
pBlob
->
pStmt
 ){

256 c⁄° 
iLn
 = 
	`VDBE_OFFSET_LINENO
(2);

257 c⁄° 
VdbeOpLi°
 
›íBlob
[] = {

258 {
OP_TabÀLock
, 0, 0, 0},

259 {
OP_O≥nRód
, 0, 0, 0},

260 {
OP_V¨übÀ
, 1, 1, 0},

261 {
OP_NŸExi°s
, 0, 7, 1},

262 {
OP_Cﬁumn
, 0, 0, 1},

263 {
OP_Resu…Row
, 1, 0, 0},

264 {
OP_GŸo
, 0, 2, 0},

265 {
OP_HÆt
, 0, 0, 0},

267 
Vdbe
 *
v
 = (Vdbê*)
pBlob
->
pStmt
;

268 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pTab
->
pSchema
);

269 
VdbeOp
 *
aOp
;

271 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_Tønß˘i⁄
, 
iDb
, 
Êags
,

272 
pTab
->
pSchema
->
schema_cookõ
,

273 
pTab
->
pSchema
->
iGíî©i⁄
);

274 
	`sqlôe3VdbeCh™geP5
(
v
, 1);

275 
aOp
 = 
	`sqlôe3VdbeAddOpLi°
(
v
, 
	`AºaySize
(
›íBlob
), o≥nBlob, 
iLn
);

278 
	`sqlôe3VdbeU£sBåì
(
v
, 
iDb
);

280 if–
db
->
mÆlocFaûed
==0 ){

281 
	`as£π
–
aOp
!=0 );

283 #ifde‡
SQLITE_OMIT_SHARED_CACHE


284 
aOp
[0].
›code
 = 
OP_No›
;

286 
aOp
[0].
p1
 = 
iDb
;

287 
aOp
[0].
p2
 = 
pTab
->
äum
;

288 
aOp
[0].
p3
 = 
Êags
;

289 
	`sqlôe3VdbeCh™geP4
(
v
, 1, 
pTab
->
zName
, 
P4_TRANSIENT
);

291 if–
db
->
mÆlocFaûed
==0 ){

296 if–
Êags
 ) 
aOp
[1].
›code
 = 
OP_O≥nWrôe
;

297 
aOp
[1].
p2
 = 
pTab
->
äum
;

298 
aOp
[1].
p3
 = 
iDb
;

307 
aOp
[1].
p4ty≥
 = 
P4_INT32
;

308 
aOp
[1].
p4
.
i
 = 
pTab
->
nCﬁ
+1;

309 
aOp
[4].
p2
 = 
pTab
->
nCﬁ
;

311 
pP¨£
->
nV¨
 = 1;

312 
pP¨£
->
nMem
 = 1;

313 
pP¨£
->
nTab
 = 1;

314 
	`sqlôe3VdbeMakeRódy
(
v
, 
pP¨£
);

318 
pBlob
->
Êags
 = flags;

319 
pBlob
->
iCﬁ
 = iCol;

320 
pBlob
->
db
 = db;

321 
	`sqlôe3BåìLóveAŒ
(
db
);

322 if–
db
->
mÆlocFaûed
 ){

323 
blob_›í_out
;

325 
	`sqlôe3_böd_öt64
(
pBlob
->
pStmt
, 1, 
iRow
);

326 
rc
 = 
	`blobSìkToRow
(
pBlob
, 
iRow
, &
zEº
);

327 }  (++
nAâem±
)<
SQLITE_MAX_SCHEMA_RETRY
 && 
rc
==
SQLITE_SCHEMA
 );

329 
blob_›í_out
:

330 if–
rc
==
SQLITE_OK
 && 
db
->
mÆlocFaûed
==0 ){

331 *
µBlob
 = (
sqlôe3_blob
 *)
pBlob
;

333 if–
pBlob
 &&ÖBlob->
pStmt
 ) 
	`sqlôe3VdbeFöÆize
((
Vdbe
 *)pBlob->pStmt);

334 
	`sqlôe3DbFªe
(
db
, 
pBlob
);

336 
	`sqlôe3Eº‹WôhMsg
(
db
, 
rc
, (
zEº
 ? "%s" : 0), zErr);

337 
	`sqlôe3DbFªe
(
db
, 
zEº
);

338 
	`sqlôe3P¨£rRe£t
(
pP¨£
);

339 
	`sqlôe3SèckFªe
(
db
, 
pP¨£
);

340 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

341 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

342  
rc
;

343 
	}
}

349 
	$sqlôe3_blob_˛o£
(
sqlôe3_blob
 *
pBlob
){

350 
In¸blob
 *
p
 = (In¸blob *)
pBlob
;

351 
rc
;

352 
sqlôe3
 *
db
;

354 if–
p
 ){

355 
db
 = 
p
->db;

356 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

357 
rc
 = 
	`sqlôe3_föÆize
(
p
->
pStmt
);

358 
	`sqlôe3DbFªe
(
db
, 
p
);

359 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

361 
rc
 = 
SQLITE_OK
;

363  
rc
;

364 
	}
}

369 
	$blobRódWrôe
(

370 
sqlôe3_blob
 *
pBlob
,

371 *
z
,

372 
n
,

373 
iOff£t
,

374 (*
xCÆl
)(
BtCurs‹
*, 
u32
, u32, *)

376 
rc
;

377 
In¸blob
 *
p
 = (In¸blob *)
pBlob
;

378 
Vdbe
 *
v
;

379 
sqlôe3
 *
db
;

381 if–
p
==0 )  
SQLITE_MISUSE_BKPT
;

382 
db
 = 
p
->db;

383 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

384 
v
 = (
Vdbe
*)
p
->
pStmt
;

386 if–
n
<0 || 
iOff£t
<0 || ((
sqlôe3_öt64
)iOff£t+n)>
p
->
nByã
 ){

388 
rc
 = 
SQLITE_ERROR
;

389 }if–
v
==0 ){

393 
rc
 = 
SQLITE_ABORT
;

398 
	`as£π
–
db
 =
v
->db );

399 
	`sqlôe3BåìE¡îCurs‹
(
p
->
pC§
);

401 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


402 if–
xCÆl
==
sqlôe3BåìPutD©a
 && 
db
->
xPªUpd©eCÆlback
 ){

416 
sqlôe3_öt64
 
iKey
;

417 
iKey
 = 
	`sqlôe3BåìI¡egîKey
(
p
->
pC§
);

418 
	`sqlôe3VdbePªUpd©eHook
(

419 
v
, v->
≠C§
[0], 
SQLITE_DELETE
, 
p
->
zDb
,Ö->
pTab
, 
iKey
, -1

424 
rc
 = 
	`xCÆl
(
p
->
pC§
, 
iOff£t
+p->iOff£t, 
n
, 
z
);

425 
	`sqlôe3BåìLóveCurs‹
(
p
->
pC§
);

426 if–
rc
==
SQLITE_ABORT
 ){

427 
	`sqlôe3VdbeFöÆize
(
v
);

428 
p
->
pStmt
 = 0;

430 
v
->
rc
 =Ñc;

433 
	`sqlôe3Eº‹
(
db
, 
rc
);

434 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

435 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

436  
rc
;

437 
	}
}

442 
	$sqlôe3_blob_ªad
(
sqlôe3_blob
 *
pBlob
, *
z
, 
n
, 
iOff£t
){

443  
	`blobRódWrôe
(
pBlob
, 
z
, 
n
, 
iOff£t
, 
sqlôe3BåìPaylﬂdChecked
);

444 
	}
}

449 
	$sqlôe3_blob_wrôe
(
sqlôe3_blob
 *
pBlob
, c⁄° *
z
, 
n
, 
iOff£t
){

450  
	`blobRódWrôe
(
pBlob
, (*)
z
, 
n
, 
iOff£t
, 
sqlôe3BåìPutD©a
);

451 
	}
}

459 
	$sqlôe3_blob_byãs
(
sqlôe3_blob
 *
pBlob
){

460 
In¸blob
 *
p
 = (In¸blob *)
pBlob
;

461  (
p
 &&Ö->
pStmt
Ë?Ö->
nByã
 : 0;

462 
	}
}

474 
	$sqlôe3_blob_ª›í
(
sqlôe3_blob
 *
pBlob
, 
sqlôe3_öt64
 
iRow
){

475 
rc
;

476 
In¸blob
 *
p
 = (In¸blob *)
pBlob
;

477 
sqlôe3
 *
db
;

479 if–
p
==0 )  
SQLITE_MISUSE_BKPT
;

480 
db
 = 
p
->db;

481 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

483 if–
p
->
pStmt
==0 ){

487 
rc
 = 
SQLITE_ABORT
;

489 *
zEº
;

490 
rc
 = 
	`blobSìkToRow
(
p
, 
iRow
, &
zEº
);

491 if–
rc
!=
SQLITE_OK
 ){

492 
	`sqlôe3Eº‹WôhMsg
(
db
, 
rc
, (
zEº
 ? "%s" : 0), zErr);

493 
	`sqlôe3DbFªe
(
db
, 
zEº
);

495 
	`as£π
–
rc
!=
SQLITE_SCHEMA
 );

498 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

499 
	`as£π
–
rc
==
SQLITE_OK
 || 
p
->
pStmt
==0 );

500 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

501  
rc
;

502 
	}
}

	@vdbemem.c

18 
	~"sqlôeI¡.h
"

19 
	~"vdbeI¡.h
"

21 #ifde‡
SQLITE_DEBUG


28 
	$sqlôe3VdbeCheckMemInv¨ü¡s
(
Mem
 *
p
){

32 
	`as£π
–(
p
->
Êags
 & 
MEM_Dyn
)==0 ||Ö->
xDñ
!=0 );

38 
	`as£π
–(
p
->
Êags
 & 
MEM_Dyn
)==0 ||Ö->
szMÆloc
==0 );

41 
	`as£π
–(
p
->
Êags
 & (
MEM_I¡
|
MEM_Ról
))!=(MEM_Int|MEM_Real) );

44 
	`as£π
–
p
->
szMÆloc
==0

45 || 
p
->
szMÆloc
==
	`sqlôe3DbMÆlocSize
’->
db
,p->
zMÆloc
) );

55 if–(
p
->
Êags
 & (
MEM_Så
|
MEM_Blob
)Ë&&Ö->
n
>0 ){

56 
	`as£π
(

57 ((
p
->
szMÆloc
>0 &&Ö->
z
=ı->
zMÆloc
)? 1 : 0) +

58 ((
p
->
Êags
&
MEM_Dyn
)!=0 ? 1 : 0) +

59 ((
p
->
Êags
&
MEM_Ephem
)!=0 ? 1 : 0) +

60 ((
p
->
Êags
&
MEM_Sètic
)!=0 ? 1 : 0) == 1

64 
	}
}

81 
	$sqlôe3VdbeCh™geEncodög
(
Mem
 *
pMem
, 
desúedEnc
){

82 #i‚de‡
SQLITE_OMIT_UTF16


83 
rc
;

85 
	`as£π
–(
pMem
->
Êags
&
MEM_RowSë
)==0 );

86 
	`as£π
–
desúedEnc
==
SQLITE_UTF8
 || desúedEnc==
SQLITE_UTF16LE


87 || 
desúedEnc
==
SQLITE_UTF16BE
 );

88 if–!(
pMem
->
Êags
&
MEM_Så
Ë||ÖMem->
íc
==
desúedEnc
 ){

89  
SQLITE_OK
;

91 
	`as£π
–
pMem
->
db
==0 || 
	`sqlôe3_muãx_hñd
’Mem->db->
muãx
) );

92 #ifde‡
SQLITE_OMIT_UTF16


93  
SQLITE_ERROR
;

99 
rc
 = 
	`sqlôe3VdbeMemTøn¶©e
(
pMem
, (
u8
)
desúedEnc
);

100 
	`as£π
(
rc
==
SQLITE_OK
 ||Ñc==
SQLITE_NOMEM
);

101 
	`as£π
(
rc
==
SQLITE_OK
 || 
pMem
->
íc
!=
desúedEnc
);

102 
	`as£π
(
rc
==
SQLITE_NOMEM
 || 
pMem
->
íc
==
desúedEnc
);

103  
rc
;

105 
	}
}

116 
SQLITE_NOINLINE
 
	$sqlôe3VdbeMemGrow
(
Mem
 *
pMem
, 
n
, 
bPª£rve
){

117 
	`as£π
–
	`sqlôe3VdbeCheckMemInv¨ü¡s
(
pMem
) );

118 
	`as£π
–(
pMem
->
Êags
&
MEM_RowSë
)==0 );

119 
	`ã°ˇ£
–
pMem
->
db
==0 );

123 
	`as£π
–
bPª£rve
==0 || 
pMem
->
Êags
&(
MEM_Blob
|
MEM_Så
) );

124 
	`ã°ˇ£
–
bPª£rve
 && 
pMem
->
z
==0 );

126 
	`as£π
–
pMem
->
szMÆloc
==0

127 || 
pMem
->
szMÆloc
==
	`sqlôe3DbMÆlocSize
’Mem->
db
,ÖMem->
zMÆloc
) );

128 if–
pMem
->
szMÆloc
<
n
 ){

129 if–
n
<32 )Ç = 32;

130 if–
bPª£rve
 && 
pMem
->
szMÆloc
>0 &&ÖMem->
z
=ıMem->
zMÆloc
 ){

131 
pMem
->
z
 =ÖMem->
zMÆloc
 = 
	`sqlôe3DbRóŒocOrFªe
’Mem->
db
,ÖMem->z, 
n
);

132 
bPª£rve
 = 0;

134 if–
pMem
->
szMÆloc
>0 ) 
	`sqlôe3DbFªe
’Mem->
db
,ÖMem->
zMÆloc
);

135 
pMem
->
zMÆloc
 = 
	`sqlôe3DbMÆlocRaw
’Mem->
db
, 
n
);

137 if–
pMem
->
zMÆloc
==0 ){

138 
	`sqlôe3VdbeMemSëNuŒ
(
pMem
);

139 
pMem
->
z
 = 0;

140 
pMem
->
szMÆloc
 = 0;

141  
SQLITE_NOMEM_BKPT
;

143 
pMem
->
szMÆloc
 = 
	`sqlôe3DbMÆlocSize
’Mem->
db
,ÖMem->
zMÆloc
);

147 if–
bPª£rve
 && 
pMem
->
z
 &&ÖMem->z!ıMem->
zMÆloc
 ){

148 
	`mem˝y
(
pMem
->
zMÆloc
,ÖMem->
z
,ÖMem->
n
);

150 if–(
pMem
->
Êags
&
MEM_Dyn
)!=0 ){

151 
	`as£π
–
pMem
->
xDñ
!=0 &&ÖMem->xDñ!=
SQLITE_DYNAMIC
 );

152 
pMem
->
	`xDñ
((*)’Mem->
z
));

155 
pMem
->
z
 =ÖMem->
zMÆloc
;

156 
pMem
->
Êags
 &~(
MEM_Dyn
|
MEM_Ephem
|
MEM_Sètic
);

157  
SQLITE_OK
;

158 
	}
}

173 
	$sqlôe3VdbeMemCÀ¨AndResize
(
Mem
 *
pMem
, 
szNew
){

174 
	`as£π
–
szNew
>0 );

175 
	`as£π
–(
pMem
->
Êags
 & 
MEM_Dyn
)==0 ||ÖMem->
szMÆloc
==0 );

176 if–
pMem
->
szMÆloc
<
szNew
 ){

177  
	`sqlôe3VdbeMemGrow
(
pMem
, 
szNew
, 0);

179 
	`as£π
–(
pMem
->
Êags
 & 
MEM_Dyn
)==0 );

180 
pMem
->
z
 =ÖMem->
zMÆloc
;

181 
pMem
->
Êags
 &(
MEM_NuŒ
|
MEM_I¡
|
MEM_Ról
);

182  
SQLITE_OK
;

183 
	}
}

191 
	$sqlôe3VdbeMemMakeWrôóbÀ
(
Mem
 *
pMem
){

192 
	`as£π
–
pMem
->
db
==0 || 
	`sqlôe3_muãx_hñd
’Mem->db->
muãx
) );

193 
	`as£π
–(
pMem
->
Êags
&
MEM_RowSë
)==0 );

194 if–(
pMem
->
Êags
 & (
MEM_Så
|
MEM_Blob
))!=0 ){

195 if–
	`Ex∑ndBlob
(
pMem
ËË 
SQLITE_NOMEM
;

196 if–
pMem
->
szMÆloc
==0 ||ÖMem->
z
!ıMem->
zMÆloc
 ){

197 if–
	`sqlôe3VdbeMemGrow
(
pMem
,ÖMem->
n
 + 2, 1) ){

198  
SQLITE_NOMEM_BKPT
;

200 
pMem
->
z
[pMem->
n
] = 0;

201 
pMem
->
z
[pMem->
n
+1] = 0;

202 
pMem
->
Êags
 |
MEM_Tîm
;

205 
pMem
->
Êags
 &~
MEM_Ephem
;

206 #ifde‡
SQLITE_DEBUG


207 
pMem
->
pSc›yFrom
 = 0;

210  
SQLITE_OK
;

211 
	}
}

217 #i‚de‡
SQLITE_OMIT_INCRBLOB


218 
	$sqlôe3VdbeMemEx∑ndBlob
(
Mem
 *
pMem
){

219 
nByã
;

220 
	`as£π
–
pMem
->
Êags
 & 
MEM_Zîo
 );

221 
	`as£π
–
pMem
->
Êags
&
MEM_Blob
 );

222 
	`as£π
–(
pMem
->
Êags
&
MEM_RowSë
)==0 );

223 
	`as£π
–
pMem
->
db
==0 || 
	`sqlôe3_muãx_hñd
’Mem->db->
muãx
) );

226 
nByã
 = 
pMem
->
n
 +ÖMem->
u
.
nZîo
;

227 if–
nByã
<=0 ){

228 
nByã
 = 1;

230 if–
	`sqlôe3VdbeMemGrow
(
pMem
, 
nByã
, 1) ){

231  
SQLITE_NOMEM_BKPT
;

234 
	`mem£t
(&
pMem
->
z
[pMem->
n
], 0,ÖMem->
u
.
nZîo
);

235 
pMem
->
n
 +pMem->
u
.
nZîo
;

236 
pMem
->
Êags
 &~(
MEM_Zîo
|
MEM_Tîm
);

237  
SQLITE_OK
;

238 
	}
}

245 
SQLITE_NOINLINE
 
	$vdbeMemAddTîmö©‹
(
Mem
 *
pMem
){

246 if–
	`sqlôe3VdbeMemGrow
(
pMem
,ÖMem->
n
+2, 1) ){

247  
SQLITE_NOMEM_BKPT
;

249 
pMem
->
z
[pMem->
n
] = 0;

250 
pMem
->
z
[pMem->
n
+1] = 0;

251 
pMem
->
Êags
 |
MEM_Tîm
;

252  
SQLITE_OK
;

253 
	}
}

258 
	$sqlôe3VdbeMemNulTîmö©e
(
Mem
 *
pMem
){

259 
	`as£π
–
pMem
->
db
==0 || 
	`sqlôe3_muãx_hñd
’Mem->db->
muãx
) );

260 
	`ã°ˇ£
–(
pMem
->
Êags
 & (
MEM_Tîm
|
MEM_Så
))==(MEM_Term|MEM_Str) );

261 
	`ã°ˇ£
–(
pMem
->
Êags
 & (
MEM_Tîm
|
MEM_Så
))==0 );

262 if–(
pMem
->
Êags
 & (
MEM_Tîm
|
MEM_Så
))!=MEM_Str ){

263  
SQLITE_OK
;

265  
	`vdbeMemAddTîmö©‹
(
pMem
);

267 
	}
}

283 
	$sqlôe3VdbeMemSåögify
(
Mem
 *
pMem
, 
u8
 
íc
, u8 
bF‹˚
){

284 
fg
 = 
pMem
->
Êags
;

285 c⁄° 
nByã
 = 32;

287 
	`as£π
–
pMem
->
db
==0 || 
	`sqlôe3_muãx_hñd
’Mem->db->
muãx
) );

288 
	`as£π
–!(
fg
&
MEM_Zîo
) );

289 
	`as£π
–!(
fg
&(
MEM_Så
|
MEM_Blob
)) );

290 
	`as£π
–
fg
&(
MEM_I¡
|
MEM_Ról
) );

291 
	`as£π
–(
pMem
->
Êags
&
MEM_RowSë
)==0 );

292 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(
pMem
) );

295 if–
	`sqlôe3VdbeMemCÀ¨AndResize
(
pMem
, 
nByã
) ){

296 
pMem
->
íc
 = 0;

297  
SQLITE_NOMEM_BKPT
;

306 if–
fg
 & 
MEM_I¡
 ){

307 
	`sqlôe3_¢¥ötf
(
nByã
, 
pMem
->
z
, "%Œd",ÖMem->
u
.
i
);

309 
	`as£π
–
fg
 & 
MEM_Ról
 );

310 
	`sqlôe3_¢¥ötf
(
nByã
, 
pMem
->
z
, "%!.15g",ÖMem->
u
.
r
);

312 
pMem
->
n
 = 
	`sqlôe3SåÀn30
’Mem->
z
);

313 
pMem
->
íc
 = 
SQLITE_UTF8
;

314 
pMem
->
Êags
 |
MEM_Så
|
MEM_Tîm
;

315 if–
bF‹˚
 ) 
pMem
->
Êags
 &~(
MEM_I¡
|
MEM_Ról
);

316 
	`sqlôe3VdbeCh™geEncodög
(
pMem
, 
íc
);

317  
SQLITE_OK
;

318 
	}
}

328 
	$sqlôe3VdbeMemFöÆize
(
Mem
 *
pMem
, 
FuncDef
 *
pFunc
){

329 
rc
 = 
SQLITE_OK
;

330 if–
	`ALWAYS
(
pFunc
 &&ÖFunc->
xFöÆize
) ){

331 
sqlôe3_c⁄ãxt
 
˘x
;

332 
Mem
 
t
;

333 
	`as£π
–(
pMem
->
Êags
 & 
MEM_NuŒ
)!=0 || 
pFunc
=ıMem->
u
.
pDef
 );

334 
	`as£π
–
pMem
->
db
==0 || 
	`sqlôe3_muãx_hñd
’Mem->db->
muãx
) );

335 
	`mem£t
(&
˘x
, 0, (ctx));

336 
	`mem£t
(&
t
, 0, (t));

337 
t
.
Êags
 = 
MEM_NuŒ
;

338 
t
.
db
 = 
pMem
->db;

339 
˘x
.
pOut
 = &
t
;

340 
˘x
.
pMem
 =ÖMem;

341 
˘x
.
pFunc
 =ÖFunc;

342 
pFunc
->
	`xFöÆize
(&
˘x
);

343 
	`as£π
–(
pMem
->
Êags
 & 
MEM_Dyn
)==0 );

344 if–
pMem
->
szMÆloc
>0 ) 
	`sqlôe3DbFªe
’Mem->
db
,ÖMem->
zMÆloc
);

345 
	`mem˝y
(
pMem
, &
t
, (t));

346 
rc
 = 
˘x
.
isEº‹
;

348  
rc
;

349 
	}
}

360 
SQLITE_NOINLINE
 
	$vdbeMemCÀ¨Exã∫AndSëNuŒ
(
Mem
 *
p
){

361 
	`as£π
–
p
->
db
==0 || 
	`sqlôe3_muãx_hñd
’->db->
muãx
) );

362 
	`as£π
–
	`VdbeMemDy«mic
(
p
) );

363 if–
p
->
Êags
&
MEM_Agg
 ){

364 
	`sqlôe3VdbeMemFöÆize
(
p
,Ö->
u
.
pDef
);

365 
	`as£π
–(
p
->
Êags
 & 
MEM_Agg
)==0 );

366 
	`ã°ˇ£
–
p
->
Êags
 & 
MEM_Dyn
 );

368 if–
p
->
Êags
&
MEM_Dyn
 ){

369 
	`as£π
–(
p
->
Êags
&
MEM_RowSë
)==0 );

370 
	`as£π
–
p
->
xDñ
!=
SQLITE_DYNAMIC
 &&Ö->xDel!=0 );

371 
p
->
	`xDñ
((*Ì->
z
);

372 }if–
p
->
Êags
&
MEM_RowSë
 ){

373 
	`sqlôe3RowSëCÀ¨
(
p
->
u
.
pRowSë
);

374 }if–
p
->
Êags
&
MEM_Føme
 ){

375 
VdbeFøme
 *
pFøme
 = 
p
->
u
.pFrame;

376 
pFøme
->
pP¨ít
 =ÖFøme->
v
->
pDñFøme
;

377 
pFøme
->
v
->
pDñFøme
 =ÖFrame;

379 
p
->
Êags
 = 
MEM_NuŒ
;

380 
	}
}

390 
SQLITE_NOINLINE
 
	$vdbeMemCÀ¨
(
Mem
 *
p
){

391 if–
	`VdbeMemDy«mic
(
p
) ){

392 
	`vdbeMemCÀ¨Exã∫AndSëNuŒ
(
p
);

394 if–
p
->
szMÆloc
 ){

395 
	`sqlôe3DbFªe
(
p
->
db
,Ö->
zMÆloc
);

396 
p
->
szMÆloc
 = 0;

398 
p
->
z
 = 0;

399 
	}
}

411 
	$sqlôe3VdbeMemRñó£
(
Mem
 *
p
){

412 
	`as£π
–
	`sqlôe3VdbeCheckMemInv¨ü¡s
(
p
) );

413 if–
	`VdbeMemDy«mic
(
p
Ë||Ö->
szMÆloc
 ){

414 
	`vdbeMemCÀ¨
(
p
);

416 
	}
}

423 
i64
 
	$doubÀToI¡64
(
r
){

424 #ifde‡
SQLITE_OMIT_FLOATING_POINT


426  
r
;

435 c⁄° 
i64
 
maxI¡
 = 
LARGEST_INT64
;

436 c⁄° 
i64
 
möI¡
 = 
SMALLEST_INT64
;

438 if–
r
<=()
möI¡
 ){

439  
möI¡
;

440 }if–
r
>=()
maxI¡
 ){

441  
maxI¡
;

443  (
i64
)
r
;

446 
	}
}

459 
i64
 
	$sqlôe3VdbeI¡VÆue
(
Mem
 *
pMem
){

460 
Êags
;

461 
	`as£π
–
pMem
->
db
==0 || 
	`sqlôe3_muãx_hñd
’Mem->db->
muãx
) );

462 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(
pMem
) );

463 
Êags
 = 
pMem
->flags;

464 if–
Êags
 & 
MEM_I¡
 ){

465  
pMem
->
u
.
i
;

466 }if–
Êags
 & 
MEM_Ról
 ){

467  
	`doubÀToI¡64
(
pMem
->
u
.
r
);

468 }if–
Êags
 & (
MEM_Så
|
MEM_Blob
) ){

469 
i64
 
vÆue
 = 0;

470 
	`as£π
–
pMem
->
z
 ||ÖMem->
n
==0 );

471 
	`sqlôe3Atoi64
(
pMem
->
z
, &
vÆue
,ÖMem->
n
,ÖMem->
íc
);

472  
vÆue
;

476 
	}
}

484 
	$sqlôe3VdbeRólVÆue
(
Mem
 *
pMem
){

485 
	`as£π
–
pMem
->
db
==0 || 
	`sqlôe3_muãx_hñd
’Mem->db->
muãx
) );

486 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(
pMem
) );

487 if–
pMem
->
Êags
 & 
MEM_Ról
 ){

488  
pMem
->
u
.
r
;

489 }if–
pMem
->
Êags
 & 
MEM_I¡
 ){

490  ()
pMem
->
u
.
i
;

491 }if–
pMem
->
Êags
 & (
MEM_Så
|
MEM_Blob
) ){

493 
vÆ
 = ()0;

494 
	`sqlôe3AtoF
(
pMem
->
z
, &
vÆ
,ÖMem->
n
,ÖMem->
íc
);

495  
vÆ
;

500 
	}
}

506 
	$sqlôe3VdbeI¡egîAfföôy
(
Mem
 *
pMem
){

507 
i64
 
ix
;

508 
	`as£π
–
pMem
->
Êags
 & 
MEM_Ról
 );

509 
	`as£π
–(
pMem
->
Êags
 & 
MEM_RowSë
)==0 );

510 
	`as£π
–
pMem
->
db
==0 || 
	`sqlôe3_muãx_hñd
’Mem->db->
muãx
) );

511 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(
pMem
) );

513 
ix
 = 
	`doubÀToI¡64
(
pMem
->
u
.
r
);

525 if–
pMem
->
u
.
r
==
ix
 && ix>
SMALLEST_INT64
 && ix<
LARGEST_INT64
 ){

526 
pMem
->
u
.
i
 = 
ix
;

527 
	`MemSëTy≥Fœg
(
pMem
, 
MEM_I¡
);

529 
	}
}

534 
	$sqlôe3VdbeMemI¡egîify
(
Mem
 *
pMem
){

535 
	`as£π
–
pMem
->
db
==0 || 
	`sqlôe3_muãx_hñd
’Mem->db->
muãx
) );

536 
	`as£π
–(
pMem
->
Êags
 & 
MEM_RowSë
)==0 );

537 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(
pMem
) );

539 
pMem
->
u
.
i
 = 
	`sqlôe3VdbeI¡VÆue
(pMem);

540 
	`MemSëTy≥Fœg
(
pMem
, 
MEM_I¡
);

541  
SQLITE_OK
;

542 
	}
}

548 
	$sqlôe3VdbeMemRólify
(
Mem
 *
pMem
){

549 
	`as£π
–
pMem
->
db
==0 || 
	`sqlôe3_muãx_hñd
’Mem->db->
muãx
) );

550 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(
pMem
) );

552 
pMem
->
u
.
r
 = 
	`sqlôe3VdbeRólVÆue
(pMem);

553 
	`MemSëTy≥Fœg
(
pMem
, 
MEM_Ról
);

554  
SQLITE_OK
;

555 
	}
}

565 
	$sqlôe3VdbeMemNumîify
(
Mem
 *
pMem
){

566 if–(
pMem
->
Êags
 & (
MEM_I¡
|
MEM_Ról
|
MEM_NuŒ
))==0 ){

567 
	`as£π
–(
pMem
->
Êags
 & (
MEM_Blob
|
MEM_Så
))!=0 );

568 
	`as£π
–
pMem
->
db
==0 || 
	`sqlôe3_muãx_hñd
’Mem->db->
muãx
) );

569 if–0==
	`sqlôe3Atoi64
(
pMem
->
z
, &pMem->
u
.
i
,ÖMem->
n
,ÖMem->
íc
) ){

570 
	`MemSëTy≥Fœg
(
pMem
, 
MEM_I¡
);

572 
pMem
->
u
.
r
 = 
	`sqlôe3VdbeRólVÆue
(pMem);

573 
	`MemSëTy≥Fœg
(
pMem
, 
MEM_Ról
);

574 
	`sqlôe3VdbeI¡egîAfföôy
(
pMem
);

577 
	`as£π
–(
pMem
->
Êags
 & (
MEM_I¡
|
MEM_Ról
|
MEM_NuŒ
))!=0 );

578 
pMem
->
Êags
 &~(
MEM_Så
|
MEM_Blob
|
MEM_Zîo
);

579  
SQLITE_OK
;

580 
	}
}

589 
	$sqlôe3VdbeMemCa°
(
Mem
 *
pMem
, 
u8
 
aff
, u8 
ícodög
){

590 if–
pMem
->
Êags
 & 
MEM_NuŒ
 ) ;

591  
aff
 ){

592 
SQLITE_AFF_BLOB
: {

593 if–(
pMem
->
Êags
 & 
MEM_Blob
)==0 ){

594 
	`sqlôe3VÆueAµlyAfföôy
(
pMem
, 
SQLITE_AFF_TEXT
, 
ícodög
);

595 
	`as£π
–
pMem
->
Êags
 & 
MEM_Så
 ||ÖMem->
db
->
mÆlocFaûed
 );

596 if–
pMem
->
Êags
 & 
MEM_Så
 ) 
	`MemSëTy≥Fœg
’Mem, 
MEM_Blob
);

598 
pMem
->
Êags
 &~(
MEM_Ty≥Mask
&~
MEM_Blob
);

602 
SQLITE_AFF_NUMERIC
: {

603 
	`sqlôe3VdbeMemNumîify
(
pMem
);

606 
SQLITE_AFF_INTEGER
: {

607 
	`sqlôe3VdbeMemI¡egîify
(
pMem
);

610 
SQLITE_AFF_REAL
: {

611 
	`sqlôe3VdbeMemRólify
(
pMem
);

615 
	`as£π
–
aff
==
SQLITE_AFF_TEXT
 );

616 
	`as£π
–
MEM_Så
==(
MEM_Blob
>>3) );

617 
pMem
->
Êags
 |’Mem->Êags&
MEM_Blob
)>>3;

618 
	`sqlôe3VÆueAµlyAfföôy
(
pMem
, 
SQLITE_AFF_TEXT
, 
ícodög
);

619 
	`as£π
–
pMem
->
Êags
 & 
MEM_Så
 ||ÖMem->
db
->
mÆlocFaûed
 );

620 
pMem
->
Êags
 &~(
MEM_I¡
|
MEM_Ról
|
MEM_Blob
|
MEM_Zîo
);

624 
	}
}

631 
	$sqlôe3VdbeMemInô
(
Mem
 *
pMem
, 
sqlôe3
 *
db
, 
u16
 
Êags
){

632 
	`as£π
–(
Êags
 & ~
MEM_Ty≥Mask
)==0 );

633 
pMem
->
Êags
 = flags;

634 
pMem
->
db
 = db;

635 
pMem
->
szMÆloc
 = 0;

636 
	}
}

651 
	$sqlôe3VdbeMemSëNuŒ
(
Mem
 *
pMem
){

652 if–
	`VdbeMemDy«mic
(
pMem
) ){

653 
	`vdbeMemCÀ¨Exã∫AndSëNuŒ
(
pMem
);

655 
pMem
->
Êags
 = 
MEM_NuŒ
;

657 
	}
}

658 
	$sqlôe3VÆueSëNuŒ
(
sqlôe3_vÆue
 *
p
){

659 
	`sqlôe3VdbeMemSëNuŒ
((
Mem
*)
p
);

660 
	}
}

666 
	$sqlôe3VdbeMemSëZîoBlob
(
Mem
 *
pMem
, 
n
){

667 
	`sqlôe3VdbeMemRñó£
(
pMem
);

668 
pMem
->
Êags
 = 
MEM_Blob
|
MEM_Zîo
;

669 
pMem
->
n
 = 0;

670 if–
n
<0 )Ç = 0;

671 
pMem
->
u
.
nZîo
 = 
n
;

672 
pMem
->
íc
 = 
SQLITE_UTF8
;

673 
pMem
->
z
 = 0;

674 
	}
}

681 
SQLITE_NOINLINE
 
	$vdbeRñó£AndSëI¡64
(
Mem
 *
pMem
, 
i64
 
vÆ
){

682 
	`sqlôe3VdbeMemSëNuŒ
(
pMem
);

683 
pMem
->
u
.
i
 = 
vÆ
;

684 
pMem
->
Êags
 = 
MEM_I¡
;

685 
	}
}

691 
	$sqlôe3VdbeMemSëI¡64
(
Mem
 *
pMem
, 
i64
 
vÆ
){

692 if–
	`VdbeMemDy«mic
(
pMem
) ){

693 
	`vdbeRñó£AndSëI¡64
(
pMem
, 
vÆ
);

695 
pMem
->
u
.
i
 = 
vÆ
;

696 
pMem
->
Êags
 = 
MEM_I¡
;

698 
	}
}

700 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


705 
	$sqlôe3VdbeMemSëDoubÀ
(
Mem
 *
pMem
, 
vÆ
){

706 
	`sqlôe3VdbeMemSëNuŒ
(
pMem
);

707 if–!
	`sqlôe3IsNaN
(
vÆ
) ){

708 
pMem
->
u
.
r
 = 
vÆ
;

709 
pMem
->
Êags
 = 
MEM_Ról
;

711 
	}
}

718 
	$sqlôe3VdbeMemSëRowSë
(
Mem
 *
pMem
){

719 
sqlôe3
 *
db
 = 
pMem
->db;

720 
	`as£π
–
db
!=0 );

721 
	`as£π
–(
pMem
->
Êags
 & 
MEM_RowSë
)==0 );

722 
	`sqlôe3VdbeMemRñó£
(
pMem
);

723 
pMem
->
zMÆloc
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, 64);

724 if–
db
->
mÆlocFaûed
 ){

725 
pMem
->
Êags
 = 
MEM_NuŒ
;

726 
pMem
->
szMÆloc
 = 0;

728 
	`as£π
–
pMem
->
zMÆloc
 );

729 
pMem
->
szMÆloc
 = 
	`sqlôe3DbMÆlocSize
(
db
,ÖMem->
zMÆloc
);

730 
pMem
->
u
.
pRowSë
 = 
	`sqlôe3RowSëInô
(
db
,ÖMem->
zMÆloc
,ÖMem->
szMÆloc
);

731 
	`as£π
–
pMem
->
u
.
pRowSë
!=0 );

732 
pMem
->
Êags
 = 
MEM_RowSë
;

734 
	}
}

740 
	$sqlôe3VdbeMemTooBig
(
Mem
 *
p
){

741 
	`as£π
–
p
->
db
!=0 );

742 if–
p
->
Êags
 & (
MEM_Så
|
MEM_Blob
) ){

743 
n
 = 
p
->n;

744 if–
p
->
Êags
 & 
MEM_Zîo
 ){

745 
n
 +
p
->
u
.
nZîo
;

747  
n
>
p
->
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
];

750 
	}
}

752 #ifde‡
SQLITE_DEBUG


761 
	$sqlôe3VdbeMemAboutToCh™ge
(
Vdbe
 *
pVdbe
, 
Mem
 *
pMem
){

762 
i
;

763 
Mem
 *
pX
;

764 
i
=0, 
pX
=
pVdbe
->
aMem
; i<pVdbe->
nMem
; i++,ÖX++){

765 if–
pX
->
pSc›yFrom
==
pMem
 ){

766 
pX
->
Êags
 |
MEM_Undeföed
;

767 
pX
->
pSc›yFrom
 = 0;

770 
pMem
->
pSc›yFrom
 = 0;

771 
	}
}

781 
SQLITE_NOINLINE
 
	$vdbeCÃC›y
(
Mem
 *
pTo
, c⁄° Mem *
pFrom
, 
eTy≥
){

782 
	`vdbeMemCÀ¨Exã∫AndSëNuŒ
(
pTo
);

783 
	`as£π
–!
	`VdbeMemDy«mic
(
pTo
) );

784 
	`sqlôe3VdbeMemShÆlowC›y
(
pTo
, 
pFrom
, 
eTy≥
);

785 
	}
}

786 
	$sqlôe3VdbeMemShÆlowC›y
(
Mem
 *
pTo
, c⁄° Mem *
pFrom
, 
§cTy≥
){

787 
	`as£π
–(
pFrom
->
Êags
 & 
MEM_RowSë
)==0 );

788 
	`as£π
–
pTo
->
db
==
pFrom
->db );

789 if–
	`VdbeMemDy«mic
(
pTo
Ë){ 
	`vdbeCÃC›y
’To,
pFrom
,
§cTy≥
); ; }

790 
	`mem˝y
(
pTo
, 
pFrom
, 
MEMCELLSIZE
);

791 if–(
pFrom
->
Êags
&
MEM_Sètic
)==0 ){

792 
pTo
->
Êags
 &~(
MEM_Dyn
|
MEM_Sètic
|
MEM_Ephem
);

793 
	`as£π
–
§cTy≥
==
MEM_Ephem
 || srcTy≥==
MEM_Sètic
 );

794 
pTo
->
Êags
 |
§cTy≥
;

796 
	}
}

802 
	$sqlôe3VdbeMemC›y
(
Mem
 *
pTo
, c⁄° Mem *
pFrom
){

803 
rc
 = 
SQLITE_OK
;

805 
	`as£π
–(
pFrom
->
Êags
 & 
MEM_RowSë
)==0 );

806 if–
	`VdbeMemDy«mic
(
pTo
ËË
	`vdbeMemCÀ¨Exã∫AndSëNuŒ
(pTo);

807 
	`mem˝y
(
pTo
, 
pFrom
, 
MEMCELLSIZE
);

808 
pTo
->
Êags
 &~
MEM_Dyn
;

809 if–
pTo
->
Êags
&(
MEM_Så
|
MEM_Blob
) ){

810 if–0==(
pFrom
->
Êags
&
MEM_Sètic
) ){

811 
pTo
->
Êags
 |
MEM_Ephem
;

812 
rc
 = 
	`sqlôe3VdbeMemMakeWrôóbÀ
(
pTo
);

816  
rc
;

817 
	}
}

825 
	$sqlôe3VdbeMemMove
(
Mem
 *
pTo
, Mem *
pFrom
){

826 
	`as£π
–
pFrom
->
db
==0 || 
	`sqlôe3_muãx_hñd
’From->db->
muãx
) );

827 
	`as£π
–
pTo
->
db
==0 || 
	`sqlôe3_muãx_hñd
’To->db->
muãx
) );

828 
	`as£π
–
pFrom
->
db
==0 || 
pTo
->db==0 ||ÖFrom->db==pTo->db );

830 
	`sqlôe3VdbeMemRñó£
(
pTo
);

831 
	`mem˝y
(
pTo
, 
pFrom
, (
Mem
));

832 
pFrom
->
Êags
 = 
MEM_NuŒ
;

833 
pFrom
->
szMÆloc
 = 0;

834 
	}
}

851 
	$sqlôe3VdbeMemSëSå
(

852 
Mem
 *
pMem
,

853 c⁄° *
z
,

854 
n
,

855 
u8
 
íc
,

856 (*
xDñ
)(*)

858 
nByã
 = 
n
;

859 
iLimô
;

860 
u16
 
Êags
 = 0;

862 
	`as£π
–
pMem
->
db
==0 || 
	`sqlôe3_muãx_hñd
’Mem->db->
muãx
) );

863 
	`as£π
–(
pMem
->
Êags
 & 
MEM_RowSë
)==0 );

866 if–!
z
 ){

867 
	`sqlôe3VdbeMemSëNuŒ
(
pMem
);

868  
SQLITE_OK
;

871 if–
pMem
->
db
 ){

872 
iLimô
 = 
pMem
->
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
];

874 
iLimô
 = 
SQLITE_MAX_LENGTH
;

876 
Êags
 = (
íc
==0?
MEM_Blob
:
MEM_Så
);

877 if–
nByã
<0 ){

878 
	`as£π
–
íc
!=0 );

879 if–
íc
==
SQLITE_UTF8
 ){

880 
nByã
 = 
	`sqlôe3SåÀn30
(
z
);

881 if–
nByã
>
iLimô
 )ÇByte = iLimit+1;

883 
nByã
=0;ÇByã<=
iLimô
 && (
z
[nByte] | z[nByte+1]);ÇByte+=2){}

885 
Êags
 |
MEM_Tîm
;

892 if–
xDñ
==
SQLITE_TRANSIENT
 ){

893 
nAŒoc
 = 
nByã
;

894 if–
Êags
&
MEM_Tîm
 ){

895 
nAŒoc
 +(
íc
==
SQLITE_UTF8
?1:2);

897 if–
nByã
>
iLimô
 ){

898  
SQLITE_TOOBIG
;

900 
	`ã°ˇ£
–
nAŒoc
==0 );

901 
	`ã°ˇ£
–
nAŒoc
==31 );

902 
	`ã°ˇ£
–
nAŒoc
==32 );

903 if–
	`sqlôe3VdbeMemCÀ¨AndResize
(
pMem
, 
	`MAX
(
nAŒoc
,32)) ){

904  
SQLITE_NOMEM_BKPT
;

906 
	`mem˝y
(
pMem
->
z
, z, 
nAŒoc
);

907 }if–
xDñ
==
SQLITE_DYNAMIC
 ){

908 
	`sqlôe3VdbeMemRñó£
(
pMem
);

909 
pMem
->
zMÆloc
 =ÖMem->
z
 = (*)z;

910 
pMem
->
szMÆloc
 = 
	`sqlôe3DbMÆlocSize
’Mem->
db
,ÖMem->
zMÆloc
);

912 
	`sqlôe3VdbeMemRñó£
(
pMem
);

913 
pMem
->
z
 = (*)z;

914 
pMem
->
xDñ
 = xDel;

915 
Êags
 |((
xDñ
==
SQLITE_STATIC
)?
MEM_Sètic
:
MEM_Dyn
);

918 
pMem
->
n
 = 
nByã
;

919 
pMem
->
Êags
 = flags;

920 
pMem
->
íc
 = (íc==0 ? 
SQLITE_UTF8
 :Énc);

922 #i‚de‡
SQLITE_OMIT_UTF16


923 if–
pMem
->
íc
!=
SQLITE_UTF8
 && 
	`sqlôe3VdbeMemH™dÀBom
(pMem) ){

924  
SQLITE_NOMEM_BKPT
;

928 if–
nByã
>
iLimô
 ){

929  
SQLITE_TOOBIG
;

932  
SQLITE_OK
;

933 
	}
}

950 
SQLITE_NOINLINE
 
	$vdbeMemFromBåìResize
(

951 
BtCurs‹
 *
pCur
,

952 
u32
 
off£t
,

953 
u32
 
amt
,

954 
Mem
 *
pMem


956 
rc
;

957 
pMem
->
Êags
 = 
MEM_NuŒ
;

958 if–
SQLITE_OK
==(
rc
 = 
	`sqlôe3VdbeMemCÀ¨AndResize
(
pMem
, 
amt
+2)) ){

959 
rc
 = 
	`sqlôe3BåìPaylﬂd
(
pCur
, 
off£t
, 
amt
, 
pMem
->
z
);

960 if–
rc
==
SQLITE_OK
 ){

961 
pMem
->
z
[
amt
] = 0;

962 
pMem
->
z
[
amt
+1] = 0;

963 
pMem
->
Êags
 = 
MEM_Blob
|
MEM_Tîm
;

964 
pMem
->
n
 = ()
amt
;

966 
	`sqlôe3VdbeMemRñó£
(
pMem
);

969  
rc
;

970 
	}
}

971 
	$sqlôe3VdbeMemFromBåì
(

972 
BtCurs‹
 *
pCur
,

973 
u32
 
off£t
,

974 
u32
 
amt
,

975 
Mem
 *
pMem


977 *
zD©a
;

978 
u32
 
avaûabÀ
 = 0;

979 
rc
 = 
SQLITE_OK
;

981 
	`as£π
–
	`sqlôe3BåìCurs‹IsVÆid
(
pCur
) );

982 
	`as£π
–!
	`VdbeMemDy«mic
(
pMem
) );

986 
	`as£π
–(
pMem
->
Êags
 & 
MEM_RowSë
)==0 );

987 
zD©a
 = (*)
	`sqlôe3BåìPaylﬂdFëch
(
pCur
, &
avaûabÀ
);

988 
	`as£π
–
zD©a
!=0 );

990 if–
off£t
+
amt
<=
avaûabÀ
 ){

991 
pMem
->
z
 = &
zD©a
[
off£t
];

992 
pMem
->
Êags
 = 
MEM_Blob
|
MEM_Ephem
;

993 
pMem
->
n
 = ()
amt
;

995 
rc
 = 
	`vdbeMemFromBåìResize
(
pCur
, 
off£t
, 
amt
, 
pMem
);

998  
rc
;

999 
	}
}

1006 
SQLITE_NOINLINE
 c⁄° *
	$vÆueToText
(
sqlôe3_vÆue
* 
pVÆ
, 
u8
 
íc
){

1007 
	`as£π
–
pVÆ
!=0 );

1008 
	`as£π
–
pVÆ
->
db
==0 || 
	`sqlôe3_muãx_hñd
’VÆ->db->
muãx
) );

1009 
	`as£π
–(
íc
&3)==”nc&~
SQLITE_UTF16_ALIGNED
) );

1010 
	`as£π
–(
pVÆ
->
Êags
 & 
MEM_RowSë
)==0 );

1011 
	`as£π
–(
pVÆ
->
Êags
 & (
MEM_NuŒ
))==0 );

1012 if–
pVÆ
->
Êags
 & (
MEM_Blob
|
MEM_Så
) ){

1013 
pVÆ
->
Êags
 |
MEM_Så
;

1014 if–
pVÆ
->
íc
 !”n¯& ~
SQLITE_UTF16_ALIGNED
) ){

1015 
	`sqlôe3VdbeCh™geEncodög
(
pVÆ
, 
íc
 & ~
SQLITE_UTF16_ALIGNED
);

1017 if–(
íc
 & 
SQLITE_UTF16_ALIGNED
)!=0 && 1==(1&
	`SQLITE_PTR_TO_INT
(
pVÆ
->
z
)) ){

1018 
	`as£π
–(
pVÆ
->
Êags
 & (
MEM_Ephem
|
MEM_Sètic
))!=0 );

1019 if–
	`sqlôe3VdbeMemMakeWrôóbÀ
(
pVÆ
)!=
SQLITE_OK
 ){

1023 
	`sqlôe3VdbeMemNulTîmö©e
(
pVÆ
);

1025 
	`sqlôe3VdbeMemSåögify
(
pVÆ
, 
íc
, 0);

1026 
	`as£π
–0==(1&
	`SQLITE_PTR_TO_INT
(
pVÆ
->
z
)) );

1028 
	`as£π
(
pVÆ
->
íc
==”n¯& ~
SQLITE_UTF16_ALIGNED
Ë||ÖVÆ->
db
==0

1029 || 
pVÆ
->
db
->
mÆlocFaûed
 );

1030 if–
pVÆ
->
íc
==”n¯& ~
SQLITE_UTF16_ALIGNED
) ){

1031  
pVÆ
->
z
;

1035 
	}
}

1047 c⁄° *
	$sqlôe3VÆueText
(
sqlôe3_vÆue
* 
pVÆ
, 
u8
 
íc
){

1048 if–!
pVÆ
 )  0;

1049 
	`as£π
–
pVÆ
->
db
==0 || 
	`sqlôe3_muãx_hñd
’VÆ->db->
muãx
) );

1050 
	`as£π
–(
íc
&3)==”nc&~
SQLITE_UTF16_ALIGNED
) );

1051 
	`as£π
–(
pVÆ
->
Êags
 & 
MEM_RowSë
)==0 );

1052 if–(
pVÆ
->
Êags
&(
MEM_Så
|
MEM_Tîm
))==(MEM_Så|MEM_TîmË&&ÖVÆ->
íc
==enc ){

1053  
pVÆ
->
z
;

1055 if–
pVÆ
->
Êags
&
MEM_NuŒ
 ){

1058  
	`vÆueToText
(
pVÆ
, 
íc
);

1059 
	}
}

1064 
sqlôe3_vÆue
 *
	$sqlôe3VÆueNew
(
sqlôe3
 *
db
){

1065 
Mem
 *
p
 = 
	`sqlôe3DbMÆlocZîo
(
db
, (*p));

1066 if–
p
 ){

1067 
p
->
Êags
 = 
MEM_NuŒ
;

1068 
p
->
db
 = db;

1070  
p
;

1071 
	}
}

1077 
	sVÆueNewSèt4Ctx
 {

1078 
P¨£
 *
	mpP¨£
;

1079 
Index
 *
	mpIdx
;

1080 
U≈ackedRec‹d
 **
	mµRec
;

1081 
	miVÆ
;

1095 
sqlôe3_vÆue
 *
	$vÆueNew
(
sqlôe3
 *
db
, 
VÆueNewSèt4Ctx
 *
p
){

1096 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1097 if–
p
 ){

1098 
U≈ackedRec‹d
 *
pRec
 = 
p
->
µRec
[0];

1100 if–
pRec
==0 ){

1101 
Index
 *
pIdx
 = 
p
->pIdx;

1102 
nByã
;

1103 
i
;

1104 
nCﬁ
 = 
pIdx
->
nCﬁumn
;

1106 
nByã
 = (
Mem
Ë* 
nCﬁ
 + 
	`ROUND8
((
U≈ackedRec‹d
));

1107 
pRec
 = (
U≈ackedRec‹d
*)
	`sqlôe3DbMÆlocZîo
(
db
, 
nByã
);

1108 if–
pRec
 ){

1109 
pRec
->
pKeyInfo
 = 
	`sqlôe3KeyInfoOfIndex
(
p
->
pP¨£
, 
pIdx
);

1110 if–
pRec
->
pKeyInfo
 ){

1111 
	`as£π
–
pRec
->
pKeyInfo
->
nFõld
+pRec->pKeyInfo->
nXFõld
==
nCﬁ
 );

1112 
	`as£π
–
pRec
->
pKeyInfo
->
íc
==
	`ENC
(
db
) );

1113 
pRec
->
aMem
 = (
Mem
 *)((
u8
*ÌRe¯+ 
	`ROUND8
((
U≈ackedRec‹d
)));

1114 
i
=0; i<
nCﬁ
; i++){

1115 
pRec
->
aMem
[
i
].
Êags
 = 
MEM_NuŒ
;

1116 
pRec
->
aMem
[
i
].
db
 = db;

1119 
	`sqlôe3DbFªe
(
db
, 
pRec
);

1120 
pRec
 = 0;

1123 if–
pRec
==0 )  0;

1124 
p
->
µRec
[0] = 
pRec
;

1127 
pRec
->
nFõld
 = 
p
->
iVÆ
+1;

1128  &
pRec
->
aMem
[
p
->
iVÆ
];

1131 
	`UNUSED_PARAMETER
(
p
);

1133  
	`sqlôe3VÆueNew
(
db
);

1134 
	}
}

1156 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1157 
	$vÆueFromFun˘i⁄
(

1158 
sqlôe3
 *
db
,

1159 
Ex¥
 *
p
,

1160 
u8
 
íc
,

1161 
u8
 
aff
,

1162 
sqlôe3_vÆue
 **
µVÆ
,

1163 
VÆueNewSèt4Ctx
 *
pCtx


1165 
sqlôe3_c⁄ãxt
 
˘x
;

1166 
sqlôe3_vÆue
 **
≠VÆ
 = 0;

1167 
nVÆ
 = 0;

1168 
FuncDef
 *
pFunc
 = 0;

1169 
sqlôe3_vÆue
 *
pVÆ
 = 0;

1170 
rc
 = 
SQLITE_OK
;

1171 
Ex¥Li°
 *
pLi°
 = 0;

1172 
i
;

1174 
	`as£π
–
pCtx
!=0 );

1175 
	`as£π
–(
p
->
Êags
 & 
EP_TokíO∆y
)==0 );

1176 
pLi°
 = 
p
->
x
.pList;

1177 if–
pLi°
 ) 
nVÆ
 =ÖLi°->
nEx¥
;

1178 
pFunc
 = 
	`sqlôe3FödFun˘i⁄
(
db
, 
p
->
u
.
zTokí
, 
nVÆ
, 
íc
, 0);

1179 
	`as£π
–
pFunc
 );

1180 if–(
pFunc
->
funcFœgs
 & (
SQLITE_FUNC_CONSTANT
|
SQLITE_FUNC_SLOCHNG
))==0

1181 || (
pFunc
->
funcFœgs
 & 
SQLITE_FUNC_NEEDCOLL
)

1183  
SQLITE_OK
;

1186 if–
pLi°
 ){

1187 
≠VÆ
 = (
sqlôe3_vÆue
**)
	`sqlôe3DbMÆlocZîo
(
db
, ◊pVÆ[0]Ë* 
nVÆ
);

1188 if–
≠VÆ
==0 ){

1189 
rc
 = 
SQLITE_NOMEM_BKPT
;

1190 
vÆue_‰om_fun˘i⁄_out
;

1192 
i
=0; i<
nVÆ
; i++){

1193 
rc
 = 
	`sqlôe3VÆueFromEx¥
(
db
, 
pLi°
->
a
[
i
].
pEx¥
, 
íc
, 
aff
, &
≠VÆ
[i]);

1194 if–
≠VÆ
[
i
]==0 || 
rc
!=
SQLITE_OK
 ) 
vÆue_‰om_fun˘i⁄_out
;

1198 
pVÆ
 = 
	`vÆueNew
(
db
, 
pCtx
);

1199 if–
pVÆ
==0 ){

1200 
rc
 = 
SQLITE_NOMEM_BKPT
;

1201 
vÆue_‰om_fun˘i⁄_out
;

1204 
	`as£π
–
pCtx
->
pP¨£
->
rc
==
SQLITE_OK
 );

1205 
	`mem£t
(&
˘x
, 0, (ctx));

1206 
˘x
.
pOut
 = 
pVÆ
;

1207 
˘x
.
pFunc
 =ÖFunc;

1208 
pFunc
->
	`xSFunc
(&
˘x
, 
nVÆ
, 
≠VÆ
);

1209 if–
˘x
.
isEº‹
 ){

1210 
rc
 = 
˘x
.
isEº‹
;

1211 
	`sqlôe3Eº‹Msg
(
pCtx
->
pP¨£
, "%s", 
	`sqlôe3_vÆue_ãxt
(
pVÆ
));

1213 
	`sqlôe3VÆueAµlyAfföôy
(
pVÆ
, 
aff
, 
SQLITE_UTF8
);

1214 
	`as£π
–
rc
==
SQLITE_OK
 );

1215 
rc
 = 
	`sqlôe3VdbeCh™geEncodög
(
pVÆ
, 
íc
);

1216 if–
rc
==
SQLITE_OK
 && 
	`sqlôe3VdbeMemTooBig
(
pVÆ
) ){

1217 
rc
 = 
SQLITE_TOOBIG
;

1218 
pCtx
->
pP¨£
->
nEº
++;

1221 
pCtx
->
pP¨£
->
rc
 =Ñc;

1223 
vÆue_‰om_fun˘i⁄_out
:

1224 if–
rc
!=
SQLITE_OK
 ){

1225 
pVÆ
 = 0;

1227 if–
≠VÆ
 ){

1228 
i
=0; i<
nVÆ
; i++){

1229 
	`sqlôe3VÆueFªe
(
≠VÆ
[
i
]);

1231 
	`sqlôe3DbFªe
(
db
, 
≠VÆ
);

1234 *
µVÆ
 = 
pVÆ
;

1235  
rc
;

1236 
	}
}

1238 
	#vÆueFromFun˘i⁄
(
a
,
b
,
c
,
d
,
e
,
f
Ë
SQLITE_OK


	)

1251 
	$vÆueFromEx¥
(

1252 
sqlôe3
 *
db
,

1253 
Ex¥
 *
pEx¥
,

1254 
u8
 
íc
,

1255 
u8
 
afföôy
,

1256 
sqlôe3_vÆue
 **
µVÆ
,

1257 
VÆueNewSèt4Ctx
 *
pCtx


1259 
›
;

1260 *
zVÆ
 = 0;

1261 
sqlôe3_vÆue
 *
pVÆ
 = 0;

1262 
√gI¡
 = 1;

1263 c⁄° *
zNeg
 = "";

1264 
rc
 = 
SQLITE_OK
;

1266 
	`as£π
–
pEx¥
!=0 );

1267  (
›
 = 
pEx¥
->›)==
TK_UPLUS
 || op==
TK_SPAN
 )ÖEx¥ =ÖEx¥->
pLe·
;

1268 if–
	`NEVER
(
›
==
TK_REGISTER
ËË› = 
pEx¥
->
›2
;

1274 
	`as£π
–(
pEx¥
->
Êags
 & 
EP_TokíO∆y
)==0 || 
pCtx
==0 );

1276 if–
›
==
TK_CAST
 ){

1277 
u8
 
aff
 = 
	`sqlôe3AfföôyTy≥
(
pEx¥
->
u
.
zTokí
,0);

1278 
rc
 = 
	`vÆueFromEx¥
(
db
, 
pEx¥
->
pLe·
, 
íc
, 
aff
, 
µVÆ
, 
pCtx
);

1279 
	`ã°ˇ£
–
rc
!=
SQLITE_OK
 );

1280 if–*
µVÆ
 ){

1281 
	`sqlôe3VdbeMemCa°
(*
µVÆ
, 
aff
, 
SQLITE_UTF8
);

1282 
	`sqlôe3VÆueAµlyAfföôy
(*
µVÆ
, 
afföôy
, 
SQLITE_UTF8
);

1284  
rc
;

1290 if–
›
==
TK_UMINUS


1291 && (
pEx¥
->
pLe·
->
›
==
TK_INTEGER
 ||ÖEx¥->pLe·->›==
TK_FLOAT
) ){

1292 
pEx¥
 =ÖEx¥->
pLe·
;

1293 
›
 = 
pEx¥
->op;

1294 
√gI¡
 = -1;

1295 
zNeg
 = "-";

1298 if–
›
==
TK_STRING
 || op==
TK_FLOAT
 || op==
TK_INTEGER
 ){

1299 
pVÆ
 = 
	`vÆueNew
(
db
, 
pCtx
);

1300 if–
pVÆ
==0 ) 
no_mem
;

1301 if–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_I¡VÆue
) ){

1302 
	`sqlôe3VdbeMemSëI¡64
(
pVÆ
, (
i64
)
pEx¥
->
u
.
iVÆue
*
√gI¡
);

1304 
zVÆ
 = 
	`sqlôe3MPrötf
(
db
, "%s%s", 
zNeg
, 
pEx¥
->
u
.
zTokí
);

1305 if–
zVÆ
==0 ) 
no_mem
;

1306 
	`sqlôe3VÆueSëSå
(
pVÆ
, -1, 
zVÆ
, 
SQLITE_UTF8
, 
SQLITE_DYNAMIC
);

1308 if–(
›
==
TK_INTEGER
 || op==
TK_FLOAT
 ) && 
afföôy
==
SQLITE_AFF_BLOB
 ){

1309 
	`sqlôe3VÆueAµlyAfföôy
(
pVÆ
, 
SQLITE_AFF_NUMERIC
, 
SQLITE_UTF8
);

1311 
	`sqlôe3VÆueAµlyAfföôy
(
pVÆ
, 
afföôy
, 
SQLITE_UTF8
);

1313 if–
pVÆ
->
Êags
 & (
MEM_I¡
|
MEM_Ról
ËËpVÆ->Êag†&~
MEM_Så
;

1314 if–
íc
!=
SQLITE_UTF8
 ){

1315 
rc
 = 
	`sqlôe3VdbeCh™geEncodög
(
pVÆ
, 
íc
);

1317 }if–
›
==
TK_UMINUS
 ) {

1319 if–
SQLITE_OK
==
	`sqlôe3VÆueFromEx¥
(
db
,
pEx¥
->
pLe·
,
íc
,
afföôy
,&
pVÆ
)

1320 && 
pVÆ
!=0

1322 
	`sqlôe3VdbeMemNumîify
(
pVÆ
);

1323 if–
pVÆ
->
Êags
 & 
MEM_Ról
 ){

1324 
pVÆ
->
u
.
r
 = -pVal->u.r;

1325 }if–
pVÆ
->
u
.
i
==
SMALLEST_INT64
 ){

1326 
pVÆ
->
u
.
r
 = -()
SMALLEST_INT64
;

1327 
	`MemSëTy≥Fœg
(
pVÆ
, 
MEM_Ról
);

1329 
pVÆ
->
u
.
i
 = -pVal->u.i;

1331 
	`sqlôe3VÆueAµlyAfföôy
(
pVÆ
, 
afföôy
, 
íc
);

1333 }if–
›
==
TK_NULL
 ){

1334 
pVÆ
 = 
	`vÆueNew
(
db
, 
pCtx
);

1335 if–
pVÆ
==0 ) 
no_mem
;

1336 
	`sqlôe3VdbeMemNumîify
(
pVÆ
);

1338 #i‚de‡
SQLITE_OMIT_BLOB_LITERAL


1339 if–
›
==
TK_BLOB
 ){

1340 
nVÆ
;

1341 
	`as£π
–
pEx¥
->
u
.
zTokí
[0]=='x' ||ÖExpr->u.zToken[0]=='X' );

1342 
	`as£π
–
pEx¥
->
u
.
zTokí
[1]=='\'' );

1343 
pVÆ
 = 
	`vÆueNew
(
db
, 
pCtx
);

1344 if–!
pVÆ
 ) 
no_mem
;

1345 
zVÆ
 = &
pEx¥
->
u
.
zTokí
[2];

1346 
nVÆ
 = 
	`sqlôe3SåÀn30
(
zVÆ
)-1;

1347 
	`as£π
–
zVÆ
[
nVÆ
]=='\'' );

1348 
	`sqlôe3VdbeMemSëSå
(
pVÆ
, 
	`sqlôe3HexToBlob
(
db
, 
zVÆ
, 
nVÆ
),ÇVal/2,

1349 0, 
SQLITE_DYNAMIC
);

1353 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1354 if–
›
==
TK_FUNCTION
 && 
pCtx
!=0 ){

1355 
rc
 = 
	`vÆueFromFun˘i⁄
(
db
, 
pEx¥
, 
íc
, 
afföôy
, &
pVÆ
, 
pCtx
);

1359 *
µVÆ
 = 
pVÆ
;

1360  
rc
;

1362 
no_mem
:

1363 
	`sqlôe3OomFau…
(
db
);

1364 
	`sqlôe3DbFªe
(
db
, 
zVÆ
);

1365 
	`as£π
–*
µVÆ
==0 );

1366 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1367 if–
pCtx
==0 ) 
	`sqlôe3VÆueFªe
(
pVÆ
);

1369 
	`as£π
–
pCtx
==0 ); 
	`sqlôe3VÆueFªe
(
pVÆ
);

1371  
SQLITE_NOMEM_BKPT
;

1372 
	}
}

1384 
	$sqlôe3VÆueFromEx¥
(

1385 
sqlôe3
 *
db
,

1386 
Ex¥
 *
pEx¥
,

1387 
u8
 
íc
,

1388 
u8
 
afföôy
,

1389 
sqlôe3_vÆue
 **
µVÆ


1391  
pEx¥
 ? 
	`vÆueFromEx¥
(
db
,ÖEx¥, 
íc
, 
afföôy
, 
µVÆ
, 0) : 0;

1392 
	}
}

1394 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1403 
	$ªc‹dFunc
(

1404 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

1405 
¨gc
,

1406 
sqlôe3_vÆue
 **
¨gv


1408 c⁄° 
fûe_f‹m©
 = 1;

1409 
u32
 
iSîül
;

1410 
nSîül
;

1411 
u32
 
nVÆ
;

1412 
nRë
;

1413 
sqlôe3
 *
db
;

1414 
u8
 *
aRë
;

1416 
	`UNUSED_PARAMETER
–
¨gc
 );

1417 
iSîül
 = 
	`sqlôe3VdbeSîülTy≥
(
¨gv
[0], 
fûe_f‹m©
, &
nVÆ
);

1418 
nSîül
 = 
	`sqlôe3V¨ötLí
(
iSîül
);

1419 
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

1421 
nRë
 = 1 + 
nSîül
 + 
nVÆ
;

1422 
aRë
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, 
nRë
);

1423 if–
aRë
==0 ){

1424 
	`sqlôe3_ªsu…_îr‹_nomem
(
c⁄ãxt
);

1426 
aRë
[0] = 
nSîül
+1;

1427 
	`putV¨öt32
(&
aRë
[1], 
iSîül
);

1428 
	`sqlôe3VdbeSîülPut
(&
aRë
[1+
nSîül
], 
¨gv
[0], 
iSîül
);

1429 
	`sqlôe3_ªsu…_blob
(
c⁄ãxt
, 
aRë
, 
nRë
, 
SQLITE_TRANSIENT
);

1430 
	`sqlôe3DbFªe
(
db
, 
aRë
);

1432 
	}
}

1437 
	$sqlôe3A«lyzeFun˘i⁄s
(){

1438 
FuncDef
 
aA«lyzeTabÀFuncs
[] = {

1439 
	`FUNCTION
(
sqlôe_ªc‹d
, 1, 0, 0, 
ªc‹dFunc
),

1441 
	`sqlôe3In£πBuûtöFuncs
(
aA«lyzeTabÀFuncs
, 
	`AºaySize
(aAnalyzeTableFuncs));

1442 
	}
}

1462 
	$°©4VÆueFromEx¥
(

1463 
P¨£
 *
pP¨£
,

1464 
Ex¥
 *
pEx¥
,

1465 
u8
 
afföôy
,

1466 
VÆueNewSèt4Ctx
 *
pAŒoc
,

1467 
sqlôe3_vÆue
 **
µVÆ


1469 
rc
 = 
SQLITE_OK
;

1470 
sqlôe3_vÆue
 *
pVÆ
 = 0;

1471 
sqlôe3
 *
db
 = 
pP¨£
->db;

1474 
pEx¥
 = 
	`sqlôe3Ex¥SkùCﬁœã
(pExpr);

1476 if–!
pEx¥
 ){

1477 
pVÆ
 = 
	`vÆueNew
(
db
, 
pAŒoc
);

1478 if–
pVÆ
 ){

1479 
	`sqlôe3VdbeMemSëNuŒ
((
Mem
*)
pVÆ
);

1481 }if–
pEx¥
->
›
==
TK_VARIABLE


1482 || 
	`NEVER
(
pEx¥
->
›
==
TK_REGISTER
 &&ÖEx¥->
›2
==
TK_VARIABLE
)

1484 
Vdbe
 *
v
;

1485 
iBödV¨
 = 
pEx¥
->
iCﬁumn
;

1486 
	`sqlôe3VdbeSëV¨mask
(
pP¨£
->
pVdbe
, 
iBödV¨
);

1487 if–(
v
 = 
pP¨£
->
pRïª∑ª
)!=0 ){

1488 
pVÆ
 = 
	`vÆueNew
(
db
, 
pAŒoc
);

1489 if–
pVÆ
 ){

1490 
rc
 = 
	`sqlôe3VdbeMemC›y
((
Mem
*)
pVÆ
, &
v
->
aV¨
[
iBödV¨
-1]);

1491 if–
rc
==
SQLITE_OK
 ){

1492 
	`sqlôe3VÆueAµlyAfföôy
(
pVÆ
, 
afföôy
, 
	`ENC
(
db
));

1494 
pVÆ
->
db
 = 
pP¨£
->db;

1498 
rc
 = 
	`vÆueFromEx¥
(
db
, 
pEx¥
, 
	`ENC
(db), 
afföôy
, &
pVÆ
, 
pAŒoc
);

1501 
	`as£π
–
pVÆ
==0 ||ÖVÆ->
db
==db );

1502 *
µVÆ
 = 
pVÆ
;

1503  
rc
;

1504 
	}
}

1540 
	$sqlôe3Sèt4ProbeSëVÆue
(

1541 
P¨£
 *
pP¨£
,

1542 
Index
 *
pIdx
,

1543 
U≈ackedRec‹d
 **
µRec
,

1544 
Ex¥
 *
pEx¥
,

1545 
nEÀm
,

1546 
iVÆ
,

1547 *
≤Exåa˘


1549 
rc
 = 
SQLITE_OK
;

1550 
nExåa˘
 = 0;

1552 if–
pEx¥
==0 ||ÖEx¥->
›
!=
TK_SELECT
 ){

1553 
i
;

1554 
VÆueNewSèt4Ctx
 
Æloc
;

1556 
Æloc
.
pP¨£
 =ÖParse;

1557 
Æloc
.
pIdx
 =ÖIdx;

1558 
Æloc
.
µRec
 =ÖpRec;

1560 
i
=0; i<
nEÀm
; i++){

1561 
sqlôe3_vÆue
 *
pVÆ
 = 0;

1562 
Ex¥
 *
pEÀm
 = (
pEx¥
 ? 
	`sqlôe3Ve˘‹FõldSubex¥
’Ex¥, 
i
) : 0);

1563 
u8
 
aff
 = 
	`sqlôe3IndexCﬁumnAfföôy
(
pP¨£
->
db
, 
pIdx
, 
iVÆ
+
i
);

1564 
Æloc
.
iVÆ
 = iVÆ+
i
;

1565 
rc
 = 
	`°©4VÆueFromEx¥
(
pP¨£
, 
pEÀm
, 
aff
, &
Æloc
, &
pVÆ
);

1566 if–!
pVÆ
 ) ;

1567 
nExåa˘
++;

1571 *
≤Exåa˘
 = 
nExåa˘
;

1572  
rc
;

1573 
	}
}

1585 
	$sqlôe3Sèt4VÆueFromEx¥
(

1586 
P¨£
 *
pP¨£
,

1587 
Ex¥
 *
pEx¥
,

1588 
u8
 
afföôy
,

1589 
sqlôe3_vÆue
 **
µVÆ


1591  
	`°©4VÆueFromEx¥
(
pP¨£
, 
pEx¥
, 
afföôy
, 0, 
µVÆ
);

1592 
	}
}

1602 
	$sqlôe3Sèt4Cﬁumn
(

1603 
sqlôe3
 *
db
,

1604 c⁄° *
pRec
,

1605 
nRec
,

1606 
iCﬁ
,

1607 
sqlôe3_vÆue
 **
µVÆ


1609 
u32
 
t
;

1610 
nHdr
;

1611 
iHdr
;

1612 
iFõld
;

1613 
szFõld
;

1614 
i
;

1615 
u8
 *
a
 = (u8*)
pRec
;

1616 
Mem
 *
pMem
 = *
µVÆ
;

1618 
	`as£π
–
iCﬁ
>0 );

1619 
iHdr
 = 
	`gëV¨öt32
(
a
, 
nHdr
);

1620 if–
nHdr
>
nRec
 || 
iHdr
>ÚHd∏Ë 
SQLITE_CORRUPT_BKPT
;

1621 
iFõld
 = 
nHdr
;

1622 
i
=0; i<=
iCﬁ
; i++){

1623 
iHdr
 +
	`gëV¨öt32
(&
a
[iHdr], 
t
);

1624 
	`ã°ˇ£
–
iHdr
==
nHdr
 );

1625 
	`ã°ˇ£
–
iHdr
==
nHdr
+1 );

1626 if–
iHdr
>
nHdr
 )  
SQLITE_CORRUPT_BKPT
;

1627 
szFõld
 = 
	`sqlôe3VdbeSîülTy≥Lí
(
t
);

1628 
iFõld
 +
szFõld
;

1630 
	`ã°ˇ£
–
iFõld
==
nRec
 );

1631 
	`ã°ˇ£
–
iFõld
==
nRec
+1 );

1632 if–
iFõld
>
nRec
 )  
SQLITE_CORRUPT_BKPT
;

1633 if–
pMem
==0 ){

1634 
pMem
 = *
µVÆ
 = 
	`sqlôe3VÆueNew
(
db
);

1635 if–
pMem
==0 )  
SQLITE_NOMEM_BKPT
;

1637 
	`sqlôe3VdbeSîülGë
(&
a
[
iFõld
-
szFõld
], 
t
, 
pMem
);

1638 
pMem
->
íc
 = 
	`ENC
(
db
);

1639  
SQLITE_OK
;

1640 
	}
}

1647 
	$sqlôe3Sèt4ProbeFªe
(
U≈ackedRec‹d
 *
pRec
){

1648 if–
pRec
 ){

1649 
i
;

1650 
nCﬁ
 = 
pRec
->
pKeyInfo
->
nFõld
+pRec->pKeyInfo->
nXFõld
;

1651 
Mem
 *
aMem
 = 
pRec
->aMem;

1652 
sqlôe3
 *
db
 = 
aMem
[0].db;

1653 
i
=0; i<
nCﬁ
; i++){

1654 
	`sqlôe3VdbeMemRñó£
(&
aMem
[
i
]);

1656 
	`sqlôe3KeyInfoUƒef
(
pRec
->
pKeyInfo
);

1657 
	`sqlôe3DbFªe
(
db
, 
pRec
);

1659 
	}
}

1665 
	$sqlôe3VÆueSëSå
(

1666 
sqlôe3_vÆue
 *
v
,

1667 
n
,

1668 c⁄° *
z
,

1669 
u8
 
íc
,

1670 (*
xDñ
)(*)

1672 if–
v
 ) 
	`sqlôe3VdbeMemSëSå
((
Mem
 *)v, 
z
, 
n
, 
íc
, 
xDñ
);

1673 
	}
}

1678 
	$sqlôe3VÆueFªe
(
sqlôe3_vÆue
 *
v
){

1679 if–!
v
 ) ;

1680 
	`sqlôe3VdbeMemRñó£
((
Mem
 *)
v
);

1681 
	`sqlôe3DbFªe
(((
Mem
*)
v
)->
db
, v);

1682 
	}
}

1689 
SQLITE_NOINLINE
 
	$vÆueByãs
(
sqlôe3_vÆue
 *
pVÆ
, 
u8
 
íc
){

1690  
	`vÆueToText
(
pVÆ
, 
íc
)!=0 ?ÖVÆ->
n
 : 0;

1691 
	}
}

1692 
	$sqlôe3VÆueByãs
(
sqlôe3_vÆue
 *
pVÆ
, 
u8
 
íc
){

1693 
Mem
 *
p
 = (Mem*)
pVÆ
;

1694 
	`as£π
–(
p
->
Êags
 & 
MEM_NuŒ
)==0 || (p->Êag†& (
MEM_Så
|
MEM_Blob
))==0 );

1695 if–(
p
->
Êags
 & 
MEM_Så
)!=0 && 
pVÆ
->
íc
==enc ){

1696  
p
->
n
;

1698 if–(
p
->
Êags
 & 
MEM_Blob
)!=0 ){

1699 if–
p
->
Êags
 & 
MEM_Zîo
 ){

1700  
p
->
n
 +Ö->
u
.
nZîo
;

1702  
p
->
n
;

1705 if–
p
->
Êags
 & 
MEM_NuŒ
 )  0;

1706  
	`vÆueByãs
(
pVÆ
, 
íc
);

1707 
	}
}

	@vdbesort.c

138 
	~"sqlôeI¡.h
"

139 
	~"vdbeI¡.h
"

147 
	#SQLITE_DEBUG_SORTER_THREADS
 1

	)

155 
	#SQLITE_MAX_PMASZ
 (1<<29)

	)

160 
MîgeEngöe
 
	tMîgeEngöe
;

161 
PmaRódî
 
	tPmaRódî
;

162 
PmaWrôî
 
	tPmaWrôî
;

163 
S‹ãrRec‹d
 
	tS‹ãrRec‹d
;

164 
S‹tSubèsk
 
	tS‹tSubèsk
;

165 
S‹ãrFûe
 
	tS‹ãrFûe
;

166 
S‹ãrLi°
 
	tS‹ãrLi°
;

167 
In¸Mîgî
 
	tIn¸Mîgî
;

173 
	sS‹ãrFûe
 {

174 
sqlôe3_fûe
 *
	mpFd
;

175 
i64
 
	miEof
;

186 
	sS‹ãrLi°
 {

187 
S‹ãrRec‹d
 *
	mpLi°
;

188 
u8
 *
	maMem‹y
;

189 
	mszPMA
;

256 
	sMîgeEngöe
 {

257 
	mnTªe
;

258 
S‹tSubèsk
 *
	mpTask
;

259 *
	maTªe
;

260 
PmaRódî
 *
	maRódr
;

294 (*
	tS‹ãrCom∑ª
)(
	tS‹tSubèsk
*,*,const *,,const *,);

295 
	sS‹tSubèsk
 {

296 
SQLôeThªad
 *
pThªad
;

297 
bD⁄e
;

298 
VdbeS‹ãr
 *
pS‹ãr
;

299 
U≈ackedRec‹d
 *
pU≈acked
;

300 
S‹ãrLi°
 
li°
;

301 
nPMA
;

302 
S‹ãrCom∑ª
 
xCom∑ª
;

303 
S‹ãrFûe
 
fûe
;

304 
S‹ãrFûe
 
fûe2
;

317 
	sVdbeS‹ãr
 {

318 
mnPmaSize
;

319 
mxPmaSize
;

320 
mxKeysize
;

321 
pgsz
;

322 
PmaRódî
 *
pRódî
;

323 
MîgeEngöe
 *
pMîgî
;

324 
sqlôe3
 *
db
;

325 
KeyInfo
 *
pKeyInfo
;

326 
U≈ackedRec‹d
 *
pU≈acked
;

327 
S‹ãrLi°
 
li°
;

328 
iMem‹y
;

329 
nMem‹y
;

330 
u8
 
bU£PMA
;

331 
u8
 
bU£Thªads
;

332 
u8
 
iPªv
;

333 
u8
 
nTask
;

334 
u8
 
ty≥Mask
;

335 
S‹tSubèsk
 
aTask
[1];

338 
	#SORTER_TYPE_INTEGER
 0x01

	)

339 
	#SORTER_TYPE_TEXT
 0x02

	)

350 
	sPmaRódî
 {

351 
i64
 
iRódOff
;

352 
i64
 
iEof
;

353 
nAŒoc
;

354 
nKey
;

355 
sqlôe3_fûe
 *
pFd
;

356 
u8
 *
aAŒoc
;

357 
u8
 *
aKey
;

358 
u8
 *
aBuf„r
;

359 
nBuf„r
;

360 
u8
 *
aM≠
;

361 
In¸Mîgî
 *
pIn¸
;

396 
	sIn¸Mîgî
 {

397 
S‹tSubèsk
 *
pTask
;

398 
MîgeEngöe
 *
pMîgî
;

399 
i64
 
iSèπOff
;

400 
mxSz
;

401 
bEof
;

402 
bU£Thªad
;

403 
S‹ãrFûe
 
aFûe
[2];

414 
	sPmaWrôî
 {

415 
eFWEº
;

416 
u8
 *
aBuf„r
;

417 
nBuf„r
;

418 
iBufSèπ
;

419 
iBufEnd
;

420 
i64
 
iWrôeOff
;

421 
sqlôe3_fûe
 *
pFd
;

442 
	sS‹ãrRec‹d
 {

443 
nVÆ
;

445 
S‹ãrRec‹d
 *
pNext
;

446 
iNext
;

447 } 
u
;

456 
	#SRVAL
(
p
Ë((*)((
S‹ãrRec‹d
*)’Ë+ 1))

	)

460 
	#SORTER_MAX_MERGE_COUNT
 16

	)

462 
	`vdbeIn¸Sw≠
(
In¸Mîgî
*);

463 
	`vdbeIn¸Fªe
(
In¸Mîgî
 *);

469 
	$vdbePmaRódîCÀ¨
(
PmaRódî
 *
pRódr
){

470 
	`sqlôe3_‰ì
(
pRódr
->
aAŒoc
);

471 
	`sqlôe3_‰ì
(
pRódr
->
aBuf„r
);

472 if–
pRódr
->
aM≠
 ) 
	`sqlôe3OsUn„tch
’Ródr->
pFd
, 0,ÖReadr->aMap);

473 
	`vdbeIn¸Fªe
(
pRódr
->
pIn¸
);

474 
	`mem£t
(
pRódr
, 0, (
PmaRódî
));

475 
	}
}

486 
	$vdbePmaRódBlob
(

487 
PmaRódî
 *
p
,

488 
nByã
,

489 
u8
 **
µOut


491 
iBuf
;

492 
nAvaû
;

494 if–
p
->
aM≠
 ){

495 *
µOut
 = &
p
->
aM≠
[p->
iRódOff
];

496 
p
->
iRódOff
 +
nByã
;

497  
SQLITE_OK
;

500 
	`as£π
–
p
->
aBuf„r
 );

505 
iBuf
 = 
p
->
iRódOff
 %Ö->
nBuf„r
;

506 if–
iBuf
==0 ){

507 
nRód
;

508 
rc
;

511 if–(
p
->
iEof
 -Ö->
iRódOff
Ë> (
i64
Ì->
nBuf„r
 ){

512 
nRód
 = 
p
->
nBuf„r
;

514 
nRód
 = ()(
p
->
iEof
 -Ö->
iRódOff
);

516 
	`as£π
–
nRód
>0 );

519 
rc
 = 
	`sqlôe3OsRód
(
p
->
pFd
,Ö->
aBuf„r
, 
nRód
,Ö->
iRódOff
);

520 
	`as£π
–
rc
!=
SQLITE_IOERR_SHORT_READ
 );

521 if–
rc
!=
SQLITE_OK
 ) Ñc;

523 
nAvaû
 = 
p
->
nBuf„r
 - 
iBuf
;

525 if–
nByã
<=
nAvaû
 ){

529 *
µOut
 = &
p
->
aBuf„r
[
iBuf
];

530 
p
->
iRódOff
 +
nByã
;

535 
nRem
;

538 if–
p
->
nAŒoc
<
nByã
 ){

539 
u8
 *
aNew
;

540 
nNew
 = 
	`MAX
(128, 
p
->
nAŒoc
*2);

541  
nByã
>
nNew
 )ÇNew =ÇNew*2;

542 
aNew
 = 
	`sqlôe3RóŒoc
(
p
->
aAŒoc
, 
nNew
);

543 if–!
aNew
 )  
SQLITE_NOMEM_BKPT
;

544 
p
->
nAŒoc
 = 
nNew
;

545 
p
->
aAŒoc
 = 
aNew
;

550 
	`mem˝y
(
p
->
aAŒoc
, &p->
aBuf„r
[
iBuf
], 
nAvaû
);

551 
p
->
iRódOff
 +
nAvaû
;

552 
nRem
 = 
nByã
 - 
nAvaû
;

556  
nRem
>0 ){

557 
rc
;

558 
nC›y
;

559 
u8
 *
aNext
;

561 
nC›y
 = 
nRem
;

562 if–
nRem
>
p
->
nBuf„r
 ) 
nC›y
 =Ö->nBuffer;

563 
rc
 = 
	`vdbePmaRódBlob
(
p
, 
nC›y
, &
aNext
);

564 if–
rc
!=
SQLITE_OK
 ) Ñc;

565 
	`as£π
–
aNext
!=
p
->
aAŒoc
 );

566 
	`mem˝y
(&
p
->
aAŒoc
[
nByã
 - 
nRem
], 
aNext
, 
nC›y
);

567 
nRem
 -
nC›y
;

570 *
µOut
 = 
p
->
aAŒoc
;

573  
SQLITE_OK
;

574 
	}
}

580 
	$vdbePmaRódV¨öt
(
PmaRódî
 *
p
, 
u64
 *
≤Out
){

581 
iBuf
;

583 if–
p
->
aM≠
 ){

584 
p
->
iRódOff
 +
	`sqlôe3GëV¨öt
(&p->
aM≠
[p->iRódOff], 
≤Out
);

586 
iBuf
 = 
p
->
iRódOff
 %Ö->
nBuf„r
;

587 if–
iBuf
 && (
p
->
nBuf„r
-iBuf)>=9 ){

588 
p
->
iRódOff
 +
	`sqlôe3GëV¨öt
(&p->
aBuf„r
[
iBuf
], 
≤Out
);

590 
u8
 
aV¨öt
[16], *
a
;

591 
i
 = 0, 
rc
;

593 
rc
 = 
	`vdbePmaRódBlob
(
p
, 1, &
a
);

594 if–
rc
 ) Ñc;

595 
aV¨öt
[(
i
++)&0xf] = 
a
[0];

596 } (
a
[0]&0x80)!=0 );

597 
	`sqlôe3GëV¨öt
(
aV¨öt
, 
≤Out
);

601  
SQLITE_OK
;

602 
	}
}

613 
	$vdbeS‹ãrM≠Fûe
(
S‹tSubèsk
 *
pTask
, 
S‹ãrFûe
 *
pFûe
, 
u8
 **
µ
){

614 
rc
 = 
SQLITE_OK
;

615 if–
pFûe
->
iEof
<=(
i64
)(
pTask
->
pS‹ãr
->
db
->
nMaxS‹ãrMm≠
) ){

616 
sqlôe3_fûe
 *
pFd
 = 
pFûe
->pFd;

617 if–
pFd
->
pMëhods
->
iVîsi⁄
>=3 ){

618 
rc
 = 
	`sqlôe3OsFëch
(
pFd
, 0, ()
pFûe
->
iEof
, (**)
µ
);

619 
	`ã°ˇ£
–
rc
!=
SQLITE_OK
 );

622  
rc
;

623 
	}
}

630 
	$vdbePmaRódîSìk
(

631 
S‹tSubèsk
 *
pTask
,

632 
PmaRódî
 *
pRódr
,

633 
S‹ãrFûe
 *
pFûe
,

634 
i64
 
iOff


636 
rc
 = 
SQLITE_OK
;

638 
	`as£π
–
pRódr
->
pIn¸
==0 ||ÖRódr->pIn¸->
bEof
==0 );

640 if–
	`sqlôe3Fau…Sim
(201ËË 
SQLITE_IOERR_READ
;

641 if–
pRódr
->
aM≠
 ){

642 
	`sqlôe3OsUn„tch
(
pRódr
->
pFd
, 0,ÖRódr->
aM≠
);

643 
pRódr
->
aM≠
 = 0;

645 
pRódr
->
iRódOff
 = 
iOff
;

646 
pRódr
->
iEof
 = 
pFûe
->iEof;

647 
pRódr
->
pFd
 = 
pFûe
->pFd;

649 
rc
 = 
	`vdbeS‹ãrM≠Fûe
(
pTask
, 
pFûe
, &
pRódr
->
aM≠
);

650 if–
rc
==
SQLITE_OK
 && 
pRódr
->
aM≠
==0 ){

651 
pgsz
 = 
pTask
->
pS‹ãr
->pgsz;

652 
iBuf
 = 
pRódr
->
iRódOff
 % 
pgsz
;

653 if–
pRódr
->
aBuf„r
==0 ){

654 
pRódr
->
aBuf„r
 = (
u8
*)
	`sqlôe3MÆloc
(
pgsz
);

655 if–
pRódr
->
aBuf„r
==0 ) 
rc
 = 
SQLITE_NOMEM_BKPT
;

656 
pRódr
->
nBuf„r
 = 
pgsz
;

658 if–
rc
==
SQLITE_OK
 && 
iBuf
 ){

659 
nRód
 = 
pgsz
 - 
iBuf
;

660 if–(
pRódr
->
iRódOff
 + 
nRód
Ë>ÖRódr->
iEof
 ){

661 
nRód
 = ()(
pRódr
->
iEof
 -ÖRódr->
iRódOff
);

663 
rc
 = 
	`sqlôe3OsRód
(

664 
pRódr
->
pFd
, &pRódr->
aBuf„r
[
iBuf
], 
nRód
,ÖRódr->
iRódOff


666 
	`ã°ˇ£
–
rc
!=
SQLITE_OK
 );

670  
rc
;

671 
	}
}

677 
	$vdbePmaRódîNext
(
PmaRódî
 *
pRódr
){

678 
rc
 = 
SQLITE_OK
;

679 
u64
 
nRec
 = 0;

682 if–
pRódr
->
iRódOff
>ıRódr->
iEof
 ){

683 
In¸Mîgî
 *
pIn¸
 = 
pRódr
->pIncr;

684 
bEof
 = 1;

685 if–
pIn¸
 ){

686 
rc
 = 
	`vdbeIn¸Sw≠
(
pIn¸
);

687 if–
rc
==
SQLITE_OK
 && 
pIn¸
->
bEof
==0 ){

688 
rc
 = 
	`vdbePmaRódîSìk
(

689 
pIn¸
->
pTask
, 
pRódr
, &pIn¸->
aFûe
[0],ÖIn¸->
iSèπOff


691 
bEof
 = 0;

695 if–
bEof
 ){

697 
	`vdbePmaRódîCÀ¨
(
pRódr
);

698 
	`ã°ˇ£
–
rc
!=
SQLITE_OK
 );

699  
rc
;

703 if–
rc
==
SQLITE_OK
 ){

704 
rc
 = 
	`vdbePmaRódV¨öt
(
pRódr
, &
nRec
);

706 if–
rc
==
SQLITE_OK
 ){

707 
pRódr
->
nKey
 = ()
nRec
;

708 
rc
 = 
	`vdbePmaRódBlob
(
pRódr
, ()
nRec
, &pRódr->
aKey
);

709 
	`ã°ˇ£
–
rc
!=
SQLITE_OK
 );

712  
rc
;

713 
	}
}

724 
	$vdbePmaRódîInô
(

725 
S‹tSubèsk
 *
pTask
,

726 
S‹ãrFûe
 *
pFûe
,

727 
i64
 
iSèπ
,

728 
PmaRódî
 *
pRódr
,

729 
i64
 *
≤Byã


731 
rc
;

733 
	`as£π
–
pFûe
->
iEof
>
iSèπ
 );

734 
	`as£π
–
pRódr
->
aAŒoc
==0 &&ÖRódr->
nAŒoc
==0 );

735 
	`as£π
–
pRódr
->
aBuf„r
==0 );

736 
	`as£π
–
pRódr
->
aM≠
==0 );

738 
rc
 = 
	`vdbePmaRódîSìk
(
pTask
, 
pRódr
, 
pFûe
, 
iSèπ
);

739 if–
rc
==
SQLITE_OK
 ){

740 
u64
 
nByã
 = 0;

741 
rc
 = 
	`vdbePmaRódV¨öt
(
pRódr
, &
nByã
);

742 
pRódr
->
iEof
 =ÖRódr->
iRódOff
 + 
nByã
;

743 *
≤Byã
 +
nByã
;

746 if–
rc
==
SQLITE_OK
 ){

747 
rc
 = 
	`vdbePmaRódîNext
(
pRódr
);

749  
rc
;

750 
	}
}

757 
	$vdbeS‹ãrCom∑ªTaû
(

758 
S‹tSubèsk
 *
pTask
,

759 *
pbKey2Cached
,

760 c⁄° *
pKey1
, 
nKey1
,

761 c⁄° *
pKey2
, 
nKey2


763 
U≈ackedRec‹d
 *
r2
 = 
pTask
->
pU≈acked
;

764 if–*
pbKey2Cached
==0 ){

765 
	`sqlôe3VdbeRec‹dU≈ack
(
pTask
->
pS‹ãr
->
pKeyInfo
, 
nKey2
, 
pKey2
, 
r2
);

766 *
pbKey2Cached
 = 1;

768  
	`sqlôe3VdbeRec‹dCom∑ªWôhSkù
(
nKey1
, 
pKey1
, 
r2
, 1);

769 
	}
}

784 
	$vdbeS‹ãrCom∑ª
(

785 
S‹tSubèsk
 *
pTask
,

786 *
pbKey2Cached
,

787 c⁄° *
pKey1
, 
nKey1
,

788 c⁄° *
pKey2
, 
nKey2


790 
U≈ackedRec‹d
 *
r2
 = 
pTask
->
pU≈acked
;

791 if–!*
pbKey2Cached
 ){

792 
	`sqlôe3VdbeRec‹dU≈ack
(
pTask
->
pS‹ãr
->
pKeyInfo
, 
nKey2
, 
pKey2
, 
r2
);

793 *
pbKey2Cached
 = 1;

795  
	`sqlôe3VdbeRec‹dCom∑ª
(
nKey1
, 
pKey1
, 
r2
);

796 
	}
}

803 
	$vdbeS‹ãrCom∑ªText
(

804 
S‹tSubèsk
 *
pTask
,

805 *
pbKey2Cached
,

806 c⁄° *
pKey1
, 
nKey1
,

807 c⁄° *
pKey2
, 
nKey2


809 c⁄° 
u8
 * c⁄° 
p1
 = (c⁄° u8 * c⁄°)
pKey1
;

810 c⁄° 
u8
 * c⁄° 
p2
 = (c⁄° u8 * c⁄°)
pKey2
;

811 c⁄° 
u8
 * c⁄° 
v1
 = &
p1
[Ö1[0] ];

812 c⁄° 
u8
 * c⁄° 
v2
 = &
p2
[Ö2[0] ];

814 
n1
;

815 
n2
;

816 
ªs
;

818 
	`gëV¨öt32
(&
p1
[1], 
n1
);Ç1 = (n1 - 13) / 2;

819 
	`gëV¨öt32
(&
p2
[1], 
n2
);Ç2 = (n2 - 13) / 2;

820 
ªs
 = 
	`memcmp
(
v1
, 
v2
, 
	`MIN
(
n1
, 
n2
));

821 if–
ªs
==0 ){

822 
ªs
 = 
n1
 - 
n2
;

825 if–
ªs
==0 ){

826 if–
pTask
->
pS‹ãr
->
pKeyInfo
->
nFõld
>1 ){

827 
ªs
 = 
	`vdbeS‹ãrCom∑ªTaû
(

828 
pTask
, 
pbKey2Cached
, 
pKey1
, 
nKey1
, 
pKey2
, 
nKey2


832 if–
pTask
->
pS‹ãr
->
pKeyInfo
->
aS‹tOrdî
[0] ){

833 
ªs
 =Ñes * -1;

837  
ªs
;

838 
	}
}

844 
	$vdbeS‹ãrCom∑ªI¡
(

845 
S‹tSubèsk
 *
pTask
,

846 *
pbKey2Cached
,

847 c⁄° *
pKey1
, 
nKey1
,

848 c⁄° *
pKey2
, 
nKey2


850 c⁄° 
u8
 * c⁄° 
p1
 = (c⁄° u8 * c⁄°)
pKey1
;

851 c⁄° 
u8
 * c⁄° 
p2
 = (c⁄° u8 * c⁄°)
pKey2
;

852 c⁄° 
s1
 = 
p1
[1];

853 c⁄° 
s2
 = 
p2
[1];

854 c⁄° 
u8
 * c⁄° 
v1
 = &
p1
[Ö1[0] ];

855 c⁄° 
u8
 * c⁄° 
v2
 = &
p2
[Ö2[0] ];

856 
ªs
;

858 
	`as£π
–(
s1
>0 && s1<7) || s1==8 || s1==9 );

859 
	`as£π
–(
s2
>0 && s2<7) || s2==8 || s2==9 );

861 if–
s1
>7 && 
s2
>7 ){

862 
ªs
 = 
s1
 - 
s2
;

864 if–
s1
==
s2
 ){

865 if–(*
v1
 ^ *
v2
) & 0x80 ){

867 
ªs
 = (*
v1
 & 0x80) ? -1 : +1;

870 c⁄° 
u8
 
aLí
[] = {0, 1, 2, 3, 4, 6, 8 };

871 
i
;

872 
ªs
 = 0;

873 
i
=0; i<
aLí
[
s1
]; i++){

874 if–(
ªs
 = 
v1
[
i
] - 
v2
[i]) ) ;

878 if–
s2
>7 ){

879 
ªs
 = +1;

880 }if–
s1
>7 ){

881 
ªs
 = -1;

883 
ªs
 = 
s1
 - 
s2
;

885 
	`as£π
–
ªs
!=0 );

887 if–
ªs
>0 ){

888 if–*
v1
 & 0x80 ) 
ªs
 = -1;

890 if–*
v2
 & 0x80 ) 
ªs
 = +1;

895 if–
ªs
==0 ){

896 if–
pTask
->
pS‹ãr
->
pKeyInfo
->
nFõld
>1 ){

897 
ªs
 = 
	`vdbeS‹ãrCom∑ªTaû
(

898 
pTask
, 
pbKey2Cached
, 
pKey1
, 
nKey1
, 
pKey2
, 
nKey2


901 }if–
pTask
->
pS‹ãr
->
pKeyInfo
->
aS‹tOrdî
[0] ){

902 
ªs
 =Ñes * -1;

905  
ªs
;

906 
	}
}

927 
	$sqlôe3VdbeS‹ãrInô
(

928 
sqlôe3
 *
db
,

929 
nFõld
,

930 
VdbeCurs‹
 *
pC§


932 
pgsz
;

933 
i
;

934 
VdbeS‹ãr
 *
pS‹ãr
;

935 
KeyInfo
 *
pKeyInfo
;

936 
szKeyInfo
;

937 
sz
;

938 
rc
 = 
SQLITE_OK
;

939 #i‡
SQLITE_MAX_WORKER_THREADS
==0

940 
	#nW‹kî
 0

	)

942 
nW‹kî
;

946 #i‡
SQLITE_MAX_WORKER_THREADS
>0

947 if–
	`sqlôe3TempInMem‹y
(
db
Ë|| 
sqlôe3GlobÆC⁄fig
.
bC‹eMuãx
==0 ){

948 
nW‹kî
 = 0;

950 
nW‹kî
 = 
db
->
aLimô
[
SQLITE_LIMIT_WORKER_THREADS
];

956 #i‡
SQLITE_MAX_WORKER_THREADS
>=
SORTER_MAX_MERGE_COUNT


957 if–
nW‹kî
>=
SORTER_MAX_MERGE_COUNT
 ){

958 
nW‹kî
 = 
SORTER_MAX_MERGE_COUNT
-1;

962 
	`as£π
–
pC§
->
pKeyInfo
 &&ÖC§->
pBtx
==0 );

963 
	`as£π
–
pC§
->
eCurTy≥
==
CURTYPE_SORTER
 );

964 
szKeyInfo
 = (
KeyInfo
Ë+ (
pC§
->
pKeyInfo
->
nFõld
-1)*(
CﬁlSeq
*);

965 
sz
 = (
VdbeS‹ãr
Ë+ 
nW‹kî
 * (
S‹tSubèsk
);

967 
pS‹ãr
 = (
VdbeS‹ãr
*)
	`sqlôe3DbMÆlocZîo
(
db
, 
sz
 + 
szKeyInfo
);

968 
pC§
->
uc
.
pS‹ãr
 =ÖSorter;

969 if–
pS‹ãr
==0 ){

970 
rc
 = 
SQLITE_NOMEM_BKPT
;

972 
pS‹ãr
->
pKeyInfo
 =ÖKeyInfÿ(
KeyInfo
*)((
u8
*ÌS‹ã∏+ 
sz
);

973 
	`mem˝y
(
pKeyInfo
, 
pC§
->pKeyInfo, 
szKeyInfo
);

974 
pKeyInfo
->
db
 = 0;

975 if–
nFõld
 && 
nW‹kî
==0 ){

976 
pKeyInfo
->
nXFõld
 +’KeyInfo->
nFõld
 -ÇField);

977 
pKeyInfo
->
nFõld
 =ÇField;

979 
pS‹ãr
->
pgsz
 =Ögsz = 
	`sqlôe3BåìGëPageSize
(
db
->
aDb
[0].
pBt
);

980 
pS‹ãr
->
nTask
 = 
nW‹kî
 + 1;

981 
pS‹ãr
->
iPªv
 = (
u8
)(
nW‹kî
 - 1);

982 
pS‹ãr
->
bU£Thªads
 = (pS‹ãr->
nTask
>1);

983 
pS‹ãr
->
db
 = db;

984 
i
=0; i<
pS‹ãr
->
nTask
; i++){

985 
S‹tSubèsk
 *
pTask
 = &
pS‹ãr
->
aTask
[
i
];

986 
pTask
->
pS‹ãr
 =ÖSorter;

989 if–!
	`sqlôe3TempInMem‹y
(
db
) ){

990 
i64
 
mxCache
;

991 
u32
 
szPma
 = 
sqlôe3GlobÆC⁄fig
.szPma;

992 
pS‹ãr
->
mnPmaSize
 = 
szPma
 * 
pgsz
;

994 
mxCache
 = 
db
->
aDb
[0].
pSchema
->
ˇche_size
;

995 if–
mxCache
<0 ){

998 
mxCache
 = mxCache * -1024;

1000 
mxCache
 = mxCachê* 
pgsz
;

1002 
mxCache
 = 
	`MIN
(mxCache, 
SQLITE_MAX_PMASZ
);

1003 
pS‹ãr
->
mxPmaSize
 = 
	`MAX
’S‹ãr->
mnPmaSize
, ()
mxCache
);

1009 if–
sqlôe3GlobÆC⁄fig
.
pS¸©ch
==0 ){

1010 
	`as£π
–
pS‹ãr
->
iMem‹y
==0 );

1011 
pS‹ãr
->
nMem‹y
 = 
pgsz
;

1012 
pS‹ãr
->
li°
.
aMem‹y
 = (
u8
*)
	`sqlôe3MÆloc
(
pgsz
);

1013 if–!
pS‹ãr
->
li°
.
aMem‹y
 ) 
rc
 = 
SQLITE_NOMEM_BKPT
;

1017 if–(
pKeyInfo
->
nFõld
+pKeyInfo->
nXFõld
)<13

1018 && (
pKeyInfo
->
aCﬁl
[0]==0 ||ÖKeyInfo->aCﬁl[0]==
db
->
pDÊtCﬁl
)

1020 
pS‹ãr
->
ty≥Mask
 = 
SORTER_TYPE_INTEGER
 | 
SORTER_TYPE_TEXT
;

1024  
rc
;

1025 
	}
}

1026 #unde‡
nW‹kî


1031 
	$vdbeS‹ãrRec‹dFªe
(
sqlôe3
 *
db
, 
S‹ãrRec‹d
 *
pRec‹d
){

1032 
S‹ãrRec‹d
 *
p
;

1033 
S‹ãrRec‹d
 *
pNext
;

1034 
p
=
pRec‹d
;Ö;Ö=
pNext
){

1035 
pNext
 = 
p
->
u
.pNext;

1036 
	`sqlôe3DbFªe
(
db
, 
p
);

1038 
	}
}

1044 
	$vdbeS‹tSubèskCÀ™up
(
sqlôe3
 *
db
, 
S‹tSubèsk
 *
pTask
){

1045 
	`sqlôe3DbFªe
(
db
, 
pTask
->
pU≈acked
);

1046 #i‡
SQLITE_MAX_WORKER_THREADS
>0

1049 if–
pTask
->
li°
.
aMem‹y
 ){

1050 
	`sqlôe3_‰ì
(
pTask
->
li°
.
aMem‹y
);

1054 
	`as£π
–
pTask
->
li°
.
aMem‹y
==0 );

1055 
	`vdbeS‹ãrRec‹dFªe
(0, 
pTask
->
li°
.
pLi°
);

1057 if–
pTask
->
fûe
.
pFd
 ){

1058 
	`sqlôe3OsClo£Fªe
(
pTask
->
fûe
.
pFd
);

1060 if–
pTask
->
fûe2
.
pFd
 ){

1061 
	`sqlôe3OsClo£Fªe
(
pTask
->
fûe2
.
pFd
);

1063 
	`mem£t
(
pTask
, 0, (
S‹tSubèsk
));

1064 
	}
}

1066 #ifde‡
SQLITE_DEBUG_SORTER_THREADS


1067 
	$vdbeS‹ãrW‹kDebug
(
S‹tSubèsk
 *
pTask
, c⁄° *
zEvít
){

1068 
i64
 
t
;

1069 
iTask
 = (
pTask
 -ÖTask->
pS‹ãr
->
aTask
);

1070 
	`sqlôe3OsCuºítTimeI¡64
(
pTask
->
pS‹ãr
->
db
->
pVfs
, &
t
);

1071 
	`Ârötf
(
°dîr
, "%Œd:%d %s\n", 
t
, 
iTask
, 
zEvít
);

1072 
	}
}

1073 
	$vdbeS‹ãrRewödDebug
(c⁄° *
zEvít
){

1074 
i64
 
t
;

1075 
	`sqlôe3OsCuºítTimeI¡64
(
	`sqlôe3_vfs_föd
(0), &
t
);

1076 
	`Ârötf
(
°dîr
, "%Œd:X %s\n", 
t
, 
zEvít
);

1077 
	}
}

1078 
	$vdbeS‹ãrP›uœãDebug
(

1079 
S‹tSubèsk
 *
pTask
,

1080 c⁄° *
zEvít


1082 
i64
 
t
;

1083 
iTask
 = (
pTask
 -ÖTask->
pS‹ãr
->
aTask
);

1084 
	`sqlôe3OsCuºítTimeI¡64
(
pTask
->
pS‹ãr
->
db
->
pVfs
, &
t
);

1085 
	`Ârötf
(
°dîr
, "%Œd:bg%d %s\n", 
t
, 
iTask
, 
zEvít
);

1086 
	}
}

1087 
	$vdbeS‹ãrBlockDebug
(

1088 
S‹tSubèsk
 *
pTask
,

1089 
bBlocked
,

1090 c⁄° *
zEvít


1092 if–
bBlocked
 ){

1093 
i64
 
t
;

1094 
	`sqlôe3OsCuºítTimeI¡64
(
pTask
->
pS‹ãr
->
db
->
pVfs
, &
t
);

1095 
	`Ârötf
(
°dîr
, "%Œd:maö %s\n", 
t
, 
zEvít
);

1097 
	}
}

1099 
	#vdbeS‹ãrW‹kDebug
(
x
,
y
)

	)

1100 
	#vdbeS‹ãrRewödDebug
(
y
)

	)

1101 
	#vdbeS‹ãrP›uœãDebug
(
x
,
y
)

	)

1102 
	#vdbeS‹ãrBlockDebug
(
x
,
y
,
z
)

	)

1105 #i‡
SQLITE_MAX_WORKER_THREADS
>0

1109 
	$vdbeS‹ãrJoöThªad
(
S‹tSubèsk
 *
pTask
){

1110 
rc
 = 
SQLITE_OK
;

1111 if–
pTask
->
pThªad
 ){

1112 #ifde‡
SQLITE_DEBUG_SORTER_THREADS


1113 
bD⁄e
 = 
pTask
->bDone;

1115 *
pRë
 = 
	`SQLITE_INT_TO_PTR
(
SQLITE_ERROR
);

1116 
	`vdbeS‹ãrBlockDebug
(
pTask
, !
bD⁄e
, "enter");

1117 ()
	`sqlôe3ThªadJoö
(
pTask
->
pThªad
, &
pRë
);

1118 
	`vdbeS‹ãrBlockDebug
(
pTask
, !
bD⁄e
, "exit");

1119 
rc
 = 
	`SQLITE_PTR_TO_INT
(
pRë
);

1120 
	`as£π
–
pTask
->
bD⁄e
==1 );

1121 
pTask
->
bD⁄e
 = 0;

1122 
pTask
->
pThªad
 = 0;

1124  
rc
;

1125 
	}
}

1130 
	$vdbeS‹ãrCª©eThªad
(

1131 
S‹tSubèsk
 *
pTask
,

1132 *(*
xTask
)(*),

1133 *
pIn


1135 
	`as£π
–
pTask
->
pThªad
==0 &&ÖTask->
bD⁄e
==0 );

1136  
	`sqlôe3ThªadCª©e
(&
pTask
->
pThªad
, 
xTask
, 
pIn
);

1137 
	}
}

1143 
	$vdbeS‹ãrJoöAŒ
(
VdbeS‹ãr
 *
pS‹ãr
, 
rcö
){

1144 
rc
 = 
rcö
;

1145 
i
;

1154 
i
=
pS‹ãr
->
nTask
-1; i>=0; i--){

1155 
S‹tSubèsk
 *
pTask
 = &
pS‹ãr
->
aTask
[
i
];

1156 
rc2
 = 
	`vdbeS‹ãrJoöThªad
(
pTask
);

1157 if–
rc
==
SQLITE_OK
 )Ñ¯
rc2
;

1159  
rc
;

1160 
	}
}

1162 
	#vdbeS‹ãrJoöAŒ
(
x
,
rcö
Ë‘cö)

	)

1163 
	#vdbeS‹ãrJoöThªad
(
pTask
Ë
SQLITE_OK


	)

1173 
MîgeEngöe
 *
	$vdbeMîgeEngöeNew
(
nRódî
){

1174 
N
 = 2;

1175 
nByã
;

1176 
MîgeEngöe
 *
pNew
;

1178 
	`as£π
–
nRódî
<=
SORTER_MAX_MERGE_COUNT
 );

1180  
N
<
nRódî
 ) N += N;

1181 
nByã
 = (
MîgeEngöe
Ë+ 
N
 * ((Ë+ (
PmaRódî
));

1183 
pNew
 = 
	`sqlôe3Fau…Sim
(100Ë? 0 : (
MîgeEngöe
*)
	`sqlôe3MÆlocZîo
(
nByã
);

1184 if–
pNew
 ){

1185 
pNew
->
nTªe
 = 
N
;

1186 
pNew
->
pTask
 = 0;

1187 
pNew
->
aRódr
 = (
PmaRódî
*)&pNew[1];

1188 
pNew
->
aTªe
 = (*)&pNew->
aRódr
[
N
];

1190  
pNew
;

1191 
	}
}

1196 
	$vdbeMîgeEngöeFªe
(
MîgeEngöe
 *
pMîgî
){

1197 
i
;

1198 if–
pMîgî
 ){

1199 
i
=0; i<
pMîgî
->
nTªe
; i++){

1200 
	`vdbePmaRódîCÀ¨
(&
pMîgî
->
aRódr
[
i
]);

1203 
	`sqlôe3_‰ì
(
pMîgî
);

1204 
	}
}

1210 
	$vdbeIn¸Fªe
(
In¸Mîgî
 *
pIn¸
){

1211 if–
pIn¸
 ){

1212 #i‡
SQLITE_MAX_WORKER_THREADS
>0

1213 if–
pIn¸
->
bU£Thªad
 ){

1214 
	`vdbeS‹ãrJoöThªad
(
pIn¸
->
pTask
);

1215 if–
pIn¸
->
aFûe
[0].
pFd
 ) 
	`sqlôe3OsClo£Fªe
(pIncr->aFile[0].pFd);

1216 if–
pIn¸
->
aFûe
[1].
pFd
 ) 
	`sqlôe3OsClo£Fªe
(pIncr->aFile[1].pFd);

1219 
	`vdbeMîgeEngöeFªe
(
pIn¸
->
pMîgî
);

1220 
	`sqlôe3_‰ì
(
pIn¸
);

1222 
	}
}

1227 
	$sqlôe3VdbeS‹ãrRe£t
(
sqlôe3
 *
db
, 
VdbeS‹ãr
 *
pS‹ãr
){

1228 
i
;

1229 ()
	`vdbeS‹ãrJoöAŒ
(
pS‹ãr
, 
SQLITE_OK
);

1230 
	`as£π
–
pS‹ãr
->
bU£Thªads
 ||ÖS‹ãr->
pRódî
==0 );

1231 #i‡
SQLITE_MAX_WORKER_THREADS
>0

1232 if–
pS‹ãr
->
pRódî
 ){

1233 
	`vdbePmaRódîCÀ¨
(
pS‹ãr
->
pRódî
);

1234 
	`sqlôe3DbFªe
(
db
, 
pS‹ãr
->
pRódî
);

1235 
pS‹ãr
->
pRódî
 = 0;

1238 
	`vdbeMîgeEngöeFªe
(
pS‹ãr
->
pMîgî
);

1239 
pS‹ãr
->
pMîgî
 = 0;

1240 
i
=0; i<
pS‹ãr
->
nTask
; i++){

1241 
S‹tSubèsk
 *
pTask
 = &
pS‹ãr
->
aTask
[
i
];

1242 
	`vdbeS‹tSubèskCÀ™up
(
db
, 
pTask
);

1243 
pTask
->
pS‹ãr
 =ÖSorter;

1245 if–
pS‹ãr
->
li°
.
aMem‹y
==0 ){

1246 
	`vdbeS‹ãrRec‹dFªe
(0, 
pS‹ãr
->
li°
.
pLi°
);

1248 
pS‹ãr
->
li°
.
pLi°
 = 0;

1249 
pS‹ãr
->
li°
.
szPMA
 = 0;

1250 
pS‹ãr
->
bU£PMA
 = 0;

1251 
pS‹ãr
->
iMem‹y
 = 0;

1252 
pS‹ãr
->
mxKeysize
 = 0;

1253 
	`sqlôe3DbFªe
(
db
, 
pS‹ãr
->
pU≈acked
);

1254 
pS‹ãr
->
pU≈acked
 = 0;

1255 
	}
}

1260 
	$sqlôe3VdbeS‹ãrClo£
(
sqlôe3
 *
db
, 
VdbeCurs‹
 *
pC§
){

1261 
VdbeS‹ãr
 *
pS‹ãr
;

1262 
	`as£π
–
pC§
->
eCurTy≥
==
CURTYPE_SORTER
 );

1263 
pS‹ãr
 = 
pC§
->
uc
.pSorter;

1264 if–
pS‹ãr
 ){

1265 
	`sqlôe3VdbeS‹ãrRe£t
(
db
, 
pS‹ãr
);

1266 
	`sqlôe3_‰ì
(
pS‹ãr
->
li°
.
aMem‹y
);

1267 
	`sqlôe3DbFªe
(
db
, 
pS‹ãr
);

1268 
pC§
->
uc
.
pS‹ãr
 = 0;

1270 
	}
}

1272 #i‡
SQLITE_MAX_MMAP_SIZE
>0

1282 
	$vdbeS‹ãrExãndFûe
(
sqlôe3
 *
db
, 
sqlôe3_fûe
 *
pFd
, 
i64
 
nByã
){

1283 if–
nByã
<=(
i64
)(
db
->
nMaxS‹ãrMm≠
Ë&& 
pFd
->
pMëhods
->
iVîsi⁄
>=3 ){

1284 *
p
 = 0;

1285 
chunksize
 = 4*1024;

1286 
	`sqlôe3OsFûeC⁄åﬁHöt
(
pFd
, 
SQLITE_FCNTL_CHUNK_SIZE
, &
chunksize
);

1287 
	`sqlôe3OsFûeC⁄åﬁHöt
(
pFd
, 
SQLITE_FCNTL_SIZE_HINT
, &
nByã
);

1288 
	`sqlôe3OsFëch
(
pFd
, 0, ()
nByã
, &
p
);

1289 
	`sqlôe3OsUn„tch
(
pFd
, 0, 
p
);

1291 
	}
}

1293 
	#vdbeS‹ãrExãndFûe
(
x
,
y
,
z
)

	)

1301 
	$vdbeS‹ãrO≥nTempFûe
(

1302 
sqlôe3
 *
db
,

1303 
i64
 
nExãnd
,

1304 
sqlôe3_fûe
 **
µFd


1306 
rc
;

1307 if–
	`sqlôe3Fau…Sim
(202ËË 
SQLITE_IOERR_ACCESS
;

1308 
rc
 = 
	`sqlôe3OsO≥nMÆloc
(
db
->
pVfs
, 0, 
µFd
,

1309 
SQLITE_OPEN_TEMP_JOURNAL
 |

1310 
SQLITE_OPEN_READWRITE
 | 
SQLITE_OPEN_CREATE
 |

1311 
SQLITE_OPEN_EXCLUSIVE
 | 
SQLITE_OPEN_DELETEONCLOSE
, &
rc


1313 if–
rc
==
SQLITE_OK
 ){

1314 
i64
 
max
 = 
SQLITE_MAX_MMAP_SIZE
;

1315 
	`sqlôe3OsFûeC⁄åﬁHöt
(*
µFd
, 
SQLITE_FCNTL_MMAP_SIZE
, (*)&
max
);

1316 if–
nExãnd
>0 ){

1317 
	`vdbeS‹ãrExãndFûe
(
db
, *
µFd
, 
nExãnd
);

1320  
rc
;

1321 
	}
}

1328 
	$vdbeS‹tAŒocU≈acked
(
S‹tSubèsk
 *
pTask
){

1329 if–
pTask
->
pU≈acked
==0 ){

1330 
pTask
->
pU≈acked
 = 
	`sqlôe3VdbeAŒocU≈ackedRec‹d
’Task->
pS‹ãr
->
pKeyInfo
);

1331 if–
pTask
->
pU≈acked
==0 )  
SQLITE_NOMEM_BKPT
;

1332 
pTask
->
pU≈acked
->
nFõld
 =ÖTask->
pS‹ãr
->
pKeyInfo
->nField;

1333 
pTask
->
pU≈acked
->
îrCode
 = 0;

1335  
SQLITE_OK
;

1336 
	}
}

1342 
S‹ãrRec‹d
 *
	$vdbeS‹ãrMîge
(

1343 
S‹tSubèsk
 *
pTask
,

1344 
S‹ãrRec‹d
 *
p1
,

1345 
S‹ãrRec‹d
 *
p2


1347 
S‹ãrRec‹d
 *
pFöÆ
 = 0;

1348 
S‹ãrRec‹d
 **
µ
 = &
pFöÆ
;

1349 
bCached
 = 0;

1351 
	`as£π
–
p1
!=0 && 
p2
!=0 );

1353 
ªs
;

1354 
ªs
 = 
pTask
->
	`xCom∑ª
(

1355 
pTask
, &
bCached
, 
	`SRVAL
(
p1
),Ö1->
nVÆ
, SRVAL(
p2
),Ö2->nVal

1358 if–
ªs
<=0 ){

1359 *
µ
 = 
p1
;

1360 
µ
 = &
p1
->
u
.
pNext
;

1361 
p1
 =Ö1->
u
.
pNext
;

1362 if–
p1
==0 ){

1363 *
µ
 = 
p2
;

1367 *
µ
 = 
p2
;

1368 
µ
 = &
p2
->
u
.
pNext
;

1369 
p2
 =Ö2->
u
.
pNext
;

1370 
bCached
 = 0;

1371 if–
p2
==0 ){

1372 *
µ
 = 
p1
;

1377  
pFöÆ
;

1378 
	}
}

1384 
S‹ãrCom∑ª
 
	$vdbeS‹ãrGëCom∑ª
(
VdbeS‹ãr
 *
p
){

1385 if–
p
->
ty≥Mask
==
SORTER_TYPE_INTEGER
 ){

1386  
vdbeS‹ãrCom∑ªI¡
;

1387 }if–
p
->
ty≥Mask
==
SORTER_TYPE_TEXT
 ){

1388  
vdbeS‹ãrCom∑ªText
;

1390  
vdbeS‹ãrCom∑ª
;

1391 
	}
}

1398 
	$vdbeS‹ãrS‹t
(
S‹tSubèsk
 *
pTask
, 
S‹ãrLi°
 *
pLi°
){

1399 
i
;

1400 
S‹ãrRec‹d
 **
aSlŸ
;

1401 
S‹ãrRec‹d
 *
p
;

1402 
rc
;

1404 
rc
 = 
	`vdbeS‹tAŒocU≈acked
(
pTask
);

1405 if–
rc
!=
SQLITE_OK
 ) Ñc;

1407 
p
 = 
pLi°
->pList;

1408 
pTask
->
xCom∑ª
 = 
	`vdbeS‹ãrGëCom∑ª
’Task->
pS‹ãr
);

1410 
aSlŸ
 = (
S‹ãrRec‹d
 **)
	`sqlôe3MÆlocZîo
(64 * (SorterRecord *));

1411 if–!
aSlŸ
 ){

1412  
SQLITE_NOMEM_BKPT
;

1415  
p
 ){

1416 
S‹ãrRec‹d
 *
pNext
;

1417 if–
pLi°
->
aMem‹y
 ){

1418 if–(
u8
*)
p
==
pLi°
->
aMem‹y
 ){

1419 
pNext
 = 0;

1421 
	`as£π
–
p
->
u
.
iNext
<
	`sqlôe3MÆlocSize
(
pLi°
->
aMem‹y
) );

1422 
pNext
 = (
S‹ãrRec‹d
*)&
pLi°
->
aMem‹y
[
p
->
u
.
iNext
];

1425 
pNext
 = 
p
->
u
.pNext;

1428 
p
->
u
.
pNext
 = 0;

1429 
i
=0; 
aSlŸ
[i]; i++){

1430 
p
 = 
	`vdbeS‹ãrMîge
(
pTask
,Ö, 
aSlŸ
[
i
]);

1431 
aSlŸ
[
i
] = 0;

1433 
aSlŸ
[
i
] = 
p
;

1434 
p
 = 
pNext
;

1437 
p
 = 0;

1438 
i
=0; i<64; i++){

1439 if–
aSlŸ
[
i
]==0 ) ;

1440 
p
 =Ö ? 
	`vdbeS‹ãrMîge
(
pTask
,Ö, 
aSlŸ
[
i
]) :áSlot[i];

1442 
pLi°
->pLi° = 
p
;

1444 
	`sqlôe3_‰ì
(
aSlŸ
);

1445 
	`as£π
–
pTask
->
pU≈acked
->
îrCode
==
SQLITE_OK


1446 || 
pTask
->
pU≈acked
->
îrCode
==
SQLITE_NOMEM


1448  
pTask
->
pU≈acked
->
îrCode
;

1449 
	}
}

1454 
	$vdbePmaWrôîInô
(

1455 
sqlôe3_fûe
 *
pFd
,

1456 
PmaWrôî
 *
p
,

1457 
nBuf
,

1458 
i64
 
iSèπ


1460 
	`mem£t
(
p
, 0, (
PmaWrôî
));

1461 
p
->
aBuf„r
 = (
u8
*)
	`sqlôe3MÆloc
(
nBuf
);

1462 if–!
p
->
aBuf„r
 ){

1463 
p
->
eFWEº
 = 
SQLITE_NOMEM_BKPT
;

1465 
p
->
iBufEnd
 =Ö->
iBufSèπ
 = (
iSèπ
 % 
nBuf
);

1466 
p
->
iWrôeOff
 = 
iSèπ
 -Ö->
iBufSèπ
;

1467 
p
->
nBuf„r
 = 
nBuf
;

1468 
p
->
pFd
 =ÖFd;

1470 
	}
}

1476 
	$vdbePmaWrôeBlob
(
PmaWrôî
 *
p
, 
u8
 *
pD©a
, 
nD©a
){

1477 
nRem
 = 
nD©a
;

1478  
nRem
>0 && 
p
->
eFWEº
==0 ){

1479 
nC›y
 = 
nRem
;

1480 if–
nC›y
>(
p
->
nBuf„r
 -Ö->
iBufEnd
) ){

1481 
nC›y
 = 
p
->
nBuf„r
 -Ö->
iBufEnd
;

1484 
	`mem˝y
(&
p
->
aBuf„r
[p->
iBufEnd
], &
pD©a
[
nD©a
-
nRem
], 
nC›y
);

1485 
p
->
iBufEnd
 +
nC›y
;

1486 if–
p
->
iBufEnd
=ı->
nBuf„r
 ){

1487 
p
->
eFWEº
 = 
	`sqlôe3OsWrôe
’->
pFd
,

1488 &
p
->
aBuf„r
[p->
iBufSèπ
],Ö->
iBufEnd
 -Ö->iBufStart,

1489 
p
->
iWrôeOff
 +Ö->
iBufSèπ


1491 
p
->
iBufSèπ
 =Ö->
iBufEnd
 = 0;

1492 
p
->
iWrôeOff
 +p->
nBuf„r
;

1494 
	`as£π
–
p
->
iBufEnd
<p->
nBuf„r
 );

1496 
nRem
 -
nC›y
;

1498 
	}
}

1509 
	$vdbePmaWrôîFöish
(
PmaWrôî
 *
p
, 
i64
 *
piEof
){

1510 
rc
;

1511 if–
p
->
eFWEº
==0 && 
	`ALWAYS
’->
aBuf„r
Ë&&Ö->
iBufEnd
>p->
iBufSèπ
 ){

1512 
p
->
eFWEº
 = 
	`sqlôe3OsWrôe
’->
pFd
,

1513 &
p
->
aBuf„r
[p->
iBufSèπ
],Ö->
iBufEnd
 -Ö->iBufStart,

1514 
p
->
iWrôeOff
 +Ö->
iBufSèπ


1517 *
piEof
 = (
p
->
iWrôeOff
 +Ö->
iBufEnd
);

1518 
	`sqlôe3_‰ì
(
p
->
aBuf„r
);

1519 
rc
 = 
p
->
eFWEº
;

1520 
	`mem£t
(
p
, 0, (
PmaWrôî
));

1521  
rc
;

1522 
	}
}

1528 
	$vdbePmaWrôeV¨öt
(
PmaWrôî
 *
p
, 
u64
 
iVÆ
){

1529 
nByã
;

1530 
u8
 
aByã
[10];

1531 
nByã
 = 
	`sqlôe3PutV¨öt
(
aByã
, 
iVÆ
);

1532 
	`vdbePmaWrôeBlob
(
p
, 
aByã
, 
nByã
);

1533 
	}
}

1549 
	$vdbeS‹ãrLi°ToPMA
(
S‹tSubèsk
 *
pTask
, 
S‹ãrLi°
 *
pLi°
){

1550 
sqlôe3
 *
db
 = 
pTask
->
pS‹ãr
->db;

1551 
rc
 = 
SQLITE_OK
;

1552 
PmaWrôî
 
wrôî
;

1554 #ifde‡
SQLITE_DEBUG


1557 
i64
 
iSz
 = 
pLi°
->
szPMA
 + 
	`sqlôe3V¨ötLí
’Li°->szPMAË+ 
pTask
->
fûe
.
iEof
;

1560 
	`vdbeS‹ãrW‹kDebug
(
pTask
, "enter");

1561 
	`mem£t
(&
wrôî
, 0, (
PmaWrôî
));

1562 
	`as£π
–
pLi°
->
szPMA
>0 );

1565 if–
pTask
->
fûe
.
pFd
==0 ){

1566 
rc
 = 
	`vdbeS‹ãrO≥nTempFûe
(
db
, 0, &
pTask
->
fûe
.
pFd
);

1567 
	`as£π
–
rc
!=
SQLITE_OK
 || 
pTask
->
fûe
.
pFd
 );

1568 
	`as£π
–
pTask
->
fûe
.
iEof
==0 );

1569 
	`as£π
–
pTask
->
nPMA
==0 );

1573 if–
rc
==
SQLITE_OK
 ){

1574 
	`vdbeS‹ãrExãndFûe
(
db
, 
pTask
->
fûe
.
pFd
,ÖTask->fûe.
iEof
+
pLi°
->
szPMA
+9);

1578 if–
rc
==
SQLITE_OK
 ){

1579 
rc
 = 
	`vdbeS‹ãrS‹t
(
pTask
, 
pLi°
);

1582 if–
rc
==
SQLITE_OK
 ){

1583 
S‹ãrRec‹d
 *
p
;

1584 
S‹ãrRec‹d
 *
pNext
 = 0;

1586 
	`vdbePmaWrôîInô
(
pTask
->
fûe
.
pFd
, &
wrôî
,ÖTask->
pS‹ãr
->
pgsz
,

1587 
pTask
->
fûe
.
iEof
);

1588 
pTask
->
nPMA
++;

1589 
	`vdbePmaWrôeV¨öt
(&
wrôî
, 
pLi°
->
szPMA
);

1590 
p
=
pLi°
->pLi°;Ö;Ö=
pNext
){

1591 
pNext
 = 
p
->
u
.pNext;

1592 
	`vdbePmaWrôeV¨öt
(&
wrôî
, 
p
->
nVÆ
);

1593 
	`vdbePmaWrôeBlob
(&
wrôî
, 
	`SRVAL
(
p
),Ö->
nVÆ
);

1594 if–
pLi°
->
aMem‹y
==0 ) 
	`sqlôe3_‰ì
(
p
);

1596 
pLi°
->pLi° = 
p
;

1597 
rc
 = 
	`vdbePmaWrôîFöish
(&
wrôî
, &
pTask
->
fûe
.
iEof
);

1600 
	`vdbeS‹ãrW‹kDebug
(
pTask
, "exit");

1601 
	`as£π
–
rc
!=
SQLITE_OK
 || 
pLi°
->pList==0 );

1602 
	`as£π
–
rc
!=
SQLITE_OK
 || 
pTask
->
fûe
.
iEof
==
iSz
 );

1603  
rc
;

1604 
	}
}

1613 
	$vdbeMîgeEngöeSãp
(

1614 
MîgeEngöe
 *
pMîgî
,

1615 *
pbEof


1617 
rc
;

1618 
iPªv
 = 
pMîgî
->
aTªe
[1];

1619 
S‹tSubèsk
 *
pTask
 = 
pMîgî
->pTask;

1622 
rc
 = 
	`vdbePmaRódîNext
(&
pMîgî
->
aRódr
[
iPªv
]);

1625 if–
rc
==
SQLITE_OK
 ){

1626 
i
;

1627 
PmaRódî
 *
pRódr1
;

1628 
PmaRódî
 *
pRódr2
;

1629 
bCached
 = 0;

1633 
pRódr1
 = &
pMîgî
->
aRódr
[(
iPªv
 & 0xFFFE)];

1634 
pRódr2
 = &
pMîgî
->
aRódr
[(
iPªv
 | 0x0001)];

1636 
i
=(
pMîgî
->
nTªe
+
iPªv
)/2; i>0; i=i/2){

1638 
iRes
;

1639 if–
pRódr1
->
pFd
==0 ){

1640 
iRes
 = +1;

1641 }if–
pRódr2
->
pFd
==0 ){

1642 
iRes
 = -1;

1644 
iRes
 = 
pTask
->
	`xCom∑ª
’Task, &
bCached
,

1645 
pRódr1
->
aKey
,ÖRódr1->
nKey
, 
pRódr2
->aKey,ÖReadr2->nKey

1664 if–
iRes
<0 || (iRes==0 && 
pRódr1
<
pRódr2
) ){

1665 
pMîgî
->
aTªe
[
i
] = ()(
pRódr1
 -ÖMîgî->
aRódr
);

1666 
pRódr2
 = &
pMîgî
->
aRódr
[ÖMîgî->
aTªe
[
i
 ^ 0x0001] ];

1667 
bCached
 = 0;

1669 if–
pRódr1
->
pFd
 ) 
bCached
 = 0;

1670 
pMîgî
->
aTªe
[
i
] = ()(
pRódr2
 -ÖMîgî->
aRódr
);

1671 
pRódr1
 = &
pMîgî
->
aRódr
[ÖMîgî->
aTªe
[
i
 ^ 0x0001] ];

1674 *
pbEof
 = (
pMîgî
->
aRódr
[pMîgî->
aTªe
[1]].
pFd
==0);

1677  (
rc
==
SQLITE_OK
 ? 
pTask
->
pU≈acked
->
îrCode
 :Ñc);

1678 
	}
}

1680 #i‡
SQLITE_MAX_WORKER_THREADS
>0

1684 *
	$vdbeS‹ãrFlushThªad
(*
pCtx
){

1685 
S‹tSubèsk
 *
pTask
 = (S‹tSubèsk*)
pCtx
;

1686 
rc
;

1687 
	`as£π
–
pTask
->
bD⁄e
==0 );

1688 
rc
 = 
	`vdbeS‹ãrLi°ToPMA
(
pTask
, &pTask->
li°
);

1689 
pTask
->
bD⁄e
 = 1;

1690  
	`SQLITE_INT_TO_PTR
(
rc
);

1691 
	}
}

1698 
	$vdbeS‹ãrFlushPMA
(
VdbeS‹ãr
 *
pS‹ãr
){

1699 #i‡
SQLITE_MAX_WORKER_THREADS
==0

1700 
pS‹ãr
->
bU£PMA
 = 1;

1701  
	`vdbeS‹ãrLi°ToPMA
(&
pS‹ãr
->
aTask
[0], &pS‹ãr->
li°
);

1703 
rc
 = 
SQLITE_OK
;

1704 
i
;

1705 
S‹tSubèsk
 *
pTask
 = 0;

1706 
nW‹kî
 = (
pS‹ãr
->
nTask
-1);

1710 
pS‹ãr
->
bU£PMA
 = 1;

1720 
i
=0; i<
nW‹kî
; i++){

1721 
iTe°
 = (
pS‹ãr
->
iPªv
 + 
i
 + 1Ë% 
nW‹kî
;

1722 
pTask
 = &
pS‹ãr
->
aTask
[
iTe°
];

1723 if–
pTask
->
bD⁄e
 ){

1724 
rc
 = 
	`vdbeS‹ãrJoöThªad
(
pTask
);

1726 if–
rc
!=
SQLITE_OK
 || 
pTask
->
pThªad
==0 ) ;

1729 if–
rc
==
SQLITE_OK
 ){

1730 if–
i
==
nW‹kî
 ){

1732 
rc
 = 
	`vdbeS‹ãrLi°ToPMA
(&
pS‹ãr
->
aTask
[
nW‹kî
], &pS‹ãr->
li°
);

1735 
u8
 *
aMem
 = 
pTask
->
li°
.
aMem‹y
;

1736 *
pCtx
 = (*)
pTask
;

1738 
	`as£π
–
pTask
->
pThªad
==0 &&ÖTask->
bD⁄e
==0 );

1739 
	`as£π
–
pTask
->
li°
.
pLi°
==0 );

1740 
	`as£π
–
pTask
->
li°
.
aMem‹y
==0 || 
pS‹ãr
->list.aMemory!=0 );

1742 
pS‹ãr
->
iPªv
 = (
u8
)(
pTask
 -ÖS‹ãr->
aTask
);

1743 
pTask
->
li°
 = 
pS‹ãr
->list;

1744 
pS‹ãr
->
li°
.
pLi°
 = 0;

1745 
pS‹ãr
->
li°
.
szPMA
 = 0;

1746 if–
aMem
 ){

1747 
pS‹ãr
->
li°
.
aMem‹y
 = 
aMem
;

1748 
pS‹ãr
->
nMem‹y
 = 
	`sqlôe3MÆlocSize
(
aMem
);

1749 }if–
pS‹ãr
->
li°
.
aMem‹y
 ){

1750 
pS‹ãr
->
li°
.
aMem‹y
 = 
	`sqlôe3MÆloc
’S‹ãr->
nMem‹y
);

1751 if–!
pS‹ãr
->
li°
.
aMem‹y
 )  
SQLITE_NOMEM_BKPT
;

1754 
rc
 = 
	`vdbeS‹ãrCª©eThªad
(
pTask
, 
vdbeS‹ãrFlushThªad
, 
pCtx
);

1758  
rc
;

1760 
	}
}

1765 
	$sqlôe3VdbeS‹ãrWrôe
(

1766 c⁄° 
VdbeCurs‹
 *
pC§
,

1767 
Mem
 *
pVÆ


1769 
VdbeS‹ãr
 *
pS‹ãr
;

1770 
rc
 = 
SQLITE_OK
;

1771 
S‹ãrRec‹d
 *
pNew
;

1772 
bFlush
;

1773 
nReq
;

1774 
nPMA
;

1775 
t
;

1777 
	`as£π
–
pC§
->
eCurTy≥
==
CURTYPE_SORTER
 );

1778 
pS‹ãr
 = 
pC§
->
uc
.pSorter;

1779 
	`gëV¨öt32
((c⁄° 
u8
*)&
pVÆ
->
z
[1], 
t
);

1780 if–
t
>0 &&Å<10 &&Å!=7 ){

1781 
pS‹ãr
->
ty≥Mask
 &
SORTER_TYPE_INTEGER
;

1782 }if–
t
>10 && (t & 0x01) ){

1783 
pS‹ãr
->
ty≥Mask
 &
SORTER_TYPE_TEXT
;

1785 
pS‹ãr
->
ty≥Mask
 = 0;

1788 
	`as£π
–
pS‹ãr
 );

1806 
nReq
 = 
pVÆ
->
n
 + (
S‹ãrRec‹d
);

1807 
nPMA
 = 
pVÆ
->
n
 + 
	`sqlôe3V¨ötLí
(pVal->n);

1808 if–
pS‹ãr
->
mxPmaSize
 ){

1809 if–
pS‹ãr
->
li°
.
aMem‹y
 ){

1810 
bFlush
 = 
pS‹ãr
->
iMem‹y
 && (pS‹ãr->iMem‹y+
nReq
Ë>ÖS‹ãr->
mxPmaSize
;

1812 
bFlush
 = (

1813 (
pS‹ãr
->
li°
.
szPMA
 >ÖS‹ãr->
mxPmaSize
)

1814 || (
pS‹ãr
->
li°
.
szPMA
 >ÖS‹ãr->
mnPmaSize
 && 
	`sqlôe3HópNóæyFuŒ
())

1817 if–
bFlush
 ){

1818 
rc
 = 
	`vdbeS‹ãrFlushPMA
(
pS‹ãr
);

1819 
pS‹ãr
->
li°
.
szPMA
 = 0;

1820 
pS‹ãr
->
iMem‹y
 = 0;

1821 
	`as£π
–
rc
!=
SQLITE_OK
 || 
pS‹ãr
->
li°
.
pLi°
==0 );

1825 
pS‹ãr
->
li°
.
szPMA
 +
nPMA
;

1826 if–
nPMA
>
pS‹ãr
->
mxKeysize
 ){

1827 
pS‹ãr
->
mxKeysize
 = 
nPMA
;

1830 if–
pS‹ãr
->
li°
.
aMem‹y
 ){

1831 
nMö
 = 
pS‹ãr
->
iMem‹y
 + 
nReq
;

1833 if–
nMö
>
pS‹ãr
->
nMem‹y
 ){

1834 
u8
 *
aNew
;

1835 
iLi°Off
 = (
u8
*)
pS‹ãr
->
li°
.
pLi°
 -ÖS‹ãr->li°.
aMem‹y
;

1836 
nNew
 = 
pS‹ãr
->
nMem‹y
 * 2;

1837  
nNew
 < 
nMö
 )ÇNew =ÇNew*2;

1838 if–
nNew
 > 
pS‹ãr
->
mxPmaSize
 )ÇNew =ÖSorter->mxPmaSize;

1839 if–
nNew
 < 
nMö
 )ÇNew =ÇMin;

1841 
aNew
 = 
	`sqlôe3RóŒoc
(
pS‹ãr
->
li°
.
aMem‹y
, 
nNew
);

1842 if–!
aNew
 )  
SQLITE_NOMEM_BKPT
;

1843 
pS‹ãr
->
li°
.
pLi°
 = (
S‹ãrRec‹d
*)&
aNew
[
iLi°Off
];

1844 
pS‹ãr
->
li°
.
aMem‹y
 = 
aNew
;

1845 
pS‹ãr
->
nMem‹y
 = 
nNew
;

1848 
pNew
 = (
S‹ãrRec‹d
*)&
pS‹ãr
->
li°
.
aMem‹y
[pS‹ãr->
iMem‹y
];

1849 
pS‹ãr
->
iMem‹y
 +
	`ROUND8
(
nReq
);

1850 if–
pS‹ãr
->
li°
.
pLi°
 ){

1851 
pNew
->
u
.
iNext
 = ()((
u8
*)(
pS‹ãr
->
li°
.
pLi°
Ë-ÖS‹ãr->li°.
aMem‹y
);

1854 
pNew
 = (
S‹ãrRec‹d
 *)
	`sqlôe3MÆloc
(
nReq
);

1855 if–
pNew
==0 ){

1856  
SQLITE_NOMEM_BKPT
;

1858 
pNew
->
u
.
pNext
 = 
pS‹ãr
->
li°
.
pLi°
;

1861 
	`mem˝y
(
	`SRVAL
(
pNew
), 
pVÆ
->
z
,ÖVÆ->
n
);

1862 
pNew
->
nVÆ
 = 
pVÆ
->
n
;

1863 
pS‹ãr
->
li°
.
pLi°
 = 
pNew
;

1865  
rc
;

1866 
	}
}

1873 
	$vdbeIn¸P›uœã
(
In¸Mîgî
 *
pIn¸
){

1874 
rc
 = 
SQLITE_OK
;

1875 
rc2
;

1876 
i64
 
iSèπ
 = 
pIn¸
->
iSèπOff
;

1877 
S‹ãrFûe
 *
pOut
 = &
pIn¸
->
aFûe
[1];

1878 
S‹tSubèsk
 *
pTask
 = 
pIn¸
->pTask;

1879 
MîgeEngöe
 *
pMîgî
 = 
pIn¸
->pMerger;

1880 
PmaWrôî
 
wrôî
;

1881 
	`as£π
–
pIn¸
->
bEof
==0 );

1883 
	`vdbeS‹ãrP›uœãDebug
(
pTask
, "enter");

1885 
	`vdbePmaWrôîInô
(
pOut
->
pFd
, &
wrôî
, 
pTask
->
pS‹ãr
->
pgsz
, 
iSèπ
);

1886  
rc
==
SQLITE_OK
 ){

1887 
dummy
;

1888 
PmaRódî
 *
pRódî
 = &
pMîgî
->
aRódr
[ÖMîgî->
aTªe
[1] ];

1889 
nKey
 = 
pRódî
->nKey;

1890 
i64
 
iEof
 = 
wrôî
.
iWrôeOff
 + wrôî.
iBufEnd
;

1894 if–
pRódî
->
pFd
==0 ) ;

1895 if–(
iEof
 + 
nKey
 + 
	`sqlôe3V¨ötLí
“Key))>(
iSèπ
 + 
pIn¸
->
mxSz
) ) ;

1898 
	`vdbePmaWrôeV¨öt
(&
wrôî
, 
nKey
);

1899 
	`vdbePmaWrôeBlob
(&
wrôî
, 
pRódî
->
aKey
, 
nKey
);

1900 
	`as£π
–
pIn¸
->
pMîgî
->
pTask
==pTask );

1901 
rc
 = 
	`vdbeMîgeEngöeSãp
(
pIn¸
->
pMîgî
, &
dummy
);

1904 
rc2
 = 
	`vdbePmaWrôîFöish
(&
wrôî
, &
pOut
->
iEof
);

1905 if–
rc
==
SQLITE_OK
 )Ñ¯
rc2
;

1906 
	`vdbeS‹ãrP›uœãDebug
(
pTask
, "exit");

1907  
rc
;

1908 
	}
}

1910 #i‡
SQLITE_MAX_WORKER_THREADS
>0

1915 *
	$vdbeIn¸P›uœãThªad
(*
pCtx
){

1916 
In¸Mîgî
 *
pIn¸
 = (In¸Mîgî*)
pCtx
;

1917 *
pRë
 = 
	`SQLITE_INT_TO_PTR
–
	`vdbeIn¸P›uœã
(
pIn¸
) );

1918 
pIn¸
->
pTask
->
bD⁄e
 = 1;

1919  
pRë
;

1920 
	}
}

1925 
	$vdbeIn¸BgP›uœã
(
In¸Mîgî
 *
pIn¸
){

1926 *
p
 = (*)
pIn¸
;

1927 
	`as£π
–
pIn¸
->
bU£Thªad
 );

1928  
	`vdbeS‹ãrCª©eThªad
(
pIn¸
->
pTask
, 
vdbeIn¸P›uœãThªad
, 
p
);

1929 
	}
}

1949 
	$vdbeIn¸Sw≠
(
In¸Mîgî
 *
pIn¸
){

1950 
rc
 = 
SQLITE_OK
;

1952 #i‡
SQLITE_MAX_WORKER_THREADS
>0

1953 if–
pIn¸
->
bU£Thªad
 ){

1954 
rc
 = 
	`vdbeS‹ãrJoöThªad
(
pIn¸
->
pTask
);

1956 if–
rc
==
SQLITE_OK
 ){

1957 
S‹ãrFûe
 
f0
 = 
pIn¸
->
aFûe
[0];

1958 
pIn¸
->
aFûe
[0] =ÖIncr->aFile[1];

1959 
pIn¸
->
aFûe
[1] = 
f0
;

1962 if–
rc
==
SQLITE_OK
 ){

1963 if–
pIn¸
->
aFûe
[0].
iEof
=ıIn¸->
iSèπOff
 ){

1964 
pIn¸
->
bEof
 = 1;

1966 
rc
 = 
	`vdbeIn¸BgP›uœã
(
pIn¸
);

1972 
rc
 = 
	`vdbeIn¸P›uœã
(
pIn¸
);

1973 
pIn¸
->
aFûe
[0] =ÖIncr->aFile[1];

1974 if–
pIn¸
->
aFûe
[0].
iEof
=ıIn¸->
iSèπOff
 ){

1975 
pIn¸
->
bEof
 = 1;

1979  
rc
;

1980 
	}
}

1988 
	$vdbeIn¸MîgîNew
(

1989 
S‹tSubèsk
 *
pTask
,

1990 
MîgeEngöe
 *
pMîgî
,

1991 
In¸Mîgî
 **
µOut


1993 
rc
 = 
SQLITE_OK
;

1994 
In¸Mîgî
 *
pIn¸
 = *
µOut
 = (IncrMerger*)

1995 (
	`sqlôe3Fau…Sim
(100Ë? 0 : 
	`sqlôe3MÆlocZîo
((*
pIn¸
)));

1996 if–
pIn¸
 ){

1997 
pIn¸
->
pMîgî
 =ÖMerger;

1998 
pIn¸
->
pTask
 =ÖTask;

1999 
pIn¸
->
mxSz
 = 
	`MAX
(
pTask
->
pS‹ãr
->
mxKeysize
+9,pTask->pS‹ãr->
mxPmaSize
/2);

2000 
pTask
->
fûe2
.
iEof
 +
pIn¸
->
mxSz
;

2002 
	`vdbeMîgeEngöeFªe
(
pMîgî
);

2003 
rc
 = 
SQLITE_NOMEM_BKPT
;

2005  
rc
;

2006 
	}
}

2008 #i‡
SQLITE_MAX_WORKER_THREADS
>0

2012 
	$vdbeIn¸MîgîSëThªads
(
In¸Mîgî
 *
pIn¸
){

2013 
pIn¸
->
bU£Thªad
 = 1;

2014 
pIn¸
->
pTask
->
fûe2
.
iEof
 -pIn¸->
mxSz
;

2015 
	}
}

2025 
	$vdbeMîgeEngöeCom∑ª
(

2026 
MîgeEngöe
 *
pMîgî
,

2027 
iOut


2029 
i1
;

2030 
i2
;

2031 
iRes
;

2032 
PmaRódî
 *
p1
;

2033 
PmaRódî
 *
p2
;

2035 
	`as£π
–
iOut
<
pMîgî
->
nTªe
 && iOut>0 );

2037 if–
iOut
>=(
pMîgî
->
nTªe
/2) ){

2038 
i1
 = (
iOut
 - 
pMîgî
->
nTªe
/2) * 2;

2039 
i2
 = 
i1
 + 1;

2041 
i1
 = 
pMîgî
->
aTªe
[
iOut
*2];

2042 
i2
 = 
pMîgî
->
aTªe
[
iOut
*2+1];

2045 
p1
 = &
pMîgî
->
aRódr
[
i1
];

2046 
p2
 = &
pMîgî
->
aRódr
[
i2
];

2048 if–
p1
->
pFd
==0 ){

2049 
iRes
 = 
i2
;

2050 }if–
p2
->
pFd
==0 ){

2051 
iRes
 = 
i1
;

2053 
S‹tSubèsk
 *
pTask
 = 
pMîgî
->pTask;

2054 
bCached
 = 0;

2055 
ªs
;

2056 
	`as£π
–
pTask
->
pU≈acked
!=0 );

2057 
ªs
 = 
pTask
->
	`xCom∑ª
(

2058 
pTask
, &
bCached
, 
p1
->
aKey
,Ö1->
nKey
, 
p2
->aKey,Ö2->nKey

2060 if–
ªs
<=0 ){

2061 
iRes
 = 
i1
;

2063 
iRes
 = 
i2
;

2067 
pMîgî
->
aTªe
[
iOut
] = 
iRes
;

2068 
	}
}

2078 
	#INCRINIT_NORMAL
 0

	)

2079 
	#INCRINIT_TASK
 1

	)

2080 
	#INCRINIT_ROOT
 2

	)

2087 
vdbePmaRódîIn¸Inô
(
PmaRódî
 *
pRódr
, 
eMode
);

2107 
	$vdbeMîgeEngöeInô
(

2108 
S‹tSubèsk
 *
pTask
,

2109 
MîgeEngöe
 *
pMîgî
,

2110 
eMode


2112 
rc
 = 
SQLITE_OK
;

2113 
i
;

2114 
nTªe
 = 
pMîgî
->nTree;

2117 
	`as£π
–
SQLITE_MAX_WORKER_THREADS
>0 || 
eMode
==
INCRINIT_NORMAL
 );

2120 
	`as£π
–
pMîgî
->
pTask
==0 );

2121 
pMîgî
->
pTask
 =ÖTask;

2123 
i
=0; i<
nTªe
; i++){

2124 if–
SQLITE_MAX_WORKER_THREADS
>0 && 
eMode
==
INCRINIT_ROOT
 ){

2132 
rc
 = 
	`vdbePmaRódîNext
(&
pMîgî
->
aRódr
[
nTªe
-
i
-1]);

2134 
rc
 = 
	`vdbePmaRódîIn¸Inô
(&
pMîgî
->
aRódr
[
i
], 
INCRINIT_NORMAL
);

2136 if–
rc
!=
SQLITE_OK
 ) Ñc;

2139 
i
=
pMîgî
->
nTªe
-1; i>0; i--){

2140 
	`vdbeMîgeEngöeCom∑ª
(
pMîgî
, 
i
);

2142  
pTask
->
pU≈acked
->
îrCode
;

2143 
	}
}

2178 
	$vdbePmaRódîIn¸MîgeInô
(
PmaRódî
 *
pRódr
, 
eMode
){

2179 
rc
 = 
SQLITE_OK
;

2180 
In¸Mîgî
 *
pIn¸
 = 
pRódr
->pIncr;

2181 
S‹tSubèsk
 *
pTask
 = 
pIn¸
->pTask;

2182 
sqlôe3
 *
db
 = 
pTask
->
pS‹ãr
->db;

2185 
	`as£π
–
SQLITE_MAX_WORKER_THREADS
>0 || 
eMode
==
INCRINIT_NORMAL
 );

2187 
rc
 = 
	`vdbeMîgeEngöeInô
(
pTask
, 
pIn¸
->
pMîgî
, 
eMode
);

2192 if–
rc
==
SQLITE_OK
 ){

2193 
mxSz
 = 
pIn¸
->mxSz;

2194 #i‡
SQLITE_MAX_WORKER_THREADS
>0

2195 if–
pIn¸
->
bU£Thªad
 ){

2196 
rc
 = 
	`vdbeS‹ãrO≥nTempFûe
(
db
, 
mxSz
, &
pIn¸
->
aFûe
[0].
pFd
);

2197 if–
rc
==
SQLITE_OK
 ){

2198 
rc
 = 
	`vdbeS‹ãrO≥nTempFûe
(
db
, 
mxSz
, &
pIn¸
->
aFûe
[1].
pFd
);

2203 if–
pTask
->
fûe2
.
pFd
==0 ){

2204 
	`as£π
–
pTask
->
fûe2
.
iEof
>0 );

2205 
rc
 = 
	`vdbeS‹ãrO≥nTempFûe
(
db
, 
pTask
->
fûe2
.
iEof
, &pTask->fûe2.
pFd
);

2206 
pTask
->
fûe2
.
iEof
 = 0;

2208 if–
rc
==
SQLITE_OK
 ){

2209 
pIn¸
->
aFûe
[1].
pFd
 = 
pTask
->
fûe2
.pFd;

2210 
pIn¸
->
iSèπOff
 = 
pTask
->
fûe2
.
iEof
;

2211 
pTask
->
fûe2
.
iEof
 +
mxSz
;

2216 #i‡
SQLITE_MAX_WORKER_THREADS
>0

2217 if–
rc
==
SQLITE_OK
 && 
pIn¸
->
bU£Thªad
 ){

2228 
	`as£π
–
eMode
==
INCRINIT_ROOT
 ||ÉMode==
INCRINIT_TASK
 );

2229 
rc
 = 
	`vdbeIn¸P›uœã
(
pIn¸
);

2233 if–
rc
==
SQLITE_OK
 && (
SQLITE_MAX_WORKER_THREADS
==0 || 
eMode
!=
INCRINIT_TASK
) ){

2234 
rc
 = 
	`vdbePmaRódîNext
(
pRódr
);

2237  
rc
;

2238 
	}
}

2240 #i‡
SQLITE_MAX_WORKER_THREADS
>0

2245 *
	$vdbePmaRódîBgIn¸Inô
(*
pCtx
){

2246 
PmaRódî
 *
pRódî
 = (PmaRódî*)
pCtx
;

2247 *
pRë
 = 
	`SQLITE_INT_TO_PTR
(

2248 
	`vdbePmaRódîIn¸MîgeInô
(
pRódî
,
INCRINIT_TASK
)

2250 
pRódî
->
pIn¸
->
pTask
->
bD⁄e
 = 1;

2251  
pRë
;

2252 
	}
}

2266 
	$vdbePmaRódîIn¸Inô
(
PmaRódî
 *
pRódr
, 
eMode
){

2267 
In¸Mîgî
 *
pIn¸
 = 
pRódr
->pIncr;

2268 
rc
 = 
SQLITE_OK
;

2269 if–
pIn¸
 ){

2270 #i‡
SQLITE_MAX_WORKER_THREADS
>0

2271 
	`as£π
–
pIn¸
->
bU£Thªad
==0 || 
eMode
==
INCRINIT_TASK
 );

2272 if–
pIn¸
->
bU£Thªad
 ){

2273 *
pCtx
 = (*)
pRódr
;

2274 
rc
 = 
	`vdbeS‹ãrCª©eThªad
(
pIn¸
->
pTask
, 
vdbePmaRódîBgIn¸Inô
, 
pCtx
);

2278 
rc
 = 
	`vdbePmaRódîIn¸MîgeInô
(
pRódr
, 
eMode
);

2281  
rc
;

2282 
	}
}

2296 
	$vdbeMîgeEngöeLevñ0
(

2297 
S‹tSubèsk
 *
pTask
,

2298 
nPMA
,

2299 
i64
 *
piOff£t
,

2300 
MîgeEngöe
 **
µOut


2302 
MîgeEngöe
 *
pNew
;

2303 
i64
 
iOff
 = *
piOff£t
;

2304 
i
;

2305 
rc
 = 
SQLITE_OK
;

2307 *
µOut
 = 
pNew
 = 
	`vdbeMîgeEngöeNew
(
nPMA
);

2308 if–
pNew
==0 ) 
rc
 = 
SQLITE_NOMEM_BKPT
;

2310 
i
=0; i<
nPMA
 && 
rc
==
SQLITE_OK
; i++){

2311 
i64
 
nDummy
 = 0;

2312 
PmaRódî
 *
pRódr
 = &
pNew
->
aRódr
[
i
];

2313 
rc
 = 
	`vdbePmaRódîInô
(
pTask
, &pTask->
fûe
, 
iOff
, 
pRódr
, &
nDummy
);

2314 
iOff
 = 
pRódr
->
iEof
;

2317 if–
rc
!=
SQLITE_OK
 ){

2318 
	`vdbeMîgeEngöeFªe
(
pNew
);

2319 *
µOut
 = 0;

2321 *
piOff£t
 = 
iOff
;

2322  
rc
;

2323 
	}
}

2335 
	$vdbeS‹ãrTªeDïth
(
nPMA
){

2336 
nDïth
 = 0;

2337 
i64
 
nDiv
 = 
SORTER_MAX_MERGE_COUNT
;

2338  
nDiv
 < (
i64
)
nPMA
 ){

2339 
nDiv
 =ÇDiv * 
SORTER_MAX_MERGE_COUNT
;

2340 
nDïth
++;

2342  
nDïth
;

2343 
	}
}

2353 
	$vdbeS‹ãrAddToTªe
(

2354 
S‹tSubèsk
 *
pTask
,

2355 
nDïth
,

2356 
iSeq
,

2357 
MîgeEngöe
 *
pRoŸ
,

2358 
MîgeEngöe
 *
pLóf


2360 
rc
 = 
SQLITE_OK
;

2361 
nDiv
 = 1;

2362 
i
;

2363 
MîgeEngöe
 *
p
 = 
pRoŸ
;

2364 
In¸Mîgî
 *
pIn¸
;

2366 
rc
 = 
	`vdbeIn¸MîgîNew
(
pTask
, 
pLóf
, &
pIn¸
);

2368 
i
=1; i<
nDïth
; i++){

2369 
nDiv
 =ÇDiv * 
SORTER_MAX_MERGE_COUNT
;

2372 
i
=1; i<
nDïth
 && 
rc
==
SQLITE_OK
; i++){

2373 
iIãr
 = (
iSeq
 / 
nDiv
Ë% 
SORTER_MAX_MERGE_COUNT
;

2374 
PmaRódî
 *
pRódr
 = &
p
->
aRódr
[
iIãr
];

2376 if–
pRódr
->
pIn¸
==0 ){

2377 
MîgeEngöe
 *
pNew
 = 
	`vdbeMîgeEngöeNew
(
SORTER_MAX_MERGE_COUNT
);

2378 if–
pNew
==0 ){

2379 
rc
 = 
SQLITE_NOMEM_BKPT
;

2381 
rc
 = 
	`vdbeIn¸MîgîNew
(
pTask
, 
pNew
, &
pRódr
->
pIn¸
);

2384 if–
rc
==
SQLITE_OK
 ){

2385 
p
 = 
pRódr
->
pIn¸
->
pMîgî
;

2386 
nDiv
 =ÇDiv / 
SORTER_MAX_MERGE_COUNT
;

2390 if–
rc
==
SQLITE_OK
 ){

2391 
p
->
aRódr
[
iSeq
 % 
SORTER_MAX_MERGE_COUNT
].
pIn¸
 =ÖIncr;

2393 
	`vdbeIn¸Fªe
(
pIn¸
);

2395  
rc
;

2396 
	}
}

2409 
	$vdbeS‹ãrMîgeTªeBuûd
(

2410 
VdbeS‹ãr
 *
pS‹ãr
,

2411 
MîgeEngöe
 **
µOut


2413 
MîgeEngöe
 *
pMaö
 = 0;

2414 
rc
 = 
SQLITE_OK
;

2415 
iTask
;

2417 #i‡
SQLITE_MAX_WORKER_THREADS
>0

2421 
	`as£π
–
pS‹ãr
->
bU£Thªads
 ||ÖS‹ãr->
nTask
==1 );

2422 if–
pS‹ãr
->
nTask
>1 ){

2423 
pMaö
 = 
	`vdbeMîgeEngöeNew
(
pS‹ãr
->
nTask
);

2424 if–
pMaö
==0 ) 
rc
 = 
SQLITE_NOMEM_BKPT
;

2428 
iTask
=0; 
rc
==
SQLITE_OK
 && iTask<
pS‹ãr
->
nTask
; iTask++){

2429 
S‹tSubèsk
 *
pTask
 = &
pS‹ãr
->
aTask
[
iTask
];

2430 
	`as£π
–
pTask
->
nPMA
>0 || 
SQLITE_MAX_WORKER_THREADS
>0 );

2431 if–
SQLITE_MAX_WORKER_THREADS
==0 || 
pTask
->
nPMA
 ){

2432 
MîgeEngöe
 *
pRoŸ
 = 0;

2433 
nDïth
 = 
	`vdbeS‹ãrTªeDïth
(
pTask
->
nPMA
);

2434 
i64
 
iRódOff
 = 0;

2436 if–
pTask
->
nPMA
<=
SORTER_MAX_MERGE_COUNT
 ){

2437 
rc
 = 
	`vdbeMîgeEngöeLevñ0
(
pTask
,ÖTask->
nPMA
, &
iRódOff
, &
pRoŸ
);

2439 
i
;

2440 
iSeq
 = 0;

2441 
pRoŸ
 = 
	`vdbeMîgeEngöeNew
(
SORTER_MAX_MERGE_COUNT
);

2442 if–
pRoŸ
==0 ) 
rc
 = 
SQLITE_NOMEM_BKPT
;

2443 
i
=0; i<
pTask
->
nPMA
 && 
rc
==
SQLITE_OK
; i +
SORTER_MAX_MERGE_COUNT
){

2444 
MîgeEngöe
 *
pMîgî
 = 0;

2445 
nRódî
;

2447 
nRódî
 = 
	`MIN
(
pTask
->
nPMA
 - 
i
, 
SORTER_MAX_MERGE_COUNT
);

2448 
rc
 = 
	`vdbeMîgeEngöeLevñ0
(
pTask
, 
nRódî
, &
iRódOff
, &
pMîgî
);

2449 if–
rc
==
SQLITE_OK
 ){

2450 
rc
 = 
	`vdbeS‹ãrAddToTªe
(
pTask
, 
nDïth
, 
iSeq
++, 
pRoŸ
, 
pMîgî
);

2455 if–
rc
==
SQLITE_OK
 ){

2456 #i‡
SQLITE_MAX_WORKER_THREADS
>0

2457 if–
pMaö
!=0 ){

2458 
rc
 = 
	`vdbeIn¸MîgîNew
(
pTask
, 
pRoŸ
, &
pMaö
->
aRódr
[
iTask
].
pIn¸
);

2462 
	`as£π
–
pMaö
==0 );

2463 
pMaö
 = 
pRoŸ
;

2466 
	`vdbeMîgeEngöeFªe
(
pRoŸ
);

2471 if–
rc
!=
SQLITE_OK
 ){

2472 
	`vdbeMîgeEngöeFªe
(
pMaö
);

2473 
pMaö
 = 0;

2475 *
µOut
 = 
pMaö
;

2476  
rc
;

2477 
	}
}

2488 
	$vdbeS‹ãrSëupMîge
(
VdbeS‹ãr
 *
pS‹ãr
){

2489 
rc
;

2490 
S‹tSubèsk
 *
pTask0
 = &
pS‹ãr
->
aTask
[0];

2491 
MîgeEngöe
 *
pMaö
 = 0;

2492 #i‡
SQLITE_MAX_WORKER_THREADS


2493 
sqlôe3
 *
db
 = 
pTask0
->
pS‹ãr
->db;

2494 
i
;

2495 
S‹ãrCom∑ª
 
xCom∑ª
 = 
	`vdbeS‹ãrGëCom∑ª
(
pS‹ãr
);

2496 
i
=0; i<
pS‹ãr
->
nTask
; i++){

2497 
pS‹ãr
->
aTask
[
i
].
xCom∑ª
 = xCompare;

2501 
rc
 = 
	`vdbeS‹ãrMîgeTªeBuûd
(
pS‹ãr
, &
pMaö
);

2502 if–
rc
==
SQLITE_OK
 ){

2503 #i‡
SQLITE_MAX_WORKER_THREADS


2504 
	`as£π
–
pS‹ãr
->
bU£Thªads
==0 ||ÖS‹ãr->
nTask
>1 );

2505 if–
pS‹ãr
->
bU£Thªads
 ){

2506 
iTask
;

2507 
PmaRódî
 *
pRódr
 = 0;

2508 
S‹tSubèsk
 *
pLa°
 = &
pS‹ãr
->
aTask
[pS‹ãr->
nTask
-1];

2509 
rc
 = 
	`vdbeS‹tAŒocU≈acked
(
pLa°
);

2510 if–
rc
==
SQLITE_OK
 ){

2511 
pRódr
 = (
PmaRódî
*)
	`sqlôe3DbMÆlocZîo
(
db
, (PmaReader));

2512 
pS‹ãr
->
pRódî
 = 
pRódr
;

2513 if–
pRódr
==0 ) 
rc
 = 
SQLITE_NOMEM_BKPT
;

2515 if–
rc
==
SQLITE_OK
 ){

2516 
rc
 = 
	`vdbeIn¸MîgîNew
(
pLa°
, 
pMaö
, &
pRódr
->
pIn¸
);

2517 if–
rc
==
SQLITE_OK
 ){

2518 
	`vdbeIn¸MîgîSëThªads
(
pRódr
->
pIn¸
);

2519 
iTask
=0; iTask<(
pS‹ãr
->
nTask
-1); iTask++){

2520 
In¸Mîgî
 *
pIn¸
;

2521 if–(
pIn¸
 = 
pMaö
->
aRódr
[
iTask
].pIncr) ){

2522 
	`vdbeIn¸MîgîSëThªads
(
pIn¸
);

2523 
	`as£π
–
pIn¸
->
pTask
!=
pLa°
 );

2526 
iTask
=0; 
rc
==
SQLITE_OK
 && iTask<
pS‹ãr
->
nTask
; iTask++){

2536 
PmaRódî
 *
p
 = &
pMaö
->
aRódr
[
iTask
];

2537 
	`as£π
–
p
->
pIn¸
==0 || (

2538 (
p
->
pIn¸
->
pTask
==&
pS‹ãr
->
aTask
[
iTask
])

2539 && (
iTask
!=
pS‹ãr
->
nTask
-1 || 
p
->
pIn¸
->
bU£Thªad
==0)

2541 
rc
 = 
	`vdbePmaRódîIn¸Inô
(
p
, 
INCRINIT_TASK
);

2544 
pMaö
 = 0;

2546 if–
rc
==
SQLITE_OK
 ){

2547 
rc
 = 
	`vdbePmaRódîIn¸MîgeInô
(
pRódr
, 
INCRINIT_ROOT
);

2552 
rc
 = 
	`vdbeMîgeEngöeInô
(
pTask0
, 
pMaö
, 
INCRINIT_NORMAL
);

2553 
pS‹ãr
->
pMîgî
 = 
pMaö
;

2554 
pMaö
 = 0;

2558 if–
rc
!=
SQLITE_OK
 ){

2559 
	`vdbeMîgeEngöeFªe
(
pMaö
);

2561  
rc
;

2562 
	}
}

2570 
	$sqlôe3VdbeS‹ãrRewöd
(c⁄° 
VdbeCurs‹
 *
pC§
, *
pbEof
){

2571 
VdbeS‹ãr
 *
pS‹ãr
;

2572 
rc
 = 
SQLITE_OK
;

2574 
	`as£π
–
pC§
->
eCurTy≥
==
CURTYPE_SORTER
 );

2575 
pS‹ãr
 = 
pC§
->
uc
.pSorter;

2576 
	`as£π
–
pS‹ãr
 );

2581 if–
pS‹ãr
->
bU£PMA
==0 ){

2582 if–
pS‹ãr
->
li°
.
pLi°
 ){

2583 *
pbEof
 = 0;

2584 
rc
 = 
	`vdbeS‹ãrS‹t
(&
pS‹ãr
->
aTask
[0], &pS‹ãr->
li°
);

2586 *
pbEof
 = 1;

2588  
rc
;

2595 
	`as£π
–
pS‹ãr
->
li°
.
pLi°
 );

2596 
rc
 = 
	`vdbeS‹ãrFlushPMA
(
pS‹ãr
);

2599 
rc
 = 
	`vdbeS‹ãrJoöAŒ
(
pS‹ãr
,Ñc);

2601 
	`vdbeS‹ãrRewödDebug
("rewind");

2605 
	`as£π
–
pS‹ãr
->
pRódî
==0 );

2606 if–
rc
==
SQLITE_OK
 ){

2607 
rc
 = 
	`vdbeS‹ãrSëupMîge
(
pS‹ãr
);

2608 *
pbEof
 = 0;

2611 
	`vdbeS‹ãrRewödDebug
("rewinddone");

2612  
rc
;

2613 
	}
}

2618 
	$sqlôe3VdbeS‹ãrNext
(
sqlôe3
 *
db
, c⁄° 
VdbeCurs‹
 *
pC§
, *
pbEof
){

2619 
VdbeS‹ãr
 *
pS‹ãr
;

2620 
rc
;

2622 
	`as£π
–
pC§
->
eCurTy≥
==
CURTYPE_SORTER
 );

2623 
pS‹ãr
 = 
pC§
->
uc
.pSorter;

2624 
	`as£π
–
pS‹ãr
->
bU£PMA
 || (pS‹ãr->
pRódî
==0 &&ÖS‹ãr->
pMîgî
==0) );

2625 if–
pS‹ãr
->
bU£PMA
 ){

2626 
	`as£π
–
pS‹ãr
->
pRódî
==0 ||ÖS‹ãr->
pMîgî
==0 );

2627 
	`as£π
–
pS‹ãr
->
bU£Thªads
==0 ||ÖS‹ãr->
pRódî
 );

2628 
	`as£π
–
pS‹ãr
->
bU£Thªads
==1 ||ÖS‹ãr->
pMîgî
 );

2629 #i‡
SQLITE_MAX_WORKER_THREADS
>0

2630 if–
pS‹ãr
->
bU£Thªads
 ){

2631 
rc
 = 
	`vdbePmaRódîNext
(
pS‹ãr
->
pRódî
);

2632 *
pbEof
 = (
pS‹ãr
->
pRódî
->
pFd
==0);

2636 
	`as£π
–
pS‹ãr
->
pMîgî
!=0 );

2637 
	`as£π
–
pS‹ãr
->
pMîgî
->
pTask
==(&pS‹ãr->
aTask
[0]) );

2638 
rc
 = 
	`vdbeMîgeEngöeSãp
(
pS‹ãr
->
pMîgî
, 
pbEof
);

2641 
S‹ãrRec‹d
 *
pFªe
 = 
pS‹ãr
->
li°
.
pLi°
;

2642 
pS‹ãr
->
li°
.
pLi°
 = 
pFªe
->
u
.
pNext
;

2643 
pFªe
->
u
.
pNext
 = 0;

2644 if–
pS‹ãr
->
li°
.
aMem‹y
==0 ) 
	`vdbeS‹ãrRec‹dFªe
(
db
, 
pFªe
);

2645 *
pbEof
 = !
pS‹ãr
->
li°
.
pLi°
;

2646 
rc
 = 
SQLITE_OK
;

2648  
rc
;

2649 
	}
}

2655 *
	$vdbeS‹ãrRowkey
(

2656 c⁄° 
VdbeS‹ãr
 *
pS‹ãr
,

2657 *
≤Key


2659 *
pKey
;

2660 if–
pS‹ãr
->
bU£PMA
 ){

2661 
PmaRódî
 *
pRódî
;

2662 #i‡
SQLITE_MAX_WORKER_THREADS
>0

2663 if–
pS‹ãr
->
bU£Thªads
 ){

2664 
pRódî
 = 
pS‹ãr
->pReader;

2668 
pRódî
 = &
pS‹ãr
->
pMîgî
->
aRódr
[pS‹ãr->pMîgî->
aTªe
[1]];

2670 *
≤Key
 = 
pRódî
->
nKey
;

2671 
pKey
 = 
pRódî
->
aKey
;

2673 *
≤Key
 = 
pS‹ãr
->
li°
.
pLi°
->
nVÆ
;

2674 
pKey
 = 
	`SRVAL
(
pS‹ãr
->
li°
.
pLi°
);

2676  
pKey
;

2677 
	}
}

2682 
	$sqlôe3VdbeS‹ãrRowkey
(c⁄° 
VdbeCurs‹
 *
pC§
, 
Mem
 *
pOut
){

2683 
VdbeS‹ãr
 *
pS‹ãr
;

2684 *
pKey
; 
nKey
;

2686 
	`as£π
–
pC§
->
eCurTy≥
==
CURTYPE_SORTER
 );

2687 
pS‹ãr
 = 
pC§
->
uc
.pSorter;

2688 
pKey
 = 
	`vdbeS‹ãrRowkey
(
pS‹ãr
, &
nKey
);

2689 if–
	`sqlôe3VdbeMemCÀ¨AndResize
(
pOut
, 
nKey
) ){

2690  
SQLITE_NOMEM_BKPT
;

2692 
pOut
->
n
 = 
nKey
;

2693 
	`MemSëTy≥Fœg
(
pOut
, 
MEM_Blob
);

2694 
	`mem˝y
(
pOut
->
z
, 
pKey
, 
nKey
);

2696  
SQLITE_OK
;

2697 
	}
}

2715 
	$sqlôe3VdbeS‹ãrCom∑ª
(

2716 c⁄° 
VdbeCurs‹
 *
pC§
,

2717 
Mem
 *
pVÆ
,

2718 
nKeyCﬁ
,

2719 *
pRes


2721 
VdbeS‹ãr
 *
pS‹ãr
;

2722 
U≈ackedRec‹d
 *
r2
;

2723 
KeyInfo
 *
pKeyInfo
;

2724 
i
;

2725 *
pKey
; 
nKey
;

2727 
	`as£π
–
pC§
->
eCurTy≥
==
CURTYPE_SORTER
 );

2728 
pS‹ãr
 = 
pC§
->
uc
.pSorter;

2729 
r2
 = 
pS‹ãr
->
pU≈acked
;

2730 
pKeyInfo
 = 
pC§
->pKeyInfo;

2731 if–
r2
==0 ){

2732 
r2
 = 
pS‹ãr
->
pU≈acked
 = 
	`sqlôe3VdbeAŒocU≈ackedRec‹d
(
pKeyInfo
);

2733 if–
r2
==0 )  
SQLITE_NOMEM_BKPT
;

2734 
r2
->
nFõld
 = 
nKeyCﬁ
;

2736 
	`as£π
–
r2
->
nFõld
==
nKeyCﬁ
 );

2738 
pKey
 = 
	`vdbeS‹ãrRowkey
(
pS‹ãr
, &
nKey
);

2739 
	`sqlôe3VdbeRec‹dU≈ack
(
pKeyInfo
, 
nKey
, 
pKey
, 
r2
);

2740 
i
=0; i<
nKeyCﬁ
; i++){

2741 if–
r2
->
aMem
[
i
].
Êags
 & 
MEM_NuŒ
 ){

2742 *
pRes
 = -1;

2743  
SQLITE_OK
;

2747 *
pRes
 = 
	`sqlôe3VdbeRec‹dCom∑ª
(
pVÆ
->
n
,ÖVÆ->
z
, 
r2
);

2748  
SQLITE_OK
;

2749 
	}
}

	@vdbetrace.c

18 
	~"sqlôeI¡.h
"

19 
	~"vdbeI¡.h
"

21 #i‚de‡
SQLITE_OMIT_TRACE


29 
	$födNextHo°P¨amëî
(c⁄° *
zSql
, *
≤Tokí
){

30 
tokíTy≥
;

31 
nTŸÆ
 = 0;

32 
n
;

34 *
≤Tokí
 = 0;

35  
zSql
[0] ){

36 
n
 = 
	`sqlôe3GëTokí
((
u8
*)
zSql
, &
tokíTy≥
);

37 
	`as£π
–
n
>0 && 
tokíTy≥
!=
TK_ILLEGAL
 );

38 if–
tokíTy≥
==
TK_VARIABLE
 ){

39 *
≤Tokí
 = 
n
;

42 
nTŸÆ
 +
n
;

43 
zSql
 +
n
;

45  
nTŸÆ
;

46 
	}
}

72 *
	$sqlôe3VdbeEx∑ndSql
(

73 
Vdbe
 *
p
,

74 c⁄° *
zRawSql


76 
sqlôe3
 *
db
;

77 
idx
 = 0;

78 
√xtIndex
 = 1;

79 
n
;

80 
nTokí
;

81 
i
;

82 
Mem
 *
pV¨
;

83 
SåAccum
 
out
;

84 #i‚de‡
SQLITE_OMIT_UTF16


85 
Mem
 
utf8
;

87 
zBa£
[100];

89 
db
 = 
p
->db;

90 
	`sqlôe3SåAccumInô
(&
out
, 0, 
zBa£
, (zBase),

91 
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
]);

92 if–
db
->
nVdbeExec
>1 ){

93  *
zRawSql
 ){

94 c⁄° *
zSèπ
 = 
zRawSql
;

95  *(
zRawSql
++)!='\n' && *zRawSql );

96 
	`sqlôe3SåAccumAµíd
(&
out
, "-- ", 3);

97 
	`as£π
–(
zRawSql
 - 
zSèπ
) > 0 );

98 
	`sqlôe3SåAccumAµíd
(&
out
, 
zSèπ
, ()(
zRawSql
-zStart));

100 }if–
p
->
nV¨
==0 ){

101 
	`sqlôe3SåAccumAµíd
(&
out
, 
zRawSql
, 
	`sqlôe3SåÀn30
(zRawSql));

103  
zRawSql
[0] ){

104 
n
 = 
	`födNextHo°P¨amëî
(
zRawSql
, &
nTokí
);

105 
	`as£π
–
n
>0 );

106 
	`sqlôe3SåAccumAµíd
(&
out
, 
zRawSql
, 
n
);

107 
zRawSql
 +
n
;

108 
	`as£π
–
zRawSql
[0] || 
nTokí
==0 );

109 if–
nTokí
==0 ) ;

110 if–
zRawSql
[0]=='?' ){

111 if–
nTokí
>1 ){

112 
	`as£π
–
	`sqlôe3Isdigô
(
zRawSql
[1]) );

113 
	`sqlôe3GëI¡32
(&
zRawSql
[1], &
idx
);

115 
idx
 = 
√xtIndex
;

118 
	`as£π
–
zRawSql
[0]==':' || zRawSql[0]=='$' ||

119 
zRawSql
[0]=='@' || zRawSql[0]=='#' );

120 
	`ã°ˇ£
–
zRawSql
[0]==':' );

121 
	`ã°ˇ£
–
zRawSql
[0]=='$' );

122 
	`ã°ˇ£
–
zRawSql
[0]=='@' );

123 
	`ã°ˇ£
–
zRawSql
[0]=='#' );

124 
idx
 = 
	`sqlôe3VdbeP¨amëîIndex
(
p
, 
zRawSql
, 
nTokí
);

125 
	`as£π
–
idx
>0 );

127 
zRawSql
 +
nTokí
;

128 
√xtIndex
 = 
idx
 + 1;

129 
	`as£π
–
idx
>0 && idx<=
p
->
nV¨
 );

130 
pV¨
 = &
p
->
aV¨
[
idx
-1];

131 if–
pV¨
->
Êags
 & 
MEM_NuŒ
 ){

132 
	`sqlôe3SåAccumAµíd
(&
out
, "NULL", 4);

133 }if–
pV¨
->
Êags
 & 
MEM_I¡
 ){

134 
	`sqlôe3XPrötf
(&
out
, "%Œd", 
pV¨
->
u
.
i
);

135 }if–
pV¨
->
Êags
 & 
MEM_Ról
 ){

136 
	`sqlôe3XPrötf
(&
out
, "%!.15g", 
pV¨
->
u
.
r
);

137 }if–
pV¨
->
Êags
 & 
MEM_Så
 ){

138 
nOut
;

139 #i‚de‡
SQLITE_OMIT_UTF16


140 
u8
 
íc
 = 
	`ENC
(
db
);

141 if–
íc
!=
SQLITE_UTF8
 ){

142 
	`mem£t
(&
utf8
, 0, (utf8));

143 
utf8
.
db
 = db;

144 
	`sqlôe3VdbeMemSëSå
(&
utf8
, 
pV¨
->
z
,ÖV¨->
n
, 
íc
, 
SQLITE_STATIC
);

145 if–
SQLITE_NOMEM
==
	`sqlôe3VdbeCh™geEncodög
(&
utf8
, 
SQLITE_UTF8
) ){

146 
out
.
accEº‹
 = 
STRACCUM_NOMEM
;

147 
out
.
nAŒoc
 = 0;

149 
pV¨
 = &
utf8
;

152 
nOut
 = 
pV¨
->
n
;

153 #ifde‡
SQLITE_TRACE_SIZE_LIMIT


154 if–
nOut
>
SQLITE_TRACE_SIZE_LIMIT
 ){

155 
nOut
 = 
SQLITE_TRACE_SIZE_LIMIT
;

156  
nOut
<
pV¨
->
n
 && (pV¨->
z
[nOut]&0xc0)==0x80 ){ÇOut++; }

159 
	`sqlôe3XPrötf
(&
out
, "'%.*q'", 
nOut
, 
pV¨
->
z
);

160 #ifde‡
SQLITE_TRACE_SIZE_LIMIT


161 if–
nOut
<
pV¨
->
n
 ){

162 
	`sqlôe3XPrötf
(&
out
, "/*+%d byãs*/", 
pV¨
->
n
-
nOut
);

165 #i‚de‡
SQLITE_OMIT_UTF16


166 if–
íc
!=
SQLITE_UTF8
 ) 
	`sqlôe3VdbeMemRñó£
(&
utf8
);

168 }if–
pV¨
->
Êags
 & 
MEM_Zîo
 ){

169 
	`sqlôe3XPrötf
(&
out
, "zîoblob(%d)", 
pV¨
->
u
.
nZîo
);

171 
nOut
;

172 
	`as£π
–
pV¨
->
Êags
 & 
MEM_Blob
 );

173 
	`sqlôe3SåAccumAµíd
(&
out
, "x'", 2);

174 
nOut
 = 
pV¨
->
n
;

175 #ifde‡
SQLITE_TRACE_SIZE_LIMIT


176 if–
nOut
>
SQLITE_TRACE_SIZE_LIMIT
 )ÇOut = SQLITE_TRACE_SIZE_LIMIT;

178 
i
=0; i<
nOut
; i++){

179 
	`sqlôe3XPrötf
(&
out
, "%02x", 
pV¨
->
z
[
i
]&0xff);

181 
	`sqlôe3SåAccumAµíd
(&
out
, "'", 1);

182 #ifde‡
SQLITE_TRACE_SIZE_LIMIT


183 if–
nOut
<
pV¨
->
n
 ){

184 
	`sqlôe3XPrötf
(&
out
, "/*+%d byãs*/", 
pV¨
->
n
-
nOut
);

190 if–
out
.
accEº‹
 ) 
	`sqlôe3SåAccumRe£t
(&out);

191  
	`sqlôe3SåAccumFöish
(&
out
);

192 
	}
}

	@vtab.c

14 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


15 
	~"sqlôeI¡.h
"

24 
	sVèbCtx
 {

25 
VTabÀ
 *
	mpVTabÀ
;

26 
TabÀ
 *
	mpTab
;

27 
VèbCtx
 *
	mpPri‹
;

28 
	mbDe˛¨ed
;

36 
ModuÀ
 *
	$sqlôe3VèbCª©eModuÀ
(

37 
sqlôe3
 *
db
,

38 c⁄° *
zName
,

39 c⁄° 
sqlôe3_moduÀ
 *
pModuÀ
,

40 *
pAux
,

41 (*
xDe°roy
)(*)

43 
ModuÀ
 *
pMod
;

44 
nName
 = 
	`sqlôe3SåÀn30
(
zName
);

45 
pMod
 = (
ModuÀ
 *)
	`sqlôe3DbMÆlocRawNN
(
db
, (ModuÀË+ 
nName
 + 1);

46 if–
pMod
 ){

47 
ModuÀ
 *
pDñ
;

48 *
zC›y
 = (*)(&
pMod
[1]);

49 
	`mem˝y
(
zC›y
, 
zName
, 
nName
+1);

50 
pMod
->
zName
 = 
zC›y
;

51 
pMod
->
pModuÀ
 =ÖModule;

52 
pMod
->
pAux
 =ÖAux;

53 
pMod
->
xDe°roy
 = xDestroy;

54 
pMod
->
pEpoTab
 = 0;

55 
pDñ
 = (
ModuÀ
 *)
	`sqlôe3HashIn£π
(&
db
->
aModuÀ
,
zC›y
,(*)
pMod
);

56 
	`as£π
–
pDñ
==0 ||ÖDñ==
pMod
 );

57 if–
pDñ
 ){

58 
	`sqlôe3OomFau…
(
db
);

59 
	`sqlôe3DbFªe
(
db
, 
pDñ
);

60 
pMod
 = 0;

63  
pMod
;

64 
	}
}

71 
	$¸óãModuÀ
(

72 
sqlôe3
 *
db
,

73 c⁄° *
zName
,

74 c⁄° 
sqlôe3_moduÀ
 *
pModuÀ
,

75 *
pAux
,

76 (*
xDe°roy
)(*)

78 
rc
 = 
SQLITE_OK
;

80 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

81 if–
	`sqlôe3HashFöd
(&
db
->
aModuÀ
, 
zName
) ){

82 
rc
 = 
SQLITE_MISUSE_BKPT
;

84 ()
	`sqlôe3VèbCª©eModuÀ
(
db
, 
zName
, 
pModuÀ
, 
pAux
, 
xDe°roy
);

86 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

87 if–
rc
!=
SQLITE_OK
 && 
xDe°roy
 ) 
	`xDe°roy
(
pAux
);

88 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

89  
rc
;

90 
	}
}

96 
	$sqlôe3_¸óã_moduÀ
(

97 
sqlôe3
 *
db
,

98 c⁄° *
zName
,

99 c⁄° 
sqlôe3_moduÀ
 *
pModuÀ
,

100 *
pAux


102 #ifde‡
SQLITE_ENABLE_API_ARMOR


103 if–!
	`sqlôe3Sa„tyCheckOk
(
db
Ë|| 
zName
==0 )  
SQLITE_MISUSE_BKPT
;

105  
	`¸óãModuÀ
(
db
, 
zName
, 
pModuÀ
, 
pAux
, 0);

106 
	}
}

111 
	$sqlôe3_¸óã_moduÀ_v2
(

112 
sqlôe3
 *
db
,

113 c⁄° *
zName
,

114 c⁄° 
sqlôe3_moduÀ
 *
pModuÀ
,

115 *
pAux
,

116 (*
xDe°roy
)(*)

118 #ifde‡
SQLITE_ENABLE_API_ARMOR


119 if–!
	`sqlôe3Sa„tyCheckOk
(
db
Ë|| 
zName
==0 )  
SQLITE_MISUSE_BKPT
;

121  
	`¸óãModuÀ
(
db
, 
zName
, 
pModuÀ
, 
pAux
, 
xDe°roy
);

122 
	}
}

132 
	$sqlôe3VèbLock
(
VTabÀ
 *
pVTab
){

133 
pVTab
->
nRef
++;

134 
	}
}

142 
VTabÀ
 *
	$sqlôe3GëVTabÀ
(
sqlôe3
 *
db
, 
TabÀ
 *
pTab
){

143 
VTabÀ
 *
pVèb
;

144 
	`as£π
–
	`IsVútuÆ
(
pTab
) );

145 
pVèb
=
pTab
->
pVTabÀ
;ÖVèb &&ÖVèb->
db
!=db;ÖVèbıVèb->
pNext
);

146  
pVèb
;

147 
	}
}

153 
	$sqlôe3VèbU∆ock
(
VTabÀ
 *
pVTab
){

154 
sqlôe3
 *
db
 = 
pVTab
->db;

156 
	`as£π
–
db
 );

157 
	`as£π
–
pVTab
->
nRef
>0 );

158 
	`as£π
–
db
->
magic
==
SQLITE_MAGIC_OPEN
 || db->magic==
SQLITE_MAGIC_ZOMBIE
 );

160 
pVTab
->
nRef
--;

161 if–
pVTab
->
nRef
==0 ){

162 
sqlôe3_vèb
 *
p
 = 
pVTab
->
pVèb
;

163 if–
p
 ){

164 
p
->
pModuÀ
->
	`xDisc⁄√˘
(p);

166 
	`sqlôe3DbFªe
(
db
, 
pVTab
);

168 
	}
}

177 
VTabÀ
 *
	$vèbDisc⁄√˘AŒ
(
sqlôe3
 *
db
, 
TabÀ
 *
p
){

178 
VTabÀ
 *
pRë
 = 0;

179 
VTabÀ
 *
pVTabÀ
 = 
p
->pVTable;

180 
p
->
pVTabÀ
 = 0;

188 
	`as£π
–
db
==0 || 
	`sqlôe3SchemaMuãxHñd
(db, 0, 
p
->
pSchema
) );

190  
pVTabÀ
 ){

191 
sqlôe3
 *
db2
 = 
pVTabÀ
->
db
;

192 
VTabÀ
 *
pNext
 = 
pVTabÀ
->pNext;

193 
	`as£π
–
db2
 );

194 if–
db2
==
db
 ){

195 
pRë
 = 
pVTabÀ
;

196 
p
->
pVTabÀ
 = 
pRë
;

197 
pRë
->
pNext
 = 0;

199 
pVTabÀ
->
pNext
 = 
db2
->
pDisc⁄√˘
;

200 
db2
->
pDisc⁄√˘
 = 
pVTabÀ
;

202 
pVTabÀ
 = 
pNext
;

205 
	`as£π
–!
db
 || 
pRë
 );

206  
pRë
;

207 
	}
}

217 
	$sqlôe3VèbDisc⁄√˘
(
sqlôe3
 *
db
, 
TabÀ
 *
p
){

218 
VTabÀ
 **
µVTab
;

220 
	`as£π
–
	`IsVútuÆ
(
p
) );

221 
	`as£π
–
	`sqlôe3BåìHﬁdsAŒMuãxes
(
db
) );

222 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

224 
µVTab
=&
p
->
pVTabÀ
; *µVTab;ÖpVTab=&(*µVTab)->
pNext
){

225 if–(*
µVTab
)->
db
==db ){

226 
VTabÀ
 *
pVTab
 = *
µVTab
;

227 *
µVTab
 = 
pVTab
->
pNext
;

228 
	`sqlôe3VèbU∆ock
(
pVTab
);

232 
	}
}

255 
	$sqlôe3VèbU∆ockLi°
(
sqlôe3
 *
db
){

256 
VTabÀ
 *
p
 = 
db
->
pDisc⁄√˘
;

257 
db
->
pDisc⁄√˘
 = 0;

259 
	`as£π
–
	`sqlôe3BåìHﬁdsAŒMuãxes
(
db
) );

260 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

262 if–
p
 ){

263 
	`sqlôe3ExpúePª∑ªdSèãmíts
(
db
);

265 
VTabÀ
 *
pNext
 = 
p
->pNext;

266 
	`sqlôe3VèbU∆ock
(
p
);

267 
p
 = 
pNext
;

268 } 
p
 );

270 
	}
}

286 
	$sqlôe3VèbCÀ¨
(
sqlôe3
 *
db
, 
TabÀ
 *
p
){

287 if–!
db
 || db->
≤ByãsFªed
==0 ) 
	`vèbDisc⁄√˘AŒ
(0, 
p
);

288 if–
p
->
azModuÀArg
 ){

289 
i
;

290 
i
=0; i<
p
->
nModuÀArg
; i++){

291 if–
i
!=1 ) 
	`sqlôe3DbFªe
(
db
, 
p
->
azModuÀArg
[i]);

293 
	`sqlôe3DbFªe
(
db
, 
p
->
azModuÀArg
);

295 
	}
}

303 
	$addModuÀArgumít
(
sqlôe3
 *
db
, 
TabÀ
 *
pTabÀ
, *
zArg
){

304 
nByãs
 = (*)*(2+
pTabÀ
->
nModuÀArg
);

305 **
azModuÀArg
;

306 
azModuÀArg
 = 
	`sqlôe3DbRóŒoc
(
db
, 
pTabÀ
->azModuÀArg, 
nByãs
);

307 if–
azModuÀArg
==0 ){

308 
	`sqlôe3DbFªe
(
db
, 
zArg
);

310 
i
 = 
pTabÀ
->
nModuÀArg
++;

311 
azModuÀArg
[
i
] = 
zArg
;

312 
azModuÀArg
[
i
+1] = 0;

313 
pTabÀ
->
azModuÀArg
 =ázModuleArg;

315 
	}
}

322 
	$sqlôe3VèbBegöP¨£
(

323 
P¨£
 *
pP¨£
,

324 
Tokí
 *
pName1
,

325 
Tokí
 *
pName2
,

326 
Tokí
 *
pModuÀName
,

327 
ifNŸExi°s


329 
iDb
;

330 
TabÀ
 *
pTabÀ
;

331 
sqlôe3
 *
db
;

333 
	`sqlôe3SèπTabÀ
(
pP¨£
, 
pName1
, 
pName2
, 0, 0, 1, 
ifNŸExi°s
);

334 
pTabÀ
 = 
pP¨£
->
pNewTabÀ
;

335 if–
pTabÀ
==0 ) ;

336 
	`as£π
–0==
pTabÀ
->
pIndex
 );

338 
db
 = 
pP¨£
->db;

339 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pTabÀ
->
pSchema
);

340 
	`as£π
–
iDb
>=0 );

342 
pTabÀ
->
èbFœgs
 |
TF_VútuÆ
;

343 
pTabÀ
->
nModuÀArg
 = 0;

344 
	`addModuÀArgumít
(
db
, 
pTabÀ
, 
	`sqlôe3NameFromTokí
(db, 
pModuÀName
));

345 
	`addModuÀArgumít
(
db
, 
pTabÀ
, 0);

346 
	`addModuÀArgumít
(
db
, 
pTabÀ
, 
	`sqlôe3DbSåDup
(db,ÖTabÀ->
zName
));

347 
	`as£π
–(
pP¨£
->
sNameTokí
.
z
==
pName2
->z &&ÖName2->z!=0)

348 || (
pP¨£
->
sNameTokí
.
z
==
pName1
->z && 
pName2
->z==0)

350 
pP¨£
->
sNameTokí
.
n
 = ()(

351 &
pModuÀName
->
z
[pModuÀName->
n
] - 
pP¨£
->
sNameTokí
.z

354 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


360 if–
pTabÀ
->
azModuÀArg
 ){

361 
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_CREATE_VTABLE
, 
pTabÀ
->
zName
,

362 
pTabÀ
->
azModuÀArg
[0], 
pP¨£
->
db
->
aDb
[
iDb
].
zDbSName
);

365 
	}
}

372 
	$addArgumítToVèb
(
P¨£
 *
pP¨£
){

373 if–
pP¨£
->
sArg
.
z
 &&ÖP¨£->
pNewTabÀ
 ){

374 c⁄° *
z
 = (c⁄° *)
pP¨£
->
sArg
.z;

375 
n
 = 
pP¨£
->
sArg
.n;

376 
sqlôe3
 *
db
 = 
pP¨£
->db;

377 
	`addModuÀArgumít
(
db
, 
pP¨£
->
pNewTabÀ
, 
	`sqlôe3DbSåNDup
(db, 
z
, 
n
));

379 
	}
}

385 
	$sqlôe3VèbFöishP¨£
(
P¨£
 *
pP¨£
, 
Tokí
 *
pEnd
){

386 
TabÀ
 *
pTab
 = 
pP¨£
->
pNewTabÀ
;

387 
sqlôe3
 *
db
 = 
pP¨£
->db;

389 if–
pTab
==0 ) ;

390 
	`addArgumítToVèb
(
pP¨£
);

391 
pP¨£
->
sArg
.
z
 = 0;

392 if–
pTab
->
nModuÀArg
<1 ) ;

400 if–!
db
->
öô
.
busy
 ){

401 *
zStmt
;

402 *
zWhîe
;

403 
iDb
;

404 
iReg
;

405 
Vdbe
 *
v
;

408 if–
pEnd
 ){

409 
pP¨£
->
sNameTokí
.
n
 = ()(
pEnd
->
z
 -ÖParse->sNameToken.z) +ÖEnd->n;

411 
zStmt
 = 
	`sqlôe3MPrötf
(
db
, "CREATE VIRTUAL TABLE %T", &
pP¨£
->
sNameTokí
);

421 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pTab
->
pSchema
);

422 
	`sqlôe3Ne°edP¨£
(
pP¨£
,

426 
db
->
aDb
[
iDb
].
zDbSName
, 
MASTER_NAME
,

427 
pTab
->
zName
,

428 
pTab
->
zName
,

429 
zStmt
,

430 
pP¨£
->
ªgRowid


432 
	`sqlôe3DbFªe
(
db
, 
zStmt
);

433 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

434 
	`sqlôe3Ch™geCookõ
(
pP¨£
, 
iDb
);

436 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_Expúe
);

437 
zWhîe
 = 
	`sqlôe3MPrötf
(
db
, "«me='%q' ANDÅy≥='èbÀ'", 
pTab
->
zName
);

438 
	`sqlôe3VdbeAddP¨£SchemaOp
(
v
, 
iDb
, 
zWhîe
);

440 
iReg
 = ++
pP¨£
->
nMem
;

441 
	`sqlôe3VdbeLﬂdSåög
(
v
, 
iReg
, 
pTab
->
zName
);

442 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_VCª©e
, 
iDb
, 
iReg
);

451 
TabÀ
 *
pOld
;

452 
Schema
 *
pSchema
 = 
pTab
->pSchema;

453 c⁄° *
zName
 = 
pTab
->zName;

454 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 0, 
pSchema
) );

455 
pOld
 = 
	`sqlôe3HashIn£π
(&
pSchema
->
tblHash
, 
zName
, 
pTab
);

456 if–
pOld
 ){

457 
	`sqlôe3OomFau…
(
db
);

458 
	`as£π
–
pTab
==
pOld
 );

461 
pP¨£
->
pNewTabÀ
 = 0;

463 
	}
}

469 
	$sqlôe3VèbArgInô
(
P¨£
 *
pP¨£
){

470 
	`addArgumítToVèb
(
pP¨£
);

471 
pP¨£
->
sArg
.
z
 = 0;

472 
pP¨£
->
sArg
.
n
 = 0;

473 
	}
}

479 
	$sqlôe3VèbArgExãnd
(
P¨£
 *
pP¨£
, 
Tokí
 *
p
){

480 
Tokí
 *
pArg
 = &
pP¨£
->
sArg
;

481 if–
pArg
->
z
==0 ){

482 
pArg
->
z
 = 
p
->z;

483 
pArg
->
n
 = 
p
->n;

485 
	`as£π
(
pArg
->
z
 <
p
->z);

486 
pArg
->
n
 = ()(&
p
->
z
[p->n] -ÖArg->z);

488 
	}
}

495 
	$vèbCÆlC⁄°ru˘‹
(

496 
sqlôe3
 *
db
,

497 
TabÀ
 *
pTab
,

498 
ModuÀ
 *
pMod
,

499 (*
xC⁄°ru˘
)(
sqlôe3
*,*,,c⁄° *c⁄°*,
sqlôe3_vèb
**,**),

500 **
pzEº


502 
VèbCtx
 
sCtx
;

503 
VTabÀ
 *
pVTabÀ
;

504 
rc
;

505 c⁄° *c⁄°*
azArg
 = (c⁄° *c⁄°*)
pTab
->
azModuÀArg
;

506 
nArg
 = 
pTab
->
nModuÀArg
;

507 *
zEº
 = 0;

508 *
zModuÀName
;

509 
iDb
;

510 
VèbCtx
 *
pCtx
;

513 
pCtx
=
db
->
pVèbCtx
;ÖCtx;ÖCtxıCtx->
pPri‹
){

514 if–
pCtx
->
pTab
==pTab ){

515 *
pzEº
 = 
	`sqlôe3MPrötf
(
db
,

516 "vèbÀ c⁄°ru˘‹ cÆÀdÑecursivñy: %s", 
pTab
->
zName


518  
SQLITE_LOCKED
;

522 
zModuÀName
 = 
	`sqlôe3MPrötf
(
db
, "%s", 
pTab
->
zName
);

523 if–!
zModuÀName
 ){

524  
SQLITE_NOMEM_BKPT
;

527 
pVTabÀ
 = 
	`sqlôe3DbMÆlocZîo
(
db
, (
VTabÀ
));

528 if–!
pVTabÀ
 ){

529 
	`sqlôe3DbFªe
(
db
, 
zModuÀName
);

530  
SQLITE_NOMEM_BKPT
;

532 
pVTabÀ
->
db
 = db;

533 
pVTabÀ
->
pMod
 =ÖMod;

535 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pTab
->
pSchema
);

536 
pTab
->
azModuÀArg
[1] = 
db
->
aDb
[
iDb
].
zDbSName
;

539 
	`as£π
–&
db
->
pVèbCtx
 );

540 
	`as£π
–
xC⁄°ru˘
 );

541 
sCtx
.
pTab
 =ÖTab;

542 
sCtx
.
pVTabÀ
 =ÖVTable;

543 
sCtx
.
pPri‹
 = 
db
->
pVèbCtx
;

544 
sCtx
.
bDe˛¨ed
 = 0;

545 
db
->
pVèbCtx
 = &
sCtx
;

546 
rc
 = 
	`xC⁄°ru˘
(
db
, 
pMod
->
pAux
, 
nArg
, 
azArg
, &
pVTabÀ
->
pVèb
, &
zEº
);

547 
db
->
pVèbCtx
 = 
sCtx
.
pPri‹
;

548 if–
rc
==
SQLITE_NOMEM
 ) 
	`sqlôe3OomFau…
(
db
);

549 
	`as£π
–
sCtx
.
pTab
==pTab );

551 if–
SQLITE_OK
!=
rc
 ){

552 if–
zEº
==0 ){

553 *
pzEº
 = 
	`sqlôe3MPrötf
(
db
, "vèbÀ c⁄°ru˘‹ faûed: %s", 
zModuÀName
);

555 *
pzEº
 = 
	`sqlôe3MPrötf
(
db
, "%s", 
zEº
);

556 
	`sqlôe3_‰ì
(
zEº
);

558 
	`sqlôe3DbFªe
(
db
, 
pVTabÀ
);

559 }if–
	`ALWAYS
(
pVTabÀ
->
pVèb
) ){

562 
	`mem£t
(
pVTabÀ
->
pVèb
, 0, (pVTable->pVtab[0]));

563 
pVTabÀ
->
pVèb
->
pModuÀ
 = 
pMod
->pModule;

564 
pVTabÀ
->
nRef
 = 1;

565 if–
sCtx
.
bDe˛¨ed
==0 ){

566 c⁄° *
zF‹m©
 = "vtable constructor didÇot declare schema: %s";

567 *
pzEº
 = 
	`sqlôe3MPrötf
(
db
, 
zF‹m©
, 
pTab
->
zName
);

568 
	`sqlôe3VèbU∆ock
(
pVTabÀ
);

569 
rc
 = 
SQLITE_ERROR
;

571 
iCﬁ
;

572 
u8
 
oooHiddí
 = 0;

578 
pVTabÀ
->
pNext
 = 
pTab
->pVTable;

579 
pTab
->
pVTabÀ
 =ÖVTable;

581 
iCﬁ
=0; iCﬁ<
pTab
->
nCﬁ
; iCol++){

582 *
zTy≥
 = 
	`sqlôe3CﬁumnTy≥
(&
pTab
->
aCﬁ
[
iCﬁ
], "");

583 
nTy≥
;

584 
i
 = 0;

585 
nTy≥
 = 
	`sqlôe3SåÀn30
(
zTy≥
);

586 
i
=0; i<
nTy≥
; i++){

587 if–0==
	`sqlôe3SåNICmp
("hiddí", &
zTy≥
[
i
], 6)

588 && (
i
==0 || 
zTy≥
[i-1]==' ')

589 && (
zTy≥
[
i
+6]=='\0' || zType[i+6]==' ')

594 if–
i
<
nTy≥
 ){

595 
j
;

596 
nDñ
 = 6 + (
zTy≥
[
i
+6] ? 1 : 0);

597 
j
=
i
; (j+
nDñ
)<=
nTy≥
; j++){

598 
zTy≥
[
j
] = zTy≥[j+
nDñ
];

600 if–
zTy≥
[
i
]=='\0' && i>0 ){

601 
	`as£π
(
zTy≥
[
i
-1]==' ');

602 
zTy≥
[
i
-1] = '\0';

604 
pTab
->
aCﬁ
[
iCﬁ
].
cﬁFœgs
 |
COLFLAG_HIDDEN
;

605 
oooHiddí
 = 
TF_OOOHiddí
;

607 
pTab
->
èbFœgs
 |
oooHiddí
;

613 
	`sqlôe3DbFªe
(
db
, 
zModuÀName
);

614  
rc
;

615 
	}
}

624 
	$sqlôe3VèbCÆlC⁄√˘
(
P¨£
 *
pP¨£
, 
TabÀ
 *
pTab
){

625 
sqlôe3
 *
db
 = 
pP¨£
->db;

626 c⁄° *
zMod
;

627 
ModuÀ
 *
pMod
;

628 
rc
;

630 
	`as£π
–
pTab
 );

631 if–(
pTab
->
èbFœgs
 & 
TF_VútuÆ
)==0 || 
	`sqlôe3GëVTabÀ
(
db
,ÖTab) ){

632  
SQLITE_OK
;

636 
zMod
 = 
pTab
->
azModuÀArg
[0];

637 
pMod
 = (
ModuÀ
*)
	`sqlôe3HashFöd
(&
db
->
aModuÀ
, 
zMod
);

639 if–!
pMod
 ){

640 c⁄° *
zModuÀ
 = 
pTab
->
azModuÀArg
[0];

641 
	`sqlôe3Eº‹Msg
(
pP¨£
, "nÿsuch moduÀ: %s", 
zModuÀ
);

642 
rc
 = 
SQLITE_ERROR
;

644 *
zEº
 = 0;

645 
rc
 = 
	`vèbCÆlC⁄°ru˘‹
(
db
, 
pTab
, 
pMod
,ÖMod->
pModuÀ
->
xC⁄√˘
, &
zEº
);

646 if–
rc
!=
SQLITE_OK
 ){

647 
	`sqlôe3Eº‹Msg
(
pP¨£
, "%s", 
zEº
);

649 
	`sqlôe3DbFªe
(
db
, 
zEº
);

652  
rc
;

653 
	}
}

658 
	$growVTøns
(
sqlôe3
 *
db
){

659 c⁄° 
ARRAY_INCR
 = 5;

662 if–(
db
->
nVTøns
%
ARRAY_INCR
)==0 ){

663 
VTabÀ
 **
aVTøns
;

664 
nByãs
 = (
sqlôe3_vèb
 *Ë* (
db
->
nVTøns
 + 
ARRAY_INCR
);

665 
aVTøns
 = 
	`sqlôe3DbRóŒoc
(
db
, (*)db->aVTøns, 
nByãs
);

666 if–!
aVTøns
 ){

667  
SQLITE_NOMEM_BKPT
;

669 
	`mem£t
(&
aVTøns
[
db
->
nVTøns
], 0, (
sqlôe3_vèb
 *)*
ARRAY_INCR
);

670 
db
->
aVTøns
 =áVTrans;

673  
SQLITE_OK
;

674 
	}
}

680 
	$addToVTøns
(
sqlôe3
 *
db
, 
VTabÀ
 *
pVTab
){

682 
db
->
aVTøns
[db->
nVTøns
++] = 
pVTab
;

683 
	`sqlôe3VèbLock
(
pVTab
);

684 
	}
}

694 
	$sqlôe3VèbCÆlCª©e
(
sqlôe3
 *
db
, 
iDb
, c⁄° *
zTab
, **
pzEº
){

695 
rc
 = 
SQLITE_OK
;

696 
TabÀ
 *
pTab
;

697 
ModuÀ
 *
pMod
;

698 c⁄° *
zMod
;

700 
pTab
 = 
	`sqlôe3FödTabÀ
(
db
, 
zTab
, db->
aDb
[
iDb
].
zDbSName
);

701 
	`as£π
–
pTab
 && (pTab->
èbFœgs
 & 
TF_VútuÆ
)!=0 && !pTab->
pVTabÀ
 );

704 
zMod
 = 
pTab
->
azModuÀArg
[0];

705 
pMod
 = (
ModuÀ
*)
	`sqlôe3HashFöd
(&
db
->
aModuÀ
, 
zMod
);

711 if–
pMod
==0 ||ÖMod->
pModuÀ
->
xCª©e
==0 ||ÖMod->pModuÀ->
xDe°roy
==0 ){

712 *
pzEº
 = 
	`sqlôe3MPrötf
(
db
, "nÿsuch moduÀ: %s", 
zMod
);

713 
rc
 = 
SQLITE_ERROR
;

715 
rc
 = 
	`vèbCÆlC⁄°ru˘‹
(
db
, 
pTab
, 
pMod
,ÖMod->
pModuÀ
->
xCª©e
, 
pzEº
);

720 if–
rc
==
SQLITE_OK
 && 
	`ALWAYS
(
	`sqlôe3GëVTabÀ
(
db
, 
pTab
)) ){

721 
rc
 = 
	`growVTøns
(
db
);

722 if–
rc
==
SQLITE_OK
 ){

723 
	`addToVTøns
(
db
, 
	`sqlôe3GëVTabÀ
(db, 
pTab
));

727  
rc
;

728 
	}
}

735 
	$sqlôe3_de˛¨e_vèb
(
sqlôe3
 *
db
, c⁄° *
zCª©eTabÀ
){

736 
VèbCtx
 *
pCtx
;

737 
P¨£
 *
pP¨£
;

738 
rc
 = 
SQLITE_OK
;

739 
TabÀ
 *
pTab
;

740 *
zEº
 = 0;

742 #ifde‡
SQLITE_ENABLE_API_ARMOR


743 if–!
	`sqlôe3Sa„tyCheckOk
(
db
Ë|| 
zCª©eTabÀ
==0 ){

744  
SQLITE_MISUSE_BKPT
;

747 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

748 
pCtx
 = 
db
->
pVèbCtx
;

749 if–!
pCtx
 ||ÖCtx->
bDe˛¨ed
 ){

750 
	`sqlôe3Eº‹
(
db
, 
SQLITE_MISUSE
);

751 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

752  
SQLITE_MISUSE_BKPT
;

754 
pTab
 = 
pCtx
->pTab;

755 
	`as£π
–(
pTab
->
èbFœgs
 & 
TF_VútuÆ
)!=0 );

757 
pP¨£
 = 
	`sqlôe3SèckAŒocZîo
(
db
, (*pParse));

758 if–
pP¨£
==0 ){

759 
rc
 = 
SQLITE_NOMEM_BKPT
;

761 
pP¨£
->
de˛¨eVèb
 = 1;

762 
pP¨£
->
db
 = db;

763 
pP¨£
->
nQuîyLo›
 = 1;

765 if–
SQLITE_OK
==
	`sqlôe3RunP¨£r
(
pP¨£
, 
zCª©eTabÀ
, &
zEº
)

766 && 
pP¨£
->
pNewTabÀ


767 && !
db
->
mÆlocFaûed


768 && !
pP¨£
->
pNewTabÀ
->
pSñe˘


769 && (
pP¨£
->
pNewTabÀ
->
èbFœgs
 & 
TF_VútuÆ
)==0

771 if–!
pTab
->
aCﬁ
 ){

772 
TabÀ
 *
pNew
 = 
pP¨£
->
pNewTabÀ
;

773 
Index
 *
pIdx
;

774 
pTab
->
aCﬁ
 = 
pNew
->aCol;

775 
pTab
->
nCﬁ
 = 
pNew
->nCol;

776 
pTab
->
èbFœgs
 |
pNew
->èbFœg†& (
TF_WôhoutRowid
|
TF_NoVisibÀRowid
);

777 
pNew
->
nCﬁ
 = 0;

778 
pNew
->
aCﬁ
 = 0;

779 
	`as£π
–
pTab
->
pIndex
==0 );

780 if–!
	`HasRowid
(
pNew
Ë&& 
pCtx
->
pVTabÀ
->
pMod
->
pModuÀ
->
xUpd©e
!=0 ){

781 
rc
 = 
SQLITE_ERROR
;

783 
pIdx
 = 
pNew
->
pIndex
;

784 if–
pIdx
 ){

785 
	`as£π
–
pIdx
->
pNext
==0 );

786 
pTab
->
pIndex
 = 
pIdx
;

787 
pNew
->
pIndex
 = 0;

788 
pIdx
->
pTabÀ
 = 
pTab
;

791 
pCtx
->
bDe˛¨ed
 = 1;

793 
	`sqlôe3Eº‹WôhMsg
(
db
, 
SQLITE_ERROR
, (
zEº
 ? "%s" : 0), zErr);

794 
	`sqlôe3DbFªe
(
db
, 
zEº
);

795 
rc
 = 
SQLITE_ERROR
;

797 
pP¨£
->
de˛¨eVèb
 = 0;

799 if–
pP¨£
->
pVdbe
 ){

800 
	`sqlôe3VdbeFöÆize
(
pP¨£
->
pVdbe
);

802 
	`sqlôe3DñëeTabÀ
(
db
, 
pP¨£
->
pNewTabÀ
);

803 
	`sqlôe3P¨£rRe£t
(
pP¨£
);

804 
	`sqlôe3SèckFªe
(
db
, 
pP¨£
);

807 
	`as£π
–(
rc
&0xff)==rc );

808 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

809 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

810  
rc
;

811 
	}
}

820 
	$sqlôe3VèbCÆlDe°roy
(
sqlôe3
 *
db
, 
iDb
, c⁄° *
zTab
){

821 
rc
 = 
SQLITE_OK
;

822 
TabÀ
 *
pTab
;

824 
pTab
 = 
	`sqlôe3FödTabÀ
(
db
, 
zTab
, db->
aDb
[
iDb
].
zDbSName
);

825 if–
pTab
!=0 && 
	`ALWAYS
’Tab->
pVTabÀ
!=0) ){

826 
VTabÀ
 *
p
;

827 (*
xDe°roy
)(
sqlôe3_vèb
 *);

828 
p
=
pTab
->
pVTabÀ
;Ö;Öı->
pNext
){

829 
	`as£π
–
p
->
pVèb
 );

830 if–
p
->
pVèb
->
nRef
>0 ){

831  
SQLITE_LOCKED
;

834 
p
 = 
	`vèbDisc⁄√˘AŒ
(
db
, 
pTab
);

835 
xDe°roy
 = 
p
->
pMod
->
pModuÀ
->xDestroy;

836 
	`as£π
–
xDe°roy
!=0 );

837 
rc
 = 
	`xDe°roy
(
p
->
pVèb
);

839 if–
rc
==
SQLITE_OK
 ){

840 
	`as£π
–
pTab
->
pVTabÀ
==
p
 &&Ö->
pNext
==0 );

841 
p
->
pVèb
 = 0;

842 
pTab
->
pVTabÀ
 = 0;

843 
	`sqlôe3VèbU∆ock
(
p
);

847  
rc
;

848 
	}
}

858 
	$ˇŒFöÆi£r
(
sqlôe3
 *
db
, 
off£t
){

859 
i
;

860 if–
db
->
aVTøns
 ){

861 
VTabÀ
 **
aVTøns
 = 
db
->aVTrans;

862 
db
->
aVTøns
 = 0;

863 
i
=0; i<
db
->
nVTøns
; i++){

864 
VTabÀ
 *
pVTab
 = 
aVTøns
[
i
];

865 
sqlôe3_vèb
 *
p
 = 
pVTab
->
pVèb
;

866 if–
p
 ){

867 (*
x
)(
sqlôe3_vèb
 *);

868 
x
 = *((**)(
sqlôe3_vèb
 *))((*)
p
->
pModuÀ
 + 
off£t
);

869 if–
x
 ) 
	`x
(
p
);

871 
pVTab
->
iSavïoöt
 = 0;

872 
	`sqlôe3VèbU∆ock
(
pVTab
);

874 
	`sqlôe3DbFªe
(
db
, 
aVTøns
);

875 
db
->
nVTøns
 = 0;

877 
	}
}

886 
	$sqlôe3VèbSync
(
sqlôe3
 *
db
, 
Vdbe
 *
p
){

887 
i
;

888 
rc
 = 
SQLITE_OK
;

889 
VTabÀ
 **
aVTøns
 = 
db
->aVTrans;

891 
db
->
aVTøns
 = 0;

892 
i
=0; 
rc
==
SQLITE_OK
 && i<
db
->
nVTøns
; i++){

893 (*
x
)(
sqlôe3_vèb
 *);

894 
sqlôe3_vèb
 *
pVèb
 = 
aVTøns
[
i
]->pVtab;

895 if–
pVèb
 && (
x
 =ÖVèb->
pModuÀ
->
xSync
)!=0 ){

896 
rc
 = 
	`x
(
pVèb
);

897 
	`sqlôe3VèbImp‹tEºmsg
(
p
, 
pVèb
);

900 
db
->
aVTøns
 =áVTrans;

901  
rc
;

902 
	}
}

908 
	$sqlôe3VèbRﬁlback
(
sqlôe3
 *
db
){

909 
	`ˇŒFöÆi£r
(
db
, 
	`off£tof
(
sqlôe3_moduÀ
,
xRﬁlback
));

910  
SQLITE_OK
;

911 
	}
}

917 
	$sqlôe3VèbCommô
(
sqlôe3
 *
db
){

918 
	`ˇŒFöÆi£r
(
db
, 
	`off£tof
(
sqlôe3_moduÀ
,
xCommô
));

919  
SQLITE_OK
;

920 
	}
}

930 
	$sqlôe3VèbBegö
(
sqlôe3
 *
db
, 
VTabÀ
 *
pVTab
){

931 
rc
 = 
SQLITE_OK
;

932 c⁄° 
sqlôe3_moduÀ
 *
pModuÀ
;

939 if–
	`sqlôe3VèbInSync
(
db
) ){

940  
SQLITE_LOCKED
;

942 if–!
pVTab
 ){

943  
SQLITE_OK
;

945 
pModuÀ
 = 
pVTab
->
pVèb
->pModule;

947 if–
pModuÀ
->
xBegö
 ){

948 
i
;

951 
i
=0; i<
db
->
nVTøns
; i++){

952 if–
db
->
aVTøns
[
i
]==
pVTab
 ){

953  
SQLITE_OK
;

959 
rc
 = 
	`growVTøns
(
db
);

960 if–
rc
==
SQLITE_OK
 ){

961 
rc
 = 
pModuÀ
->
	`xBegö
(
pVTab
->
pVèb
);

962 if–
rc
==
SQLITE_OK
 ){

963 
iSv±
 = 
db
->
nSèãmít
 + db->
nSavïoöt
;

964 
	`addToVTøns
(
db
, 
pVTab
);

965 if–
iSv±
 && 
pModuÀ
->
xSavïoöt
 ){

966 
pVTab
->
iSavïoöt
 = 
iSv±
;

967 
rc
 = 
pModuÀ
->
	`xSavïoöt
(
pVTab
->
pVèb
, 
iSv±
-1);

972  
rc
;

973 
	}
}

990 
	$sqlôe3VèbSavïoöt
(
sqlôe3
 *
db
, 
›
, 
iSavïoöt
){

991 
rc
 = 
SQLITE_OK
;

993 
	`as£π
–
›
==
SAVEPOINT_RELEASE
||›==
SAVEPOINT_ROLLBACK
||›==
SAVEPOINT_BEGIN
 );

994 
	`as£π
–
iSavïoöt
>=-1 );

995 if–
db
->
aVTøns
 ){

996 
i
;

997 
i
=0; 
rc
==
SQLITE_OK
 && i<
db
->
nVTøns
; i++){

998 
VTabÀ
 *
pVTab
 = 
db
->
aVTøns
[
i
];

999 c⁄° 
sqlôe3_moduÀ
 *
pMod
 = 
pVTab
->pMod->
pModuÀ
;

1000 if–
pVTab
->
pVèb
 && 
pMod
->
iVîsi⁄
>=2 ){

1001 (*
xMëhod
)(
sqlôe3_vèb
 *, );

1002  
›
 ){

1003 
SAVEPOINT_BEGIN
:

1004 
xMëhod
 = 
pMod
->
xSavïoöt
;

1005 
pVTab
->
iSavïoöt
 = iSavepoint+1;

1007 
SAVEPOINT_ROLLBACK
:

1008 
xMëhod
 = 
pMod
->
xRﬁlbackTo
;

1011 
xMëhod
 = 
pMod
->
xRñó£
;

1014 if–
xMëhod
 && 
pVTab
->
iSavïoöt
>iSavepoint ){

1015 
rc
 = 
	`xMëhod
(
pVTab
->
pVèb
, 
iSavïoöt
);

1020  
rc
;

1021 
	}
}

1036 
FuncDef
 *
	$sqlôe3VèbOvîlﬂdFun˘i⁄
(

1037 
sqlôe3
 *
db
,

1038 
FuncDef
 *
pDef
,

1039 
nArg
,

1040 
Ex¥
 *
pEx¥


1042 
TabÀ
 *
pTab
;

1043 
sqlôe3_vèb
 *
pVèb
;

1044 
sqlôe3_moduÀ
 *
pMod
;

1045 (*
xSFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**) = 0;

1046 *
pArg
 = 0;

1047 
FuncDef
 *
pNew
;

1048 
rc
 = 0;

1049 *
zLowîName
;

1050 *
z
;

1054 if–
	`NEVER
(
pEx¥
==0ËË 
pDef
;

1055 if–
pEx¥
->
›
!=
TK_COLUMN
 )  
pDef
;

1056 
pTab
 = 
pEx¥
->pTab;

1057 if–
	`NEVER
(
pTab
==0ËË 
pDef
;

1058 if–(
pTab
->
èbFœgs
 & 
TF_VútuÆ
)==0 )  
pDef
;

1059 
pVèb
 = 
	`sqlôe3GëVTabÀ
(
db
, 
pTab
)->pVtab;

1060 
	`as£π
–
pVèb
!=0 );

1061 
	`as£π
–
pVèb
->
pModuÀ
!=0 );

1062 
pMod
 = (
sqlôe3_moduÀ
 *)
pVèb
->
pModuÀ
;

1063 if–
pMod
->
xFödFun˘i⁄
==0 )  
pDef
;

1068 
zLowîName
 = 
	`sqlôe3DbSåDup
(
db
, 
pDef
->
zName
);

1069 if–
zLowîName
 ){

1070 
z
=(*)
zLowîName
; *z; z++){

1071 *
z
 = 
sqlôe3UµîToLowî
[*z];

1073 
rc
 = 
pMod
->
	`xFödFun˘i⁄
(
pVèb
, 
nArg
, 
zLowîName
, &
xSFunc
, &
pArg
);

1074 
	`sqlôe3DbFªe
(
db
, 
zLowîName
);

1076 if–
rc
==0 ){

1077  
pDef
;

1082 
pNew
 = 
	`sqlôe3DbMÆlocZîo
(
db
, (*pNew)

1083 + 
	`sqlôe3SåÀn30
(
pDef
->
zName
) + 1);

1084 if–
pNew
==0 ){

1085  
pDef
;

1087 *
pNew
 = *
pDef
;

1088 
pNew
->
zName
 = (const *)&pNew[1];

1089 
	`mem˝y
((*)&
pNew
[1], 
pDef
->
zName
, 
	`sqlôe3SåÀn30
(pDef->zName)+1);

1090 
pNew
->
xSFunc
 = xSFunc;

1091 
pNew
->
pU£rD©a
 = 
pArg
;

1092 
pNew
->
funcFœgs
 |
SQLITE_FUNC_EPHEM
;

1093  
pNew
;

1094 
	}
}

1102 
	$sqlôe3VèbMakeWrôabÀ
(
P¨£
 *
pP¨£
, 
TabÀ
 *
pTab
){

1103 
P¨£
 *
pT›Àvñ
 = 
	`sqlôe3P¨£T›Àvñ
(
pP¨£
);

1104 
i
, 
n
;

1105 
TabÀ
 **
≠VèbLock
;

1107 
	`as£π
–
	`IsVútuÆ
(
pTab
) );

1108 
i
=0; i<
pT›Àvñ
->
nVèbLock
; i++){

1109 if–
pTab
==
pT›Àvñ
->
≠VèbLock
[
i
] ) ;

1111 
n
 = (
pT›Àvñ
->
nVèbLock
+1)*’T›Àvñ->
≠VèbLock
[0]);

1112 
≠VèbLock
 = 
	`sqlôe3_ªÆloc64
(
pT›Àvñ
->≠VèbLock, 
n
);

1113 if–
≠VèbLock
 ){

1114 
pT›Àvñ
->
≠VèbLock
 =ápVtabLock;

1115 
pT›Àvñ
->
≠VèbLock
[pT›Àvñ->
nVèbLock
++] = 
pTab
;

1117 
	`sqlôe3OomFau…
(
pT›Àvñ
->
db
);

1119 
	}
}

1135 
	$sqlôe3VèbEp⁄ymousTabÀInô
(
P¨£
 *
pP¨£
, 
ModuÀ
 *
pMod
){

1136 c⁄° 
sqlôe3_moduÀ
 *
pModuÀ
 = 
pMod
->pModule;

1137 
TabÀ
 *
pTab
;

1138 *
zEº
 = 0;

1139 
rc
;

1140 
sqlôe3
 *
db
 = 
pP¨£
->db;

1141 if–
pMod
->
pEpoTab
 )  1;

1142 if–
pModuÀ
->
xCª©e
!=0 &&ÖModuÀ->xCª©e!ıModuÀ->
xC⁄√˘
 )  0;

1143 
pTab
 = 
	`sqlôe3DbMÆlocZîo
(
db
, (
TabÀ
));

1144 if–
pTab
==0 )  0;

1145 
pTab
->
zName
 = 
	`sqlôe3DbSåDup
(
db
, 
pMod
->zName);

1146 if–
pTab
->
zName
==0 ){

1147 
	`sqlôe3DbFªe
(
db
, 
pTab
);

1150 
pMod
->
pEpoTab
 = 
pTab
;

1151 
pTab
->
nTabRef
 = 1;

1152 
pTab
->
pSchema
 = 
db
->
aDb
[0].pSchema;

1153 
pTab
->
èbFœgs
 |
TF_VútuÆ
;

1154 
pTab
->
nModuÀArg
 = 0;

1155 
pTab
->
iPKey
 = -1;

1156 
	`addModuÀArgumít
(
db
, 
pTab
, 
	`sqlôe3DbSåDup
(db,ÖTab->
zName
));

1157 
	`addModuÀArgumít
(
db
, 
pTab
, 0);

1158 
	`addModuÀArgumít
(
db
, 
pTab
, 
	`sqlôe3DbSåDup
(db,ÖTab->
zName
));

1159 
rc
 = 
	`vèbCÆlC⁄°ru˘‹
(
db
, 
pTab
, 
pMod
, 
pModuÀ
->
xC⁄√˘
, &
zEº
);

1160 if–
rc
 ){

1161 
	`sqlôe3Eº‹Msg
(
pP¨£
, "%s", 
zEº
);

1162 
	`sqlôe3DbFªe
(
db
, 
zEº
);

1163 
	`sqlôe3VèbEp⁄ymousTabÀCÀ¨
(
db
, 
pMod
);

1167 
	}
}

1173 
	$sqlôe3VèbEp⁄ymousTabÀCÀ¨
(
sqlôe3
 *
db
, 
ModuÀ
 *
pMod
){

1174 
TabÀ
 *
pTab
 = 
pMod
->
pEpoTab
;

1175 if–
pTab
!=0 ){

1179 
pTab
->
èbFœgs
 |
TF_EphemîÆ
;

1180 
	`sqlôe3DñëeTabÀ
(
db
, 
pTab
);

1181 
pMod
->
pEpoTab
 = 0;

1183 
	}
}

1192 
	$sqlôe3_vèb_⁄_c⁄Êi˘
(
sqlôe3
 *
db
){

1193 c⁄° 
aM≠
[] = {

1194 
SQLITE_ROLLBACK
, 
SQLITE_ABORT
, 
SQLITE_FAIL
, 
SQLITE_IGNORE
, 
SQLITE_REPLACE


1196 #ifde‡
SQLITE_ENABLE_API_ARMOR


1197 if–!
	`sqlôe3Sa„tyCheckOk
(
db
ËË 
SQLITE_MISUSE_BKPT
;

1199 
	`as£π
–
OE_Rﬁlback
==1 && 
OE_Ab‹t
==2 && 
OE_Faû
==3 );

1200 
	`as£π
–
OE_Ign‹e
==4 && 
OE_Rïœ˚
==5 );

1201 
	`as£π
–
db
->
vèbOnC⁄Êi˘
>=1 && db->vtabOnConflict<=5 );

1202  ()
aM≠
[
db
->
vèbOnC⁄Êi˘
-1];

1203 
	}
}

1210 
	$sqlôe3_vèb_c⁄fig
(
sqlôe3
 *
db
, 
›
, ...){

1211 
va_li°
 
≠
;

1212 
rc
 = 
SQLITE_OK
;

1214 #ifde‡
SQLITE_ENABLE_API_ARMOR


1215 if–!
	`sqlôe3Sa„tyCheckOk
(
db
ËË 
SQLITE_MISUSE_BKPT
;

1217 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

1218 
	`va_°¨t
(
≠
, 
›
);

1219  
›
 ){

1220 
SQLITE_VTAB_CONSTRAINT_SUPPORT
: {

1221 
VèbCtx
 *
p
 = 
db
->
pVèbCtx
;

1222 if–!
p
 ){

1223 
rc
 = 
SQLITE_MISUSE_BKPT
;

1225 
	`as£π
–
p
->
pTab
==0 || (p->pTab->
èbFœgs
 & 
TF_VútuÆ
)!=0 );

1226 
p
->
pVTabÀ
->
bC⁄°øöt
 = (
u8
)
	`va_¨g
(
≠
, );

1231 
rc
 = 
SQLITE_MISUSE_BKPT
;

1234 
	`va_íd
(
≠
);

1236 if–
rc
!=
SQLITE_OK
 ) 
	`sqlôe3Eº‹
(
db
,Ñc);

1237 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

1238  
rc
;

1239 
	}
}

	@vxworks.h

15 #i‡
deföed
(
__RTP__
Ë|| deföed(
_WRS_KERNEL
)

18 
	~<vxW‹ks.h
>

19 
	~<±hªad.h
>

20 
	#OS_VXWORKS
 1

	)

21 
	#SQLITE_OS_OTHER
 0

	)

22 
	#SQLITE_HOMEGROWN_RECURSIVE_MUTEX
 1

	)

23 
	#SQLITE_OMIT_LOAD_EXTENSION
 1

	)

24 
	#SQLITE_ENABLE_LOCKING_STYLE
 0

	)

25 
	#HAVE_UTIME
 1

	)

28 
	#OS_VXWORKS
 0

	)

29 
	#HAVE_FCHOWN
 1

	)

30 
	#HAVE_READLINK
 1

	)

31 
	#HAVE_LSTAT
 1

	)

	@wal.c

243 #i‚de‡
SQLITE_OMIT_WAL


245 
	~"wÆ.h
"

246 
	~"båì.h
"

247 
	~"båìI¡.h
"

251 #i‡
deföed
(
SQLITE_TEST
Ë&& deföed(
SQLITE_DEBUG
)

252 
	gsqlôe3WÆTø˚
 = 0;

253 
	#WALTRACE
(
X
Ëif(
sqlôe3WÆTø˚
Ë
sqlôe3DebugPrötf
 
	)
X

255 
	#WALTRACE
(
X
)

	)

271 
	#WAL_MAX_VERSION
 3007000

	)

272 
	#WALINDEX_MAX_VERSION
 3007000

	)

279 
	#WAL_WRITE_LOCK
 0

	)

280 
	#WAL_ALL_BUT_WRITE
 1

	)

281 
	#WAL_CKPT_LOCK
 1

	)

282 
	#WAL_RECOVER_LOCK
 2

	)

283 
	#WAL_READ_LOCK
(
I
Ë(3+(I))

	)

284 
	#WAL_NREADER
 (
SQLITE_SHM_NLOCK
-3)

	)

288 
WÆIndexHdr
 
	tWÆIndexHdr
;

289 
WÆIãøt‹
 
	tWÆIãøt‹
;

290 
WÆCk±Info
 
	tWÆCk±Info
;

306 
	sWÆIndexHdr
 {

307 
u32
 
	miVîsi⁄
;

308 
u32
 
	munu£d
;

309 
u32
 
	miCh™ge
;

310 
u8
 
	misInô
;

311 
u8
 
	mbigEndCksum
;

312 
u16
 
	mszPage
;

313 
u32
 
	mmxFøme
;

314 
u32
 
	mnPage
;

315 
u32
 
	maFømeCksum
[2];

316 
u32
 
	maSÆt
[2];

317 
u32
 
	maCksum
[2];

379 
	sWÆCk±Info
 {

380 
u32
 
	mnBackfûl
;

381 
u32
 
	maRódM¨k
[
WAL_NREADER
];

382 
u8
 
	maLock
[
SQLITE_SHM_NLOCK
];

383 
u32
 
	mnBackfûlAâem±ed
;

384 
u32
 
	mnŸU£d0
;

386 
	#READMARK_NOT_USED
 0xffffffff

	)

394 
	#WALINDEX_LOCK_OFFSET
 ((
WÆIndexHdr
)*2+
	`off£tof
(
WÆCk±Info
,
aLock
))

	)

395 
	#WALINDEX_HDR_SIZE
 ((
WÆIndexHdr
)*2+(
WÆCk±Info
))

	)

398 
	#WAL_FRAME_HDRSIZE
 24

	)

402 
	#WAL_HDRSIZE
 32

	)

413 
	#WAL_MAGIC
 0x377f0682

	)

420 
	#wÆFømeOff£t
(
iFøme
, 
szPage
) ( \

421 
WAL_HDRSIZE
 + ((
iFøme
)-1)*(
i64
)((
szPage
)+
WAL_FRAME_HDRSIZE
) \

422 )

	)

428 
	sWÆ
 {

429 
sqlôe3_vfs
 *
	mpVfs
;

430 
sqlôe3_fûe
 *
	mpDbFd
;

431 
sqlôe3_fûe
 *
	mpWÆFd
;

432 
u32
 
	miCÆlback
;

433 
i64
 
	mmxWÆSize
;

434 
	mnWiD©a
;

435 
	mszFú°Block
;

436 vﬁ©ûê
u32
 **
	m≠WiD©a
;

437 
u32
 
	mszPage
;

438 
i16
 
	mªadLock
;

439 
u8
 
	msyncFœgs
;

440 
u8
 
	mex˛usiveMode
;

441 
u8
 
	mwrôeLock
;

442 
u8
 
	mck±Lock
;

443 
u8
 
	mªadO∆y
;

444 
u8
 
	måunˇãOnCommô
;

445 
u8
 
	msyncHódî
;

446 
u8
 
	m∑dToSe˘‹Bound¨y
;

447 
WÆIndexHdr
 
	mhdr
;

448 
u32
 
	mmöFøme
;

449 
u32
 
	miReCksum
;

450 c⁄° *
	mzWÆName
;

451 
u32
 
	mnCk±
;

452 #ifde‡
SQLITE_DEBUG


453 
u8
 
	mlockEº‹
;

455 #ifde‡
SQLITE_ENABLE_SNAPSHOT


456 
WÆIndexHdr
 *
	mpS«pshŸ
;

463 
	#WAL_NORMAL_MODE
 0

	)

464 
	#WAL_EXCLUSIVE_MODE
 1

	)

465 
	#WAL_HEAPMEMORY_MODE
 2

	)

470 
	#WAL_RDWR
 0

	)

471 
	#WAL_RDONLY
 1

	)

472 
	#WAL_SHM_RDONLY
 2

	)

478 
u16
 
	tht_¶Ÿ
;

495 
	sWÆIãøt‹
 {

496 
	miPri‹
;

497 
	mnSegmít
;

498 
	sWÆSegmít
 {

499 
	miNext
;

500 
ht_¶Ÿ
 *
	maIndex
;

501 
u32
 *
	maPgno
;

502 
	mnE¡ry
;

503 
	miZîo
;

504 } 
	maSegmít
[1];

515 
	#HASHTABLE_NPAGE
 4096

	)

516 
	#HASHTABLE_HASH_1
 383

	)

517 
	#HASHTABLE_NSLOT
 (
HASHTABLE_NPAGE
*2Ë

	)

524 
	#HASHTABLE_NPAGE_ONE
 (
HASHTABLE_NPAGE
 - (
WALINDEX_HDR_SIZE
/(
u32
)))

	)

527 
	#WALINDEX_PGSZ
 ( \

528 (
ht_¶Ÿ
)*
HASHTABLE_NSLOT
 + 
HASHTABLE_NPAGE
*(
u32
) \

529 )

	)

540 
	$wÆIndexPage
(
WÆ
 *
pWÆ
, 
iPage
, vﬁ©ûê
u32
 **
µPage
){

541 
rc
 = 
SQLITE_OK
;

544 if–
pWÆ
->
nWiD©a
<=
iPage
 ){

545 
nByã
 = (
u32
*)*(
iPage
+1);

546 vﬁ©ûê
u32
 **
≠New
;

547 
≠New
 = (vﬁ©ûê
u32
 **)
	`sqlôe3_ªÆloc64
((*)
pWÆ
->
≠WiD©a
, 
nByã
);

548 if–!
≠New
 ){

549 *
µPage
 = 0;

550  
SQLITE_NOMEM_BKPT
;

552 
	`mem£t
((*)&
≠New
[
pWÆ
->
nWiD©a
], 0,

553 (
u32
*)*(
iPage
+1-
pWÆ
->
nWiD©a
));

554 
pWÆ
->
≠WiD©a
 = 
≠New
;

555 
pWÆ
->
nWiD©a
 = 
iPage
+1;

559 if–
pWÆ
->
≠WiD©a
[
iPage
]==0 ){

560 if–
pWÆ
->
ex˛usiveMode
==
WAL_HEAPMEMORY_MODE
 ){

561 
pWÆ
->
≠WiD©a
[
iPage
] = (
u32
 vﬁ©ûê*)
	`sqlôe3MÆlocZîo
(
WALINDEX_PGSZ
);

562 if–!
pWÆ
->
≠WiD©a
[
iPage
] ) 
rc
 = 
SQLITE_NOMEM_BKPT
;

564 
rc
 = 
	`sqlôe3OsShmM≠
(
pWÆ
->
pDbFd
, 
iPage
, 
WALINDEX_PGSZ
,

565 
pWÆ
->
wrôeLock
, (vﬁ©ûê**)&pWÆ->
≠WiD©a
[
iPage
]

567 if–
rc
==
SQLITE_READONLY
 ){

568 
pWÆ
->
ªadO∆y
 |
WAL_SHM_RDONLY
;

569 
rc
 = 
SQLITE_OK
;

574 *
µPage
 = 
pWÆ
->
≠WiD©a
[
iPage
];

575 
	`as£π
–
iPage
==0 || *
µPage
 || 
rc
!=
SQLITE_OK
 );

576  
rc
;

577 
	}
}

582 vﬁ©ûê
WÆCk±Info
 *
	$wÆCk±Info
(
WÆ
 *
pWÆ
){

583 
	`as£π
–
pWÆ
->
nWiD©a
>0 &&ÖWÆ->
≠WiD©a
[0] );

584  (vﬁ©ûê
WÆCk±Info
*)&(
pWÆ
->
≠WiD©a
[0][(
WÆIndexHdr
)/2]);

585 
	}
}

590 vﬁ©ûê
WÆIndexHdr
 *
	$wÆIndexHdr
(
WÆ
 *
pWÆ
){

591 
	`as£π
–
pWÆ
->
nWiD©a
>0 &&ÖWÆ->
≠WiD©a
[0] );

592  (vﬁ©ûê
WÆIndexHdr
*)
pWÆ
->
≠WiD©a
[0];

593 
	}
}

602 
	#BYTESWAP32
(
x
) ( \

603 (((
x
)&0x000000FF)<<24) + (((x)&0x0000FF00)<<8) \

604 + (((
x
)&0x00FF0000)>>8) + (((x)&0xFF000000)>>24) \

605 )

	)

616 
	$wÆChecksumByãs
(

617 
«tiveCksum
,

618 
u8
 *
a
,

619 
nByã
,

620 c⁄° 
u32
 *
aIn
,

621 
u32
 *
aOut


623 
u32
 
s1
, 
s2
;

624 
u32
 *
aD©a
 = (u32 *)
a
;

625 
u32
 *
aEnd
 = (u32 *)&
a
[
nByã
];

627 if–
aIn
 ){

628 
s1
 = 
aIn
[0];

629 
s2
 = 
aIn
[1];

631 
s1
 = 
s2
 = 0;

634 
	`as£π
–
nByã
>=8 );

635 
	`as£π
–(
nByã
&0x00000007)==0 );

637 if–
«tiveCksum
 ){

639 
s1
 +*
aD©a
++ + 
s2
;

640 
s2
 +*
aD©a
++ + 
s1
;

641 } 
aD©a
<
aEnd
 );

644 
s1
 +
	`BYTESWAP32
(
aD©a
[0]Ë+ 
s2
;

645 
s2
 +
	`BYTESWAP32
(
aD©a
[1]Ë+ 
s1
;

646 
aD©a
 += 2;

647 } 
aD©a
<
aEnd
 );

650 
aOut
[0] = 
s1
;

651 
aOut
[1] = 
s2
;

652 
	}
}

654 
	$wÆShmB¨rõr
(
WÆ
 *
pWÆ
){

655 if–
pWÆ
->
ex˛usiveMode
!=
WAL_HEAPMEMORY_MODE
 ){

656 
	`sqlôe3OsShmB¨rõr
(
pWÆ
->
pDbFd
);

658 
	}
}

665 
	$wÆIndexWrôeHdr
(
WÆ
 *
pWÆ
){

666 vﬁ©ûê
WÆIndexHdr
 *
aHdr
 = 
	`wÆIndexHdr
(
pWÆ
);

667 c⁄° 
nCksum
 = 
	`off£tof
(
WÆIndexHdr
, 
aCksum
);

669 
	`as£π
–
pWÆ
->
wrôeLock
 );

670 
pWÆ
->
hdr
.
isInô
 = 1;

671 
pWÆ
->
hdr
.
iVîsi⁄
 = 
WALINDEX_MAX_VERSION
;

672 
	`wÆChecksumByãs
(1, (
u8
*)&
pWÆ
->
hdr
, 
nCksum
, 0,ÖWÆ->hdr.
aCksum
);

673 
	`mem˝y
((*)&
aHdr
[1], (c⁄° *)&
pWÆ
->
hdr
, (
WÆIndexHdr
));

674 
	`wÆShmB¨rõr
(
pWÆ
);

675 
	`mem˝y
((*)&
aHdr
[0], (c⁄° *)&
pWÆ
->
hdr
, (
WÆIndexHdr
));

676 
	}
}

691 
	$wÆEncodeFøme
(

692 
WÆ
 *
pWÆ
,

693 
u32
 
iPage
,

694 
u32
 
nTrunˇã
,

695 
u8
 *
aD©a
,

696 
u8
 *
aFøme


698 
«tiveCksum
;

699 
u32
 *
aCksum
 = 
pWÆ
->
hdr
.
aFømeCksum
;

700 
	`as£π
–
WAL_FRAME_HDRSIZE
==24 );

701 
	`sqlôe3Put4byã
(&
aFøme
[0], 
iPage
);

702 
	`sqlôe3Put4byã
(&
aFøme
[4], 
nTrunˇã
);

703 if–
pWÆ
->
iReCksum
==0 ){

704 
	`mem˝y
(&
aFøme
[8], 
pWÆ
->
hdr
.
aSÆt
, 8);

706 
«tiveCksum
 = (
pWÆ
->
hdr
.
bigEndCksum
==
SQLITE_BIGENDIAN
);

707 
	`wÆChecksumByãs
(
«tiveCksum
, 
aFøme
, 8, 
aCksum
,áCksum);

708 
	`wÆChecksumByãs
(
«tiveCksum
, 
aD©a
, 
pWÆ
->
szPage
, 
aCksum
,áCksum);

710 
	`sqlôe3Put4byã
(&
aFøme
[16], 
aCksum
[0]);

711 
	`sqlôe3Put4byã
(&
aFøme
[20], 
aCksum
[1]);

713 
	`mem£t
(&
aFøme
[8], 0, 16);

715 
	}
}

722 
	$wÆDecodeFøme
(

723 
WÆ
 *
pWÆ
,

724 
u32
 *
piPage
,

725 
u32
 *
≤Trunˇã
,

726 
u8
 *
aD©a
,

727 
u8
 *
aFøme


729 
«tiveCksum
;

730 
u32
 *
aCksum
 = 
pWÆ
->
hdr
.
aFømeCksum
;

731 
u32
 
pgno
;

732 
	`as£π
–
WAL_FRAME_HDRSIZE
==24 );

737 if–
	`memcmp
(&
pWÆ
->
hdr
.
aSÆt
, &
aFøme
[8], 8)!=0 ){

743 
pgno
 = 
	`sqlôe3Gë4byã
(&
aFøme
[0]);

744 if–
pgno
==0 ){

753 
«tiveCksum
 = (
pWÆ
->
hdr
.
bigEndCksum
==
SQLITE_BIGENDIAN
);

754 
	`wÆChecksumByãs
(
«tiveCksum
, 
aFøme
, 8, 
aCksum
,áCksum);

755 
	`wÆChecksumByãs
(
«tiveCksum
, 
aD©a
, 
pWÆ
->
szPage
, 
aCksum
,áCksum);

756 if–
aCksum
[0]!=
	`sqlôe3Gë4byã
(&
aFøme
[16])

757 || 
aCksum
[1]!=
	`sqlôe3Gë4byã
(&
aFøme
[20])

766 *
piPage
 = 
pgno
;

767 *
≤Trunˇã
 = 
	`sqlôe3Gë4byã
(&
aFøme
[4]);

769 
	}
}

772 #i‡
deföed
(
SQLITE_TEST
Ë&& deföed(
SQLITE_DEBUG
)

777 c⁄° *
	$wÆLockName
(
lockIdx
){

778 if–
lockIdx
==
WAL_WRITE_LOCK
 ){

780 }if–
lockIdx
==
WAL_CKPT_LOCK
 ){

782 }if–
lockIdx
==
WAL_RECOVER_LOCK
 ){

785 
zName
[15];

786 
	`sqlôe3_¢¥ötf
((
zName
), zName, "READ-LOCK[%d]",

787 
lockIdx
-
	`WAL_READ_LOCK
(0));

788  
zName
;

790 
	}
}

801 
	$wÆLockSh¨ed
(
WÆ
 *
pWÆ
, 
lockIdx
){

802 
rc
;

803 if–
pWÆ
->
ex˛usiveMode
 )  
SQLITE_OK
;

804 
rc
 = 
	`sqlôe3OsShmLock
(
pWÆ
->
pDbFd
, 
lockIdx
, 1,

805 
SQLITE_SHM_LOCK
 | 
SQLITE_SHM_SHARED
);

806 
	`WALTRACE
(("WAL%p:ácquúêSHARED-%†%s\n", 
pWÆ
,

807 
	`wÆLockName
(
lockIdx
), 
rc
 ? "failed" : "ok"));

808 
	`VVA_ONLY
–
pWÆ
->
lockEº‹
 = (
u8
)(
rc
!=
SQLITE_OK
 &&Ñc!=
SQLITE_BUSY
); )

809  
rc
;

810 
	}
}

811 
	$wÆU∆ockSh¨ed
(
WÆ
 *
pWÆ
, 
lockIdx
){

812 if–
pWÆ
->
ex˛usiveMode
 ) ;

813 ()
	`sqlôe3OsShmLock
(
pWÆ
->
pDbFd
, 
lockIdx
, 1,

814 
SQLITE_SHM_UNLOCK
 | 
SQLITE_SHM_SHARED
);

815 
	`WALTRACE
(("WAL%p:Ññó£ SHARED-%s\n", 
pWÆ
, 
	`wÆLockName
(
lockIdx
)));

816 
	}
}

817 
	$wÆLockEx˛usive
(
WÆ
 *
pWÆ
, 
lockIdx
, 
n
){

818 
rc
;

819 if–
pWÆ
->
ex˛usiveMode
 )  
SQLITE_OK
;

820 
rc
 = 
	`sqlôe3OsShmLock
(
pWÆ
->
pDbFd
, 
lockIdx
, 
n
,

821 
SQLITE_SHM_LOCK
 | 
SQLITE_SHM_EXCLUSIVE
);

822 
	`WALTRACE
(("WAL%p:ácquúêEXCLUSIVE-%†˙t=%d %s\n", 
pWÆ
,

823 
	`wÆLockName
(
lockIdx
), 
n
, 
rc
 ? "failed" : "ok"));

824 
	`VVA_ONLY
–
pWÆ
->
lockEº‹
 = (
u8
)(
rc
!=
SQLITE_OK
 &&Ñc!=
SQLITE_BUSY
); )

825  
rc
;

826 
	}
}

827 
	$wÆU∆ockEx˛usive
(
WÆ
 *
pWÆ
, 
lockIdx
, 
n
){

828 if–
pWÆ
->
ex˛usiveMode
 ) ;

829 ()
	`sqlôe3OsShmLock
(
pWÆ
->
pDbFd
, 
lockIdx
, 
n
,

830 
SQLITE_SHM_UNLOCK
 | 
SQLITE_SHM_EXCLUSIVE
);

831 
	`WALTRACE
(("WAL%p:Ññó£ EXCLUSIVE-%†˙t=%d\n", 
pWÆ
,

832 
	`wÆLockName
(
lockIdx
), 
n
));

833 
	}
}

840 
	$wÆHash
(
u32
 
iPage
){

841 
	`as£π
–
iPage
>0 );

842 
	`as£π
–(
HASHTABLE_NSLOT
 & (HASHTABLE_NSLOT-1))==0 );

843  (
iPage
*
HASHTABLE_HASH_1
Ë& (
HASHTABLE_NSLOT
-1);

844 
	}
}

845 
	$wÆNextHash
(
iPri‹Hash
){

846  (
iPri‹Hash
+1)&(
HASHTABLE_NSLOT
-1);

847 
	}
}

863 
	$wÆHashGë
(

864 
WÆ
 *
pWÆ
,

865 
iHash
,

866 vﬁ©ûê
ht_¶Ÿ
 **
∑Hash
,

867 vﬁ©ûê
u32
 **
∑Pgno
,

868 
u32
 *
piZîo


870 
rc
;

871 vﬁ©ûê
u32
 *
aPgno
;

873 
rc
 = 
	`wÆIndexPage
(
pWÆ
, 
iHash
, &
aPgno
);

874 
	`as£π
–
rc
==
SQLITE_OK
 || 
iHash
>0 );

876 if–
rc
==
SQLITE_OK
 ){

877 
u32
 
iZîo
;

878 vﬁ©ûê
ht_¶Ÿ
 *
aHash
;

880 
aHash
 = (vﬁ©ûê
ht_¶Ÿ
 *)&
aPgno
[
HASHTABLE_NPAGE
];

881 if–
iHash
==0 ){

882 
aPgno
 = &aPgno[
WALINDEX_HDR_SIZE
/(
u32
)];

883 
iZîo
 = 0;

885 
iZîo
 = 
HASHTABLE_NPAGE_ONE
 + (
iHash
-1)*
HASHTABLE_NPAGE
;

888 *
∑Pgno
 = &
aPgno
[-1];

889 *
∑Hash
 = 
aHash
;

890 *
piZîo
 = 
iZîo
;

892  
rc
;

893 
	}
}

901 
	$wÆFømePage
(
u32
 
iFøme
){

902 
iHash
 = (
iFøme
+
HASHTABLE_NPAGE
-
HASHTABLE_NPAGE_ONE
-1) / HASHTABLE_NPAGE;

903 
	`as£π
–(
iHash
==0 || 
iFøme
>
HASHTABLE_NPAGE_ONE
)

904 && (
iHash
>=1 || 
iFøme
<=
HASHTABLE_NPAGE_ONE
)

905 && (
iHash
<=1 || 
iFøme
>(
HASHTABLE_NPAGE_ONE
+
HASHTABLE_NPAGE
))

906 && (
iHash
>=2 || 
iFøme
<=
HASHTABLE_NPAGE_ONE
+
HASHTABLE_NPAGE
)

907 && (
iHash
<=2 || 
iFøme
>(
HASHTABLE_NPAGE_ONE
+2*
HASHTABLE_NPAGE
))

909  
iHash
;

910 
	}
}

915 
u32
 
	$wÆFømePgno
(
WÆ
 *
pWÆ
, 
u32
 
iFøme
){

916 
iHash
 = 
	`wÆFømePage
(
iFøme
);

917 if–
iHash
==0 ){

918  
pWÆ
->
≠WiD©a
[0][
WALINDEX_HDR_SIZE
/(
u32
Ë+ 
iFøme
 - 1];

920  
pWÆ
->
≠WiD©a
[
iHash
][(
iFøme
-1-
HASHTABLE_NPAGE_ONE
)%
HASHTABLE_NPAGE
];

921 
	}
}

935 
	$wÆCÀ™upHash
(
WÆ
 *
pWÆ
){

936 vﬁ©ûê
ht_¶Ÿ
 *
aHash
 = 0;

937 vﬁ©ûê
u32
 *
aPgno
 = 0;

938 
u32
 
iZîo
 = 0;

939 
iLimô
 = 0;

940 
nByã
;

941 
i
;

943 
	`as£π
–
pWÆ
->
wrôeLock
 );

944 
	`ã°ˇ£
–
pWÆ
->
hdr
.
mxFøme
==
HASHTABLE_NPAGE_ONE
-1 );

945 
	`ã°ˇ£
–
pWÆ
->
hdr
.
mxFøme
==
HASHTABLE_NPAGE_ONE
 );

946 
	`ã°ˇ£
–
pWÆ
->
hdr
.
mxFøme
==
HASHTABLE_NPAGE_ONE
+1 );

948 if–
pWÆ
->
hdr
.
mxFøme
==0 ) ;

954 
	`as£π
–
pWÆ
->
nWiD©a
>
	`wÆFømePage
’WÆ->
hdr
.
mxFøme
) );

955 
	`as£π
–
pWÆ
->
≠WiD©a
[
	`wÆFømePage
’WÆ->
hdr
.
mxFøme
)] );

956 
	`wÆHashGë
(
pWÆ
, 
	`wÆFømePage
’WÆ->
hdr
.
mxFøme
), &
aHash
, &
aPgno
, &
iZîo
);

961 
iLimô
 = 
pWÆ
->
hdr
.
mxFøme
 - 
iZîo
;

962 
	`as£π
–
iLimô
>0 );

963 
i
=0; i<
HASHTABLE_NSLOT
; i++){

964 if–
aHash
[
i
]>
iLimô
 ){

965 
aHash
[
i
] = 0;

972 
nByã
 = ()((*)
aHash
 - (*)&
aPgno
[
iLimô
+1]);

973 
	`mem£t
((*)&
aPgno
[
iLimô
+1], 0, 
nByã
);

975 #ifde‡
SQLITE_ENABLE_EXPENSIVE_ASSERT


979 if–
iLimô
 ){

980 
j
;

981 
iKey
;

982 
j
=1; j<=
iLimô
; j++){

983 
iKey
=
	`wÆHash
(
aPgno
[
j
]); 
aHash
[iKey]; iKey=
	`wÆNextHash
(iKey)){

984 if–
aHash
[
iKey
]==
j
 ) ;

986 
	`as£π
–
aHash
[
iKey
]==
j
 );

990 
	}
}

997 
	$wÆIndexAµíd
(
WÆ
 *
pWÆ
, 
u32
 
iFøme
, u32 
iPage
){

998 
rc
;

999 
u32
 
iZîo
 = 0;

1000 vﬁ©ûê
u32
 *
aPgno
 = 0;

1001 vﬁ©ûê
ht_¶Ÿ
 *
aHash
 = 0;

1003 
rc
 = 
	`wÆHashGë
(
pWÆ
, 
	`wÆFømePage
(
iFøme
), &
aHash
, &
aPgno
, &
iZîo
);

1008 if–
rc
==
SQLITE_OK
 ){

1009 
iKey
;

1010 
idx
;

1011 
nCﬁlide
;

1013 
idx
 = 
iFøme
 - 
iZîo
;

1014 
	`as£π
–
idx
 <
HASHTABLE_NSLOT
/2 + 1 );

1019 if–
idx
==1 ){

1020 
nByã
 = ()((
u8
 *)&
aHash
[
HASHTABLE_NSLOT
] - (u8 *)&
aPgno
[1]);

1021 
	`mem£t
((*)&
aPgno
[1], 0, 
nByã
);

1030 if–
aPgno
[
idx
] ){

1031 
	`wÆCÀ™upHash
(
pWÆ
);

1032 
	`as£π
–!
aPgno
[
idx
] );

1036 
nCﬁlide
 = 
idx
;

1037 
iKey
=
	`wÆHash
(
iPage
); 
aHash
[iKey]; iKey=
	`wÆNextHash
(iKey)){

1038 if–(
nCﬁlide
--)==0 )  
SQLITE_CORRUPT_BKPT
;

1040 
aPgno
[
idx
] = 
iPage
;

1041 
aHash
[
iKey
] = (
ht_¶Ÿ
)
idx
;

1043 #ifde‡
SQLITE_ENABLE_EXPENSIVE_ASSERT


1048 
i
;

1049 
nE¡ry
 = 0;

1050 
i
=0; i<
HASHTABLE_NSLOT
; i++){ if–
aHash
[i] ) 
nE¡ry
++; }

1051 
	`as£π
–
nE¡ry
==
idx
 );

1059 if–(
idx
&0x3ff)==0 ){

1060 
i
;

1061 
i
=1; i<=
idx
; i++){

1062 
iKey
=
	`wÆHash
(
aPgno
[
i
]); 
aHash
[iKey]; iKey=
	`wÆNextHash
(iKey)){

1063 if–
aHash
[
iKey
]==
i
 ) ;

1065 
	`as£π
–
aHash
[
iKey
]==
i
 );

1072  
rc
;

1073 
	}
}

1086 
	$wÆIndexRecovî
(
WÆ
 *
pWÆ
){

1087 
rc
;

1088 
i64
 
nSize
;

1089 
u32
 
aFømeCksum
[2] = {0, 0};

1090 
iLock
;

1091 
nLock
;

1099 
	`as£π
–
pWÆ
->
ck±Lock
==1 ||ÖWal->ckptLock==0 );

1100 
	`as£π
–
WAL_ALL_BUT_WRITE
==
WAL_WRITE_LOCK
+1 );

1101 
	`as£π
–
WAL_CKPT_LOCK
==
WAL_ALL_BUT_WRITE
 );

1102 
	`as£π
–
pWÆ
->
wrôeLock
 );

1103 
iLock
 = 
WAL_ALL_BUT_WRITE
 + 
pWÆ
->
ck±Lock
;

1104 
nLock
 = 
SQLITE_SHM_NLOCK
 - 
iLock
;

1105 
rc
 = 
	`wÆLockEx˛usive
(
pWÆ
, 
iLock
, 
nLock
);

1106 if–
rc
 ){

1107  
rc
;

1109 
	`WALTRACE
(("WAL%p:Ñecovîy begö...\n", 
pWÆ
));

1111 
	`mem£t
(&
pWÆ
->
hdr
, 0, (
WÆIndexHdr
));

1113 
rc
 = 
	`sqlôe3OsFûeSize
(
pWÆ
->
pWÆFd
, &
nSize
);

1114 if–
rc
!=
SQLITE_OK
 ){

1115 
ªcovîy_îr‹
;

1118 if–
nSize
>
WAL_HDRSIZE
 ){

1119 
u8
 
aBuf
[
WAL_HDRSIZE
];

1120 
u8
 *
aFøme
 = 0;

1121 
szFøme
;

1122 
u8
 *
aD©a
;

1123 
iFøme
;

1124 
i64
 
iOff£t
;

1125 
szPage
;

1126 
u32
 
magic
;

1127 
u32
 
vîsi⁄
;

1128 
isVÆid
;

1131 
rc
 = 
	`sqlôe3OsRód
(
pWÆ
->
pWÆFd
, 
aBuf
, 
WAL_HDRSIZE
, 0);

1132 if–
rc
!=
SQLITE_OK
 ){

1133 
ªcovîy_îr‹
;

1141 
magic
 = 
	`sqlôe3Gë4byã
(&
aBuf
[0]);

1142 
szPage
 = 
	`sqlôe3Gë4byã
(&
aBuf
[8]);

1143 if–(
magic
&0xFFFFFFFE)!=
WAL_MAGIC


1144 || 
szPage
&(szPage-1)

1145 || 
szPage
>
SQLITE_MAX_PAGE_SIZE


1146 || 
szPage
<512

1148 
föished
;

1150 
pWÆ
->
hdr
.
bigEndCksum
 = (
u8
)(
magic
&0x00000001);

1151 
pWÆ
->
szPage
 = szPage;

1152 
pWÆ
->
nCk±
 = 
	`sqlôe3Gë4byã
(&
aBuf
[12]);

1153 
	`mem˝y
(&
pWÆ
->
hdr
.
aSÆt
, &
aBuf
[16], 8);

1156 
	`wÆChecksumByãs
(
pWÆ
->
hdr
.
bigEndCksum
==
SQLITE_BIGENDIAN
,

1157 
aBuf
, 
WAL_HDRSIZE
-2*4, 0, 
pWÆ
->
hdr
.
aFømeCksum


1159 if–
pWÆ
->
hdr
.
aFømeCksum
[0]!=
	`sqlôe3Gë4byã
(&
aBuf
[24])

1160 || 
pWÆ
->
hdr
.
aFømeCksum
[1]!=
	`sqlôe3Gë4byã
(&
aBuf
[28])

1162 
föished
;

1167 
vîsi⁄
 = 
	`sqlôe3Gë4byã
(&
aBuf
[4]);

1168 if–
vîsi⁄
!=
WAL_MAX_VERSION
 ){

1169 
rc
 = 
SQLITE_CANTOPEN_BKPT
;

1170 
föished
;

1174 
szFøme
 = 
szPage
 + 
WAL_FRAME_HDRSIZE
;

1175 
aFøme
 = (
u8
 *)
	`sqlôe3_mÆloc64
(
szFøme
);

1176 if–!
aFøme
 ){

1177 
rc
 = 
SQLITE_NOMEM_BKPT
;

1178 
ªcovîy_îr‹
;

1180 
aD©a
 = &
aFøme
[
WAL_FRAME_HDRSIZE
];

1183 
iFøme
 = 0;

1184 
iOff£t
=
WAL_HDRSIZE
; (iOff£t+
szFøme
)<=
nSize
; iOffset+=szFrame){

1185 
u32
 
pgno
;

1186 
u32
 
nTrunˇã
;

1189 
iFøme
++;

1190 
rc
 = 
	`sqlôe3OsRód
(
pWÆ
->
pWÆFd
, 
aFøme
, 
szFøme
, 
iOff£t
);

1191 if–
rc
!=
SQLITE_OK
 ) ;

1192 
isVÆid
 = 
	`wÆDecodeFøme
(
pWÆ
, &
pgno
, &
nTrunˇã
, 
aD©a
, 
aFøme
);

1193 if–!
isVÆid
 ) ;

1194 
rc
 = 
	`wÆIndexAµíd
(
pWÆ
, 
iFøme
, 
pgno
);

1195 if–
rc
!=
SQLITE_OK
 ) ;

1198 if–
nTrunˇã
 ){

1199 
pWÆ
->
hdr
.
mxFøme
 = 
iFøme
;

1200 
pWÆ
->
hdr
.
nPage
 = 
nTrunˇã
;

1201 
pWÆ
->
hdr
.
szPage
 = (
u16
)((szPage&0xff00) | (szPage>>16));

1202 
	`ã°ˇ£
–
szPage
<=32768 );

1203 
	`ã°ˇ£
–
szPage
>=65536 );

1204 
aFømeCksum
[0] = 
pWÆ
->
hdr
.aFrameCksum[0];

1205 
aFømeCksum
[1] = 
pWÆ
->
hdr
.aFrameCksum[1];

1209 
	`sqlôe3_‰ì
(
aFøme
);

1212 
föished
:

1213 if–
rc
==
SQLITE_OK
 ){

1214 vﬁ©ûê
WÆCk±Info
 *
pInfo
;

1215 
i
;

1216 
pWÆ
->
hdr
.
aFømeCksum
[0] =áFrameCksum[0];

1217 
pWÆ
->
hdr
.
aFømeCksum
[1] =áFrameCksum[1];

1218 
	`wÆIndexWrôeHdr
(
pWÆ
);

1224 
pInfo
 = 
	`wÆCk±Info
(
pWÆ
);

1225 
pInfo
->
nBackfûl
 = 0;

1226 
pInfo
->
nBackfûlAâem±ed
 = 
pWÆ
->
hdr
.
mxFøme
;

1227 
pInfo
->
aRódM¨k
[0] = 0;

1228 
i
=1; i<
WAL_NREADER
; i++Ë
pInfo
->
aRódM¨k
[i] = 
READMARK_NOT_USED
;

1229 if–
pWÆ
->
hdr
.
mxFøme
 ) 
pInfo
->
aRódM¨k
[1] =ÖWal->hdr.mxFrame;

1236 if–
pWÆ
->
hdr
.
nPage
 ){

1237 
	`sqlôe3_log
(
SQLITE_NOTICE_RECOVER_WAL
,

1239 
pWÆ
->
hdr
.
mxFøme
,ÖWÆ->
zWÆName


1244 
ªcovîy_îr‹
:

1245 
	`WALTRACE
(("WAL%p:Ñecovîy %s\n", 
pWÆ
, 
rc
 ? "failed" : "ok"));

1246 
	`wÆU∆ockEx˛usive
(
pWÆ
, 
iLock
, 
nLock
);

1247  
rc
;

1248 
	}
}

1253 
	$wÆIndexClo£
(
WÆ
 *
pWÆ
, 
isDñëe
){

1254 if–
pWÆ
->
ex˛usiveMode
==
WAL_HEAPMEMORY_MODE
 ){

1255 
i
;

1256 
i
=0; i<
pWÆ
->
nWiD©a
; i++){

1257 
	`sqlôe3_‰ì
((*)
pWÆ
->
≠WiD©a
[
i
]);

1258 
pWÆ
->
≠WiD©a
[
i
] = 0;

1261 
	`sqlôe3OsShmUnm≠
(
pWÆ
->
pDbFd
, 
isDñëe
);

1263 
	}
}

1280 
	$sqlôe3WÆO≥n
(

1281 
sqlôe3_vfs
 *
pVfs
,

1282 
sqlôe3_fûe
 *
pDbFd
,

1283 c⁄° *
zWÆName
,

1284 
bNoShm
,

1285 
i64
 
mxWÆSize
,

1286 
WÆ
 **
µWÆ


1288 
rc
;

1289 
WÆ
 *
pRë
;

1290 
Êags
;

1292 
	`as£π
–
zWÆName
 && zWalName[0] );

1293 
	`as£π
–
pDbFd
 );

1301 
	`as£π
–120==
WALINDEX_LOCK_OFFSET
 );

1302 
	`as£π
–136==
WALINDEX_HDR_SIZE
 );

1303 #ifde‡
WIN_SHM_BASE


1304 
	`as£π
–
WIN_SHM_BASE
==
WALINDEX_LOCK_OFFSET
 );

1306 #ifde‡
UNIX_SHM_BASE


1307 
	`as£π
–
UNIX_SHM_BASE
==
WALINDEX_LOCK_OFFSET
 );

1312 *
µWÆ
 = 0;

1313 
pRë
 = (
WÆ
*)
	`sqlôe3MÆlocZîo
((WÆË+ 
pVfs
->
szOsFûe
);

1314 if–!
pRë
 ){

1315  
SQLITE_NOMEM_BKPT
;

1318 
pRë
->
pVfs
 =ÖVfs;

1319 
pRë
->
pWÆFd
 = (
sqlôe3_fûe
 *)&pRet[1];

1320 
pRë
->
pDbFd
 =ÖDbFd;

1321 
pRë
->
ªadLock
 = -1;

1322 
pRë
->
mxWÆSize
 = mxWalSize;

1323 
pRë
->
zWÆName
 = zWalName;

1324 
pRë
->
syncHódî
 = 1;

1325 
pRë
->
∑dToSe˘‹Bound¨y
 = 1;

1326 
pRë
->
ex˛usiveMode
 = (
bNoShm
 ? 
WAL_HEAPMEMORY_MODE
: 
WAL_NORMAL_MODE
);

1329 
Êags
 = (
SQLITE_OPEN_READWRITE
|
SQLITE_OPEN_CREATE
|
SQLITE_OPEN_WAL
);

1330 
rc
 = 
	`sqlôe3OsO≥n
(
pVfs
, 
zWÆName
, 
pRë
->
pWÆFd
, 
Êags
, &flags);

1331 if–
rc
==
SQLITE_OK
 && 
Êags
&
SQLITE_OPEN_READONLY
 ){

1332 
pRë
->
ªadO∆y
 = 
WAL_RDONLY
;

1335 if–
rc
!=
SQLITE_OK
 ){

1336 
	`wÆIndexClo£
(
pRë
, 0);

1337 
	`sqlôe3OsClo£
(
pRë
->
pWÆFd
);

1338 
	`sqlôe3_‰ì
(
pRë
);

1340 
iDC
 = 
	`sqlôe3OsDevi˚Ch¨a˘îi°ics
(
pDbFd
);

1341 if–
iDC
 & 
SQLITE_IOCAP_SEQUENTIAL
 ){ 
pRë
->
syncHódî
 = 0; }

1342 if–
iDC
 & 
SQLITE_IOCAP_POWERSAFE_OVERWRITE
 ){

1343 
pRë
->
∑dToSe˘‹Bound¨y
 = 0;

1345 *
µWÆ
 = 
pRë
;

1346 
	`WALTRACE
(("WAL%d: o≥√d\n", 
pRë
));

1348  
rc
;

1349 
	}
}

1354 
	$sqlôe3WÆLimô
(
WÆ
 *
pWÆ
, 
i64
 
iLimô
){

1355 if–
pWÆ
 )ÖWÆ->
mxWÆSize
 = 
iLimô
;

1356 
	}
}

1368 
	$wÆIãøt‹Next
(

1369 
WÆIãøt‹
 *
p
,

1370 
u32
 *
piPage
,

1371 
u32
 *
piFøme


1373 
u32
 
iMö
;

1374 
u32
 
iRë
 = 0xFFFFFFFF;

1375 
i
;

1377 
iMö
 = 
p
->
iPri‹
;

1378 
	`as£π
–
iMö
<0xffffffff );

1379 
i
=
p
->
nSegmít
-1; i>=0; i--){

1380 
WÆSegmít
 *
pSegmít
 = &
p
->
aSegmít
[
i
];

1381  
pSegmít
->
iNext
<pSegmít->
nE¡ry
 ){

1382 
u32
 
iPg
 = 
pSegmít
->
aPgno
[pSegmít->
aIndex
[pSegmít->
iNext
]];

1383 if–
iPg
>
iMö
 ){

1384 if–
iPg
<
iRë
 ){

1385 
iRë
 = 
iPg
;

1386 *
piFøme
 = 
pSegmít
->
iZîo
 +ÖSegmít->
aIndex
[pSegmít->
iNext
];

1390 
pSegmít
->
iNext
++;

1394 *
piPage
 = 
p
->
iPri‹
 = 
iRë
;

1395  (
iRë
==0xFFFFFFFF);

1396 
	}
}

1421 
	$wÆMîge
(

1422 c⁄° 
u32
 *
aC⁄ã¡
,

1423 
ht_¶Ÿ
 *
aLe·
,

1424 
nLe·
,

1425 
ht_¶Ÿ
 **
∑Right
,

1426 *
≤Right
,

1427 
ht_¶Ÿ
 *
aTmp


1429 
iLe·
 = 0;

1430 
iRight
 = 0;

1431 
iOut
 = 0;

1432 
nRight
 = *
≤Right
;

1433 
ht_¶Ÿ
 *
aRight
 = *
∑Right
;

1435 
	`as£π
–
nLe·
>0 && 
nRight
>0 );

1436  
iRight
<
nRight
 || 
iLe·
<
nLe·
 ){

1437 
ht_¶Ÿ
 
log∑ge
;

1438 
Pgno
 
db∑ge
;

1440 if–(
iLe·
<
nLe·
)

1441 && (
iRight
>=
nRight
 || 
aC⁄ã¡
[
aLe·
[
iLe·
]]<aC⁄ã¡[
aRight
[iRight]])

1443 
log∑ge
 = 
aLe·
[
iLe·
++];

1445 
log∑ge
 = 
aRight
[
iRight
++];

1447 
db∑ge
 = 
aC⁄ã¡
[
log∑ge
];

1449 
aTmp
[
iOut
++] = 
log∑ge
;

1450 if–
iLe·
<
nLe·
 && 
aC⁄ã¡
[
aLe·
[iLe·]]==
db∑ge
 ) iLeft++;

1452 
	`as£π
–
iLe·
>=
nLe·
 || 
aC⁄ã¡
[
aLe·
[iLe·]]>
db∑ge
 );

1453 
	`as£π
–
iRight
>=
nRight
 || 
aC⁄ã¡
[
aRight
[iRight]]>
db∑ge
 );

1456 *
∑Right
 = 
aLe·
;

1457 *
≤Right
 = 
iOut
;

1458 
	`mem˝y
(
aLe·
, 
aTmp
, ◊Tmp[0])*
iOut
);

1459 
	}
}

1478 
	$wÆMîges‹t
(

1479 c⁄° 
u32
 *
aC⁄ã¡
,

1480 
ht_¶Ÿ
 *
aBuf„r
,

1481 
ht_¶Ÿ
 *
aLi°
,

1482 *
≤Li°


1484 
	sSubli°
 {

1485 
nLi°
;

1486 
ht_¶Ÿ
 *
aLi°
;

1489 c⁄° 
nLi°
 = *
≤Li°
;

1490 
nMîge
 = 0;

1491 
ht_¶Ÿ
 *
aMîge
 = 0;

1492 
iLi°
;

1493 
u32
 
iSub
 = 0;

1494 
Subli°
 
aSub
[13];

1496 
	`mem£t
(
aSub
, 0, (aSub));

1497 
	`as£π
–
nLi°
<=
HASHTABLE_NPAGE
 &&ÇList>0 );

1498 
	`as£π
–
HASHTABLE_NPAGE
==(1<<(
	`AºaySize
(
aSub
)-1)) );

1500 
iLi°
=0; iLi°<
nLi°
; iList++){

1501 
nMîge
 = 1;

1502 
aMîge
 = &
aLi°
[
iLi°
];

1503 
iSub
=0; 
iLi°
 & (1<<iSub); iSub++){

1504 
Subli°
 *
p
;

1505 
	`as£π
–
iSub
<
	`AºaySize
(
aSub
) );

1506 
p
 = &
aSub
[
iSub
];

1507 
	`as£π
–
p
->
aLi°
 &&Ö->
nLi°
<=(1<<
iSub
) );

1508 
	`as£π
–
p
->
aLi°
==&aLi°[
iLi°
&~((2<<
iSub
)-1)] );

1509 
	`wÆMîge
(
aC⁄ã¡
, 
p
->
aLi°
,Ö->
nLi°
, &
aMîge
, &
nMîge
, 
aBuf„r
);

1511 
aSub
[
iSub
].
aLi°
 = 
aMîge
;

1512 
aSub
[
iSub
].
nLi°
 = 
nMîge
;

1515 
iSub
++; iSub<
	`AºaySize
(
aSub
); iSub++){

1516 if–
nLi°
 & (1<<
iSub
) ){

1517 
Subli°
 *
p
;

1518 
	`as£π
–
iSub
<
	`AºaySize
(
aSub
) );

1519 
p
 = &
aSub
[
iSub
];

1520 
	`as£π
–
p
->
nLi°
<=(1<<
iSub
) );

1521 
	`as£π
–
p
->
aLi°
==&aLi°[
nLi°
&~((2<<
iSub
)-1)] );

1522 
	`wÆMîge
(
aC⁄ã¡
, 
p
->
aLi°
,Ö->
nLi°
, &
aMîge
, &
nMîge
, 
aBuf„r
);

1525 
	`as£π
–
aMîge
==
aLi°
 );

1526 *
≤Li°
 = 
nMîge
;

1528 #ifde‡
SQLITE_DEBUG


1530 
i
;

1531 
i
=1; i<*
≤Li°
; i++){

1532 
	`as£π
–
aC⁄ã¡
[
aLi°
[
i
]] >áContent[aList[i-1]] );

1536 
	}
}

1541 
	$wÆIãøt‹Fªe
(
WÆIãøt‹
 *
p
){

1542 
	`sqlôe3_‰ì
(
p
);

1543 
	}
}

1557 
	$wÆIãøt‹Inô
(
WÆ
 *
pWÆ
, 
WÆIãøt‹
 **
µ
){

1558 
WÆIãøt‹
 *
p
;

1559 
nSegmít
;

1560 
u32
 
iLa°
;

1561 
nByã
;

1562 
i
;

1563 
ht_¶Ÿ
 *
aTmp
;

1564 
rc
 = 
SQLITE_OK
;

1569 
	`as£π
–
pWÆ
->
ck±Lock
 &&ÖWÆ->
hdr
.
mxFøme
>0 );

1570 
iLa°
 = 
pWÆ
->
hdr
.
mxFøme
;

1573 
nSegmít
 = 
	`wÆFømePage
(
iLa°
) + 1;

1574 
nByã
 = (
WÆIãøt‹
)

1575 + (
nSegmít
-1)*(
WÆSegmít
)

1576 + 
iLa°
*(
ht_¶Ÿ
);

1577 
p
 = (
WÆIãøt‹
 *)
	`sqlôe3_mÆloc64
(
nByã
);

1578 if–!
p
 ){

1579  
SQLITE_NOMEM_BKPT
;

1581 
	`mem£t
(
p
, 0, 
nByã
);

1582 
p
->
nSegmít
 =ÇSegment;

1587 
aTmp
 = (
ht_¶Ÿ
 *)
	`sqlôe3_mÆloc64
(

1588 (
ht_¶Ÿ
Ë* (
iLa°
>
HASHTABLE_NPAGE
?HASHTABLE_NPAGE:iLast)

1590 if–!
aTmp
 ){

1591 
rc
 = 
SQLITE_NOMEM_BKPT
;

1594 
i
=0; 
rc
==
SQLITE_OK
 && i<
nSegmít
; i++){

1595 vﬁ©ûê
ht_¶Ÿ
 *
aHash
;

1596 
u32
 
iZîo
;

1597 vﬁ©ûê
u32
 *
aPgno
;

1599 
rc
 = 
	`wÆHashGë
(
pWÆ
, 
i
, &
aHash
, &
aPgno
, &
iZîo
);

1600 if–
rc
==
SQLITE_OK
 ){

1601 
j
;

1602 
nE¡ry
;

1603 
ht_¶Ÿ
 *
aIndex
;

1605 
aPgno
++;

1606 if–(
i
+1)==
nSegmít
 ){

1607 
nE¡ry
 = ()(
iLa°
 - 
iZîo
);

1609 
nE¡ry
 = ()((
u32
*)
aHash
 - (u32*)
aPgno
);

1611 
aIndex
 = &((
ht_¶Ÿ
 *)&
p
->
aSegmít
[p->
nSegmít
])[
iZîo
];

1612 
iZîo
++;

1614 
j
=0; j<
nE¡ry
; j++){

1615 
aIndex
[
j
] = (
ht_¶Ÿ
)j;

1617 
	`wÆMîges‹t
((
u32
 *)
aPgno
, 
aTmp
, 
aIndex
, &
nE¡ry
);

1618 
p
->
aSegmít
[
i
].
iZîo
 = iZero;

1619 
p
->
aSegmít
[
i
].
nE¡ry
 =ÇEntry;

1620 
p
->
aSegmít
[
i
].
aIndex
 =áIndex;

1621 
p
->
aSegmít
[
i
].
aPgno
 = (
u32
 *)aPgno;

1624 
	`sqlôe3_‰ì
(
aTmp
);

1626 if–
rc
!=
SQLITE_OK
 ){

1627 
	`wÆIãøt‹Fªe
(
p
);

1629 *
µ
 = 
p
;

1630  
rc
;

1631 
	}
}

1639 
	$wÆBusyLock
(

1640 
WÆ
 *
pWÆ
,

1641 (*
xBusy
)(*),

1642 *
pBusyArg
,

1643 
lockIdx
,

1644 
n


1646 
rc
;

1648 
rc
 = 
	`wÆLockEx˛usive
(
pWÆ
, 
lockIdx
, 
n
);

1649 } 
xBusy
 && 
rc
==
SQLITE_BUSY
 && 
	`xBusy
(
pBusyArg
) );

1650  
rc
;

1651 
	}
}

1657 
	$wÆPagesize
(
WÆ
 *
pWÆ
){

1658  (
pWÆ
->
hdr
.
szPage
&0xfe00) + ((pWal->hdr.szPage&0x0001)<<16);

1659 
	}
}

1678 
	$wÆRe°¨tHdr
(
WÆ
 *
pWÆ
, 
u32
 
ß…1
){

1679 vﬁ©ûê
WÆCk±Info
 *
pInfo
 = 
	`wÆCk±Info
(
pWÆ
);

1680 
i
;

1681 
u32
 *
aSÆt
 = 
pWÆ
->
hdr
.aSalt;

1682 
pWÆ
->
nCk±
++;

1683 
pWÆ
->
hdr
.
mxFøme
 = 0;

1684 
	`sqlôe3Put4byã
((
u8
*)&
aSÆt
[0], 1 + 
	`sqlôe3Gë4byã
((u8*)&aSalt[0]));

1685 
	`mem˝y
(&
pWÆ
->
hdr
.
aSÆt
[1], &
ß…1
, 4);

1686 
	`wÆIndexWrôeHdr
(
pWÆ
);

1687 
pInfo
->
nBackfûl
 = 0;

1688 
pInfo
->
nBackfûlAâem±ed
 = 0;

1689 
pInfo
->
aRódM¨k
[1] = 0;

1690 
i
=2; i<
WAL_NREADER
; i++Ë
pInfo
->
aRódM¨k
[i] = 
READMARK_NOT_USED
;

1691 
	`as£π
–
pInfo
->
aRódM¨k
[0]==0 );

1692 
	}
}

1725 
	$wÆCheckpoöt
(

1726 
WÆ
 *
pWÆ
,

1727 
sqlôe3
 *
db
,

1728 
eMode
,

1729 (*
xBusy
)(*),

1730 *
pBusyArg
,

1731 
sync_Êags
,

1732 
u8
 *
zBuf


1734 
rc
 = 
SQLITE_OK
;

1735 
szPage
;

1736 
WÆIãøt‹
 *
pIãr
 = 0;

1737 
u32
 
iDb∑ge
 = 0;

1738 
u32
 
iFøme
 = 0;

1739 
u32
 
mxSa„Føme
;

1740 
u32
 
mxPage
;

1741 
i
;

1742 vﬁ©ûê
WÆCk±Info
 *
pInfo
;

1744 
szPage
 = 
	`wÆPagesize
(
pWÆ
);

1745 
	`ã°ˇ£
–
szPage
<=32768 );

1746 
	`ã°ˇ£
–
szPage
>=65536 );

1747 
pInfo
 = 
	`wÆCk±Info
(
pWÆ
);

1748 if–
pInfo
->
nBackfûl
<
pWÆ
->
hdr
.
mxFøme
 ){

1751 
rc
 = 
	`wÆIãøt‹Inô
(
pWÆ
, &
pIãr
);

1752 if–
rc
!=
SQLITE_OK
 ){

1753  
rc
;

1755 
	`as£π
–
pIãr
 );

1759 
	`as£π
–
eMode
!=
SQLITE_CHECKPOINT_PASSIVE
 || 
xBusy
==0 );

1766 
mxSa„Føme
 = 
pWÆ
->
hdr
.
mxFøme
;

1767 
mxPage
 = 
pWÆ
->
hdr
.
nPage
;

1768 
i
=1; i<
WAL_NREADER
; i++){

1777 
u32
 
y
 = 
pInfo
->
aRódM¨k
[
i
];

1778 if–
mxSa„Føme
>
y
 ){

1779 
	`as£π
–
y
<=
pWÆ
->
hdr
.
mxFøme
 );

1780 
rc
 = 
	`wÆBusyLock
(
pWÆ
, 
xBusy
, 
pBusyArg
, 
	`WAL_READ_LOCK
(
i
), 1);

1781 if–
rc
==
SQLITE_OK
 ){

1782 
pInfo
->
aRódM¨k
[
i
] = (i==1 ? 
mxSa„Føme
 : 
READMARK_NOT_USED
);

1783 
	`wÆU∆ockEx˛usive
(
pWÆ
, 
	`WAL_READ_LOCK
(
i
), 1);

1784 }if–
rc
==
SQLITE_BUSY
 ){

1785 
mxSa„Føme
 = 
y
;

1786 
xBusy
 = 0;

1788 
wÆcheckpoöt_out
;

1793 if–
pInfo
->
nBackfûl
<
mxSa„Føme


1794 && (
rc
 = 
	`wÆBusyLock
(
pWÆ
, 
xBusy
, 
pBusyArg
, 
	`WAL_READ_LOCK
(0),1))==
SQLITE_OK


1796 
i64
 
nSize
;

1797 
u32
 
nBackfûl
 = 
pInfo
->nBackfill;

1799 
pInfo
->
nBackfûlAâem±ed
 = 
mxSa„Føme
;

1802 if–
sync_Êags
 ){

1803 
rc
 = 
	`sqlôe3OsSync
(
pWÆ
->
pWÆFd
, 
sync_Êags
);

1809 if–
rc
==
SQLITE_OK
 ){

1810 
i64
 
nReq
 = ((i64)
mxPage
 * 
szPage
);

1811 
rc
 = 
	`sqlôe3OsFûeSize
(
pWÆ
->
pDbFd
, &
nSize
);

1812 if–
rc
==
SQLITE_OK
 && 
nSize
<
nReq
 ){

1813 
	`sqlôe3OsFûeC⁄åﬁHöt
(
pWÆ
->
pDbFd
, 
SQLITE_FCNTL_SIZE_HINT
, &
nReq
);

1819  
rc
==
SQLITE_OK
 && 0==
	`wÆIãøt‹Next
(
pIãr
, &
iDb∑ge
, &
iFøme
) ){

1820 
i64
 
iOff£t
;

1821 
	`as£π
–
	`wÆFømePgno
(
pWÆ
, 
iFøme
)==
iDb∑ge
 );

1822 if–
db
->
u1
.
isI¡îru±ed
 ){

1823 
rc
 = 
db
->
mÆlocFaûed
 ? 
SQLITE_NOMEM_BKPT
 : 
SQLITE_INTERRUPT
;

1826 if–
iFøme
<=
nBackfûl
 || iFøme>
mxSa„Føme
 || 
iDb∑ge
>
mxPage
 ){

1829 
iOff£t
 = 
	`wÆFømeOff£t
(
iFøme
, 
szPage
Ë+ 
WAL_FRAME_HDRSIZE
;

1831 
rc
 = 
	`sqlôe3OsRód
(
pWÆ
->
pWÆFd
, 
zBuf
, 
szPage
, 
iOff£t
);

1832 if–
rc
!=
SQLITE_OK
 ) ;

1833 
iOff£t
 = (
iDb∑ge
-1)*(
i64
)
szPage
;

1834 
	`ã°ˇ£
–
	`IS_BIG_INT
(
iOff£t
) );

1835 
rc
 = 
	`sqlôe3OsWrôe
(
pWÆ
->
pDbFd
, 
zBuf
, 
szPage
, 
iOff£t
);

1836 if–
rc
!=
SQLITE_OK
 ) ;

1840 if–
rc
==
SQLITE_OK
 ){

1841 if–
mxSa„Føme
==
	`wÆIndexHdr
(
pWÆ
)->
mxFøme
 ){

1842 
i64
 
szDb
 = 
pWÆ
->
hdr
.
nPage
*(i64)
szPage
;

1843 
	`ã°ˇ£
–
	`IS_BIG_INT
(
szDb
) );

1844 
rc
 = 
	`sqlôe3OsTrunˇã
(
pWÆ
->
pDbFd
, 
szDb
);

1845 if–
rc
==
SQLITE_OK
 && 
sync_Êags
 ){

1846 
	`sqlôe3LogFûeInô
(
db
->
aDb
[0].
pBt
->pBt->
pPagî
->
pLoggî
);

1847 
rc
 = 
	`sqlôe3OsSync
(
pWÆ
->
pDbFd
, 
sync_Êags
);

1850 if–
rc
==
SQLITE_OK
 ){

1851 
pInfo
->
nBackfûl
 = 
mxSa„Føme
;

1856 
	`wÆU∆ockEx˛usive
(
pWÆ
, 
	`WAL_READ_LOCK
(0), 1);

1859 if–
rc
==
SQLITE_BUSY
 ){

1862 
rc
 = 
SQLITE_OK
;

1871 if–
rc
==
SQLITE_OK
 && 
eMode
!=
SQLITE_CHECKPOINT_PASSIVE
 ){

1872 
	`as£π
–
pWÆ
->
wrôeLock
 );

1873 if–
pInfo
->
nBackfûl
<
pWÆ
->
hdr
.
mxFøme
 ){

1874 
rc
 = 
SQLITE_BUSY
;

1875 }if–
eMode
>=
SQLITE_CHECKPOINT_RESTART
 ){

1876 
u32
 
ß…1
;

1877 
	`sqlôe3_øndom√ss
(4, &
ß…1
);

1878 
	`as£π
–
pInfo
->
nBackfûl
==
pWÆ
->
hdr
.
mxFøme
 );

1879 
rc
 = 
	`wÆBusyLock
(
pWÆ
, 
xBusy
, 
pBusyArg
, 
	`WAL_READ_LOCK
(1), 
WAL_NREADER
-1);

1880 if–
rc
==
SQLITE_OK
 ){

1881 if–
eMode
==
SQLITE_CHECKPOINT_TRUNCATE
 ){

1895 
	`wÆRe°¨tHdr
(
pWÆ
, 
ß…1
);

1896 
rc
 = 
	`sqlôe3OsTrunˇã
(
pWÆ
->
pWÆFd
, 0);

1898 
	`wÆU∆ockEx˛usive
(
pWÆ
, 
	`WAL_READ_LOCK
(1), 
WAL_NREADER
-1);

1903 
wÆcheckpoöt_out
:

1904 
	`wÆIãøt‹Fªe
(
pIãr
);

1905  
rc
;

1906 
	}
}

1912 
	$wÆLimôSize
(
WÆ
 *
pWÆ
, 
i64
 
nMax
){

1913 
i64
 
sz
;

1914 
rx
;

1915 
	`sqlôe3BegöBíignMÆloc
();

1916 
rx
 = 
	`sqlôe3OsFûeSize
(
pWÆ
->
pWÆFd
, &
sz
);

1917 if–
rx
==
SQLITE_OK
 && (
sz
 > 
nMax
 ) ){

1918 
rx
 = 
	`sqlôe3OsTrunˇã
(
pWÆ
->
pWÆFd
, 
nMax
);

1920 
	`sqlôe3EndBíignMÆloc
();

1921 if–
rx
 ){

1922 
	`sqlôe3_log
(
rx
, "ˇ¬ŸÜimô WAL size: %s", 
pWÆ
->
zWÆName
);

1924 
	}
}

1929 
	$sqlôe3WÆClo£
(

1930 
WÆ
 *
pWÆ
,

1931 
sqlôe3
 *
db
,

1932 
sync_Êags
,

1933 
nBuf
,

1934 
u8
 *
zBuf


1936 
rc
 = 
SQLITE_OK
;

1937 if–
pWÆ
 ){

1938 
isDñëe
 = 0;

1948 if–
zBuf
!=0

1949 && 
SQLITE_OK
==(
rc
 = 
	`sqlôe3OsLock
(
pWÆ
->
pDbFd
, 
SQLITE_LOCK_EXCLUSIVE
))

1951 if–
pWÆ
->
ex˛usiveMode
==
WAL_NORMAL_MODE
 ){

1952 
pWÆ
->
ex˛usiveMode
 = 
WAL_EXCLUSIVE_MODE
;

1954 
rc
 = 
	`sqlôe3WÆCheckpoöt
(
pWÆ
, 
db
,

1955 
SQLITE_CHECKPOINT_PASSIVE
, 0, 0, 
sync_Êags
, 
nBuf
, 
zBuf
, 0, 0

1957 if–
rc
==
SQLITE_OK
 ){

1958 
bPîsi°
 = -1;

1959 
	`sqlôe3OsFûeC⁄åﬁHöt
(

1960 
pWÆ
->
pDbFd
, 
SQLITE_FCNTL_PERSIST_WAL
, &
bPîsi°


1962 if–
bPîsi°
!=1 ){

1966 
isDñëe
 = 1;

1967 }if–
pWÆ
->
mxWÆSize
>=0 ){

1974 
	`wÆLimôSize
(
pWÆ
, 0);

1979 
	`wÆIndexClo£
(
pWÆ
, 
isDñëe
);

1980 
	`sqlôe3OsClo£
(
pWÆ
->
pWÆFd
);

1981 if–
isDñëe
 ){

1982 
	`sqlôe3BegöBíignMÆloc
();

1983 
	`sqlôe3OsDñëe
(
pWÆ
->
pVfs
,ÖWÆ->
zWÆName
, 0);

1984 
	`sqlôe3EndBíignMÆloc
();

1986 
	`WALTRACE
(("WAL%p: clo£d\n", 
pWÆ
));

1987 
	`sqlôe3_‰ì
((*)
pWÆ
->
≠WiD©a
);

1988 
	`sqlôe3_‰ì
(
pWÆ
);

1990  
rc
;

1991 
	}
}

2010 
	$wÆIndexTryHdr
(
WÆ
 *
pWÆ
, *
pCh™ged
){

2011 
u32
 
aCksum
[2];

2012 
WÆIndexHdr
 
h1
, 
h2
;

2013 
WÆIndexHdr
 vﬁ©ûê*
aHdr
;

2016 
	`as£π
–
pWÆ
->
nWiD©a
>0 &&ÖWÆ->
≠WiD©a
[0] );

2028 
aHdr
 = 
	`wÆIndexHdr
(
pWÆ
);

2029 
	`mem˝y
(&
h1
, (*)&
aHdr
[0], (h1));

2030 
	`wÆShmB¨rõr
(
pWÆ
);

2031 
	`mem˝y
(&
h2
, (*)&
aHdr
[1], (h2));

2033 if–
	`memcmp
(&
h1
, &
h2
, (h1))!=0 ){

2036 if–
h1
.
isInô
==0 ){

2039 
	`wÆChecksumByãs
(1, (
u8
*)&
h1
, (h1)-(h1.
aCksum
), 0,áCksum);

2040 if–
aCksum
[0]!=
h1
.aCksum[0] ||áCksum[1]!=h1.aCksum[1] ){

2044 if–
	`memcmp
(&
pWÆ
->
hdr
, &
h1
, (
WÆIndexHdr
)) ){

2045 *
pCh™ged
 = 1;

2046 
	`mem˝y
(&
pWÆ
->
hdr
, &
h1
, (
WÆIndexHdr
));

2047 
pWÆ
->
szPage
 = (pWÆ->
hdr
.szPage&0xfe00) + ((pWal->hdr.szPage&0x0001)<<16);

2048 
	`ã°ˇ£
–
pWÆ
->
szPage
<=32768 );

2049 
	`ã°ˇ£
–
pWÆ
->
szPage
>=65536 );

2054 
	}
}

2068 
	$wÆIndexRódHdr
(
WÆ
 *
pWÆ
, *
pCh™ged
){

2069 
rc
;

2070 
badHdr
;

2071 vﬁ©ûê
u32
 *
∑ge0
;

2076 
	`as£π
–
pCh™ged
 );

2077 
rc
 = 
	`wÆIndexPage
(
pWÆ
, 0, &
∑ge0
);

2078 if–
rc
!=
SQLITE_OK
 ){

2079  
rc
;

2081 
	`as£π
–
∑ge0
 || 
pWÆ
->
wrôeLock
==0 );

2088 
badHdr
 = (
∑ge0
 ? 
	`wÆIndexTryHdr
(
pWÆ
, 
pCh™ged
) : 1);

2093 
	`as£π
–
badHdr
==0 || 
pWÆ
->
wrôeLock
==0 );

2094 if–
badHdr
 ){

2095 if–
pWÆ
->
ªadO∆y
 & 
WAL_SHM_RDONLY
 ){

2096 if–
SQLITE_OK
==(
rc
 = 
	`wÆLockSh¨ed
(
pWÆ
, 
WAL_WRITE_LOCK
)) ){

2097 
	`wÆU∆ockSh¨ed
(
pWÆ
, 
WAL_WRITE_LOCK
);

2098 
rc
 = 
SQLITE_READONLY_RECOVERY
;

2100 }if–
SQLITE_OK
==(
rc
 = 
	`wÆLockEx˛usive
(
pWÆ
, 
WAL_WRITE_LOCK
, 1)) ){

2101 
pWÆ
->
wrôeLock
 = 1;

2102 if–
SQLITE_OK
==(
rc
 = 
	`wÆIndexPage
(
pWÆ
, 0, &
∑ge0
)) ){

2103 
badHdr
 = 
	`wÆIndexTryHdr
(
pWÆ
, 
pCh™ged
);

2104 if–
badHdr
 ){

2109 
rc
 = 
	`wÆIndexRecovî
(
pWÆ
);

2110 *
pCh™ged
 = 1;

2113 
pWÆ
->
wrôeLock
 = 0;

2114 
	`wÆU∆ockEx˛usive
(
pWÆ
, 
WAL_WRITE_LOCK
, 1);

2122 if–
badHdr
==0 && 
pWÆ
->
hdr
.
iVîsi⁄
!=
WALINDEX_MAX_VERSION
 ){

2123 
rc
 = 
SQLITE_CANTOPEN_BKPT
;

2126  
rc
;

2127 
	}
}

2133 
	#WAL_RETRY
 (-1)

	)

2185 
	$wÆTryBegöRód
(
WÆ
 *
pWÆ
, *
pCh™ged
, 
u£WÆ
, 
˙t
){

2186 vﬁ©ûê
WÆCk±Info
 *
pInfo
;

2187 
u32
 
mxRódM¨k
;

2188 
mxI
;

2189 
i
;

2190 
rc
 = 
SQLITE_OK
;

2191 
u32
 
mxFøme
;

2193 
	`as£π
–
pWÆ
->
ªadLock
<0 );

2212 if–
˙t
>5 ){

2213 
nDñay
 = 1;

2214 if–
˙t
>100 ){

2215 
	`VVA_ONLY
–
pWÆ
->
lockEº‹
 = 1; )

2216  
SQLITE_PROTOCOL
;

2218 if–
˙t
>=10 ) 
nDñay
 = (cnt-9)*(cnt-9)*39;

2219 
	`sqlôe3OsSÀï
(
pWÆ
->
pVfs
, 
nDñay
);

2222 if–!
u£WÆ
 ){

2223 
rc
 = 
	`wÆIndexRódHdr
(
pWÆ
, 
pCh™ged
);

2224 if–
rc
==
SQLITE_BUSY
 ){

2233 if–
pWÆ
->
≠WiD©a
[0]==0 ){

2241 
rc
 = 
WAL_RETRY
;

2242 }if–
SQLITE_OK
==(
rc
 = 
	`wÆLockSh¨ed
(
pWÆ
, 
WAL_RECOVER_LOCK
)) ){

2243 
	`wÆU∆ockSh¨ed
(
pWÆ
, 
WAL_RECOVER_LOCK
);

2244 
rc
 = 
WAL_RETRY
;

2245 }if–
rc
==
SQLITE_BUSY
 ){

2246 
rc
 = 
SQLITE_BUSY_RECOVERY
;

2249 if–
rc
!=
SQLITE_OK
 ){

2250  
rc
;

2254 
pInfo
 = 
	`wÆCk±Info
(
pWÆ
);

2255 if–!
u£WÆ
 && 
pInfo
->
nBackfûl
==
pWÆ
->
hdr
.
mxFøme


2256 #ifde‡
SQLITE_ENABLE_SNAPSHOT


2257 && (
pWÆ
->
pS«pshŸ
==0 ||ÖWÆ->
hdr
.
mxFøme
==0

2258 || 0==
	`memcmp
(&
pWÆ
->
hdr
,ÖWÆ->
pS«pshŸ
, (
WÆIndexHdr
)))

2264 
rc
 = 
	`wÆLockSh¨ed
(
pWÆ
, 
	`WAL_READ_LOCK
(0));

2265 
	`wÆShmB¨rõr
(
pWÆ
);

2266 if–
rc
==
SQLITE_OK
 ){

2267 if–
	`memcmp
((*)
	`wÆIndexHdr
(
pWÆ
), &pWÆ->
hdr
, (
WÆIndexHdr
)) ){

2281 
	`wÆU∆ockSh¨ed
(
pWÆ
, 
	`WAL_READ_LOCK
(0));

2282  
WAL_RETRY
;

2284 
pWÆ
->
ªadLock
 = 0;

2285  
SQLITE_OK
;

2286 }if–
rc
!=
SQLITE_BUSY
 ){

2287  
rc
;

2296 
mxRódM¨k
 = 0;

2297 
mxI
 = 0;

2298 
mxFøme
 = 
pWÆ
->
hdr
.mxFrame;

2299 #ifde‡
SQLITE_ENABLE_SNAPSHOT


2300 if–
pWÆ
->
pS«pshŸ
 &&ÖWÆ->pS«pshŸ->
mxFøme
<mxFrame ){

2301 
mxFøme
 = 
pWÆ
->
pS«pshŸ
->mxFrame;

2304 
i
=1; i<
WAL_NREADER
; i++){

2305 
u32
 
thisM¨k
 = 
pInfo
->
aRódM¨k
[
i
];

2306 if–
mxRódM¨k
<=
thisM¨k
 &&ÅhisM¨k<=
mxFøme
 ){

2307 
	`as£π
–
thisM¨k
!=
READMARK_NOT_USED
 );

2308 
mxRódM¨k
 = 
thisM¨k
;

2309 
mxI
 = 
i
;

2312 if–(
pWÆ
->
ªadO∆y
 & 
WAL_SHM_RDONLY
)==0

2313 && (
mxRódM¨k
<
mxFøme
 || 
mxI
==0)

2315 
i
=1; i<
WAL_NREADER
; i++){

2316 
rc
 = 
	`wÆLockEx˛usive
(
pWÆ
, 
	`WAL_READ_LOCK
(
i
), 1);

2317 if–
rc
==
SQLITE_OK
 ){

2318 
mxRódM¨k
 = 
pInfo
->
aRódM¨k
[
i
] = 
mxFøme
;

2319 
mxI
 = 
i
;

2320 
	`wÆU∆ockEx˛usive
(
pWÆ
, 
	`WAL_READ_LOCK
(
i
), 1);

2322 }if–
rc
!=
SQLITE_BUSY
 ){

2323  
rc
;

2327 if–
mxI
==0 ){

2328 
	`as£π
–
rc
==
SQLITE_BUSY
 || (
pWÆ
->
ªadO∆y
 & 
WAL_SHM_RDONLY
)!=0 );

2329  
rc
==
SQLITE_BUSY
 ? 
WAL_RETRY
 : 
SQLITE_READONLY_CANTLOCK
;

2332 
rc
 = 
	`wÆLockSh¨ed
(
pWÆ
, 
	`WAL_READ_LOCK
(
mxI
));

2333 if–
rc
 ){

2334  
rc
==
SQLITE_BUSY
 ? 
WAL_RETRY
 :Ñc;

2370 
pWÆ
->
möFøme
 = 
pInfo
->
nBackfûl
+1;

2371 
	`wÆShmB¨rõr
(
pWÆ
);

2372 if–
pInfo
->
aRódM¨k
[
mxI
]!=
mxRódM¨k


2373 || 
	`memcmp
((*)
	`wÆIndexHdr
(
pWÆ
), &pWÆ->
hdr
, (
WÆIndexHdr
))

2375 
	`wÆU∆ockSh¨ed
(
pWÆ
, 
	`WAL_READ_LOCK
(
mxI
));

2376  
WAL_RETRY
;

2378 
	`as£π
–
mxRódM¨k
<=
pWÆ
->
hdr
.
mxFøme
 );

2379 
pWÆ
->
ªadLock
 = (
i16
)
mxI
;

2381  
rc
;

2382 
	}
}

2384 #ifde‡
SQLITE_ENABLE_SNAPSHOT


2404 
	$sqlôe3WÆS«pshŸRecovî
(
WÆ
 *
pWÆ
){

2405 
rc
;

2407 
	`as£π
–
pWÆ
->
ªadLock
>=0 );

2408 
rc
 = 
	`wÆLockEx˛usive
(
pWÆ
, 
WAL_CKPT_LOCK
, 1);

2409 if–
rc
==
SQLITE_OK
 ){

2410 vﬁ©ûê
WÆCk±Info
 *
pInfo
 = 
	`wÆCk±Info
(
pWÆ
);

2411 
szPage
 = ()
pWÆ
->szPage;

2412 
i64
 
szDb
;

2414 
rc
 = 
	`sqlôe3OsFûeSize
(
pWÆ
->
pDbFd
, &
szDb
);

2415 if–
rc
==
SQLITE_OK
 ){

2416 *
pBuf1
 = 
	`sqlôe3_mÆloc
(
szPage
);

2417 *
pBuf2
 = 
	`sqlôe3_mÆloc
(
szPage
);

2418 if–
pBuf1
==0 || 
pBuf2
==0 ){

2419 
rc
 = 
SQLITE_NOMEM
;

2421 
u32
 
i
 = 
pInfo
->
nBackfûlAâem±ed
;

2422 
i
=
pInfo
->
nBackfûlAâem±ed
; i>pInfo->
nBackfûl
; i--){

2423 vﬁ©ûê
ht_¶Ÿ
 *
dummy
;

2424 vﬁ©ûê
u32
 *
aPgno
;

2425 
u32
 
iZîo
;

2426 
u32
 
pgno
;

2427 
i64
 
iDbOff
;

2428 
i64
 
iWÆOff
;

2430 
rc
 = 
	`wÆHashGë
(
pWÆ
, 
	`wÆFømePage
(
i
), &
dummy
, &
aPgno
, &
iZîo
);

2431 if–
rc
!=
SQLITE_OK
 ) ;

2432 
pgno
 = 
aPgno
[
i
-
iZîo
];

2433 
iDbOff
 = (
i64
)(
pgno
-1Ë* 
szPage
;

2435 if–
iDbOff
+
szPage
<=
szDb
 ){

2436 
iWÆOff
 = 
	`wÆFømeOff£t
(
i
, 
szPage
Ë+ 
WAL_FRAME_HDRSIZE
;

2437 
rc
 = 
	`sqlôe3OsRód
(
pWÆ
->
pWÆFd
, 
pBuf1
, 
szPage
, 
iWÆOff
);

2439 if–
rc
==
SQLITE_OK
 ){

2440 
rc
 = 
	`sqlôe3OsRód
(
pWÆ
->
pDbFd
, 
pBuf2
, 
szPage
, 
iDbOff
);

2443 if–
rc
!=
SQLITE_OK
 || 0==
	`memcmp
(
pBuf1
, 
pBuf2
, 
szPage
) ){

2448 
pInfo
->
nBackfûlAâem±ed
 = 
i
-1;

2452 
	`sqlôe3_‰ì
(
pBuf1
);

2453 
	`sqlôe3_‰ì
(
pBuf2
);

2455 
	`wÆU∆ockEx˛usive
(
pWÆ
, 
WAL_CKPT_LOCK
, 1);

2458  
rc
;

2459 
	}
}

2476 
	$sqlôe3WÆBegöRódTønß˘i⁄
(
WÆ
 *
pWÆ
, *
pCh™ged
){

2477 
rc
;

2478 
˙t
 = 0;

2480 #ifde‡
SQLITE_ENABLE_SNAPSHOT


2481 
bCh™ged
 = 0;

2482 
WÆIndexHdr
 *
pS«pshŸ
 = 
pWÆ
->pSnapshot;

2483 if–
pS«pshŸ
 && 
	`memcmp
’S«pshŸ, &
pWÆ
->
hdr
, (
WÆIndexHdr
))!=0 ){

2484 
bCh™ged
 = 1;

2489 
rc
 = 
	`wÆTryBegöRód
(
pWÆ
, 
pCh™ged
, 0, ++
˙t
);

2490 } 
rc
==
WAL_RETRY
 );

2491 
	`ã°ˇ£
–(
rc
&0xff)==
SQLITE_BUSY
 );

2492 
	`ã°ˇ£
–(
rc
&0xff)==
SQLITE_IOERR
 );

2493 
	`ã°ˇ£
–
rc
==
SQLITE_PROTOCOL
 );

2494 
	`ã°ˇ£
–
rc
==
SQLITE_OK
 );

2496 #ifde‡
SQLITE_ENABLE_SNAPSHOT


2497 if–
rc
==
SQLITE_OK
 ){

2498 if–
pS«pshŸ
 && 
	`memcmp
’S«pshŸ, &
pWÆ
->
hdr
, (
WÆIndexHdr
))!=0 ){

2512 vﬁ©ûê
WÆCk±Info
 *
pInfo
 = 
	`wÆCk±Info
(
pWÆ
);

2514 
	`as£π
–
pWÆ
->
ªadLock
>0 ||ÖWÆ->
hdr
.
mxFøme
==0 );

2515 
	`as£π
–
pInfo
->
aRódM¨k
[
pWÆ
->
ªadLock
]<=
pS«pshŸ
->
mxFøme
 );

2529 
rc
 = 
	`wÆLockSh¨ed
(
pWÆ
, 
WAL_CKPT_LOCK
);

2531 if–
rc
==
SQLITE_OK
 ){

2538 if–!
	`memcmp
(
pS«pshŸ
->
aSÆt
, 
pWÆ
->
hdr
.aSalt, (pWal->hdr.aSalt))

2539 && 
pS«pshŸ
->
mxFøme
>=
pInfo
->
nBackfûlAâem±ed


2541 
	`as£π
–
pWÆ
->
ªadLock
>0 );

2542 
	`mem˝y
(&
pWÆ
->
hdr
, 
pS«pshŸ
, (
WÆIndexHdr
));

2543 *
pCh™ged
 = 
bCh™ged
;

2545 
rc
 = 
SQLITE_BUSY_SNAPSHOT
;

2549 
	`wÆU∆ockSh¨ed
(
pWÆ
, 
WAL_CKPT_LOCK
);

2553 if–
rc
!=
SQLITE_OK
 ){

2554 
	`sqlôe3WÆEndRódTønß˘i⁄
(
pWÆ
);

2559  
rc
;

2560 
	}
}

2566 
	$sqlôe3WÆEndRódTønß˘i⁄
(
WÆ
 *
pWÆ
){

2567 
	`sqlôe3WÆEndWrôeTønß˘i⁄
(
pWÆ
);

2568 if–
pWÆ
->
ªadLock
>=0 ){

2569 
	`wÆU∆ockSh¨ed
(
pWÆ
, 
	`WAL_READ_LOCK
’WÆ->
ªadLock
));

2570 
pWÆ
->
ªadLock
 = -1;

2572 
	}
}

2582 
	$sqlôe3WÆFödFøme
(

2583 
WÆ
 *
pWÆ
,

2584 
Pgno
 
pgno
,

2585 
u32
 *
piRód


2587 
u32
 
iRód
 = 0;

2588 
u32
 
iLa°
 = 
pWÆ
->
hdr
.
mxFøme
;

2589 
iHash
;

2590 
iMöHash
;

2593 
	`as£π
–
pWÆ
->
ªadLock
>=0 ||ÖWÆ->
lockEº‹
 );

2601 if–
iLa°
==0 || 
pWÆ
->
ªadLock
==0 ){

2602 *
piRód
 = 0;

2603  
SQLITE_OK
;

2631 
iMöHash
 = 
	`wÆFømePage
(
pWÆ
->
möFøme
);

2632 
iHash
=
	`wÆFømePage
(
iLa°
); iHash>=
iMöHash
 && 
iRód
==0; iHash--){

2633 vﬁ©ûê
ht_¶Ÿ
 *
aHash
;

2634 vﬁ©ûê
u32
 *
aPgno
;

2635 
u32
 
iZîo
;

2636 
iKey
;

2637 
nCﬁlide
;

2638 
rc
;

2640 
rc
 = 
	`wÆHashGë
(
pWÆ
, 
iHash
, &
aHash
, &
aPgno
, &
iZîo
);

2641 if–
rc
!=
SQLITE_OK
 ){

2642  
rc
;

2644 
nCﬁlide
 = 
HASHTABLE_NSLOT
;

2645 
iKey
=
	`wÆHash
(
pgno
); 
aHash
[iKey]; iKey=
	`wÆNextHash
(iKey)){

2646 
u32
 
iFøme
 = 
aHash
[
iKey
] + 
iZîo
;

2647 if–
iFøme
<=
iLa°
 && iFøme>=
pWÆ
->
möFøme
 && 
aPgno
[
aHash
[
iKey
]]==
pgno
 ){

2648 
	`as£π
–
iFøme
>
iRód
 || 
CORRUPT_DB
 );

2649 
iRód
 = 
iFøme
;

2651 if–(
nCﬁlide
--)==0 ){

2652  
SQLITE_CORRUPT_BKPT
;

2657 #ifde‡
SQLITE_ENABLE_EXPENSIVE_ASSERT


2662 
u32
 
iRód2
 = 0;

2663 
u32
 
iTe°
;

2664 
	`as£π
–
pWÆ
->
möFøme
>0 );

2665 
iTe°
=
iLa°
; iTe°>=
pWÆ
->
möFøme
; iTest--){

2666 if–
	`wÆFømePgno
(
pWÆ
, 
iTe°
)==
pgno
 ){

2667 
iRód2
 = 
iTe°
;

2671 
	`as£π
–
iRód
==
iRód2
 );

2675 *
piRód
 = 
iRód
;

2676  
SQLITE_OK
;

2677 
	}
}

2684 
	$sqlôe3WÆRódFøme
(

2685 
WÆ
 *
pWÆ
,

2686 
u32
 
iRód
,

2687 
nOut
,

2688 
u8
 *
pOut


2690 
sz
;

2691 
i64
 
iOff£t
;

2692 
sz
 = 
pWÆ
->
hdr
.
szPage
;

2693 
sz
 = (sz&0xfe00) + ((sz&0x0001)<<16);

2694 
	`ã°ˇ£
–
sz
<=32768 );

2695 
	`ã°ˇ£
–
sz
>=65536 );

2696 
iOff£t
 = 
	`wÆFømeOff£t
(
iRód
, 
sz
Ë+ 
WAL_FRAME_HDRSIZE
;

2698  
	`sqlôe3OsRód
(
pWÆ
->
pWÆFd
, 
pOut
, (
nOut
>
sz
 ? sz :ÇOut), 
iOff£t
);

2699 
	}
}

2704 
Pgno
 
	$sqlôe3WÆDbsize
(
WÆ
 *
pWÆ
){

2705 if–
pWÆ
 && 
	`ALWAYS
’WÆ->
ªadLock
>=0) ){

2706  
pWÆ
->
hdr
.
nPage
;

2709 
	}
}

2725 
	$sqlôe3WÆBegöWrôeTønß˘i⁄
(
WÆ
 *
pWÆ
){

2726 
rc
;

2730 
	`as£π
–
pWÆ
->
ªadLock
>=0 );

2731 
	`as£π
–
pWÆ
->
wrôeLock
==0 &&ÖWÆ->
iReCksum
==0 );

2733 if–
pWÆ
->
ªadO∆y
 ){

2734  
SQLITE_READONLY
;

2740 
rc
 = 
	`wÆLockEx˛usive
(
pWÆ
, 
WAL_WRITE_LOCK
, 1);

2741 if–
rc
 ){

2742  
rc
;

2744 
pWÆ
->
wrôeLock
 = 1;

2750 if–
	`memcmp
(&
pWÆ
->
hdr
, (*)
	`wÆIndexHdr
’WÆ), (
WÆIndexHdr
))!=0 ){

2751 
	`wÆU∆ockEx˛usive
(
pWÆ
, 
WAL_WRITE_LOCK
, 1);

2752 
pWÆ
->
wrôeLock
 = 0;

2753 
rc
 = 
SQLITE_BUSY_SNAPSHOT
;

2756  
rc
;

2757 
	}
}

2763 
	$sqlôe3WÆEndWrôeTønß˘i⁄
(
WÆ
 *
pWÆ
){

2764 if–
pWÆ
->
wrôeLock
 ){

2765 
	`wÆU∆ockEx˛usive
(
pWÆ
, 
WAL_WRITE_LOCK
, 1);

2766 
pWÆ
->
wrôeLock
 = 0;

2767 
pWÆ
->
iReCksum
 = 0;

2768 
pWÆ
->
åunˇãOnCommô
 = 0;

2770  
SQLITE_OK
;

2771 
	}
}

2785 
	$sqlôe3WÆUndo
(
WÆ
 *
pWÆ
, (*
xUndo
)(*, 
Pgno
), *
pUndoCtx
){

2786 
rc
 = 
SQLITE_OK
;

2787 if–
	`ALWAYS
(
pWÆ
->
wrôeLock
) ){

2788 
Pgno
 
iMax
 = 
pWÆ
->
hdr
.
mxFøme
;

2789 
Pgno
 
iFøme
;

2794 
	`mem˝y
(&
pWÆ
->
hdr
, (*)
	`wÆIndexHdr
’WÆ), (
WÆIndexHdr
));

2796 
iFøme
=
pWÆ
->
hdr
.
mxFøme
+1;

2797 
	`ALWAYS
(
rc
==
SQLITE_OK
Ë&& 
iFøme
<=
iMax
;

2798 
iFøme
++

2811 
	`as£π
–
	`wÆFømePgno
(
pWÆ
, 
iFøme
)!=1 );

2812 
rc
 = 
	`xUndo
(
pUndoCtx
, 
	`wÆFømePgno
(
pWÆ
, 
iFøme
));

2814 if–
iMax
!=
pWÆ
->
hdr
.
mxFøme
 ) 
	`wÆCÀ™upHash
(pWal);

2816  
rc
;

2817 
	}
}

2825 
	$sqlôe3WÆSavïoöt
(
WÆ
 *
pWÆ
, 
u32
 *
aWÆD©a
){

2826 
	`as£π
–
pWÆ
->
wrôeLock
 );

2827 
aWÆD©a
[0] = 
pWÆ
->
hdr
.
mxFøme
;

2828 
aWÆD©a
[1] = 
pWÆ
->
hdr
.
aFømeCksum
[0];

2829 
aWÆD©a
[2] = 
pWÆ
->
hdr
.
aFømeCksum
[1];

2830 
aWÆD©a
[3] = 
pWÆ
->
nCk±
;

2831 
	}
}

2839 
	$sqlôe3WÆSavïoötUndo
(
WÆ
 *
pWÆ
, 
u32
 *
aWÆD©a
){

2840 
rc
 = 
SQLITE_OK
;

2842 
	`as£π
–
pWÆ
->
wrôeLock
 );

2843 
	`as£π
–
aWÆD©a
[3]!=
pWÆ
->
nCk±
 ||áWÆD©a[0]<ıWÆ->
hdr
.
mxFøme
 );

2845 if–
aWÆD©a
[3]!=
pWÆ
->
nCk±
 ){

2850 
aWÆD©a
[0] = 0;

2851 
aWÆD©a
[3] = 
pWÆ
->
nCk±
;

2854 if–
aWÆD©a
[0]<
pWÆ
->
hdr
.
mxFøme
 ){

2855 
pWÆ
->
hdr
.
mxFøme
 = 
aWÆD©a
[0];

2856 
pWÆ
->
hdr
.
aFømeCksum
[0] = 
aWÆD©a
[1];

2857 
pWÆ
->
hdr
.
aFømeCksum
[1] = 
aWÆD©a
[2];

2858 
	`wÆCÀ™upHash
(
pWÆ
);

2861  
rc
;

2862 
	}
}

2876 
	$wÆRe°¨tLog
(
WÆ
 *
pWÆ
){

2877 
rc
 = 
SQLITE_OK
;

2878 
˙t
;

2880 if–
pWÆ
->
ªadLock
==0 ){

2881 vﬁ©ûê
WÆCk±Info
 *
pInfo
 = 
	`wÆCk±Info
(
pWÆ
);

2882 
	`as£π
–
pInfo
->
nBackfûl
==
pWÆ
->
hdr
.
mxFøme
 );

2883 if–
pInfo
->
nBackfûl
>0 ){

2884 
u32
 
ß…1
;

2885 
	`sqlôe3_øndom√ss
(4, &
ß…1
);

2886 
rc
 = 
	`wÆLockEx˛usive
(
pWÆ
, 
	`WAL_READ_LOCK
(1), 
WAL_NREADER
-1);

2887 if–
rc
==
SQLITE_OK
 ){

2897 
	`wÆRe°¨tHdr
(
pWÆ
, 
ß…1
);

2898 
	`wÆU∆ockEx˛usive
(
pWÆ
, 
	`WAL_READ_LOCK
(1), 
WAL_NREADER
-1);

2899 }if–
rc
!=
SQLITE_BUSY
 ){

2900  
rc
;

2903 
	`wÆU∆ockSh¨ed
(
pWÆ
, 
	`WAL_READ_LOCK
(0));

2904 
pWÆ
->
ªadLock
 = -1;

2905 
˙t
 = 0;

2907 
nŸU£d
;

2908 
rc
 = 
	`wÆTryBegöRód
(
pWÆ
, &
nŸU£d
, 1, ++
˙t
);

2909 } 
rc
==
WAL_RETRY
 );

2910 
	`as£π
–(
rc
&0xff)!=
SQLITE_BUSY
 );

2911 
	`ã°ˇ£
–(
rc
&0xff)==
SQLITE_IOERR
 );

2912 
	`ã°ˇ£
–
rc
==
SQLITE_PROTOCOL
 );

2913 
	`ã°ˇ£
–
rc
==
SQLITE_OK
 );

2915  
rc
;

2916 
	}
}

2923 
	sWÆWrôî
 {

2924 
WÆ
 *
	mpWÆ
;

2925 
sqlôe3_fûe
 *
	mpFd
;

2926 
sqlôe3_öt64
 
	miSyncPoöt
;

2927 
	msyncFœgs
;

2928 
	mszPage
;

2929 } 
	tWÆWrôî
;

2939 
	$wÆWrôeToLog
(

2940 
WÆWrôî
 *
p
,

2941 *
pC⁄ã¡
,

2942 
iAmt
,

2943 
sqlôe3_öt64
 
iOff£t


2945 
rc
;

2946 if–
iOff£t
<
p
->
iSyncPoöt
 && iOff£t+
iAmt
>=p->iSyncPoint ){

2947 
iFú°Amt
 = ()(
p
->
iSyncPoöt
 - 
iOff£t
);

2948 
rc
 = 
	`sqlôe3OsWrôe
(
p
->
pFd
, 
pC⁄ã¡
, 
iFú°Amt
, 
iOff£t
);

2949 if–
rc
 ) Ñc;

2950 
iOff£t
 +
iFú°Amt
;

2951 
iAmt
 -
iFú°Amt
;

2952 
pC⁄ã¡
 = (*)(
iFú°Amt
 + (*)pContent);

2953 
	`as£π
–
p
->
syncFœgs
 & (
SQLITE_SYNC_NORMAL
|
SQLITE_SYNC_FULL
) );

2954 
rc
 = 
	`sqlôe3OsSync
(
p
->
pFd
,Ö->
syncFœgs
 & 
SQLITE_SYNC_MASK
);

2955 if–
iAmt
==0 || 
rc
 ) Ñc;

2957 
rc
 = 
	`sqlôe3OsWrôe
(
p
->
pFd
, 
pC⁄ã¡
, 
iAmt
, 
iOff£t
);

2958  
rc
;

2959 
	}
}

2964 
	$wÆWrôeO√Føme
(

2965 
WÆWrôî
 *
p
,

2966 
PgHdr
 *
pPage
,

2967 
nTrunˇã
,

2968 
sqlôe3_öt64
 
iOff£t


2970 
rc
;

2971 *
pD©a
;

2972 
u8
 
aFøme
[
WAL_FRAME_HDRSIZE
];

2973 #i‡
	`deföed
(
SQLITE_HAS_CODEC
)

2974 if–(
pD©a
 = 
	`sqlôe3PagîCodec
(
pPage
))==0 )  
SQLITE_NOMEM_BKPT
;

2976 
pD©a
 = 
pPage
->pData;

2978 
	`wÆEncodeFøme
(
p
->
pWÆ
, 
pPage
->
pgno
, 
nTrunˇã
, 
pD©a
, 
aFøme
);

2979 
rc
 = 
	`wÆWrôeToLog
(
p
, 
aFøme
, ◊Føme), 
iOff£t
);

2980 if–
rc
 ) Ñc;

2982 
rc
 = 
	`wÆWrôeToLog
(
p
, 
pD©a
,Ö->
szPage
, 
iOff£t
+(
aFøme
));

2983  
rc
;

2984 
	}
}

2994 
	$wÆRewrôeChecksums
(
WÆ
 *
pWÆ
, 
u32
 
iLa°
){

2995 c⁄° 
szPage
 = 
pWÆ
->szPage;

2996 
rc
 = 
SQLITE_OK
;

2997 
u8
 *
aBuf
;

2998 
u8
 
aFøme
[
WAL_FRAME_HDRSIZE
];

2999 
u32
 
iRód
;

3000 
i64
 
iCksumOff
;

3002 
aBuf
 = 
	`sqlôe3_mÆloc
(
szPage
 + 
WAL_FRAME_HDRSIZE
);

3003 if–
aBuf
==0 )  
SQLITE_NOMEM_BKPT
;

3010 
	`as£π
–
pWÆ
->
iReCksum
>0 );

3011 if–
pWÆ
->
iReCksum
==1 ){

3012 
iCksumOff
 = 24;

3014 
iCksumOff
 = 
	`wÆFømeOff£t
(
pWÆ
->
iReCksum
-1, 
szPage
) + 16;

3016 
rc
 = 
	`sqlôe3OsRód
(
pWÆ
->
pWÆFd
, 
aBuf
, (
u32
)*2, 
iCksumOff
);

3017 
pWÆ
->
hdr
.
aFømeCksum
[0] = 
	`sqlôe3Gë4byã
(
aBuf
);

3018 
pWÆ
->
hdr
.
aFømeCksum
[1] = 
	`sqlôe3Gë4byã
(&
aBuf
[(
u32
)]);

3020 
iRód
 = 
pWÆ
->
iReCksum
;

3021 
pWÆ
->
iReCksum
 = 0;

3022 ; 
rc
==
SQLITE_OK
 && 
iRód
<=
iLa°
; iRead++){

3023 
i64
 
iOff
 = 
	`wÆFømeOff£t
(
iRód
, 
szPage
);

3024 
rc
 = 
	`sqlôe3OsRód
(
pWÆ
->
pWÆFd
, 
aBuf
, 
szPage
+
WAL_FRAME_HDRSIZE
, 
iOff
);

3025 if–
rc
==
SQLITE_OK
 ){

3026 
u32
 
iPgno
, 
nDbSize
;

3027 
iPgno
 = 
	`sqlôe3Gë4byã
(
aBuf
);

3028 
nDbSize
 = 
	`sqlôe3Gë4byã
(&
aBuf
[4]);

3030 
	`wÆEncodeFøme
(
pWÆ
, 
iPgno
, 
nDbSize
, &
aBuf
[
WAL_FRAME_HDRSIZE
], 
aFøme
);

3031 
rc
 = 
	`sqlôe3OsWrôe
(
pWÆ
->
pWÆFd
, 
aFøme
, ◊Føme), 
iOff
);

3035 
	`sqlôe3_‰ì
(
aBuf
);

3036  
rc
;

3037 
	}
}

3043 
	$sqlôe3WÆFømes
(

3044 
WÆ
 *
pWÆ
,

3045 
szPage
,

3046 
PgHdr
 *
pLi°
,

3047 
Pgno
 
nTrunˇã
,

3048 
isCommô
,

3049 
sync_Êags


3051 
rc
;

3052 
u32
 
iFøme
;

3053 
PgHdr
 *
p
;

3054 
PgHdr
 *
pLa°
 = 0;

3055 
nExåa
 = 0;

3056 
szFøme
;

3057 
i64
 
iOff£t
;

3058 
WÆWrôî
 
w
;

3059 
u32
 
iFú°
 = 0;

3060 
WÆIndexHdr
 *
pLive
;

3062 
	`as£π
–
pLi°
 );

3063 
	`as£π
–
pWÆ
->
wrôeLock
 );

3067 
	`as£π
–(
isCommô
!=0)==(
nTrunˇã
!=0) );

3069 #i‡
	`deföed
(
SQLITE_TEST
Ë&& deföed(
SQLITE_DEBUG
)

3070 { 
˙t
; ˙t=0, 
p
=
pLi°
;Ö;Öı->
pDúty
, cnt++){}

3071 
	`WALTRACE
(("WAL%p: frame write begin. %d frames. mxFrame=%d. %s\n",

3072 
pWÆ
, 
˙t
,ÖWÆ->
hdr
.
mxFøme
, 
isCommô
 ? "Commit" : "Spill"));

3076 
pLive
 = (
WÆIndexHdr
*)
	`wÆIndexHdr
(
pWÆ
);

3077 if–
	`memcmp
(&
pWÆ
->
hdr
, (*)
pLive
, (
WÆIndexHdr
))!=0 ){

3078 
iFú°
 = 
pLive
->
mxFøme
+1;

3084 if–
SQLITE_OK
!=(
rc
 = 
	`wÆRe°¨tLog
(
pWÆ
)) ){

3085  
rc
;

3092 
iFøme
 = 
pWÆ
->
hdr
.
mxFøme
;

3093 if–
iFøme
==0 ){

3094 
u8
 
aWÆHdr
[
WAL_HDRSIZE
];

3095 
u32
 
aCksum
[2];

3097 
	`sqlôe3Put4byã
(&
aWÆHdr
[0], (
WAL_MAGIC
 | 
SQLITE_BIGENDIAN
));

3098 
	`sqlôe3Put4byã
(&
aWÆHdr
[4], 
WAL_MAX_VERSION
);

3099 
	`sqlôe3Put4byã
(&
aWÆHdr
[8], 
szPage
);

3100 
	`sqlôe3Put4byã
(&
aWÆHdr
[12], 
pWÆ
->
nCk±
);

3101 if–
pWÆ
->
nCk±
==0 ) 
	`sqlôe3_øndom√ss
(8,ÖWÆ->
hdr
.
aSÆt
);

3102 
	`mem˝y
(&
aWÆHdr
[16], 
pWÆ
->
hdr
.
aSÆt
, 8);

3103 
	`wÆChecksumByãs
(1, 
aWÆHdr
, 
WAL_HDRSIZE
-2*4, 0, 
aCksum
);

3104 
	`sqlôe3Put4byã
(&
aWÆHdr
[24], 
aCksum
[0]);

3105 
	`sqlôe3Put4byã
(&
aWÆHdr
[28], 
aCksum
[1]);

3107 
pWÆ
->
szPage
 = szPage;

3108 
pWÆ
->
hdr
.
bigEndCksum
 = 
SQLITE_BIGENDIAN
;

3109 
pWÆ
->
hdr
.
aFømeCksum
[0] = 
aCksum
[0];

3110 
pWÆ
->
hdr
.
aFømeCksum
[1] = 
aCksum
[1];

3111 
pWÆ
->
åunˇãOnCommô
 = 1;

3113 
rc
 = 
	`sqlôe3OsWrôe
(
pWÆ
->
pWÆFd
, 
aWÆHdr
, (aWalHdr), 0);

3114 
	`WALTRACE
(("WAL%p: wÆ-hódî wrôê%s\n", 
pWÆ
, 
rc
 ? "failed" : "ok"));

3115 if–
rc
!=
SQLITE_OK
 ){

3116  
rc
;

3126 if–
pWÆ
->
syncHódî
 && 
sync_Êags
 ){

3127 
rc
 = 
	`sqlôe3OsSync
(
pWÆ
->
pWÆFd
, 
sync_Êags
 & 
SQLITE_SYNC_MASK
);

3128 if–
rc
 ) Ñc;

3131 
	`as£π
–()
pWÆ
->
szPage
==szPage );

3134 
w
.
pWÆ
 =ÖWal;

3135 
w
.
pFd
 = 
pWÆ
->
pWÆFd
;

3136 
w
.
iSyncPoöt
 = 0;

3137 
w
.
syncFœgs
 = 
sync_Êags
;

3138 
w
.
szPage
 = szPage;

3139 
iOff£t
 = 
	`wÆFømeOff£t
(
iFøme
+1, 
szPage
);

3140 
szFøme
 = 
szPage
 + 
WAL_FRAME_HDRSIZE
;

3143 
p
=
pLi°
;Ö;Öı->
pDúty
){

3144 
nDbSize
;

3150 if–
iFú°
 && (
p
->
pDúty
 || 
isCommô
==0) ){

3151 
u32
 
iWrôe
 = 0;

3152 
	`VVA_ONLY
(
rc
 =Ë
	`sqlôe3WÆFödFøme
(
pWÆ
, 
p
->
pgno
, &
iWrôe
);

3153 
	`as£π
–
rc
==
SQLITE_OK
 || 
iWrôe
==0 );

3154 if–
iWrôe
>=
iFú°
 ){

3155 
i64
 
iOff
 = 
	`wÆFømeOff£t
(
iWrôe
, 
szPage
Ë+ 
WAL_FRAME_HDRSIZE
;

3156 *
pD©a
;

3157 if–
pWÆ
->
iReCksum
==0 || 
iWrôe
<pWal->iReCksum ){

3158 
pWÆ
->
iReCksum
 = 
iWrôe
;

3160 #i‡
	`deföed
(
SQLITE_HAS_CODEC
)

3161 if–(
pD©a
 = 
	`sqlôe3PagîCodec
(
p
))==0 )  
SQLITE_NOMEM
;

3163 
pD©a
 = 
p
->pData;

3165 
rc
 = 
	`sqlôe3OsWrôe
(
pWÆ
->
pWÆFd
, 
pD©a
, 
szPage
, 
iOff
);

3166 if–
rc
 ) Ñc;

3167 
p
->
Êags
 &~
PGHDR_WAL_APPEND
;

3172 
iFøme
++;

3173 
	`as£π
–
iOff£t
==
	`wÆFømeOff£t
(
iFøme
, 
szPage
) );

3174 
nDbSize
 = (
isCommô
 && 
p
->
pDúty
==0Ë? 
nTrunˇã
 : 0;

3175 
rc
 = 
	`wÆWrôeO√Føme
(&
w
, 
p
, 
nDbSize
, 
iOff£t
);

3176 if–
rc
 ) Ñc;

3177 
pLa°
 = 
p
;

3178 
iOff£t
 +
szFøme
;

3179 
p
->
Êags
 |
PGHDR_WAL_APPEND
;

3183 if–
isCommô
 && 
pWÆ
->
iReCksum
 ){

3184 
rc
 = 
	`wÆRewrôeChecksums
(
pWÆ
, 
iFøme
);

3185 if–
rc
 ) Ñc;

3202 if–
isCommô
 && (
sync_Êags
 & 
WAL_SYNC_TRANSACTIONS
)!=0 ){

3203 
bSync
 = 1;

3204 if–
pWÆ
->
∑dToSe˘‹Bound¨y
 ){

3205 
£˘‹Size
 = 
	`sqlôe3Se˘‹Size
(
pWÆ
->
pWÆFd
);

3206 
w
.
iSyncPoöt
 = ((
iOff£t
+
£˘‹Size
-1)/sectorSize)*sectorSize;

3207 
bSync
 = (
w
.
iSyncPoöt
==
iOff£t
);

3208 
	`ã°ˇ£
–
bSync
 );

3209  
iOff£t
<
w
.
iSyncPoöt
 ){

3210 
rc
 = 
	`wÆWrôeO√Føme
(&
w
, 
pLa°
, 
nTrunˇã
, 
iOff£t
);

3211 if–
rc
 ) Ñc;

3212 
iOff£t
 +
szFøme
;

3213 
nExåa
++;

3216 if–
bSync
 ){

3217 
	`as£π
–
rc
==
SQLITE_OK
 );

3218 
rc
 = 
	`sqlôe3OsSync
(
w
.
pFd
, 
sync_Êags
 & 
SQLITE_SYNC_MASK
);

3226 if–
isCommô
 && 
pWÆ
->
åunˇãOnCommô
 &&ÖWÆ->
mxWÆSize
>=0 ){

3227 
i64
 
sz
 = 
pWÆ
->
mxWÆSize
;

3228 if–
	`wÆFømeOff£t
(
iFøme
+
nExåa
+1, 
szPage
)>
pWÆ
->
mxWÆSize
 ){

3229 
sz
 = 
	`wÆFømeOff£t
(
iFøme
+
nExåa
+1, 
szPage
);

3231 
	`wÆLimôSize
(
pWÆ
, 
sz
);

3232 
pWÆ
->
åunˇãOnCommô
 = 0;

3240 
iFøme
 = 
pWÆ
->
hdr
.
mxFøme
;

3241 
p
=
pLi°
;Ö && 
rc
==
SQLITE_OK
;Öı->
pDúty
){

3242 if–(
p
->
Êags
 & 
PGHDR_WAL_APPEND
)==0 ) ;

3243 
iFøme
++;

3244 
rc
 = 
	`wÆIndexAµíd
(
pWÆ
, 
iFøme
, 
p
->
pgno
);

3246  
rc
==
SQLITE_OK
 && 
nExåa
>0 ){

3247 
iFøme
++;

3248 
nExåa
--;

3249 
rc
 = 
	`wÆIndexAµíd
(
pWÆ
, 
iFøme
, 
pLa°
->
pgno
);

3252 if–
rc
==
SQLITE_OK
 ){

3254 
pWÆ
->
hdr
.
szPage
 = (
u16
)((szPage&0xff00) | (szPage>>16));

3255 
	`ã°ˇ£
–
szPage
<=32768 );

3256 
	`ã°ˇ£
–
szPage
>=65536 );

3257 
pWÆ
->
hdr
.
mxFøme
 = 
iFøme
;

3258 if–
isCommô
 ){

3259 
pWÆ
->
hdr
.
iCh™ge
++;

3260 
pWÆ
->
hdr
.
nPage
 = 
nTrunˇã
;

3263 if–
isCommô
 ){

3264 
	`wÆIndexWrôeHdr
(
pWÆ
);

3265 
pWÆ
->
iCÆlback
 = 
iFøme
;

3269 
	`WALTRACE
(("WAL%p: fømêwrôê%s\n", 
pWÆ
, 
rc
 ? "failed" : "ok"));

3270  
rc
;

3271 
	}
}

3283 
	$sqlôe3WÆCheckpoöt
(

3284 
WÆ
 *
pWÆ
,

3285 
sqlôe3
 *
db
,

3286 
eMode
,

3287 (*
xBusy
)(*),

3288 *
pBusyArg
,

3289 
sync_Êags
,

3290 
nBuf
,

3291 
u8
 *
zBuf
,

3292 *
≤Log
,

3293 *
≤Ck±


3295 
rc
;

3296 
isCh™ged
 = 0;

3297 
eMode2
 = 
eMode
;

3298 (*
xBusy2
)(*Ë
xBusy
;

3300 
	`as£π
–
pWÆ
->
ck±Lock
==0 );

3301 
	`as£π
–
pWÆ
->
wrôeLock
==0 );

3305 
	`as£π
–
eMode
!=
SQLITE_CHECKPOINT_PASSIVE
 || 
xBusy
==0 );

3307 if–
pWÆ
->
ªadO∆y
 )  
SQLITE_READONLY
;

3308 
	`WALTRACE
(("WAL%p: checkpoöàbegös\n", 
pWÆ
));

3312 
rc
 = 
	`wÆLockEx˛usive
(
pWÆ
, 
WAL_CKPT_LOCK
, 1);

3313 if–
rc
 ){

3320 
	`ã°ˇ£
–
rc
==
SQLITE_BUSY
 );

3321 
	`ã°ˇ£
–
xBusy
!=0 );

3322  
rc
;

3324 
pWÆ
->
ck±Lock
 = 1;

3335 if–
eMode
!=
SQLITE_CHECKPOINT_PASSIVE
 ){

3336 
rc
 = 
	`wÆBusyLock
(
pWÆ
, 
xBusy
, 
pBusyArg
, 
WAL_WRITE_LOCK
, 1);

3337 if–
rc
==
SQLITE_OK
 ){

3338 
pWÆ
->
wrôeLock
 = 1;

3339 }if–
rc
==
SQLITE_BUSY
 ){

3340 
eMode2
 = 
SQLITE_CHECKPOINT_PASSIVE
;

3341 
xBusy2
 = 0;

3342 
rc
 = 
SQLITE_OK
;

3347 if–
rc
==
SQLITE_OK
 ){

3348 
rc
 = 
	`wÆIndexRódHdr
(
pWÆ
, &
isCh™ged
);

3349 if–
isCh™ged
 && 
pWÆ
->
pDbFd
->
pMëhods
->
iVîsi⁄
>=3 ){

3350 
	`sqlôe3OsUn„tch
(
pWÆ
->
pDbFd
, 0, 0);

3355 if–
rc
==
SQLITE_OK
 ){

3357 if–
pWÆ
->
hdr
.
mxFøme
 && 
	`wÆPagesize
’WÆ)!=
nBuf
 ){

3358 
rc
 = 
SQLITE_CORRUPT_BKPT
;

3360 
rc
 = 
	`wÆCheckpoöt
(
pWÆ
, 
db
, 
eMode2
, 
xBusy2
, 
pBusyArg
, 
sync_Êags
, 
zBuf
);

3364 if–
rc
==
SQLITE_OK
 ||Ñc==
SQLITE_BUSY
 ){

3365 if–
≤Log
 ) *≤Log = ()
pWÆ
->
hdr
.
mxFøme
;

3366 if–
≤Ck±
 ) *≤Ck± = ()(
	`wÆCk±Info
(
pWÆ
)->
nBackfûl
);

3370 if–
isCh™ged
 ){

3377 
	`mem£t
(&
pWÆ
->
hdr
, 0, (
WÆIndexHdr
));

3381 
	`sqlôe3WÆEndWrôeTønß˘i⁄
(
pWÆ
);

3382 
	`wÆU∆ockEx˛usive
(
pWÆ
, 
WAL_CKPT_LOCK
, 1);

3383 
pWÆ
->
ck±Lock
 = 0;

3384 
	`WALTRACE
(("WAL%p: checkpoöà%s\n", 
pWÆ
, 
rc
 ? "failed" : "ok"));

3385  (
rc
==
SQLITE_OK
 && 
eMode
!=
eMode2
 ? 
SQLITE_BUSY
 :Ñc);

3386 
	}
}

3393 
	$sqlôe3WÆCÆlback
(
WÆ
 *
pWÆ
){

3394 
u32
 
ªt
 = 0;

3395 if–
pWÆ
 ){

3396 
ªt
 = 
pWÆ
->
iCÆlback
;

3397 
pWÆ
->
iCÆlback
 = 0;

3399  ()
ªt
;

3400 
	}
}

3426 
	$sqlôe3WÆEx˛usiveMode
(
WÆ
 *
pWÆ
, 
›
){

3427 
rc
;

3428 
	`as£π
–
pWÆ
->
wrôeLock
==0 );

3429 
	`as£π
–
pWÆ
->
ex˛usiveMode
!=
WAL_HEAPMEMORY_MODE
 || 
›
==-1 );

3437 
	`as£π
–
pWÆ
->
ªadLock
>=0 ||ÖWÆ->
lockEº‹
 );

3438 
	`as£π
–
pWÆ
->
ªadLock
>=0 || (
›
<=0 &&ÖWÆ->
ex˛usiveMode
==0) );

3440 if–
›
==0 ){

3441 if–
pWÆ
->
ex˛usiveMode
 ){

3442 
pWÆ
->
ex˛usiveMode
 = 0;

3443 if–
	`wÆLockSh¨ed
(
pWÆ
, 
	`WAL_READ_LOCK
’WÆ->
ªadLock
))!=
SQLITE_OK
 ){

3444 
pWÆ
->
ex˛usiveMode
 = 1;

3446 
rc
 = 
pWÆ
->
ex˛usiveMode
==0;

3449 
rc
 = 0;

3451 }if–
›
>0 ){

3452 
	`as£π
–
pWÆ
->
ex˛usiveMode
==0 );

3453 
	`as£π
–
pWÆ
->
ªadLock
>=0 );

3454 
	`wÆU∆ockSh¨ed
(
pWÆ
, 
	`WAL_READ_LOCK
’WÆ->
ªadLock
));

3455 
pWÆ
->
ex˛usiveMode
 = 1;

3456 
rc
 = 1;

3458 
rc
 = 
pWÆ
->
ex˛usiveMode
==0;

3460  
rc
;

3461 
	}
}

3468 
	$sqlôe3WÆHópMem‹y
(
WÆ
 *
pWÆ
){

3469  (
pWÆ
 &&ÖWÆ->
ex˛usiveMode
==
WAL_HEAPMEMORY_MODE
 );

3470 
	}
}

3472 #ifde‡
SQLITE_ENABLE_SNAPSHOT


3477 
	$sqlôe3WÆS«pshŸGë
(
WÆ
 *
pWÆ
, 
sqlôe3_¢≠shŸ
 **
µS«pshŸ
){

3478 
rc
 = 
SQLITE_OK
;

3479 
WÆIndexHdr
 *
pRë
;

3480 c⁄° 
u32
 
aZîo
[4] = { 0, 0, 0, 0 };

3482 
	`as£π
–
pWÆ
->
ªadLock
>=0 &&ÖWÆ->
wrôeLock
==0 );

3484 if–
	`memcmp
(&
pWÆ
->
hdr
.
aFømeCksum
[0],
aZîo
,16)==0 ){

3485 *
µS«pshŸ
 = 0;

3486  
SQLITE_ERROR
;

3488 
pRë
 = (
WÆIndexHdr
*)
	`sqlôe3_mÆloc
((WalIndexHdr));

3489 if–
pRë
==0 ){

3490 
rc
 = 
SQLITE_NOMEM_BKPT
;

3492 
	`mem˝y
(
pRë
, &
pWÆ
->
hdr
, (
WÆIndexHdr
));

3493 *
µS«pshŸ
 = (
sqlôe3_¢≠shŸ
*)
pRë
;

3496  
rc
;

3497 
	}
}

3501 
	$sqlôe3WÆS«pshŸO≥n
(
WÆ
 *
pWÆ
, 
sqlôe3_¢≠shŸ
 *
pS«pshŸ
){

3502 
pWÆ
->
pS«pshŸ
 = (
WÆIndexHdr
*)pSnapshot;

3503 
	}
}

3509 
	$sqlôe3_¢≠shŸ_cmp
(
sqlôe3_¢≠shŸ
 *
p1
, sqlôe3_¢≠shŸ *
p2
){

3510 
WÆIndexHdr
 *
pHdr1
 = (WÆIndexHdr*)
p1
;

3511 
WÆIndexHdr
 *
pHdr2
 = (WÆIndexHdr*)
p2
;

3515 if–
pHdr1
->
aSÆt
[0]<
pHdr2
->aSalt[0] )  -1;

3516 if–
pHdr1
->
aSÆt
[0]>
pHdr2
->aSalt[0] )  +1;

3517 if–
pHdr1
->
mxFøme
<
pHdr2
->mxFrame )  -1;

3518 if–
pHdr1
->
mxFøme
>
pHdr2
->mxFrame )  +1;

3520 
	}
}

3523 #ifde‡
SQLITE_ENABLE_ZIPVFS


3529 
	$sqlôe3WÆFømesize
(
WÆ
 *
pWÆ
){

3530 
	`as£π
–
pWÆ
==0 ||ÖWÆ->
ªadLock
>=0 );

3531  (
pWÆ
 ?ÖWÆ->
szPage
 : 0);

3532 
	}
}

3537 
sqlôe3_fûe
 *
	$sqlôe3WÆFûe
(
WÆ
 *
pWÆ
){

3538  
pWÆ
->
pWÆFd
;

3539 
	}
}

	@wal.h

17 #i‚de‡
SQLITE_WAL_H


18 
	#SQLITE_WAL_H


	)

20 
	~"sqlôeI¡.h
"

25 
	#WAL_SYNC_TRANSACTIONS
 0x20

	)

26 
	#SQLITE_SYNC_MASK
 0x13

	)

28 #ifde‡
SQLITE_OMIT_WAL


29 
	#sqlôe3WÆO≥n
(
x
,
y
,
z
Ë0

	)

30 
	#sqlôe3WÆLimô
(
x
,
y
)

	)

31 
	#sqlôe3WÆClo£
(
v
,
w
,
x
,
y
,
z
Ë0

	)

32 
	#sqlôe3WÆBegöRódTønß˘i⁄
(
y
,
z
Ë0

	)

33 
	#sqlôe3WÆEndRódTønß˘i⁄
(
z
)

	)

34 
	#sqlôe3WÆDbsize
(
y
Ë0

	)

35 
	#sqlôe3WÆBegöWrôeTønß˘i⁄
(
y
Ë0

	)

36 
	#sqlôe3WÆEndWrôeTønß˘i⁄
(
x
Ë0

	)

37 
	#sqlôe3WÆUndo
(
x
,
y
,
z
Ë0

	)

38 
	#sqlôe3WÆSavïoöt
(
y
,
z
)

	)

39 
	#sqlôe3WÆSavïoötUndo
(
y
,
z
Ë0

	)

40 
	#sqlôe3WÆFømes
(
u
,
v
,
w
,
x
,
y
,
z
Ë0

	)

41 
	#sqlôe3WÆCheckpoöt
(
q
,
r
,
s
,
t
,
u
,
v
,
w
,
x
,
y
,
z
Ë0

	)

42 
	#sqlôe3WÆCÆlback
(
z
Ë0

	)

43 
	#sqlôe3WÆEx˛usiveMode
(
y
,
z
Ë0

	)

44 
	#sqlôe3WÆHópMem‹y
(
z
Ë0

	)

45 
	#sqlôe3WÆFømesize
(
z
Ë0

	)

46 
	#sqlôe3WÆFödFøme
(
x
,
y
,
z
Ë0

	)

47 
	#sqlôe3WÆFûe
(
x
Ë0

	)

50 
	#WAL_SAVEPOINT_NDATA
 4

	)

55 
WÆ
 
	tWÆ
;

58 
sqlôe3WÆO≥n
(
sqlôe3_vfs
*, 
sqlôe3_fûe
*, c⁄° *, , 
i64
, 
WÆ
**);

59 
sqlôe3WÆClo£
(
WÆ
 *
pWÆ
, 
sqlôe3
*, 
sync_Êags
, , 
u8
 *);

62 
sqlôe3WÆLimô
(
WÆ
*, 
i64
);

71 
sqlôe3WÆBegöRódTønß˘i⁄
(
WÆ
 *
pWÆ
, *);

72 
sqlôe3WÆEndRódTønß˘i⁄
(
WÆ
 *
pWÆ
);

75 
sqlôe3WÆFödFøme
(
WÆ
 *, 
Pgno
, 
u32
 *);

76 
sqlôe3WÆRódFøme
(
WÆ
 *, 
u32
, , 
u8
 *);

79 
Pgno
 
sqlôe3WÆDbsize
(
WÆ
 *
pWÆ
);

82 
sqlôe3WÆBegöWrôeTønß˘i⁄
(
WÆ
 *
pWÆ
);

83 
sqlôe3WÆEndWrôeTønß˘i⁄
(
WÆ
 *
pWÆ
);

86 
sqlôe3WÆUndo
(
WÆ
 *
pWÆ
, (*
xUndo
)(*, 
Pgno
), *
pUndoCtx
);

90 
	`sqlôe3WÆSavïoöt
(
WÆ
 *
pWÆ
, 
u32
 *
aWÆD©a
);

94 
	`sqlôe3WÆSavïoötUndo
(
WÆ
 *
pWÆ
, 
u32
 *
aWÆD©a
);

97 
	`sqlôe3WÆFømes
(
WÆ
 *
pWÆ
, , 
PgHdr
 *, 
Pgno
, , );

100 
	`sqlôe3WÆCheckpoöt
(

101 
WÆ
 *
pWÆ
,

102 
sqlôe3
 *
db
,

103 
eMode
,

104 (*
xBusy
)(*),

105 *
pBusyArg
,

106 
sync_Êags
,

107 
nBuf
,

108 
u8
 *
zBuf
,

109 *
≤Log
,

110 *
≤Ck±


118 
	`sqlôe3WÆCÆlback
(
WÆ
 *
pWÆ
);

123 
	`sqlôe3WÆEx˛usiveMode
(
WÆ
 *
pWÆ
, 
›
);

129 
	`sqlôe3WÆHópMem‹y
(
WÆ
 *
pWÆ
);

131 #ifde‡
SQLITE_ENABLE_SNAPSHOT


132 
	`sqlôe3WÆS«pshŸGë
(
WÆ
 *
pWÆ
, 
sqlôe3_¢≠shŸ
 **
µS«pshŸ
);

133 
	`sqlôe3WÆS«pshŸO≥n
(
WÆ
 *
pWÆ
, 
sqlôe3_¢≠shŸ
 *
pS«pshŸ
);

134 
	`sqlôe3WÆS«pshŸRecovî
(
WÆ
 *
pWÆ
);

137 #ifde‡
SQLITE_ENABLE_ZIPVFS


141 
	`sqlôe3WÆFømesize
(
WÆ
 *
pWÆ
);

145 
sqlôe3_fûe
 *
	`sqlôe3WÆFûe
(
WÆ
 *
pWÆ
);

	@walker.c

15 
	~"sqlôeI¡.h
"

16 
	~<°dlib.h
>

17 
	~<°rög.h
>

39 
SQLITE_NOINLINE
 
	$wÆkEx¥
(
WÆkî
 *
pWÆkî
, 
Ex¥
 *
pEx¥
){

40 
rc
;

41 
	`ã°ˇ£
–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_TokíO∆y
) );

42 
	`ã°ˇ£
–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_Redu˚d
) );

43 
rc
 = 
pWÆkî
->
	`xEx¥CÆlback
’WÆkî, 
pEx¥
);

44 if–
rc
 || 
	`Ex¥HasPr›îty
(
pEx¥
,(
EP_TokíO∆y
|
EP_Lóf
)) ){

45  
rc
 & 
WRC_Ab‹t
;

47 if–
pEx¥
->
pLe·
 && 
	`wÆkEx¥
(
pWÆkî
,ÖEx¥->pLe·ËË 
WRC_Ab‹t
;

48 if–
pEx¥
->
pRight
 && 
	`wÆkEx¥
(
pWÆkî
,ÖEx¥->pRightËË 
WRC_Ab‹t
;

49 if–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
) ){

50 if–
	`sqlôe3WÆkSñe˘
(
pWÆkî
, 
pEx¥
->
x
.
pSñe˘
ËË 
WRC_Ab‹t
;

51 }if–
pEx¥
->
x
.
pLi°
 ){

52 if–
	`sqlôe3WÆkEx¥Li°
(
pWÆkî
, 
pEx¥
->
x
.
pLi°
ËË 
WRC_Ab‹t
;

54  
WRC_C⁄töue
;

55 
	}
}

56 
	$sqlôe3WÆkEx¥
(
WÆkî
 *
pWÆkî
, 
Ex¥
 *
pEx¥
){

57  
pEx¥
 ? 
	`wÆkEx¥
(
pWÆkî
,pEx¥Ë: 
WRC_C⁄töue
;

58 
	}
}

64 
	$sqlôe3WÆkEx¥Li°
(
WÆkî
 *
pWÆkî
, 
Ex¥Li°
 *
p
){

65 
i
;

66 
Ex¥Li°_ôem
 *
pIãm
;

67 if–
p
 ){

68 
i
=
p
->
nEx¥
, 
pIãm
ı->
a
; i>0; i--,ÖItem++){

69 if–
	`sqlôe3WÆkEx¥
(
pWÆkî
, 
pIãm
->
pEx¥
ËË 
WRC_Ab‹t
;

72  
WRC_C⁄töue
;

73 
	}
}

81 
	$sqlôe3WÆkSñe˘Ex¥
(
WÆkî
 *
pWÆkî
, 
Sñe˘
 *
p
){

82 if–
	`sqlôe3WÆkEx¥Li°
(
pWÆkî
, 
p
->
pELi°
ËË 
WRC_Ab‹t
;

83 if–
	`sqlôe3WÆkEx¥
(
pWÆkî
, 
p
->
pWhîe
ËË 
WRC_Ab‹t
;

84 if–
	`sqlôe3WÆkEx¥Li°
(
pWÆkî
, 
p
->
pGroupBy
ËË 
WRC_Ab‹t
;

85 if–
	`sqlôe3WÆkEx¥
(
pWÆkî
, 
p
->
pHavög
ËË 
WRC_Ab‹t
;

86 if–
	`sqlôe3WÆkEx¥Li°
(
pWÆkî
, 
p
->
pOrdîBy
ËË 
WRC_Ab‹t
;

87 if–
	`sqlôe3WÆkEx¥
(
pWÆkî
, 
p
->
pLimô
ËË 
WRC_Ab‹t
;

88 if–
	`sqlôe3WÆkEx¥
(
pWÆkî
, 
p
->
pOff£t
ËË 
WRC_Ab‹t
;

89  
WRC_C⁄töue
;

90 
	}
}

99 
	$sqlôe3WÆkSñe˘From
(
WÆkî
 *
pWÆkî
, 
Sñe˘
 *
p
){

100 
SrcLi°
 *
pSrc
;

101 
i
;

102 
SrcLi°_ôem
 *
pIãm
;

104 
pSrc
 = 
p
->pSrc;

105 if–
	`ALWAYS
(
pSrc
) ){

106 
i
=
pSrc
->
nSrc
, 
pIãm
ıSrc->
a
; i>0; i--,ÖItem++){

107 if–
	`sqlôe3WÆkSñe˘
(
pWÆkî
, 
pIãm
->
pSñe˘
) ){

108  
WRC_Ab‹t
;

110 if–
pIãm
->
fg
.
isTabFunc


111 && 
	`sqlôe3WÆkEx¥Li°
(
pWÆkî
, 
pIãm
->
u1
.
pFuncArg
)

113  
WRC_Ab‹t
;

117  
WRC_C⁄töue
;

118 
	}
}

136 
	$sqlôe3WÆkSñe˘
(
WÆkî
 *
pWÆkî
, 
Sñe˘
 *
p
){

137 
rc
;

138 if–
p
==0 || (
pWÆkî
->
xSñe˘CÆlback
==0 &&ÖWÆkî->
xSñe˘CÆlback2
==0) ){

139  
WRC_C⁄töue
;

141 
rc
 = 
WRC_C⁄töue
;

142 
pWÆkî
->
wÆkîDïth
++;

143  
p
 ){

144 if–
pWÆkî
->
xSñe˘CÆlback
 ){

145 
rc
 = 
pWÆkî
->
	`xSñe˘CÆlback
’WÆkî, 
p
);

146 if–
rc
 ) ;

148 if–
	`sqlôe3WÆkSñe˘Ex¥
(
pWÆkî
, 
p
)

149 || 
	`sqlôe3WÆkSñe˘From
(
pWÆkî
, 
p
)

151 
pWÆkî
->
wÆkîDïth
--;

152  
WRC_Ab‹t
;

154 if–
pWÆkî
->
xSñe˘CÆlback2
 ){

155 
pWÆkî
->
	`xSñe˘CÆlback2
’WÆkî, 
p
);

157 
p
 =Ö->
pPri‹
;

159 
pWÆkî
->
wÆkîDïth
--;

160  
rc
 & 
WRC_Ab‹t
;

161 
	}
}

	@where.c

19 
	~"sqlôeI¡.h
"

20 
	~"whîeI¡.h
"

23 
whîeLo›Resize
(
sqlôe3
*, 
WhîeLo›
*, );

26 #i‡
deföed
(
SQLITE_TEST
Ë|| deföed(
SQLITE_DEBUG
)

27  
	gsqlôe3WhîeTø˚
 = 0;

34 
LogE°
 
	$sqlôe3WhîeOuçutRowCou¡
(
WhîeInfo
 *
pWInfo
){

35  
pWInfo
->
nRowOut
;

36 
	}
}

42 
	$sqlôe3WhîeIsDi°ö˘
(
WhîeInfo
 *
pWInfo
){

43  
pWInfo
->
eDi°ö˘
;

44 
	}
}

50 
	$sqlôe3WhîeIsOrdîed
(
WhîeInfo
 *
pWInfo
){

51  
pWInfo
->
nOBS©
;

52 
	}
}

62 
	$sqlôe3WhîeOrdîedI¬îLo›
(
WhîeInfo
 *
pWInfo
){

63  
pWInfo
->
bOrdîedI¬îLo›
;

64 
	}
}

70 
	$sqlôe3WhîeC⁄töueLabñ
(
WhîeInfo
 *
pWInfo
){

71 
	`as£π
–
pWInfo
->
iC⁄töue
!=0 );

72  
pWInfo
->
iC⁄töue
;

73 
	}
}

79 
	$sqlôe3WhîeBªakLabñ
(
WhîeInfo
 *
pWInfo
){

80  
pWInfo
->
iBªak
;

81 
	}
}

100 
	$sqlôe3WhîeOkO√Pass
(
WhîeInfo
 *
pWInfo
, *
aiCur
){

101 
	`mem˝y
(
aiCur
, 
pWInfo
->
aiCurO√Pass
, ()*2);

102 #ifde‡
WHERETRACE_ENABLED


103 if–
sqlôe3WhîeTø˚
 && 
pWInfo
->
eO√Pass
!=
ONEPASS_OFF
 ){

104 
	`sqlôe3DebugPrötf
("%s cursors: %d %d\n",

105 
pWInfo
->
eO√Pass
==
ONEPASS_SINGLE
 ? "ONEPASS_SINGLE" : "ONEPASS_MULTI",

106 
aiCur
[0],áiCur[1]);

109  
pWInfo
->
eO√Pass
;

110 
	}
}

115 
	$whîeOrMove
(
WhîeOrSë
 *
pDe°
, WhîeOrSë *
pSrc
){

116 
pDe°
->
n
 = 
pSrc
->n;

117 
	`mem˝y
(
pDe°
->
a
, 
pSrc
->a,ÖDe°->
n
*(pDest->a[0]));

118 
	}
}

127 
	$whîeOrIn£π
(

128 
WhîeOrSë
 *
pSë
,

129 
Bômask
 
¥îeq
,

130 
LogE°
 
rRun
,

131 
LogE°
 
nOut


133 
u16
 
i
;

134 
WhîeOrCo°
 *
p
;

135 
i
=
pSë
->
n
, 
p
ıSë->
a
; i>0; i--,Ö++){

136 if–
rRun
<=
p
->rRu¿&& (
¥îeq
 &Ö->prereq)==prereq ){

137 
whîeOrIn£π_d⁄e
;

139 if–
p
->
rRun
<ÙRu¿&& (p->
¥îeq
 &Örereq)==p->prereq ){

143 if–
pSë
->
n
<
N_OR_COST
 ){

144 
p
 = &
pSë
->
a
[pSë->
n
++];

145 
p
->
nOut
 =ÇOut;

147 
p
 = 
pSë
->
a
;

148 
i
=1; i<
pSë
->
n
; i++){

149 if–
p
->
rRun
>
pSë
->
a
[
i
].rRun )Ö =ÖSet->a + i;

151 if–
p
->
rRun
<=rRun )  0;

153 
whîeOrIn£π_d⁄e
:

154 
p
->
¥îeq
 =Örereq;

155 
p
->
rRun
 =ÑRun;

156 if–
p
->
nOut
>nOut )Ö->nOut =ÇOut;

158 
	}
}

164 
Bômask
 
	$sqlôe3WhîeGëMask
(
WhîeMaskSë
 *
pMaskSë
, 
iCurs‹
){

165 
i
;

166 
	`as£π
–
pMaskSë
->
n
<=()(
Bômask
)*8 );

167 
i
=0; i<
pMaskSë
->
n
; i++){

168 if–
pMaskSë
->
ix
[
i
]==
iCurs‹
 ){

169  
	`MASKBIT
(
i
);

173 
	}
}

183 
	$¸óãMask
(
WhîeMaskSë
 *
pMaskSë
, 
iCurs‹
){

184 
	`as£π
–
pMaskSë
->
n
 < 
	`AºaySize
’MaskSë->
ix
) );

185 
pMaskSë
->
ix
[pMaskSë->
n
++] = 
iCurs‹
;

186 
	}
}

193 
WhîeTîm
 *
	$whîeSˇnNext
(
WhîeSˇn
 *
pSˇn
){

194 
iCur
;

195 
i16
 
iCﬁumn
;

196 
Ex¥
 *
pX
;

197 
WhîeCœu£
 *
pWC
;

198 
WhîeTîm
 *
pTîm
;

199 
k
 = 
pSˇn
->k;

201 
	`as£π
–
pSˇn
->
iEquiv
<ıSˇn->
nEquiv
 );

202 
pWC
 = 
pSˇn
->pWC;

204 
iCﬁumn
 = 
pSˇn
->
aiCﬁumn
[pSˇn->
iEquiv
-1];

205 
iCur
 = 
pSˇn
->
aiCur
[pSˇn->
iEquiv
-1];

206 
	`as£π
–
pWC
!=0 );

208 
pTîm
=
pWC
->
a
+
k
; k<pWC->
nTîm
; k++,ÖTerm++){

209 if–
pTîm
->
À·Curs‹
==
iCur


210 && 
pTîm
->
u
.
À·Cﬁumn
==
iCﬁumn


211 && (
iCﬁumn
!=
XN_EXPR


212 || 
	`sqlôe3Ex¥Com∑ª
(
pTîm
->
pEx¥
->
pLe·
,
pSˇn
->
pIdxEx¥
,
iCur
)==0)

213 && (
pSˇn
->
iEquiv
<=1 || !
	`Ex¥HasPr›îty
(
pTîm
->
pEx¥
, 
EP_FromJoö
))

215 if–(
pTîm
->
eO≥øt‹
 & 
WO_EQUIV
)!=0

216 && 
pSˇn
->
nEquiv
<
	`AºaySize
’Sˇn->
aiCur
)

217 && (
pX
 = 
	`sqlôe3Ex¥SkùCﬁœã
(
pTîm
->
pEx¥
->
pRight
))->
›
==
TK_COLUMN


219 
j
;

220 
j
=0; j<
pSˇn
->
nEquiv
; j++){

221 if–
pSˇn
->
aiCur
[
j
]==
pX
->
iTabÀ


222 && 
pSˇn
->
aiCﬁumn
[
j
]==
pX
->
iCﬁumn
 ){

226 if–
j
==
pSˇn
->
nEquiv
 ){

227 
pSˇn
->
aiCur
[
j
] = 
pX
->
iTabÀ
;

228 
pSˇn
->
aiCﬁumn
[
j
] = 
pX
->
iCﬁumn
;

229 
pSˇn
->
nEquiv
++;

232 if–(
pTîm
->
eO≥øt‹
 & 
pSˇn
->
›Mask
)!=0 ){

234 if–
pSˇn
->
zCﬁlName
 && (
pTîm
->
eO≥øt‹
 & 
WO_ISNULL
)==0 ){

235 
CﬁlSeq
 *
pCﬁl
;

236 
P¨£
 *
pP¨£
 = 
pWC
->
pWInfo
->pParse;

237 
pX
 = 
pTîm
->
pEx¥
;

238 if–!
	`sqlôe3IndexAfföôyOk
(
pX
, 
pSˇn
->
idxaff
) ){

241 
	`as£π
(
pX
->
pLe·
);

242 
pCﬁl
 = 
	`sqlôe3Bö¨yCom∑ªCﬁlSeq
(
pP¨£
,

243 
pX
->
pLe·
,ÖX->
pRight
);

244 if–
pCﬁl
==0 )ÖCﬁ»
pP¨£
->
db
->
pDÊtCﬁl
;

245 if–
	`sqlôe3SåICmp
(
pCﬁl
->
zName
, 
pSˇn
->
zCﬁlName
) ){

249 if–(
pTîm
->
eO≥øt‹
 & (
WO_EQ
|
WO_IS
))!=0

250 && (
pX
 = 
pTîm
->
pEx¥
->
pRight
)->
›
==
TK_COLUMN


251 && 
pX
->
iTabÀ
==
pSˇn
->
aiCur
[0]

252 && 
pX
->
iCﬁumn
==
pSˇn
->
aiCﬁumn
[0]

254 
	`ã°ˇ£
–
pTîm
->
eO≥øt‹
 & 
WO_IS
 );

257 
pSˇn
->
pWC
 =ÖWC;

258 
pSˇn
->
k
 = k+1;

259  
pTîm
;

263 
pWC
 =ÖWC->
pOuãr
;

264 
k
 = 0;

265 } 
pWC
!=0 );

266 if–
pSˇn
->
iEquiv
>ıSˇn->
nEquiv
 ) ;

267 
pWC
 = 
pSˇn
->
pOrigWC
;

268 
k
 = 0;

269 
pSˇn
->
iEquiv
++;

272 
	}
}

293 
WhîeTîm
 *
	$whîeSˇnInô
(

294 
WhîeSˇn
 *
pSˇn
,

295 
WhîeCœu£
 *
pWC
,

296 
iCur
,

297 
iCﬁumn
,

298 
u32
 
›Mask
,

299 
Index
 *
pIdx


301 
pSˇn
->
pOrigWC
 = 
pWC
;

302 
pSˇn
->
pWC
 =ÖWC;

303 
pSˇn
->
pIdxEx¥
 = 0;

304 
pSˇn
->
idxaff
 = 0;

305 
pSˇn
->
zCﬁlName
 = 0;

306 if–
pIdx
 ){

307 
j
 = 
iCﬁumn
;

308 
iCﬁumn
 = 
pIdx
->
aiCﬁumn
[
j
];

309 if–
iCﬁumn
==
XN_EXPR
 ){

310 
pSˇn
->
pIdxEx¥
 = 
pIdx
->
aCﬁEx¥
->
a
[
j
].
pEx¥
;

311 }if–
iCﬁumn
==
pIdx
->
pTabÀ
->
iPKey
 ){

312 
iCﬁumn
 = 
XN_ROWID
;

313 }if–
iCﬁumn
>=0 ){

314 
pSˇn
->
idxaff
 = 
pIdx
->
pTabÀ
->
aCﬁ
[
iCﬁumn
].
afföôy
;

315 
pSˇn
->
zCﬁlName
 = 
pIdx
->
azCﬁl
[
j
];

317 }if–
iCﬁumn
==
XN_EXPR
 ){

320 
pSˇn
->
›Mask
 = opMask;

321 
pSˇn
->
k
 = 0;

322 
pSˇn
->
aiCur
[0] = 
iCur
;

323 
pSˇn
->
aiCﬁumn
[0] = 
iCﬁumn
;

324 
pSˇn
->
nEquiv
 = 1;

325 
pSˇn
->
iEquiv
 = 1;

326  
	`whîeSˇnNext
(
pSˇn
);

327 
	}
}

354 
WhîeTîm
 *
	$sqlôe3WhîeFödTîm
(

355 
WhîeCœu£
 *
pWC
,

356 
iCur
,

357 
iCﬁumn
,

358 
Bômask
 
nŸRódy
,

359 
u32
 
›
,

360 
Index
 *
pIdx


362 
WhîeTîm
 *
pResu…
 = 0;

363 
WhîeTîm
 *
p
;

364 
WhîeSˇn
 
sˇn
;

366 
p
 = 
	`whîeSˇnInô
(&
sˇn
, 
pWC
, 
iCur
, 
iCﬁumn
, 
›
, 
pIdx
);

367 
›
 &
WO_EQ
|
WO_IS
;

368  
p
 ){

369 if–(
p
->
¥îeqRight
 & 
nŸRódy
)==0 ){

370 if–
p
->
¥îeqRight
==0 && (p->
eO≥øt‹
&
›
)!=0 ){

371 
	`ã°ˇ£
–
p
->
eO≥øt‹
 & 
WO_IS
 );

372  
p
;

374 if–
pResu…
==0 )ÖResu… = 
p
;

376 
p
 = 
	`whîeSˇnNext
(&
sˇn
);

378  
pResu…
;

379 
	}
}

388 
	$födIndexCﬁ
(

389 
P¨£
 *
pP¨£
,

390 
Ex¥Li°
 *
pLi°
,

391 
iBa£
,

392 
Index
 *
pIdx
,

393 
iCﬁ


395 
i
;

396 c⁄° *
zCﬁl
 = 
pIdx
->
azCﬁl
[
iCﬁ
];

398 
i
=0; i<
pLi°
->
nEx¥
; i++){

399 
Ex¥
 *
p
 = 
	`sqlôe3Ex¥SkùCﬁœã
(
pLi°
->
a
[
i
].
pEx¥
);

400 if–
p
->
›
==
TK_COLUMN


401 && 
p
->
iCﬁumn
==
pIdx
->
aiCﬁumn
[
iCﬁ
]

402 && 
p
->
iTabÀ
==
iBa£


404 
CﬁlSeq
 *
pCﬁl
 = 
	`sqlôe3Ex¥CﬁlSeq
(
pP¨£
, 
pLi°
->
a
[
i
].
pEx¥
);

405 if–
pCﬁl
 && 0==
	`sqlôe3SåICmp
’Cﬁl->
zName
, 
zCﬁl
) ){

406  
i
;

412 
	}
}

417 
	$ödexCﬁumnNŸNuŒ
(
Index
 *
pIdx
, 
iCﬁ
){

418 
j
;

419 
	`as£π
–
pIdx
!=0 );

420 
	`as£π
–
iCﬁ
>=0 && iCﬁ<
pIdx
->
nCﬁumn
 );

421 
j
 = 
pIdx
->
aiCﬁumn
[
iCﬁ
];

422 if–
j
>=0 ){

423  
pIdx
->
pTabÀ
->
aCﬁ
[
j
].
nŸNuŒ
;

424 }if–
j
==(-1) ){

427 
	`as£π
–
j
==(-2) );

431 
	}
}

440 
	$isDi°ö˘Redund™t
(

441 
P¨£
 *
pP¨£
,

442 
SrcLi°
 *
pTabLi°
,

443 
WhîeCœu£
 *
pWC
,

444 
Ex¥Li°
 *
pDi°ö˘


446 
TabÀ
 *
pTab
;

447 
Index
 *
pIdx
;

448 
i
;

449 
iBa£
;

454 if–
pTabLi°
->
nSrc
!=1 )  0;

455 
iBa£
 = 
pTabLi°
->
a
[0].
iCurs‹
;

456 
pTab
 = 
pTabLi°
->
a
[0].pTab;

462 
i
=0; i<
pDi°ö˘
->
nEx¥
; i++){

463 
Ex¥
 *
p
 = 
	`sqlôe3Ex¥SkùCﬁœã
(
pDi°ö˘
->
a
[
i
].
pEx¥
);

464 if–
p
->
›
==
TK_COLUMN
 &&Ö->
iTabÀ
==
iBa£
 &&Ö->
iCﬁumn
<0 )  1;

480 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
){

481 if–!
	`IsUniqueIndex
(
pIdx
) ) ;

482 
i
=0; i<
pIdx
->
nKeyCﬁ
; i++){

483 if–0==
	`sqlôe3WhîeFödTîm
(
pWC
, 
iBa£
, 
i
, ~(
Bômask
)0, 
WO_EQ
, 
pIdx
) ){

484 if–
	`födIndexCﬁ
(
pP¨£
, 
pDi°ö˘
, 
iBa£
, 
pIdx
, 
i
)<0 ) ;

485 if–
	`ödexCﬁumnNŸNuŒ
(
pIdx
, 
i
)==0 ) ;

488 if–
i
==
pIdx
->
nKeyCﬁ
 ){

495 
	}
}

501 
LogE°
 
	$e°Log
(
LogE°
 
N
){

502  
N
<=10 ? 0 : 
	`sqlôe3LogE°
(N) - 33;

503 
	}
}

517 
	$å™¶©eCﬁumnToC›y
(

518 
Vdbe
 *
v
,

519 
iSèπ
,

520 
iTabCur
,

521 
iRegi°î
,

522 
bIn¸Rowid


524 
VdbeOp
 *
pOp
 = 
	`sqlôe3VdbeGëOp
(
v
, 
iSèπ
);

525 
iEnd
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

526 ; 
iSèπ
<
iEnd
; iSèπ++, 
pOp
++){

527 if–
pOp
->
p1
!=
iTabCur
 ) ;

528 if–
pOp
->
›code
==
OP_Cﬁumn
 ){

529 
pOp
->
›code
 = 
OP_C›y
;

530 
pOp
->
p1
 =ÖOp->
p2
 + 
iRegi°î
;

531 
pOp
->
p2
 =ÖOp->
p3
;

532 
pOp
->
p3
 = 0;

533 }if–
pOp
->
›code
==
OP_Rowid
 ){

534 if–
bIn¸Rowid
 ){

536 
pOp
->
›code
 = 
OP_AddImm
;

537 
pOp
->
p1
 =ÖOp->
p2
;

538 
pOp
->
p2
 = 1;

540 
pOp
->
›code
 = 
OP_NuŒ
;

541 
pOp
->
p1
 = 0;

542 
pOp
->
p3
 = 0;

546 
	}
}

554 #i‡!
deföed
(
SQLITE_OMIT_VIRTUALTABLE
Ë&& deföed(
WHERETRACE_ENABLED
)

555 
	$TRACE_IDX_INPUTS
(
sqlôe3_ödex_öfo
 *
p
){

556 
i
;

557 if–!
sqlôe3WhîeTø˚
 ) ;

558 
i
=0; i<
p
->
nC⁄°øöt
; i++){

559 
	`sqlôe3DebugPrötf
(" constraint[%d]: col=%dÅermid=%d op=%d usabled=%d\n",

560 
i
,

561 
p
->
aC⁄°øöt
[
i
].
iCﬁumn
,

562 
p
->
aC⁄°øöt
[
i
].
iTîmOff£t
,

563 
p
->
aC⁄°øöt
[
i
].
›
,

564 
p
->
aC⁄°øöt
[
i
].
ußbÀ
);

566 
i
=0; i<
p
->
nOrdîBy
; i++){

567 
	`sqlôe3DebugPrötf
(" orderby[%d]: col=%d desc=%d\n",

568 
i
,

569 
p
->
aOrdîBy
[
i
].
iCﬁumn
,

570 
p
->
aOrdîBy
[
i
].
desc
);

572 
	}
}

573 
	$TRACE_IDX_OUTPUTS
(
sqlôe3_ödex_öfo
 *
p
){

574 
i
;

575 if–!
sqlôe3WhîeTø˚
 ) ;

576 
i
=0; i<
p
->
nC⁄°øöt
; i++){

577 
	`sqlôe3DebugPrötf
(" usage[%d]:árgvIdx=%d omit=%d\n",

578 
i
,

579 
p
->
aC⁄°øötUßge
[
i
].
¨gvIndex
,

580 
p
->
aC⁄°øötUßge
[
i
].
omô
);

582 
	`sqlôe3DebugPrötf
(" idxNum=%d\n", 
p
->
idxNum
);

583 
	`sqlôe3DebugPrötf
(" idxSå=%s\n", 
p
->
idxSå
);

584 
	`sqlôe3DebugPrötf
(" ordîByC⁄sumed=%d\n", 
p
->
‹dîByC⁄sumed
);

585 
	`sqlôe3DebugPrötf
("É°im©edCo°=%g\n", 
p
->
e°im©edCo°
);

586 
	`sqlôe3DebugPrötf
("É°im©edRows=%Œd\n", 
p
->
e°im©edRows
);

587 
	}
}

589 
	#TRACE_IDX_INPUTS
(
A
)

	)

590 
	#TRACE_IDX_OUTPUTS
(
A
)

	)

593 #i‚de‡
SQLITE_OMIT_AUTOMATIC_INDEX


599 
	$ãrmC™DriveIndex
(

600 
WhîeTîm
 *
pTîm
,

601 
SrcLi°_ôem
 *
pSrc
,

602 
Bômask
 
nŸRódy


604 
aff
;

605 if–
pTîm
->
À·Curs‹
!=
pSrc
->
iCurs‹
 )  0;

606 if–(
pTîm
->
eO≥øt‹
 & (
WO_EQ
|
WO_IS
))==0 )  0;

607 if–(
pTîm
->
¥îeqRight
 & 
nŸRódy
)!=0 )  0;

608 if–
pTîm
->
u
.
À·Cﬁumn
<0 )  0;

609 
aff
 = 
pSrc
->
pTab
->
aCﬁ
[
pTîm
->
u
.
À·Cﬁumn
].
afföôy
;

610 if–!
	`sqlôe3IndexAfföôyOk
(
pTîm
->
pEx¥
, 
aff
) )  0;

611 
	`ã°ˇ£
–
pTîm
->
pEx¥
->
›
==
TK_IS
 );

613 
	}
}

617 #i‚de‡
SQLITE_OMIT_AUTOMATIC_INDEX


623 
	$c⁄°ru˘Autom©icIndex
(

624 
P¨£
 *
pP¨£
,

625 
WhîeCœu£
 *
pWC
,

626 
SrcLi°_ôem
 *
pSrc
,

627 
Bômask
 
nŸRódy
,

628 
WhîeLevñ
 *
pLevñ


630 
nKeyCﬁ
;

631 
WhîeTîm
 *
pTîm
;

632 
WhîeTîm
 *
pWCEnd
;

633 
Index
 *
pIdx
;

634 
Vdbe
 *
v
;

635 
addrInô
;

636 
TabÀ
 *
pTabÀ
;

637 
addrT›
;

638 
ªgRec‹d
;

639 
n
;

640 
i
;

641 
mxBôCﬁ
;

642 
CﬁlSeq
 *
pCﬁl
;

643 
WhîeLo›
 *
pLo›
;

644 *
zNŸU£d
;

645 
Bômask
 
idxCﬁs
;

646 
Bômask
 
exåaCﬁs
;

647 
u8
 
£¡W¨nög
 = 0;

648 
Ex¥
 *
pP¨tül
 = 0;

649 
iC⁄töue
 = 0;

650 
SrcLi°_ôem
 *
pTabIãm
;

651 
addrCou¡î
 = 0;

652 
ªgBa£
;

656 
v
 = 
pP¨£
->
pVdbe
;

657 
	`as£π
–
v
!=0 );

658 
addrInô
 = 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_On˚
); 
	`VdbeCovîage
(v);

662 
nKeyCﬁ
 = 0;

663 
pTabÀ
 = 
pSrc
->
pTab
;

664 
pWCEnd
 = &
pWC
->
a
[pWC->
nTîm
];

665 
pLo›
 = 
pLevñ
->
pWLo›
;

666 
idxCﬁs
 = 0;

667 
pTîm
=
pWC
->
a
;ÖTîm<
pWCEnd
;ÖTerm++){

668 
Ex¥
 *
pEx¥
 = 
pTîm
->pExpr;

669 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_FromJoö
)

670 || 
pEx¥
->
iRightJoöTabÀ
!=
pSrc
->
iCurs‹


671 || 
pLo›
->
¥îeq
!=0 );

672 if–
pLo›
->
¥îeq
==0

673 && (
pTîm
->
wtFœgs
 & 
TERM_VIRTUAL
)==0

674 && !
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_FromJoö
)

675 && 
	`sqlôe3Ex¥IsTabÀC⁄°™t
(
pEx¥
, 
pSrc
->
iCurs‹
) ){

676 
pP¨tül
 = 
	`sqlôe3Ex¥And
(
pP¨£
->
db
,ÖPartial,

677 
	`sqlôe3Ex¥Dup
(
pP¨£
->
db
, 
pEx¥
, 0));

679 if–
	`ãrmC™DriveIndex
(
pTîm
, 
pSrc
, 
nŸRódy
) ){

680 
iCﬁ
 = 
pTîm
->
u
.
À·Cﬁumn
;

681 
Bômask
 
cMask
 = 
iCﬁ
>=
BMS
 ? 
	`MASKBIT
(BMS-1) : MASKBIT(iCol);

682 
	`ã°ˇ£
–
iCﬁ
==
BMS
 );

683 
	`ã°ˇ£
–
iCﬁ
==
BMS
-1 );

684 if–!
£¡W¨nög
 ){

685 
	`sqlôe3_log
(
SQLITE_WARNING_AUTOINDEX
,

686 "autom©i¯ödex o¿%s(%s)", 
pTabÀ
->
zName
,

687 
pTabÀ
->
aCﬁ
[
iCﬁ
].
zName
);

688 
£¡W¨nög
 = 1;

690 if–(
idxCﬁs
 & 
cMask
)==0 ){

691 if–
	`whîeLo›Resize
(
pP¨£
->
db
, 
pLo›
, 
nKeyCﬁ
+1) ){

692 
íd_auto_ödex_¸óã
;

694 
pLo›
->
aLTîm
[
nKeyCﬁ
++] = 
pTîm
;

695 
idxCﬁs
 |
cMask
;

699 
	`as£π
–
nKeyCﬁ
>0 );

700 
pLo›
->
u
.
båì
.
nEq
 =ÖLo›->
nLTîm
 = 
nKeyCﬁ
;

701 
pLo›
->
wsFœgs
 = 
WHERE_COLUMN_EQ
 | 
WHERE_IDX_ONLY
 | 
WHERE_INDEXED


702 | 
WHERE_AUTO_INDEX
;

712 
exåaCﬁs
 = 
pSrc
->
cﬁU£d
 & (~
idxCﬁs
 | 
	`MASKBIT
(
BMS
-1));

713 
mxBôCﬁ
 = 
	`MIN
(
BMS
-1,
pTabÀ
->
nCﬁ
);

714 
	`ã°ˇ£
–
pTabÀ
->
nCﬁ
==
BMS
-1 );

715 
	`ã°ˇ£
–
pTabÀ
->
nCﬁ
==
BMS
-2 );

716 
i
=0; i<
mxBôCﬁ
; i++){

717 if–
exåaCﬁs
 & 
	`MASKBIT
(
i
ËË
nKeyCﬁ
++;

719 if–
pSrc
->
cﬁU£d
 & 
	`MASKBIT
(
BMS
-1) ){

720 
nKeyCﬁ
 +
pTabÀ
->
nCﬁ
 - 
BMS
 + 1;

724 
pIdx
 = 
	`sqlôe3AŒoˇãIndexObje˘
(
pP¨£
->
db
, 
nKeyCﬁ
+1, 0, &
zNŸU£d
);

725 if–
pIdx
==0 ) 
íd_auto_ödex_¸óã
;

726 
pLo›
->
u
.
båì
.
pIndex
 = 
pIdx
;

727 
pIdx
->
zName
 = "auto-index";

728 
pIdx
->
pTabÀ
 =ÖTable;

729 
n
 = 0;

730 
idxCﬁs
 = 0;

731 
pTîm
=
pWC
->
a
;ÖTîm<
pWCEnd
;ÖTerm++){

732 if–
	`ãrmC™DriveIndex
(
pTîm
, 
pSrc
, 
nŸRódy
) ){

733 
iCﬁ
 = 
pTîm
->
u
.
À·Cﬁumn
;

734 
Bômask
 
cMask
 = 
iCﬁ
>=
BMS
 ? 
	`MASKBIT
(BMS-1) : MASKBIT(iCol);

735 
	`ã°ˇ£
–
iCﬁ
==
BMS
-1 );

736 
	`ã°ˇ£
–
iCﬁ
==
BMS
 );

737 if–(
idxCﬁs
 & 
cMask
)==0 ){

738 
Ex¥
 *
pX
 = 
pTîm
->
pEx¥
;

739 
idxCﬁs
 |
cMask
;

740 
pIdx
->
aiCﬁumn
[
n
] = 
pTîm
->
u
.
À·Cﬁumn
;

741 
pCﬁl
 = 
	`sqlôe3Bö¨yCom∑ªCﬁlSeq
(
pP¨£
, 
pX
->
pLe·
,ÖX->
pRight
);

742 
pIdx
->
azCﬁl
[
n
] = 
pCﬁl
 ?ÖCﬁl->
zName
 : 
sqlôe3SåBINARY
;

743 
n
++;

747 
	`as£π
–(
u32
)
n
==
pLo›
->
u
.
båì
.
nEq
 );

751 
i
=0; i<
mxBôCﬁ
; i++){

752 if–
exåaCﬁs
 & 
	`MASKBIT
(
i
) ){

753 
pIdx
->
aiCﬁumn
[
n
] = 
i
;

754 
pIdx
->
azCﬁl
[
n
] = 
sqlôe3SåBINARY
;

755 
n
++;

758 if–
pSrc
->
cﬁU£d
 & 
	`MASKBIT
(
BMS
-1) ){

759 
i
=
BMS
-1; i<
pTabÀ
->
nCﬁ
; i++){

760 
pIdx
->
aiCﬁumn
[
n
] = 
i
;

761 
pIdx
->
azCﬁl
[
n
] = 
sqlôe3SåBINARY
;

762 
n
++;

765 
	`as£π
–
n
==
nKeyCﬁ
 );

766 
pIdx
->
aiCﬁumn
[
n
] = 
XN_ROWID
;

767 
pIdx
->
azCﬁl
[
n
] = 
sqlôe3SåBINARY
;

770 
	`as£π
–
pLevñ
->
iIdxCur
>=0 );

771 
pLevñ
->
iIdxCur
 = 
pP¨£
->
nTab
++;

772 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_O≥nAutoödex
, 
pLevñ
->
iIdxCur
, 
nKeyCﬁ
+1);

773 
	`sqlôe3VdbeSëP4KeyInfo
(
pP¨£
, 
pIdx
);

774 
	`VdbeCommít
((
v
, "f‹ %s", 
pTabÀ
->
zName
));

777 
	`sqlôe3Ex¥CachePush
(
pP¨£
);

778 
pTabIãm
 = &
pWC
->
pWInfo
->
pTabLi°
->
a
[
pLevñ
->
iFrom
];

779 if–
pTabIãm
->
fg
.
vüC‹outöe
 ){

780 
ªgYõld
 = 
pTabIãm
->
ªgRëu∫
;

781 
addrCou¡î
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 0, 0);

782 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_InôC‹outöe
, 
ªgYõld
, 0, 
pTabIãm
->
addrFûlSub
);

783 
addrT›
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Yõld
, 
ªgYõld
);

784 
	`VdbeCovîage
(
v
);

785 
	`VdbeCommít
((
v
, "√xàrow o‡\"%s\"", 
pTabIãm
->
pTab
->
zName
));

787 
addrT›
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Rewöd
, 
pLevñ
->
iTabCur
); 
	`VdbeCovîage
(v);

789 if–
pP¨tül
 ){

790 
iC⁄töue
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

791 
	`sqlôe3Ex¥IfFÆ£
(
pP¨£
, 
pP¨tül
, 
iC⁄töue
, 
SQLITE_JUMPIFNULL
);

792 
pLo›
->
wsFœgs
 |
WHERE_PARTIALIDX
;

794 
ªgRec‹d
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

795 
ªgBa£
 = 
	`sqlôe3Gíî©eIndexKey
(

796 
pP¨£
, 
pIdx
, 
pLevñ
->
iTabCur
, 
ªgRec‹d
, 0, 0, 0, 0

798 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IdxIn£π
, 
pLevñ
->
iIdxCur
, 
ªgRec‹d
);

799 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_USESEEKRESULT
);

800 if–
pP¨tül
 ) 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
iC⁄töue
);

801 if–
pTabIãm
->
fg
.
vüC‹outöe
 ){

802 
	`sqlôe3VdbeCh™geP2
(
v
, 
addrCou¡î
, 
ªgBa£
+
n
);

803 
	`å™¶©eCﬁumnToC›y
(
v
, 
addrT›
, 
pLevñ
->
iTabCur
, 
pTabIãm
->
ªgResu…
, 1);

804 
	`sqlôe3VdbeGŸo
(
v
, 
addrT›
);

805 
pTabIãm
->
fg
.
vüC‹outöe
 = 0;

807 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Next
, 
pLevñ
->
iTabCur
, 
addrT›
+1); 
	`VdbeCovîage
(v);

809 
	`sqlôe3VdbeCh™geP5
(
v
, 
SQLITE_STMTSTATUS_AUTOINDEX
);

810 
	`sqlôe3VdbeJumpHîe
(
v
, 
addrT›
);

811 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgRec‹d
);

812 
	`sqlôe3Ex¥CacheP›
(
pP¨£
);

815 
	`sqlôe3VdbeJumpHîe
(
v
, 
addrInô
);

817 
íd_auto_ödex_¸óã
:

818 
	`sqlôe3Ex¥Dñëe
(
pP¨£
->
db
, 
pP¨tül
);

819 
	}
}

822 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


828 
sqlôe3_ödex_öfo
 *
	$ÆloˇãIndexInfo
(

829 
P¨£
 *
pP¨£
,

830 
WhîeCœu£
 *
pWC
,

831 
Bômask
 
mUnußbÀ
,

832 
SrcLi°_ôem
 *
pSrc
,

833 
Ex¥Li°
 *
pOrdîBy
,

834 
u16
 *
pmNoOmô


836 
i
, 
j
;

837 
nTîm
;

838 
sqlôe3_ödex_c⁄°øöt
 *
pIdxC⁄s
;

839 
sqlôe3_ödex_‹dîby
 *
pIdxOrdîBy
;

840 
sqlôe3_ödex_c⁄°øöt_ußge
 *
pUßge
;

841 
WhîeTîm
 *
pTîm
;

842 
nOrdîBy
;

843 
sqlôe3_ödex_öfo
 *
pIdxInfo
;

844 
u16
 
mNoOmô
 = 0;

848 
i
=
nTîm
=0, 
pTîm
=
pWC
->
a
; i<pWC->nTerm; i++,ÖTerm++){

849 if–
pTîm
->
À·Curs‹
 !
pSrc
->
iCurs‹
 ) ;

850 if–
pTîm
->
¥îeqRight
 & 
mUnußbÀ
 ) ;

851 
	`as£π
–
	`IsPowîOfTwo
(
pTîm
->
eO≥øt‹
 & ~
WO_EQUIV
) );

852 
	`ã°ˇ£
–
pTîm
->
eO≥øt‹
 & 
WO_IN
 );

853 
	`ã°ˇ£
–
pTîm
->
eO≥øt‹
 & 
WO_ISNULL
 );

854 
	`ã°ˇ£
–
pTîm
->
eO≥øt‹
 & 
WO_IS
 );

855 
	`ã°ˇ£
–
pTîm
->
eO≥øt‹
 & 
WO_ALL
 );

856 if–(
pTîm
->
eO≥øt‹
 & ~(
WO_ISNULL
|
WO_EQUIV
|
WO_IS
))==0 ) ;

857 if–
pTîm
->
wtFœgs
 & 
TERM_VNULL
 ) ;

858 
	`as£π
–
pTîm
->
u
.
À·Cﬁumn
>=(-1) );

859 
nTîm
++;

866 
nOrdîBy
 = 0;

867 if–
pOrdîBy
 ){

868 
n
 = 
pOrdîBy
->
nEx¥
;

869 
i
=0; i<
n
; i++){

870 
Ex¥
 *
pEx¥
 = 
pOrdîBy
->
a
[
i
].pExpr;

871 if–
pEx¥
->
›
!=
TK_COLUMN
 ||ÖEx¥->
iTabÀ
!=
pSrc
->
iCurs‹
 ) ;

873 if–
i
==
n
){

874 
nOrdîBy
 = 
n
;

880 
pIdxInfo
 = 
	`sqlôe3DbMÆlocZîo
(
pP¨£
->
db
, (*pIdxInfo)

881 + ((*
pIdxC⁄s
Ë+ (*
pUßge
))*
nTîm


882 + (*
pIdxOrdîBy
)*
nOrdîBy
 );

883 if–
pIdxInfo
==0 ){

884 
	`sqlôe3Eº‹Msg
(
pP¨£
, "out of memory");

893 
pIdxC⁄s
 = (
sqlôe3_ödex_c⁄°øöt
*)&
pIdxInfo
[1];

894 
pIdxOrdîBy
 = (
sqlôe3_ödex_‹dîby
*)&
pIdxC⁄s
[
nTîm
];

895 
pUßge
 = (
sqlôe3_ödex_c⁄°øöt_ußge
*)&
pIdxOrdîBy
[
nOrdîBy
];

896 *(*)&
pIdxInfo
->
nC⁄°øöt
 = 
nTîm
;

897 *(*)&
pIdxInfo
->
nOrdîBy
 =ÇOrderBy;

898 *(
sqlôe3_ödex_c⁄°øöt
**)&
pIdxInfo
->
aC⁄°øöt
 = 
pIdxC⁄s
;

899 *(
sqlôe3_ödex_‹dîby
**)&
pIdxInfo
->
aOrdîBy
 = 
pIdxOrdîBy
;

900 *(
sqlôe3_ödex_c⁄°øöt_ußge
**)&
pIdxInfo
->
aC⁄°øötUßge
 =

901 
pUßge
;

903 
i
=
j
=0, 
pTîm
=
pWC
->
a
; i<pWC->
nTîm
; i++,ÖTerm++){

904 
u8
 
›
;

905 if–
pTîm
->
À·Curs‹
 !
pSrc
->
iCurs‹
 ) ;

906 if–
pTîm
->
¥îeqRight
 & 
mUnußbÀ
 ) ;

907 
	`as£π
–
	`IsPowîOfTwo
(
pTîm
->
eO≥øt‹
 & ~
WO_EQUIV
) );

908 
	`ã°ˇ£
–
pTîm
->
eO≥øt‹
 & 
WO_IN
 );

909 
	`ã°ˇ£
–
pTîm
->
eO≥øt‹
 & 
WO_IS
 );

910 
	`ã°ˇ£
–
pTîm
->
eO≥øt‹
 & 
WO_ISNULL
 );

911 
	`ã°ˇ£
–
pTîm
->
eO≥øt‹
 & 
WO_ALL
 );

912 if–(
pTîm
->
eO≥øt‹
 & ~(
WO_ISNULL
|
WO_EQUIV
|
WO_IS
))==0 ) ;

913 if–
pTîm
->
wtFœgs
 & 
TERM_VNULL
 ) ;

914 
	`as£π
–
pTîm
->
u
.
À·Cﬁumn
>=(-1) );

915 
pIdxC⁄s
[
j
].
iCﬁumn
 = 
pTîm
->
u
.
À·Cﬁumn
;

916 
pIdxC⁄s
[
j
].
iTîmOff£t
 = 
i
;

917 
›
 = (
u8
)
pTîm
->
eO≥øt‹
 & 
WO_ALL
;

918 if–
›
==
WO_IN
 ) o∞
WO_EQ
;

919 if–
›
==
WO_MATCH
 ){

920 
›
 = 
pTîm
->
eM©chOp
;

922 
pIdxC⁄s
[
j
].
›
 = op;

926 
	`as£π
–
WO_EQ
==
SQLITE_INDEX_CONSTRAINT_EQ
 );

927 
	`as£π
–
WO_LT
==
SQLITE_INDEX_CONSTRAINT_LT
 );

928 
	`as£π
–
WO_LE
==
SQLITE_INDEX_CONSTRAINT_LE
 );

929 
	`as£π
–
WO_GT
==
SQLITE_INDEX_CONSTRAINT_GT
 );

930 
	`as£π
–
WO_GE
==
SQLITE_INDEX_CONSTRAINT_GE
 );

931 
	`as£π
–
WO_MATCH
==
SQLITE_INDEX_CONSTRAINT_MATCH
 );

932 
	`as£π
–
pTîm
->
eO≥øt‹
 & (
WO_IN
|
WO_EQ
|
WO_LT
|
WO_LE
|
WO_GT
|
WO_GE
|
WO_MATCH
) );

934 if–
›
 & (
WO_LT
|
WO_LE
|
WO_GT
|
WO_GE
)

935 && 
	`sqlôe3Ex¥IsVe˘‹
(
pTîm
->
pEx¥
->
pRight
)

937 if–
i
<16 ) 
mNoOmô
 |= (1 << i);

938 if–
›
==
WO_LT
 ) 
pIdxC⁄s
[
j
].› = 
WO_LE
;

939 if–
›
==
WO_GT
 ) 
pIdxC⁄s
[
j
].› = 
WO_GE
;

942 
j
++;

944 
i
=0; i<
nOrdîBy
; i++){

945 
Ex¥
 *
pEx¥
 = 
pOrdîBy
->
a
[
i
].pExpr;

946 
pIdxOrdîBy
[
i
].
iCﬁumn
 = 
pEx¥
->iColumn;

947 
pIdxOrdîBy
[
i
].
desc
 = 
pOrdîBy
->
a
[i].
s‹tOrdî
;

950 *
pmNoOmô
 = 
mNoOmô
;

951  
pIdxInfo
;

952 
	}
}

968 
	$vèbBe°Index
(
P¨£
 *
pP¨£
, 
TabÀ
 *
pTab
, 
sqlôe3_ödex_öfo
 *
p
){

969 
sqlôe3_vèb
 *
pVèb
 = 
	`sqlôe3GëVTabÀ
(
pP¨£
->
db
, 
pTab
)->pVtab;

970 
rc
;

972 
	`TRACE_IDX_INPUTS
(
p
);

973 
rc
 = 
pVèb
->
pModuÀ
->
	`xBe°Index
’Vèb, 
p
);

974 
	`TRACE_IDX_OUTPUTS
(
p
);

976 if–
rc
!=
SQLITE_OK
 ){

977 if–
rc
==
SQLITE_NOMEM
 ){

978 
	`sqlôe3OomFau…
(
pP¨£
->
db
);

979 }if–!
pVèb
->
zEºMsg
 ){

980 
	`sqlôe3Eº‹Msg
(
pP¨£
, "%s", 
	`sqlôe3EºSå
(
rc
));

982 
	`sqlôe3Eº‹Msg
(
pP¨£
, "%s", 
pVèb
->
zEºMsg
);

985 
	`sqlôe3_‰ì
(
pVèb
->
zEºMsg
);

986 
pVèb
->
zEºMsg
 = 0;

991 
i
=0; i<
p
->
nC⁄°øöt
; i++){

992 if–!
p
->
aC⁄°øöt
[
i
].
ußbÀ
 &&Ö->
aC⁄°øötUßge
[i].
¨gvIndex
>0 ){

993 
	`sqlôe3Eº‹Msg
(
pP¨£
,

994 "èbÀ %s: xBe°IndexÑëu∫edá¿övÆidÖœn", 
pTab
->
zName
);

999  
pP¨£
->
nEº
;

1000 
	}
}

1003 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1017 
	$whîeKeySèts
(

1018 
P¨£
 *
pP¨£
,

1019 
Index
 *
pIdx
,

1020 
U≈ackedRec‹d
 *
pRec
,

1021 
roundUp
,

1022 
tRow˙t
 *
aSèt


1024 
IndexSam∂e
 *
aSam∂e
 = 
pIdx
->aSample;

1025 
iCﬁ
;

1026 
i
;

1027 
iSam∂e
;

1028 
iMö
 = 0;

1029 
iTe°
;

1030 
ªs
;

1031 
nFõld
;

1032 
tRow˙t
 
iLowî
 = 0;

1034 #i‚de‡
SQLITE_DEBUG


1035 
	`UNUSED_PARAMETER
–
pP¨£
 );

1037 
	`as£π
–
pRec
!=0 );

1038 
	`as£π
–
pIdx
->
nSam∂e
>0 );

1039 
	`as£π
–
pRec
->
nFõld
>0 &&ÖRec->nFõld<=
pIdx
->
nSam∂eCﬁ
 );

1085 
nFõld
 = 
pRec
->nField;

1086 
iCﬁ
 = 0;

1087 
iSam∂e
 = 
pIdx
->
nSam∂e
 * 
nFõld
;

1089 
iSamp
;

1090 
n
;

1092 
iTe°
 = (
iMö
+
iSam∂e
)/2;

1093 
iSamp
 = 
iTe°
 / 
nFõld
;

1094 if–
iSamp
>0 ){

1098 
n
=(
iTe°
 % 
nFõld
) + 1;Ç<nField;Ç++){

1099 if–
aSam∂e
[
iSamp
-1].
™Lt
[
n
-1]!=aSample[iSamp].anLt[n-1] ) ;

1102 
n
 = 
iTe°
 + 1;

1105 
pRec
->
nFõld
 = 
n
;

1106 
ªs
 = 
	`sqlôe3VdbeRec‹dCom∑ª
(
aSam∂e
[
iSamp
].
n
,áSam∂e[iSamp].
p
, 
pRec
);

1107 if–
ªs
<0 ){

1108 
iLowî
 = 
aSam∂e
[
iSamp
].
™Lt
[
n
-1] +áSam∂e[iSamp].
™Eq
[n-1];

1109 
iMö
 = 
iTe°
+1;

1110 }if–
ªs
==0 && 
n
<
nFõld
 ){

1111 
iLowî
 = 
aSam∂e
[
iSamp
].
™Lt
[
n
-1];

1112 
iMö
 = 
iTe°
+1;

1113 
ªs
 = -1;

1115 
iSam∂e
 = 
iTe°
;

1116 
iCﬁ
 = 
n
-1;

1118 } 
ªs
 && 
iMö
<
iSam∂e
 );

1119 
i
 = 
iSam∂e
 / 
nFõld
;

1121 #ifde‡
SQLITE_DEBUG


1125 if–
pP¨£
->
db
->
mÆlocFaûed
==0 ){

1126 if–
ªs
==0 ){

1128 
	`as£π
–
i
<
pIdx
->
nSam∂e
 );

1129 
	`as£π
–
iCﬁ
==
nFõld
-1 );

1130 
pRec
->
nFõld
 =ÇField;

1131 
	`as£π
–0==
	`sqlôe3VdbeRec‹dCom∑ª
(
aSam∂e
[
i
].
n
,áSam∂e[i].
p
, 
pRec
)

1132 || 
pP¨£
->
db
->
mÆlocFaûed


1138 
	`as£π
–
i
<=
pIdx
->
nSam∂e
 && i>=0 );

1139 
pRec
->
nFõld
 = 
iCﬁ
+1;

1140 
	`as£π
–
i
==
pIdx
->
nSam∂e


1141 || 
	`sqlôe3VdbeRec‹dCom∑ª
(
aSam∂e
[
i
].
n
,áSam∂e[i].
p
, 
pRec
)>0

1142 || 
pP¨£
->
db
->
mÆlocFaûed
 );

1148 if–
iCﬁ
>0 ){

1149 
pRec
->
nFõld
 = 
iCﬁ
;

1150 
	`as£π
–
	`sqlôe3VdbeRec‹dCom∑ª
(
aSam∂e
[
i
].
n
,áSam∂e[i].
p
, 
pRec
)<=0

1151 || 
pP¨£
->
db
->
mÆlocFaûed
 );

1153 if–
i
>0 ){

1154 
pRec
->
nFõld
 =ÇField;

1155 
	`as£π
–
	`sqlôe3VdbeRec‹dCom∑ª
(
aSam∂e
[
i
-1].
n
,áSam∂e[i-1].
p
, 
pRec
)<0

1156 || 
pP¨£
->
db
->
mÆlocFaûed
 );

1162 if–
ªs
==0 ){

1164 
	`as£π
–
iCﬁ
==
nFõld
-1 );

1165 
aSèt
[0] = 
aSam∂e
[
i
].
™Lt
[
iCﬁ
];

1166 
aSèt
[1] = 
aSam∂e
[
i
].
™Eq
[
iCﬁ
];

1171 
tRow˙t
 
iUµî
, 
iG≠
;

1172 if–
i
>=
pIdx
->
nSam∂e
 ){

1173 
iUµî
 = 
	`sqlôe3LogE°ToI¡
(
pIdx
->
aiRowLogE°
[0]);

1175 
iUµî
 = 
aSam∂e
[
i
].
™Lt
[
iCﬁ
];

1178 if–
iLowî
>=
iUµî
 ){

1179 
iG≠
 = 0;

1181 
iG≠
 = 
iUµî
 - 
iLowî
;

1183 if–
roundUp
 ){

1184 
iG≠
 = (iGap*2)/3;

1186 
iG≠
 = iGap/3;

1188 
aSèt
[0] = 
iLowî
 + 
iG≠
;

1189 
aSèt
[1] = 
pIdx
->
aAvgEq
[
iCﬁ
];

1193 
pRec
->
nFõld
 =ÇField;

1194  
i
;

1195 
	}
}

1209 
LogE°
 
	$whîeR™geAdju°
(
WhîeTîm
 *
pTîm
, 
LogE°
 
nNew
){

1210 
LogE°
 
nRë
 = 
nNew
;

1211 if–
pTîm
 ){

1212 if–
pTîm
->
åuthProb
<=0 ){

1213 
nRë
 +
pTîm
->
åuthProb
;

1214 }if–(
pTîm
->
wtFœgs
 & 
TERM_VNULL
)==0 ){

1215 
nRë
 -20; 
	`as£π
–20==
	`sqlôe3LogE°
(4) );

1218  
nRë
;

1219 
	}
}

1222 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1226 
	$sqlôe3IndexCﬁumnAfföôy
(
sqlôe3
 *
db
, 
Index
 *
pIdx
, 
iCﬁ
){

1227 
	`as£π
–
iCﬁ
>=0 && iCﬁ<
pIdx
->
nCﬁumn
 );

1228 if–!
pIdx
->
zCﬁAff
 ){

1229 if–
	`sqlôe3IndexAfföôySå
(
db
, 
pIdx
)==0 )  
SQLITE_AFF_BLOB
;

1231  
pIdx
->
zCﬁAff
[
iCﬁ
];

1232 
	}
}

1236 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1272 
	$whîeR™geSkùSˇnE°
(

1273 
P¨£
 *
pP¨£
,

1274 
WhîeTîm
 *
pLowî
,

1275 
WhîeTîm
 *
pUµî
,

1276 
WhîeLo›
 *
pLo›
,

1277 *
pbD⁄e


1279 
Index
 *
p
 = 
pLo›
->
u
.
båì
.
pIndex
;

1280 
nEq
 = 
pLo›
->
u
.
båì
.nEq;

1281 
sqlôe3
 *
db
 = 
pP¨£
->db;

1282 
nLowî
 = -1;

1283 
nUµî
 = 
p
->
nSam∂e
+1;

1284 
rc
 = 
SQLITE_OK
;

1285 
u8
 
aff
 = 
	`sqlôe3IndexCﬁumnAfföôy
(
db
, 
p
, 
nEq
);

1286 
CﬁlSeq
 *
pCﬁl
;

1288 
sqlôe3_vÆue
 *
p1
 = 0;

1289 
sqlôe3_vÆue
 *
p2
 = 0;

1290 
sqlôe3_vÆue
 *
pVÆ
 = 0;

1292 
pCﬁl
 = 
	`sqlôe3LoˇãCﬁlSeq
(
pP¨£
, 
p
->
azCﬁl
[
nEq
]);

1293 if–
pLowî
 ){

1294 
rc
 = 
	`sqlôe3Sèt4VÆueFromEx¥
(
pP¨£
, 
pLowî
->
pEx¥
->
pRight
, 
aff
, &
p1
);

1295 
nLowî
 = 0;

1297 if–
pUµî
 && 
rc
==
SQLITE_OK
 ){

1298 
rc
 = 
	`sqlôe3Sèt4VÆueFromEx¥
(
pP¨£
, 
pUµî
->
pEx¥
->
pRight
, 
aff
, &
p2
);

1299 
nUµî
 = 
p2
 ? 0 : 
p
->
nSam∂e
;

1302 if–
p1
 || 
p2
 ){

1303 
i
;

1304 
nDiff
;

1305 
i
=0; 
rc
==
SQLITE_OK
 && i<
p
->
nSam∂e
; i++){

1306 
rc
 = 
	`sqlôe3Sèt4Cﬁumn
(
db
, 
p
->
aSam∂e
[
i
].p,Ö->aSam∂e[i].
n
, 
nEq
, &
pVÆ
);

1307 if–
rc
==
SQLITE_OK
 && 
p1
 ){

1308 
ªs
 = 
	`sqlôe3MemCom∑ª
(
p1
, 
pVÆ
, 
pCﬁl
);

1309 if–
ªs
>=0 ) 
nLowî
++;

1311 if–
rc
==
SQLITE_OK
 && 
p2
 ){

1312 
ªs
 = 
	`sqlôe3MemCom∑ª
(
p2
, 
pVÆ
, 
pCﬁl
);

1313 if–
ªs
>=0 ) 
nUµî
++;

1316 
nDiff
 = (
nUµî
 - 
nLowî
);

1317 if–
nDiff
<=0 )ÇDiff = 1;

1324 if–
nDiff
!=1 || 
pUµî
==0 || 
pLowî
==0 ){

1325 
nAdju°
 = (
	`sqlôe3LogE°
(
p
->
nSam∂e
Ë- sqlôe3LogE°(
nDiff
));

1326 
pLo›
->
nOut
 -
nAdju°
;

1327 *
pbD⁄e
 = 1;

1328 
	`WHERETRACE
(0x10, ("range skip-scanÑegions: %u..%uádjust=%dÉst=%d\n",

1329 
nLowî
, 
nUµî
, 
nAdju°
*-1, 
pLo›
->
nOut
));

1333 
	`as£π
–*
pbD⁄e
==0 );

1336 
	`sqlôe3VÆueFªe
(
p1
);

1337 
	`sqlôe3VÆueFªe
(
p2
);

1338 
	`sqlôe3VÆueFªe
(
pVÆ
);

1340  
rc
;

1341 
	}
}

1384 
	$whîeR™geSˇnE°
(

1385 
P¨£
 *
pP¨£
,

1386 
WhîeLo›Buûdî
 *
pBuûdî
,

1387 
WhîeTîm
 *
pLowî
,

1388 
WhîeTîm
 *
pUµî
,

1389 
WhîeLo›
 *
pLo›


1391 
rc
 = 
SQLITE_OK
;

1392 
nOut
 = 
pLo›
->nOut;

1393 
LogE°
 
nNew
;

1395 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1396 
Index
 *
p
 = 
pLo›
->
u
.
båì
.
pIndex
;

1397 
nEq
 = 
pLo›
->
u
.
båì
.nEq;

1399 if–
p
->
nSam∂e
>0 && 
nEq
<p->
nSam∂eCﬁ
 ){

1400 if–
nEq
==
pBuûdî
->
nRecVÆid
 ){

1401 
U≈ackedRec‹d
 *
pRec
 = 
pBuûdî
->pRec;

1402 
tRow˙t
 
a
[2];

1403 
nBtm
 = 
pLo›
->
u
.
båì
.nBtm;

1404 
nT›
 = 
pLo›
->
u
.
båì
.nTop;

1425 
tRow˙t
 
iLowî
;

1426 
tRow˙t
 
iUµî
;

1427 
iLwrIdx
 = -2;

1428 
iU¥Idx
 = -1;

1430 if–
pRec
 ){

1431 
	`ã°ˇ£
–
pRec
->
nFõld
!=
pBuûdî
->
nRecVÆid
 );

1432 
pRec
->
nFõld
 = 
pBuûdî
->
nRecVÆid
;

1435 if–
nEq
==0 ){

1436 
iLowî
 = 0;

1437 
iUµî
 = 
p
->
nRowE°0
;

1441 
	`whîeKeySèts
(
pP¨£
, 
p
, 
pRec
, 0, 
a
);

1442 
iLowî
 = 
a
[0];

1443 
iUµî
 = 
a
[0] +á[1];

1446 
	`as£π
–
pLowî
==0 || (pLowî->
eO≥øt‹
 & (
WO_GT
|
WO_GE
))!=0 );

1447 
	`as£π
–
pUµî
==0 || (pUµî->
eO≥øt‹
 & (
WO_LT
|
WO_LE
))!=0 );

1448 
	`as£π
–
p
->
aS‹tOrdî
!=0 );

1449 if–
p
->
aS‹tOrdî
[
nEq
] ){

1451 
	`SWAP
(
WhîeTîm
*, 
pLowî
, 
pUµî
);

1452 
	`SWAP
(, 
nBtm
, 
nT›
);

1456 if–
pLowî
 ){

1457 
n
;

1458 
Ex¥
 *
pEx¥
 = 
pLowî
->pEx¥->
pRight
;

1459 
rc
 = 
	`sqlôe3Sèt4ProbeSëVÆue
(
pP¨£
, 
p
, &
pRec
, 
pEx¥
, 
nBtm
, 
nEq
, &
n
);

1460 if–
rc
==
SQLITE_OK
 && 
n
 ){

1461 
tRow˙t
 
iNew
;

1462 
u16
 
mask
 = 
WO_GT
|
WO_LE
;

1463 if–
	`sqlôe3Ex¥Ve˘‹Size
(
pEx¥
)>
n
 ) 
mask
 = (
WO_LE
|
WO_LT
);

1464 
iLwrIdx
 = 
	`whîeKeySèts
(
pP¨£
, 
p
, 
pRec
, 0, 
a
);

1465 
iNew
 = 
a
[0] + ((
pLowî
->
eO≥øt‹
 & 
mask
) ?á[1] : 0);

1466 if–
iNew
>
iLowî
 ) iLower = iNew;

1467 
nOut
--;

1468 
pLowî
 = 0;

1473 if–
pUµî
 ){

1474 
n
;

1475 
Ex¥
 *
pEx¥
 = 
pUµî
->pEx¥->
pRight
;

1476 
rc
 = 
	`sqlôe3Sèt4ProbeSëVÆue
(
pP¨£
, 
p
, &
pRec
, 
pEx¥
, 
nT›
, 
nEq
, &
n
);

1477 if–
rc
==
SQLITE_OK
 && 
n
 ){

1478 
tRow˙t
 
iNew
;

1479 
u16
 
mask
 = 
WO_GT
|
WO_LE
;

1480 if–
	`sqlôe3Ex¥Ve˘‹Size
(
pEx¥
)>
n
 ) 
mask
 = (
WO_LE
|
WO_LT
);

1481 
iU¥Idx
 = 
	`whîeKeySèts
(
pP¨£
, 
p
, 
pRec
, 1, 
a
);

1482 
iNew
 = 
a
[0] + ((
pUµî
->
eO≥øt‹
 & 
mask
) ?á[1] : 0);

1483 if–
iNew
<
iUµî
 ) iUpper = iNew;

1484 
nOut
--;

1485 
pUµî
 = 0;

1489 
pBuûdî
->
pRec
 =ÖRec;

1490 if–
rc
==
SQLITE_OK
 ){

1491 if–
iUµî
>
iLowî
 ){

1492 
nNew
 = 
	`sqlôe3LogE°
(
iUµî
 - 
iLowî
);

1497 if–
iLwrIdx
==
iU¥Idx
 ) 
nNew
 -20; 
	`as£π
–20==
	`sqlôe3LogE°
(4) );

1499 
nNew
 = 10; 
	`as£π
–10==
	`sqlôe3LogE°
(2) );

1501 if–
nNew
<
nOut
 ){

1502 
nOut
 = 
nNew
;

1504 
	`WHERETRACE
(0x10, ("STAT4Ñange scan: %u..%uÉst=%d\n",

1505 (
u32
)
iLowî
, (u32)
iUµî
, 
nOut
));

1508 
bD⁄e
 = 0;

1509 
rc
 = 
	`whîeR™geSkùSˇnE°
(
pP¨£
, 
pLowî
, 
pUµî
, 
pLo›
, &
bD⁄e
);

1510 if–
bD⁄e
 )  
rc
;

1514 
	`UNUSED_PARAMETER
(
pP¨£
);

1515 
	`UNUSED_PARAMETER
(
pBuûdî
);

1516 
	`as£π
–
pLowî
 || 
pUµî
 );

1518 
	`as£π
–
pUµî
==0 || (pUµî->
wtFœgs
 & 
TERM_VNULL
)==0 );

1519 
nNew
 = 
	`whîeR™geAdju°
(
pLowî
, 
nOut
);

1520 
nNew
 = 
	`whîeR™geAdju°
(
pUµî
,ÇNew);

1528 if–
pLowî
 &&ÖLowî->
åuthProb
>0 && 
pUµî
 &&ÖUpper->truthProb>0 ){

1529 
nNew
 -= 20;

1532 
nOut
 -(
pLowî
!=0Ë+ (
pUµî
!=0);

1533 if–
nNew
<10 )ÇNew = 10;

1534 if–
nNew
<
nOut
 )ÇOut =ÇNew;

1535 #i‡
	`deföed
(
WHERETRACE_ENABLED
)

1536 if–
pLo›
->
nOut
>nOut ){

1537 
	`WHERETRACE
(0x10,("Range scanÜowersÇOut from %dÅo %d\n",

1538 
pLo›
->
nOut
,ÇOut));

1541 
pLo›
->
nOut
 = (
LogE°
)nOut;

1542  
rc
;

1543 
	}
}

1545 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1563 
	$whîeEquÆSˇnE°
(

1564 
P¨£
 *
pP¨£
,

1565 
WhîeLo›Buûdî
 *
pBuûdî
,

1566 
Ex¥
 *
pEx¥
,

1567 
tRow˙t
 *
≤Row


1569 
Index
 *
p
 = 
pBuûdî
->
pNew
->
u
.
båì
.
pIndex
;

1570 
nEq
 = 
pBuûdî
->
pNew
->
u
.
båì
.nEq;

1571 
U≈ackedRec‹d
 *
pRec
 = 
pBuûdî
->pRec;

1572 
rc
;

1573 
tRow˙t
 
a
[2];

1574 
bOk
;

1576 
	`as£π
–
nEq
>=1 );

1577 
	`as£π
–
nEq
<=
p
->
nCﬁumn
 );

1578 
	`as£π
–
p
->
aSam∂e
!=0 );

1579 
	`as£π
–
p
->
nSam∂e
>0 );

1580 
	`as£π
–
pBuûdî
->
nRecVÆid
<
nEq
 );

1584 if–
pBuûdî
->
nRecVÆid
<(
nEq
-1) ){

1585  
SQLITE_NOTFOUND
;

1590 if–
nEq
>=
p
->
nCﬁumn
 ){

1591 *
≤Row
 = 1;

1592  
SQLITE_OK
;

1595 
rc
 = 
	`sqlôe3Sèt4ProbeSëVÆue
(
pP¨£
, 
p
, &
pRec
, 
pEx¥
, 1, 
nEq
-1, &
bOk
);

1596 
pBuûdî
->
pRec
 =ÖRec;

1597 if–
rc
!=
SQLITE_OK
 ) Ñc;

1598 if–
bOk
==0 )  
SQLITE_NOTFOUND
;

1599 
pBuûdî
->
nRecVÆid
 = 
nEq
;

1601 
	`whîeKeySèts
(
pP¨£
, 
p
, 
pRec
, 0, 
a
);

1602 
	`WHERETRACE
(0x10,("equality scanÑegions %s(%d): %d\n",

1603 
p
->
zName
, 
nEq
-1, ()
a
[1]));

1604 *
≤Row
 = 
a
[1];

1606  
rc
;

1607 
	}
}

1610 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1627 
	$whîeInSˇnE°
(

1628 
P¨£
 *
pP¨£
,

1629 
WhîeLo›Buûdî
 *
pBuûdî
,

1630 
Ex¥Li°
 *
pLi°
,

1631 
tRow˙t
 *
≤Row


1633 
Index
 *
p
 = 
pBuûdî
->
pNew
->
u
.
båì
.
pIndex
;

1634 
i64
 
nRow0
 = 
	`sqlôe3LogE°ToI¡
(
p
->
aiRowLogE°
[0]);

1635 
nRecVÆid
 = 
pBuûdî
->nRecValid;

1636 
rc
 = 
SQLITE_OK
;

1637 
tRow˙t
 
nE°
;

1638 
tRow˙t
 
nRowE°
 = 0;

1639 
i
;

1641 
	`as£π
–
p
->
aSam∂e
!=0 );

1642 
i
=0; 
rc
==
SQLITE_OK
 && i<
pLi°
->
nEx¥
; i++){

1643 
nE°
 = 
nRow0
;

1644 
rc
 = 
	`whîeEquÆSˇnE°
(
pP¨£
, 
pBuûdî
, 
pLi°
->
a
[
i
].
pEx¥
, &
nE°
);

1645 
nRowE°
 +
nE°
;

1646 
pBuûdî
->
nRecVÆid
 =ÇRecValid;

1649 if–
rc
==
SQLITE_OK
 ){

1650 if–
nRowE°
 > 
nRow0
 )ÇRowEst =ÇRow0;

1651 *
≤Row
 = 
nRowE°
;

1652 
	`WHERETRACE
(0x10,("INÑowÉ°im©e:É°=%d\n", 
nRowE°
));

1654 
	`as£π
–
pBuûdî
->
nRecVÆid
==nRecValid );

1655  
rc
;

1656 
	}
}

1660 #ifde‡
WHERETRACE_ENABLED


1664 
	$whîeTîmPröt
(
WhîeTîm
 *
pTîm
, 
iTîm
){

1665 if–
pTîm
==0 ){

1666 
	`sqlôe3DebugPrötf
("TERM-%-3d NULL\n", 
iTîm
);

1668 
zTy≥
[4];

1669 
zLe·
[50];

1670 
	`mem˝y
(
zTy≥
, "...", 4);

1671 if–
pTîm
->
wtFœgs
 & 
TERM_VIRTUAL
 ) 
zTy≥
[0] = 'V';

1672 if–
pTîm
->
eO≥øt‹
 & 
WO_EQUIV
 ) 
zTy≥
[1] = 'E';

1673 if–
	`Ex¥HasPr›îty
(
pTîm
->
pEx¥
, 
EP_FromJoö
ËË
zTy≥
[2] = 'L';

1674 if–
pTîm
->
eO≥øt‹
 & 
WO_SINGLE
 ){

1675 
	`sqlôe3_¢¥ötf
((
zLe·
),zLeft,"left={%d:%d}",

1676 
pTîm
->
À·Curs‹
,ÖTîm->
u
.
À·Cﬁumn
);

1677 }if–(
pTîm
->
eO≥øt‹
 & 
WO_OR
)!=0 &&ÖTîm->
u
.
pOrInfo
!=0 ){

1678 
	`sqlôe3_¢¥ötf
((
zLe·
),zLeft,"indexable=0x%lld",

1679 
pTîm
->
u
.
pOrInfo
->
ödexabÀ
);

1681 
	`sqlôe3_¢¥ötf
((
zLe·
),zLe·,"À·=%d", 
pTîm
->
À·Curs‹
);

1683 
	`sqlôe3DebugPrötf
(

1685 
iTîm
, 
pTîm
, 
zTy≥
, 
zLe·
,ÖTîm->
åuthProb
,

1686 
pTîm
->
eO≥øt‹
,ÖTîm->
wtFœgs
);

1687 if–
pTîm
->
iFõld
 ){

1688 
	`sqlôe3DebugPrötf
(" iFõld=%d\n", 
pTîm
->
iFõld
);

1690 
	`sqlôe3DebugPrötf
("\n");

1692 
	`sqlôe3TªeVõwEx¥
(0, 
pTîm
->
pEx¥
, 0);

1694 
	}
}

1697 #ifde‡
WHERETRACE_ENABLED


1701 
	$sqlôe3WhîeCœu£Pröt
(
WhîeCœu£
 *
pWC
){

1702 
i
;

1703 
i
=0; i<
pWC
->
nTîm
; i++){

1704 
	`whîeTîmPröt
(&
pWC
->
a
[
i
], i);

1706 
	}
}

1709 #ifde‡
WHERETRACE_ENABLED


1713 
	$whîeLo›Pröt
(
WhîeLo›
 *
p
, 
WhîeCœu£
 *
pWC
){

1714 
WhîeInfo
 *
pWInfo
 = 
pWC
->pWInfo;

1715 
nb
 = 1+(
pWInfo
->
pTabLi°
->
nSrc
+3)/4;

1716 
SrcLi°_ôem
 *
pIãm
 = 
pWInfo
->
pTabLi°
->
a
 + 
p
->
iTab
;

1717 
TabÀ
 *
pTab
 = 
pIãm
->pTab;

1718 
Bômask
 
mAŒ
 = (((Bômask)1)<<(
nb
*4)) - 1;

1719 
	`sqlôe3DebugPrötf
("%c%2d.%0*Œx.%0*Œx", 
p
->
cId
,

1720 
p
->
iTab
, 
nb
,Ö->
maskSñf
,Çb,Ö->
¥îeq
 & 
mAŒ
);

1721 
	`sqlôe3DebugPrötf
(" %12s",

1722 
pIãm
->
zAlüs
 ?ÖIãm->zAlü†: 
pTab
->
zName
);

1723 if–(
p
->
wsFœgs
 & 
WHERE_VIRTUALTABLE
)==0 ){

1724 c⁄° *
zName
;

1725 if–
p
->
u
.
båì
.
pIndex
 && (
zName
 =Ö->u.btree.pIndex->zName)!=0 ){

1726 if–
	`°∫cmp
(
zName
, "sqlite_autoindex_", 17)==0 ){

1727 
i
 = 
	`sqlôe3SåÀn30
(
zName
) - 1;

1728  
zName
[
i
]!='_' ) i--;

1729 
zName
 +
i
;

1731 
	`sqlôe3DebugPrötf
(".%-16†%2d", 
zName
, 
p
->
u
.
båì
.
nEq
);

1733 
	`sqlôe3DebugPrötf
("%20s","");

1736 *
z
;

1737 if–
p
->
u
.
vèb
.
idxSå
 ){

1738 
z
 = 
	`sqlôe3_m¥ötf
("(%d,\"%s\",%x)",

1739 
p
->
u
.
vèb
.
idxNum
,Ö->u.vèb.
idxSå
,Ö->u.vèb.
omôMask
);

1741 
z
 = 
	`sqlôe3_m¥ötf
("(%d,%x)", 
p
->
u
.
vèb
.
idxNum
,Ö->u.vèb.
omôMask
);

1743 
	`sqlôe3DebugPrötf
(" %-19s", 
z
);

1744 
	`sqlôe3_‰ì
(
z
);

1746 if–
p
->
wsFœgs
 & 
WHERE_SKIPSCAN
 ){

1747 
	`sqlôe3DebugPrötf
(" f %05x %d-%d", 
p
->
wsFœgs
,Ö->
nLTîm
,p->
nSkù
);

1749 
	`sqlôe3DebugPrötf
(" f %05x N %d", 
p
->
wsFœgs
,Ö->
nLTîm
);

1751 
	`sqlôe3DebugPrötf
(" co° %d,%d,%d\n", 
p
->
rSëup
,Ö->
rRun
,Ö->
nOut
);

1752 if–
p
->
nLTîm
 && (
sqlôe3WhîeTø˚
 & 0x100)!=0 ){

1753 
i
;

1754 
i
=0; i<
p
->
nLTîm
; i++){

1755 
	`whîeTîmPröt
(
p
->
aLTîm
[
i
], i);

1758 
	}
}

1765 
	$whîeLo›Inô
(
WhîeLo›
 *
p
){

1766 
p
->
aLTîm
 =Ö->
aLTîmS∑˚
;

1767 
p
->
nLTîm
 = 0;

1768 
p
->
nLSlŸ
 = 
	`AºaySize
’->
aLTîmS∑˚
);

1769 
p
->
wsFœgs
 = 0;

1770 
	}
}

1775 
	$whîeLo›CÀ¨Uni⁄
(
sqlôe3
 *
db
, 
WhîeLo›
 *
p
){

1776 if–
p
->
wsFœgs
 & (
WHERE_VIRTUALTABLE
|
WHERE_AUTO_INDEX
) ){

1777 if–(
p
->
wsFœgs
 & 
WHERE_VIRTUALTABLE
)!=0 &&Ö->
u
.
vèb
.
√edFªe
 ){

1778 
	`sqlôe3_‰ì
(
p
->
u
.
vèb
.
idxSå
);

1779 
p
->
u
.
vèb
.
√edFªe
 = 0;

1780 
p
->
u
.
vèb
.
idxSå
 = 0;

1781 }if–(
p
->
wsFœgs
 & 
WHERE_AUTO_INDEX
)!=0 &&Ö->
u
.
båì
.
pIndex
!=0 ){

1782 
	`sqlôe3DbFªe
(
db
, 
p
->
u
.
båì
.
pIndex
->
zCﬁAff
);

1783 
	`sqlôe3DbFªe
(
db
, 
p
->
u
.
båì
.
pIndex
);

1784 
p
->
u
.
båì
.
pIndex
 = 0;

1787 
	}
}

1792 
	$whîeLo›CÀ¨
(
sqlôe3
 *
db
, 
WhîeLo›
 *
p
){

1793 if–
p
->
aLTîm
!ı->
aLTîmS∑˚
 ) 
	`sqlôe3DbFªe
(
db
,Ö->aLTerm);

1794 
	`whîeLo›CÀ¨Uni⁄
(
db
, 
p
);

1795 
	`whîeLo›Inô
(
p
);

1796 
	}
}

1801 
	$whîeLo›Resize
(
sqlôe3
 *
db
, 
WhîeLo›
 *
p
, 
n
){

1802 
WhîeTîm
 **
∑New
;

1803 if–
p
->
nLSlŸ
>=
n
 )  
SQLITE_OK
;

1804 
n
 = (n+7)&~7;

1805 
∑New
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, (
p
->
aLTîm
[0])*
n
);

1806 if–
∑New
==0 )  
SQLITE_NOMEM_BKPT
;

1807 
	`mem˝y
(
∑New
, 
p
->
aLTîm
, ’->aLTîm[0])*p->
nLSlŸ
);

1808 if–
p
->
aLTîm
!ı->
aLTîmS∑˚
 ) 
	`sqlôe3DbFªe
(
db
,Ö->aLTerm);

1809 
p
->
aLTîm
 = 
∑New
;

1810 
p
->
nLSlŸ
 = 
n
;

1811  
SQLITE_OK
;

1812 
	}
}

1817 
	$whîeLo›X„r
(
sqlôe3
 *
db
, 
WhîeLo›
 *
pTo
, WhîeLo› *
pFrom
){

1818 
	`whîeLo›CÀ¨Uni⁄
(
db
, 
pTo
);

1819 if–
	`whîeLo›Resize
(
db
, 
pTo
, 
pFrom
->
nLTîm
) ){

1820 
	`mem£t
(&
pTo
->
u
, 0, (pTo->u));

1821  
SQLITE_NOMEM_BKPT
;

1823 
	`mem˝y
(
pTo
, 
pFrom
, 
WHERE_LOOP_XFER_SZ
);

1824 
	`mem˝y
(
pTo
->
aLTîm
, 
pFrom
->aLTîm,ÖTo->
nLTîm
*(pTo->aLTerm[0]));

1825 if–
pFrom
->
wsFœgs
 & 
WHERE_VIRTUALTABLE
 ){

1826 
pFrom
->
u
.
vèb
.
√edFªe
 = 0;

1827 }if–(
pFrom
->
wsFœgs
 & 
WHERE_AUTO_INDEX
)!=0 ){

1828 
pFrom
->
u
.
båì
.
pIndex
 = 0;

1830  
SQLITE_OK
;

1831 
	}
}

1836 
	$whîeLo›Dñëe
(
sqlôe3
 *
db
, 
WhîeLo›
 *
p
){

1837 
	`whîeLo›CÀ¨
(
db
, 
p
);

1838 
	`sqlôe3DbFªe
(
db
, 
p
);

1839 
	}
}

1844 
	$whîeInfoFªe
(
sqlôe3
 *
db
, 
WhîeInfo
 *
pWInfo
){

1845 if–
	`ALWAYS
(
pWInfo
) ){

1846 
i
;

1847 
i
=0; i<
pWInfo
->
nLevñ
; i++){

1848 
WhîeLevñ
 *
pLevñ
 = &
pWInfo
->
a
[
i
];

1849 if–
pLevñ
->
pWLo›
 && (pLevñ->pWLo›->
wsFœgs
 & 
WHERE_IN_ABLE
) ){

1850 
	`sqlôe3DbFªe
(
db
, 
pLevñ
->
u
.
ö
.
aInLo›
);

1853 
	`sqlôe3WhîeCœu£CÀ¨
(&
pWInfo
->
sWC
);

1854  
pWInfo
->
pLo›s
 ){

1855 
WhîeLo›
 *
p
 = 
pWInfo
->
pLo›s
;

1856 
pWInfo
->
pLo›s
 = 
p
->
pNextLo›
;

1857 
	`whîeLo›Dñëe
(
db
, 
p
);

1859 
	`sqlôe3DbFªe
(
db
, 
pWInfo
);

1861 
	}
}

1880 
	$whîeLo›Chó≥rPr›îSub£t
(

1881 c⁄° 
WhîeLo›
 *
pX
,

1882 c⁄° 
WhîeLo›
 *
pY


1884 
i
, 
j
;

1885 if–
pX
->
nLTîm
-pX->
nSkù
 >
pY
->nLTerm-pY->nSkip ){

1888 if–
pY
->
nSkù
 > 
pX
->nSkip )  0;

1889 if–
pX
->
rRun
 >
pY
->rRun ){

1890 if–
pX
->
rRun
 > 
pY
->rRun )  0;

1891 if–
pX
->
nOut
 > 
pY
->nOut )  0;

1893 
i
=
pX
->
nLTîm
-1; i>=0; i--){

1894 if–
pX
->
aLTîm
[
i
]==0 ) ;

1895 
j
=
pY
->
nLTîm
-1; j>=0; j--){

1896 if–
pY
->
aLTîm
[
j
]==
pX
->aLTîm[
i
] ) ;

1898 if–
j
<0 )  0;

1901 
	}
}

1917 
	$whîeLo›Adju°Co°
(c⁄° 
WhîeLo›
 *
p
, WhîeLo› *
pTem∂©e
){

1918 if–(
pTem∂©e
->
wsFœgs
 & 
WHERE_INDEXED
)==0 ) ;

1919 ; 
p
;Öı->
pNextLo›
){

1920 if–
p
->
iTab
!=
pTem∂©e
->iTab ) ;

1921 if–(
p
->
wsFœgs
 & 
WHERE_INDEXED
)==0 ) ;

1922 if–
	`whîeLo›Chó≥rPr›îSub£t
(
p
, 
pTem∂©e
) ){

1925 
	`WHERETRACE
(0x80,("subset costádjustment %d,%dÅo %d,%d\n",

1926 
pTem∂©e
->
rRun
,ÖTem∂©e->
nOut
, 
p
->rRun,Ö->nOut-1));

1927 
pTem∂©e
->
rRun
 = 
p
->rRun;

1928 
pTem∂©e
->
nOut
 = 
p
->nOut - 1;

1929 }if–
	`whîeLo›Chó≥rPr›îSub£t
(
pTem∂©e
, 
p
) ){

1932 
	`WHERETRACE
(0x80,("subset costádjustment %d,%dÅo %d,%d\n",

1933 
pTem∂©e
->
rRun
,ÖTem∂©e->
nOut
, 
p
->rRun,Ö->nOut+1));

1934 
pTem∂©e
->
rRun
 = 
p
->rRun;

1935 
pTem∂©e
->
nOut
 = 
p
->nOut + 1;

1938 
	}
}

1953 
WhîeLo›
 **
	$whîeLo›FödLes£r
(

1954 
WhîeLo›
 **
µPªv
,

1955 c⁄° 
WhîeLo›
 *
pTem∂©e


1957 
WhîeLo›
 *
p
;

1958 
p
=(*
µPªv
);Ö;ÖpPªv=&p->
pNextLo›
,Ö=*ppPrev){

1959 if–
p
->
iTab
!=
pTem∂©e
->iTab ||Ö->
iS‹tIdx
!=pTemplate->iSortIdx ){

1968 
	`as£π
–
p
->
rSëup
==0 || 
pTem∂©e
->rSetup==0

1969 || 
p
->
rSëup
==
pTem∂©e
->rSetup );

1974 
	`as£π
–
p
->
rSëup
>=
pTem∂©e
->rSetup );

1979 if–(
p
->
wsFœgs
 & 
WHERE_AUTO_INDEX
)!=0

1980 && (
pTem∂©e
->
nSkù
)==0

1981 && (
pTem∂©e
->
wsFœgs
 & 
WHERE_INDEXED
)!=0

1982 && (
pTem∂©e
->
wsFœgs
 & 
WHERE_COLUMN_EQ
)!=0

1983 && (
p
->
¥îeq
 & 
pTem∂©e
->prereq)==pTemplate->prereq

1993 if–(
p
->
¥îeq
 & 
pTem∂©e
->prereq)==p->prereq

1994 && 
p
->
rSëup
<=
pTem∂©e
->rSetup

1995 && 
p
->
rRun
<=
pTem∂©e
->rRun

1996 && 
p
->
nOut
<=
pTem∂©e
->nOut

2006 if–(
p
->
¥îeq
 & 
pTem∂©e
->prereq)==pTemplate->prereq

2007 && 
p
->
rRun
>=
pTem∂©e
->rRun

2008 && 
p
->
nOut
>=
pTem∂©e
->nOut

2010 
	`as£π
–
p
->
rSëup
>=
pTem∂©e
->rSetup );

2014  
µPªv
;

2015 
	}
}

2041 
	$whîeLo›In£π
(
WhîeLo›Buûdî
 *
pBuûdî
, 
WhîeLo›
 *
pTem∂©e
){

2042 
WhîeLo›
 **
µPªv
, *
p
;

2043 
WhîeInfo
 *
pWInfo
 = 
pBuûdî
->pWInfo;

2044 
sqlôe3
 *
db
 = 
pWInfo
->
pP¨£
->db;

2045 
rc
;

2050 if–
pBuûdî
->
pOrSë
!=0 ){

2051 if–
pTem∂©e
->
nLTîm
 ){

2052 #i‡
WHERETRACE_ENABLED


2053 
u16
 
n
 = 
pBuûdî
->
pOrSë
->n;

2054 
x
 =

2056 
	`whîeOrIn£π
(
pBuûdî
->
pOrSë
, 
pTem∂©e
->
¥îeq
,ÖTem∂©e->
rRun
,

2057 
pTem∂©e
->
nOut
);

2058 #i‡
WHERETRACE_ENABLED


2059 if–
sqlôe3WhîeTø˚
 & 0x8 ){

2060 
	`sqlôe3DebugPrötf
(
x
?" or-%d: ":" or-X: ", 
n
);

2061 
	`whîeLo›Pröt
(
pTem∂©e
, 
pBuûdî
->
pWC
);

2065  
SQLITE_OK
;

2070 
	`whîeLo›Adju°Co°
(
pWInfo
->
pLo›s
, 
pTem∂©e
);

2071 
µPªv
 = 
	`whîeLo›FödLes£r
(&
pWInfo
->
pLo›s
, 
pTem∂©e
);

2073 if–
µPªv
==0 ){

2076 #i‡
WHERETRACE_ENABLED


2077 if–
sqlôe3WhîeTø˚
 & 0x8 ){

2078 
	`sqlôe3DebugPrötf
(" skip: ");

2079 
	`whîeLo›Pröt
(
pTem∂©e
, 
pBuûdî
->
pWC
);

2082  
SQLITE_OK
;

2084 
p
 = *
µPªv
;

2091 #i‡
WHERETRACE_ENABLED


2092 if–
sqlôe3WhîeTø˚
 & 0x8 ){

2093 if–
p
!=0 ){

2094 
	`sqlôe3DebugPrötf
("replace: ");

2095 
	`whîeLo›Pröt
(
p
, 
pBuûdî
->
pWC
);

2097 
	`sqlôe3DebugPrötf
("ádd: ");

2098 
	`whîeLo›Pröt
(
pTem∂©e
, 
pBuûdî
->
pWC
);

2101 if–
p
==0 ){

2103 *
µPªv
 = 
p
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, (
WhîeLo›
));

2104 if–
p
==0 )  
SQLITE_NOMEM_BKPT
;

2105 
	`whîeLo›Inô
(
p
);

2106 
p
->
pNextLo›
 = 0;

2111 
WhîeLo›
 **
µTaû
 = &
p
->
pNextLo›
;

2112 
WhîeLo›
 *
pToDñ
;

2113  *
µTaû
 ){

2114 
µTaû
 = 
	`whîeLo›FödLes£r
’pTaû, 
pTem∂©e
);

2115 if–
µTaû
==0 ) ;

2116 
pToDñ
 = *
µTaû
;

2117 if–
pToDñ
==0 ) ;

2118 *
µTaû
 = 
pToDñ
->
pNextLo›
;

2119 #i‡
WHERETRACE_ENABLED


2120 if–
sqlôe3WhîeTø˚
 & 0x8 ){

2121 
	`sqlôe3DebugPrötf
(" delete: ");

2122 
	`whîeLo›Pröt
(
pToDñ
, 
pBuûdî
->
pWC
);

2125 
	`whîeLo›Dñëe
(
db
, 
pToDñ
);

2128 
rc
 = 
	`whîeLo›X„r
(
db
, 
p
, 
pTem∂©e
);

2129 if–(
p
->
wsFœgs
 & 
WHERE_VIRTUALTABLE
)==0 ){

2130 
Index
 *
pIndex
 = 
p
->
u
.
båì
.pIndex;

2131 if–
pIndex
 &&ÖIndex->
äum
==0 ){

2132 
p
->
u
.
båì
.
pIndex
 = 0;

2135  
rc
;

2136 
	}
}

2167 
	$whîeLo›OuçutAdju°
(

2168 
WhîeCœu£
 *
pWC
,

2169 
WhîeLo›
 *
pLo›
,

2170 
LogE°
 
nRow


2172 
WhîeTîm
 *
pTîm
, *
pX
;

2173 
Bômask
 
nŸAŒowed
 = ~(
pLo›
->
¥îeq
|pLo›->
maskSñf
);

2174 
i
, 
j
, 
k
;

2175 
LogE°
 
iRedu˚
 = 0;

2177 
	`as£π
–(
pLo›
->
wsFœgs
 & 
WHERE_AUTO_INDEX
)==0 );

2178 
i
=
pWC
->
nTîm
, 
pTîm
ıWC->
a
; i>0; i--,ÖTerm++){

2179 if–(
pTîm
->
wtFœgs
 & 
TERM_VIRTUAL
)!=0 ) ;

2180 if–(
pTîm
->
¥îeqAŒ
 & 
pLo›
->
maskSñf
)==0 ) ;

2181 if–(
pTîm
->
¥îeqAŒ
 & 
nŸAŒowed
)!=0 ) ;

2182 
j
=
pLo›
->
nLTîm
-1; j>=0; j--){

2183 
pX
 = 
pLo›
->
aLTîm
[
j
];

2184 if–
pX
==0 ) ;

2185 if–
pX
==
pTîm
 ) ;

2186 if–
pX
->
iP¨ít
>=0 && (&
pWC
->
a
[pX->iP¨ít])==
pTîm
 ) ;

2188 if–
j
<0 ){

2189 if–
pTîm
->
åuthProb
<=0 ){

2192 
pLo›
->
nOut
 +
pTîm
->
åuthProb
;

2196 
pLo›
->
nOut
--;

2197 if–
pTîm
->
eO≥øt‹
&(
WO_EQ
|
WO_IS
) ){

2198 
Ex¥
 *
pRight
 = 
pTîm
->
pEx¥
->pRight;

2199 
	`ã°ˇ£
–
pTîm
->
pEx¥
->
›
==
TK_IS
 );

2200 if–
	`sqlôe3Ex¥IsI¡egî
(
pRight
, &
k
) && k>=(-1) && k<=1 ){

2201 
k
 = 10;

2203 
k
 = 20;

2205 if–
iRedu˚
<
k
 ) iReduce = k;

2210 if–
pLo›
->
nOut
 > 
nRow
-
iRedu˚
 )ÖLoop->nOut =ÇRow - iReduce;

2211 
	}
}

2230 
	$whîeR™geVe˘‹Lí
(

2231 
P¨£
 *
pP¨£
,

2232 
iCur
,

2233 
Index
 *
pIdx
,

2234 
nEq
,

2235 
WhîeTîm
 *
pTîm


2237 
nCmp
 = 
	`sqlôe3Ex¥Ve˘‹Size
(
pTîm
->
pEx¥
->
pLe·
);

2238 
i
;

2240 
nCmp
 = 
	`MIN
“Cmp, (
pIdx
->
nCﬁumn
 - 
nEq
));

2241 
i
=1; i<
nCmp
; i++){

2244 
aff
;

2245 
idxaff
 = 0;

2246 
CﬁlSeq
 *
pCﬁl
;

2247 
Ex¥
 *
pLhs
 = 
pTîm
->
pEx¥
->
pLe·
->
x
.
pLi°
->
a
[
i
].pExpr;

2248 
Ex¥
 *
pRhs
 = 
pTîm
->
pEx¥
->
pRight
;

2249 if–
pRhs
->
Êags
 & 
EP_xIsSñe˘
 ){

2250 
pRhs
 =ÖRhs->
x
.
pSñe˘
->
pELi°
->
a
[
i
].
pEx¥
;

2252 
pRhs
 =ÖRhs->
x
.
pLi°
->
a
[
i
].
pEx¥
;

2259 if–
pLhs
->
›
!=
TK_COLUMN


2260 || 
pLhs
->
iTabÀ
!=
iCur


2261 || 
pLhs
->
iCﬁumn
!=
pIdx
->
aiCﬁumn
[
i
+
nEq
]

2262 || 
pIdx
->
aS‹tOrdî
[
i
+
nEq
]!=pIdx->aSortOrder[nEq]

2267 
	`ã°ˇ£
–
pLhs
->
iCﬁumn
==
XN_ROWID
 );

2268 
aff
 = 
	`sqlôe3Com∑ªAfföôy
(
pRhs
, 
	`sqlôe3Ex¥Afföôy
(
pLhs
));

2269 
idxaff
 = 
	`sqlôe3TabÀCﬁumnAfföôy
(
pIdx
->
pTabÀ
, 
pLhs
->
iCﬁumn
);

2270 if–
aff
!=
idxaff
 ) ;

2272 
pCﬁl
 = 
	`sqlôe3Bö¨yCom∑ªCﬁlSeq
(
pP¨£
, 
pLhs
, 
pRhs
);

2273 if–
pCﬁl
==0 ) ;

2274 if–
	`sqlôe3SåICmp
(
pCﬁl
->
zName
, 
pIdx
->
azCﬁl
[
i
+
nEq
]) ) ;

2276  
i
;

2277 
	}
}

2283 #ifde‡
SQLITE_ENABLE_COSTMULT


2284 
	#AµlyCo°Mu…ùlõr
(
C
,
T
ËC +
	)
T

2286 
	#AµlyCo°Mu…ùlõr
(
C
,
T
)

	)

2301 
	$whîeLo›AddBåìIndex
(

2302 
WhîeLo›Buûdî
 *
pBuûdî
,

2303 
SrcLi°_ôem
 *
pSrc
,

2304 
Index
 *
pProbe
,

2305 
LogE°
 
nInMul


2307 
WhîeInfo
 *
pWInfo
 = 
pBuûdî
->pWInfo;

2308 
P¨£
 *
pP¨£
 = 
pWInfo
->pParse;

2309 
sqlôe3
 *
db
 = 
pP¨£
->db;

2310 
WhîeLo›
 *
pNew
;

2311 
WhîeTîm
 *
pTîm
;

2312 
›Mask
;

2313 
WhîeSˇn
 
sˇn
;

2314 
Bômask
 
ßved_¥îeq
;

2315 
u16
 
ßved_nLTîm
;

2316 
u16
 
ßved_nEq
;

2317 
u16
 
ßved_nBtm
;

2318 
u16
 
ßved_nT›
;

2319 
u16
 
ßved_nSkù
;

2320 
u32
 
ßved_wsFœgs
;

2321 
LogE°
 
ßved_nOut
;

2322 
rc
 = 
SQLITE_OK
;

2323 
LogE°
 
rSize
;

2324 
LogE°
 
rLogSize
;

2325 
WhîeTîm
 *
pT›
 = 0, *
pBtm
 = 0;

2327 
pNew
 = 
pBuûdî
->pNew;

2328 if–
db
->
mÆlocFaûed
 )  
SQLITE_NOMEM_BKPT
;

2329 
	`WHERETRACE
(0x800, ("BEGINáddBtreeIdx(%s),ÇEq=%d\n",

2330 
pProbe
->
zName
, 
pNew
->
u
.
båì
.
nEq
));

2332 
	`as£π
–(
pNew
->
wsFœgs
 & 
WHERE_VIRTUALTABLE
)==0 );

2333 
	`as£π
–(
pNew
->
wsFœgs
 & 
WHERE_TOP_LIMIT
)==0 );

2334 if–
pNew
->
wsFœgs
 & 
WHERE_BTM_LIMIT
 ){

2335 
›Mask
 = 
WO_LT
|
WO_LE
;

2337 
	`as£π
–
pNew
->
u
.
båì
.
nBtm
==0 );

2338 
›Mask
 = 
WO_EQ
|
WO_IN
|
WO_GT
|
WO_GE
|
WO_LT
|
WO_LE
|
WO_ISNULL
|
WO_IS
;

2340 if–
pProbe
->
bUn‹dîed
 ) 
›Mask
 &~(
WO_GT
|
WO_GE
|
WO_LT
|
WO_LE
);

2342 
	`as£π
–
pNew
->
u
.
båì
.
nEq
<
pProbe
->
nCﬁumn
 );

2344 
ßved_nEq
 = 
pNew
->
u
.
båì
.
nEq
;

2345 
ßved_nBtm
 = 
pNew
->
u
.
båì
.
nBtm
;

2346 
ßved_nT›
 = 
pNew
->
u
.
båì
.
nT›
;

2347 
ßved_nSkù
 = 
pNew
->
nSkù
;

2348 
ßved_nLTîm
 = 
pNew
->
nLTîm
;

2349 
ßved_wsFœgs
 = 
pNew
->
wsFœgs
;

2350 
ßved_¥îeq
 = 
pNew
->
¥îeq
;

2351 
ßved_nOut
 = 
pNew
->
nOut
;

2352 
pTîm
 = 
	`whîeSˇnInô
(&
sˇn
, 
pBuûdî
->
pWC
, 
pSrc
->
iCurs‹
, 
ßved_nEq
,

2353 
›Mask
, 
pProbe
);

2354 
pNew
->
rSëup
 = 0;

2355 
rSize
 = 
pProbe
->
aiRowLogE°
[0];

2356 
rLogSize
 = 
	`e°Log
(
rSize
);

2357 ; 
rc
==
SQLITE_OK
 && 
pTîm
!=0;ÖTîm = 
	`whîeSˇnNext
(&
sˇn
)){

2358 
u16
 
eOp
 = 
pTîm
->
eO≥øt‹
;

2359 
LogE°
 
rCo°Idx
;

2360 
LogE°
 
nOutU«dju°ed
;

2361 
nIn
 = 0;

2362 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


2363 
nRecVÆid
 = 
pBuûdî
->nRecValid;

2365 if–(
eOp
==
WO_ISNULL
 || (
pTîm
->
wtFœgs
&
TERM_VNULL
)!=0)

2366 && 
	`ödexCﬁumnNŸNuŒ
(
pProbe
, 
ßved_nEq
)

2370 if–
pTîm
->
¥îeqRight
 & 
pNew
->
maskSñf
 ) ;

2374 if–
pTîm
->
wtFœgs
 & 
TERM_LIKEOPT
 &&ÖTîm->
eO≥øt‹
==
WO_LT
 ) ;

2379 if–(
pSrc
->
fg
.
joöty≥
 & 
JT_LEFT
)!=0

2380 && !
	`Ex¥HasPr›îty
(
pTîm
->
pEx¥
, 
EP_FromJoö
)

2381 && (
eOp
 & (
WO_IS
|
WO_ISNULL
))!=0

2383 
	`ã°ˇ£
–
eOp
 & 
WO_IS
 );

2384 
	`ã°ˇ£
–
eOp
 & 
WO_ISNULL
 );

2388 
pNew
->
wsFœgs
 = 
ßved_wsFœgs
;

2389 
pNew
->
u
.
båì
.
nEq
 = 
ßved_nEq
;

2390 
pNew
->
u
.
båì
.
nBtm
 = 
ßved_nBtm
;

2391 
pNew
->
u
.
båì
.
nT›
 = 
ßved_nT›
;

2392 
pNew
->
nLTîm
 = 
ßved_nLTîm
;

2393 if–
	`whîeLo›Resize
(
db
, 
pNew
,ÖNew->
nLTîm
+1) ) ;

2394 
pNew
->
aLTîm
[pNew->
nLTîm
++] = 
pTîm
;

2395 
pNew
->
¥îeq
 = (
ßved_¥îeq
 | 
pTîm
->
¥îeqRight
Ë& ~pNew->
maskSñf
;

2397 
	`as£π
–
nInMul
==0

2398 || (
pNew
->
wsFœgs
 & 
WHERE_COLUMN_NULL
)!=0

2399 || (
pNew
->
wsFœgs
 & 
WHERE_COLUMN_IN
)!=0

2400 || (
pNew
->
wsFœgs
 & 
WHERE_SKIPSCAN
)!=0

2403 if–
eOp
 & 
WO_IN
 ){

2404 
Ex¥
 *
pEx¥
 = 
pTîm
->pExpr;

2405 
pNew
->
wsFœgs
 |
WHERE_COLUMN_IN
;

2406 if–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
) ){

2408 
i
;

2409 
nIn
 = 46; 
	`as£π
–46==
	`sqlôe3LogE°
(25) );

2416 
i
=0; i<
pNew
->
nLTîm
-1; i++){

2417 if–
pNew
->
aLTîm
[
i
] &&ÖNew->aLTîm[i]->
pEx¥
=ıEx¥ ) 
nIn
 = 0;

2419 }if–
	`ALWAYS
(
pEx¥
->
x
.
pLi°
 &&ÖEx¥->x.pLi°->
nEx¥
) ){

2421 
nIn
 = 
	`sqlôe3LogE°
(
pEx¥
->
x
.
pLi°
->
nEx¥
);

2422 
	`as£π
–
nIn
>0 );

2425 }if–
eOp
 & (
WO_EQ
|
WO_IS
) ){

2426 
iCﬁ
 = 
pProbe
->
aiCﬁumn
[
ßved_nEq
];

2427 
pNew
->
wsFœgs
 |
WHERE_COLUMN_EQ
;

2428 
	`as£π
–
ßved_nEq
==
pNew
->
u
.
båì
.
nEq
 );

2429 if–
iCﬁ
==
XN_ROWID


2430 || (
iCﬁ
>0 && 
nInMul
==0 && 
ßved_nEq
==
pProbe
->
nKeyCﬁ
-1)

2432 if–
iCﬁ
>=0 && 
pProbe
->
uniqNŸNuŒ
==0 ){

2433 
pNew
->
wsFœgs
 |
WHERE_UNQ_WANTED
;

2435 
pNew
->
wsFœgs
 |
WHERE_ONEROW
;

2438 }if–
eOp
 & 
WO_ISNULL
 ){

2439 
pNew
->
wsFœgs
 |
WHERE_COLUMN_NULL
;

2440 }if–
eOp
 & (
WO_GT
|
WO_GE
) ){

2441 
	`ã°ˇ£
–
eOp
 & 
WO_GT
 );

2442 
	`ã°ˇ£
–
eOp
 & 
WO_GE
 );

2443 
pNew
->
wsFœgs
 |
WHERE_COLUMN_RANGE
|
WHERE_BTM_LIMIT
;

2444 
pNew
->
u
.
båì
.
nBtm
 = 
	`whîeR™geVe˘‹Lí
(

2445 
pP¨£
, 
pSrc
->
iCurs‹
, 
pProbe
, 
ßved_nEq
, 
pTîm


2447 
pBtm
 = 
pTîm
;

2448 
pT›
 = 0;

2449 if–
pTîm
->
wtFœgs
 & 
TERM_LIKEOPT
 ){

2452 
pT›
 = &
pTîm
[1];

2453 
	`as£π
–(
pT›
-(
pTîm
->
pWC
->
a
))<pTîm->pWC->
nTîm
 );

2454 
	`as£π
–
pT›
->
wtFœgs
 & 
TERM_LIKEOPT
 );

2455 
	`as£π
–
pT›
->
eO≥øt‹
==
WO_LT
 );

2456 if–
	`whîeLo›Resize
(
db
, 
pNew
,ÖNew->
nLTîm
+1) ) ;

2457 
pNew
->
aLTîm
[pNew->
nLTîm
++] = 
pT›
;

2458 
pNew
->
wsFœgs
 |
WHERE_TOP_LIMIT
;

2459 
pNew
->
u
.
båì
.
nT›
 = 1;

2462 
	`as£π
–
eOp
 & (
WO_LT
|
WO_LE
) );

2463 
	`ã°ˇ£
–
eOp
 & 
WO_LT
 );

2464 
	`ã°ˇ£
–
eOp
 & 
WO_LE
 );

2465 
pNew
->
wsFœgs
 |
WHERE_COLUMN_RANGE
|
WHERE_TOP_LIMIT
;

2466 
pNew
->
u
.
båì
.
nT›
 = 
	`whîeR™geVe˘‹Lí
(

2467 
pP¨£
, 
pSrc
->
iCurs‹
, 
pProbe
, 
ßved_nEq
, 
pTîm


2469 
pT›
 = 
pTîm
;

2470 
pBtm
 = (
pNew
->
wsFœgs
 & 
WHERE_BTM_LIMIT
)!=0 ?

2471 
pNew
->
aLTîm
[pNew->
nLTîm
-2] : 0;

2479 
	`as£π
–
pNew
->
nOut
==
ßved_nOut
 );

2480 if–
pNew
->
wsFœgs
 & 
WHERE_COLUMN_RANGE
 ){

2483 
	`whîeR™geSˇnE°
(
pP¨£
, 
pBuûdî
, 
pBtm
, 
pT›
, 
pNew
);

2485 
nEq
 = ++
pNew
->
u
.
båì
.nEq;

2486 
	`as£π
–
eOp
 & (
WO_ISNULL
|
WO_EQ
|
WO_IN
|
WO_IS
) );

2488 
	`as£π
–
pNew
->
nOut
==
ßved_nOut
 );

2489 if–
pTîm
->
åuthProb
<=0 && 
pProbe
->
aiCﬁumn
[
ßved_nEq
]>=0 ){

2490 
	`as£π
–(
eOp
 & 
WO_IN
Ë|| 
nIn
==0 );

2491 
	`ã°ˇ£
–
eOp
 & 
WO_IN
 );

2492 
pNew
->
nOut
 +
pTîm
->
åuthProb
;

2493 
pNew
->
nOut
 -
nIn
;

2495 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


2496 
tRow˙t
 
nOut
 = 0;

2497 if–
nInMul
==0

2498 && 
pProbe
->
nSam∂e


2499 && 
pNew
->
u
.
båì
.
nEq
<=
pProbe
->
nSam∂eCﬁ


2500 && ((
eOp
 & 
WO_IN
)==0 || !
	`Ex¥HasPr›îty
(
pTîm
->
pEx¥
, 
EP_xIsSñe˘
))

2502 
Ex¥
 *
pEx¥
 = 
pTîm
->pExpr;

2503 if–(
eOp
 & (
WO_EQ
|
WO_ISNULL
|
WO_IS
))!=0 ){

2504 
	`ã°ˇ£
–
eOp
 & 
WO_EQ
 );

2505 
	`ã°ˇ£
–
eOp
 & 
WO_IS
 );

2506 
	`ã°ˇ£
–
eOp
 & 
WO_ISNULL
 );

2507 
rc
 = 
	`whîeEquÆSˇnE°
(
pP¨£
, 
pBuûdî
, 
pEx¥
->
pRight
, &
nOut
);

2509 
rc
 = 
	`whîeInSˇnE°
(
pP¨£
, 
pBuûdî
, 
pEx¥
->
x
.
pLi°
, &
nOut
);

2511 if–
rc
==
SQLITE_NOTFOUND
 )Ñ¯
SQLITE_OK
;

2512 if–
rc
!=
SQLITE_OK
 ) ;

2513 if–
nOut
 ){

2514 
pNew
->
nOut
 = 
	`sqlôe3LogE°
(nOut);

2515 if–
pNew
->
nOut
>
ßved_nOut
 )ÖNew->nOut = saved_nOut;

2516 
pNew
->
nOut
 -
nIn
;

2519 if–
nOut
==0 )

2522 
pNew
->
nOut
 +(
pProbe
->
aiRowLogE°
[
nEq
] -ÖProbe->aiRowLogEst[nEq-1]);

2523 if–
eOp
 & 
WO_ISNULL
 ){

2527 
pNew
->
nOut
 += 10;

2537 
rCo°Idx
 = 
pNew
->
nOut
 + 1 + (15*
pProbe
->
szIdxRow
)/
pSrc
->
pTab
->
szTabRow
;

2538 
pNew
->
rRun
 = 
	`sqlôe3LogE°Add
(
rLogSize
, 
rCo°Idx
);

2539 if–(
pNew
->
wsFœgs
 & (
WHERE_IDX_ONLY
|
WHERE_IPK
))==0 ){

2540 
pNew
->
rRun
 = 
	`sqlôe3LogE°Add
’New->rRun,ÖNew->
nOut
 + 16);

2542 
	`AµlyCo°Mu…ùlõr
(
pNew
->
rRun
, 
pProbe
->
pTabÀ
->
co°Mu…
);

2544 
nOutU«dju°ed
 = 
pNew
->
nOut
;

2545 
pNew
->
rRun
 +
nInMul
 + 
nIn
;

2546 
pNew
->
nOut
 +
nInMul
 + 
nIn
;

2547 
	`whîeLo›OuçutAdju°
(
pBuûdî
->
pWC
, 
pNew
, 
rSize
);

2548 
rc
 = 
	`whîeLo›In£π
(
pBuûdî
, 
pNew
);

2550 if–
pNew
->
wsFœgs
 & 
WHERE_COLUMN_RANGE
 ){

2551 
pNew
->
nOut
 = 
ßved_nOut
;

2553 
pNew
->
nOut
 = 
nOutU«dju°ed
;

2556 if–(
pNew
->
wsFœgs
 & 
WHERE_TOP_LIMIT
)==0

2557 && 
pNew
->
u
.
båì
.
nEq
<
pProbe
->
nCﬁumn


2559 
	`whîeLo›AddBåìIndex
(
pBuûdî
, 
pSrc
, 
pProbe
, 
nInMul
+
nIn
);

2561 
pNew
->
nOut
 = 
ßved_nOut
;

2562 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


2563 
pBuûdî
->
nRecVÆid
 =ÇRecValid;

2566 
pNew
->
¥îeq
 = 
ßved_¥îeq
;

2567 
pNew
->
u
.
båì
.
nEq
 = 
ßved_nEq
;

2568 
pNew
->
u
.
båì
.
nBtm
 = 
ßved_nBtm
;

2569 
pNew
->
u
.
båì
.
nT›
 = 
ßved_nT›
;

2570 
pNew
->
nSkù
 = 
ßved_nSkù
;

2571 
pNew
->
wsFœgs
 = 
ßved_wsFœgs
;

2572 
pNew
->
nOut
 = 
ßved_nOut
;

2573 
pNew
->
nLTîm
 = 
ßved_nLTîm
;

2585 
	`as£π
–42==
	`sqlôe3LogE°
(18) );

2586 if–
ßved_nEq
==
ßved_nSkù


2587 && 
ßved_nEq
+1<
pProbe
->
nKeyCﬁ


2588 && 
pProbe
->
noSkùSˇn
==0

2589 && 
pProbe
->
aiRowLogE°
[
ßved_nEq
+1]>=42

2590 && (
rc
 = 
	`whîeLo›Resize
(
db
, 
pNew
,ÖNew->
nLTîm
+1))==
SQLITE_OK


2592 
LogE°
 
nIãr
;

2593 
pNew
->
u
.
båì
.
nEq
++;

2594 
pNew
->
nSkù
++;

2595 
pNew
->
aLTîm
[pNew->
nLTîm
++] = 0;

2596 
pNew
->
wsFœgs
 |
WHERE_SKIPSCAN
;

2597 
nIãr
 = 
pProbe
->
aiRowLogE°
[
ßved_nEq
] -ÖProbe->aiRowLogEst[saved_nEq+1];

2598 
pNew
->
nOut
 -
nIãr
;

2601 
nIãr
 += 5;

2602 
	`whîeLo›AddBåìIndex
(
pBuûdî
, 
pSrc
, 
pProbe
, 
nIãr
 + 
nInMul
);

2603 
pNew
->
nOut
 = 
ßved_nOut
;

2604 
pNew
->
u
.
båì
.
nEq
 = 
ßved_nEq
;

2605 
pNew
->
nSkù
 = 
ßved_nSkù
;

2606 
pNew
->
wsFœgs
 = 
ßved_wsFœgs
;

2609 
	`WHERETRACE
(0x800, ("ENDáddBtreeIdx(%s),ÇEq=%d,Ñc=%d\n",

2610 
pProbe
->
zName
, 
ßved_nEq
, 
rc
));

2611  
rc
;

2612 
	}
}

2622 
	$ödexMightHñpWôhOrdîBy
(

2623 
WhîeLo›Buûdî
 *
pBuûdî
,

2624 
Index
 *
pIndex
,

2625 
iCurs‹


2627 
Ex¥Li°
 *
pOB
;

2628 
Ex¥Li°
 *
aCﬁEx¥
;

2629 
ii
, 
jj
;

2631 if–
pIndex
->
bUn‹dîed
 )  0;

2632 if–(
pOB
 = 
pBuûdî
->
pWInfo
->
pOrdîBy
)==0 )  0;

2633 
ii
=0; ii<
pOB
->
nEx¥
; ii++){

2634 
Ex¥
 *
pEx¥
 = 
	`sqlôe3Ex¥SkùCﬁœã
(
pOB
->
a
[
ii
].pExpr);

2635 if–
pEx¥
->
›
==
TK_COLUMN
 &&ÖEx¥->
iTabÀ
==
iCurs‹
 ){

2636 if–
pEx¥
->
iCﬁumn
<0 )  1;

2637 
jj
=0; jj<
pIndex
->
nKeyCﬁ
; jj++){

2638 if–
pEx¥
->
iCﬁumn
==
pIndex
->
aiCﬁumn
[
jj
] )  1;

2640 }if–(
aCﬁEx¥
 = 
pIndex
->aColExpr)!=0 ){

2641 
jj
=0; jj<
pIndex
->
nKeyCﬁ
; jj++){

2642 if–
pIndex
->
aiCﬁumn
[
jj
]!=
XN_EXPR
 ) ;

2643 if–
	`sqlôe3Ex¥Com∑ª
(
pEx¥
,
aCﬁEx¥
->
a
[
jj
].pEx¥,
iCurs‹
)==0 ){

2650 
	}
}

2656 
Bômask
 
	$cﬁumnsInIndex
(
Index
 *
pIdx
){

2657 
Bômask
 
m
 = 0;

2658 
j
;

2659 
j
=
pIdx
->
nCﬁumn
-1; j>=0; j--){

2660 
x
 = 
pIdx
->
aiCﬁumn
[
j
];

2661 if–
x
>=0 ){

2662 
	`ã°ˇ£
–
x
==
BMS
-1 );

2663 
	`ã°ˇ£
–
x
==
BMS
-2 );

2664 if–
x
<
BMS
-1 ) 
m
 |
	`MASKBIT
(x);

2667  
m
;

2668 
	}
}

2673 
	$whîeUßbÀP¨tülIndex
(
iTab
, 
WhîeCœu£
 *
pWC
, 
Ex¥
 *
pWhîe
){

2674 
i
;

2675 
WhîeTîm
 *
pTîm
;

2676  
pWhîe
->
›
==
TK_AND
 ){

2677 if–!
	`whîeUßbÀP¨tülIndex
(
iTab
,
pWC
,
pWhîe
->
pLe·
) )  0;

2678 
pWhîe
 =ÖWhîe->
pRight
;

2680 
i
=0, 
pTîm
=
pWC
->
a
; i<pWC->
nTîm
; i++,ÖTerm++){

2681 
Ex¥
 *
pEx¥
 = 
pTîm
->pExpr;

2682 if–
	`sqlôe3Ex¥Im∂õsEx¥
(
pEx¥
, 
pWhîe
, 
iTab
)

2683 && (!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_FromJoö
Ë||ÖEx¥->
iRightJoöTabÀ
==
iTab
)

2689 
	}
}

2727 
	$whîeLo›AddBåì
(

2728 
WhîeLo›Buûdî
 *
pBuûdî
,

2729 
Bômask
 
mPªªq


2731 
WhîeInfo
 *
pWInfo
;

2732 
Index
 *
pProbe
;

2733 
Index
 
sPk
;

2734 
LogE°
 
aiRowE°Pk
[2];

2735 
i16
 
aiCﬁumnPk
 = -1;

2736 
SrcLi°
 *
pTabLi°
;

2737 
SrcLi°_ôem
 *
pSrc
;

2738 
WhîeLo›
 *
pNew
;

2739 
rc
 = 
SQLITE_OK
;

2740 
iS‹tIdx
 = 1;

2741 
b
;

2742 
LogE°
 
rSize
;

2743 
LogE°
 
rLogSize
;

2744 
WhîeCœu£
 *
pWC
;

2745 
TabÀ
 *
pTab
;

2747 
pNew
 = 
pBuûdî
->pNew;

2748 
pWInfo
 = 
pBuûdî
->pWInfo;

2749 
pTabLi°
 = 
pWInfo
->pTabList;

2750 
pSrc
 = 
pTabLi°
->
a
 + 
pNew
->
iTab
;

2751 
pTab
 = 
pSrc
->pTab;

2752 
pWC
 = 
pBuûdî
->pWC;

2753 
	`as£π
–!
	`IsVútuÆ
(
pSrc
->
pTab
) );

2755 if–
pSrc
->
pIBIndex
 ){

2757 
pProbe
 = 
pSrc
->
pIBIndex
;

2758 }if–!
	`HasRowid
(
pTab
) ){

2759 
pProbe
 = 
pTab
->
pIndex
;

2765 
Index
 *
pFú°
;

2766 
	`mem£t
(&
sPk
, 0, (
Index
));

2767 
sPk
.
nKeyCﬁ
 = 1;

2768 
sPk
.
nCﬁumn
 = 1;

2769 
sPk
.
aiCﬁumn
 = &
aiCﬁumnPk
;

2770 
sPk
.
aiRowLogE°
 = 
aiRowE°Pk
;

2771 
sPk
.
⁄Eº‹
 = 
OE_Rïœ˚
;

2772 
sPk
.
pTabÀ
 = 
pTab
;

2773 
sPk
.
szIdxRow
 = 
pTab
->
szTabRow
;

2774 
aiRowE°Pk
[0] = 
pTab
->
nRowLogE°
;

2775 
aiRowE°Pk
[1] = 0;

2776 
pFú°
 = 
pSrc
->
pTab
->
pIndex
;

2777 if–
pSrc
->
fg
.
nŸIndexed
==0 ){

2780 
sPk
.
pNext
 = 
pFú°
;

2782 
pProbe
 = &
sPk
;

2784 
rSize
 = 
pTab
->
nRowLogE°
;

2785 
rLogSize
 = 
	`e°Log
(
rSize
);

2787 #i‚de‡
SQLITE_OMIT_AUTOMATIC_INDEX


2789 if–!
pBuûdî
->
pOrSë


2790 && (
pWInfo
->
w˘æFœgs
 & 
WHERE_OR_SUBCLAUSE
)==0

2791 && (
pWInfo
->
pP¨£
->
db
->
Êags
 & 
SQLITE_AutoIndex
)!=0

2792 && 
pSrc
->
pIBIndex
==0

2793 && !
pSrc
->
fg
.
nŸIndexed


2794 && 
	`HasRowid
(
pTab
)

2795 && !
pSrc
->
fg
.
isC‹ªœãd


2796 && !
pSrc
->
fg
.
isRecursive


2799 
WhîeTîm
 *
pTîm
;

2800 
WhîeTîm
 *
pWCEnd
 = 
pWC
->
a
 +ÖWC->
nTîm
;

2801 
pTîm
=
pWC
->
a
; 
rc
==
SQLITE_OK
 &&ÖTîm<
pWCEnd
;ÖTerm++){

2802 if–
pTîm
->
¥îeqRight
 & 
pNew
->
maskSñf
 ) ;

2803 if–
	`ãrmC™DriveIndex
(
pTîm
, 
pSrc
, 0) ){

2804 
pNew
->
u
.
båì
.
nEq
 = 1;

2805 
pNew
->
nSkù
 = 0;

2806 
pNew
->
u
.
båì
.
pIndex
 = 0;

2807 
pNew
->
nLTîm
 = 1;

2808 
pNew
->
aLTîm
[0] = 
pTîm
;

2817 
pNew
->
rSëup
 = 
rLogSize
 + 
rSize
 + 4;

2818 if–
pTab
->
pSñe˘
==0 && (pTab->
èbFœgs
 & 
TF_EphemîÆ
)==0 ){

2819 
pNew
->
rSëup
 += 24;

2821 
	`AµlyCo°Mu…ùlõr
(
pNew
->
rSëup
, 
pTab
->
co°Mu…
);

2822 if–
pNew
->
rSëup
<0 )ÖNew->rSetup = 0;

2827 
pNew
->
nOut
 = 43; 
	`as£π
–43==
	`sqlôe3LogE°
(20) );

2828 
pNew
->
rRun
 = 
	`sqlôe3LogE°Add
(
rLogSize
,pNew->
nOut
);

2829 
pNew
->
wsFœgs
 = 
WHERE_AUTO_INDEX
;

2830 
pNew
->
¥îeq
 = 
mPªªq
 | 
pTîm
->
¥îeqRight
;

2831 
rc
 = 
	`whîeLo›In£π
(
pBuûdî
, 
pNew
);

2839 ; 
rc
==
SQLITE_OK
 && 
pProbe
;ÖProbeıProbe->
pNext
, 
iS‹tIdx
++){

2840 if–
pProbe
->
pP¨tIdxWhîe
!=0

2841 && !
	`whîeUßbÀP¨tülIndex
(
pSrc
->
iCurs‹
, 
pWC
, 
pProbe
->
pP¨tIdxWhîe
) ){

2842 
	`ã°ˇ£
–
pNew
->
iTab
!=
pSrc
->
iCurs‹
 );

2845 
rSize
 = 
pProbe
->
aiRowLogE°
[0];

2846 
pNew
->
u
.
båì
.
nEq
 = 0;

2847 
pNew
->
u
.
båì
.
nBtm
 = 0;

2848 
pNew
->
u
.
båì
.
nT›
 = 0;

2849 
pNew
->
nSkù
 = 0;

2850 
pNew
->
nLTîm
 = 0;

2851 
pNew
->
iS‹tIdx
 = 0;

2852 
pNew
->
rSëup
 = 0;

2853 
pNew
->
¥îeq
 = 
mPªªq
;

2854 
pNew
->
nOut
 = 
rSize
;

2855 
pNew
->
u
.
båì
.
pIndex
 = 
pProbe
;

2856 
b
 = 
	`ödexMightHñpWôhOrdîBy
(
pBuûdî
, 
pProbe
, 
pSrc
->
iCurs‹
);

2858 
	`as£π
–(
pWInfo
->
w˘æFœgs
 & 
WHERE_ONEPASS_DESIRED
)==0 || 
b
==0 );

2859 if–
pProbe
->
äum
<=0 ){

2861 
pNew
->
wsFœgs
 = 
WHERE_IPK
;

2864 
pNew
->
iS‹tIdx
 = 
b
 ? iSortIdx : 0;

2866 
pNew
->
rRun
 = 
rSize
 + 16;

2867 
	`AµlyCo°Mu…ùlõr
(
pNew
->
rRun
, 
pTab
->
co°Mu…
);

2868 
	`whîeLo›OuçutAdju°
(
pWC
, 
pNew
, 
rSize
);

2869 
rc
 = 
	`whîeLo›In£π
(
pBuûdî
, 
pNew
);

2870 
pNew
->
nOut
 = 
rSize
;

2871 if–
rc
 ) ;

2873 
Bômask
 
m
;

2874 if–
pProbe
->
isCovîög
 ){

2875 
pNew
->
wsFœgs
 = 
WHERE_IDX_ONLY
 | 
WHERE_INDEXED
;

2876 
m
 = 0;

2878 
m
 = 
pSrc
->
cﬁU£d
 & ~
	`cﬁumnsInIndex
(
pProbe
);

2879 
pNew
->
wsFœgs
 = (
m
==0Ë? (
WHERE_IDX_ONLY
|
WHERE_INDEXED
) : WHERE_INDEXED;

2883 if–
b


2884 || !
	`HasRowid
(
pTab
)

2885 || 
pProbe
->
pP¨tIdxWhîe
!=0

2886 || ( 
m
==0

2887 && 
pProbe
->
bUn‹dîed
==0

2888 && (
pProbe
->
szIdxRow
<
pTab
->
szTabRow
)

2889 && (
pWInfo
->
w˘æFœgs
 & 
WHERE_ONEPASS_DESIRED
)==0

2890 && 
sqlôe3GlobÆC⁄fig
.
bU£Cis


2891 && 
	`O±imiz©i⁄E«bÀd
(
pWInfo
->
pP¨£
->
db
, 
SQLITE_CovîIdxSˇn
)

2894 
pNew
->
iS‹tIdx
 = 
b
 ? iSortIdx : 0;

2899 
pNew
->
rRun
 = 
rSize
 + 1 + (15*
pProbe
->
szIdxRow
)/
pTab
->
szTabRow
;

2900 if–
m
!=0 ){

2906 
LogE°
 
nLookup
 = 
rSize
 + 16;

2907 
ii
;

2908 
iCur
 = 
pSrc
->
iCurs‹
;

2909 
WhîeCœu£
 *
pWC2
 = &
pWInfo
->
sWC
;

2910 
ii
=0; ii<
pWC2
->
nTîm
; ii++){

2911 
WhîeTîm
 *
pTîm
 = &
pWC2
->
a
[
ii
];

2912 if–!
	`sqlôe3Ex¥CovîedByIndex
(
pTîm
->
pEx¥
, 
iCur
, 
pProbe
) ){

2917 if–
pTîm
->
åuthProb
<=0 ){

2918 
nLookup
 +
pTîm
->
åuthProb
;

2920 
nLookup
--;

2921 if–
pTîm
->
eO≥øt‹
 & (
WO_EQ
|
WO_IS
ËË
nLookup
 -= 19;

2925 
pNew
->
rRun
 = 
	`sqlôe3LogE°Add
’New->rRun, 
nLookup
);

2927 
	`AµlyCo°Mu…ùlõr
(
pNew
->
rRun
, 
pTab
->
co°Mu…
);

2928 
	`whîeLo›OuçutAdju°
(
pWC
, 
pNew
, 
rSize
);

2929 
rc
 = 
	`whîeLo›In£π
(
pBuûdî
, 
pNew
);

2930 
pNew
->
nOut
 = 
rSize
;

2931 if–
rc
 ) ;

2935 
rc
 = 
	`whîeLo›AddBåìIndex
(
pBuûdî
, 
pSrc
, 
pProbe
, 0);

2936 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


2937 
	`sqlôe3Sèt4ProbeFªe
(
pBuûdî
->
pRec
);

2938 
pBuûdî
->
nRecVÆid
 = 0;

2939 
pBuûdî
->
pRec
 = 0;

2944 if–
pSrc
->
pIBIndex
 ) ;

2946  
rc
;

2947 
	}
}

2949 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


2971 
	$whîeLo›AddVútuÆO√
(

2972 
WhîeLo›Buûdî
 *
pBuûdî
,

2973 
Bômask
 
mPªªq
,

2974 
Bômask
 
mUßbÀ
,

2975 
u16
 
mEx˛ude
,

2976 
sqlôe3_ödex_öfo
 *
pIdxInfo
,

2977 
u16
 
mNoOmô
,

2978 *
pbIn


2980 
WhîeCœu£
 *
pWC
 = 
pBuûdî
->pWC;

2981 
sqlôe3_ödex_c⁄°øöt
 *
pIdxC⁄s
;

2982 
sqlôe3_ödex_c⁄°øöt_ußge
 *
pUßge
 = 
pIdxInfo
->
aC⁄°øötUßge
;

2983 
i
;

2984 
mxTîm
;

2985 
rc
 = 
SQLITE_OK
;

2986 
WhîeLo›
 *
pNew
 = 
pBuûdî
->pNew;

2987 
P¨£
 *
pP¨£
 = 
pBuûdî
->
pWInfo
->pParse;

2988 
SrcLi°_ôem
 *
pSrc
 = &
pBuûdî
->
pWInfo
->
pTabLi°
->
a
[
pNew
->
iTab
];

2989 
nC⁄°øöt
 = 
pIdxInfo
->nConstraint;

2991 
	`as£π
–(
mUßbÀ
 & 
mPªªq
)==mPrereq );

2992 *
pbIn
 = 0;

2993 
pNew
->
¥îeq
 = 
mPªªq
;

2997 
pIdxC⁄s
 = *(
sqlôe3_ödex_c⁄°øöt
**)&
pIdxInfo
->
aC⁄°øöt
;

2998 
i
=0; i<
nC⁄°øöt
; i++, 
pIdxC⁄s
++){

2999 
WhîeTîm
 *
pTîm
 = &
pWC
->
a
[
pIdxC⁄s
->
iTîmOff£t
];

3000 
pIdxC⁄s
->
ußbÀ
 = 0;

3001 if–(
pTîm
->
¥îeqRight
 & 
mUßbÀ
)==pTerm->prereqRight

3002 && (
pTîm
->
eO≥øt‹
 & 
mEx˛ude
)==0

3004 
pIdxC⁄s
->
ußbÀ
 = 1;

3009 
	`mem£t
(
pUßge
, 0, ’Ußge[0])*
nC⁄°øöt
);

3010 
	`as£π
–
pIdxInfo
->
√edToFªeIdxSå
==0 );

3011 
pIdxInfo
->
idxSå
 = 0;

3012 
pIdxInfo
->
idxNum
 = 0;

3013 
pIdxInfo
->
‹dîByC⁄sumed
 = 0;

3014 
pIdxInfo
->
e°im©edCo°
 = 
SQLITE_BIG_DBL
 / ()2;

3015 
pIdxInfo
->
e°im©edRows
 = 25;

3016 
pIdxInfo
->
idxFœgs
 = 0;

3017 
pIdxInfo
->
cﬁU£d
 = (
sqlôe3_öt64
)
pSrc
->colUsed;

3020 
rc
 = 
	`vèbBe°Index
(
pP¨£
, 
pSrc
->
pTab
, 
pIdxInfo
);

3021 if–
rc
 ) Ñc;

3023 
mxTîm
 = -1;

3024 
	`as£π
–
pNew
->
nLSlŸ
>=
nC⁄°øöt
 );

3025 
i
=0; i<
nC⁄°øöt
; i++Ë
pNew
->
aLTîm
[i] = 0;

3026 
pNew
->
u
.
vèb
.
omôMask
 = 0;

3027 
pIdxC⁄s
 = *(
sqlôe3_ödex_c⁄°øöt
**)&
pIdxInfo
->
aC⁄°øöt
;

3028 
i
=0; i<
nC⁄°øöt
; i++, 
pIdxC⁄s
++){

3029 
iTîm
;

3030 if–(
iTîm
 = 
pUßge
[
i
].
¨gvIndex
 - 1)>=0 ){

3031 
WhîeTîm
 *
pTîm
;

3032 
j
 = 
pIdxC⁄s
->
iTîmOff£t
;

3033 if–
iTîm
>=
nC⁄°øöt


3034 || 
j
<0

3035 || 
j
>=
pWC
->
nTîm


3036 || 
pNew
->
aLTîm
[
iTîm
]!=0

3037 || 
pIdxC⁄s
->
ußbÀ
==0

3039 
rc
 = 
SQLITE_ERROR
;

3040 
	`sqlôe3Eº‹Msg
(
pP¨£
,"%s.xBe°Index mÆfun˘i⁄",
pSrc
->
pTab
->
zName
);

3041  
rc
;

3043 
	`ã°ˇ£
–
iTîm
==
nC⁄°øöt
-1 );

3044 
	`ã°ˇ£
–
j
==0 );

3045 
	`ã°ˇ£
–
j
==
pWC
->
nTîm
-1 );

3046 
pTîm
 = &
pWC
->
a
[
j
];

3047 
pNew
->
¥îeq
 |
pTîm
->
¥îeqRight
;

3048 
	`as£π
–
iTîm
<
pNew
->
nLSlŸ
 );

3049 
pNew
->
aLTîm
[
iTîm
] = 
pTîm
;

3050 if–
iTîm
>
mxTîm
 ) mxTerm = iTerm;

3051 
	`ã°ˇ£
–
iTîm
==15 );

3052 
	`ã°ˇ£
–
iTîm
==16 );

3053 if–
iTîm
<16 && 
pUßge
[
i
].
omô
 ) 
pNew
->
u
.
vèb
.
omôMask
 |= 1<<iTerm;

3054 if–(
pTîm
->
eO≥øt‹
 & 
WO_IN
)!=0 ){

3060 
pIdxInfo
->
‹dîByC⁄sumed
 = 0;

3061 
pIdxInfo
->
idxFœgs
 &~
SQLITE_INDEX_SCAN_UNIQUE
;

3062 *
pbIn
 = 1; 
	`as£π
–(
mEx˛ude
 & 
WO_IN
)==0 );

3066 
pNew
->
u
.
vèb
.
omôMask
 &~
mNoOmô
;

3068 
pNew
->
nLTîm
 = 
mxTîm
+1;

3069 
	`as£π
–
pNew
->
nLTîm
<ıNew->
nLSlŸ
 );

3070 
pNew
->
u
.
vèb
.
idxNum
 = 
pIdxInfo
->idxNum;

3071 
pNew
->
u
.
vèb
.
√edFªe
 = 
pIdxInfo
->
√edToFªeIdxSå
;

3072 
pIdxInfo
->
√edToFªeIdxSå
 = 0;

3073 
pNew
->
u
.
vèb
.
idxSå
 = 
pIdxInfo
->idxStr;

3074 
pNew
->
u
.
vèb
.
isOrdîed
 = (
i8
)(
pIdxInfo
->
‹dîByC⁄sumed
 ?

3075 
pIdxInfo
->
nOrdîBy
 : 0);

3076 
pNew
->
rSëup
 = 0;

3077 
pNew
->
rRun
 = 
	`sqlôe3LogE°FromDoubÀ
(
pIdxInfo
->
e°im©edCo°
);

3078 
pNew
->
nOut
 = 
	`sqlôe3LogE°
(
pIdxInfo
->
e°im©edRows
);

3082 if–
pIdxInfo
->
idxFœgs
 & 
SQLITE_INDEX_SCAN_UNIQUE
 ){

3083 
pNew
->
wsFœgs
 |
WHERE_ONEROW
;

3085 
pNew
->
wsFœgs
 &~
WHERE_ONEROW
;

3087 
rc
 = 
	`whîeLo›In£π
(
pBuûdî
, 
pNew
);

3088 if–
pNew
->
u
.
vèb
.
√edFªe
 ){

3089 
	`sqlôe3_‰ì
(
pNew
->
u
.
vèb
.
idxSå
);

3090 
pNew
->
u
.
vèb
.
√edFªe
 = 0;

3092 
	`WHERETRACE
(0xffff, (" bIn=%dÖrereqIn=%04llxÖrereqOut=%04llx\n",

3093 *
pbIn
, (
sqlôe3_uöt64
)
mPªªq
,

3094 (
sqlôe3_uöt64
)(
pNew
->
¥îeq
 & ~
mPªªq
)));

3096  
rc
;

3097 
	}
}

3125 
	$whîeLo›AddVútuÆ
(

3126 
WhîeLo›Buûdî
 *
pBuûdî
,

3127 
Bômask
 
mPªªq
,

3128 
Bômask
 
mUnußbÀ


3130 
rc
 = 
SQLITE_OK
;

3131 
WhîeInfo
 *
pWInfo
;

3132 
P¨£
 *
pP¨£
;

3133 
WhîeCœu£
 *
pWC
;

3134 
SrcLi°_ôem
 *
pSrc
;

3135 
sqlôe3_ödex_öfo
 *
p
;

3136 
nC⁄°øöt
;

3137 
bIn
;

3138 
WhîeLo›
 *
pNew
;

3139 
Bômask
 
mBe°
;

3140 
u16
 
mNoOmô
;

3142 
	`as£π
–(
mPªªq
 & 
mUnußbÀ
)==0 );

3143 
pWInfo
 = 
pBuûdî
->pWInfo;

3144 
pP¨£
 = 
pWInfo
->pParse;

3145 
pWC
 = 
pBuûdî
->pWC;

3146 
pNew
 = 
pBuûdî
->pNew;

3147 
pSrc
 = &
pWInfo
->
pTabLi°
->
a
[
pNew
->
iTab
];

3148 
	`as£π
–
	`IsVútuÆ
(
pSrc
->
pTab
) );

3149 
p
 = 
	`ÆloˇãIndexInfo
(
pP¨£
, 
pWC
, 
mUnußbÀ
, 
pSrc
, 
pBuûdî
->
pOrdîBy
,

3150 &
mNoOmô
);

3151 if–
p
==0 )  
SQLITE_NOMEM_BKPT
;

3152 
pNew
->
rSëup
 = 0;

3153 
pNew
->
wsFœgs
 = 
WHERE_VIRTUALTABLE
;

3154 
pNew
->
nLTîm
 = 0;

3155 
pNew
->
u
.
vèb
.
√edFªe
 = 0;

3156 
nC⁄°øöt
 = 
p
->nConstraint;

3157 if–
	`whîeLo›Resize
(
pP¨£
->
db
, 
pNew
, 
nC⁄°øöt
) ){

3158 
	`sqlôe3DbFªe
(
pP¨£
->
db
, 
p
);

3159  
SQLITE_NOMEM_BKPT
;

3163 
	`WHERETRACE
(0x40, (" VirtualOne:áll usable\n"));

3164 
rc
 = 
	`whîeLo›AddVútuÆO√
(
pBuûdî
, 
mPªªq
, 
ALLBITS
, 0, 
p
, 
mNoOmô
, &
bIn
);

3171 if–
rc
==
SQLITE_OK
 && (
mBe°
 = (
pNew
->
¥îeq
 & ~
mPªªq
))!=0 ){

3172 
£íZîo
 = 0;

3173 
£íZîoNoIN
 = 0;

3174 
Bômask
 
mPªv
 = 0;

3175 
Bômask
 
mBe°NoIn
 = 0;

3179 if–
bIn
 ){

3180 
	`WHERETRACE
(0x40, (" VirtualOne:áll usable w/o IN\n"));

3181 
rc
 = 
	`whîeLo›AddVútuÆO√
(

3182 
pBuûdî
, 
mPªªq
, 
ALLBITS
, 
WO_IN
, 
p
, 
mNoOmô
, &
bIn
);

3183 
	`as£π
–
bIn
==0 );

3184 
mBe°NoIn
 = 
pNew
->
¥îeq
 & ~
mPªªq
;

3185 if–
mBe°NoIn
==0 ){

3186 
£íZîo
 = 1;

3187 
£íZîoNoIN
 = 1;

3193  
rc
==
SQLITE_OK
 ){

3194 
i
;

3195 
Bômask
 
mNext
 = 
ALLBITS
;

3196 
	`as£π
–
mNext
>0 );

3197 
i
=0; i<
nC⁄°øöt
; i++){

3198 
Bômask
 
mThis
 = (

3199 
pWC
->
a
[
p
->
aC⁄°øöt
[
i
].
iTîmOff£t
].
¥îeqRight
 & ~
mPªªq


3201 if–
mThis
>
mPªv
 && mThis<
mNext
 ) mNext = mThis;

3203 
mPªv
 = 
mNext
;

3204 if–
mNext
==
ALLBITS
 ) ;

3205 if–
mNext
==
mBe°
 || mNext==
mBe°NoIn
 ) ;

3206 
	`WHERETRACE
(0x40, (" VirtualOne: mPrev=%04llx mNext=%04llx\n",

3207 (
sqlôe3_uöt64
)
mPªv
, (sqlôe3_uöt64)
mNext
));

3208 
rc
 = 
	`whîeLo›AddVútuÆO√
(

3209 
pBuûdî
, 
mPªªq
, 
mNext
|mPªªq, 0, 
p
, 
mNoOmô
, &
bIn
);

3210 if–
pNew
->
¥îeq
==
mPªªq
 ){

3211 
£íZîo
 = 1;

3212 if–
bIn
==0 ) 
£íZîoNoIN
 = 1;

3219 if–
rc
==
SQLITE_OK
 && 
£íZîo
==0 ){

3220 
	`WHERETRACE
(0x40, (" VirtualOne:áll disabled\n"));

3221 
rc
 = 
	`whîeLo›AddVútuÆO√
(

3222 
pBuûdî
, 
mPªªq
, mPªªq, 0, 
p
, 
mNoOmô
, &
bIn
);

3223 if–
bIn
==0 ) 
£íZîoNoIN
 = 1;

3229 if–
rc
==
SQLITE_OK
 && 
£íZîoNoIN
==0 ){

3230 
	`WHERETRACE
(0x40, (" VirtualOne:áll disabledánd w/o IN\n"));

3231 
rc
 = 
	`whîeLo›AddVútuÆO√
(

3232 
pBuûdî
, 
mPªªq
, mPªªq, 
WO_IN
, 
p
, 
mNoOmô
, &
bIn
);

3236 if–
p
->
√edToFªeIdxSå
 ) 
	`sqlôe3_‰ì
’->
idxSå
);

3237 
	`sqlôe3DbFªe
(
pP¨£
->
db
, 
p
);

3238  
rc
;

3239 
	}
}

3246 
	$whîeLo›AddOr
(

3247 
WhîeLo›Buûdî
 *
pBuûdî
,

3248 
Bômask
 
mPªªq
,

3249 
Bômask
 
mUnußbÀ


3251 
WhîeInfo
 *
pWInfo
 = 
pBuûdî
->pWInfo;

3252 
WhîeCœu£
 *
pWC
;

3253 
WhîeLo›
 *
pNew
;

3254 
WhîeTîm
 *
pTîm
, *
pWCEnd
;

3255 
rc
 = 
SQLITE_OK
;

3256 
iCur
;

3257 
WhîeCœu£
 
ãmpWC
;

3258 
WhîeLo›Buûdî
 
sSubBuûd
;

3259 
WhîeOrSë
 
sSum
, 
sCur
;

3260 
SrcLi°_ôem
 *
pIãm
;

3262 
pWC
 = 
pBuûdî
->pWC;

3263 
pWCEnd
 = 
pWC
->
a
 +ÖWC->
nTîm
;

3264 
pNew
 = 
pBuûdî
->pNew;

3265 
	`mem£t
(&
sSum
, 0, (sSum));

3266 
pIãm
 = 
pWInfo
->
pTabLi°
->
a
 + 
pNew
->
iTab
;

3267 
iCur
 = 
pIãm
->
iCurs‹
;

3269 
pTîm
=
pWC
->
a
;ÖTîm<
pWCEnd
 && 
rc
==
SQLITE_OK
;ÖTerm++){

3270 if–(
pTîm
->
eO≥øt‹
 & 
WO_OR
)!=0

3271 && (
pTîm
->
u
.
pOrInfo
->
ödexabÀ
 & 
pNew
->
maskSñf
)!=0

3273 
WhîeCœu£
 * c⁄° 
pOrWC
 = &
pTîm
->
u
.
pOrInfo
->
wc
;

3274 
WhîeTîm
 * c⁄° 
pOrWCEnd
 = &
pOrWC
->
a
[pOrWC->
nTîm
];

3275 
WhîeTîm
 *
pOrTîm
;

3276 
⁄˚
 = 1;

3277 
i
, 
j
;

3279 
sSubBuûd
 = *
pBuûdî
;

3280 
sSubBuûd
.
pOrdîBy
 = 0;

3281 
sSubBuûd
.
pOrSë
 = &
sCur
;

3283 
	`WHERETRACE
(0x200, ("BegöÖro˚ssög OR-˛au£ %p\n", 
pTîm
));

3284 
pOrTîm
=
pOrWC
->
a
;ÖOrTîm<
pOrWCEnd
;ÖOrTerm++){

3285 if–(
pOrTîm
->
eO≥øt‹
 & 
WO_AND
)!=0 ){

3286 
sSubBuûd
.
pWC
 = &
pOrTîm
->
u
.
pAndInfo
->
wc
;

3287 }if–
pOrTîm
->
À·Curs‹
==
iCur
 ){

3288 
ãmpWC
.
pWInfo
 = 
pWC
->pWInfo;

3289 
ãmpWC
.
pOuãr
 = 
pWC
;

3290 
ãmpWC
.
›
 = 
TK_AND
;

3291 
ãmpWC
.
nTîm
 = 1;

3292 
ãmpWC
.
a
 = 
pOrTîm
;

3293 
sSubBuûd
.
pWC
 = &
ãmpWC
;

3297 
sCur
.
n
 = 0;

3298 #ifde‡
WHERETRACE_ENABLED


3299 
	`WHERETRACE
(0x200, ("OR-term %d of %p has %d subterms:\n",

3300 ()(
pOrTîm
-
pOrWC
->
a
), 
pTîm
, 
sSubBuûd
.
pWC
->
nTîm
));

3301 if–
sqlôe3WhîeTø˚
 & 0x400 ){

3302 
	`sqlôe3WhîeCœu£Pröt
(
sSubBuûd
.
pWC
);

3305 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


3306 if–
	`IsVútuÆ
(
pIãm
->
pTab
) ){

3307 
rc
 = 
	`whîeLo›AddVútuÆ
(&
sSubBuûd
, 
mPªªq
, 
mUnußbÀ
);

3311 
rc
 = 
	`whîeLo›AddBåì
(&
sSubBuûd
, 
mPªªq
);

3313 if–
rc
==
SQLITE_OK
 ){

3314 
rc
 = 
	`whîeLo›AddOr
(&
sSubBuûd
, 
mPªªq
, 
mUnußbÀ
);

3316 
	`as£π
–
rc
==
SQLITE_OK
 || 
sCur
.
n
==0 );

3317 if–
sCur
.
n
==0 ){

3318 
sSum
.
n
 = 0;

3320 }if–
⁄˚
 ){

3321 
	`whîeOrMove
(&
sSum
, &
sCur
);

3322 
⁄˚
 = 0;

3324 
WhîeOrSë
 
sPªv
;

3325 
	`whîeOrMove
(&
sPªv
, &
sSum
);

3326 
sSum
.
n
 = 0;

3327 
i
=0; i<
sPªv
.
n
; i++){

3328 
j
=0; j<
sCur
.
n
; j++){

3329 
	`whîeOrIn£π
(&
sSum
, 
sPªv
.
a
[
i
].
¥îeq
 | 
sCur
.a[
j
].prereq,

3330 
	`sqlôe3LogE°Add
(
sPªv
.
a
[
i
].
rRun
, 
sCur
.a[
j
].rRun),

3331 
	`sqlôe3LogE°Add
(
sPªv
.
a
[
i
].
nOut
, 
sCur
.a[
j
].nOut));

3336 
pNew
->
nLTîm
 = 1;

3337 
pNew
->
aLTîm
[0] = 
pTîm
;

3338 
pNew
->
wsFœgs
 = 
WHERE_MULTI_OR
;

3339 
pNew
->
rSëup
 = 0;

3340 
pNew
->
iS‹tIdx
 = 0;

3341 
	`mem£t
(&
pNew
->
u
, 0, (pNew->u));

3342 
i
=0; 
rc
==
SQLITE_OK
 && i<
sSum
.
n
; i++){

3355 
pNew
->
rRun
 = 
sSum
.
a
[
i
].rRun + 1;

3356 
pNew
->
nOut
 = 
sSum
.
a
[
i
].nOut;

3357 
pNew
->
¥îeq
 = 
sSum
.
a
[
i
].prereq;

3358 
rc
 = 
	`whîeLo›In£π
(
pBuûdî
, 
pNew
);

3360 
	`WHERETRACE
(0x200, ("EndÖro˚ssög OR-˛au£ %p\n", 
pTîm
));

3363  
rc
;

3364 
	}
}

3369 
	$whîeLo›AddAŒ
(
WhîeLo›Buûdî
 *
pBuûdî
){

3370 
WhîeInfo
 *
pWInfo
 = 
pBuûdî
->pWInfo;

3371 
Bômask
 
mPªªq
 = 0;

3372 
Bômask
 
mPri‹
 = 0;

3373 
iTab
;

3374 
SrcLi°
 *
pTabLi°
 = 
pWInfo
->pTabList;

3375 
SrcLi°_ôem
 *
pIãm
;

3376 
SrcLi°_ôem
 *
pEnd
 = &
pTabLi°
->
a
[
pWInfo
->
nLevñ
];

3377 
sqlôe3
 *
db
 = 
pWInfo
->
pP¨£
->db;

3378 
rc
 = 
SQLITE_OK
;

3379 
WhîeLo›
 *
pNew
;

3380 
u8
 
¥i‹Joöty≥
 = 0;

3383 
pNew
 = 
pBuûdî
->pNew;

3384 
	`whîeLo›Inô
(
pNew
);

3385 
iTab
=0, 
pIãm
=
pTabLi°
->
a
;ÖIãm<
pEnd
; iTab++,ÖItem++){

3386 
Bômask
 
mUnußbÀ
 = 0;

3387 
pNew
->
iTab
 = iTab;

3388 
pNew
->
maskSñf
 = 
	`sqlôe3WhîeGëMask
(&
pWInfo
->
sMaskSë
, 
pIãm
->
iCurs‹
);

3389 if–((
pIãm
->
fg
.
joöty≥
|
¥i‹Joöty≥
Ë& (
JT_LEFT
|
JT_CROSS
))!=0 ){

3392 
mPªªq
 = 
mPri‹
;

3394 
¥i‹Joöty≥
 = 
pIãm
->
fg
.
joöty≥
;

3395 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


3396 if–
	`IsVútuÆ
(
pIãm
->
pTab
) ){

3397 
SrcLi°_ôem
 *
p
;

3398 
p
=&
pIãm
[1];Ö<
pEnd
;Ö++){

3399 if–
mUnußbÀ
 || (
p
->
fg
.
joöty≥
 & (
JT_LEFT
|
JT_CROSS
)) ){

3400 
mUnußbÀ
 |
	`sqlôe3WhîeGëMask
(&
pWInfo
->
sMaskSë
, 
p
->
iCurs‹
);

3403 
rc
 = 
	`whîeLo›AddVútuÆ
(
pBuûdî
, 
mPªªq
, 
mUnußbÀ
);

3407 
rc
 = 
	`whîeLo›AddBåì
(
pBuûdî
, 
mPªªq
);

3409 if–
rc
==
SQLITE_OK
 ){

3410 
rc
 = 
	`whîeLo›AddOr
(
pBuûdî
, 
mPªªq
, 
mUnußbÀ
);

3412 
mPri‹
 |
pNew
->
maskSñf
;

3413 if–
rc
 || 
db
->
mÆlocFaûed
 ) ;

3416 
	`whîeLo›CÀ¨
(
db
, 
pNew
);

3417  
rc
;

3418 
	}
}

3437 
i8
 
	$whîeP©hS©isfõsOrdîBy
(

3438 
WhîeInfo
 *
pWInfo
,

3439 
Ex¥Li°
 *
pOrdîBy
,

3440 
WhîeP©h
 *
pP©h
,

3441 
u16
 
w˘æFœgs
,

3442 
u16
 
nLo›
,

3443 
WhîeLo›
 *
pLa°
,

3444 
Bômask
 *
pRevMask


3446 
u8
 
ªvSë
;

3447 
u8
 
ªv
;

3448 
u8
 
ªvIdx
;

3449 
u8
 
isOrdîDi°ö˘
;

3450 
u8
 
di°ö˘Cﬁumns
;

3451 
u8
 
isM©ch
;

3452 
u16
 
eqOpMask
;

3453 
u16
 
nKeyCﬁ
;

3454 
u16
 
nCﬁumn
;

3455 
u16
 
nOrdîBy
;

3456 
iLo›
;

3457 
i
, 
j
;

3458 
iCur
;

3459 
iCﬁumn
;

3460 
WhîeLo›
 *
pLo›
 = 0;

3461 
WhîeTîm
 *
pTîm
;

3462 
Ex¥
 *
pOBEx¥
;

3463 
CﬁlSeq
 *
pCﬁl
;

3464 
Index
 *
pIndex
;

3465 
sqlôe3
 *
db
 = 
pWInfo
->
pP¨£
->db;

3466 
Bômask
 
obS©
 = 0;

3467 
Bômask
 
obD⁄e
;

3468 
Bômask
 
‹dîDi°ö˘Mask
;

3469 
Bômask
 
ªady
;

3493 
	`as£π
–
pOrdîBy
!=0 );

3494 if–
nLo›
 && 
	`O±imiz©i⁄DißbÀd
(
db
, 
SQLITE_OrdîByIdxJoö
) )  0;

3496 
nOrdîBy
 = 
pOrdîBy
->
nEx¥
;

3497 
	`ã°ˇ£
–
nOrdîBy
==
BMS
-1 );

3498 if–
nOrdîBy
>
BMS
-1 )  0;

3499 
isOrdîDi°ö˘
 = 1;

3500 
obD⁄e
 = 
	`MASKBIT
(
nOrdîBy
)-1;

3501 
‹dîDi°ö˘Mask
 = 0;

3502 
ªady
 = 0;

3503 
eqOpMask
 = 
WO_EQ
 | 
WO_IS
 | 
WO_ISNULL
;

3504 if–
w˘æFœgs
 & 
WHERE_ORDERBY_LIMIT
 ) 
eqOpMask
 |
WO_IN
;

3505 
iLo›
=0; 
isOrdîDi°ö˘
 && 
obS©
<
obD⁄e
 && iLo›<=
nLo›
; iLoop++){

3506 if–
iLo›
>0 ) 
ªady
 |
pLo›
->
maskSñf
;

3507 if–
iLo›
<
nLo›
 ){

3508 
pLo›
 = 
pP©h
->
aLo›
[
iLo›
];

3509 if–
w˘æFœgs
 & 
WHERE_ORDERBY_LIMIT
 ) ;

3511 
pLo›
 = 
pLa°
;

3513 if–
pLo›
->
wsFœgs
 & 
WHERE_VIRTUALTABLE
 ){

3514 if–
pLo›
->
u
.
vèb
.
isOrdîed
 ) 
obS©
 = 
obD⁄e
;

3517 
iCur
 = 
pWInfo
->
pTabLi°
->
a
[
pLo›
->
iTab
].
iCurs‹
;

3524 
i
=0; i<
nOrdîBy
; i++){

3525 if–
	`MASKBIT
(
i
Ë& 
obS©
 ) ;

3526 
pOBEx¥
 = 
	`sqlôe3Ex¥SkùCﬁœã
(
pOrdîBy
->
a
[
i
].
pEx¥
);

3527 if–
pOBEx¥
->
›
!=
TK_COLUMN
 ) ;

3528 if–
pOBEx¥
->
iTabÀ
!=
iCur
 ) ;

3529 
pTîm
 = 
	`sqlôe3WhîeFödTîm
(&
pWInfo
->
sWC
, 
iCur
, 
pOBEx¥
->
iCﬁumn
,

3530 ~
ªady
, 
eqOpMask
, 0);

3531 if–
pTîm
==0 ) ;

3532 if–
pTîm
->
eO≥øt‹
==
WO_IN
 ){

3536 
	`as£π
–
w˘æFœgs
 & 
WHERE_ORDERBY_LIMIT
 );

3537 
j
=0; j<
pLo›
->
nLTîm
 && 
pTîm
!ıLo›->
aLTîm
[j]; j++){}

3538 if–
j
>=
pLo›
->
nLTîm
 ) ;

3540 if–(
pTîm
->
eO≥øt‹
&(
WO_EQ
|
WO_IS
))!=0 && 
pOBEx¥
->
iCﬁumn
>=0 ){

3541 c⁄° *
z1
, *
z2
;

3542 
pCﬁl
 = 
	`sqlôe3Ex¥CﬁlSeq
(
pWInfo
->
pP¨£
, 
pOrdîBy
->
a
[
i
].
pEx¥
);

3543 if–!
pCﬁl
 )ÖCﬁ»
db
->
pDÊtCﬁl
;

3544 
z1
 = 
pCﬁl
->
zName
;

3545 
pCﬁl
 = 
	`sqlôe3Ex¥CﬁlSeq
(
pWInfo
->
pP¨£
, 
pTîm
->
pEx¥
);

3546 if–!
pCﬁl
 )ÖCﬁ»
db
->
pDÊtCﬁl
;

3547 
z2
 = 
pCﬁl
->
zName
;

3548 if–
	`sqlôe3SåICmp
(
z1
, 
z2
)!=0 ) ;

3549 
	`ã°ˇ£
–
pTîm
->
pEx¥
->
›
==
TK_IS
 );

3551 
obS©
 |
	`MASKBIT
(
i
);

3554 if–(
pLo›
->
wsFœgs
 & 
WHERE_ONEROW
)==0 ){

3555 if–
pLo›
->
wsFœgs
 & 
WHERE_IPK
 ){

3556 
pIndex
 = 0;

3557 
nKeyCﬁ
 = 0;

3558 
nCﬁumn
 = 1;

3559 }if–(
pIndex
 = 
pLo›
->
u
.
båì
.pIndex)==0 ||ÖIndex->
bUn‹dîed
 ){

3562 
nKeyCﬁ
 = 
pIndex
->nKeyCol;

3563 
nCﬁumn
 = 
pIndex
->nColumn;

3564 
	`as£π
–
nCﬁumn
==
nKeyCﬁ
+1 || !
	`HasRowid
(
pIndex
->
pTabÀ
) );

3565 
	`as£π
–
pIndex
->
aiCﬁumn
[
nCﬁumn
-1]==
XN_ROWID


3566 || !
	`HasRowid
(
pIndex
->
pTabÀ
));

3567 
isOrdîDi°ö˘
 = 
	`IsUniqueIndex
(
pIndex
);

3573 
ªv
 = 
ªvSë
 = 0;

3574 
di°ö˘Cﬁumns
 = 0;

3575 
j
=0; j<
nCﬁumn
; j++){

3576 
u8
 
bOn˚
 = 1;

3578 
	`as£π
–
j
>=
pLo›
->
u
.
båì
.
nEq


3579 || (
pLo›
->
aLTîm
[
j
]==0)==(j<pLo›->
nSkù
)

3581 if–
j
<
pLo›
->
u
.
båì
.
nEq
 && j>ıLo›->
nSkù
 ){

3582 
u16
 
eOp
 = 
pLo›
->
aLTîm
[
j
]->
eO≥øt‹
;

3592 if–(
eOp
 & 
eqOpMask
)!=0 ){

3593 if–
eOp
 & 
WO_ISNULL
 ){

3594 
	`ã°ˇ£
–
isOrdîDi°ö˘
 );

3595 
isOrdîDi°ö˘
 = 0;

3598 }if–
	`ALWAYS
(
eOp
 & 
WO_IN
) ){

3603 
Ex¥
 *
pX
 = 
pLo›
->
aLTîm
[
j
]->
pEx¥
;

3604 
i
=
j
+1; i<
pLo›
->
u
.
båì
.
nEq
; i++){

3605 if–
pLo›
->
aLTîm
[
i
]->
pEx¥
==
pX
 ){

3606 
	`as£π
–(
pLo›
->
aLTîm
[
i
]->
eO≥øt‹
 & 
WO_IN
) );

3607 
bOn˚
 = 0;

3617 if–
pIndex
 ){

3618 
iCﬁumn
 = 
pIndex
->
aiCﬁumn
[
j
];

3619 
ªvIdx
 = 
pIndex
->
aS‹tOrdî
[
j
];

3620 if–
iCﬁumn
==
pIndex
->
pTabÀ
->
iPKey
 ) iColumn = -1;

3622 
iCﬁumn
 = 
XN_ROWID
;

3623 
ªvIdx
 = 0;

3629 if–
isOrdîDi°ö˘


3630 && 
iCﬁumn
>=0

3631 && 
j
>=
pLo›
->
u
.
båì
.
nEq


3632 && 
pIndex
->
pTabÀ
->
aCﬁ
[
iCﬁumn
].
nŸNuŒ
==0

3634 
isOrdîDi°ö˘
 = 0;

3640 
isM©ch
 = 0;

3641 
i
=0; 
bOn˚
 && i<
nOrdîBy
; i++){

3642 if–
	`MASKBIT
(
i
Ë& 
obS©
 ) ;

3643 
pOBEx¥
 = 
	`sqlôe3Ex¥SkùCﬁœã
(
pOrdîBy
->
a
[
i
].
pEx¥
);

3644 
	`ã°ˇ£
–
w˘æFœgs
 & 
WHERE_GROUPBY
 );

3645 
	`ã°ˇ£
–
w˘æFœgs
 & 
WHERE_DISTINCTBY
 );

3646 if–(
w˘æFœgs
 & (
WHERE_GROUPBY
|
WHERE_DISTINCTBY
))==0 ) 
bOn˚
 = 0;

3647 if–
iCﬁumn
>=(-1) ){

3648 if–
pOBEx¥
->
›
!=
TK_COLUMN
 ) ;

3649 if–
pOBEx¥
->
iTabÀ
!=
iCur
 ) ;

3650 if–
pOBEx¥
->
iCﬁumn
!=iColumn ) ;

3652 if–
	`sqlôe3Ex¥Com∑ª
(
pOBEx¥
,
pIndex
->
aCﬁEx¥
->
a
[
j
].
pEx¥
,
iCur
) ){

3656 if–
iCﬁumn
>=0 ){

3657 
pCﬁl
 = 
	`sqlôe3Ex¥CﬁlSeq
(
pWInfo
->
pP¨£
, 
pOrdîBy
->
a
[
i
].
pEx¥
);

3658 if–!
pCﬁl
 )ÖCﬁ»
db
->
pDÊtCﬁl
;

3659 if–
	`sqlôe3SåICmp
(
pCﬁl
->
zName
, 
pIndex
->
azCﬁl
[
j
])!=0 ) ;

3661 
isM©ch
 = 1;

3664 if–
isM©ch
 && (
w˘æFœgs
 & 
WHERE_GROUPBY
)==0 ){

3667 if–
ªvSë
 ){

3668 if–(
ªv
 ^ 
ªvIdx
)!=
pOrdîBy
->
a
[
i
].
s‹tOrdî
 ) 
isM©ch
 = 0;

3670 
ªv
 = 
ªvIdx
 ^ 
pOrdîBy
->
a
[
i
].
s‹tOrdî
;

3671 if–
ªv
 ) *
pRevMask
 |
	`MASKBIT
(
iLo›
);

3672 
ªvSë
 = 1;

3675 if–
isM©ch
 ){

3676 if–
iCﬁumn
==
XN_ROWID
 ){

3677 
	`ã°ˇ£
–
di°ö˘Cﬁumns
==0 );

3678 
di°ö˘Cﬁumns
 = 1;

3680 
obS©
 |
	`MASKBIT
(
i
);

3683 if–
j
==0 || j<
nKeyCﬁ
 ){

3684 
	`ã°ˇ£
–
isOrdîDi°ö˘
!=0 );

3685 
isOrdîDi°ö˘
 = 0;

3690 if–
di°ö˘Cﬁumns
 ){

3691 
	`ã°ˇ£
–
isOrdîDi°ö˘
==0 );

3692 
isOrdîDi°ö˘
 = 1;

3697 if–
isOrdîDi°ö˘
 ){

3698 
‹dîDi°ö˘Mask
 |
pLo›
->
maskSñf
;

3699 
i
=0; i<
nOrdîBy
; i++){

3700 
Ex¥
 *
p
;

3701 
Bômask
 
mTîm
;

3702 if–
	`MASKBIT
(
i
Ë& 
obS©
 ) ;

3703 
p
 = 
pOrdîBy
->
a
[
i
].
pEx¥
;

3704 
mTîm
 = 
	`sqlôe3WhîeEx¥Ußge
(&
pWInfo
->
sMaskSë
,
p
);

3705 if–
mTîm
==0 && !
	`sqlôe3Ex¥IsC⁄°™t
(
p
) ) ;

3706 if–(
mTîm
&~
‹dîDi°ö˘Mask
)==0 ){

3707 
obS©
 |
	`MASKBIT
(
i
);

3712 if–
obS©
==
obD⁄e
 )  (
i8
)
nOrdîBy
;

3713 if–!
isOrdîDi°ö˘
 ){

3714 
i
=
nOrdîBy
-1; i>0; i--){

3715 
Bômask
 
m
 = 
	`MASKBIT
(
i
) - 1;

3716 if–(
obS©
&
m
)==m )  
i
;

3721 
	}
}

3747 
	$sqlôe3WhîeIsS‹ãd
(
WhîeInfo
 *
pWInfo
){

3748 
	`as£π
–
pWInfo
->
w˘æFœgs
 & 
WHERE_GROUPBY
 );

3749 
	`as£π
–
pWInfo
->
w˘æFœgs
 & 
WHERE_SORTBYGROUP
 );

3750  
pWInfo
->
s‹ãd
;

3751 
	}
}

3753 #ifde‡
WHERETRACE_ENABLED


3755 c⁄° *
	$whîeP©hName
(
WhîeP©h
 *
pP©h
, 
nLo›
, 
WhîeLo›
 *
pLa°
){

3756 
zName
[65];

3757 
i
;

3758 
i
=0; i<
nLo›
; i++){ 
zName
[i] = 
pP©h
->
aLo›
[i]->
cId
; }

3759 if–
pLa°
 ) 
zName
[
i
++] =ÖLa°->
cId
;

3760 
zName
[
i
] = 0;

3761  
zName
;

3762 
	}
}

3770 
LogE°
 
	$whîeS‹tögCo°
(

3771 
WhîeInfo
 *
pWInfo
,

3772 
LogE°
 
nRow
,

3773 
nOrdîBy
,

3774 
nS‹ãd


3789 
LogE°
 
rSˇÀ
, 
rS‹tCo°
;

3790 
	`as£π
–
nOrdîBy
>0 && 66==
	`sqlôe3LogE°
(100) );

3791 
rSˇÀ
 = 
	`sqlôe3LogE°
((
nOrdîBy
-
nS‹ãd
)*100/nOrderBy) - 66;

3792 
rS‹tCo°
 = 
nRow
 + 
rSˇÀ
 + 16;

3796 if–(
pWInfo
->
w˘æFœgs
 & 
WHERE_USE_LIMIT
)!=0 &&ÖWInfo->
iLimô
<
nRow
 ){

3797 
nRow
 = 
pWInfo
->
iLimô
;

3799 
rS‹tCo°
 +
	`e°Log
(
nRow
);

3800  
rS‹tCo°
;

3801 
	}
}

3815 
	$whîeP©hSﬁvî
(
WhîeInfo
 *
pWInfo
, 
LogE°
 
nRowE°
){

3816 
mxChoi˚
;

3817 
nLo›
;

3818 
P¨£
 *
pP¨£
;

3819 
sqlôe3
 *
db
;

3820 
iLo›
;

3821 
ii
, 
jj
;

3822 
mxI
 = 0;

3823 
nOrdîBy
;

3824 
LogE°
 
mxCo°
 = 0;

3825 
LogE°
 
mxUns‹ãd
 = 0;

3826 
nTo
, 
nFrom
;

3827 
WhîeP©h
 *
aFrom
;

3828 
WhîeP©h
 *
aTo
;

3829 
WhîeP©h
 *
pFrom
;

3830 
WhîeP©h
 *
pTo
;

3831 
WhîeLo›
 *
pWLo›
;

3832 
WhîeLo›
 **
pX
;

3833 
LogE°
 *
aS‹tCo°
 = 0;

3834 *
pS∑˚
;

3835 
nS∑˚
;

3837 
pP¨£
 = 
pWInfo
->pParse;

3838 
db
 = 
pP¨£
->db;

3839 
nLo›
 = 
pWInfo
->
nLevñ
;

3843 
mxChoi˚
 = (
nLo›
<=1) ? 1 : (nLoop==2 ? 5 : 10);

3844 
	`as£π
–
nLo›
<=
pWInfo
->
pTabLi°
->
nSrc
 );

3845 
	`WHERETRACE
(0x002, ("---- begö sﬁvî. (nRowE°=%d)\n", 
nRowE°
));

3852 if–
pWInfo
->
pOrdîBy
==0 || 
nRowE°
==0 ){

3853 
nOrdîBy
 = 0;

3855 
nOrdîBy
 = 
pWInfo
->
pOrdîBy
->
nEx¥
;

3859 
nS∑˚
 = ((
WhîeP©h
)+(
WhîeLo›
*)*
nLo›
)*
mxChoi˚
*2;

3860 
nS∑˚
 +(
LogE°
Ë* 
nOrdîBy
;

3861 
pS∑˚
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, 
nS∑˚
);

3862 if–
pS∑˚
==0 )  
SQLITE_NOMEM_BKPT
;

3863 
aTo
 = (
WhîeP©h
*)
pS∑˚
;

3864 
aFrom
 = 
aTo
+
mxChoi˚
;

3865 
	`mem£t
(
aFrom
, 0, (aFrom[0]));

3866 
pX
 = (
WhîeLo›
**)(
aFrom
+
mxChoi˚
);

3867 
ii
=
mxChoi˚
*2, 
pFrom
=
aTo
; ii>0; ii--,ÖFrom++, 
pX
 +
nLo›
){

3868 
pFrom
->
aLo›
 = 
pX
;

3870 if–
nOrdîBy
 ){

3877 
aS‹tCo°
 = (
LogE°
*)
pX
;

3878 
	`mem£t
(
aS‹tCo°
, 0, (
LogE°
Ë* 
nOrdîBy
);

3880 
	`as£π
–
aS‹tCo°
==0 || &
pS∑˚
[
nS∑˚
]==(*)&aS‹tCo°[
nOrdîBy
] );

3881 
	`as£π
–
aS‹tCo°
!=0 || &
pS∑˚
[
nS∑˚
]==(*)
pX
 );

3888 
aFrom
[0].
nRow
 = 
	`MIN
(
pP¨£
->
nQuîyLo›
, 48); 
	`as£π
–48==
	`sqlôe3LogE°
(28) );

3889 
nFrom
 = 1;

3890 
	`as£π
–
aFrom
[0].
isOrdîed
==0 );

3891 if–
nOrdîBy
 ){

3898 
aFrom
[0].
isOrdîed
 = 
nLo›
>0 ? -1 : 
nOrdîBy
;

3904 
iLo›
=0; iLo›<
nLo›
; iLoop++){

3905 
nTo
 = 0;

3906 
ii
=0, 
pFrom
=
aFrom
; ii<
nFrom
; ii++,ÖFrom++){

3907 
pWLo›
=
pWInfo
->
pLo›s
;ÖWLo›;ÖWLo›ıWLo›->
pNextLo›
){

3908 
LogE°
 
nOut
;

3909 
LogE°
 
rCo°
;

3910 
LogE°
 
rUns‹ãd
;

3911 
i8
 
isOrdîed
 = 
pFrom
->isOrdered;

3912 
Bômask
 
maskNew
;

3913 
Bômask
 
ªvMask
 = 0;

3915 if–(
pWLo›
->
¥îeq
 & ~
pFrom
->
maskLo›
)!=0 ) ;

3916 if–(
pWLo›
->
maskSñf
 & 
pFrom
->
maskLo›
)!=0 ) ;

3917 if–(
pWLo›
->
wsFœgs
 & 
WHERE_AUTO_INDEX
)!=0 && 
pFrom
->
nRow
<10 ){

3920 
	`as£π
–10==
	`sqlôe3LogE°
(2) );

3925 
rUns‹ãd
 = 
	`sqlôe3LogE°Add
(
pWLo›
->
rSëup
,pWLo›->
rRun
 + 
pFrom
->
nRow
);

3926 
rUns‹ãd
 = 
	`sqlôe3LogE°Add
‘Uns‹ãd, 
pFrom
->rUnsorted);

3927 
nOut
 = 
pFrom
->
nRow
 + 
pWLo›
->nOut;

3928 
maskNew
 = 
pFrom
->
maskLo›
 | 
pWLo›
->
maskSñf
;

3929 if–
isOrdîed
<0 ){

3930 
isOrdîed
 = 
	`whîeP©hS©isfõsOrdîBy
(
pWInfo
,

3931 
pWInfo
->
pOrdîBy
, 
pFrom
,ÖWInfo->
w˘æFœgs
,

3932 
iLo›
, 
pWLo›
, &
ªvMask
);

3934 
ªvMask
 = 
pFrom
->
ªvLo›
;

3936 if–
isOrdîed
>=0 && isOrdîed<
nOrdîBy
 ){

3937 if–
aS‹tCo°
[
isOrdîed
]==0 ){

3938 
aS‹tCo°
[
isOrdîed
] = 
	`whîeS‹tögCo°
(

3939 
pWInfo
, 
nRowE°
, 
nOrdîBy
, 
isOrdîed


3942 
rCo°
 = 
	`sqlôe3LogE°Add
(
rUns‹ãd
, 
aS‹tCo°
[
isOrdîed
]);

3944 
	`WHERETRACE
(0x002,

3946 
aS‹tCo°
[
isOrdîed
], (
nOrdîBy
-isOrdered),ÇOrderBy,

3947 
rUns‹ãd
, 
rCo°
));

3949 
rCo°
 = 
rUns‹ãd
;

3963 
jj
=0, 
pTo
=
aTo
; jj<
nTo
; jj++,ÖTo++){

3964 if–
pTo
->
maskLo›
==
maskNew


3965 && ((
pTo
->
isOrdîed
^isOrdered)&0x80)==0

3967 
	`ã°ˇ£
–
jj
==
nTo
-1 );

3971 if–
jj
>=
nTo
 ){

3973 if–
nTo
>=
mxChoi˚


3974 && (
rCo°
>
mxCo°
 || (rCo°==mxCo° && 
rUns‹ãd
>=
mxUns‹ãd
))

3979 #ifde‡
WHERETRACE_ENABLED


3980 if–
sqlôe3WhîeTø˚
&0x4 ){

3981 
	`sqlôe3DebugPrötf
("Skip %s cost=%-3d,%3d order=%c\n",

3982 
	`whîeP©hName
(
pFrom
, 
iLo›
, 
pWLo›
), 
rCo°
, 
nOut
,

3983 
isOrdîed
>=0 ? isOrdered+'0' : '?');

3990 if–
nTo
<
mxChoi˚
 ){

3992 
jj
 = 
nTo
++;

3995 
jj
 = 
mxI
;

3997 
pTo
 = &
aTo
[
jj
];

3998 #ifde‡
WHERETRACE_ENABLED


3999 if–
sqlôe3WhîeTø˚
&0x4 ){

4000 
	`sqlôe3DebugPrötf
("New %s cost=%-3d,%3d order=%c\n",

4001 
	`whîeP©hName
(
pFrom
, 
iLo›
, 
pWLo›
), 
rCo°
, 
nOut
,

4002 
isOrdîed
>=0 ? isOrdered+'0' : '?');

4010 if–
pTo
->
rCo°
<rCo° || (pTo->rCo°=ÙCo° &&ÖTo->
nRow
<=
nOut
) ){

4011 #ifde‡
WHERETRACE_ENABLED


4012 if–
sqlôe3WhîeTø˚
&0x4 ){

4013 
	`sqlôe3DebugPrötf
(

4015 
	`whîeP©hName
(
pFrom
, 
iLo›
, 
pWLo›
), 
rCo°
, 
nOut
,

4016 
isOrdîed
>=0 ? isOrdered+'0' : '?');

4017 
	`sqlôe3DebugPrötf
(" vs %s cost=%-3d,%d order=%c\n",

4018 
	`whîeP©hName
(
pTo
, 
iLo›
+1, 0),ÖTo->
rCo°
,ÖTo->
nRow
,

4019 
pTo
->
isOrdîed
>=0 ?ÖTo->isOrdered+'0' : '?');

4023 
	`ã°ˇ£
–
pTo
->
rCo°
==rCost );

4026 
	`ã°ˇ£
–
pTo
->
rCo°
==rCost+1 );

4029 #ifde‡
WHERETRACE_ENABLED


4030 if–
sqlôe3WhîeTø˚
&0x4 ){

4031 
	`sqlôe3DebugPrötf
(

4033 
	`whîeP©hName
(
pFrom
, 
iLo›
, 
pWLo›
), 
rCo°
, 
nOut
,

4034 
isOrdîed
>=0 ? isOrdered+'0' : '?');

4035 
	`sqlôe3DebugPrötf
(" was %s cost=%-3d,%3d order=%c\n",

4036 
	`whîeP©hName
(
pTo
, 
iLo›
+1, 0),ÖTo->
rCo°
,ÖTo->
nRow
,

4037 
pTo
->
isOrdîed
>=0 ?ÖTo->isOrdered+'0' : '?');

4042 
pTo
->
maskLo›
 = 
pFrom
->maskLo› | 
pWLo›
->
maskSñf
;

4043 
pTo
->
ªvLo›
 = 
ªvMask
;

4044 
pTo
->
nRow
 = 
nOut
;

4045 
pTo
->
rCo°
 =ÑCost;

4046 
pTo
->
rUns‹ãd
 =ÑUnsorted;

4047 
pTo
->
isOrdîed
 = isOrdered;

4048 
	`mem˝y
(
pTo
->
aLo›
, 
pFrom
->aLo›, (
WhîeLo›
*)*
iLo›
);

4049 
pTo
->
aLo›
[
iLo›
] = 
pWLo›
;

4050 if–
nTo
>=
mxChoi˚
 ){

4051 
mxI
 = 0;

4052 
mxCo°
 = 
aTo
[0].
rCo°
;

4053 
mxUns‹ãd
 = 
aTo
[0].
nRow
;

4054 
jj
=1, 
pTo
=&
aTo
[1]; jj<
mxChoi˚
; jj++,ÖTo++){

4055 if–
pTo
->
rCo°
>
mxCo°


4056 || (
pTo
->
rCo°
==
mxCo°
 &&ÖTo->
rUns‹ãd
>
mxUns‹ãd
)

4058 
mxCo°
 = 
pTo
->
rCo°
;

4059 
mxUns‹ãd
 = 
pTo
->
rUns‹ãd
;

4060 
mxI
 = 
jj
;

4067 #ifde‡
WHERETRACE_ENABLED


4068 if–
sqlôe3WhîeTø˚
 & 0x02 ){

4069 
	`sqlôe3DebugPrötf
("----á·îÑound %d ----\n", 
iLo›
);

4070 
ii
=0, 
pTo
=
aTo
; ii<
nTo
; ii++,ÖTo++){

4071 
	`sqlôe3DebugPrötf
(" %s cost=%-3dÇrow=%-3d order=%c",

4072 
	`whîeP©hName
(
pTo
, 
iLo›
+1, 0),ÖTo->
rCo°
,ÖTo->
nRow
,

4073 
pTo
->
isOrdîed
>=0 ? (pTo->isOrdered+'0') : '?');

4074 if–
pTo
->
isOrdîed
>0 ){

4075 
	`sqlôe3DebugPrötf
("Ñev=0x%Œx\n", 
pTo
->
ªvLo›
);

4077 
	`sqlôe3DebugPrötf
("\n");

4084 
pFrom
 = 
aTo
;

4085 
aTo
 = 
aFrom
;

4086 
aFrom
 = 
pFrom
;

4087 
nFrom
 = 
nTo
;

4090 if–
nFrom
==0 ){

4091 
	`sqlôe3Eº‹Msg
(
pP¨£
, "no query solution");

4092 
	`sqlôe3DbFªe
(
db
, 
pS∑˚
);

4093  
SQLITE_ERROR
;

4097 
pFrom
 = 
aFrom
;

4098 
ii
=1; ii<
nFrom
; ii++){

4099 if–
pFrom
->
rCo°
>
aFrom
[
ii
].rCost )ÖFrom = &aFrom[ii];

4101 
	`as£π
–
pWInfo
->
nLevñ
==
nLo›
 );

4103 
iLo›
=0; iLo›<
nLo›
; iLoop++){

4104 
WhîeLevñ
 *
pLevñ
 = 
pWInfo
->
a
 + 
iLo›
;

4105 
pLevñ
->
pWLo›
 =ÖWLo› = 
pFrom
->
aLo›
[
iLo›
];

4106 
pLevñ
->
iFrom
 = 
pWLo›
->
iTab
;

4107 
pLevñ
->
iTabCur
 = 
pWInfo
->
pTabLi°
->
a
[pLevñ->
iFrom
].
iCurs‹
;

4109 if–(
pWInfo
->
w˘æFœgs
 & 
WHERE_WANT_DISTINCT
)!=0

4110 && (
pWInfo
->
w˘æFœgs
 & 
WHERE_DISTINCTBY
)==0

4111 && 
pWInfo
->
eDi°ö˘
==
WHERE_DISTINCT_NOOP


4112 && 
nRowE°


4114 
Bômask
 
nŸU£d
;

4115 
rc
 = 
	`whîeP©hS©isfõsOrdîBy
(
pWInfo
,ÖWInfo->
pDi°ö˘Së
, 
pFrom
,

4116 
WHERE_DISTINCTBY
, 
nLo›
-1, 
pFrom
->
aLo›
[nLo›-1], &
nŸU£d
);

4117 if–
rc
==
pWInfo
->
pDi°ö˘Së
->
nEx¥
 ){

4118 
pWInfo
->
eDi°ö˘
 = 
WHERE_DISTINCT_ORDERED
;

4121 if–
pWInfo
->
pOrdîBy
 ){

4122 if–
pWInfo
->
w˘æFœgs
 & 
WHERE_DISTINCTBY
 ){

4123 if–
pFrom
->
isOrdîed
==
pWInfo
->
pOrdîBy
->
nEx¥
 ){

4124 
pWInfo
->
eDi°ö˘
 = 
WHERE_DISTINCT_ORDERED
;

4127 
pWInfo
->
nOBS©
 = 
pFrom
->
isOrdîed
;

4128 
pWInfo
->
ªvMask
 = 
pFrom
->
ªvLo›
;

4129 if–
pWInfo
->
nOBS©
<=0 ){

4130 
pWInfo
->
nOBS©
 = 0;

4131 if–
nLo›
>0 ){

4132 
u32
 
wsFœgs
 = 
pFrom
->
aLo›
[
nLo›
-1]->wsFlags;

4133 if–(
wsFœgs
 & 
WHERE_ONEROW
)==0

4134 && (
wsFœgs
&(
WHERE_IPK
|
WHERE_COLUMN_IN
))!=(WHERE_IPK|WHERE_COLUMN_IN)

4136 
Bômask
 
m
 = 0;

4137 
rc
 = 
	`whîeP©hS©isfõsOrdîBy
(
pWInfo
,ÖWInfo->
pOrdîBy
, 
pFrom
,

4138 
WHERE_ORDERBY_LIMIT
, 
nLo›
-1, 
pFrom
->
aLo›
[nLo›-1], &
m
);

4139 
	`ã°ˇ£
–
wsFœgs
 & 
WHERE_IPK
 );

4140 
	`ã°ˇ£
–
wsFœgs
 & 
WHERE_COLUMN_IN
 );

4141 if–
rc
==
pWInfo
->
pOrdîBy
->
nEx¥
 ){

4142 
pWInfo
->
bOrdîedI¬îLo›
 = 1;

4143 
pWInfo
->
ªvMask
 = 
m
;

4149 if–(
pWInfo
->
w˘æFœgs
 & 
WHERE_SORTBYGROUP
)

4150 && 
pWInfo
->
nOBS©
=ıWInfo->
pOrdîBy
->
nEx¥
 && 
nLo›
>0

4152 
Bômask
 
ªvMask
 = 0;

4153 
nOrdî
 = 
	`whîeP©hS©isfõsOrdîBy
(
pWInfo
,ÖWInfo->
pOrdîBy
,

4154 
pFrom
, 0, 
nLo›
-1,ÖFrom->
aLo›
[nLo›-1], &
ªvMask


4156 
	`as£π
–
pWInfo
->
s‹ãd
==0 );

4157 if–
nOrdî
==
pWInfo
->
pOrdîBy
->
nEx¥
 ){

4158 
pWInfo
->
s‹ãd
 = 1;

4159 
pWInfo
->
ªvMask
 =ÑevMask;

4165 
pWInfo
->
nRowOut
 = 
pFrom
->
nRow
;

4168 
	`sqlôe3DbFªe
(
db
, 
pS∑˚
);

4169  
SQLITE_OK
;

4170 
	}
}

4183 
	$whîeSh‹tCut
(
WhîeLo›Buûdî
 *
pBuûdî
){

4184 
WhîeInfo
 *
pWInfo
;

4185 
SrcLi°_ôem
 *
pIãm
;

4186 
WhîeCœu£
 *
pWC
;

4187 
WhîeTîm
 *
pTîm
;

4188 
WhîeLo›
 *
pLo›
;

4189 
iCur
;

4190 
j
;

4191 
TabÀ
 *
pTab
;

4192 
Index
 *
pIdx
;

4194 
pWInfo
 = 
pBuûdî
->pWInfo;

4195 if–
pWInfo
->
w˘æFœgs
 & 
WHERE_OR_SUBCLAUSE
 )  0;

4196 
	`as£π
–
pWInfo
->
pTabLi°
->
nSrc
>=1 );

4197 
pIãm
 = 
pWInfo
->
pTabLi°
->
a
;

4198 
pTab
 = 
pIãm
->pTab;

4199 if–
	`IsVútuÆ
(
pTab
) )  0;

4200 if–
pIãm
->
fg
.
isIndexedBy
 )  0;

4201 
iCur
 = 
pIãm
->
iCurs‹
;

4202 
pWC
 = &
pWInfo
->
sWC
;

4203 
pLo›
 = 
pBuûdî
->
pNew
;

4204 
pLo›
->
wsFœgs
 = 0;

4205 
pLo›
->
nSkù
 = 0;

4206 
pTîm
 = 
	`sqlôe3WhîeFödTîm
(
pWC
, 
iCur
, -1, 0, 
WO_EQ
|
WO_IS
, 0);

4207 if–
pTîm
 ){

4208 
	`ã°ˇ£
–
pTîm
->
eO≥øt‹
 & 
WO_IS
 );

4209 
pLo›
->
wsFœgs
 = 
WHERE_COLUMN_EQ
|
WHERE_IPK
|
WHERE_ONEROW
;

4210 
pLo›
->
aLTîm
[0] = 
pTîm
;

4211 
pLo›
->
nLTîm
 = 1;

4212 
pLo›
->
u
.
båì
.
nEq
 = 1;

4214 
pLo›
->
rRun
 = 33;

4216 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
){

4217 
›Mask
;

4218 
	`as£π
–
pLo›
->
aLTîmS∑˚
=ıLo›->
aLTîm
 );

4219 if–!
	`IsUniqueIndex
(
pIdx
)

4220 || 
pIdx
->
pP¨tIdxWhîe
!=0

4221 || 
pIdx
->
nKeyCﬁ
>
	`AºaySize
(
pLo›
->
aLTîmS∑˚
)

4223 
›Mask
 = 
pIdx
->
uniqNŸNuŒ
 ? (
WO_EQ
|
WO_IS
) : WO_EQ;

4224 
j
=0; j<
pIdx
->
nKeyCﬁ
; j++){

4225 
pTîm
 = 
	`sqlôe3WhîeFödTîm
(
pWC
, 
iCur
, 
j
, 0, 
›Mask
, 
pIdx
);

4226 if–
pTîm
==0 ) ;

4227 
	`ã°ˇ£
–
pTîm
->
eO≥øt‹
 & 
WO_IS
 );

4228 
pLo›
->
aLTîm
[
j
] = 
pTîm
;

4230 if–
j
!=
pIdx
->
nKeyCﬁ
 ) ;

4231 
pLo›
->
wsFœgs
 = 
WHERE_COLUMN_EQ
|
WHERE_ONEROW
|
WHERE_INDEXED
;

4232 if–
pIdx
->
isCovîög
 || (
pIãm
->
cﬁU£d
 & ~
	`cﬁumnsInIndex
(pIdx))==0 ){

4233 
pLo›
->
wsFœgs
 |
WHERE_IDX_ONLY
;

4235 
pLo›
->
nLTîm
 = 
j
;

4236 
pLo›
->
u
.
båì
.
nEq
 = 
j
;

4237 
pLo›
->
u
.
båì
.
pIndex
 = 
pIdx
;

4239 
pLo›
->
rRun
 = 39;

4243 if–
pLo›
->
wsFœgs
 ){

4244 
pLo›
->
nOut
 = (
LogE°
)1;

4245 
pWInfo
->
a
[0].
pWLo›
 = 
pLo›
;

4246 
pLo›
->
maskSñf
 = 
	`sqlôe3WhîeGëMask
(&
pWInfo
->
sMaskSë
, 
iCur
);

4247 
pWInfo
->
a
[0].
iTabCur
 = 
iCur
;

4248 
pWInfo
->
nRowOut
 = 1;

4249 if–
pWInfo
->
pOrdîBy
 )ÖWInfo->
nOBS©
 =ÖWInfo->pOrdîBy->
nEx¥
;

4250 if–
pWInfo
->
w˘æFœgs
 & 
WHERE_WANT_DISTINCT
 ){

4251 
pWInfo
->
eDi°ö˘
 = 
WHERE_DISTINCT_UNIQUE
;

4253 #ifde‡
SQLITE_DEBUG


4254 
pLo›
->
cId
 = '0';

4259 
	}
}

4349 
WhîeInfo
 *
	$sqlôe3WhîeBegö
(

4350 
P¨£
 *
pP¨£
,

4351 
SrcLi°
 *
pTabLi°
,

4352 
Ex¥
 *
pWhîe
,

4353 
Ex¥Li°
 *
pOrdîBy
,

4354 
Ex¥Li°
 *
pDi°ö˘Së
,

4355 
u16
 
w˘æFœgs
,

4356 
iAuxArg


4359 
nByãWInfo
;

4360 
nTabLi°
;

4361 
WhîeInfo
 *
pWInfo
;

4362 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

4363 
Bômask
 
nŸRódy
;

4364 
WhîeLo›Buûdî
 
sWLB
;

4365 
WhîeMaskSë
 *
pMaskSë
;

4366 
WhîeLevñ
 *
pLevñ
;

4367 
WhîeLo›
 *
pLo›
;

4368 
ii
;

4369 
sqlôe3
 *
db
;

4370 
rc
;

4371 
u8
 
bF‹dñëe
 = 0;

4373 
	`as£π
–(
w˘æFœgs
 & 
WHERE_ONEPASS_MULTIROW
)==0 || (

4374 (
w˘æFœgs
 & 
WHERE_ONEPASS_DESIRED
)!=0

4375 && (
w˘æFœgs
 & 
WHERE_OR_SUBCLAUSE
)==0

4379 
	`as£π
–(
w˘æFœgs
 & 
WHERE_OR_SUBCLAUSE
)==0

4380 || (
w˘æFœgs
 & 
WHERE_USE_LIMIT
)==0 );

4383 
db
 = 
pP¨£
->db;

4384 
	`mem£t
(&
sWLB
, 0, (sWLB));

4387 
	`ã°ˇ£
–
pOrdîBy
 &&ÖOrdîBy->
nEx¥
==
BMS
-1 );

4388 if–
pOrdîBy
 &&ÖOrdîBy->
nEx¥
>=
BMS
 )ÖOrderBy = 0;

4389 
sWLB
.
pOrdîBy
 =ÖOrderBy;

4393 if–
	`O±imiz©i⁄DißbÀd
(
db
, 
SQLITE_Di°ö˘O±
) ){

4394 
w˘æFœgs
 &~
WHERE_WANT_DISTINCT
;

4400 
	`ã°ˇ£
–
pTabLi°
->
nSrc
==
BMS
 );

4401 if–
pTabLi°
->
nSrc
>
BMS
 ){

4402 
	`sqlôe3Eº‹Msg
(
pP¨£
, "© mo° %dÅabÀ†öá joö", 
BMS
);

4411 
nTabLi°
 = (
w˘æFœgs
 & 
WHERE_OR_SUBCLAUSE
Ë? 1 : 
pTabLi°
->
nSrc
;

4420 
nByãWInfo
 = 
	`ROUND8
((
WhîeInfo
)+(
nTabLi°
-1)*(
WhîeLevñ
));

4421 
pWInfo
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, 
nByãWInfo
 + (
WhîeLo›
));

4422 if–
db
->
mÆlocFaûed
 ){

4423 
	`sqlôe3DbFªe
(
db
, 
pWInfo
);

4424 
pWInfo
 = 0;

4425 
whîeBegöEº‹
;

4427 
pWInfo
->
pP¨£
 =ÖParse;

4428 
pWInfo
->
pTabLi°
 =ÖTabList;

4429 
pWInfo
->
pOrdîBy
 =ÖOrderBy;

4430 
pWInfo
->
pDi°ö˘Së
 =ÖDistinctSet;

4431 
pWInfo
->
aiCurO√Pass
[0] =ÖWInfo->aiCurOnePass[1] = -1;

4432 
pWInfo
->
nLevñ
 = 
nTabLi°
;

4433 
pWInfo
->
iBªak
 =ÖWInfo->
iC⁄töue
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

4434 
pWInfo
->
w˘æFœgs
 = wctrlFlags;

4435 
pWInfo
->
iLimô
 = 
iAuxArg
;

4436 
pWInfo
->
ßvedNQuîyLo›
 = 
pP¨£
->
nQuîyLo›
;

4437 
	`mem£t
(&
pWInfo
->
nOBS©
, 0,

4438 
	`off£tof
(
WhîeInfo
,
sWC
Ë- off£tof(WhîeInfo,
nOBS©
));

4439 
	`mem£t
(&
pWInfo
->
a
[0], 0, (
WhîeLo›
)+
nTabLi°
*(
WhîeLevñ
));

4440 
	`as£π
–
pWInfo
->
eO√Pass
==
ONEPASS_OFF
 );

4441 
pMaskSë
 = &
pWInfo
->
sMaskSë
;

4442 
sWLB
.
pWInfo
 =ÖWInfo;

4443 
sWLB
.
pWC
 = &
pWInfo
->
sWC
;

4444 
sWLB
.
pNew
 = (
WhîeLo›
*)(((*)
pWInfo
)+
nByãWInfo
);

4445 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(
sWLB
.
pNew
) );

4446 
	`whîeLo›Inô
(
sWLB
.
pNew
);

4447 #ifde‡
SQLITE_DEBUG


4448 
sWLB
.
pNew
->
cId
 = '*';

4454 
	`öôMaskSë
(
pMaskSë
);

4455 
	`sqlôe3WhîeCœu£Inô
(&
pWInfo
->
sWC
,ÖWInfo);

4456 
	`sqlôe3WhîeS∂ô
(&
pWInfo
->
sWC
, 
pWhîe
, 
TK_AND
);

4461 
ii
=0; ii<
sWLB
.
pWC
->
nTîm
; ii++){

4462 if–
nTabLi°
==0 || 
	`sqlôe3Ex¥IsC⁄°™tNŸJoö
(
sWLB
.
pWC
->
a
[
ii
].
pEx¥
) ){

4463 
	`sqlôe3Ex¥IfFÆ£
(
pP¨£
, 
sWLB
.
pWC
->
a
[
ii
].
pEx¥
, 
pWInfo
->
iBªak
,

4464 
SQLITE_JUMPIFNULL
);

4465 
sWLB
.
pWC
->
a
[
ii
].
wtFœgs
 |
TERM_CODED
;

4471 if–
nTabLi°
==0 ){

4472 if–
pOrdîBy
 ) 
pWInfo
->
nOBS©
 =ÖOrdîBy->
nEx¥
;

4473 if–
w˘æFœgs
 & 
WHERE_WANT_DISTINCT
 ){

4474 
pWInfo
->
eDi°ö˘
 = 
WHERE_DISTINCT_UNIQUE
;

4492 
ii
=0; ii<
pTabLi°
->
nSrc
; ii++){

4493 
	`¸óãMask
(
pMaskSë
, 
pTabLi°
->
a
[
ii
].
iCurs‹
);

4494 
	`sqlôe3WhîeTabFuncArgs
(
pP¨£
, &
pTabLi°
->
a
[
ii
], &
pWInfo
->
sWC
);

4496 #ifde‡
SQLITE_DEBUG


4497 
ii
=0; ii<
pTabLi°
->
nSrc
; ii++){

4498 
Bômask
 
m
 = 
	`sqlôe3WhîeGëMask
(
pMaskSë
, 
pTabLi°
->
a
[
ii
].
iCurs‹
);

4499 
	`as£π
–
m
==
	`MASKBIT
(
ii
) );

4504 
	`sqlôe3WhîeEx¥A«lyze
(
pTabLi°
, &
pWInfo
->
sWC
);

4505 if–
db
->
mÆlocFaûed
 ) 
whîeBegöEº‹
;

4507 if–
w˘æFœgs
 & 
WHERE_WANT_DISTINCT
 ){

4508 if–
	`isDi°ö˘Redund™t
(
pP¨£
, 
pTabLi°
, &
pWInfo
->
sWC
, 
pDi°ö˘Së
) ){

4510 
pWInfo
->
eDi°ö˘
 = 
WHERE_DISTINCT_UNIQUE
;

4511 }if–
pOrdîBy
==0 ){

4513 
pWInfo
->
w˘æFœgs
 |
WHERE_DISTINCTBY
;

4514 
pWInfo
->
pOrdîBy
 = 
pDi°ö˘Së
;

4519 #i‡
	`deföed
(
WHERETRACE_ENABLED
)

4520 if–
sqlôe3WhîeTø˚
 & 0xffff ){

4521 
	`sqlôe3DebugPrötf
("*** O±imizî Sèπ *** (w˘æFœgs: 0x%x",
w˘æFœgs
);

4522 if–
w˘æFœgs
 & 
WHERE_USE_LIMIT
 ){

4523 
	`sqlôe3DebugPrötf
(",Üimô: %d", 
iAuxArg
);

4525 
	`sqlôe3DebugPrötf
(")\n");

4527 if–
sqlôe3WhîeTø˚
 & 0x100 ){

4528 
	`sqlôe3WhîeCœu£Pröt
(
sWLB
.
pWC
);

4532 if–
nTabLi°
!=1 || 
	`whîeSh‹tCut
(&
sWLB
)==0 ){

4533 
rc
 = 
	`whîeLo›AddAŒ
(&
sWLB
);

4534 if–
rc
 ) 
whîeBegöEº‹
;

4536 #ifde‡
WHERETRACE_ENABLED


4537 if–
sqlôe3WhîeTø˚
 ){

4538 
WhîeLo›
 *
p
;

4539 
i
;

4540 c⁄° 
zLabñ
[] = "0123456789abcdefghijklmnopqrstuvwyxz"

4542 
p
=
pWInfo
->
pLo›s
, 
i
=0;Ö;Öı->
pNextLo›
, i++){

4543 
p
->
cId
 = 
zLabñ
[
i
%(zLabel)];

4544 
	`whîeLo›Pröt
(
p
, 
sWLB
.
pWC
);

4549 
	`whîeP©hSﬁvî
(
pWInfo
, 0);

4550 if–
db
->
mÆlocFaûed
 ) 
whîeBegöEº‹
;

4551 if–
pWInfo
->
pOrdîBy
 ){

4552 
	`whîeP©hSﬁvî
(
pWInfo
,ÖWInfo->
nRowOut
+1);

4553 if–
db
->
mÆlocFaûed
 ) 
whîeBegöEº‹
;

4556 if–
pWInfo
->
pOrdîBy
==0 && (
db
->
Êags
 & 
SQLITE_Revî£Ordî
)!=0 ){

4557 
pWInfo
->
ªvMask
 = 
ALLBITS
;

4559 if–
pP¨£
->
nEº
 || 
	`NEVER
(
db
->
mÆlocFaûed
) ){

4560 
whîeBegöEº‹
;

4562 #ifde‡
WHERETRACE_ENABLED


4563 if–
sqlôe3WhîeTø˚
 ){

4564 
	`sqlôe3DebugPrötf
("---- Sﬁuti⁄ÇRow=%d", 
pWInfo
->
nRowOut
);

4565 if–
pWInfo
->
nOBS©
>0 ){

4566 
	`sqlôe3DebugPrötf
(" ORDERBY=%d,0x%Œx", 
pWInfo
->
nOBS©
,ÖWInfo->
ªvMask
);

4568  
pWInfo
->
eDi°ö˘
 ){

4569 
WHERE_DISTINCT_UNIQUE
: {

4570 
	`sqlôe3DebugPrötf
(" DISTINCT=unique");

4573 
WHERE_DISTINCT_ORDERED
: {

4574 
	`sqlôe3DebugPrötf
(" DISTINCT=ordered");

4577 
WHERE_DISTINCT_UNORDERED
: {

4578 
	`sqlôe3DebugPrötf
(" DISTINCT=unordered");

4582 
	`sqlôe3DebugPrötf
("\n");

4583 
ii
=0; ii<
pWInfo
->
nLevñ
; ii++){

4584 
	`whîeLo›Pröt
(
pWInfo
->
a
[
ii
].
pWLo›
, 
sWLB
.
pWC
);

4589 if–
pWInfo
->
nLevñ
>=2

4590 && 
pDi°ö˘Së
!=0

4591 && 
	`O±imiz©i⁄E«bÀd
(
db
, 
SQLITE_OmôNo›Joö
)

4593 
Bômask
 
èbU£d
 = 
	`sqlôe3WhîeEx¥Li°Ußge
(
pMaskSë
, 
pDi°ö˘Së
);

4594 if–
sWLB
.
pOrdîBy
 ){

4595 
èbU£d
 |
	`sqlôe3WhîeEx¥Li°Ußge
(
pMaskSë
, 
sWLB
.
pOrdîBy
);

4597  
pWInfo
->
nLevñ
>=2 ){

4598 
WhîeTîm
 *
pTîm
, *
pEnd
;

4599 
pLo›
 = 
pWInfo
->
a
[pWInfo->
nLevñ
-1].
pWLo›
;

4600 if–(
pWInfo
->
pTabLi°
->
a
[
pLo›
->
iTab
].
fg
.
joöty≥
 & 
JT_LEFT
)==0 ) ;

4601 if–(
w˘æFœgs
 & 
WHERE_WANT_DISTINCT
)==0

4602 && (
pLo›
->
wsFœgs
 & 
WHERE_ONEROW
)==0

4606 if–(
èbU£d
 & 
pLo›
->
maskSñf
)!=0 ) ;

4607 
pEnd
 = 
sWLB
.
pWC
->
a
 + sWLB.pWC->
nTîm
;

4608 
pTîm
=
sWLB
.
pWC
->
a
;ÖTîm<
pEnd
;ÖTerm++){

4609 if–(
pTîm
->
¥îeqAŒ
 & 
pLo›
->
maskSñf
)!=0

4610 && !
	`Ex¥HasPr›îty
(
pTîm
->
pEx¥
, 
EP_FromJoö
)

4615 if–
pTîm
<
pEnd
 ) ;

4616 
	`WHERETRACE
(0xffff, ("-> dr›Üo› %¯nŸ u£d\n", 
pLo›
->
cId
));

4617 
pWInfo
->
nLevñ
--;

4618 
nTabLi°
--;

4621 
	`WHERETRACE
(0xffff,("*** Optimizer Finished ***\n"));

4622 
pWInfo
->
pP¨£
->
nQuîyLo›
 +pWInfo->
nRowOut
;

4627 
	`as£π
–(
w˘æFœgs
 & 
WHERE_ONEPASS_DESIRED
)==0 || 
pWInfo
->
nLevñ
==1 );

4628 if–(
w˘æFœgs
 & 
WHERE_ONEPASS_DESIRED
)!=0 ){

4629 
wsFœgs
 = 
pWInfo
->
a
[0].
pWLo›
->wsFlags;

4630 
bO√row
 = (
wsFœgs
 & 
WHERE_ONEROW
)!=0;

4631 if–
bO√row


4632 || ((
w˘æFœgs
 & 
WHERE_ONEPASS_MULTIROW
)!=0

4633 && 0==(
wsFœgs
 & 
WHERE_VIRTUALTABLE
))

4635 
pWInfo
->
eO√Pass
 = 
bO√row
 ? 
ONEPASS_SINGLE
 : 
ONEPASS_MULTI
;

4636 if–
	`HasRowid
(
pTabLi°
->
a
[0].
pTab
Ë&& (
wsFœgs
 & 
WHERE_IDX_ONLY
) ){

4637 if–
w˘æFœgs
 & 
WHERE_ONEPASS_MULTIROW
 ){

4638 
bF‹dñëe
 = 
OPFLAG_FORDELETE
;

4640 
pWInfo
->
a
[0].
pWLo›
->
wsFœgs
 = (wsFœg†& ~
WHERE_IDX_ONLY
);

4648 
ii
=0, 
pLevñ
=
pWInfo
->
a
; ii<
nTabLi°
; ii++,ÖLevel++){

4649 
TabÀ
 *
pTab
;

4650 
iDb
;

4651 
SrcLi°_ôem
 *
pTabIãm
;

4653 
pTabIãm
 = &
pTabLi°
->
a
[
pLevñ
->
iFrom
];

4654 
pTab
 = 
pTabIãm
->pTab;

4655 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pTab
->
pSchema
);

4656 
pLo›
 = 
pLevñ
->
pWLo›
;

4657 if–(
pTab
->
èbFœgs
 & 
TF_EphemîÆ
)!=0 ||ÖTab->
pSñe˘
 ){

4660 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


4661 if–(
pLo›
->
wsFœgs
 & 
WHERE_VIRTUALTABLE
)!=0 ){

4662 c⁄° *
pVTab
 = (c⁄° *)
	`sqlôe3GëVTabÀ
(
db
, 
pTab
);

4663 
iCur
 = 
pTabIãm
->
iCurs‹
;

4664 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_VO≥n
, 
iCur
, 0, 0, 
pVTab
, 
P4_VTAB
);

4665 }if–
	`IsVútuÆ
(
pTab
) ){

4669 if–(
pLo›
->
wsFœgs
 & 
WHERE_IDX_ONLY
)==0

4670 && (
w˘æFœgs
 & 
WHERE_OR_SUBCLAUSE
)==0 ){

4671 
›
 = 
OP_O≥nRód
;

4672 if–
pWInfo
->
eO√Pass
!=
ONEPASS_OFF
 ){

4673 
›
 = 
OP_O≥nWrôe
;

4674 
pWInfo
->
aiCurO√Pass
[0] = 
pTabIãm
->
iCurs‹
;

4676 
	`sqlôe3O≥nTabÀ
(
pP¨£
, 
pTabIãm
->
iCurs‹
, 
iDb
, 
pTab
, 
›
);

4677 
	`as£π
–
pTabIãm
->
iCurs‹
==
pLevñ
->
iTabCur
 );

4678 
	`ã°ˇ£
–
pWInfo
->
eO√Pass
==
ONEPASS_OFF
 && 
pTab
->
nCﬁ
==
BMS
-1 );

4679 
	`ã°ˇ£
–
pWInfo
->
eO√Pass
==
ONEPASS_OFF
 && 
pTab
->
nCﬁ
==
BMS
 );

4680 if–
pWInfo
->
eO√Pass
==
ONEPASS_OFF
 && 
pTab
->
nCﬁ
<
BMS
 && 
	`HasRowid
(pTab) ){

4681 
Bômask
 
b
 = 
pTabIãm
->
cﬁU£d
;

4682 
n
 = 0;

4683 ; 
b
; b=b>>1, 
n
++){}

4684 
	`sqlôe3VdbeCh™geP4
(
v
, -1, 
	`SQLITE_INT_TO_PTR
(
n
), 
P4_INT32
);

4685 
	`as£π
–
n
<=
pTab
->
nCﬁ
 );

4687 #ifde‡
SQLITE_ENABLE_CURSOR_HINTS


4688 if–
pLo›
->
u
.
båì
.
pIndex
!=0 ){

4689 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_SEEKEQ
|
bF‹dñëe
);

4693 
	`sqlôe3VdbeCh™geP5
(
v
, 
bF‹dñëe
);

4695 #ifde‡
SQLITE_ENABLE_COLUMN_USED_MASK


4696 
	`sqlôe3VdbeAddOp4Dup8
(
v
, 
OP_CﬁumnsU£d
, 
pTabIãm
->
iCurs‹
, 0, 0,

4697 (c⁄° 
u8
*)&
pTabIãm
->
cﬁU£d
, 
P4_INT64
);

4700 
	`sqlôe3TabÀLock
(
pP¨£
, 
iDb
, 
pTab
->
äum
, 0,ÖTab->
zName
);

4702 if–
pLo›
->
wsFœgs
 & 
WHERE_INDEXED
 ){

4703 
Index
 *
pIx
 = 
pLo›
->
u
.
båì
.
pIndex
;

4704 
iIndexCur
;

4705 
›
 = 
OP_O≥nRód
;

4707 
	`as£π
–
iAuxArg
!=0 || (
pWInfo
->
w˘æFœgs
 & 
WHERE_ONEPASS_DESIRED
)==0 );

4708 if–!
	`HasRowid
(
pTab
Ë&& 
	`IsPrim¨yKeyIndex
(
pIx
)

4709 && (
w˘æFœgs
 & 
WHERE_OR_SUBCLAUSE
)!=0

4713 
iIndexCur
 = 
pLevñ
->
iTabCur
;

4714 
›
 = 0;

4715 }if–
pWInfo
->
eO√Pass
!=
ONEPASS_OFF
 ){

4716 
Index
 *
pJ
 = 
pTabIãm
->
pTab
->
pIndex
;

4717 
iIndexCur
 = 
iAuxArg
;

4718 
	`as£π
–
w˘æFœgs
 & 
WHERE_ONEPASS_DESIRED
 );

4719  
	`ALWAYS
(
pJ
Ë&&ÖJ!=
pIx
 ){

4720 
iIndexCur
++;

4721 
pJ
 =ÖJ->
pNext
;

4723 
›
 = 
OP_O≥nWrôe
;

4724 
pWInfo
->
aiCurO√Pass
[1] = 
iIndexCur
;

4725 }if–
iAuxArg
 && (
w˘æFœgs
 & 
WHERE_OR_SUBCLAUSE
)!=0 ){

4726 
iIndexCur
 = 
iAuxArg
;

4727 
›
 = 
OP_Re›íIdx
;

4729 
iIndexCur
 = 
pP¨£
->
nTab
++;

4731 
pLevñ
->
iIdxCur
 = 
iIndexCur
;

4732 
	`as£π
–
pIx
->
pSchema
==
pTab
->pSchema );

4733 
	`as£π
–
iIndexCur
>=0 );

4734 if–
›
 ){

4735 
	`sqlôe3VdbeAddOp3
(
v
, 
›
, 
iIndexCur
, 
pIx
->
äum
, 
iDb
);

4736 
	`sqlôe3VdbeSëP4KeyInfo
(
pP¨£
, 
pIx
);

4737 if–(
pLo›
->
wsFœgs
 & 
WHERE_CONSTRAINT
)!=0

4738 && (
pLo›
->
wsFœgs
 & (
WHERE_COLUMN_RANGE
|
WHERE_SKIPSCAN
))==0

4739 && (
pWInfo
->
w˘æFœgs
&
WHERE_ORDERBY_MIN
)==0

4741 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_SEEKEQ
);

4743 
	`VdbeCommít
((
v
, "%s", 
pIx
->
zName
));

4744 #ifde‡
SQLITE_ENABLE_COLUMN_USED_MASK


4746 
u64
 
cﬁU£d
 = 0;

4747 
ii
, 
jj
;

4748 
ii
=0; ii<
pIx
->
nCﬁumn
; ii++){

4749 
jj
 = 
pIx
->
aiCﬁumn
[
ii
];

4750 if–
jj
<0 ) ;

4751 if–
jj
>63 ) jj = 63;

4752 if–(
pTabIãm
->
cﬁU£d
 & 
	`MASKBIT
(
jj
))==0 ) ;

4753 
cﬁU£d
 |((
u64
)1)<<(
ii
<63 ? ii : 63);

4755 
	`sqlôe3VdbeAddOp4Dup8
(
v
, 
OP_CﬁumnsU£d
, 
iIndexCur
, 0, 0,

4756 (
u8
*)&
cﬁU£d
, 
P4_INT64
);

4761 if–
iDb
>=0 ) 
	`sqlôe3CodeVîifySchema
(
pP¨£
, iDb);

4763 
pWInfo
->
iT›
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

4764 if–
db
->
mÆlocFaûed
 ) 
whîeBegöEº‹
;

4770 
nŸRódy
 = ~(
Bômask
)0;

4771 
ii
=0; ii<
nTabLi°
; ii++){

4772 
addrEx∂aö
;

4773 
wsFœgs
;

4774 
pLevñ
 = &
pWInfo
->
a
[
ii
];

4775 
wsFœgs
 = 
pLevñ
->
pWLo›
->wsFlags;

4776 #i‚de‡
SQLITE_OMIT_AUTOMATIC_INDEX


4777 if–(
pLevñ
->
pWLo›
->
wsFœgs
 & 
WHERE_AUTO_INDEX
)!=0 ){

4778 
	`c⁄°ru˘Autom©icIndex
(
pP¨£
, &
pWInfo
->
sWC
,

4779 &
pTabLi°
->
a
[
pLevñ
->
iFrom
], 
nŸRódy
,ÖLevel);

4780 if–
db
->
mÆlocFaûed
 ) 
whîeBegöEº‹
;

4783 
addrEx∂aö
 = 
	`sqlôe3WhîeEx∂aöO√Sˇn
(

4784 
pP¨£
, 
pTabLi°
, 
pLevñ
, 
ii
,ÖLevñ->
iFrom
, 
w˘æFœgs


4786 
pLevñ
->
addrBody
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

4787 
nŸRódy
 = 
	`sqlôe3WhîeCodeO√Lo›Sèπ
(
pWInfo
, 
ii
,ÇotReady);

4788 
pWInfo
->
iC⁄töue
 = 
pLevñ
->
addrC⁄t
;

4789 if–(
wsFœgs
&
WHERE_MULTI_OR
)==0 && (
w˘æFœgs
&
WHERE_OR_SUBCLAUSE
)==0 ){

4790 
	`sqlôe3WhîeAddSˇnSètus
(
v
, 
pTabLi°
, 
pLevñ
, 
addrEx∂aö
);

4795 
	`VdbeModuÀCommít
((
v
, "Begin WHERE-core"));

4796  
pWInfo
;

4799 
whîeBegöEº‹
:

4800 if–
pWInfo
 ){

4801 
pP¨£
->
nQuîyLo›
 = 
pWInfo
->
ßvedNQuîyLo›
;

4802 
	`whîeInfoFªe
(
db
, 
pWInfo
);

4805 
	}
}

4811 
	$sqlôe3WhîeEnd
(
WhîeInfo
 *
pWInfo
){

4812 
P¨£
 *
pP¨£
 = 
pWInfo
->pParse;

4813 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

4814 
i
;

4815 
WhîeLevñ
 *
pLevñ
;

4816 
WhîeLo›
 *
pLo›
;

4817 
SrcLi°
 *
pTabLi°
 = 
pWInfo
->pTabList;

4818 
sqlôe3
 *
db
 = 
pP¨£
->db;

4822 
	`VdbeModuÀCommít
((
v
, "End WHERE-core"));

4823 
	`sqlôe3Ex¥CacheCÀ¨
(
pP¨£
);

4824 
i
=
pWInfo
->
nLevñ
-1; i>=0; i--){

4825 
addr
;

4826 
pLevñ
 = &
pWInfo
->
a
[
i
];

4827 
pLo›
 = 
pLevñ
->
pWLo›
;

4828 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
pLevñ
->
addrC⁄t
);

4829 if–
pLevñ
->
›
!=
OP_No›
 ){

4830 
	`sqlôe3VdbeAddOp3
(
v
, 
pLevñ
->
›
,ÖLevñ->
p1
,ÖLevñ->
p2
,ÖLevñ->
p3
);

4831 
	`sqlôe3VdbeCh™geP5
(
v
, 
pLevñ
->
p5
);

4832 
	`VdbeCovîage
(
v
);

4833 
	`VdbeCovîageIf
(
v
, 
pLevñ
->
›
==
OP_Next
);

4834 
	`VdbeCovîageIf
(
v
, 
pLevñ
->
›
==
OP_Pªv
);

4835 
	`VdbeCovîageIf
(
v
, 
pLevñ
->
›
==
OP_VNext
);

4837 if–
pLo›
->
wsFœgs
 & 
WHERE_IN_ABLE
 && 
pLevñ
->
u
.
ö
.
nIn
>0 ){

4838 
InLo›
 *
pIn
;

4839 
j
;

4840 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
pLevñ
->
addrNxt
);

4841 
j
=
pLevñ
->
u
.
ö
.
nIn
, 
pIn
=&pLevñ->u.ö.
aInLo›
[j-1]; j>0; j--,ÖIn--){

4842 
	`sqlôe3VdbeJumpHîe
(
v
, 
pIn
->
addrInT›
+1);

4843 if–
pIn
->
eEndLo›Op
!=
OP_No›
 ){

4844 
	`sqlôe3VdbeAddOp2
(
v
, 
pIn
->
eEndLo›Op
,ÖIn->
iCur
,ÖIn->
addrInT›
);

4845 
	`VdbeCovîage
(
v
);

4846 
	`VdbeCovîageIf
(
v
, 
pIn
->
eEndLo›Op
==
OP_PªvIfO≥n
);

4847 
	`VdbeCovîageIf
(
v
, 
pIn
->
eEndLo›Op
==
OP_NextIfO≥n
);

4849 
	`sqlôe3VdbeJumpHîe
(
v
, 
pIn
->
addrInT›
-1);

4852 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
pLevñ
->
addrBrk
);

4853 if–
pLevñ
->
addrSkù
 ){

4854 
	`sqlôe3VdbeGŸo
(
v
, 
pLevñ
->
addrSkù
);

4855 
	`VdbeCommít
((
v
, "√xàskù-sˇ¿⁄ %s", 
pLo›
->
u
.
båì
.
pIndex
->
zName
));

4856 
	`sqlôe3VdbeJumpHîe
(
v
, 
pLevñ
->
addrSkù
);

4857 
	`sqlôe3VdbeJumpHîe
(
v
, 
pLevñ
->
addrSkù
-2);

4859 #i‚de‡
SQLITE_LIKE_DOESNT_MATCH_BLOBS


4860 if–
pLevñ
->
addrLikeRï
 ){

4861 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_De¸JumpZîo
, ()(
pLevñ
->
iLikeRïC¡r
>>1),

4862 
pLevñ
->
addrLikeRï
);

4863 
	`VdbeCovîage
(
v
);

4866 if–
pLevñ
->
iLe·Joö
 ){

4867 
ws
 = 
pLo›
->
wsFœgs
;

4868 
addr
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_IfPos
, 
pLevñ
->
iLe·Joö
); 
	`VdbeCovîage
(v);

4869 
	`as£π
–(
ws
 & 
WHERE_IDX_ONLY
)==0 || (w†& 
WHERE_INDEXED
)!=0 );

4870 if–(
ws
 & 
WHERE_IDX_ONLY
)==0 ){

4871 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_NuŒRow
, 
pTabLi°
->
a
[
i
].
iCurs‹
);

4873 if–(
ws
 & 
WHERE_INDEXED
)

4874 || ((
ws
 & 
WHERE_MULTI_OR
Ë&& 
pLevñ
->
u
.
pCovidx
)

4876 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_NuŒRow
, 
pLevñ
->
iIdxCur
);

4878 if–
pLevñ
->
›
==
OP_Rëu∫
 ){

4879 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Gosub
, 
pLevñ
->
p1
,ÖLevñ->
addrFú°
);

4881 
	`sqlôe3VdbeGŸo
(
v
, 
pLevñ
->
addrFú°
);

4883 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr
);

4885 
	`VdbeModuÀCommít
((
v
, "End WHERE-lo›%d: %s", 
i
,

4886 
pWInfo
->
pTabLi°
->
a
[
pLevñ
->
iFrom
].
pTab
->
zName
));

4892 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
pWInfo
->
iBªak
);

4894 
	`as£π
–
pWInfo
->
nLevñ
<=
pTabLi°
->
nSrc
 );

4895 
i
=0, 
pLevñ
=
pWInfo
->
a
; i<pWInfo->
nLevñ
; i++,ÖLevel++){

4896 
k
, 
œ°
;

4897 
VdbeOp
 *
pOp
;

4898 
Index
 *
pIdx
 = 0;

4899 
SrcLi°_ôem
 *
pTabIãm
 = &
pTabLi°
->
a
[
pLevñ
->
iFrom
];

4900 
TabÀ
 *
pTab
 = 
pTabIãm
->pTab;

4901 
	`as£π
–
pTab
!=0 );

4902 
pLo›
 = 
pLevñ
->
pWLo›
;

4908 if–
pTabIãm
->
fg
.
vüC‹outöe
 && !
db
->
mÆlocFaûed
 ){

4909 
	`å™¶©eCﬁumnToC›y
(
v
, 
pLevñ
->
addrBody
,ÖLevñ->
iTabCur
,

4910 
pTabIãm
->
ªgResu…
, 0);

4925 if–
pLo›
->
wsFœgs
 & (
WHERE_INDEXED
|
WHERE_IDX_ONLY
) ){

4926 
pIdx
 = 
pLo›
->
u
.
båì
.
pIndex
;

4927 }if–
pLo›
->
wsFœgs
 & 
WHERE_MULTI_OR
 ){

4928 
pIdx
 = 
pLevñ
->
u
.
pCovidx
;

4930 if–
pIdx


4931 && (
pWInfo
->
eO√Pass
==
ONEPASS_OFF
 || !
	`HasRowid
(
pIdx
->
pTabÀ
))

4932 && !
db
->
mÆlocFaûed


4934 
œ°
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

4935 
k
 = 
pLevñ
->
addrBody
;

4936 
pOp
 = 
	`sqlôe3VdbeGëOp
(
v
, 
k
);

4937 ; 
k
<
œ°
; k++, 
pOp
++){

4938 if–
pOp
->
p1
!=
pLevñ
->
iTabCur
 ) ;

4939 if–
pOp
->
›code
==
OP_Cﬁumn
 ){

4940 
x
 = 
pOp
->
p2
;

4941 
	`as£π
–
pIdx
->
pTabÀ
==
pTab
 );

4942 if–!
	`HasRowid
(
pTab
) ){

4943 
Index
 *
pPk
 = 
	`sqlôe3Prim¨yKeyIndex
(
pTab
);

4944 
x
 = 
pPk
->
aiCﬁumn
[x];

4945 
	`as£π
–
x
>=0 );

4947 
x
 = 
	`sqlôe3CﬁumnOfIndex
(
pIdx
, x);

4948 if–
x
>=0 ){

4949 
pOp
->
p2
 = 
x
;

4950 
pOp
->
p1
 = 
pLevñ
->
iIdxCur
;

4952 
	`as£π
–(
pLo›
->
wsFœgs
 & 
WHERE_IDX_ONLY
)==0 || 
x
>=0 );

4953 }if–
pOp
->
›code
==
OP_Rowid
 ){

4954 
pOp
->
p1
 = 
pLevñ
->
iIdxCur
;

4955 
pOp
->
›code
 = 
OP_IdxRowid
;

4963 
pP¨£
->
nQuîyLo›
 = 
pWInfo
->
ßvedNQuîyLo›
;

4964 
	`whîeInfoFªe
(
db
, 
pWInfo
);

4966 
	}
}

	@whereInt.h

21 #i‡
deföed
(
SQLITE_TEST
Ë|| deföed(
SQLITE_DEBUG
)

22  
	gsqlôe3WhîeTø˚
;

24 #i‡
deföed
(
SQLITE_DEBUG
) \

25 && (
deföed
(
SQLITE_TEST
Ë|| 
	$deföed
(
SQLITE_ENABLE_WHERETRACE
))

26 
	#WHERETRACE
(
K
,
X
Ëif(
sqlôe3WhîeTø˚
&(K)Ë
sqlôe3DebugPrötf
 
	)
X

27 
	#WHERETRACE_ENABLED
 1

	)

29 
	#WHERETRACE
(
K
,
X
)

	)

34 
WhîeCœu£
 
	tWhîeCœu£
;

35 
WhîeMaskSë
 
	tWhîeMaskSë
;

36 
WhîeOrInfo
 
	tWhîeOrInfo
;

37 
WhîeAndInfo
 
	tWhîeAndInfo
;

38 
WhîeLevñ
 
	tWhîeLevñ
;

39 
WhîeLo›
 
	tWhîeLo›
;

40 
WhîeP©h
 
	tWhîeP©h
;

41 
WhîeTîm
 
	tWhîeTîm
;

42 
WhîeLo›Buûdî
 
	tWhîeLo›Buûdî
;

43 
WhîeSˇn
 
	tWhîeSˇn
;

44 
WhîeOrCo°
 
	tWhîeOrCo°
;

45 
WhîeOrSë
 
	tWhîeOrSë
;

62 
	sWhîeLevñ
 {

63 
iLe·Joö
;

64 
iTabCur
;

65 
iIdxCur
;

66 
addrBrk
;

67 
addrNxt
;

68 
addrSkù
;

69 
addrC⁄t
;

70 
addrFú°
;

71 
addrBody
;

72 #i‚de‡
SQLITE_LIKE_DOESNT_MATCH_BLOBS


73 
u32
 
iLikeRïC¡r
;

74 
addrLikeRï
;

76 
u8
 
iFrom
;

77 
u8
 
›
, 
p3
, 
p5
;

78 
p1
, 
p2
;

81 
nIn
;

82 
	sInLo›
 {

83 
iCur
;

84 
addrInT›
;

85 
u8
 
eEndLo›Op
;

86 } *
aInLo›
;

87 } 
ö
;

88 
Index
 *
pCovidx
;

89 } 
u
;

90 
WhîeLo›
 *
pWLo›
;

91 
Bômask
 
nŸRódy
;

92 #ifde‡
SQLITE_ENABLE_STMT_SCANSTATUS


93 
addrVisô
;

111 
	sWhîeLo›
 {

112 
Bômask
 
¥îeq
;

113 
Bômask
 
maskSñf
;

114 #ifde‡
SQLITE_DEBUG


115 
cId
;

117 
u8
 
iTab
;

118 
u8
 
iS‹tIdx
;

119 
LogE°
 
rSëup
;

120 
LogE°
 
rRun
;

121 
LogE°
 
nOut
;

124 
u16
 
nEq
;

125 
u16
 
nBtm
;

126 
u16
 
nT›
;

127 
Index
 *
pIndex
;

128 } 
båì
;

130 
idxNum
;

131 
u8
 
√edFªe
;

132 
i8
 
isOrdîed
;

133 
u16
 
omôMask
;

134 *
idxSå
;

135 } 
vèb
;

136 } 
u
;

137 
u32
 
wsFœgs
;

138 
u16
 
nLTîm
;

139 
u16
 
nSkù
;

141 
	#WHERE_LOOP_XFER_SZ
 
	`off£tof
(
WhîeLo›
,
nLSlŸ
)

	)

142 
u16
 
nLSlŸ
;

143 
WhîeTîm
 **
aLTîm
;

144 
WhîeLo›
 *
pNextLo›
;

145 
WhîeTîm
 *
aLTîmS∑˚
[3];

152 
	sWhîeOrCo°
 {

153 
Bômask
 
¥îeq
;

154 
LogE°
 
rRun
;

155 
LogE°
 
nOut
;

162 
	#N_OR_COST
 3

	)

163 
	sWhîeOrSë
 {

164 
u16
 
n
;

165 
WhîeOrCo°
 
a
[
N_OR_COST
];

186 
	sWhîeP©h
 {

187 
Bômask
 
maskLo›
;

188 
Bômask
 
ªvLo›
;

189 
LogE°
 
nRow
;

190 
LogE°
 
rCo°
;

191 
LogE°
 
rUns‹ãd
;

192 
i8
 
isOrdîed
;

193 
WhîeLo›
 **
aLo›
;

247 
	sWhîeTîm
 {

248 
Ex¥
 *
pEx¥
;

249 
WhîeCœu£
 *
pWC
;

250 
LogE°
 
åuthProb
;

251 
u16
 
wtFœgs
;

252 
u16
 
eO≥øt‹
;

253 
u8
 
nChûd
;

254 
u8
 
eM©chOp
;

255 
iP¨ít
;

256 
À·Curs‹
;

257 
iFõld
;

259 
À·Cﬁumn
;

260 
WhîeOrInfo
 *
pOrInfo
;

261 
WhîeAndInfo
 *
pAndInfo
;

262 } 
u
;

263 
Bômask
 
¥îeqRight
;

264 
Bômask
 
¥îeqAŒ
;

270 
	#TERM_DYNAMIC
 0x01

	)

271 
	#TERM_VIRTUAL
 0x02

	)

272 
	#TERM_CODED
 0x04

	)

273 
	#TERM_COPIED
 0x08

	)

274 
	#TERM_ORINFO
 0x10

	)

275 
	#TERM_ANDINFO
 0x20

	)

276 
	#TERM_OR_OK
 0x40

	)

277 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


278 
	#TERM_VNULL
 0x80

	)

280 
	#TERM_VNULL
 0x00

	)

282 
	#TERM_LIKEOPT
 0x100

	)

283 
	#TERM_LIKECOND
 0x200

	)

284 
	#TERM_LIKE
 0x400

	)

285 
	#TERM_IS
 0x800

	)

291 
	sWhîeSˇn
 {

292 
WhîeCœu£
 *
pOrigWC
;

293 
WhîeCœu£
 *
pWC
;

294 c⁄° *
zCﬁlName
;

295 
Ex¥
 *
pIdxEx¥
;

296 
idxaff
;

297 
nEquiv
;

298 
iEquiv
;

299 
u32
 
›Mask
;

300 
k
;

301 
aiCur
[11];

302 
i16
 
aiCﬁumn
[11];

317 
	sWhîeCœu£
 {

318 
WhîeInfo
 *
pWInfo
;

319 
WhîeCœu£
 *
pOuãr
;

320 
u8
 
›
;

321 
nTîm
;

322 
nSlŸ
;

323 
WhîeTîm
 *
a
;

324 #i‡
	`deföed
(
SQLITE_SMALL_STACK
)

325 
WhîeTîm
 
aSètic
[1];

327 
WhîeTîm
 
aSètic
[8];

335 
	sWhîeOrInfo
 {

336 
WhîeCœu£
 
wc
;

337 
Bômask
 
ödexabÀ
;

344 
	sWhîeAndInfo
 {

345 
WhîeCœu£
 
wc
;

374 
	sWhîeMaskSë
 {

375 
n
;

376 
ix
[
BMS
];

382 
	#öôMaskSë
(
P
Ë(P)->
n
=0

	)

388 
	sWhîeLo›Buûdî
 {

389 
WhîeInfo
 *
pWInfo
;

390 
WhîeCœu£
 *
pWC
;

391 
Ex¥Li°
 *
pOrdîBy
;

392 
WhîeLo›
 *
pNew
;

393 
WhîeOrSë
 *
pOrSë
;

394 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


395 
U≈ackedRec‹d
 *
pRec
;

396 
nRecVÆid
;

410 
	sWhîeInfo
 {

411 
P¨£
 *
pP¨£
;

412 
SrcLi°
 *
pTabLi°
;

413 
Ex¥Li°
 *
pOrdîBy
;

414 
Ex¥Li°
 *
pDi°ö˘Së
;

415 
LogE°
 
iLimô
;

416 
aiCurO√Pass
[2];

417 
iC⁄töue
;

418 
iBªak
;

419 
ßvedNQuîyLo›
;

420 
u16
 
w˘æFœgs
;

421 
u8
 
nLevñ
;

422 
i8
 
nOBS©
;

423 
u8
 
s‹ãd
;

424 
u8
 
eO√Pass
;

425 
u8
 
u¡e°edTîms
;

426 
u8
 
eDi°ö˘
;

427 
u8
 
bOrdîedI¬îLo›
;

428 
iT›
;

429 
WhîeLo›
 *
pLo›s
;

430 
Bômask
 
ªvMask
;

431 
LogE°
 
nRowOut
;

432 
WhîeCœu£
 
sWC
;

433 
WhîeMaskSë
 
sMaskSë
;

434 
WhîeLevñ
 
a
[1];

442 
Bômask
 
	`sqlôe3WhîeGëMask
(
WhîeMaskSë
*,);

443 #ifde‡
WHERETRACE_ENABLED


444 
	`sqlôe3WhîeCœu£Pröt
(
WhîeCœu£
 *
pWC
);

446 
WhîeTîm
 *
	`sqlôe3WhîeFödTîm
(

447 
WhîeCœu£
 *
pWC
,

448 
iCur
,

449 
iCﬁumn
,

450 
Bômask
 
nŸRódy
,

451 
u32
 
›
,

452 
Index
 *
pIdx


456 #i‚de‡
SQLITE_OMIT_EXPLAIN


457 
	`sqlôe3WhîeEx∂aöO√Sˇn
(

458 
P¨£
 *
pP¨£
,

459 
SrcLi°
 *
pTabLi°
,

460 
WhîeLevñ
 *
pLevñ
,

461 
iLevñ
,

462 
iFrom
,

463 
u16
 
w˘æFœgs


466 
	#sqlôe3WhîeEx∂aöO√Sˇn
(
u
,
v
,
w
,
x
,
y
,
z
Ë0

	)

468 #ifde‡
SQLITE_ENABLE_STMT_SCANSTATUS


469 
	`sqlôe3WhîeAddSˇnSètus
(

470 
Vdbe
 *
v
,

471 
SrcLi°
 *
pSr˛i°
,

472 
WhîeLevñ
 *
pLvl
,

473 
addrEx∂aö


476 
	#sqlôe3WhîeAddSˇnSètus
(
a
, 
b
, 
c
, 
d
Ë(()d)

	)

478 
Bômask
 
	`sqlôe3WhîeCodeO√Lo›Sèπ
(

479 
WhîeInfo
 *
pWInfo
,

480 
iLevñ
,

481 
Bômask
 
nŸRódy


485 
	`sqlôe3WhîeCœu£Inô
(
WhîeCœu£
*,
WhîeInfo
*);

486 
	`sqlôe3WhîeCœu£CÀ¨
(
WhîeCœu£
*);

487 
	`sqlôe3WhîeS∂ô
(
WhîeCœu£
*,
Ex¥
*,
u8
);

488 
Bômask
 
	`sqlôe3WhîeEx¥Ußge
(
WhîeMaskSë
*, 
Ex¥
*);

489 
Bômask
 
	`sqlôe3WhîeEx¥Li°Ußge
(
WhîeMaskSë
*, 
Ex¥Li°
*);

490 
	`sqlôe3WhîeEx¥A«lyze
(
SrcLi°
*, 
WhîeCœu£
*);

491 
	`sqlôe3WhîeTabFuncArgs
(
P¨£
*, 
SrcLi°_ôem
*, 
WhîeCœu£
*);

511 
	#WO_IN
 0x0001

	)

512 
	#WO_EQ
 0x0002

	)

513 
	#WO_LT
 (
WO_EQ
<<(
TK_LT
-
TK_EQ
))

	)

514 
	#WO_LE
 (
WO_EQ
<<(
TK_LE
-
TK_EQ
))

	)

515 
	#WO_GT
 (
WO_EQ
<<(
TK_GT
-
TK_EQ
))

	)

516 
	#WO_GE
 (
WO_EQ
<<(
TK_GE
-
TK_EQ
))

	)

517 
	#WO_MATCH
 0x0040

	)

518 
	#WO_IS
 0x0080

	)

519 
	#WO_ISNULL
 0x0100

	)

520 
	#WO_OR
 0x0200

	)

521 
	#WO_AND
 0x0400

	)

522 
	#WO_EQUIV
 0x0800

	)

523 
	#WO_NOOP
 0x1000

	)

525 
	#WO_ALL
 0x1ff‡

	)

526 
	#WO_SINGLE
 0x01f‡

	)

533 
	#WHERE_COLUMN_EQ
 0x00000001

	)

534 
	#WHERE_COLUMN_RANGE
 0x00000002

	)

535 
	#WHERE_COLUMN_IN
 0x00000004

	)

536 
	#WHERE_COLUMN_NULL
 0x00000008

	)

537 
	#WHERE_CONSTRAINT
 0x0000000‡

	)

538 
	#WHERE_TOP_LIMIT
 0x00000010

	)

539 
	#WHERE_BTM_LIMIT
 0x00000020

	)

540 
	#WHERE_BOTH_LIMIT
 0x00000030

	)

541 
	#WHERE_IDX_ONLY
 0x00000040

	)

542 
	#WHERE_IPK
 0x00000100

	)

543 
	#WHERE_INDEXED
 0x00000200

	)

544 
	#WHERE_VIRTUALTABLE
 0x00000400

	)

545 
	#WHERE_IN_ABLE
 0x00000800

	)

546 
	#WHERE_ONEROW
 0x00001000

	)

547 
	#WHERE_MULTI_OR
 0x00002000

	)

548 
	#WHERE_AUTO_INDEX
 0x00004000

	)

549 
	#WHERE_SKIPSCAN
 0x00008000

	)

550 
	#WHERE_UNQ_WANTED
 0x00010000

	)

551 
	#WHERE_PARTIALIDX
 0x00020000

	)

	@wherecode.c

20 
	~"sqlôeI¡.h
"

21 
	~"whîeI¡.h
"

23 #i‚de‡
SQLITE_OMIT_EXPLAIN


28 c⁄° *
	$ex∂aöIndexCﬁumnName
(
Index
 *
pIdx
, 
i
){

29 
i
 = 
pIdx
->
aiCﬁumn
[i];

30 if–
i
==
XN_EXPR
 )  "<expr>";

31 if–
i
==
XN_ROWID
 )  "rowid";

32  
pIdx
->
pTabÀ
->
aCﬁ
[
i
].
zName
;

33 
	}
}

43 
	$ex∂aöAµídTîm
(

44 
SåAccum
 *
pSå
,

45 
Index
 *
pIdx
,

46 
nTîm
,

47 
iTîm
,

48 
bAnd
,

49 c⁄° *
zOp


51 
i
;

53 
	`as£π
–
nTîm
>=1 );

54 if–
bAnd
 ) 
	`sqlôe3SåAccumAµíd
(
pSå
, " AND ", 5);

56 if–
nTîm
>1 ) 
	`sqlôe3SåAccumAµíd
(
pSå
, "(", 1);

57 
i
=0; i<
nTîm
; i++){

58 if–
i
 ) 
	`sqlôe3SåAccumAµíd
(
pSå
, ",", 1);

59 
	`sqlôe3SåAccumAµídAŒ
(
pSå
, 
	`ex∂aöIndexCﬁumnName
(
pIdx
, 
iTîm
+
i
));

61 if–
nTîm
>1 ) 
	`sqlôe3SåAccumAµíd
(
pSå
, ")", 1);

63 
	`sqlôe3SåAccumAµíd
(
pSå
, 
zOp
, 1);

65 if–
nTîm
>1 ) 
	`sqlôe3SåAccumAµíd
(
pSå
, "(", 1);

66 
i
=0; i<
nTîm
; i++){

67 if–
i
 ) 
	`sqlôe3SåAccumAµíd
(
pSå
, ",", 1);

68 
	`sqlôe3SåAccumAµíd
(
pSå
, "?", 1);

70 if–
nTîm
>1 ) 
	`sqlôe3SåAccumAµíd
(
pSå
, ")", 1);

71 
	}
}

87 
	$ex∂aöIndexR™ge
(
SåAccum
 *
pSå
, 
WhîeLo›
 *
pLo›
){

88 
Index
 *
pIndex
 = 
pLo›
->
u
.
båì
.pIndex;

89 
u16
 
nEq
 = 
pLo›
->
u
.
båì
.nEq;

90 
u16
 
nSkù
 = 
pLo›
->nSkip;

91 
i
, 
j
;

93 if–
nEq
==0 && (
pLo›
->
wsFœgs
&(
WHERE_BTM_LIMIT
|
WHERE_TOP_LIMIT
))==0 ) ;

94 
	`sqlôe3SåAccumAµíd
(
pSå
, " (", 2);

95 
i
=0; i<
nEq
; i++){

96 c⁄° *
z
 = 
	`ex∂aöIndexCﬁumnName
(
pIndex
, 
i
);

97 if–
i
 ) 
	`sqlôe3SåAccumAµíd
(
pSå
, " AND ", 5);

98 
	`sqlôe3XPrötf
(
pSå
, 
i
>=
nSkù
 ? "%s=?" : "ANY(%s)", 
z
);

101 
j
 = 
i
;

102 if–
pLo›
->
wsFœgs
&
WHERE_BTM_LIMIT
 ){

103 
	`ex∂aöAµídTîm
(
pSå
, 
pIndex
, 
pLo›
->
u
.
båì
.
nBtm
, 
j
, 
i
, ">");

104 
i
 = 1;

106 if–
pLo›
->
wsFœgs
&
WHERE_TOP_LIMIT
 ){

107 
	`ex∂aöAµídTîm
(
pSå
, 
pIndex
, 
pLo›
->
u
.
båì
.
nT›
, 
j
, 
i
, "<");

109 
	`sqlôe3SåAccumAµíd
(
pSå
, ")", 1);

110 
	}
}

121 
	$sqlôe3WhîeEx∂aöO√Sˇn
(

122 
P¨£
 *
pP¨£
,

123 
SrcLi°
 *
pTabLi°
,

124 
WhîeLevñ
 *
pLevñ
,

125 
iLevñ
,

126 
iFrom
,

127 
u16
 
w˘æFœgs


129 
ªt
 = 0;

130 #i‡!
	`deföed
(
SQLITE_DEBUG
Ë&& !deföed(
SQLITE_ENABLE_STMT_SCANSTATUS
)

131 if–
pP¨£
->
ex∂aö
==2 )

134 
SrcLi°_ôem
 *
pIãm
 = &
pTabLi°
->
a
[
pLevñ
->
iFrom
];

135 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

136 
sqlôe3
 *
db
 = 
pP¨£
->db;

137 
iId
 = 
pP¨£
->
iSñe˘Id
;

138 
isSórch
;

139 
WhîeLo›
 *
pLo›
;

140 
u32
 
Êags
;

141 *
zMsg
;

142 
SåAccum
 
°r
;

143 
zBuf
[100];

145 
pLo›
 = 
pLevñ
->
pWLo›
;

146 
Êags
 = 
pLo›
->
wsFœgs
;

147 if–(
Êags
&
WHERE_MULTI_OR
Ë|| (
w˘æFœgs
&
WHERE_OR_SUBCLAUSE
) )  0;

149 
isSórch
 = (
Êags
&(
WHERE_BTM_LIMIT
|
WHERE_TOP_LIMIT
))!=0

150 || ((
Êags
&
WHERE_VIRTUALTABLE
)==0 && (
pLo›
->
u
.
båì
.
nEq
>0))

151 || (
w˘æFœgs
&(
WHERE_ORDERBY_MIN
|
WHERE_ORDERBY_MAX
));

153 
	`sqlôe3SåAccumInô
(&
°r
, 
db
, 
zBuf
, (zBuf), 
SQLITE_MAX_LENGTH
);

154 
	`sqlôe3SåAccumAµídAŒ
(&
°r
, 
isSórch
 ? "SEARCH" : "SCAN");

155 if–
pIãm
->
pSñe˘
 ){

156 
	`sqlôe3XPrötf
(&
°r
, " SUBQUERY %d", 
pIãm
->
iSñe˘Id
);

158 
	`sqlôe3XPrötf
(&
°r
, " TABLE %s", 
pIãm
->
zName
);

161 if–
pIãm
->
zAlüs
 ){

162 
	`sqlôe3XPrötf
(&
°r
, " AS %s", 
pIãm
->
zAlüs
);

164 if–(
Êags
 & (
WHERE_IPK
|
WHERE_VIRTUALTABLE
))==0 ){

165 c⁄° *
zFmt
 = 0;

166 
Index
 *
pIdx
;

168 
	`as£π
–
pLo›
->
u
.
båì
.
pIndex
!=0 );

169 
pIdx
 = 
pLo›
->
u
.
båì
.
pIndex
;

170 
	`as£π
–!(
Êags
&
WHERE_AUTO_INDEX
Ë|| (Êags&
WHERE_IDX_ONLY
) );

171 if–!
	`HasRowid
(
pIãm
->
pTab
Ë&& 
	`IsPrim¨yKeyIndex
(
pIdx
) ){

172 if–
isSórch
 ){

173 
zFmt
 = "PRIMARY KEY";

175 }if–
Êags
 & 
WHERE_PARTIALIDX
 ){

176 
zFmt
 = "AUTOMATIC PARTIAL COVERING INDEX";

177 }if–
Êags
 & 
WHERE_AUTO_INDEX
 ){

178 
zFmt
 = "AUTOMATIC COVERING INDEX";

179 }if–
Êags
 & 
WHERE_IDX_ONLY
 ){

180 
zFmt
 = "COVERING INDEX %s";

182 
zFmt
 = "INDEX %s";

184 if–
zFmt
 ){

185 
	`sqlôe3SåAccumAµíd
(&
°r
, " USING ", 7);

186 
	`sqlôe3XPrötf
(&
°r
, 
zFmt
, 
pIdx
->
zName
);

187 
	`ex∂aöIndexR™ge
(&
°r
, 
pLo›
);

189 }if–(
Êags
 & 
WHERE_IPK
)!=0 && (Êag†& 
WHERE_CONSTRAINT
)!=0 ){

190 c⁄° *
zR™geOp
;

191 if–
Êags
&(
WHERE_COLUMN_EQ
|
WHERE_COLUMN_IN
) ){

192 
zR™geOp
 = "=";

193 }if–(
Êags
&
WHERE_BOTH_LIMIT
)==WHERE_BOTH_LIMIT ){

194 
zR™geOp
 = ">? ANDÑowid<";

195 }if–
Êags
&
WHERE_BTM_LIMIT
 ){

196 
zR™geOp
 = ">";

198 
	`as£π
–
Êags
&
WHERE_TOP_LIMIT
);

199 
zR™geOp
 = "<";

201 
	`sqlôe3XPrötf
(&
°r
, " USING INTEGER PRIMARY KEY (rowid%s?)",
zR™geOp
);

203 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


204 if–(
Êags
 & 
WHERE_VIRTUALTABLE
)!=0 ){

205 
	`sqlôe3XPrötf
(&
°r
, " VIRTUAL TABLE INDEX %d:%s",

206 
pLo›
->
u
.
vèb
.
idxNum
,ÖLo›->u.vèb.
idxSå
);

209 #ifde‡
SQLITE_EXPLAIN_ESTIMATED_ROWS


210 if–
pLo›
->
nOut
>=10 ){

211 
	`sqlôe3XPrötf
(&
°r
, " (~%ŒuÑows)", 
	`sqlôe3LogE°ToI¡
(
pLo›
->
nOut
));

213 
	`sqlôe3SåAccumAµíd
(&
°r
, " (~1Ñow)", 9);

216 
zMsg
 = 
	`sqlôe3SåAccumFöish
(&
°r
);

217 
ªt
 = 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Ex∂aö
, 
iId
, 
iLevñ
, 
iFrom
, 
zMsg
,
P4_DYNAMIC
);

219  
ªt
;

220 
	}
}

223 #ifde‡
SQLITE_ENABLE_STMT_SCANSTATUS


233 
	$sqlôe3WhîeAddSˇnSètus
(

234 
Vdbe
 *
v
,

235 
SrcLi°
 *
pSr˛i°
,

236 
WhîeLevñ
 *
pLvl
,

237 
addrEx∂aö


239 c⁄° *
zObj
 = 0;

240 
WhîeLo›
 *
pLo›
 = 
pLvl
->
pWLo›
;

241 if–(
pLo›
->
wsFœgs
 & 
WHERE_VIRTUALTABLE
)==0 &&ÖLo›->
u
.
båì
.
pIndex
!=0 ){

242 
zObj
 = 
pLo›
->
u
.
båì
.
pIndex
->
zName
;

244 
zObj
 = 
pSr˛i°
->
a
[
pLvl
->
iFrom
].
zName
;

246 
	`sqlôe3VdbeSˇnSètus
(

247 
v
, 
addrEx∂aö
, 
pLvl
->
addrBody
,ÖLvl->
addrVisô
, 
pLo›
->
nOut
, 
zObj


249 
	}
}

295 
	$dißbÀTîm
(
WhîeLevñ
 *
pLevñ
, 
WhîeTîm
 *
pTîm
){

296 
nLo›
 = 0;

297  
	`ALWAYS
(
pTîm
!=0)

298 && (
pTîm
->
wtFœgs
 & 
TERM_CODED
)==0

299 && (
pLevñ
->
iLe·Joö
==0 || 
	`Ex¥HasPr›îty
(
pTîm
->
pEx¥
, 
EP_FromJoö
))

300 && (
pLevñ
->
nŸRódy
 & 
pTîm
->
¥îeqAŒ
)==0

302 if–
nLo›
 && (
pTîm
->
wtFœgs
 & 
TERM_LIKE
)!=0 ){

303 
pTîm
->
wtFœgs
 |
TERM_LIKECOND
;

305 
pTîm
->
wtFœgs
 |
TERM_CODED
;

307 if–
pTîm
->
iP¨ít
<0 ) ;

308 
pTîm
 = &pTîm->
pWC
->
a
[pTîm->
iP¨ít
];

309 
pTîm
->
nChûd
--;

310 if–
pTîm
->
nChûd
!=0 ) ;

311 
nLo›
++;

313 
	}
}

326 
	$codeAµlyAfföôy
(
P¨£
 *
pP¨£
, 
ba£
, 
n
, *
zAff
){

327 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

328 if–
zAff
==0 ){

329 
	`as£π
–
pP¨£
->
db
->
mÆlocFaûed
 );

332 
	`as£π
–
v
!=0 );

337  
n
>0 && 
zAff
[0]==
SQLITE_AFF_BLOB
 ){

338 
n
--;

339 
ba£
++;

340 
zAff
++;

342  
n
>1 && 
zAff
[n-1]==
SQLITE_AFF_BLOB
 ){

343 
n
--;

347 if–
n
>0 ){

348 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Afföôy
, 
ba£
, 
n
, 0, 
zAff
,Ç);

349 
	`sqlôe3Ex¥CacheAfföôyCh™ge
(
pP¨£
, 
ba£
, 
n
);

351 
	}
}

363 
	$upd©eR™geAfföôySå
(

364 
Ex¥
 *
pRight
,

365 
n
,

366 *
zAff


368 
i
;

369 
i
=0; i<
n
; i++){

370 
Ex¥
 *
p
 = 
	`sqlôe3Ve˘‹FõldSubex¥
(
pRight
, 
i
);

371 if–
	`sqlôe3Com∑ªAfföôy
(
p
, 
zAff
[
i
])==
SQLITE_AFF_BLOB


372 || 
	`sqlôe3Ex¥NìdsNoAfföôyCh™ge
(
p
, 
zAff
[
i
])

374 
zAff
[
i
] = 
SQLITE_AFF_BLOB
;

377 
	}
}

394 
	$codeEquÆôyTîm
(

395 
P¨£
 *
pP¨£
,

396 
WhîeTîm
 *
pTîm
,

397 
WhîeLevñ
 *
pLevñ
,

398 
iEq
,

399 
bRev
,

400 
iT¨gë


402 
Ex¥
 *
pX
 = 
pTîm
->
pEx¥
;

403 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

404 
iReg
;

406 
	`as£π
–
pLevñ
->
pWLo›
->
aLTîm
[
iEq
]==
pTîm
 );

407 
	`as£π
–
iT¨gë
>0 );

408 if–
pX
->
›
==
TK_EQ
 ||ÖX->›==
TK_IS
 ){

409 
iReg
 = 
	`sqlôe3Ex¥CodeT¨gë
(
pP¨£
, 
pX
->
pRight
, 
iT¨gë
);

410 }if–
pX
->
›
==
TK_ISNULL
 ){

411 
iReg
 = 
iT¨gë
;

412 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NuŒ
, 0, 
iReg
);

413 #i‚de‡
SQLITE_OMIT_SUBQUERY


415 
eTy≥
 = 
IN_INDEX_NOOP
;

416 
iTab
;

417 
InLo›
 *
pIn
;

418 
WhîeLo›
 *
pLo›
 = 
pLevñ
->
pWLo›
;

419 
i
;

420 
nEq
 = 0;

421 *
aiM≠
 = 0;

423 if–(
pLo›
->
wsFœgs
 & 
WHERE_VIRTUALTABLE
)==0

424 && 
pLo›
->
u
.
båì
.
pIndex
!=0

425 && 
pLo›
->
u
.
båì
.
pIndex
->
aS‹tOrdî
[
iEq
]

427 
	`ã°ˇ£
–
iEq
==0 );

428 
	`ã°ˇ£
–
bRev
 );

429 
bRev
 = !bRev;

431 
	`as£π
–
pX
->
›
==
TK_IN
 );

432 
iReg
 = 
iT¨gë
;

434 
i
=0; i<
iEq
; i++){

435 if–
pLo›
->
aLTîm
[
i
] &&ÖLo›->aLTîm[i]->
pEx¥
==
pX
 ){

436 
	`dißbÀTîm
(
pLevñ
, 
pTîm
);

437  
iT¨gë
;

440 
i
=
iEq
;i<
pLo›
->
nLTîm
; i++){

441 if–
	`ALWAYS
(
pLo›
->
aLTîm
[
i
]Ë&&ÖLo›->aLTîm[i]->
pEx¥
==
pX
 ) 
nEq
++;

444 if–(
pX
->
Êags
 & 
EP_xIsSñe˘
)==0 ||ÖX->
x
.
pSñe˘
->
pELi°
->
nEx¥
==1 ){

445 
eTy≥
 = 
	`sqlôe3FödInIndex
(
pP¨£
, 
pX
, 
IN_INDEX_LOOP
, 0, 0);

447 
Sñe˘
 *
pSñe˘
 = 
pX
->
x
.pSelect;

448 
sqlôe3
 *
db
 = 
pP¨£
->db;

449 
u16
 
ßvedDbO±Fœgs
 = 
db
->
dbO±Fœgs
;

450 
Ex¥Li°
 *
pOrigRhs
 = 
pSñe˘
->
pELi°
;

451 
Ex¥Li°
 *
pOrigLhs
 = 
pX
->
pLe·
->
x
.
pLi°
;

452 
Ex¥Li°
 *
pRhs
 = 0;

453 
Ex¥Li°
 *
pLhs
 = 0;

455 
i
=
iEq
;i<
pLo›
->
nLTîm
; i++){

456 if–
pLo›
->
aLTîm
[
i
]->
pEx¥
==
pX
 ){

457 
iFõld
 = 
pLo›
->
aLTîm
[
i
]->iField - 1;

458 
Ex¥
 *
pNewRhs
 = 
	`sqlôe3Ex¥Dup
(
db
, 
pOrigRhs
->
a
[
iFõld
].
pEx¥
, 0);

459 
Ex¥
 *
pNewLhs
 = 
	`sqlôe3Ex¥Dup
(
db
, 
pOrigLhs
->
a
[
iFõld
].
pEx¥
, 0);

461 
pRhs
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
,ÖRhs, 
pNewRhs
);

462 
pLhs
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
,ÖLhs, 
pNewLhs
);

465 if–!
db
->
mÆlocFaûed
 ){

466 
Ex¥
 *
pLe·
 = 
pX
->pLeft;

468 if–
pSñe˘
->
pOrdîBy
 ){

476 
Ex¥Li°
 *
pOrdîBy
 = 
pSñe˘
->pOrderBy;

477 
i
=0; i<
pOrdîBy
->
nEx¥
; i++){

478 
pOrdîBy
->
a
[
i
].
u
.
x
.
iOrdîByCﬁ
 = 0;

485 if–
pLhs
->
nEx¥
==1 ){

486 
pX
->
pLe·
 = 
pLhs
->
a
[0].
pEx¥
;

488 
pLe·
->
x
.
pLi°
 = 
pLhs
;

489 
aiM≠
 = (*)
	`sqlôe3DbMÆlocZîo
(
pP¨£
->
db
, (Ë* 
nEq
);

490 
	`ã°ˇ£
–
aiM≠
==0 );

492 
pSñe˘
->
pELi°
 = 
pRhs
;

493 
db
->
dbO±Fœgs
 |
SQLITE_QuîyFœâíî
;

494 
eTy≥
 = 
	`sqlôe3FödInIndex
(
pP¨£
, 
pX
, 
IN_INDEX_LOOP
, 0, 
aiM≠
);

495 
db
->
dbO±Fœgs
 = 
ßvedDbO±Fœgs
;

496 
	`ã°ˇ£
–
aiM≠
!=0 &&áiMap[0]!=0 );

497 
pSñe˘
->
pELi°
 = 
pOrigRhs
;

498 
pLe·
->
x
.
pLi°
 = 
pOrigLhs
;

499 
pX
->
pLe·
 =ÖLeft;

501 
	`sqlôe3Ex¥Li°Dñëe
(
pP¨£
->
db
, 
pLhs
);

502 
	`sqlôe3Ex¥Li°Dñëe
(
pP¨£
->
db
, 
pRhs
);

505 if–
eTy≥
==
IN_INDEX_INDEX_DESC
 ){

506 
	`ã°ˇ£
–
bRev
 );

507 
bRev
 = !bRev;

509 
iTab
 = 
pX
->
iTabÀ
;

510 
	`sqlôe3VdbeAddOp2
(
v
, 
bRev
 ? 
OP_La°
 : 
OP_Rewöd
, 
iTab
, 0);

511 
	`VdbeCovîageIf
(
v
, 
bRev
);

512 
	`VdbeCovîageIf
(
v
, !
bRev
);

513 
	`as£π
–(
pLo›
->
wsFœgs
 & 
WHERE_MULTI_OR
)==0 );

515 
pLo›
->
wsFœgs
 |
WHERE_IN_ABLE
;

516 if–
pLevñ
->
u
.
ö
.
nIn
==0 ){

517 
pLevñ
->
addrNxt
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

520 
i
 = 
pLevñ
->
u
.
ö
.
nIn
;

521 
pLevñ
->
u
.
ö
.
nIn
 +
nEq
;

522 
pLevñ
->
u
.
ö
.
aInLo›
 =

523 
	`sqlôe3DbRóŒocOrFªe
(
pP¨£
->
db
, 
pLevñ
->
u
.
ö
.
aInLo›
,

524 (
pLevñ
->
u
.
ö
.
aInLo›
[0])*pLevñ->u.ö.
nIn
);

525 
pIn
 = 
pLevñ
->
u
.
ö
.
aInLo›
;

526 if–
pIn
 ){

527 
iM≠
 = 0;

528 
pIn
 +
i
;

529 
i
=
iEq
;i<
pLo›
->
nLTîm
; i++){

530 if–
pLo›
->
aLTîm
[
i
]->
pEx¥
==
pX
 ){

531 
iOut
 = 
iReg
 + 
i
 - 
iEq
;

532 if–
eTy≥
==
IN_INDEX_ROWID
 ){

533 
	`ã°ˇ£
–
nEq
>1 );

534 
pIn
->
addrInT›
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rowid
, 
iTab
, 
iOut
);

536 
iCﬁ
 = 
aiM≠
 ?áiM≠[
iM≠
++] : 0;

537 
pIn
->
addrInT›
 = 
	`sqlôe3VdbeAddOp3
(
v
,
OP_Cﬁumn
,
iTab
, 
iCﬁ
, 
iOut
);

539 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_IsNuŒ
, 
iOut
); 
	`VdbeCovîage
(v);

540 if–
i
==
iEq
 ){

541 
pIn
->
iCur
 = 
iTab
;

542 
pIn
->
eEndLo›Op
 = 
bRev
 ? 
OP_PªvIfO≥n
 : 
OP_NextIfO≥n
;

544 
pIn
->
eEndLo›Op
 = 
OP_No›
;

546 
pIn
++;

550 
pLevñ
->
u
.
ö
.
nIn
 = 0;

552 
	`sqlôe3DbFªe
(
pP¨£
->
db
, 
aiM≠
);

555 
	`dißbÀTîm
(
pLevñ
, 
pTîm
);

556  
iReg
;

557 
	}
}

604 
	$codeAŒEquÆôyTîms
(

605 
P¨£
 *
pP¨£
,

606 
WhîeLevñ
 *
pLevñ
,

607 
bRev
,

608 
nExåaReg
,

609 **
pzAff


611 
u16
 
nEq
;

612 
u16
 
nSkù
;

613 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

614 
Index
 *
pIdx
;

615 
WhîeTîm
 *
pTîm
;

616 
WhîeLo›
 *
pLo›
;

617 
j
;

618 
ªgBa£
;

619 
nReg
;

620 *
zAff
;

623 
pLo›
 = 
pLevñ
->
pWLo›
;

624 
	`as£π
–(
pLo›
->
wsFœgs
 & 
WHERE_VIRTUALTABLE
)==0 );

625 
nEq
 = 
pLo›
->
u
.
båì
.nEq;

626 
nSkù
 = 
pLo›
->nSkip;

627 
pIdx
 = 
pLo›
->
u
.
båì
.
pIndex
;

628 
	`as£π
–
pIdx
!=0 );

632 
ªgBa£
 = 
pP¨£
->
nMem
 + 1;

633 
nReg
 = 
pLo›
->
u
.
båì
.
nEq
 + 
nExåaReg
;

634 
pP¨£
->
nMem
 +
nReg
;

636 
zAff
 = 
	`sqlôe3DbSåDup
(
pP¨£
->
db
,
	`sqlôe3IndexAfföôySå
’P¨£->db,
pIdx
));

637 
	`as£π
–
zAff
!=0 || 
pP¨£
->
db
->
mÆlocFaûed
 );

639 if–
nSkù
 ){

640 
iIdxCur
 = 
pLevñ
->iIdxCur;

641 
	`sqlôe3VdbeAddOp1
(
v
, (
bRev
?
OP_La°
:
OP_Rewöd
), 
iIdxCur
);

642 
	`VdbeCovîageIf
(
v
, 
bRev
==0);

643 
	`VdbeCovîageIf
(
v
, 
bRev
!=0);

644 
	`VdbeCommít
((
v
, "begö skù-sˇ¿⁄ %s", 
pIdx
->
zName
));

645 
j
 = 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_GŸo
);

646 
pLevñ
->
addrSkù
 = 
	`sqlôe3VdbeAddOp4I¡
(
v
, (
bRev
?
OP_SìkLT
:
OP_SìkGT
),

647 
iIdxCur
, 0, 
ªgBa£
, 
nSkù
);

648 
	`VdbeCovîageIf
(
v
, 
bRev
==0);

649 
	`VdbeCovîageIf
(
v
, 
bRev
!=0);

650 
	`sqlôe3VdbeJumpHîe
(
v
, 
j
);

651 
j
=0; j<
nSkù
; j++){

652 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
iIdxCur
, 
j
, 
ªgBa£
+j);

653 
	`ã°ˇ£
–
pIdx
->
aiCﬁumn
[
j
]==
XN_EXPR
 );

654 
	`VdbeCommít
((
v
, "%s", 
	`ex∂aöIndexCﬁumnName
(
pIdx
, 
j
)));

660 
	`as£π
–
zAff
==0 || ()
	`°æí
(zAff)>=
nEq
 );

661 
j
=
nSkù
; j<
nEq
; j++){

662 
r1
;

663 
pTîm
 = 
pLo›
->
aLTîm
[
j
];

664 
	`as£π
–
pTîm
!=0 );

667 
	`ã°ˇ£
–(
pTîm
->
wtFœgs
 & 
TERM_CODED
)!=0 );

668 
	`ã°ˇ£
–
pTîm
->
wtFœgs
 & 
TERM_VIRTUAL
 );

669 
r1
 = 
	`codeEquÆôyTîm
(
pP¨£
, 
pTîm
, 
pLevñ
, 
j
, 
bRev
, 
ªgBa£
+j);

670 if–
r1
!=
ªgBa£
+
j
 ){

671 if–
nReg
==1 ){

672 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgBa£
);

673 
ªgBa£
 = 
r1
;

675 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_SC›y
, 
r1
, 
ªgBa£
+
j
);

678 if–
pTîm
->
eO≥øt‹
 & 
WO_IN
 ){

679 if–
pTîm
->
pEx¥
->
Êags
 & 
EP_xIsSñe˘
 ){

684 if–
zAff
 ) zAff[
j
] = 
SQLITE_AFF_BLOB
;

686 }if–(
pTîm
->
eO≥øt‹
 & 
WO_ISNULL
)==0 ){

687 
Ex¥
 *
pRight
 = 
pTîm
->
pEx¥
->pRight;

688 if–(
pTîm
->
wtFœgs
 & 
TERM_IS
)==0 && 
	`sqlôe3Ex¥C™BeNuŒ
(
pRight
) ){

689 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IsNuŒ
, 
ªgBa£
+
j
, 
pLevñ
->
addrBrk
);

690 
	`VdbeCovîage
(
v
);

692 if–
zAff
 ){

693 if–
	`sqlôe3Com∑ªAfföôy
(
pRight
, 
zAff
[
j
])==
SQLITE_AFF_BLOB
 ){

694 
zAff
[
j
] = 
SQLITE_AFF_BLOB
;

696 if–
	`sqlôe3Ex¥NìdsNoAfföôyCh™ge
(
pRight
, 
zAff
[
j
]) ){

697 
zAff
[
j
] = 
SQLITE_AFF_BLOB
;

702 *
pzAff
 = 
zAff
;

703  
ªgBa£
;

704 
	}
}

706 #i‚de‡
SQLITE_LIKE_DOESNT_MATCH_BLOBS


724 
	$whîeLikeO±imiz©i⁄SåögFixup
(

725 
Vdbe
 *
v
,

726 
WhîeLevñ
 *
pLevñ
,

727 
WhîeTîm
 *
pTîm


729 if–
pTîm
->
wtFœgs
 & 
TERM_LIKEOPT
 ){

730 
VdbeOp
 *
pOp
;

731 
	`as£π
–
pLevñ
->
iLikeRïC¡r
>0 );

732 
pOp
 = 
	`sqlôe3VdbeGëOp
(
v
, -1);

733 
	`as£π
–
pOp
!=0 );

734 
	`as£π
–
pOp
->
›code
==
OP_Såög8


735 || 
pTîm
->
pWC
->
pWInfo
->
pP¨£
->
db
->
mÆlocFaûed
 );

736 
pOp
->
p3
 = ()(
pLevñ
->
iLikeRïC¡r
>>1);

737 
pOp
->
p5
 = (
u8
)(
pLevñ
->
iLikeRïC¡r
&1);

739 
	}
}

741 
	#whîeLikeO±imiz©i⁄SåögFixup
(
A
,
B
,
C
)

	)

744 #ifde‡
SQLITE_ENABLE_CURSOR_HINTS


750 
	sCCurHöt
 {

751 
	miTabCur
;

752 
	miIdxCur
;

753 
Index
 *
	mpIdx
;

762 
	$codeCurs‹HötCheckEx¥
(
WÆkî
 *
pWÆkî
, 
Ex¥
 *
pEx¥
){

763 
CCurHöt
 *
pHöt
 = 
pWÆkî
->
u
.
pCCurHöt
;

764 
	`as£π
–
pHöt
->
pIdx
!=0 );

765 if–
pEx¥
->
›
==
TK_COLUMN


766 && 
pEx¥
->
iTabÀ
==
pHöt
->
iTabCur


767 && 
	`sqlôe3CﬁumnOfIndex
(
pHöt
->
pIdx
, 
pEx¥
->
iCﬁumn
)<0

769 
pWÆkî
->
eCode
 = 1;

771  
WRC_C⁄töue
;

772 
	}
}

789 
	$codeCurs‹HötIsOrFun˘i⁄
(
WÆkî
 *
pWÆkî
, 
Ex¥
 *
pEx¥
){

790 if–
pEx¥
->
›
==
TK_IS


791 || 
pEx¥
->
›
==
TK_ISNULL
 ||ÖEx¥->›==
TK_ISNOT


792 || 
pEx¥
->
›
==
TK_NOTNULL
 ||ÖEx¥->›==
TK_CASE


794 
pWÆkî
->
eCode
 = 1;

795 }if–
pEx¥
->
›
==
TK_FUNCTION
 ){

796 
d1
;

797 
d2
[3];

798 if–0==
	`sqlôe3IsLikeFun˘i⁄
(
pWÆkî
->
pP¨£
->
db
, 
pEx¥
, &
d1
, 
d2
) ){

799 
pWÆkî
->
eCode
 = 1;

803  
WRC_C⁄töue
;

804 
	}
}

824 
	$codeCurs‹HötFixEx¥
(
WÆkî
 *
pWÆkî
, 
Ex¥
 *
pEx¥
){

825 
rc
 = 
WRC_C⁄töue
;

826 
CCurHöt
 *
pHöt
 = 
pWÆkî
->
u
.
pCCurHöt
;

827 if–
pEx¥
->
›
==
TK_COLUMN
 ){

828 if–
pEx¥
->
iTabÀ
!=
pHöt
->
iTabCur
 ){

829 
Vdbe
 *
v
 = 
pWÆkî
->
pP¨£
->
pVdbe
;

830 
ªg
 = ++
pWÆkî
->
pP¨£
->
nMem
;

831 
	`sqlôe3Ex¥CodeGëCﬁumnOfTabÀ
(

832 
v
, 
pEx¥
->
pTab
,ÖEx¥->
iTabÀ
,ÖEx¥->
iCﬁumn
, 
ªg


834 
pEx¥
->
›
 = 
TK_REGISTER
;

835 
pEx¥
->
iTabÀ
 = 
ªg
;

836 }if–
pHöt
->
pIdx
!=0 ){

837 
pEx¥
->
iTabÀ
 = 
pHöt
->
iIdxCur
;

838 
pEx¥
->
iCﬁumn
 = 
	`sqlôe3CﬁumnOfIndex
(
pHöt
->
pIdx
,ÖExpr->iColumn);

839 
	`as£π
–
pEx¥
->
iCﬁumn
>=0 );

841 }if–
pEx¥
->
›
==
TK_AGG_FUNCTION
 ){

849 
rc
 = 
WRC_Pru√
;

851  
rc
;

852 
	}
}

857 
	$codeCurs‹Höt
(

858 
SrcLi°_ôem
 *
pTabIãm
,

859 
WhîeInfo
 *
pWInfo
,

860 
WhîeLevñ
 *
pLevñ
,

861 
WhîeTîm
 *
pEndR™ge


863 
P¨£
 *
pP¨£
 = 
pWInfo
->pParse;

864 
sqlôe3
 *
db
 = 
pP¨£
->db;

865 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

866 
Ex¥
 *
pEx¥
 = 0;

867 
WhîeLo›
 *
pLo›
 = 
pLevñ
->
pWLo›
;

868 
iCur
;

869 
WhîeCœu£
 *
pWC
;

870 
WhîeTîm
 *
pTîm
;

871 
i
, 
j
;

872 
CCurHöt
 
sHöt
;

873 
WÆkî
 
sWÆkî
;

875 if–
	`O±imiz©i⁄DißbÀd
(
db
, 
SQLITE_Curs‹Höts
) ) ;

876 
iCur
 = 
pLevñ
->
iTabCur
;

877 
	`as£π
–
iCur
==
pWInfo
->
pTabLi°
->
a
[
pLevñ
->
iFrom
].
iCurs‹
 );

878 
sHöt
.
iTabCur
 = 
iCur
;

879 
sHöt
.
iIdxCur
 = 
pLevñ
->iIdxCur;

880 
sHöt
.
pIdx
 = 
pLo›
->
u
.
båì
.
pIndex
;

881 
	`mem£t
(&
sWÆkî
, 0, (sWalker));

882 
sWÆkî
.
pP¨£
 =ÖParse;

883 
sWÆkî
.
u
.
pCCurHöt
 = &
sHöt
;

884 
pWC
 = &
pWInfo
->
sWC
;

885 
i
=0; i<
pWC
->
nTîm
; i++){

886 
pTîm
 = &
pWC
->
a
[
i
];

887 if–
pTîm
->
wtFœgs
 & (
TERM_VIRTUAL
|
TERM_CODED
) ) ;

888 if–
pTîm
->
¥îeqAŒ
 & 
pLevñ
->
nŸRódy
 ) ;

912 if–
pTabIãm
->
fg
.
joöty≥
 & 
JT_LEFT
 ){

913 
Ex¥
 *
pEx¥
 = 
pTîm
->pExpr;

914 if–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_FromJoö
)

915 || 
pEx¥
->
iRightJoöTabÀ
!=
pTabIãm
->
iCurs‹


917 
sWÆkî
.
eCode
 = 0;

918 
sWÆkî
.
xEx¥CÆlback
 = 
codeCurs‹HötIsOrFun˘i⁄
;

919 
	`sqlôe3WÆkEx¥
(&
sWÆkî
, 
pTîm
->
pEx¥
);

920 if–
sWÆkî
.
eCode
 ) ;

923 if–
	`Ex¥HasPr›îty
(
pTîm
->
pEx¥
, 
EP_FromJoö
) ) ;

929 if–
pLo›
->
u
.
båì
.
nEq
==0 && 
pTîm
!=
pEndR™ge
 ){

930 
j
=0; j<
pLo›
->
nLTîm
 &&ÖLo›->
aLTîm
[j]!=
pTîm
; j++){}

931 if–
j
<
pLo›
->
nLTîm
 ) ;

935 if–
	`sqlôe3Ex¥C⁄èösSubquîy
(
pTîm
->
pEx¥
) ) ;

939 if–
sHöt
.
pIdx
!=0 ){

940 
sWÆkî
.
eCode
 = 0;

941 
sWÆkî
.
xEx¥CÆlback
 = 
codeCurs‹HötCheckEx¥
;

942 
	`sqlôe3WÆkEx¥
(&
sWÆkî
, 
pTîm
->
pEx¥
);

943 if–
sWÆkî
.
eCode
 ) ;

947 
pEx¥
 = 
	`sqlôe3Ex¥And
(
db
,ÖEx¥, 
	`sqlôe3Ex¥Dup
(db, 
pTîm
->pExpr, 0));

949 if–
pEx¥
!=0 ){

950 
sWÆkî
.
xEx¥CÆlback
 = 
codeCurs‹HötFixEx¥
;

951 
	`sqlôe3WÆkEx¥
(&
sWÆkî
, 
pEx¥
);

952 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Curs‹Höt
,

953 (
sHöt
.
pIdx
 ? sHöt.
iIdxCur
 : sHöt.
iTabCur
), 0, 0,

954 (c⁄° *)
pEx¥
, 
P4_EXPR
);

956 
	}
}

958 
	#codeCurs‹Höt
(
A
,
B
,
C
,
D
Ë

	)

979 
	$codeDe„ºedSìk
(

980 
WhîeInfo
 *
pWInfo
,

981 
Index
 *
pIdx
,

982 
iCur
,

983 
iIdxCur


985 
P¨£
 *
pP¨£
 = 
pWInfo
->pParse;

986 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

988 
	`as£π
–
iIdxCur
>0 );

989 
	`as£π
–
pIdx
->
aiCﬁumn
[pIdx->
nCﬁumn
-1]==-1 );

991 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Sìk
, 
iIdxCur
, 0, 
iCur
);

992 if–(
pWInfo
->
w˘æFœgs
 & 
WHERE_OR_SUBCLAUSE
)

993 && 
	`DbMaskAŒZîo
(
	`sqlôe3P¨£T›Àvñ
(
pP¨£
)->
wrôeMask
)

995 
i
;

996 
TabÀ
 *
pTab
 = 
pIdx
->
pTabÀ
;

997 *
ai
 = (*)
	`sqlôe3DbMÆlocZîo
(
pP¨£
->
db
, ()*(
pTab
->
nCﬁ
+1));

998 if–
ai
 ){

999 
ai
[0] = 
pTab
->
nCﬁ
;

1000 
i
=0; i<
pIdx
->
nCﬁumn
-1; i++){

1001 
	`as£π
–
pIdx
->
aiCﬁumn
[
i
]<
pTab
->
nCﬁ
 );

1002 if–
pIdx
->
aiCﬁumn
[
i
]>=0 ) 
ai
[pIdx->aiColumn[i]+1] = i+1;

1004 
	`sqlôe3VdbeCh™geP4
(
v
, -1, (*)
ai
, 
P4_INTARRAY
);

1007 
	}
}

1018 
	$codeEx¥OrVe˘‹
(
P¨£
 *
pP¨£
, 
Ex¥
 *
p
, 
iReg
, 
nReg
){

1019 
	`as£π
–
nReg
>0 );

1020 if–
	`sqlôe3Ex¥IsVe˘‹
(
p
) ){

1021 #i‚de‡
SQLITE_OMIT_SUBQUERY


1022 if–(
p
->
Êags
 & 
EP_xIsSñe˘
) ){

1023 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

1024 
iSñe˘
 = 
	`sqlôe3CodeSub£À˘
(
pP¨£
, 
p
, 0, 0);

1025 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_C›y
, 
iSñe˘
, 
iReg
, 
nReg
-1);

1029 
i
;

1030 
Ex¥Li°
 *
pLi°
 = 
p
->
x
.pList;

1031 
	`as£π
–
nReg
<=
pLi°
->
nEx¥
 );

1032 
i
=0; i<
nReg
; i++){

1033 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pLi°
->
a
[
i
].
pEx¥
, 
iReg
+i);

1037 
	`as£π
–
nReg
==1 );

1038 
	`sqlôe3Ex¥Code
(
pP¨£
, 
p
, 
iReg
);

1040 
	}
}

1046 
Bômask
 
	$sqlôe3WhîeCodeO√Lo›Sèπ
(

1047 
WhîeInfo
 *
pWInfo
,

1048 
iLevñ
,

1049 
Bômask
 
nŸRódy


1051 
j
, 
k
;

1052 
iCur
;

1053 
addrNxt
;

1054 
omôTabÀ
;

1055 
bRev
;

1056 
WhîeLevñ
 *
pLevñ
;

1057 
WhîeLo›
 *
pLo›
;

1058 
WhîeCœu£
 *
pWC
;

1059 
WhîeTîm
 *
pTîm
;

1060 
P¨£
 *
pP¨£
;

1061 
sqlôe3
 *
db
;

1062 
Vdbe
 *
v
;

1063 
SrcLi°_ôem
 *
pTabIãm
;

1064 
addrBrk
;

1065 
addrC⁄t
;

1066 
iRowidReg
 = 0;

1067 
iRñó£Reg
 = 0;

1069 
pP¨£
 = 
pWInfo
->pParse;

1070 
v
 = 
pP¨£
->
pVdbe
;

1071 
pWC
 = &
pWInfo
->
sWC
;

1072 
db
 = 
pP¨£
->db;

1073 
pLevñ
 = &
pWInfo
->
a
[
iLevñ
];

1074 
pLo›
 = 
pLevñ
->
pWLo›
;

1075 
pTabIãm
 = &
pWInfo
->
pTabLi°
->
a
[
pLevñ
->
iFrom
];

1076 
iCur
 = 
pTabIãm
->
iCurs‹
;

1077 
pLevñ
->
nŸRódy
 =ÇŸRódy & ~
	`sqlôe3WhîeGëMask
(&
pWInfo
->
sMaskSë
, 
iCur
);

1078 
bRev
 = (
pWInfo
->
ªvMask
>>
iLevñ
)&1;

1079 
omôTabÀ
 = (
pLo›
->
wsFœgs
 & 
WHERE_IDX_ONLY
)!=0

1080 && (
pWInfo
->
w˘æFœgs
 & 
WHERE_OR_SUBCLAUSE
)==0;

1081 
	`VdbeModuÀCommít
((
v
, "Begö WHERE-lo›%d: %s",
iLevñ
,
pTabIãm
->
pTab
->
zName
));

1093 
addrBrk
 = 
pLevñ
->addrBrk =ÖLevñ->
addrNxt
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

1094 
addrC⁄t
 = 
pLevñ
->addrC⁄à
	`sqlôe3VdbeMakeLabñ
(
v
);

1100 if–
pLevñ
->
iFrom
>0 && (
pTabIãm
[0].
fg
.
joöty≥
 & 
JT_LEFT
)!=0 ){

1101 
pLevñ
->
iLe·Joö
 = ++
pP¨£
->
nMem
;

1102 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 0, 
pLevñ
->
iLe·Joö
);

1103 
	`VdbeCommít
((
v
, "init LEFT JOINÇo-match flag"));

1107 if–
pTabIãm
->
fg
.
vüC‹outöe
 ){

1108 
ªgYõld
 = 
pTabIãm
->
ªgRëu∫
;

1109 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_InôC‹outöe
, 
ªgYõld
, 0, 
pTabIãm
->
addrFûlSub
);

1110 
pLevñ
->
p2
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Yõld
, 
ªgYõld
, 
addrBrk
);

1111 
	`VdbeCovîage
(
v
);

1112 
	`VdbeCommít
((
v
, "√xàrow o‡\"%s\"", 
pTabIãm
->
pTab
->
zName
));

1113 
pLevñ
->
›
 = 
OP_GŸo
;

1116 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


1117 if–(
pLo›
->
wsFœgs
 & 
WHERE_VIRTUALTABLE
)!=0 ){

1121 
iReg
;

1122 
addrNŸFound
;

1123 
nC⁄°øöt
 = 
pLo›
->
nLTîm
;

1124 
iIn
;

1126 
	`sqlôe3Ex¥CachePush
(
pP¨£
);

1127 
iReg
 = 
	`sqlôe3GëTempR™ge
(
pP¨£
, 
nC⁄°øöt
+2);

1128 
addrNŸFound
 = 
pLevñ
->
addrBrk
;

1129 
j
=0; j<
nC⁄°øöt
; j++){

1130 
iT¨gë
 = 
iReg
+
j
+2;

1131 
pTîm
 = 
pLo›
->
aLTîm
[
j
];

1132 if–
	`NEVER
(
pTîm
==0) ) ;

1133 if–
pTîm
->
eO≥øt‹
 & 
WO_IN
 ){

1134 
	`codeEquÆôyTîm
(
pP¨£
, 
pTîm
, 
pLevñ
, 
j
, 
bRev
, 
iT¨gë
);

1135 
addrNŸFound
 = 
pLevñ
->
addrNxt
;

1137 
Ex¥
 *
pRight
 = 
pTîm
->
pEx¥
->pRight;

1138 
	`codeEx¥OrVe˘‹
(
pP¨£
, 
pRight
, 
iT¨gë
, 1);

1141 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 
pLo›
->
u
.
vèb
.
idxNum
, 
iReg
);

1142 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 
nC⁄°øöt
, 
iReg
+1);

1143 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_VFûãr
, 
iCur
, 
addrNŸFound
, 
iReg
,

1144 
pLo›
->
u
.
vèb
.
idxSå
,

1145 
pLo›
->
u
.
vèb
.
√edFªe
 ? 
P4_DYNAMIC
 : 
P4_STATIC
);

1146 
	`VdbeCovîage
(
v
);

1147 
pLo›
->
u
.
vèb
.
√edFªe
 = 0;

1148 
pLevñ
->
p1
 = 
iCur
;

1149 
pLevñ
->
›
 = 
pWInfo
->
eO√Pass
 ? 
OP_No›
 : 
OP_VNext
;

1150 
pLevñ
->
p2
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

1151 
iIn
 = 
pLevñ
->
u
.
ö
.
nIn
;

1152 
j
=
nC⁄°øöt
-1; j>=0; j--){

1153 
pTîm
 = 
pLo›
->
aLTîm
[
j
];

1154 if–
j
<16 && (
pLo›
->
u
.
vèb
.
omôMask
>>j)&1 ){

1155 
	`dißbÀTîm
(
pLevñ
, 
pTîm
);

1156 }if–(
pTîm
->
eO≥øt‹
 & 
WO_IN
)!=0 ){

1157 
Ex¥
 *
pCom∑ª
;

1158 
Ex¥
 *
pRight
;

1159 
VdbeOp
 *
pOp
;

1165 
	`as£π
–
pLevñ
->
u
.
ö
.
aInLo›
!=0 || 
db
->
mÆlocFaûed
 );

1166 if–!
db
->
mÆlocFaûed
 ){

1167 
	`as£π
–
iIn
>0 );

1168 
pOp
 = 
	`sqlôe3VdbeGëOp
(
v
, 
pLevñ
->
u
.
ö
.
aInLo›
[--
iIn
].
addrInT›
);

1169 
	`as£π
–
pOp
->
›code
==
OP_Cﬁumn
 ||ÖOp->›code==
OP_Rowid
 );

1170 
	`as£π
–
pOp
->
›code
!=
OP_Cﬁumn
 ||ÖOp->
p3
==
iReg
+
j
+2 );

1171 
	`as£π
–
pOp
->
›code
!=
OP_Rowid
 ||ÖOp->
p2
==
iReg
+
j
+2 );

1172 
	`ã°ˇ£
–
pOp
->
›code
==
OP_Rowid
 );

1173 
	`sqlôe3VdbeAddOp3
(
v
, 
pOp
->
›code
,ÖOp->
p1
,ÖOp->
p2
,ÖOp->
p3
);

1178 
pCom∑ª
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_EQ
, 0, 0);

1179 
	`as£π
–
pCom∑ª
!=0 || 
db
->
mÆlocFaûed
 );

1180 if–
pCom∑ª
 ){

1181 
pCom∑ª
->
pLe·
 = 
pTîm
->
pEx¥
->pLeft;

1182 
pCom∑ª
->
pRight
 =ÖRighà
	`sqlôe3Ex¥
(
db
, 
TK_REGISTER
, 0);

1183 if–
pRight
 ){

1184 
pRight
->
iTabÀ
 = 
iReg
+
j
+2;

1185 
	`sqlôe3Ex¥IfFÆ£
(
pP¨£
, 
pCom∑ª
, 
pLevñ
->
addrC⁄t
, 0);

1187 
pCom∑ª
->
pLe·
 = 0;

1188 
	`sqlôe3Ex¥Dñëe
(
db
, 
pCom∑ª
);

1199 
	`sqlôe3Ex¥CacheP›
(
pP¨£
);

1203 if–(
pLo›
->
wsFœgs
 & 
WHERE_IPK
)!=0

1204 && (
pLo›
->
wsFœgs
 & (
WHERE_COLUMN_IN
|
WHERE_COLUMN_EQ
))!=0

1211 
	`as£π
–
pLo›
->
u
.
båì
.
nEq
==1 );

1212 
pTîm
 = 
pLo›
->
aLTîm
[0];

1213 
	`as£π
–
pTîm
!=0 );

1214 
	`as£π
–
pTîm
->
pEx¥
!=0 );

1215 
	`as£π
–
omôTabÀ
==0 );

1216 
	`ã°ˇ£
–
pTîm
->
wtFœgs
 & 
TERM_VIRTUAL
 );

1217 
iRñó£Reg
 = ++
pP¨£
->
nMem
;

1218 
iRowidReg
 = 
	`codeEquÆôyTîm
(
pP¨£
, 
pTîm
, 
pLevñ
, 0, 
bRev
, 
iRñó£Reg
);

1219 if–
iRowidReg
!=
iRñó£Reg
 ) 
	`sqlôe3Rñó£TempReg
(
pP¨£
, iReleaseReg);

1220 
addrNxt
 = 
pLevñ
->addrNxt;

1221 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_SìkRowid
, 
iCur
, 
addrNxt
, 
iRowidReg
);

1222 
	`VdbeCovîage
(
v
);

1223 
	`sqlôe3Ex¥CacheAfföôyCh™ge
(
pP¨£
, 
iRowidReg
, 1);

1224 
	`sqlôe3Ex¥CacheSt‹e
(
pP¨£
, 
iCur
, -1, 
iRowidReg
);

1225 
	`VdbeCommít
((
v
, "pk"));

1226 
pLevñ
->
›
 = 
OP_No›
;

1227 }if–(
pLo›
->
wsFœgs
 & 
WHERE_IPK
)!=0

1228 && (
pLo›
->
wsFœgs
 & 
WHERE_COLUMN_RANGE
)!=0

1232 
ã°Op
 = 
OP_No›
;

1233 
°¨t
;

1234 
memEndVÆue
 = 0;

1235 
WhîeTîm
 *
pSèπ
, *
pEnd
;

1237 
	`as£π
–
omôTabÀ
==0 );

1238 
j
 = 0;

1239 
pSèπ
 = 
pEnd
 = 0;

1240 if–
pLo›
->
wsFœgs
 & 
WHERE_BTM_LIMIT
 ) 
pSèπ
 =ÖLo›->
aLTîm
[
j
++];

1241 if–
pLo›
->
wsFœgs
 & 
WHERE_TOP_LIMIT
 ) 
pEnd
 =ÖLo›->
aLTîm
[
j
++];

1242 
	`as£π
–
pSèπ
!=0 || 
pEnd
!=0 );

1243 if–
bRev
 ){

1244 
pTîm
 = 
pSèπ
;

1245 
pSèπ
 = 
pEnd
;

1246 
pEnd
 = 
pTîm
;

1248 
	`codeCurs‹Höt
(
pTabIãm
, 
pWInfo
, 
pLevñ
, 
pEnd
);

1249 if–
pSèπ
 ){

1250 
Ex¥
 *
pX
;

1251 
r1
, 
rTemp
;

1252 
›
;

1257 c⁄° 
u8
 
aMoveOp
[] = {

1258  
OP_SìkGT
,

1259  
OP_SìkLE
,

1260  
OP_SìkLT
,

1261  
OP_SìkGE


1263 
	`as£π
–
TK_LE
==
TK_GT
+1 );

1264 
	`as£π
–
TK_LT
==
TK_GT
+2 );

1265 
	`as£π
–
TK_GE
==
TK_GT
+3 );

1267 
	`as£π
–(
pSèπ
->
wtFœgs
 & 
TERM_VNULL
)==0 );

1268 
	`ã°ˇ£
–
pSèπ
->
wtFœgs
 & 
TERM_VIRTUAL
 );

1269 
pX
 = 
pSèπ
->
pEx¥
;

1270 
	`as£π
–
pX
!=0 );

1271 
	`ã°ˇ£
–
pSèπ
->
À·Curs‹
!=
iCur
 );

1272 if–
	`sqlôe3Ex¥IsVe˘‹
(
pX
->
pRight
) ){

1273 
r1
 = 
rTemp
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

1274 
	`codeEx¥OrVe˘‹
(
pP¨£
, 
pX
->
pRight
, 
r1
, 1);

1275 
›
 = 
aMoveOp
[(
pX
->› - 
TK_GT
) | 0x0001];

1277 
r1
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pX
->
pRight
, &
rTemp
);

1278 
	`dißbÀTîm
(
pLevñ
, 
pSèπ
);

1279 
›
 = 
aMoveOp
[(
pX
->› - 
TK_GT
)];

1281 
	`sqlôe3VdbeAddOp3
(
v
, 
›
, 
iCur
, 
addrBrk
, 
r1
);

1282 
	`VdbeCommít
((
v
, "pk"));

1283 
	`VdbeCovîageIf
(
v
, 
pX
->
›
==
TK_GT
);

1284 
	`VdbeCovîageIf
(
v
, 
pX
->
›
==
TK_LE
);

1285 
	`VdbeCovîageIf
(
v
, 
pX
->
›
==
TK_LT
);

1286 
	`VdbeCovîageIf
(
v
, 
pX
->
›
==
TK_GE
);

1287 
	`sqlôe3Ex¥CacheAfföôyCh™ge
(
pP¨£
, 
r1
, 1);

1288 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
rTemp
);

1290 
	`sqlôe3VdbeAddOp2
(
v
, 
bRev
 ? 
OP_La°
 : 
OP_Rewöd
, 
iCur
, 
addrBrk
);

1291 
	`VdbeCovîageIf
(
v
, 
bRev
==0);

1292 
	`VdbeCovîageIf
(
v
, 
bRev
!=0);

1294 if–
pEnd
 ){

1295 
Ex¥
 *
pX
;

1296 
pX
 = 
pEnd
->
pEx¥
;

1297 
	`as£π
–
pX
!=0 );

1298 
	`as£π
–(
pEnd
->
wtFœgs
 & 
TERM_VNULL
)==0 );

1299 
	`ã°ˇ£
–
pEnd
->
À·Curs‹
!=
iCur
 );

1300 
	`ã°ˇ£
–
pEnd
->
wtFœgs
 & 
TERM_VIRTUAL
 );

1301 
memEndVÆue
 = ++
pP¨£
->
nMem
;

1302 
	`codeEx¥OrVe˘‹
(
pP¨£
, 
pX
->
pRight
, 
memEndVÆue
, 1);

1303 if–0==
	`sqlôe3Ex¥IsVe˘‹
(
pX
->
pRight
)

1304 && (
pX
->
›
==
TK_LT
 ||ÖX->›==
TK_GT
)

1306 
ã°Op
 = 
bRev
 ? 
OP_Le
 : 
OP_Ge
;

1308 
ã°Op
 = 
bRev
 ? 
OP_Lt
 : 
OP_Gt
;

1310 if–0==
	`sqlôe3Ex¥IsVe˘‹
(
pX
->
pRight
) ){

1311 
	`dißbÀTîm
(
pLevñ
, 
pEnd
);

1314 
°¨t
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

1315 
pLevñ
->
›
 = 
bRev
 ? 
OP_Pªv
 : 
OP_Next
;

1316 
pLevñ
->
p1
 = 
iCur
;

1317 
pLevñ
->
p2
 = 
°¨t
;

1318 
	`as£π
–
pLevñ
->
p5
==0 );

1319 if–
ã°Op
!=
OP_No›
 ){

1320 
iRowidReg
 = ++
pP¨£
->
nMem
;

1321 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rowid
, 
iCur
, 
iRowidReg
);

1322 
	`sqlôe3Ex¥CacheSt‹e
(
pP¨£
, 
iCur
, -1, 
iRowidReg
);

1323 
	`sqlôe3VdbeAddOp3
(
v
, 
ã°Op
, 
memEndVÆue
, 
addrBrk
, 
iRowidReg
);

1324 
	`VdbeCovîageIf
(
v
, 
ã°Op
==
OP_Le
);

1325 
	`VdbeCovîageIf
(
v
, 
ã°Op
==
OP_Lt
);

1326 
	`VdbeCovîageIf
(
v
, 
ã°Op
==
OP_Ge
);

1327 
	`VdbeCovîageIf
(
v
, 
ã°Op
==
OP_Gt
);

1328 
	`sqlôe3VdbeCh™geP5
(
v
, 
SQLITE_AFF_NUMERIC
 | 
SQLITE_JUMPIFNULL
);

1330 }if–
pLo›
->
wsFœgs
 & 
WHERE_INDEXED
 ){

1362 c⁄° 
u8
 
aSèπOp
[] = {

1365 
OP_Rewöd
,

1366 
OP_La°
,

1367 
OP_SìkGT
,

1368 
OP_SìkLT
,

1369 
OP_SìkGE
,

1370 
OP_SìkLE


1372 c⁄° 
u8
 
aEndOp
[] = {

1373 
OP_IdxGE
,

1374 
OP_IdxGT
,

1375 
OP_IdxLE
,

1376 
OP_IdxLT
,

1378 
u16
 
nEq
 = 
pLo›
->
u
.
båì
.nEq;

1379 
u16
 
nBtm
 = 
pLo›
->
u
.
båì
.nBtm;

1380 
u16
 
nT›
 = 
pLo›
->
u
.
båì
.nTop;

1381 
ªgBa£
;

1382 
WhîeTîm
 *
pR™geSèπ
 = 0;

1383 
WhîeTîm
 *
pR™geEnd
 = 0;

1384 
°¨tEq
;

1385 
ídEq
;

1386 
°¨t_c⁄°øöts
;

1387 
nC⁄°øöt
;

1388 
Index
 *
pIdx
;

1389 
iIdxCur
;

1390 
nExåaReg
 = 0;

1391 
›
;

1392 *
zSèπAff
;

1393 *
zEndAff
 = 0;

1394 
u8
 
bSìkPa°NuŒ
 = 0;

1395 
u8
 
bSt›AtNuŒ
 = 0;

1397 
pIdx
 = 
pLo›
->
u
.
båì
.
pIndex
;

1398 
iIdxCur
 = 
pLevñ
->iIdxCur;

1399 
	`as£π
–
nEq
>=
pLo›
->
nSkù
 );

1409 
	`as£π
–
pWInfo
->
pOrdîBy
==0

1410 || 
pWInfo
->
pOrdîBy
->
nEx¥
==1

1411 || (
pWInfo
->
w˘æFœgs
&
WHERE_ORDERBY_MIN
)==0 );

1412 if–(
pWInfo
->
w˘æFœgs
&
WHERE_ORDERBY_MIN
)!=0

1413 && 
pWInfo
->
nOBS©
>0

1414 && (
pIdx
->
nKeyCﬁ
>
nEq
)

1416 
	`as£π
–
pLo›
->
nSkù
==0 );

1417 
bSìkPa°NuŒ
 = 1;

1418 
nExåaReg
 = 1;

1424 
j
 = 
nEq
;

1425 if–
pLo›
->
wsFœgs
 & 
WHERE_BTM_LIMIT
 ){

1426 
pR™geSèπ
 = 
pLo›
->
aLTîm
[
j
++];

1427 
nExåaReg
 = 
	`MAX
“ExåaReg, 
pLo›
->
u
.
båì
.
nBtm
);

1429 
	`as£π
–(
pR™geSèπ
->
wtFœgs
 & 
TERM_LIKEOPT
)==0 ||

1430 (
pLo›
->
wsFœgs
 & 
WHERE_TOP_LIMIT
)!=0 );

1432 if–
pLo›
->
wsFœgs
 & 
WHERE_TOP_LIMIT
 ){

1433 
pR™geEnd
 = 
pLo›
->
aLTîm
[
j
++];

1434 
nExåaReg
 = 
	`MAX
“ExåaReg, 
pLo›
->
u
.
båì
.
nT›
);

1435 #i‚de‡
SQLITE_LIKE_DOESNT_MATCH_BLOBS


1436 if–(
pR™geEnd
->
wtFœgs
 & 
TERM_LIKEOPT
)!=0 ){

1437 
	`as£π
–
pR™geSèπ
!=0 );

1438 
	`as£π
–
pR™geSèπ
->
wtFœgs
 & 
TERM_LIKEOPT
 );

1439 
pLevñ
->
iLikeRïC¡r
 = (
u32
)++
pP¨£
->
nMem
;

1440 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 1, ()
pLevñ
->
iLikeRïC¡r
);

1441 
	`VdbeCommít
((
v
, "LIKEÜoop counter"));

1442 
pLevñ
->
addrLikeRï
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

1445 
	`ã°ˇ£
–
bRev
 );

1446 
	`ã°ˇ£
–
pIdx
->
aS‹tOrdî
[
nEq
]==
SQLITE_SO_DESC
 );

1447 
	`as£π
–(
bRev
 & ~1)==0 );

1448 
pLevñ
->
iLikeRïC¡r
 <<=1;

1449 
pLevñ
->
iLikeRïC¡r
 |
bRev
 ^ (
pIdx
->
aS‹tOrdî
[
nEq
]==
SQLITE_SO_DESC
);

1452 if–
pR™geSèπ
==0 ){

1453 
j
 = 
pIdx
->
aiCﬁumn
[
nEq
];

1454 if–(
j
>=0 && 
pIdx
->
pTabÀ
->
aCﬁ
[j].
nŸNuŒ
==0Ë|| j==
XN_EXPR
 ){

1455 
bSìkPa°NuŒ
 = 1;

1459 
	`as£π
–
pR™geEnd
==0 || (pR™geEnd->
wtFœgs
 & 
TERM_VNULL
)==0 );

1465 if–(
nEq
<
pIdx
->
nKeyCﬁ
 && 
bRev
==’Idx->
aS‹tOrdî
[nEq]==
SQLITE_SO_ASC
))

1466 || (
bRev
 && 
pIdx
->
nKeyCﬁ
==
nEq
)

1468 
	`SWAP
(
WhîeTîm
 *, 
pR™geEnd
, 
pR™geSèπ
);

1469 
	`SWAP
(
u8
, 
bSìkPa°NuŒ
, 
bSt›AtNuŒ
);

1470 
	`SWAP
(
u8
, 
nBtm
, 
nT›
);

1477 
	`codeCurs‹Höt
(
pTabIãm
, 
pWInfo
, 
pLevñ
, 
pR™geEnd
);

1478 
ªgBa£
 = 
	`codeAŒEquÆôyTîms
(
pP¨£
,
pLevñ
,
bRev
,
nExåaReg
,&
zSèπAff
);

1479 
	`as£π
–
zSèπAff
==0 || 
	`sqlôe3SåÀn30
(zSèπAff)>=
nEq
 );

1480 if–
zSèπAff
 && 
nT›
 ){

1481 
zEndAff
 = 
	`sqlôe3DbSåDup
(
db
, &
zSèπAff
[
nEq
]);

1483 
addrNxt
 = 
pLevñ
->addrNxt;

1485 
	`ã°ˇ£
–
pR™geSèπ
 && (pR™geSèπ->
eO≥øt‹
 & 
WO_LE
)!=0 );

1486 
	`ã°ˇ£
–
pR™geSèπ
 && (pR™geSèπ->
eO≥øt‹
 & 
WO_GE
)!=0 );

1487 
	`ã°ˇ£
–
pR™geEnd
 && (pR™geEnd->
eO≥øt‹
 & 
WO_LE
)!=0 );

1488 
	`ã°ˇ£
–
pR™geEnd
 && (pR™geEnd->
eO≥øt‹
 & 
WO_GE
)!=0 );

1489 
°¨tEq
 = !
pR™geSèπ
 ||ÖR™geSèπ->
eO≥øt‹
 & (
WO_LE
|
WO_GE
);

1490 
ídEq
 = !
pR™geEnd
 ||ÖR™geEnd->
eO≥øt‹
 & (
WO_LE
|
WO_GE
);

1491 
°¨t_c⁄°øöts
 = 
pR™geSèπ
 || 
nEq
>0;

1494 
nC⁄°øöt
 = 
nEq
;

1495 if–
pR™geSèπ
 ){

1496 
Ex¥
 *
pRight
 = 
pR™geSèπ
->
pEx¥
->pRight;

1497 
	`codeEx¥OrVe˘‹
(
pP¨£
, 
pRight
, 
ªgBa£
+
nEq
, 
nBtm
);

1498 
	`whîeLikeO±imiz©i⁄SåögFixup
(
v
, 
pLevñ
, 
pR™geSèπ
);

1499 if–(
pR™geSèπ
->
wtFœgs
 & 
TERM_VNULL
)==0

1500 && 
	`sqlôe3Ex¥C™BeNuŒ
(
pRight
)

1502 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IsNuŒ
, 
ªgBa£
+
nEq
, 
addrNxt
);

1503 
	`VdbeCovîage
(
v
);

1505 if–
zSèπAff
 ){

1506 
	`upd©eR™geAfföôySå
(
pRight
, 
nBtm
, &
zSèπAff
[
nEq
]);

1508 
nC⁄°øöt
 +
nBtm
;

1509 
	`ã°ˇ£
–
pR™geSèπ
->
wtFœgs
 & 
TERM_VIRTUAL
 );

1510 if–
	`sqlôe3Ex¥IsVe˘‹
(
pRight
)==0 ){

1511 
	`dißbÀTîm
(
pLevñ
, 
pR™geSèπ
);

1513 
°¨tEq
 = 1;

1515 
bSìkPa°NuŒ
 = 0;

1516 }if–
bSìkPa°NuŒ
 ){

1517 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NuŒ
, 0, 
ªgBa£
+
nEq
);

1518 
nC⁄°øöt
++;

1519 
°¨tEq
 = 0;

1520 
°¨t_c⁄°øöts
 = 1;

1522 
	`codeAµlyAfföôy
(
pP¨£
, 
ªgBa£
, 
nC⁄°øöt
 - 
bSìkPa°NuŒ
, 
zSèπAff
);

1523 if–
pLo›
->
nSkù
>0 && 
nC⁄°øöt
==pLoop->nSkip ){

1528 
›
 = 
aSèπOp
[(
°¨t_c⁄°øöts
<<2Ë+ (
°¨tEq
<<1Ë+ 
bRev
];

1529 
	`as£π
–
›
!=0 );

1530 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
›
, 
iIdxCur
, 
addrNxt
, 
ªgBa£
, 
nC⁄°øöt
);

1531 
	`VdbeCovîage
(
v
);

1532 
	`VdbeCovîageIf
(
v
, 
›
==
OP_Rewöd
); 
	`ã°ˇ£
( op==OP_Rewind );

1533 
	`VdbeCovîageIf
(
v
, 
›
==
OP_La°
); 
	`ã°ˇ£
( op==OP_Last );

1534 
	`VdbeCovîageIf
(
v
, 
›
==
OP_SìkGT
); 
	`ã°ˇ£
( op==OP_SeekGT );

1535 
	`VdbeCovîageIf
(
v
, 
›
==
OP_SìkGE
); 
	`ã°ˇ£
( op==OP_SeekGE );

1536 
	`VdbeCovîageIf
(
v
, 
›
==
OP_SìkLE
); 
	`ã°ˇ£
( op==OP_SeekLE );

1537 
	`VdbeCovîageIf
(
v
, 
›
==
OP_SìkLT
); 
	`ã°ˇ£
( op==OP_SeekLT );

1543 
nC⁄°øöt
 = 
nEq
;

1544 if–
pR™geEnd
 ){

1545 
Ex¥
 *
pRight
 = 
pR™geEnd
->
pEx¥
->pRight;

1546 
	`sqlôe3Ex¥CacheRemove
(
pP¨£
, 
ªgBa£
+
nEq
, 1);

1547 
	`codeEx¥OrVe˘‹
(
pP¨£
, 
pRight
, 
ªgBa£
+
nEq
, 
nT›
);

1548 
	`whîeLikeO±imiz©i⁄SåögFixup
(
v
, 
pLevñ
, 
pR™geEnd
);

1549 if–(
pR™geEnd
->
wtFœgs
 & 
TERM_VNULL
)==0

1550 && 
	`sqlôe3Ex¥C™BeNuŒ
(
pRight
)

1552 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IsNuŒ
, 
ªgBa£
+
nEq
, 
addrNxt
);

1553 
	`VdbeCovîage
(
v
);

1555 if–
zEndAff
 ){

1556 
	`upd©eR™geAfföôySå
(
pRight
, 
nT›
, 
zEndAff
);

1557 
	`codeAµlyAfföôy
(
pP¨£
, 
ªgBa£
+
nEq
, 
nT›
, 
zEndAff
);

1559 
	`as£π
–
pP¨£
->
db
->
mÆlocFaûed
 );

1561 
nC⁄°øöt
 +
nT›
;

1562 
	`ã°ˇ£
–
pR™geEnd
->
wtFœgs
 & 
TERM_VIRTUAL
 );

1564 if–
	`sqlôe3Ex¥IsVe˘‹
(
pRight
)==0 ){

1565 
	`dißbÀTîm
(
pLevñ
, 
pR™geEnd
);

1567 
ídEq
 = 1;

1569 }if–
bSt›AtNuŒ
 ){

1570 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NuŒ
, 0, 
ªgBa£
+
nEq
);

1571 
ídEq
 = 0;

1572 
nC⁄°øöt
++;

1574 
	`sqlôe3DbFªe
(
db
, 
zSèπAff
);

1575 
	`sqlôe3DbFªe
(
db
, 
zEndAff
);

1578 
pLevñ
->
p2
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

1581 if–
nC⁄°øöt
 ){

1582 
›
 = 
aEndOp
[
bRev
*2 + 
ídEq
];

1583 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
›
, 
iIdxCur
, 
addrNxt
, 
ªgBa£
, 
nC⁄°øöt
);

1584 
	`ã°ˇ£
–
›
==
OP_IdxGT
 ); 
	`VdbeCovîageIf
(
v
, op==OP_IdxGT );

1585 
	`ã°ˇ£
–
›
==
OP_IdxGE
 ); 
	`VdbeCovîageIf
(
v
, op==OP_IdxGE );

1586 
	`ã°ˇ£
–
›
==
OP_IdxLT
 ); 
	`VdbeCovîageIf
(
v
, op==OP_IdxLT );

1587 
	`ã°ˇ£
–
›
==
OP_IdxLE
 ); 
	`VdbeCovîageIf
(
v
, op==OP_IdxLE );

1591 if–
omôTabÀ
 ){

1593 }if–
	`HasRowid
(
pIdx
->
pTabÀ
) ){

1594 if–(
pWInfo
->
w˘æFœgs
 & 
WHERE_SEEK_TABLE
)!=0 ){

1595 
iRowidReg
 = ++
pP¨£
->
nMem
;

1596 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IdxRowid
, 
iIdxCur
, 
iRowidReg
);

1597 
	`sqlôe3Ex¥CacheSt‹e
(
pP¨£
, 
iCur
, -1, 
iRowidReg
);

1598 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_NŸExi°s
, 
iCur
, 0, 
iRowidReg
);

1599 
	`VdbeCovîage
(
v
);

1601 
	`codeDe„ºedSìk
(
pWInfo
, 
pIdx
, 
iCur
, 
iIdxCur
);

1603 }if–
iCur
!=
iIdxCur
 ){

1604 
Index
 *
pPk
 = 
	`sqlôe3Prim¨yKeyIndex
(
pIdx
->
pTabÀ
);

1605 
iRowidReg
 = 
	`sqlôe3GëTempR™ge
(
pP¨£
, 
pPk
->
nKeyCﬁ
);

1606 
j
=0; j<
pPk
->
nKeyCﬁ
; j++){

1607 
k
 = 
	`sqlôe3CﬁumnOfIndex
(
pIdx
, 
pPk
->
aiCﬁumn
[
j
]);

1608 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
iIdxCur
, 
k
, 
iRowidReg
+
j
);

1610 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_NŸFound
, 
iCur
, 
addrC⁄t
,

1611 
iRowidReg
, 
pPk
->
nKeyCﬁ
); 
	`VdbeCovîage
(
v
);

1615 if–
pLo›
->
wsFœgs
 & 
WHERE_ONEROW
 ){

1616 
pLevñ
->
›
 = 
OP_No›
;

1617 }if–
bRev
 ){

1618 
pLevñ
->
›
 = 
OP_Pªv
;

1620 
pLevñ
->
›
 = 
OP_Next
;

1622 
pLevñ
->
p1
 = 
iIdxCur
;

1623 
pLevñ
->
p3
 = (
pLo›
->
wsFœgs
&
WHERE_UNQ_WANTED
)!=0 ? 1:0;

1624 if–(
pLo›
->
wsFœgs
 & 
WHERE_CONSTRAINT
)==0 ){

1625 
pLevñ
->
p5
 = 
SQLITE_STMTSTATUS_FULLSCAN_STEP
;

1627 
	`as£π
–
pLevñ
->
p5
==0 );

1631 #i‚de‡
SQLITE_OMIT_OR_OPTIMIZATION


1632 if–
pLo›
->
wsFœgs
 & 
WHERE_MULTI_OR
 ){

1676 
WhîeCœu£
 *
pOrWc
;

1677 
SrcLi°
 *
pOrTab
;

1678 
Index
 *
pCov
 = 0;

1679 
iCovCur
 = 
pP¨£
->
nTab
++;

1681 
ªgRëu∫
 = ++
pP¨£
->
nMem
;

1682 
ªgRow£t
 = 0;

1683 
ªgRowid
 = 0;

1684 
iLo›Body
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

1685 
iRëInô
;

1686 
u¡e°edTîms
 = 0;

1687 
ii
;

1688 
u16
 
w˘æFœgs
;

1689 
Ex¥
 *
pAndEx¥
 = 0;

1690 
TabÀ
 *
pTab
 = 
pTabIãm
->pTab;

1692 
pTîm
 = 
pLo›
->
aLTîm
[0];

1693 
	`as£π
–
pTîm
!=0 );

1694 
	`as£π
–
pTîm
->
eO≥øt‹
 & 
WO_OR
 );

1695 
	`as£π
–(
pTîm
->
wtFœgs
 & 
TERM_ORINFO
)!=0 );

1696 
pOrWc
 = &
pTîm
->
u
.
pOrInfo
->
wc
;

1697 
pLevñ
->
›
 = 
OP_Rëu∫
;

1698 
pLevñ
->
p1
 = 
ªgRëu∫
;

1704 if–
pWInfo
->
nLevñ
>1 ){

1705 
nNŸRódy
;

1706 
SrcLi°_ôem
 *
‹igSrc
;

1707 
nNŸRódy
 = 
pWInfo
->
nLevñ
 - 
iLevñ
 - 1;

1708 
pOrTab
 = 
	`sqlôe3SèckAŒocRaw
(
db
,

1709 (*
pOrTab
)+ 
nNŸRódy
*’OrTab->
a
[0]));

1710 if–
pOrTab
==0 )  
nŸRódy
;

1711 
pOrTab
->
nAŒoc
 = (
u8
)(
nNŸRódy
 + 1);

1712 
pOrTab
->
nSrc
 =ÖOrTab->
nAŒoc
;

1713 
	`mem˝y
(
pOrTab
->
a
, 
pTabIãm
, (*pTabItem));

1714 
‹igSrc
 = 
pWInfo
->
pTabLi°
->
a
;

1715 
k
=1; k<=
nNŸRódy
; k++){

1716 
	`mem˝y
(&
pOrTab
->
a
[
k
], &
‹igSrc
[
pLevñ
[k].
iFrom
], (pOrTab->a[k]));

1719 
pOrTab
 = 
pWInfo
->
pTabLi°
;

1734 if–(
pWInfo
->
w˘æFœgs
 & 
WHERE_DUPLICATES_OK
)==0 ){

1735 if–
	`HasRowid
(
pTab
) ){

1736 
ªgRow£t
 = ++
pP¨£
->
nMem
;

1737 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NuŒ
, 0, 
ªgRow£t
);

1739 
Index
 *
pPk
 = 
	`sqlôe3Prim¨yKeyIndex
(
pTab
);

1740 
ªgRow£t
 = 
pP¨£
->
nTab
++;

1741 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_O≥nEphemîÆ
, 
ªgRow£t
, 
pPk
->
nKeyCﬁ
);

1742 
	`sqlôe3VdbeSëP4KeyInfo
(
pP¨£
, 
pPk
);

1744 
ªgRowid
 = ++
pP¨£
->
nMem
;

1746 
iRëInô
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 0, 
ªgRëu∫
);

1762 if–
pWC
->
nTîm
>1 ){

1763 
iTîm
;

1764 
iTîm
=0; iTîm<
pWC
->
nTîm
; iTerm++){

1765 
Ex¥
 *
pEx¥
 = 
pWC
->
a
[
iTîm
].pExpr;

1766 if–&
pWC
->
a
[
iTîm
] =
pTîm
 ) ;

1767 if–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_FromJoö
) ) ;

1768 
	`ã°ˇ£
–
pWC
->
a
[
iTîm
].
wtFœgs
 & 
TERM_VIRTUAL
 );

1769 
	`ã°ˇ£
–
pWC
->
a
[
iTîm
].
wtFœgs
 & 
TERM_CODED
 );

1770 if–(
pWC
->
a
[
iTîm
].
wtFœgs
 & (
TERM_VIRTUAL
|
TERM_CODED
))!=0 ) ;

1771 if–(
pWC
->
a
[
iTîm
].
eO≥øt‹
 & 
WO_ALL
)==0 ) ;

1772 
	`ã°ˇ£
–
pWC
->
a
[
iTîm
].
wtFœgs
 & 
TERM_ORINFO
 );

1773 
pEx¥
 = 
	`sqlôe3Ex¥Dup
(
db
,ÖExpr, 0);

1774 
pAndEx¥
 = 
	`sqlôe3Ex¥And
(
db
,ÖAndEx¥, 
pEx¥
);

1776 if–
pAndEx¥
 ){

1777 
pAndEx¥
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_AND
|
TKFLG_DONTFOLD
, 0,ÖAndExpr);

1785 
w˘æFœgs
 = 
WHERE_OR_SUBCLAUSE
 | (
pWInfo
->w˘æFœg†& 
WHERE_SEEK_TABLE
);

1786 
ii
=0; ii<
pOrWc
->
nTîm
; ii++){

1787 
WhîeTîm
 *
pOrTîm
 = &
pOrWc
->
a
[
ii
];

1788 if–
pOrTîm
->
À·Curs‹
==
iCur
 || (pOrTîm->
eO≥øt‹
 & 
WO_AND
)!=0 ){

1789 
WhîeInfo
 *
pSubWInfo
;

1790 
Ex¥
 *
pOrEx¥
 = 
pOrTîm
->
pEx¥
;

1791 
jmp1
 = 0;

1792 if–
pAndEx¥
 && !
	`Ex¥HasPr›îty
(
pOrEx¥
, 
EP_FromJoö
) ){

1793 
pAndEx¥
->
pLe·
 = 
pOrEx¥
;

1794 
pOrEx¥
 = 
pAndEx¥
;

1797 
	`WHERETRACE
(0xffff, ("Subplan for OR-clause:\n"));

1798 
pSubWInfo
 = 
	`sqlôe3WhîeBegö
(
pP¨£
, 
pOrTab
, 
pOrEx¥
, 0, 0,

1799 
w˘æFœgs
, 
iCovCur
);

1800 
	`as£π
–
pSubWInfo
 || 
pP¨£
->
nEº
 || 
db
->
mÆlocFaûed
 );

1801 if–
pSubWInfo
 ){

1802 
WhîeLo›
 *
pSubLo›
;

1803 
addrEx∂aö
 = 
	`sqlôe3WhîeEx∂aöO√Sˇn
(

1804 
pP¨£
, 
pOrTab
, &
pSubWInfo
->
a
[0], 
iLevñ
, 
pLevñ
->
iFrom
, 0

1806 
	`sqlôe3WhîeAddSˇnSètus
(
v
, 
pOrTab
, &
pSubWInfo
->
a
[0], 
addrEx∂aö
);

1813 if–(
pWInfo
->
w˘æFœgs
 & 
WHERE_DUPLICATES_OK
)==0 ){

1814 
r
;

1815 
iSë
 = ((
ii
==
pOrWc
->
nTîm
-1)?-1:ii);

1816 if–
	`HasRowid
(
pTab
) ){

1817 
r
 = 
	`sqlôe3Ex¥CodeGëCﬁumn
(
pP¨£
, 
pTab
, -1, 
iCur
, 
ªgRowid
, 0);

1818 
jmp1
 = 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_RowSëTe°
, 
ªgRow£t
, 0,

1819 
r
,
iSë
);

1820 
	`VdbeCovîage
(
v
);

1822 
Index
 *
pPk
 = 
	`sqlôe3Prim¨yKeyIndex
(
pTab
);

1823 
nPk
 = 
pPk
->
nKeyCﬁ
;

1824 
iPk
;

1827 
r
 = 
	`sqlôe3GëTempR™ge
(
pP¨£
, 
nPk
);

1828 
iPk
=0; iPk<
nPk
; iPk++){

1829 
iCﬁ
 = 
pPk
->
aiCﬁumn
[
iPk
];

1830 
	`sqlôe3Ex¥CodeGëCﬁumnToReg
(
pP¨£
, 
pTab
, 
iCﬁ
, 
iCur
, 
r
+
iPk
);

1844 if–
iSë
 ){

1845 
jmp1
 = 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_Found
, 
ªgRow£t
, 0, 
r
, 
nPk
);

1846 
	`VdbeCovîage
(
v
);

1848 if–
iSë
>=0 ){

1849 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MakeRec‹d
, 
r
, 
nPk
, 
ªgRowid
);

1850 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_IdxIn£π
, 
ªgRow£t
, 
ªgRowid
,

1851 
r
, 
nPk
);

1852 if–
iSë
 ) 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_USESEEKRESULT
);

1856 
	`sqlôe3Rñó£TempR™ge
(
pP¨£
, 
r
, 
nPk
);

1861 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Gosub
, 
ªgRëu∫
, 
iLo›Body
);

1865 if–
jmp1
 ) 
	`sqlôe3VdbeJumpHîe
(
v
, jmp1);

1872 if–
pSubWInfo
->
u¡e°edTîms
 ) untestedTerms = 1;

1886 
pSubLo›
 = 
pSubWInfo
->
a
[0].
pWLo›
;

1887 
	`as£π
–(
pSubLo›
->
wsFœgs
 & 
WHERE_AUTO_INDEX
)==0 );

1888 if–(
pSubLo›
->
wsFœgs
 & 
WHERE_INDEXED
)!=0

1889 && (
ii
==0 || 
pSubLo›
->
u
.
båì
.
pIndex
==
pCov
)

1890 && (
	`HasRowid
(
pTab
Ë|| !
	`IsPrim¨yKeyIndex
(
pSubLo›
->
u
.
båì
.
pIndex
))

1892 
	`as£π
–
pSubWInfo
->
a
[0].
iIdxCur
==
iCovCur
 );

1893 
pCov
 = 
pSubLo›
->
u
.
båì
.
pIndex
;

1895 
pCov
 = 0;

1899 
	`sqlôe3WhîeEnd
(
pSubWInfo
);

1903 
pLevñ
->
u
.
pCovidx
 = 
pCov
;

1904 if–
pCov
 ) 
pLevñ
->
iIdxCur
 = 
iCovCur
;

1905 if–
pAndEx¥
 ){

1906 
pAndEx¥
->
pLe·
 = 0;

1907 
	`sqlôe3Ex¥Dñëe
(
db
, 
pAndEx¥
);

1909 
	`sqlôe3VdbeCh™geP1
(
v
, 
iRëInô
, 
	`sqlôe3VdbeCuºítAddr
(v));

1910 
	`sqlôe3VdbeGŸo
(
v
, 
pLevñ
->
addrBrk
);

1911 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
iLo›Body
);

1913 if–
pWInfo
->
nLevñ
>1 ) 
	`sqlôe3SèckFªe
(
db
, 
pOrTab
);

1914 if–!
u¡e°edTîms
 ) 
	`dißbÀTîm
(
pLevñ
, 
pTîm
);

1922 c⁄° 
u8
 
aSãp
[] = { 
OP_Next
, 
OP_Pªv
 };

1923 c⁄° 
u8
 
aSèπ
[] = { 
OP_Rewöd
, 
OP_La°
 };

1924 
	`as£π
–
bRev
==0 || bRev==1 );

1925 if–
pTabIãm
->
fg
.
isRecursive
 ){

1928 
pLevñ
->
›
 = 
OP_No›
;

1930 
	`codeCurs‹Höt
(
pTabIãm
, 
pWInfo
, 
pLevñ
, 0);

1931 
pLevñ
->
›
 = 
aSãp
[
bRev
];

1932 
pLevñ
->
p1
 = 
iCur
;

1933 
pLevñ
->
p2
 = 1 + 
	`sqlôe3VdbeAddOp2
(
v
, 
aSèπ
[
bRev
], 
iCur
, 
addrBrk
);

1934 
	`VdbeCovîageIf
(
v
, 
bRev
==0);

1935 
	`VdbeCovîageIf
(
v
, 
bRev
!=0);

1936 
pLevñ
->
p5
 = 
SQLITE_STMTSTATUS_FULLSCAN_STEP
;

1940 #ifde‡
SQLITE_ENABLE_STMT_SCANSTATUS


1941 
pLevñ
->
addrVisô
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

1947 
pTîm
=
pWC
->
a
, 
j
ıWC->
nTîm
; j>0; j--,ÖTerm++){

1948 
Ex¥
 *
pE
;

1949 
skùLikeAddr
 = 0;

1950 
	`ã°ˇ£
–
pTîm
->
wtFœgs
 & 
TERM_VIRTUAL
 );

1951 
	`ã°ˇ£
–
pTîm
->
wtFœgs
 & 
TERM_CODED
 );

1952 if–
pTîm
->
wtFœgs
 & (
TERM_VIRTUAL
|
TERM_CODED
) ) ;

1953 if–(
pTîm
->
¥îeqAŒ
 & 
pLevñ
->
nŸRódy
)!=0 ){

1954 
	`ã°ˇ£
–
pWInfo
->
u¡e°edTîms
==0

1955 && (
pWInfo
->
w˘æFœgs
 & 
WHERE_OR_SUBCLAUSE
)!=0 );

1956 
pWInfo
->
u¡e°edTîms
 = 1;

1959 
pE
 = 
pTîm
->
pEx¥
;

1960 
	`as£π
–
pE
!=0 );

1961 if–
pLevñ
->
iLe·Joö
 && !
	`Ex¥HasPr›îty
(
pE
, 
EP_FromJoö
) ){

1964 if–
pTîm
->
wtFœgs
 & 
TERM_LIKECOND
 ){

1970 #ifde‡
SQLITE_LIKE_DOESNT_MATCH_BLOBS


1973 
u32
 
x
 = 
pLevñ
->
iLikeRïC¡r
;

1974 
	`as£π
–
x
>0 );

1975 
skùLikeAddr
 = 
	`sqlôe3VdbeAddOp1
(
v
, (
x
&1)? 
OP_IfNŸ
 : 
OP_If
, ()(x>>1));

1976 
	`VdbeCovîage
(
v
);

1979 
	`sqlôe3Ex¥IfFÆ£
(
pP¨£
, 
pE
, 
addrC⁄t
, 
SQLITE_JUMPIFNULL
);

1980 if–
skùLikeAddr
 ) 
	`sqlôe3VdbeJumpHîe
(
v
, skipLikeAddr);

1981 
pTîm
->
wtFœgs
 |
TERM_CODED
;

1992 
pTîm
=
pWC
->
a
, 
j
ıWC->
nTîm
; j>0; j--,ÖTerm++){

1993 
Ex¥
 *
pE
, 
sEA…
;

1994 
WhîeTîm
 *
pA…
;

1995 if–
pTîm
->
wtFœgs
 & (
TERM_VIRTUAL
|
TERM_CODED
) ) ;

1996 if–(
pTîm
->
eO≥øt‹
 & (
WO_EQ
|
WO_IS
))==0 ) ;

1997 if–(
pTîm
->
eO≥øt‹
 & 
WO_EQUIV
)==0 ) ;

1998 if–
pTîm
->
À·Curs‹
!=
iCur
 ) ;

1999 if–
pLevñ
->
iLe·Joö
 ) ;

2000 
pE
 = 
pTîm
->
pEx¥
;

2001 
	`as£π
–!
	`Ex¥HasPr›îty
(
pE
, 
EP_FromJoö
) );

2002 
	`as£π
–(
pTîm
->
¥îeqRight
 & 
pLevñ
->
nŸRódy
)!=0 );

2003 
pA…
 = 
	`sqlôe3WhîeFödTîm
(
pWC
, 
iCur
, 
pTîm
->
u
.
À·Cﬁumn
, 
nŸRódy
,

2004 
WO_EQ
|
WO_IN
|
WO_IS
, 0);

2005 if–
pA…
==0 ) ;

2006 if–
pA…
->
wtFœgs
 & (
TERM_CODED
) ) ;

2007 
	`ã°ˇ£
–
pA…
->
eO≥øt‹
 & 
WO_EQ
 );

2008 
	`ã°ˇ£
–
pA…
->
eO≥øt‹
 & 
WO_IS
 );

2009 
	`ã°ˇ£
–
pA…
->
eO≥øt‹
 & 
WO_IN
 );

2010 
	`VdbeModuÀCommít
((
v
, "beginÅransitive constraint"));

2011 
sEA…
 = *
pA…
->
pEx¥
;

2012 
sEA…
.
pLe·
 = 
pE
->pLeft;

2013 
	`sqlôe3Ex¥IfFÆ£
(
pP¨£
, &
sEA…
, 
addrC⁄t
, 
SQLITE_JUMPIFNULL
);

2019 if–
pLevñ
->
iLe·Joö
 ){

2020 
pLevñ
->
addrFú°
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

2021 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 1, 
pLevñ
->
iLe·Joö
);

2022 
	`VdbeCommít
((
v
, "record LEFT JOIN hit"));

2023 
	`sqlôe3Ex¥CacheCÀ¨
(
pP¨£
);

2024 
pTîm
=
pWC
->
a
, 
j
=0; j<pWC->
nTîm
; j++,ÖTerm++){

2025 
	`ã°ˇ£
–
pTîm
->
wtFœgs
 & 
TERM_VIRTUAL
 );

2026 
	`ã°ˇ£
–
pTîm
->
wtFœgs
 & 
TERM_CODED
 );

2027 if–
pTîm
->
wtFœgs
 & (
TERM_VIRTUAL
|
TERM_CODED
) ) ;

2028 if–(
pTîm
->
¥îeqAŒ
 & 
pLevñ
->
nŸRódy
)!=0 ){

2029 
	`as£π
–
pWInfo
->
u¡e°edTîms
 );

2032 
	`as£π
–
pTîm
->
pEx¥
 );

2033 
	`sqlôe3Ex¥IfFÆ£
(
pP¨£
, 
pTîm
->
pEx¥
, 
addrC⁄t
, 
SQLITE_JUMPIFNULL
);

2034 
pTîm
->
wtFœgs
 |
TERM_CODED
;

2038  
pLevñ
->
nŸRódy
;

2039 
	}
}

	@whereexpr.c

19 
	~"sqlôeI¡.h
"

20 
	~"whîeI¡.h
"

23 
ex¥A«lyze
(
SrcLi°
*, 
WhîeCœu£
*, );

28 
	$whîeOrInfoDñëe
(
sqlôe3
 *
db
, 
WhîeOrInfo
 *
p
){

29 
	`sqlôe3WhîeCœu£CÀ¨
(&
p
->
wc
);

30 
	`sqlôe3DbFªe
(
db
, 
p
);

31 
	}
}

36 
	$whîeAndInfoDñëe
(
sqlôe3
 *
db
, 
WhîeAndInfo
 *
p
){

37 
	`sqlôe3WhîeCœu£CÀ¨
(&
p
->
wc
);

38 
	`sqlôe3DbFªe
(
db
, 
p
);

39 
	}
}

60 
	$whîeCœu£In£π
(
WhîeCœu£
 *
pWC
, 
Ex¥
 *
p
, 
u16
 
wtFœgs
){

61 
WhîeTîm
 *
pTîm
;

62 
idx
;

63 
	`ã°ˇ£
–
wtFœgs
 & 
TERM_VIRTUAL
 );

64 if–
pWC
->
nTîm
>ıWC->
nSlŸ
 ){

65 
WhîeTîm
 *
pOld
 = 
pWC
->
a
;

66 
sqlôe3
 *
db
 = 
pWC
->
pWInfo
->
pP¨£
->db;

67 
pWC
->
a
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, ’WC->a[0])*pWC->
nSlŸ
*2 );

68 if–
pWC
->
a
==0 ){

69 if–
wtFœgs
 & 
TERM_DYNAMIC
 ){

70 
	`sqlôe3Ex¥Dñëe
(
db
, 
p
);

72 
pWC
->
a
 = 
pOld
;

75 
	`mem˝y
(
pWC
->
a
, 
pOld
, ’WC->a[0])*pWC->
nTîm
);

76 if–
pOld
!=
pWC
->
aSètic
 ){

77 
	`sqlôe3DbFªe
(
db
, 
pOld
);

79 
pWC
->
nSlŸ
 = 
	`sqlôe3DbMÆlocSize
(
db
,ÖWC->
a
)/(pWC->a[0]);

81 
pTîm
 = &
pWC
->
a
[
idx
 =ÖWC->
nTîm
++];

82 if–
p
 && 
	`Ex¥HasPr›îty
’, 
EP_U∆ikñy
) ){

83 
pTîm
->
åuthProb
 = 
	`sqlôe3LogE°
(
p
->
iTabÀ
) - 270;

85 
pTîm
->
åuthProb
 = 1;

87 
pTîm
->
pEx¥
 = 
	`sqlôe3Ex¥SkùCﬁœã
(
p
);

88 
pTîm
->
wtFœgs
 = wtFlags;

89 
pTîm
->
pWC
 =ÖWC;

90 
pTîm
->
iP¨ít
 = -1;

91 
	`mem£t
(&
pTîm
->
eO≥øt‹
, 0,

92 (
WhîeTîm
Ë- 
	`off£tof
(WhîeTîm,
eO≥øt‹
));

93  
idx
;

94 
	}
}

101 
	$ÆlowedOp
(
›
){

102 
	`as£π
–
TK_GT
>
TK_EQ
 && TK_GT<
TK_GE
 );

103 
	`as£π
–
TK_LT
>
TK_EQ
 && TK_LT<
TK_GE
 );

104 
	`as£π
–
TK_LE
>
TK_EQ
 && TK_LE<
TK_GE
 );

105 
	`as£π
–
TK_GE
==
TK_EQ
+4 );

106  
›
==
TK_IN
 || (›>=
TK_EQ
 && op<=
TK_GE
Ë|| op==
TK_ISNULL
 || op==
TK_IS
;

107 
	}
}

121 
	$ex¥Commuã
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pEx¥
){

122 
u16
 
expRight
 = (
pEx¥
->
pRight
->
Êags
 & 
EP_Cﬁœã
);

123 
u16
 
expLe·
 = (
pEx¥
->
pLe·
->
Êags
 & 
EP_Cﬁœã
);

124 
	`as£π
–
	`ÆlowedOp
(
pEx¥
->
›
Ë&&ÖEx¥->›!=
TK_IN
 );

125 if–
expRight
==
expLe·
 ){

127 if–
expRight
 ){

130 
pEx¥
->
pRight
->
Êags
 &~
EP_Cﬁœã
;

131 }if–
	`sqlôe3Ex¥CﬁlSeq
(
pP¨£
, 
pEx¥
->
pLe·
)!=0 ){

135 
pEx¥
->
pLe·
->
Êags
 |
EP_Cﬁœã
;

138 
	`SWAP
(
Ex¥
*,
pEx¥
->
pRight
,pEx¥->
pLe·
);

139 if–
pEx¥
->
›
>=
TK_GT
 ){

140 
	`as£π
–
TK_LT
==
TK_GT
+2 );

141 
	`as£π
–
TK_GE
==
TK_LE
+2 );

142 
	`as£π
–
TK_GT
>
TK_EQ
 );

143 
	`as£π
–
TK_GT
<
TK_LE
 );

144 
	`as£π
–
pEx¥
->
›
>=
TK_GT
 &&ÖEx¥->›<=
TK_GE
 );

145 
pEx¥
->
›
 = (’Ex¥->›-
TK_GT
)^2)+TK_GT;

147 
	}
}

152 
u16
 
	$›î©‹Mask
(
›
){

153 
u16
 
c
;

154 
	`as£π
–
	`ÆlowedOp
(
›
) );

155 if–
›
==
TK_IN
 ){

156 
c
 = 
WO_IN
;

157 }if–
›
==
TK_ISNULL
 ){

158 
c
 = 
WO_ISNULL
;

159 }if–
›
==
TK_IS
 ){

160 
c
 = 
WO_IS
;

162 
	`as£π
–(
WO_EQ
<<(
›
-
TK_EQ
)) < 0x7fff );

163 
c
 = (
u16
)(
WO_EQ
<<(
›
-
TK_EQ
));

165 
	`as£π
–
›
!=
TK_ISNULL
 || 
c
==
WO_ISNULL
 );

166 
	`as£π
–
›
!=
TK_IN
 || 
c
==
WO_IN
 );

167 
	`as£π
–
›
!=
TK_EQ
 || 
c
==
WO_EQ
 );

168 
	`as£π
–
›
!=
TK_LT
 || 
c
==
WO_LT
 );

169 
	`as£π
–
›
!=
TK_LE
 || 
c
==
WO_LE
 );

170 
	`as£π
–
›
!=
TK_GT
 || 
c
==
WO_GT
 );

171 
	`as£π
–
›
!=
TK_GE
 || 
c
==
WO_GE
 );

172 
	`as£π
–
›
!=
TK_IS
 || 
c
==
WO_IS
 );

173  
c
;

174 
	}
}

177 #i‚de‡
SQLITE_OMIT_LIKE_OPTIMIZATION


190 
	$isLikeOrGlob
(

191 
P¨£
 *
pP¨£
,

192 
Ex¥
 *
pEx¥
,

193 
Ex¥
 **
µPªfix
,

194 *
pisCom∂ëe
,

195 *
≤oCa£


197 c⁄° *
z
 = 0;

198 
Ex¥
 *
pRight
, *
pLe·
;

199 
Ex¥Li°
 *
pLi°
;

200 
c
;

201 
˙t
;

202 
wc
[3];

203 
sqlôe3
 *
db
 = 
pP¨£
->db;

204 
sqlôe3_vÆue
 *
pVÆ
 = 0;

205 
›
;

206 
rc
;

208 if–!
	`sqlôe3IsLikeFun˘i⁄
(
db
, 
pEx¥
, 
≤oCa£
, 
wc
) ){

211 #ifde‡
SQLITE_EBCDIC


212 if–*
≤oCa£
 )  0;

214 
pLi°
 = 
pEx¥
->
x
.pList;

215 
pLe·
 = 
pLi°
->
a
[1].
pEx¥
;

216 if–
pLe·
->
›
!=
TK_COLUMN


217 || 
	`sqlôe3Ex¥Afföôy
(
pLe·
)!=
SQLITE_AFF_TEXT


218 || 
	`IsVútuÆ
(
pLe·
->
pTab
)

224 
	`as£π
–
pLe·
->
iCﬁumn
!=(-1) );

226 
pRight
 = 
	`sqlôe3Ex¥SkùCﬁœã
(
pLi°
->
a
[0].
pEx¥
);

227 
›
 = 
pRight
->op;

228 if–
›
==
TK_VARIABLE
 ){

229 
Vdbe
 *
pRïª∑ª
 = 
pP¨£
->pReprepare;

230 
iCﬁ
 = 
pRight
->
iCﬁumn
;

231 
pVÆ
 = 
	`sqlôe3VdbeGëBoundVÆue
(
pRïª∑ª
, 
iCﬁ
, 
SQLITE_AFF_BLOB
);

232 if–
pVÆ
 && 
	`sqlôe3_vÆue_ty≥
’VÆ)==
SQLITE_TEXT
 ){

233 
z
 = (*)
	`sqlôe3_vÆue_ãxt
(
pVÆ
);

235 
	`sqlôe3VdbeSëV¨mask
(
pP¨£
->
pVdbe
, 
iCﬁ
);

236 
	`as£π
–
pRight
->
›
==
TK_VARIABLE
 ||ÖRight->›==
TK_REGISTER
 );

237 }if–
›
==
TK_STRING
 ){

238 
z
 = 
pRight
->
u
.
zTokí
;

240 if–
z
 ){

241 
˙t
 = 0;

242  (
c
=
z
[
˙t
])!=0 && c!=
wc
[0] && c!=wc[1] && c!=wc[2] ){

243 
˙t
++;

245 if–
˙t
!=0 && 255!=(
u8
)
z
[cnt-1] ){

246 
Ex¥
 *
pPªfix
;

247 *
pisCom∂ëe
 = 
c
==
wc
[0] && 
z
[
˙t
+1]==0;

248 
pPªfix
 = 
	`sqlôe3Ex¥
(
db
, 
TK_STRING
, 
z
);

249 if–
pPªfix
 )ÖPªfix->
u
.
zTokí
[
˙t
] = 0;

250 *
µPªfix
 = 
pPªfix
;

251 if–
›
==
TK_VARIABLE
 ){

252 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

253 
	`sqlôe3VdbeSëV¨mask
(
v
, 
pRight
->
iCﬁumn
);

254 if–*
pisCom∂ëe
 && 
pRight
->
u
.
zTokí
[1] ){

261 
r1
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

262 
	`sqlôe3Ex¥CodeT¨gë
(
pP¨£
, 
pRight
, 
r1
);

263 
	`sqlôe3VdbeCh™geP3
(
v
, 
	`sqlôe3VdbeCuºítAddr
(v)-1, 0);

264 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
r1
);

268 
z
 = 0;

272 
rc
 = (
z
!=0);

273 
	`sqlôe3VÆueFªe
(
pVÆ
);

274  
rc
;

275 
	}
}

279 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


290 
	$isM©chOfCﬁumn
(

291 
Ex¥
 *
pEx¥
,

292 *
≥Op2


294 c⁄° 
	sOp2
 {

295 c⁄° *
zOp
;

296 
eOp2
;

297 } 
aOp
[] = {

298 { "m©ch", 
SQLITE_INDEX_CONSTRAINT_MATCH
 },

299 { "glob", 
SQLITE_INDEX_CONSTRAINT_GLOB
 },

300 { "like", 
SQLITE_INDEX_CONSTRAINT_LIKE
 },

301 { "ªgexp", 
SQLITE_INDEX_CONSTRAINT_REGEXP
 }

303 
Ex¥Li°
 *
pLi°
;

304 
Ex¥
 *
pCﬁ
;

305 
i
;

307 if–
pEx¥
->
›
!=
TK_FUNCTION
 ){

310 
pLi°
 = 
pEx¥
->
x
.pList;

311 if–
pLi°
==0 ||ÖLi°->
nEx¥
!=2 ){

314 
pCﬁ
 = 
pLi°
->
a
[1].
pEx¥
;

315 if–
pCﬁ
->
›
!=
TK_COLUMN
 || !
	`IsVútuÆ
’Cﬁ->
pTab
) ){

318 
i
=0; i<
	`AºaySize
(
aOp
); i++){

319 if–
	`sqlôe3SåICmp
(
pEx¥
->
u
.
zTokí
, 
aOp
[
i
].
zOp
)==0 ){

320 *
≥Op2
 = 
aOp
[
i
].
eOp2
;

325 
	}
}

332 
	$å™s„rJoöM¨kögs
(
Ex¥
 *
pDîived
, Ex¥ *
pBa£
){

333 if–
pDîived
 ){

334 
pDîived
->
Êags
 |
pBa£
->Êag†& 
EP_FromJoö
;

335 
pDîived
->
iRightJoöTabÀ
 = 
pBa£
->iRightJoinTable;

337 
	}
}

342 
	$m¨kTîmAsChûd
(
WhîeCœu£
 *
pWC
, 
iChûd
, 
iP¨ít
){

343 
pWC
->
a
[
iChûd
].
iP¨ít
 = iParent;

344 
pWC
->
a
[
iChûd
].
åuthProb
 =ÖWC->a[
iP¨ít
].truthProb;

345 
pWC
->
a
[
iP¨ít
].
nChûd
++;

346 
	}
}

353 
WhîeTîm
 *
	$whîeNthSubãrm
(
WhîeTîm
 *
pTîm
, 
N
){

354 if–
pTîm
->
eO≥øt‹
!=
WO_AND
 ){

355  
N
==0 ? 
pTîm
 : 0;

357 if–
N
<
pTîm
->
u
.
pAndInfo
->
wc
.
nTîm
 ){

358  &
pTîm
->
u
.
pAndInfo
->
wc
.
a
[
N
];

361 
	}
}

383 
	$whîeComböeDisjun˘s
(

384 
SrcLi°
 *
pSrc
,

385 
WhîeCœu£
 *
pWC
,

386 
WhîeTîm
 *
pO√
,

387 
WhîeTîm
 *
pTwo


389 
u16
 
eOp
 = 
pO√
->
eO≥øt‹
 | 
pTwo
->eOperator;

390 
sqlôe3
 *
db
;

391 
Ex¥
 *
pNew
;

392 
›
;

393 
idxNew
;

395 if–(
pO√
->
eO≥øt‹
 & (
WO_EQ
|
WO_LT
|
WO_LE
|
WO_GT
|
WO_GE
))==0 ) ;

396 if–(
pTwo
->
eO≥øt‹
 & (
WO_EQ
|
WO_LT
|
WO_LE
|
WO_GT
|
WO_GE
))==0 ) ;

397 if–(
eOp
 & (
WO_EQ
|
WO_LT
|
WO_LE
))!=eOp

398 && (
eOp
 & (
WO_EQ
|
WO_GT
|
WO_GE
))!=eOp ) ;

399 
	`as£π
–
pO√
->
pEx¥
->
pLe·
!=0 &&ÖO√->pEx¥->
pRight
!=0 );

400 
	`as£π
–
pTwo
->
pEx¥
->
pLe·
!=0 &&ÖTwo->pEx¥->
pRight
!=0 );

401 if–
	`sqlôe3Ex¥Com∑ª
(
pO√
->
pEx¥
->
pLe·
, 
pTwo
->pExpr->pLeft, -1) ) ;

402 if–
	`sqlôe3Ex¥Com∑ª
(
pO√
->
pEx¥
->
pRight
, 
pTwo
->pExpr->pRight, -1) );

404 if–(
eOp
 & (eOp-1))!=0 ){

405 if–
eOp
 & (
WO_LT
|
WO_LE
) ){

406 
eOp
 = 
WO_LE
;

408 
	`as£π
–
eOp
 & (
WO_GT
|
WO_GE
) );

409 
eOp
 = 
WO_GE
;

412 
db
 = 
pWC
->
pWInfo
->
pP¨£
->db;

413 
pNew
 = 
	`sqlôe3Ex¥Dup
(
db
, 
pO√
->
pEx¥
, 0);

414 if–
pNew
==0 ) ;

415 
›
=
TK_EQ
; 
eOp
!=(
WO_EQ
<<(›-TK_EQ)); op++){ 
	`as£π
–›<
TK_GE
 ); }

416 
pNew
->
›
 = op;

417 
idxNew
 = 
	`whîeCœu£In£π
(
pWC
, 
pNew
, 
TERM_VIRTUAL
|
TERM_DYNAMIC
);

418 
	`ex¥A«lyze
(
pSrc
, 
pWC
, 
idxNew
);

419 
	}
}

421 #i‡!
deföed
(
SQLITE_OMIT_OR_OPTIMIZATION
Ë&& !deföed(
SQLITE_OMIT_SUBQUERY
)

509 
	$ex¥A«lyzeOrTîm
(

510 
SrcLi°
 *
pSrc
,

511 
WhîeCœu£
 *
pWC
,

512 
idxTîm


514 
WhîeInfo
 *
pWInfo
 = 
pWC
->pWInfo;

515 
P¨£
 *
pP¨£
 = 
pWInfo
->pParse;

516 
sqlôe3
 *
db
 = 
pP¨£
->db;

517 
WhîeTîm
 *
pTîm
 = &
pWC
->
a
[
idxTîm
];

518 
Ex¥
 *
pEx¥
 = 
pTîm
->pExpr;

519 
i
;

520 
WhîeCœu£
 *
pOrWc
;

521 
WhîeTîm
 *
pOrTîm
;

522 
WhîeOrInfo
 *
pOrInfo
;

523 
Bômask
 
chngToIN
;

524 
Bômask
 
ödexabÀ
;

531 
	`as£π
–(
pTîm
->
wtFœgs
 & (
TERM_DYNAMIC
|
TERM_ORINFO
|
TERM_ANDINFO
))==0 );

532 
	`as£π
–
pEx¥
->
›
==
TK_OR
 );

533 
pTîm
->
u
.
pOrInfo
 =ÖOrInfÿ
	`sqlôe3DbMÆlocZîo
(
db
, (*pOrInfo));

534 if–
pOrInfo
==0 ) ;

535 
pTîm
->
wtFœgs
 |
TERM_ORINFO
;

536 
pOrWc
 = &
pOrInfo
->
wc
;

537 
	`mem£t
(
pOrWc
->
aSètic
, 0, (pOrWc->aStatic));

538 
	`sqlôe3WhîeCœu£Inô
(
pOrWc
, 
pWInfo
);

539 
	`sqlôe3WhîeS∂ô
(
pOrWc
, 
pEx¥
, 
TK_OR
);

540 
	`sqlôe3WhîeEx¥A«lyze
(
pSrc
, 
pOrWc
);

541 if–
db
->
mÆlocFaûed
 ) ;

542 
	`as£π
–
pOrWc
->
nTîm
>=2 );

547 
ödexabÀ
 = ~(
Bômask
)0;

548 
chngToIN
 = ~(
Bômask
)0;

549 
i
=
pOrWc
->
nTîm
-1, 
pOrTîm
ıOrWc->
a
; i>=0 && 
ödexabÀ
; i--,ÖOrTerm++){

550 if–(
pOrTîm
->
eO≥øt‹
 & 
WO_SINGLE
)==0 ){

551 
WhîeAndInfo
 *
pAndInfo
;

552 
	`as£π
–(
pOrTîm
->
wtFœgs
 & (
TERM_ANDINFO
|
TERM_ORINFO
))==0 );

553 
chngToIN
 = 0;

554 
pAndInfo
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, (*pAndInfo));

555 if–
pAndInfo
 ){

556 
WhîeCœu£
 *
pAndWC
;

557 
WhîeTîm
 *
pAndTîm
;

558 
j
;

559 
Bômask
 
b
 = 0;

560 
pOrTîm
->
u
.
pAndInfo
 =ÖAndInfo;

561 
pOrTîm
->
wtFœgs
 |
TERM_ANDINFO
;

562 
pOrTîm
->
eO≥øt‹
 = 
WO_AND
;

563 
pAndWC
 = &
pAndInfo
->
wc
;

564 
	`mem£t
(
pAndWC
->
aSètic
, 0, (pAndWC->aStatic));

565 
	`sqlôe3WhîeCœu£Inô
(
pAndWC
, 
pWC
->
pWInfo
);

566 
	`sqlôe3WhîeS∂ô
(
pAndWC
, 
pOrTîm
->
pEx¥
, 
TK_AND
);

567 
	`sqlôe3WhîeEx¥A«lyze
(
pSrc
, 
pAndWC
);

568 
pAndWC
->
pOuãr
 = 
pWC
;

569 if–!
db
->
mÆlocFaûed
 ){

570 
j
=0, 
pAndTîm
=
pAndWC
->
a
; j<pAndWC->
nTîm
; j++,ÖAndTerm++){

571 
	`as£π
–
pAndTîm
->
pEx¥
 );

572 if–
	`ÆlowedOp
(
pAndTîm
->
pEx¥
->
›
)

573 || 
pAndTîm
->
eO≥øt‹
==
WO_MATCH


575 
b
 |
	`sqlôe3WhîeGëMask
(&
pWInfo
->
sMaskSë
, 
pAndTîm
->
À·Curs‹
);

579 
ödexabÀ
 &
b
;

581 }if–
pOrTîm
->
wtFœgs
 & 
TERM_COPIED
 ){

585 
Bômask
 
b
;

586 
b
 = 
	`sqlôe3WhîeGëMask
(&
pWInfo
->
sMaskSë
, 
pOrTîm
->
À·Curs‹
);

587 if–
pOrTîm
->
wtFœgs
 & 
TERM_VIRTUAL
 ){

588 
WhîeTîm
 *
pOthî
 = &
pOrWc
->
a
[
pOrTîm
->
iP¨ít
];

589 
b
 |
	`sqlôe3WhîeGëMask
(&
pWInfo
->
sMaskSë
, 
pOthî
->
À·Curs‹
);

591 
ödexabÀ
 &
b
;

592 if–(
pOrTîm
->
eO≥øt‹
 & 
WO_EQ
)==0 ){

593 
chngToIN
 = 0;

595 
chngToIN
 &
b
;

604 
pOrInfo
->
ödexabÀ
 = indexable;

605 
pTîm
->
eO≥øt‹
 = 
ödexabÀ
==0 ? 0 : 
WO_OR
;

609 if–
ödexabÀ
 && 
pOrWc
->
nTîm
==2 ){

610 
iO√
 = 0;

611 
WhîeTîm
 *
pO√
;

612  (
pO√
 = 
	`whîeNthSubãrm
(&
pOrWc
->
a
[0],
iO√
++))!=0 ){

613 
iTwo
 = 0;

614 
WhîeTîm
 *
pTwo
;

615  (
pTwo
 = 
	`whîeNthSubãrm
(&
pOrWc
->
a
[1],
iTwo
++))!=0 ){

616 
	`whîeComböeDisjun˘s
(
pSrc
, 
pWC
, 
pO√
, 
pTwo
);

642 if–
chngToIN
 ){

643 
okToChngToIN
 = 0;

644 
iCﬁumn
 = -1;

645 
iCurs‹
 = -1;

646 
j
 = 0;

654 
j
=0; j<2 && !
okToChngToIN
; j++){

655 
pOrTîm
 = 
pOrWc
->
a
;

656 
i
=
pOrWc
->
nTîm
-1; i>=0; i--, 
pOrTîm
++){

657 
	`as£π
–
pOrTîm
->
eO≥øt‹
 & 
WO_EQ
 );

658 
pOrTîm
->
wtFœgs
 &~
TERM_OR_OK
;

659 if–
pOrTîm
->
À·Curs‹
==
iCurs‹
 ){

662 
	`as£π
–
j
==1 );

665 if–(
chngToIN
 & 
	`sqlôe3WhîeGëMask
(&
pWInfo
->
sMaskSë
,

666 
pOrTîm
->
À·Curs‹
))==0 ){

671 
	`ã°ˇ£
–
pOrTîm
->
wtFœgs
 & 
TERM_COPIED
 );

672 
	`ã°ˇ£
–
pOrTîm
->
wtFœgs
 & 
TERM_VIRTUAL
 );

673 
	`as£π
–
pOrTîm
->
wtFœgs
 & (
TERM_COPIED
|
TERM_VIRTUAL
) );

676 
iCﬁumn
 = 
pOrTîm
->
u
.
À·Cﬁumn
;

677 
iCurs‹
 = 
pOrTîm
->
À·Curs‹
;

680 if–
i
<0 ){

683 
	`as£π
–
j
==1 );

684 
	`as£π
–
	`IsPowîOfTwo
(
chngToIN
) );

685 
	`as£π
–
chngToIN
==
	`sqlôe3WhîeGëMask
(&
pWInfo
->
sMaskSë
, 
iCurs‹
) );

688 
	`ã°ˇ£
–
j
==1 );

692 
okToChngToIN
 = 1;

693 ; 
i
>=0 && 
okToChngToIN
; i--, 
pOrTîm
++){

694 
	`as£π
–
pOrTîm
->
eO≥øt‹
 & 
WO_EQ
 );

695 if–
pOrTîm
->
À·Curs‹
!=
iCurs‹
 ){

696 
pOrTîm
->
wtFœgs
 &~
TERM_OR_OK
;

697 }if–
pOrTîm
->
u
.
À·Cﬁumn
!=
iCﬁumn
 ){

698 
okToChngToIN
 = 0;

700 
affLe·
, 
affRight
;

705 
affRight
 = 
	`sqlôe3Ex¥Afföôy
(
pOrTîm
->
pEx¥
->
pRight
);

706 
affLe·
 = 
	`sqlôe3Ex¥Afföôy
(
pOrTîm
->
pEx¥
->
pLe·
);

707 if–
affRight
!=0 &&áffRight!=
affLe·
 ){

708 
okToChngToIN
 = 0;

710 
pOrTîm
->
wtFœgs
 |
TERM_OR_OK
;

720 if–
okToChngToIN
 ){

721 
Ex¥
 *
pDup
;

722 
Ex¥Li°
 *
pLi°
 = 0;

723 
Ex¥
 *
pLe·
 = 0;

724 
Ex¥
 *
pNew
;

726 
i
=
pOrWc
->
nTîm
-1, 
pOrTîm
ıOrWc->
a
; i>=0; i--,ÖOrTerm++){

727 if–(
pOrTîm
->
wtFœgs
 & 
TERM_OR_OK
)==0 ) ;

728 
	`as£π
–
pOrTîm
->
eO≥øt‹
 & 
WO_EQ
 );

729 
	`as£π
–
pOrTîm
->
À·Curs‹
==
iCurs‹
 );

730 
	`as£π
–
pOrTîm
->
u
.
À·Cﬁumn
==
iCﬁumn
 );

731 
pDup
 = 
	`sqlôe3Ex¥Dup
(
db
, 
pOrTîm
->
pEx¥
->
pRight
, 0);

732 
pLi°
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pWInfo
->
pP¨£
,ÖLi°, 
pDup
);

733 
pLe·
 = 
pOrTîm
->
pEx¥
->pLeft;

735 
	`as£π
–
pLe·
!=0 );

736 
pDup
 = 
	`sqlôe3Ex¥Dup
(
db
, 
pLe·
, 0);

737 
pNew
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_IN
, 
pDup
, 0);

738 if–
pNew
 ){

739 
idxNew
;

740 
	`å™s„rJoöM¨kögs
(
pNew
, 
pEx¥
);

741 
	`as£π
–!
	`Ex¥HasPr›îty
(
pNew
, 
EP_xIsSñe˘
) );

742 
pNew
->
x
.
pLi°
 =ÖList;

743 
idxNew
 = 
	`whîeCœu£In£π
(
pWC
, 
pNew
, 
TERM_VIRTUAL
|
TERM_DYNAMIC
);

744 
	`ã°ˇ£
–
idxNew
==0 );

745 
	`ex¥A«lyze
(
pSrc
, 
pWC
, 
idxNew
);

746 
pTîm
 = &
pWC
->
a
[
idxTîm
];

747 
	`m¨kTîmAsChûd
(
pWC
, 
idxNew
, 
idxTîm
);

749 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pLi°
);

751 
pTîm
->
eO≥øt‹
 = 
WO_NOOP
;

754 
	}
}

772 
	$ãrmIsEquivÆí˚
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pEx¥
){

773 
aff1
, 
aff2
;

774 
CﬁlSeq
 *
pCﬁl
;

775 c⁄° *
zCﬁl1
, *
zCﬁl2
;

776 if–!
	`O±imiz©i⁄E«bÀd
(
pP¨£
->
db
, 
SQLITE_Tønsôive
) )  0;

777 if–
pEx¥
->
›
!=
TK_EQ
 &&ÖEx¥->›!=
TK_IS
 )  0;

778 if–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_FromJoö
) )  0;

779 
aff1
 = 
	`sqlôe3Ex¥Afföôy
(
pEx¥
->
pLe·
);

780 
aff2
 = 
	`sqlôe3Ex¥Afföôy
(
pEx¥
->
pRight
);

781 if–
aff1
!=
aff2


782 && (!
	`sqlôe3IsNumîicAfföôy
(
aff1
Ë|| !sqlôe3IsNumîicAfföôy(
aff2
))

786 
pCﬁl
 = 
	`sqlôe3Bö¨yCom∑ªCﬁlSeq
(
pP¨£
, 
pEx¥
->
pLe·
,ÖEx¥->
pRight
);

787 if–
pCﬁl
==0 || 
	`sqlôe3SåICmp
’Cﬁl->
zName
, "BINARY")==0 )  1;

788 
pCﬁl
 = 
	`sqlôe3Ex¥CﬁlSeq
(
pP¨£
, 
pEx¥
->
pLe·
);

789 
zCﬁl1
 = 
pCﬁl
 ?ÖCﬁl->
zName
 : 0;

790 
pCﬁl
 = 
	`sqlôe3Ex¥CﬁlSeq
(
pP¨£
, 
pEx¥
->
pRight
);

791 
zCﬁl2
 = 
pCﬁl
 ?ÖCﬁl->
zName
 : 0;

792  
	`sqlôe3_°ricmp
(
zCﬁl1
, 
zCﬁl2
)==0;

793 
	}
}

800 
Bômask
 
	$ex¥Sñe˘Ußge
(
WhîeMaskSë
 *
pMaskSë
, 
Sñe˘
 *
pS
){

801 
Bômask
 
mask
 = 0;

802  
pS
 ){

803 
SrcLi°
 *
pSrc
 = 
pS
->pSrc;

804 
mask
 |
	`sqlôe3WhîeEx¥Li°Ußge
(
pMaskSë
, 
pS
->
pELi°
);

805 
mask
 |
	`sqlôe3WhîeEx¥Li°Ußge
(
pMaskSë
, 
pS
->
pGroupBy
);

806 
mask
 |
	`sqlôe3WhîeEx¥Li°Ußge
(
pMaskSë
, 
pS
->
pOrdîBy
);

807 
mask
 |
	`sqlôe3WhîeEx¥Ußge
(
pMaskSë
, 
pS
->
pWhîe
);

808 
mask
 |
	`sqlôe3WhîeEx¥Ußge
(
pMaskSë
, 
pS
->
pHavög
);

809 if–
	`ALWAYS
(
pSrc
!=0) ){

810 
i
;

811 
i
=0; i<
pSrc
->
nSrc
; i++){

812 
mask
 |
	`ex¥Sñe˘Ußge
(
pMaskSë
, 
pSrc
->
a
[
i
].
pSñe˘
);

813 
mask
 |
	`sqlôe3WhîeEx¥Ußge
(
pMaskSë
, 
pSrc
->
a
[
i
].
pOn
);

816 
pS
 =ÖS->
pPri‹
;

818  
mask
;

819 
	}
}

834 
	$ex¥MightBeIndexed
(

835 
SrcLi°
 *
pFrom
,

836 
›
,

837 
Bômask
 
mPªªq
,

838 
Ex¥
 *
pEx¥
,

839 *
piCur
,

840 *
piCﬁumn


842 
Index
 *
pIdx
;

843 
i
;

844 
iCur
;

849 
	`as£π
–
TK_GT
+1==
TK_LE
 && TK_GT+2==
TK_LT
 && TK_GT+3==
TK_GE
 );

850 
	`as£π
–
TK_IS
<
TK_GE
 && 
TK_ISNULL
<TK_GE && 
TK_IN
<TK_GE );

851 
	`as£π
–
›
<=
TK_GE
 );

852 if–
pEx¥
->
›
==
TK_VECTOR
 && (›>=
TK_GT
 && 
	`ALWAYS
(›<=
TK_GE
)) ){

853 
pEx¥
 =ÖEx¥->
x
.
pLi°
->
a
[0].pExpr;

856 if–
pEx¥
->
›
==
TK_COLUMN
 ){

857 *
piCur
 = 
pEx¥
->
iTabÀ
;

858 *
piCﬁumn
 = 
pEx¥
->
iCﬁumn
;

861 if–
mPªªq
==0 )  0;

862 if–(
mPªªq
&(mPrereq-1))!=0 )  0;

863 
i
=0; 
mPªªq
>1; i++, mPrereq>>=1){}

864 
iCur
 = 
pFrom
->
a
[
i
].
iCurs‹
;

865 
pIdx
=
pFrom
->
a
[
i
].
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
){

866 if–
pIdx
->
aCﬁEx¥
==0 ) ;

867 
i
=0; i<
pIdx
->
nKeyCﬁ
; i++){

868 if–
pIdx
->
aiCﬁumn
[
i
]!=
XN_EXPR
 ) ;

869 if–
	`sqlôe3Ex¥Com∑ª
(
pEx¥
, 
pIdx
->
aCﬁEx¥
->
a
[
i
].pEx¥, 
iCur
)==0 ){

870 *
piCur
 = 
iCur
;

871 *
piCﬁumn
 = 
XN_EXPR
;

877 
	}
}

897 
	$ex¥A«lyze
(

898 
SrcLi°
 *
pSrc
,

899 
WhîeCœu£
 *
pWC
,

900 
idxTîm


902 
WhîeInfo
 *
pWInfo
 = 
pWC
->pWInfo;

903 
WhîeTîm
 *
pTîm
;

904 
WhîeMaskSë
 *
pMaskSë
;

905 
Ex¥
 *
pEx¥
;

906 
Bômask
 
¥îeqLe·
;

907 
Bômask
 
¥îeqAŒ
;

908 
Bômask
 
exåaRight
 = 0;

909 
Ex¥
 *
pSå1
 = 0;

910 
isCom∂ëe
 = 0;

911 
noCa£
 = 0;

912 
›
;

913 
P¨£
 *
pP¨£
 = 
pWInfo
->pParse;

914 
sqlôe3
 *
db
 = 
pP¨£
->db;

915 
eOp2
;

917 if–
db
->
mÆlocFaûed
 ){

920 
pTîm
 = &
pWC
->
a
[
idxTîm
];

921 
pMaskSë
 = &
pWInfo
->
sMaskSë
;

922 
pEx¥
 = 
pTîm
->pExpr;

923 
	`as£π
–
pEx¥
->
›
!=
TK_AS
 &&ÖEx¥->›!=
TK_COLLATE
 );

924 
¥îeqLe·
 = 
	`sqlôe3WhîeEx¥Ußge
(
pMaskSë
, 
pEx¥
->
pLe·
);

925 
›
 = 
pEx¥
->op;

926 if–
›
==
TK_IN
 ){

927 
	`as£π
–
pEx¥
->
pRight
==0 );

928 if–
	`sqlôe3Ex¥CheckIN
(
pP¨£
, 
pEx¥
) ) ;

929 if–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
) ){

930 
pTîm
->
¥îeqRight
 = 
	`ex¥Sñe˘Ußge
(
pMaskSë
, 
pEx¥
->
x
.
pSñe˘
);

932 
pTîm
->
¥îeqRight
 = 
	`sqlôe3WhîeEx¥Li°Ußge
(
pMaskSë
, 
pEx¥
->
x
.
pLi°
);

934 }if–
›
==
TK_ISNULL
 ){

935 
pTîm
->
¥îeqRight
 = 0;

937 
pTîm
->
¥îeqRight
 = 
	`sqlôe3WhîeEx¥Ußge
(
pMaskSë
, 
pEx¥
->
pRight
);

939 
¥îeqAŒ
 = 
	`sqlôe3WhîeEx¥Ußge
(
pMaskSë
, 
pEx¥
);

940 if–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_FromJoö
) ){

941 
Bômask
 
x
 = 
	`sqlôe3WhîeGëMask
(
pMaskSë
, 
pEx¥
->
iRightJoöTabÀ
);

942 
¥îeqAŒ
 |
x
;

943 
exåaRight
 = 
x
-1;

946 
pTîm
->
¥îeqAŒ
 =ÖrereqAll;

947 
pTîm
->
À·Curs‹
 = -1;

948 
pTîm
->
iP¨ít
 = -1;

949 
pTîm
->
eO≥øt‹
 = 0;

950 if–
	`ÆlowedOp
(
›
) ){

951 
iCur
, 
iCﬁumn
;

952 
Ex¥
 *
pLe·
 = 
	`sqlôe3Ex¥SkùCﬁœã
(
pEx¥
->pLeft);

953 
Ex¥
 *
pRight
 = 
	`sqlôe3Ex¥SkùCﬁœã
(
pEx¥
->pRight);

954 
u16
 
›Mask
 = (
pTîm
->
¥îeqRight
 & 
¥îeqLe·
)==0 ? 
WO_ALL
 : 
WO_EQUIV
;

956 if–
pTîm
->
iFõld
>0 ){

957 
	`as£π
–
›
==
TK_IN
 );

958 
	`as£π
–
pLe·
->
›
==
TK_VECTOR
 );

959 
pLe·
 =ÖLe·->
x
.
pLi°
->
a
[
pTîm
->
iFõld
-1].
pEx¥
;

962 if–
	`ex¥MightBeIndexed
(
pSrc
, 
›
, 
¥îeqLe·
, 
pLe·
, &
iCur
, &
iCﬁumn
) ){

963 
pTîm
->
À·Curs‹
 = 
iCur
;

964 
pTîm
->
u
.
À·Cﬁumn
 = 
iCﬁumn
;

965 
pTîm
->
eO≥øt‹
 = 
	`›î©‹Mask
(
›
Ë& 
›Mask
;

967 if–
›
==
TK_IS
 ) 
pTîm
->
wtFœgs
 |
TERM_IS
;

968 if–
pRight


969 && 
	`ex¥MightBeIndexed
(
pSrc
, 
›
, 
pTîm
->
¥îeqRight
, 
pRight
, &
iCur
,&
iCﬁumn
)

971 
WhîeTîm
 *
pNew
;

972 
Ex¥
 *
pDup
;

973 
u16
 
eExåaOp
 = 0;

974 
	`as£π
–
pTîm
->
iFõld
==0 );

975 if–
pTîm
->
À·Curs‹
>=0 ){

976 
idxNew
;

977 
pDup
 = 
	`sqlôe3Ex¥Dup
(
db
, 
pEx¥
, 0);

978 if–
db
->
mÆlocFaûed
 ){

979 
	`sqlôe3Ex¥Dñëe
(
db
, 
pDup
);

982 
idxNew
 = 
	`whîeCœu£In£π
(
pWC
, 
pDup
, 
TERM_VIRTUAL
|
TERM_DYNAMIC
);

983 if–
idxNew
==0 ) ;

984 
pNew
 = &
pWC
->
a
[
idxNew
];

985 
	`m¨kTîmAsChûd
(
pWC
, 
idxNew
, 
idxTîm
);

986 if–
›
==
TK_IS
 ) 
pNew
->
wtFœgs
 |
TERM_IS
;

987 
pTîm
 = &
pWC
->
a
[
idxTîm
];

988 
pTîm
->
wtFœgs
 |
TERM_COPIED
;

990 if–
	`ãrmIsEquivÆí˚
(
pP¨£
, 
pDup
) ){

991 
pTîm
->
eO≥øt‹
 |
WO_EQUIV
;

992 
eExåaOp
 = 
WO_EQUIV
;

995 
pDup
 = 
pEx¥
;

996 
pNew
 = 
pTîm
;

998 
	`ex¥Commuã
(
pP¨£
, 
pDup
);

999 
pNew
->
À·Curs‹
 = 
iCur
;

1000 
pNew
->
u
.
À·Cﬁumn
 = 
iCﬁumn
;

1001 
	`ã°ˇ£
–(
¥îeqLe·
 | 
exåaRight
) !=ÖrereqLeft );

1002 
pNew
->
¥îeqRight
 = 
¥îeqLe·
 | 
exåaRight
;

1003 
pNew
->
¥îeqAŒ
 =ÖrereqAll;

1004 
pNew
->
eO≥øt‹
 = (
	`›î©‹Mask
(
pDup
->
›
Ë+ 
eExåaOp
Ë& 
›Mask
;

1008 #i‚de‡
SQLITE_OMIT_BETWEEN_OPTIMIZATION


1024 if–
pEx¥
->
›
==
TK_BETWEEN
 && 
pWC
->›==
TK_AND
 ){

1025 
Ex¥Li°
 *
pLi°
 = 
pEx¥
->
x
.pList;

1026 
i
;

1027 c⁄° 
u8
 
›s
[] = {
TK_GE
, 
TK_LE
};

1028 
	`as£π
–
pLi°
!=0 );

1029 
	`as£π
–
pLi°
->
nEx¥
==2 );

1030 
i
=0; i<2; i++){

1031 
Ex¥
 *
pNewEx¥
;

1032 
idxNew
;

1033 
pNewEx¥
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
›s
[
i
],

1034 
	`sqlôe3Ex¥Dup
(
db
, 
pEx¥
->
pLe·
, 0),

1035 
	`sqlôe3Ex¥Dup
(
db
, 
pLi°
->
a
[
i
].
pEx¥
, 0));

1036 
	`å™s„rJoöM¨kögs
(
pNewEx¥
, 
pEx¥
);

1037 
idxNew
 = 
	`whîeCœu£In£π
(
pWC
, 
pNewEx¥
, 
TERM_VIRTUAL
|
TERM_DYNAMIC
);

1038 
	`ã°ˇ£
–
idxNew
==0 );

1039 
	`ex¥A«lyze
(
pSrc
, 
pWC
, 
idxNew
);

1040 
pTîm
 = &
pWC
->
a
[
idxTîm
];

1041 
	`m¨kTîmAsChûd
(
pWC
, 
idxNew
, 
idxTîm
);

1046 #i‡!
	`deföed
(
SQLITE_OMIT_OR_OPTIMIZATION
Ë&& !deföed(
SQLITE_OMIT_SUBQUERY
)

1050 if–
pEx¥
->
›
==
TK_OR
 ){

1051 
	`as£π
–
pWC
->
›
==
TK_AND
 );

1052 
	`ex¥A«lyzeOrTîm
(
pSrc
, 
pWC
, 
idxTîm
);

1053 
pTîm
 = &
pWC
->
a
[
idxTîm
];

1057 #i‚de‡
SQLITE_OMIT_LIKE_OPTIMIZATION


1071 if–
pWC
->
›
==
TK_AND


1072 && 
	`isLikeOrGlob
(
pP¨£
, 
pEx¥
, &
pSå1
, &
isCom∂ëe
, &
noCa£
)

1074 
Ex¥
 *
pLe·
;

1075 
Ex¥
 *
pSå2
;

1076 
Ex¥
 *
pNewEx¥1
;

1077 
Ex¥
 *
pNewEx¥2
;

1078 
idxNew1
;

1079 
idxNew2
;

1080 c⁄° *
zCﬁlSeqName
;

1081 c⁄° 
u16
 
wtFœgs
 = 
TERM_LIKEOPT
 | 
TERM_VIRTUAL
 | 
TERM_DYNAMIC
;

1083 
pLe·
 = 
pEx¥
->
x
.
pLi°
->
a
[1].pExpr;

1084 
pSå2
 = 
	`sqlôe3Ex¥Dup
(
db
, 
pSå1
, 0);

1090 if–
noCa£
 && !
pP¨£
->
db
->
mÆlocFaûed
 ){

1091 
i
;

1092 
c
;

1093 
pTîm
->
wtFœgs
 |
TERM_LIKE
;

1094 
i
=0; (
c
 = 
pSå1
->
u
.
zTokí
[i])!=0; i++){

1095 
pSå1
->
u
.
zTokí
[
i
] = 
	`sqlôe3Touµî
(
c
);

1096 
pSå2
->
u
.
zTokí
[
i
] = 
	`sqlôe3Tﬁowî
(
c
);

1100 if–!
db
->
mÆlocFaûed
 ){

1101 
u8
 
c
, *
pC
;

1102 
pC
 = (
u8
*)&
pSå2
->
u
.
zTokí
[
	`sqlôe3SåÀn30
(pStr2->u.zToken)-1];

1103 
c
 = *
pC
;

1104 if–
noCa£
 ){

1111 if–
c
=='A'-1 ) 
isCom∂ëe
 = 0;

1112 
c
 = 
sqlôe3UµîToLowî
[c];

1114 *
pC
 = 
c
 + 1;

1116 
zCﬁlSeqName
 = 
noCa£
 ? "NOCASE" : "BINARY";

1117 
pNewEx¥1
 = 
	`sqlôe3Ex¥Dup
(
db
, 
pLe·
, 0);

1118 
pNewEx¥1
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_GE
,

1119 
	`sqlôe3Ex¥AddCﬁœãSåög
(
pP¨£
,
pNewEx¥1
,
zCﬁlSeqName
),

1120 
pSå1
);

1121 
	`å™s„rJoöM¨kögs
(
pNewEx¥1
, 
pEx¥
);

1122 
idxNew1
 = 
	`whîeCœu£In£π
(
pWC
, 
pNewEx¥1
, 
wtFœgs
);

1123 
	`ã°ˇ£
–
idxNew1
==0 );

1124 
	`ex¥A«lyze
(
pSrc
, 
pWC
, 
idxNew1
);

1125 
pNewEx¥2
 = 
	`sqlôe3Ex¥Dup
(
db
, 
pLe·
, 0);

1126 
pNewEx¥2
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_LT
,

1127 
	`sqlôe3Ex¥AddCﬁœãSåög
(
pP¨£
,
pNewEx¥2
,
zCﬁlSeqName
),

1128 
pSå2
);

1129 
	`å™s„rJoöM¨kögs
(
pNewEx¥2
, 
pEx¥
);

1130 
idxNew2
 = 
	`whîeCœu£In£π
(
pWC
, 
pNewEx¥2
, 
wtFœgs
);

1131 
	`ã°ˇ£
–
idxNew2
==0 );

1132 
	`ex¥A«lyze
(
pSrc
, 
pWC
, 
idxNew2
);

1133 
pTîm
 = &
pWC
->
a
[
idxTîm
];

1134 if–
isCom∂ëe
 ){

1135 
	`m¨kTîmAsChûd
(
pWC
, 
idxNew1
, 
idxTîm
);

1136 
	`m¨kTîmAsChûd
(
pWC
, 
idxNew2
, 
idxTîm
);

1141 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


1148 if–
pWC
->
›
==
TK_AND
 && 
	`isM©chOfCﬁumn
(
pEx¥
, &
eOp2
) ){

1149 
idxNew
;

1150 
Ex¥
 *
pRight
, *
pLe·
;

1151 
WhîeTîm
 *
pNewTîm
;

1152 
Bômask
 
¥îeqCﬁumn
, 
¥îeqEx¥
;

1154 
pRight
 = 
pEx¥
->
x
.
pLi°
->
a
[0].pExpr;

1155 
pLe·
 = 
pEx¥
->
x
.
pLi°
->
a
[1].pExpr;

1156 
¥îeqEx¥
 = 
	`sqlôe3WhîeEx¥Ußge
(
pMaskSë
, 
pRight
);

1157 
¥îeqCﬁumn
 = 
	`sqlôe3WhîeEx¥Ußge
(
pMaskSë
, 
pLe·
);

1158 if–(
¥îeqEx¥
 & 
¥îeqCﬁumn
)==0 ){

1159 
Ex¥
 *
pNewEx¥
;

1160 
pNewEx¥
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_MATCH
,

1161 0, 
	`sqlôe3Ex¥Dup
(
db
, 
pRight
, 0));

1162 
idxNew
 = 
	`whîeCœu£In£π
(
pWC
, 
pNewEx¥
, 
TERM_VIRTUAL
|
TERM_DYNAMIC
);

1163 
	`ã°ˇ£
–
idxNew
==0 );

1164 
pNewTîm
 = &
pWC
->
a
[
idxNew
];

1165 
pNewTîm
->
¥îeqRight
 = 
¥îeqEx¥
;

1166 
pNewTîm
->
À·Curs‹
 = 
pLe·
->
iTabÀ
;

1167 
pNewTîm
->
u
.
À·Cﬁumn
 = 
pLe·
->
iCﬁumn
;

1168 
pNewTîm
->
eO≥øt‹
 = 
WO_MATCH
;

1169 
pNewTîm
->
eM©chOp
 = 
eOp2
;

1170 
	`m¨kTîmAsChûd
(
pWC
, 
idxNew
, 
idxTîm
);

1171 
pTîm
 = &
pWC
->
a
[
idxTîm
];

1172 
pTîm
->
wtFœgs
 |
TERM_COPIED
;

1173 
pNewTîm
->
¥îeqAŒ
 = 
pTîm
->prereqAll;

1185 if–
pWC
->
›
==
TK_AND


1186 && (
pEx¥
->
›
==
TK_EQ
 ||ÖEx¥->›==
TK_IS
)

1187 && 
	`sqlôe3Ex¥IsVe˘‹
(
pEx¥
->
pLe·
)

1188 && ( (
pEx¥
->
pLe·
->
Êags
 & 
EP_xIsSñe˘
)==0

1189 || (
pEx¥
->
pRight
->
Êags
 & 
EP_xIsSñe˘
)==0

1191 
nLe·
 = 
	`sqlôe3Ex¥Ve˘‹Size
(
pEx¥
->
pLe·
);

1192 
i
;

1193 
	`as£π
–
nLe·
==
	`sqlôe3Ex¥Ve˘‹Size
(
pEx¥
->
pRight
) );

1194 
i
=0; i<
nLe·
; i++){

1195 
idxNew
;

1196 
Ex¥
 *
pNew
;

1197 
Ex¥
 *
pLe·
 = 
	`sqlôe3Ex¥F‹Ve˘‹Fõld
(
pP¨£
, 
pEx¥
->pLe·, 
i
);

1198 
Ex¥
 *
pRight
 = 
	`sqlôe3Ex¥F‹Ve˘‹Fõld
(
pP¨£
, 
pEx¥
->pRight, 
i
);

1200 
pNew
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
pEx¥
->
›
, 
pLe·
, 
pRight
);

1201 
	`å™s„rJoöM¨kögs
(
pNew
, 
pEx¥
);

1202 
idxNew
 = 
	`whîeCœu£In£π
(
pWC
, 
pNew
, 
TERM_DYNAMIC
);

1203 
	`ex¥A«lyze
(
pSrc
, 
pWC
, 
idxNew
);

1205 
pTîm
 = &
pWC
->
a
[
idxTîm
];

1206 
pTîm
->
wtFœgs
 = 
TERM_CODED
|
TERM_VIRTUAL
;

1207 
pTîm
->
eO≥øt‹
 = 0;

1218 if–
pWC
->
›
==
TK_AND
 && 
pEx¥
->›==
TK_IN
 && 
pTîm
->
iFõld
==0

1219 && 
pEx¥
->
pLe·
->
›
==
TK_VECTOR


1220 && 
pEx¥
->
x
.
pSñe˘
->
pPri‹
==0

1222 
i
;

1223 
i
=0; i<
	`sqlôe3Ex¥Ve˘‹Size
(
pEx¥
->
pLe·
); i++){

1224 
idxNew
;

1225 
idxNew
 = 
	`whîeCœu£In£π
(
pWC
, 
pEx¥
, 
TERM_VIRTUAL
);

1226 
pWC
->
a
[
idxNew
].
iFõld
 = 
i
+1;

1227 
	`ex¥A«lyze
(
pSrc
, 
pWC
, 
idxNew
);

1228 
	`m¨kTîmAsChûd
(
pWC
, 
idxNew
, 
idxTîm
);

1232 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1240 if–
pEx¥
->
›
==
TK_NOTNULL


1241 && 
pEx¥
->
pLe·
->
›
==
TK_COLUMN


1242 && 
pEx¥
->
pLe·
->
iCﬁumn
>=0

1243 && 
	`O±imiz©i⁄E«bÀd
(
db
, 
SQLITE_Sèt34
)

1245 
Ex¥
 *
pNewEx¥
;

1246 
Ex¥
 *
pLe·
 = 
pEx¥
->pLeft;

1247 
idxNew
;

1248 
WhîeTîm
 *
pNewTîm
;

1250 
pNewEx¥
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_GT
,

1251 
	`sqlôe3Ex¥Dup
(
db
, 
pLe·
, 0),

1252 
	`sqlôe3Ex¥AŒoc
(
db
, 
TK_NULL
, 0, 0));

1254 
idxNew
 = 
	`whîeCœu£In£π
(
pWC
, 
pNewEx¥
,

1255 
TERM_VIRTUAL
|
TERM_DYNAMIC
|
TERM_VNULL
);

1256 if–
idxNew
 ){

1257 
pNewTîm
 = &
pWC
->
a
[
idxNew
];

1258 
pNewTîm
->
¥îeqRight
 = 0;

1259 
pNewTîm
->
À·Curs‹
 = 
pLe·
->
iTabÀ
;

1260 
pNewTîm
->
u
.
À·Cﬁumn
 = 
pLe·
->
iCﬁumn
;

1261 
pNewTîm
->
eO≥øt‹
 = 
WO_GT
;

1262 
	`m¨kTîmAsChûd
(
pWC
, 
idxNew
, 
idxTîm
);

1263 
pTîm
 = &
pWC
->
a
[
idxTîm
];

1264 
pTîm
->
wtFœgs
 |
TERM_COPIED
;

1265 
pNewTîm
->
¥îeqAŒ
 = 
pTîm
->prereqAll;

1273 
	`ã°ˇ£
–
pTîm
!=&
pWC
->
a
[
idxTîm
] );

1274 
pTîm
 = &
pWC
->
a
[
idxTîm
];

1275 
pTîm
->
¥îeqRight
 |
exåaRight
;

1276 
	}
}

1300 
	$sqlôe3WhîeS∂ô
(
WhîeCœu£
 *
pWC
, 
Ex¥
 *
pEx¥
, 
u8
 
›
){

1301 
Ex¥
 *
pE2
 = 
	`sqlôe3Ex¥SkùCﬁœã
(
pEx¥
);

1302 
pWC
->
›
 = op;

1303 if–
pE2
==0 ) ;

1304 if–
pE2
->
›
!=op ){

1305 
	`whîeCœu£In£π
(
pWC
, 
pEx¥
, 0);

1307 
	`sqlôe3WhîeS∂ô
(
pWC
, 
pE2
->
pLe·
, 
›
);

1308 
	`sqlôe3WhîeS∂ô
(
pWC
, 
pE2
->
pRight
, 
›
);

1310 
	}
}

1315 
	$sqlôe3WhîeCœu£Inô
(

1316 
WhîeCœu£
 *
pWC
,

1317 
WhîeInfo
 *
pWInfo


1319 
pWC
->
pWInfo
 =ÖWInfo;

1320 
pWC
->
pOuãr
 = 0;

1321 
pWC
->
nTîm
 = 0;

1322 
pWC
->
nSlŸ
 = 
	`AºaySize
’WC->
aSètic
);

1323 
pWC
->
a
 =ÖWC->
aSètic
;

1324 
	}
}

1331 
	$sqlôe3WhîeCœu£CÀ¨
(
WhîeCœu£
 *
pWC
){

1332 
i
;

1333 
WhîeTîm
 *
a
;

1334 
sqlôe3
 *
db
 = 
pWC
->
pWInfo
->
pP¨£
->db;

1335 
i
=
pWC
->
nTîm
-1, 
a
=pWC->a; i>=0; i--,á++){

1336 if–
a
->
wtFœgs
 & 
TERM_DYNAMIC
 ){

1337 
	`sqlôe3Ex¥Dñëe
(
db
, 
a
->
pEx¥
);

1339 if–
a
->
wtFœgs
 & 
TERM_ORINFO
 ){

1340 
	`whîeOrInfoDñëe
(
db
, 
a
->
u
.
pOrInfo
);

1341 }if–
a
->
wtFœgs
 & 
TERM_ANDINFO
 ){

1342 
	`whîeAndInfoDñëe
(
db
, 
a
->
u
.
pAndInfo
);

1345 if–
pWC
->
a
!ıWC->
aSètic
 ){

1346 
	`sqlôe3DbFªe
(
db
, 
pWC
->
a
);

1348 
	}
}

1356 
Bômask
 
	$sqlôe3WhîeEx¥Ußge
(
WhîeMaskSë
 *
pMaskSë
, 
Ex¥
 *
p
){

1357 
Bômask
 
mask
;

1358 if–
p
==0 )  0;

1359 if–
p
->
›
==
TK_COLUMN
 ){

1360 
mask
 = 
	`sqlôe3WhîeGëMask
(
pMaskSë
, 
p
->
iTabÀ
);

1361  
mask
;

1363 
	`as£π
–!
	`Ex¥HasPr›îty
(
p
, 
EP_TokíO∆y
) );

1364 
mask
 = 
p
->
pRight
 ? 
	`sqlôe3WhîeEx¥Ußge
(
pMaskSë
,Ö->pRight) : 0;

1365 if–
p
->
pLe·
 ) 
mask
 |
	`sqlôe3WhîeEx¥Ußge
(
pMaskSë
,Ö->pLeft);

1366 if–
	`Ex¥HasPr›îty
(
p
, 
EP_xIsSñe˘
) ){

1367 
mask
 |
	`ex¥Sñe˘Ußge
(
pMaskSë
, 
p
->
x
.
pSñe˘
);

1368 }if–
p
->
x
.
pLi°
 ){

1369 
mask
 |
	`sqlôe3WhîeEx¥Li°Ußge
(
pMaskSë
, 
p
->
x
.
pLi°
);

1371  
mask
;

1372 
	}
}

1373 
Bômask
 
	$sqlôe3WhîeEx¥Li°Ußge
(
WhîeMaskSë
 *
pMaskSë
, 
Ex¥Li°
 *
pLi°
){

1374 
i
;

1375 
Bômask
 
mask
 = 0;

1376 if–
pLi°
 ){

1377 
i
=0; i<
pLi°
->
nEx¥
; i++){

1378 
mask
 |
	`sqlôe3WhîeEx¥Ußge
(
pMaskSë
, 
pLi°
->
a
[
i
].
pEx¥
);

1381  
mask
;

1382 
	}
}

1393 
	$sqlôe3WhîeEx¥A«lyze
(

1394 
SrcLi°
 *
pTabLi°
,

1395 
WhîeCœu£
 *
pWC


1397 
i
;

1398 
i
=
pWC
->
nTîm
-1; i>=0; i--){

1399 
	`ex¥A«lyze
(
pTabLi°
, 
pWC
, 
i
);

1401 
	}
}

1410 
	$sqlôe3WhîeTabFuncArgs
(

1411 
P¨£
 *
pP¨£
,

1412 
SrcLi°_ôem
 *
pIãm
,

1413 
WhîeCœu£
 *
pWC


1415 
TabÀ
 *
pTab
;

1416 
j
, 
k
;

1417 
Ex¥Li°
 *
pArgs
;

1418 
Ex¥
 *
pCﬁRef
;

1419 
Ex¥
 *
pTîm
;

1420 if–
pIãm
->
fg
.
isTabFunc
==0 ) ;

1421 
pTab
 = 
pIãm
->pTab;

1422 
	`as£π
–
pTab
!=0 );

1423 
pArgs
 = 
pIãm
->
u1
.
pFuncArg
;

1424 if–
pArgs
==0 ) ;

1425 
j
=
k
=0; j<
pArgs
->
nEx¥
; j++){

1426  
k
<
pTab
->
nCﬁ
 && (pTab->
aCﬁ
[k].
cﬁFœgs
 & 
COLFLAG_HIDDEN
)==0 ){k++;}

1427 if–
k
>=
pTab
->
nCﬁ
 ){

1428 
	`sqlôe3Eº‹Msg
(
pP¨£
, "too manyárguments on %s() - max %d",

1429 
pTab
->
zName
, 
j
);

1432 
pCﬁRef
 = 
	`sqlôe3Ex¥AŒoc
(
pP¨£
->
db
, 
TK_COLUMN
, 0, 0);

1433 if–
pCﬁRef
==0 ) ;

1434 
pCﬁRef
->
iTabÀ
 = 
pIãm
->
iCurs‹
;

1435 
pCﬁRef
->
iCﬁumn
 = 
k
++;

1436 
pCﬁRef
->
pTab
 =ÖTab;

1437 
pTîm
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_EQ
, 
pCﬁRef
,

1438 
	`sqlôe3Ex¥Dup
(
pP¨£
->
db
, 
pArgs
->
a
[
j
].
pEx¥
, 0));

1439 
	`whîeCœu£In£π
(
pWC
, 
pTîm
, 
TERM_DYNAMIC
);

1441 
	}
}

	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 #i‚de‡
_ASSERT_H_DECLS


65 
	#_ASSERT_H_DECLS


	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

70 
__löe
, c⁄° *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

75 
__löe
, c⁄° *
__fun˘i⁄
)

76 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

81 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

82 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_DECLS


88 
	#as£π
(
ex¥
) \

89 ((
ex¥
) \

90 ? 
	`__ASSERT_VOID_CAST
 (0) \

91 : 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

93 #ifdef 
__USE_GNU


94 
	#as£π_≥º‹
(
î∫um
) \

95 (!(
î∫um
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

105 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

106 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

108 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

109 
	#__ASSERT_FUNCTION
 
__func__


	)

111 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

118 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


119 #unde‡
°©ic_as£π


120 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #ifde‡
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #ifde‡
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/dirent.h

22 #i‚def 
_DIRENT_H


23 
	#_DIRENT_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifde‡
__USE_XOPEN


32 #i‚de‡
__öo_t_deföed


33 #i‚de‡
__USE_FILE_OFFSET64


34 
__öo_t
 
	töo_t
;

36 
__öo64_t
 
	töo_t
;

38 
	#__öo_t_deföed


	)

40 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


41 
__öo64_t
 
	töo64_t
;

42 
	#__öo64_t_deföed


	)

61 
	~<bôs/dúít.h
>

63 #i‡
deföed
 
__USE_MISC
 && !deföed 
d_fûío


64 
	#d_öo
 
d_fûío


	)

81 #ifde‡
_DIRENT_HAVE_D_NAMLEN


82 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

83 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

85 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

86 #ifde‡
_DIRENT_HAVE_D_RECLEN


87 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

89 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name : \

90 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

95 #ifde‡
__USE_MISC


99 
	mDT_UNKNOWN
 = 0,

100 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

101 
	mDT_FIFO
 = 1,

102 
	#DT_FIFO
 
DT_FIFO


	)

103 
	mDT_CHR
 = 2,

104 
	#DT_CHR
 
DT_CHR


	)

105 
	mDT_DIR
 = 4,

106 
	#DT_DIR
 
DT_DIR


	)

107 
	mDT_BLK
 = 6,

108 
	#DT_BLK
 
DT_BLK


	)

109 
	mDT_REG
 = 8,

110 
	#DT_REG
 
DT_REG


	)

111 
	mDT_LNK
 = 10,

112 
	#DT_LNK
 
DT_LNK


	)

113 
	mDT_SOCK
 = 12,

114 
	#DT_SOCK
 
DT_SOCK


	)

115 
	mDT_WHT
 = 14

116 
	#DT_WHT
 
DT_WHT


	)

120 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

121 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

127 
__dú°ªam
 
	tDIR
;

134 
DIR
 *
	$›ídú
 (c⁄° *
__«me
Ë
	`__n⁄nuŒ
 ((1));

136 #ifde‡
__USE_XOPEN2K8


141 
DIR
 *
	`fd›ídú
 (
__fd
);

149 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

161 #i‚de‡
__USE_FILE_OFFSET64


162 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

164 #ifde‡
__REDIRECT


165 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

166 
	`__n⁄nuŒ
 ((1));

168 
	#ªaddú
 
ªaddú64


	)

172 #ifde‡
__USE_LARGEFILE64


173 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

176 #ifde‡
__USE_POSIX


182 #i‚de‡
__USE_FILE_OFFSET64


183 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

184 
dúít
 *
__ª°ri˘
 
__íåy
,

185 
dúít
 **
__ª°ri˘
 
__ªsu…
)

186 
	`__n⁄nuŒ
 ((1, 2, 3));

188 #ifde‡
__REDIRECT


189 
	`__REDIRECT
 (
ªaddú_r
,

190 (
DIR
 *
__ª°ri˘
 
__dúp
,

191 
dúít
 *
__ª°ri˘
 
__íåy
,

192 
dúít
 **
__ª°ri˘
 
__ªsu…
),

193 
ªaddú64_r
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

195 
	#ªaddú_r
 
ªaddú64_r


	)

199 #ifde‡
__USE_LARGEFILE64


200 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

201 
dúít64
 *
__ª°ri˘
 
__íåy
,

202 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

203 
	`__n⁄nuŒ
 ((1, 2, 3));

208 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

210 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


211 
	~<bôs/ty≥s.h
>

214 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

220 #ifde‡
__USE_XOPEN2K8


223 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


226 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

229 #ifde‡
__USE_MISC


230 #i‚de‡
MAXNAMLEN


232 
	~<bôs/posix1_lim.h
>

235 #ifde‡
NAME_MAX


236 
	#MAXNAMLEN
 
NAME_MAX


	)

238 
	#MAXNAMLEN
 255

	)

243 
	#__√ed_size_t


	)

244 
	~<°ddef.h
>

253 #i‚de‡
__USE_FILE_OFFSET64


254 
	$sˇndú
 (c⁄° *
__ª°ri˘
 
__dú
,

255 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

256 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

257 (*
__cmp
Ë(c⁄° 
dúít
 **,

258 c⁄° 
dúít
 **))

259 
	`__n⁄nuŒ
 ((1, 2));

261 #ifde‡
__REDIRECT


262 
	`__REDIRECT
 (
sˇndú
,

263 (c⁄° *
__ª°ri˘
 
__dú
,

264 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

265 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

266 (*
__cmp
Ë(c⁄° 
dúít
 **,

267 c⁄° 
dúít
 **)),

268 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

270 
	#sˇndú
 
sˇndú64


	)

274 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


277 
	$sˇndú64
 (c⁄° *
__ª°ri˘
 
__dú
,

278 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

279 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

280 (*
__cmp
Ë(c⁄° 
dúít64
 **,

281 c⁄° 
dúít64
 **))

282 
	`__n⁄nuŒ
 ((1, 2));

285 #ifde‡
__USE_GNU


291 #i‚de‡
__USE_FILE_OFFSET64


292 
	$sˇndú©
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

293 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

294 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

295 (*
__cmp
Ë(c⁄° 
dúít
 **,

296 c⁄° 
dúít
 **))

297 
	`__n⁄nuŒ
 ((2, 3));

299 #ifde‡
__REDIRECT


300 
	`__REDIRECT
 (
sˇndú©
,

301 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

302 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

303 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

304 (*
__cmp
Ë(c⁄° 
dúít
 **,

305 c⁄° 
dúít
 **)),

306 
sˇndú©64
Ë
	`__n⁄nuŒ
 ((2, 3));

308 
	#sˇndú©
 
sˇndú©64


	)

314 
	$sˇndú©64
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

315 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

316 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

317 (*
__cmp
Ë(c⁄° 
dúít64
 **,

318 c⁄° 
dúít64
 **))

319 
	`__n⁄nuŒ
 ((2, 3));

323 #i‚de‡
__USE_FILE_OFFSET64


324 
	$Æphas‹t
 (c⁄° 
dúít
 **
__e1
,

325 c⁄° 
dúít
 **
__e2
)

326 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

328 #ifde‡
__REDIRECT


329 
	`__REDIRECT_NTH
 (
Æphas‹t
,

330 (c⁄° 
dúít
 **
__e1
,

331 c⁄° 
dúít
 **
__e2
),

332 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

334 
	#Æphas‹t
 
Æphas‹t64


	)

338 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


339 
	$Æphas‹t64
 (c⁄° 
dúít64
 **
__e1
,

340 c⁄° 
dúít64
 **
__e2
)

341 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

346 #ifde‡
__USE_MISC


351 #i‚de‡
__USE_FILE_OFFSET64


352 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

353 
size_t
 
__nbyãs
,

354 
__off_t
 *
__ª°ri˘
 
__ba£p
)

355 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

357 #ifde‡
__REDIRECT


358 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

359 (
__fd
, *
__ª°ri˘
 
__buf
,

360 
size_t
 
__nbyãs
,

361 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

362 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

364 
	#gëdúíåõs
 
gëdúíåõs64


	)

368 #ifde‡
__USE_LARGEFILE64


369 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

370 
size_t
 
__nbyãs
,

371 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

372 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

376 #ifde‡
__USE_GNU


378 #i‚de‡
__USE_FILE_OFFSET64


379 
	$vîsi⁄s‹t
 (c⁄° 
dúít
 **
__e1
,

380 c⁄° 
dúít
 **
__e2
)

381 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

383 #ifde‡
__REDIRECT


384 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

385 (c⁄° 
dúít
 **
__e1
,

386 c⁄° 
dúít
 **
__e2
),

387 
vîsi⁄s‹t64
)

388 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

390 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

394 #ifde‡
__USE_LARGEFILE64


395 
	$vîsi⁄s‹t64
 (c⁄° 
dúít64
 **
__e1
,

396 c⁄° 
dúít64
 **
__e2
)

397 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

401 
__END_DECLS


	@/usr/include/dlfcn.h

19 #i‚def 
_DLFCN_H


20 
	#_DLFCN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

27 
	~<bôs/dlf˙.h
>

30 #ifde‡
__USE_GNU


35 
	#RTLD_NEXT
 ((*Ë-1l)

	)

40 
	#RTLD_DEFAULT
 ((*Ë0)

	)

44 
	tLmid_t
;

47 
	#LM_ID_BASE
 0

	)

48 
	#LM_ID_NEWLM
 -1

	)

52 
__BEGIN_DECLS


56 *
	$dl›í
 (c⁄° *
__fûe
, 
__mode
Ë
__THROWNL
;

60 
	$dl˛o£
 (*
__h™dÀ
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1));

64 *
	$dlsym
 (*
__ª°ri˘
 
__h™dÀ
,

65 c⁄° *
__ª°ri˘
 
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

67 #ifde‡
__USE_GNU


69 *
	$dlm›í
 (
Lmid_t
 
__nsid
, c⁄° *
__fûe
, 
__mode
Ë
__THROWNL
;

73 *
	$dlvsym
 (*
__ª°ri˘
 
__h™dÀ
,

74 c⁄° *
__ª°ri˘
 
__«me
,

75 c⁄° *
__ª°ri˘
 
__vîsi⁄
)

76 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

82 *
	$dÀº‹
 (Ë
__THROW
;

85 #ifde‡
__USE_GNU


90 c⁄° *
dli_‚ame
;

91 *
dli_fba£
;

92 c⁄° *
dli_¢ame
;

93 *
dli_ßddr
;

94 } 
	tDl_öfo
;

98 
	$dœddr
 (c⁄° *
__addªss
, 
Dl_öfo
 *
__öfo
)

99 
__THROW
 
	`__n⁄nuŒ
 ((2));

102 
	$dœddr1
 (c⁄° *
__addªss
, 
Dl_öfo
 *
__öfo
,

103 **
__exåa_öfo
, 
__Êags
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

111 
RTLD_DL_SYMENT
 = 1,

114 
RTLD_DL_LINKMAP
 = 2

123 
	$dlöfo
 (*
__ª°ri˘
 
__h™dÀ
,

124 
__ªque°
, *
__ª°ri˘
 
__¨g
)

125 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

131 
RTLD_DI_LMID
 = 1,

135 
RTLD_DI_LINKMAP
 = 2,

137 
RTLD_DI_CONFIGADDR
 = 3,

144 
RTLD_DI_SERINFO
 = 4,

145 
RTLD_DI_SERINFOSIZE
 = 5,

149 
RTLD_DI_ORIGIN
 = 6,

151 
RTLD_DI_PROFILENAME
 = 7,

152 
RTLD_DI_PROFILEOUT
 = 8,

157 
RTLD_DI_TLS_MODID
 = 9,

163 
RTLD_DI_TLS_DATA
 = 10,

165 
RTLD_DI_MAX
 = 10

173 *
dls_«me
;

174 
dls_Êags
;

175 } 
	tDl_£Ω©h
;

181 
size_t
 
dls_size
;

182 
dls_˙t
;

183 
Dl_£Ω©h
 
dls_£Ω©h
[1];

184 } 
	tDl_£röfo
;

188 
__END_DECLS


	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

39 #ifde‡
__O_TMPFILE


40 
	#__OPEN_NEEDS_MODE
(
oÊag
) \

41 (((
oÊag
Ë& 
O_CREAT
Ë!0 || ((oÊagË& 
__O_TMPFILE
Ë=__O_TMPFILE)

	)

43 
	#__OPEN_NEEDS_MODE
(
oÊag
Ë(((oÊagË& 
O_CREAT
Ë!0)

	)

49 #i‚de‡
__mode_t_deföed


50 
__mode_t
 
	tmode_t
;

51 
	#__mode_t_deföed


	)

54 #i‚de‡
__off_t_deföed


55 #i‚de‡
__USE_FILE_OFFSET64


56 
__off_t
 
	toff_t
;

58 
__off64_t
 
	toff_t
;

60 
	#__off_t_deföed


	)

63 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


64 
__off64_t
 
	toff64_t
;

65 
	#__off64_t_deföed


	)

68 #i‚de‡
__pid_t_deföed


69 
__pid_t
 
	tpid_t
;

70 
	#__pid_t_deföed


	)

74 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

77 
	~<bôs/°©.h
>

79 
	#S_IFMT
 
__S_IFMT


	)

80 
	#S_IFDIR
 
__S_IFDIR


	)

81 
	#S_IFCHR
 
__S_IFCHR


	)

82 
	#S_IFBLK
 
__S_IFBLK


	)

83 
	#S_IFREG
 
__S_IFREG


	)

84 #ifde‡
__S_IFIFO


85 
	#S_IFIFO
 
__S_IFIFO


	)

87 #ifde‡
__S_IFLNK


88 
	#S_IFLNK
 
__S_IFLNK


	)

90 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


91 
	#S_IFSOCK
 
__S_IFSOCK


	)

96 
	#S_ISUID
 
__S_ISUID


	)

97 
	#S_ISGID
 
__S_ISGID


	)

99 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


101 
	#S_ISVTX
 
__S_ISVTX


	)

104 
	#S_IRUSR
 
__S_IREAD


	)

105 
	#S_IWUSR
 
__S_IWRITE


	)

106 
	#S_IXUSR
 
__S_IEXEC


	)

108 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

110 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

111 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

112 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

114 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

116 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

117 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

118 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

120 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

123 #ifdef 
__USE_MISC


124 #i‚de‡
R_OK


127 
	#R_OK
 4

	)

128 
	#W_OK
 2

	)

129 
	#X_OK
 1

	)

130 
	#F_OK
 0

	)

135 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


136 
	#SEEK_SET
 0

	)

137 
	#SEEK_CUR
 1

	)

138 
	#SEEK_END
 2

	)

146 
f˙é
 (
__fd
, 
__cmd
, ...);

155 #i‚de‡
__USE_FILE_OFFSET64


156 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

158 #ifde‡
__REDIRECT


159 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

160 
	`__n⁄nuŒ
 ((1));

162 
	#›í
 
›í64


	)

165 #ifde‡
__USE_LARGEFILE64


166 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

169 #ifde‡
__USE_ATFILE


179 #i‚de‡
__USE_FILE_OFFSET64


180 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

181 
	`__n⁄nuŒ
 ((2));

183 #ifde‡
__REDIRECT


184 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

185 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

187 
	#›í©
 
›í©64


	)

190 #ifde‡
__USE_LARGEFILE64


191 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

192 
	`__n⁄nuŒ
 ((2));

201 #i‚de‡
__USE_FILE_OFFSET64


202 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

204 #ifde‡
__REDIRECT


205 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

206 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

208 
	#¸ót
 
¸ót64


	)

211 #ifde‡
__USE_LARGEFILE64


212 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

215 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

216 && !
deföed
 
__USE_POSIX
))

225 
	#F_ULOCK
 0

	)

226 
	#F_LOCK
 1

	)

227 
	#F_TLOCK
 2

	)

228 
	#F_TEST
 3

	)

230 #i‚de‡
__USE_FILE_OFFSET64


231 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

233 #ifde‡
__REDIRECT


234 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

236 
	#lockf
 
lockf64


	)

239 #ifde‡
__USE_LARGEFILE64


240 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

244 #ifde‡
__USE_XOPEN2K


247 #i‚de‡
__USE_FILE_OFFSET64


248 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

249 
__advi£
Ë
__THROW
;

251 #ifde‡
__REDIRECT_NTH


252 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

253 
__off64_t
 
__Àn
, 
__advi£
),

254 
posix_Ádvi£64
);

256 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

259 #ifde‡
__USE_LARGEFILE64


260 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

261 
__advi£
Ë
__THROW
;

269 #i‚de‡
__USE_FILE_OFFSET64


270 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

272 #ifde‡
__REDIRECT


273 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

274 
__off64_t
 
__Àn
),

275 
posix_ÁŒoˇã64
);

277 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

280 #ifde‡
__USE_LARGEFILE64


281 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

287 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

288 && 
deföed
 
__va_¨g_∑ck_Àn


289 
	~<bôs/f˙é2.h
>

292 
__END_DECLS


	@/usr/include/inttypes.h

22 #i‚de‡
_INTTYPES_H


23 
	#_INTTYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<°döt.h
>

30 #i‚de‡
____gwch¨_t_deföed


31 #ifde‡
__˝lu•lus


32 
	#__gwch¨_t
 
wch¨_t


	)

33 #ñi‡
deföed
 
__WCHAR_TYPE__


34 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

36 
	#__√ed_wch¨_t


	)

37 
	~<°ddef.h
>

38 
wch¨_t
 
	t__gwch¨_t
;

40 
	#____gwch¨_t_deföed
 1

	)

43 #i‡
__WORDSIZE
 == 64

44 
	#__PRI64_PREFIX
 "l"

	)

45 
	#__PRIPTR_PREFIX
 "l"

	)

47 
	#__PRI64_PREFIX
 "Œ"

	)

48 
	#__PRIPTR_PREFIX


	)

54 
	#PRId8
 "d"

	)

55 
	#PRId16
 "d"

	)

56 
	#PRId32
 "d"

	)

57 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

59 
	#PRIdLEAST8
 "d"

	)

60 
	#PRIdLEAST16
 "d"

	)

61 
	#PRIdLEAST32
 "d"

	)

62 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

64 
	#PRIdFAST8
 "d"

	)

65 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

66 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

67 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIi8
 "i"

	)

71 
	#PRIi16
 "i"

	)

72 
	#PRIi32
 "i"

	)

73 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

75 
	#PRIiLEAST8
 "i"

	)

76 
	#PRIiLEAST16
 "i"

	)

77 
	#PRIiLEAST32
 "i"

	)

78 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

80 
	#PRIiFAST8
 "i"

	)

81 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

82 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

83 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIo8
 "o"

	)

87 
	#PRIo16
 "o"

	)

88 
	#PRIo32
 "o"

	)

89 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

91 
	#PRIoLEAST8
 "o"

	)

92 
	#PRIoLEAST16
 "o"

	)

93 
	#PRIoLEAST32
 "o"

	)

94 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

96 
	#PRIoFAST8
 "o"

	)

97 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

98 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

99 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIu8
 "u"

	)

103 
	#PRIu16
 "u"

	)

104 
	#PRIu32
 "u"

	)

105 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

107 
	#PRIuLEAST8
 "u"

	)

108 
	#PRIuLEAST16
 "u"

	)

109 
	#PRIuLEAST32
 "u"

	)

110 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

112 
	#PRIuFAST8
 "u"

	)

113 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

114 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

115 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIx8
 "x"

	)

119 
	#PRIx16
 "x"

	)

120 
	#PRIx32
 "x"

	)

121 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

123 
	#PRIxLEAST8
 "x"

	)

124 
	#PRIxLEAST16
 "x"

	)

125 
	#PRIxLEAST32
 "x"

	)

126 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

128 
	#PRIxFAST8
 "x"

	)

129 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

130 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

131 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIX8
 "X"

	)

135 
	#PRIX16
 "X"

	)

136 
	#PRIX32
 "X"

	)

137 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

139 
	#PRIXLEAST8
 "X"

	)

140 
	#PRIXLEAST16
 "X"

	)

141 
	#PRIXLEAST32
 "X"

	)

142 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

144 
	#PRIXFAST8
 "X"

	)

145 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

146 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

147 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

151 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

152 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

153 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

154 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

155 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

156 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

160 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

161 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

162 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

163 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

164 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

165 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

171 
	#SCNd8
 "hhd"

	)

172 
	#SCNd16
 "hd"

	)

173 
	#SCNd32
 "d"

	)

174 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

176 
	#SCNdLEAST8
 "hhd"

	)

177 
	#SCNdLEAST16
 "hd"

	)

178 
	#SCNdLEAST32
 "d"

	)

179 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

181 
	#SCNdFAST8
 "hhd"

	)

182 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

183 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

184 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNi8
 "hhi"

	)

188 
	#SCNi16
 "hi"

	)

189 
	#SCNi32
 "i"

	)

190 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

192 
	#SCNiLEAST8
 "hhi"

	)

193 
	#SCNiLEAST16
 "hi"

	)

194 
	#SCNiLEAST32
 "i"

	)

195 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

197 
	#SCNiFAST8
 "hhi"

	)

198 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

199 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

200 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNu8
 "hhu"

	)

204 
	#SCNu16
 "hu"

	)

205 
	#SCNu32
 "u"

	)

206 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

208 
	#SCNuLEAST8
 "hhu"

	)

209 
	#SCNuLEAST16
 "hu"

	)

210 
	#SCNuLEAST32
 "u"

	)

211 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

213 
	#SCNuFAST8
 "hhu"

	)

214 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

215 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

216 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNo8
 "hho"

	)

220 
	#SCNo16
 "ho"

	)

221 
	#SCNo32
 "o"

	)

222 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

224 
	#SCNoLEAST8
 "hho"

	)

225 
	#SCNoLEAST16
 "ho"

	)

226 
	#SCNoLEAST32
 "o"

	)

227 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

229 
	#SCNoFAST8
 "hho"

	)

230 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

231 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

232 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNx8
 "hhx"

	)

236 
	#SCNx16
 "hx"

	)

237 
	#SCNx32
 "x"

	)

238 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

240 
	#SCNxLEAST8
 "hhx"

	)

241 
	#SCNxLEAST16
 "hx"

	)

242 
	#SCNxLEAST32
 "x"

	)

243 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

245 
	#SCNxFAST8
 "hhx"

	)

246 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

247 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

248 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

252 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

253 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

254 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

255 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

256 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

259 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

260 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

261 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

262 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

263 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

266 
	g__BEGIN_DECLS


268 #i‡
__WORDSIZE
 == 64

273 
	mquŸ
;

274 
	mªm
;

275 } 
	timaxdiv_t
;

282 
__exãnsi⁄__
 
	mquŸ
;

283 
__exãnsi⁄__
 
	mªm
;

284 } 
	timaxdiv_t
;

290 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

293 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

294 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

297 
ötmax_t
 
	$°πoimax
 (c⁄° *
__ª°ri˘
 
__≈å
,

298 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

301 
uötmax_t
 
	$°πoumax
 (c⁄° *
__ª°ri˘
 
__≈å
,

302 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

305 
ötmax_t
 
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

306 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

307 
__THROW
;

310 
uötmax_t
 
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

311 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

312 
__THROW
;

314 #ifde‡
__USE_EXTERN_INLINES


316 #i‡
__WORDSIZE
 == 64

318 
	$__°πﬁ_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

319 **
__ª°ri˘
 
__íd±r
,

320 
__ba£
, 
__group
)

321 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

323 
__exã∫_ölöe
 
ötmax_t


324 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

325 
ba£
))

327  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

328 
	}
}

330 
	$__°πoul_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

331 ** 
__ª°ri˘
 
__íd±r
,

332 
__ba£
, 
__group
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

335 
__exã∫_ölöe
 
uötmax_t


336 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

337 
ba£
))

339  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

340 
	}
}

342 
	$__wc°ﬁ_öã∫Æ
 (c⁄° 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

343 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

344 
__ba£
, 
__group
)

345 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

347 
__exã∫_ölöe
 
ötmax_t


348 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

349 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

351  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

352 
	}
}

354 
	$__wc°oul_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

355 
__ª°ri˘
 
__≈å
,

356 
__gwch¨_t
 **

357 
__ª°ri˘
 
__íd±r
,

358 
__ba£
, 
__group
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

361 
__exã∫_ölöe
 
uötmax_t


362 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

363 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

365  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

366 
	}
}

370 
__exãnsi⁄__


371 
	$__°πﬁl_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

372 **
__ª°ri˘
 
__íd±r
,

373 
__ba£
, 
__group
)

374 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

376 
__exã∫_ölöe
 
ötmax_t


377 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

378 
ba£
))

380  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

381 
	}
}

383 
__exãnsi⁄__


384 
	$__°πouŒ_öã∫Æ
 (const *

385 
__ª°ri˘
 
__≈å
,

387 
__ª°ri˘
 
__íd±r
,

388 
__ba£
,

389 
__group
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

392 
__exã∫_ölöe
 
uötmax_t


393 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

394 
ba£
))

396  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

397 
	}
}

399 
__exãnsi⁄__


400 
	$__wc°ﬁl_öã∫Æ
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

401 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

402 
__ba£
, 
__group
)

403 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

405 
__exã∫_ölöe
 
ötmax_t


406 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

407 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

409  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

410 
	}
}

413 
__exãnsi⁄__


414 
	$__wc°ouŒ_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

415 
__ª°ri˘
 
__≈å
,

416 
__gwch¨_t
 **

417 
__ª°ri˘
 
__íd±r
,

418 
__ba£
,

419 
__group
)

420 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

422 
__exã∫_ölöe
 
uötmax_t


423 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

424 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

426  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

427 
	}
}

432 
	g__END_DECLS


	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	~<„©uªs.h
>

31 
	#MB_LEN_MAX
 16

	)

36 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

41 #i‚de‡
_LIMITS_H


42 
	#_LIMITS_H
 1

	)

44 
	~<bôs/w‹dsize.h
>

53 
	#CHAR_BIT
 8

	)

56 
	#SCHAR_MIN
 (-128)

	)

57 
	#SCHAR_MAX
 127

	)

60 
	#UCHAR_MAX
 255

	)

63 #ifde‡
__CHAR_UNSIGNED__


64 
	#CHAR_MIN
 0

	)

65 
	#CHAR_MAX
 
UCHAR_MAX


	)

67 
	#CHAR_MIN
 
SCHAR_MIN


	)

68 
	#CHAR_MAX
 
SCHAR_MAX


	)

72 
	#SHRT_MIN
 (-32768)

	)

73 
	#SHRT_MAX
 32767

	)

76 
	#USHRT_MAX
 65535

	)

79 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

80 
	#INT_MAX
 2147483647

	)

83 
	#UINT_MAX
 4294967295U

	)

86 #i‡
__WORDSIZE
 == 64

87 
	#LONG_MAX
 9223372036854775807L

	)

89 
	#LONG_MAX
 2147483647L

	)

91 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

94 #i‡
__WORDSIZE
 == 64

95 
	#ULONG_MAX
 18446744073709551615UL

	)

97 
	#ULONG_MAX
 4294967295UL

	)

100 #ifde‡
__USE_ISOC99


103 
	#LLONG_MAX
 9223372036854775807LL

	)

104 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

107 
	#ULLONG_MAX
 18446744073709551615ULL

	)

121 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


123 #ö˛ude_√xà<
limôs
.
h
>

129 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


130 #i‚de‡
LLONG_MIN


131 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

133 #i‚de‡
LLONG_MAX


134 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

136 #i‚de‡
ULLONG_MAX


137 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

141 #ifdef 
__USE_POSIX


143 
	~<bôs/posix1_lim.h
>

146 #ifdef 
__USE_POSIX2


147 
	~<bôs/posix2_lim.h
>

150 #ifdef 
__USE_XOPEN


151 
	~<bôs/x›í_lim.h
>

	@/usr/include/malloc.h

19 #i‚de‡
_MALLOC_H


20 
	#_MALLOC_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<°ddef.h
>

24 
	~<°dio.h
>

26 #ifde‡
_LIBC


27 
	#__MALLOC_HOOK_VOLATILE


	)

28 
	#__MALLOC_DEPRECATED


	)

30 
	#__MALLOC_HOOK_VOLATILE
 vﬁ©ûe

	)

31 
	#__MALLOC_DEPRECATED
 
__©åibuã_dïªˇãd__


	)

35 
__BEGIN_DECLS


38 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

41 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

42 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

49 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

50 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

53 
	$‰ì
 (*
__±r
Ë
__THROW
;

56 
	$c‰ì
 (*
__±r
Ë
__THROW
;

59 *
	$memÆign
 (
size_t
 
__Æignmít
, size_à
__size
)

60 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

63 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

67 *
	$pvÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

71 *(*
__m‹ec‹e
Ë(
±rdiff_t
 
__size
);

74 *
	$__deÁu…_m‹ec‹e
 (
±rdiff_t
 
__size
)

75 
__THROW
 
__©åibuã_mÆloc__
;

79 
	smÆlöfo


81 
¨ía
;

82 
‹dblks
;

83 
smblks
;

84 
hblks
;

85 
hblkhd
;

86 
usmblks
;

87 
fsmblks
;

88 
u‹dblks
;

89 
f‹dblks
;

90 
kìpco°
;

94 
mÆlöfo
 
	$mÆlöfo
 (Ë
__THROW
;

97 #i‚de‡
M_MXFAST


98 
	#M_MXFAST
 1

	)

100 #i‚de‡
M_NLBLKS


101 
	#M_NLBLKS
 2

	)

103 #i‚de‡
M_GRAIN


104 
	#M_GRAIN
 3

	)

106 #i‚de‡
M_KEEP


107 
	#M_KEEP
 4

	)

111 
	#M_TRIM_THRESHOLD
 -1

	)

112 
	#M_TOP_PAD
 -2

	)

113 
	#M_MMAP_THRESHOLD
 -3

	)

114 
	#M_MMAP_MAX
 -4

	)

115 
	#M_CHECK_ACTION
 -5

	)

116 
	#M_PERTURB
 -6

	)

117 
	#M_ARENA_TEST
 -7

	)

118 
	#M_ARENA_MAX
 -8

	)

121 
	$mÆl›t
 (
__∑øm
, 
__vÆ
Ë
__THROW
;

125 
	$mÆloc_åim
 (
size_t
 
__∑d
Ë
__THROW
;

129 
size_t
 
	$mÆloc_ußbÀ_size
 (*
__±r
Ë
__THROW
;

132 
	$mÆloc_°©s
 (Ë
__THROW
;

135 
	$mÆloc_öfo
 (
__›ti⁄s
, 
FILE
 *
__Â
Ë
__THROW
;

138 *
	$mÆloc_gë_°©e
 (Ë
__THROW
;

142 
	$mÆloc_£t_°©e
 (*
__±r
Ë
__THROW
;

147 (*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_öôülize_hook
) ()

148 
__MALLOC_DEPRECATED
;

150 (*
__MALLOC_HOOK_VOLATILE
 
__‰ì_hook
Ë(*
__±r
,

152 
__MALLOC_DEPRECATED
;

153 *(*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_hook
)(
size_t
 
__size
,

155 
__MALLOC_DEPRECATED
;

156 *(*
__MALLOC_HOOK_VOLATILE
 
__ªÆloc_hook
)(*
__±r
,

157 
size_t
 
__size
,

159 
__MALLOC_DEPRECATED
;

160 *(*
__MALLOC_HOOK_VOLATILE
 
__memÆign_hook
)(
size_t
 
__Æignmít
,

161 
size_t
 
__size
,

163 
__MALLOC_DEPRECATED
;

164 (*
__MALLOC_HOOK_VOLATILE
 
__a·î_m‹ec‹e_hook
) ();

167 
	$__mÆloc_check_öô
 (Ë
__THROW
 
__MALLOC_DEPRECATED
;

170 
__END_DECLS


	@/usr/include/math.h

23 #i‚def 
_MATH_H


24 
	#_MATH_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/m©h-ve˘‹.h
>

35 
	~<bôs/huge_vÆ.h
>

36 #ifde‡
__USE_ISOC99


37 
	~<bôs/huge_vÆf.h
>

38 
	~<bôs/huge_vÆl.h
>

41 
	~<bôs/öf.h
>

44 
	~<bôs/«n.h
>

48 
	~<bôs/m©hdef.h
>

55 
	#__SIMD_DECL
(
fun˘i⁄
Ë
	`__CONCAT
 (
__DECL_SIMD_
, fun˘i⁄)

	)

57 
	#__MATHCALL_VEC
(
fun˘i⁄
, 
suffix
, 
¨gs
) \

58 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

59 
	`__MATHCALL
 (
fun˘i⁄
, 
suffix
, 
¨gs
)

	)

61 
	#__MATHDECL_VEC
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

62 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

63 
	`__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
)

	)

65 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

66 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

67 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

68 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

69 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

70 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

71 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

72 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

73 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

74 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

75 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

76 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

78 
	#_MdoubÀ_
 

	)

79 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

80 
	#__MATH_DECLARING_DOUBLE
 1

	)

81 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

82 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

83 
	~<bôs/m©hˇŒs.h
>

84 #unde‡
_MdoubÀ_


85 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


86 #unde‡
_MdoubÀ_END_NAMESPACE


87 #unde‡
__MATH_PRECNAME


88 #unde‡
__MATH_DECLARING_DOUBLE


90 #ifde‡
__USE_ISOC99


96 #i‚de‡
_MÊﬂt_


97 
	#_MÊﬂt_
 

	)

99 
	#_MdoubÀ_
 
_MÊﬂt_


	)

100 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

101 
	#__MATH_DECLARING_DOUBLE
 0

	)

102 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

103 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

104 
	~<bôs/m©hˇŒs.h
>

105 #unde‡
_MdoubÀ_


106 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


107 #unde‡
_MdoubÀ_END_NAMESPACE


108 #unde‡
__MATH_PRECNAME


109 #unde‡
__MATH_DECLARING_DOUBLE


111 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

112 || 
deföed
 
__LDBL_COMPAT
 \

113 || 
deföed
 
_LIBC_TEST


114 #ifde‡
__LDBL_COMPAT


116 #ifde‡
__USE_ISOC99


117 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

118 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

119 #ifde‡
__REDIRECT_NTH


120 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

121 
__∆dbl_√xâow¨df
)

122 
	`__©åibuã__
 ((
__c⁄°__
));

123 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

124 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

125 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

126 (
__x
, 
__y
),

127 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

131 #unde‡
__MATHDECL_1


132 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

133 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

134 
¨gs
, 
Æüs
)

	)

135 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

136 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

142 #i‚de‡
_Ml⁄g_doubÀ_


143 
	#_Ml⁄g_doubÀ_
 

	)

145 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

146 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

147 
	#__MATH_DECLARING_DOUBLE
 0

	)

148 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

149 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

150 
	#__MATH_DECLARE_LDOUBLE
 1

	)

151 
	~<bôs/m©hˇŒs.h
>

152 #unde‡
_MdoubÀ_


153 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


154 #unde‡
_MdoubÀ_END_NAMESPACE


155 #unde‡
__MATH_PRECNAME


156 #unde‡
__MATH_DECLARING_DOUBLE


161 #unde‡
__MATHDECL_1


162 #unde‡
__MATHDECL


163 #unde‡
__MATHCALL


166 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


168 
signgam
;

173 #ifde‡
__USE_ISOC99


211 
FP_NAN
 =

212 
	#FP_NAN
 0

	)

213 
FP_NAN
,

214 
FP_INFINITE
 =

215 
	#FP_INFINITE
 1

	)

216 
FP_INFINITE
,

217 
FP_ZERO
 =

218 
	#FP_ZERO
 2

	)

219 
FP_ZERO
,

220 
FP_SUBNORMAL
 =

221 
	#FP_SUBNORMAL
 3

	)

222 
FP_SUBNORMAL
,

223 
FP_NORMAL
 =

224 
	#FP_NORMAL
 4

	)

225 
FP_NORMAL


233 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
 \

234 && !
deföed
 
__OPTIMIZE_SIZE__


235 
	#Â˛assify
(
x
Ë
	`__buûtö_Â˛assify
 (
FP_NAN
, 
FP_INFINITE
, \

236 
FP_NORMAL
, 
FP_SUBNORMAL
, 
FP_ZERO
, 
x
)

	)

237 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


238 
	#Â˛assify
(
x
) \

239 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

241 
	#Â˛assify
(
x
) \

242 ( (
x
) ==  () \

243 ? 
	`__Â˛assifyf
 (
x
) \

244 :  (
x
) ==  () \

245 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

249 #i‡
	`__GNUC_PREREQ
 (4,0)

250 
	#signbô
(
x
) \

251 ( (
x
) ==  () \

252 ? 
	`__buûtö_signbôf
 (
x
) \

253 :  (
x
) ==  () \

254 ? 
	`__buûtö_signbô
 (
x
Ë: 
	`__buûtö_signbôl
 (x))

	)

256 #ifde‡
__NO_LONG_DOUBLE_MATH


257 
	#signbô
(
x
) \

258 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

260 
	#signbô
(
x
) \

261 ( (
x
) ==  () \

262 ? 
	`__signbôf
 (
x
) \

263 :  (
x
) ==  () \

264 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

269 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


270 
	#isföôe
(
x
Ë
	`__buûtö_isföôe
 (x)

	)

271 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


272 
	#isföôe
(
x
) \

273 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

275 
	#isföôe
(
x
) \

276 ( (
x
) ==  () \

277 ? 
	`__föôef
 (
x
) \

278 :  (
x
) ==  () \

279 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

283 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


284 
	#i¢‹mÆ
(
x
Ë
	`__buûtö_i¢‹mÆ
 (x)

	)

286 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

291 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


292 
	#i¢™
(
x
Ë
	`__buûtö_i¢™
 (x)

	)

293 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


294 
	#i¢™
(
x
) \

295 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

297 
	#i¢™
(
x
) \

298 ( (
x
) ==  () \

299 ? 
	`__i¢™f
 (
x
) \

300 :  (
x
) ==  () \

301 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

305 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


306 
	#isöf
(
x
Ë
	`__buûtö_isöf_sign
 (x)

	)

307 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


308 
	#isöf
(
x
) \

309 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

311 
	#isöf
(
x
) \

312 ( (
x
) ==  () \

313 ? 
	`__isöff
 (
x
) \

314 :  (
x
) ==  () \

315 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

319 
	#MATH_ERRNO
 1

	)

320 
	#MATH_ERREXCEPT
 2

	)

325 #i‚de‡
__FAST_MATH__


326 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

331 #ifde‡
__USE_GNU


333 #ifde‡
__NO_LONG_DOUBLE_MATH


334 
	#issig«lög
(
x
) \

335 ( (
x
Ë= (Ë? 
	`__issig«lögf
 (xË: 
	`__issig«lög
 (x))

	)

337 
	#issig«lög
(
x
) \

338 ( (
x
) ==  () \

339 ? 
	`__issig«lögf
 (
x
) \

340 :  (
x
) ==  () \

341 ? 
	`__issig«lög
 (
x
Ë: 
	`__issig«lögl
 (x))

	)

345 #ifdef 
__USE_MISC


349 
_IEEE_
 = -1,

350 
_SVID_
,

351 
_XOPEN_
,

352 
_POSIX_
,

353 
_ISOC_


354 } 
	t_LIB_VERSION_TYPE
;

359 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

363 #ifde‡
__USE_MISC


369 #ifde‡
__˝lu•lus


370 
__ex˚±i⁄


372 
ex˚±i⁄


375 
ty≥
;

376 *
«me
;

377 
¨g1
;

378 
¨g2
;

379 
ªtvÆ
;

380 
	}
};

382 #ifde‡
__˝lu•lus


383 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

385 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

388 
	#X_TLOSS
 1.41484755040568800000e+16

	)

391 
	#DOMAIN
 1

	)

392 
	#SING
 2

	)

393 
	#OVERFLOW
 3

	)

394 
	#UNDERFLOW
 4

	)

395 
	#TLOSS
 5

	)

396 
	#PLOSS
 6

	)

399 
	#HUGE
 3.40282347e+38F

	)

403 #ifde‡
__USE_XOPEN


405 
	#MAXFLOAT
 3.40282347e+38F

	)

412 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


413 
	#M_E
 2.7182818284590452354

	)

414 
	#M_LOG2E
 1.4426950408889634074

	)

415 
	#M_LOG10E
 0.43429448190325182765

	)

416 
	#M_LN2
 0.69314718055994530942

	)

417 
	#M_LN10
 2.30258509299404568402

	)

418 
	#M_PI
 3.14159265358979323846

	)

419 
	#M_PI_2
 1.57079632679489661923

	)

420 
	#M_PI_4
 0.78539816339744830962

	)

421 
	#M_1_PI
 0.31830988618379067154

	)

422 
	#M_2_PI
 0.63661977236758134308

	)

423 
	#M_2_SQRTPI
 1.12837916709551257390

	)

424 
	#M_SQRT2
 1.41421356237309504880

	)

425 
	#M_SQRT1_2
 0.70710678118654752440

	)

431 #ifde‡
__USE_GNU


432 
	#M_El
 2.718281828459045235360287471352662498L

	)

433 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

434 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

435 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

436 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

437 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

438 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

439 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

440 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

441 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

442 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

443 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

444 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

451 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


452 
	#__NO_MATH_INLINES
 1

	)

455 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

462 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

463 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

464 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

465 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

466 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

467 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

471 #ifde‡
__USE_EXTERN_INLINES


472 
	~<bôs/m©hölöe.h
>

477 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

478 
	~<bôs/m©h-föôe.h
>

481 #ifde‡
__USE_ISOC99


485 #i‚de‡
isgª©î


486 
	#isgª©î
(
x
, 
y
) \

487 (
__exãnsi⁄__
 \

488 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

489 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

493 #i‚de‡
isgª©îequÆ


494 
	#isgª©îequÆ
(
x
, 
y
) \

495 (
__exãnsi⁄__
 \

496 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

497 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

501 #i‚de‡
i¶ess


502 
	#i¶ess
(
x
, 
y
) \

503 (
__exãnsi⁄__
 \

504 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

505 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

509 #i‚de‡
i¶es£quÆ


510 
	#i¶es£quÆ
(
x
, 
y
) \

511 (
__exãnsi⁄__
 \

512 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

513 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

517 #i‚de‡
i¶essgª©î


518 
	#i¶essgª©î
(
x
, 
y
) \

519 (
__exãnsi⁄__
 \

520 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

521 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

525 #i‚de‡
isun‹dîed


526 
	#isun‹dîed
(
u
, 
v
) \

527 (
__exãnsi⁄__
 \

528 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

529 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

534 
	g__END_DECLS


	@/usr/include/pthread.h

18 #i‚de‡
_PTHREAD_H


19 
	#_PTHREAD_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<ídün.h
>

23 
	~<sched.h
>

24 
	~<time.h
>

26 
	~<bôs/±hªadty≥s.h
>

27 
	~<bôs/£tjmp.h
>

28 
	~<bôs/w‹dsize.h
>

34 
	mPTHREAD_CREATE_JOINABLE
,

35 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

36 
	mPTHREAD_CREATE_DETACHED


37 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

44 
	mPTHREAD_MUTEX_TIMED_NP
,

45 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

46 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

47 
	mPTHREAD_MUTEX_ADAPTIVE_NP


48 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


50 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

51 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

52 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

53 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


55 #ifde‡
__USE_GNU


57 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


62 #ifde‡
__USE_XOPEN2K


66 
	mPTHREAD_MUTEX_STALLED
,

67 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

68 
	mPTHREAD_MUTEX_ROBUST
,

69 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


74 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


78 
	mPTHREAD_PRIO_NONE
,

79 
	mPTHREAD_PRIO_INHERIT
,

80 
	mPTHREAD_PRIO_PROTECT


85 #ifde‡
__PTHREAD_MUTEX_HAVE_PREV


86 
	#PTHREAD_MUTEX_INITIALIZER
 \

87 { { 0, 0, 0, 0, 0, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

88 #ifde‡
__USE_GNU


89 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

90 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

91 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

92 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

93 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

94 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

98 
	#PTHREAD_MUTEX_INITIALIZER
 \

99 { { 0, 0, 0, 0, 0, { 
__PTHREAD_SPINS
 } } }

	)

100 #ifde‡
__USE_GNU


101 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

102 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

103 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

105 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

113 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


116 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

117 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

119 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


125 #i‚de‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


126 #i‡
__WORDSIZE
 == 64

127 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

132 
	#PTHREAD_RWLOCK_INITIALIZER
 \

133 { { 0, 0, 0, 0, 0, 0, 0, 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, 0 } }

	)

134 #ifde‡
__USE_GNU


135 #ifde‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


136 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

137 { { 0, 0, 0, 0, 0, 0, 0, 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, \

138 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

140 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


141 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

142 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

143 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, 0 } }

	)

145 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

146 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

147 0 } }

	)

157 
	mPTHREAD_INHERIT_SCHED
,

158 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

159 
	mPTHREAD_EXPLICIT_SCHED


160 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

167 
	mPTHREAD_SCOPE_SYSTEM
,

168 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

169 
	mPTHREAD_SCOPE_PROCESS


170 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

177 
	mPTHREAD_PROCESS_PRIVATE
,

178 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

179 
	mPTHREAD_PROCESS_SHARED


180 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

186 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

190 
	s_±hªad_˛ónup_buf„r


192 (*
	m__routöe
) (*);

193 *
	m__¨g
;

194 
	m__ˇn˚…y≥
;

195 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

201 
	mPTHREAD_CANCEL_ENABLE
,

202 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

203 
	mPTHREAD_CANCEL_DISABLE


204 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

208 
	mPTHREAD_CANCEL_DEFERRED
,

209 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

210 
	mPTHREAD_CANCEL_ASYNCHRONOUS


211 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

213 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

217 
	#PTHREAD_ONCE_INIT
 0

	)

220 #ifde‡
__USE_XOPEN2K


224 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

228 
__BEGIN_DECLS


233 
	$±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

234 c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

235 *(*
__°¨t_routöe
) (*),

236 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 3));

242 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

250 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

252 #ifde‡
__USE_GNU


255 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

263 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

264 c⁄° 
time•ec
 *
__ab°ime
);

271 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

275 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

278 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
)

279 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

287 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

291 
__THROW
 
	`__n⁄nuŒ
 ((1));

294 
	$±hªad_©å_gëdëach°©e
 (c⁄° 
±hªad_©å_t
 *
__©å
,

295 *
__dëach°©e
)

296 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

299 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

300 
__dëach°©e
)

301 
__THROW
 
	`__n⁄nuŒ
 ((1));

305 
	$±hªad_©å_gëgu¨dsize
 (c⁄° 
±hªad_©å_t
 *
__©å
,

306 
size_t
 *
__gu¨dsize
)

307 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

310 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

311 
size_t
 
__gu¨dsize
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1));

316 
	$±hªad_©å_gësched∑øm
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

317 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

318 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

321 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

322 c⁄° 
sched_∑øm
 *
__ª°ri˘


323 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

326 
	$±hªad_©å_gëschedpﬁicy
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


327 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

328 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

331 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

332 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 
	$±hªad_©å_gëöhîôsched
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


336 
__©å
, *
__ª°ri˘
 
__öhîô
)

337 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

340 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

341 
__öhîô
)

342 
__THROW
 
	`__n⁄nuŒ
 ((1));

346 
	$±hªad_©å_gësc›e
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

347 *
__ª°ri˘
 
__sc›e
)

348 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

351 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

352 
__THROW
 
	`__n⁄nuŒ
 ((1));

355 
	$±hªad_©å_gë°ackaddr
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


356 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

357 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

363 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

364 *
__°ackaddr
)

365 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

368 
	$±hªad_©å_gë°acksize
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


369 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

370 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

375 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

376 
size_t
 
__°acksize
)

377 
__THROW
 
	`__n⁄nuŒ
 ((1));

379 #ifde‡
__USE_XOPEN2K


381 
	$±hªad_©å_gë°ack
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

382 **
__ª°ri˘
 
__°ackaddr
,

383 
size_t
 *
__ª°ri˘
 
__°acksize
)

384 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

389 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

390 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 #ifde‡
__USE_GNU


396 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

397 
size_t
 
__˝u£tsize
,

398 c⁄° 
˝u_£t_t
 *
__˝u£t
)

399 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

403 
	$±hªad_©å_gëafföôy_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

404 
size_t
 
__˝u£tsize
,

405 
˝u_£t_t
 *
__˝u£t
)

406 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

409 
	$±hªad_gë©å_deÁu…_≈
 (
±hªad_©å_t
 *
__©å
)

410 
__THROW
 
	`__n⁄nuŒ
 ((1));

414 
	$±hªad_£èâr_deÁu…_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
)

415 
__THROW
 
	`__n⁄nuŒ
 ((1));

420 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2));

429 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

430 c⁄° 
sched_∑øm
 *
__∑øm
)

431 
__THROW
 
	`__n⁄nuŒ
 ((3));

434 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

435 *
__ª°ri˘
 
__pﬁicy
,

436 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

437 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

440 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

441 
__THROW
;

444 #ifde‡
__USE_GNU


446 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

447 
size_t
 
__buÊí
)

448 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, c⁄° *
__«me
)

452 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 #ifde‡
__USE_UNIX98


458 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

461 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

464 #ifde‡
__USE_GNU


469 
	$±hªad_yõld
 (Ë
__THROW
;

474 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

475 c⁄° 
˝u_£t_t
 *
__˝u£t
)

476 
__THROW
 
	`__n⁄nuŒ
 ((3));

479 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

480 
˝u_£t_t
 *
__˝u£t
)

481 
__THROW
 
	`__n⁄nuŒ
 ((3));

494 
	$±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

495 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

506 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

510 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

513 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

518 
	`±hªad_ã°ˇn˚l
 ();

527 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

528 
__mask_was_ßved
;

529 } 
__ˇn˚l_jmp_buf
[1];

530 *
__∑d
[4];

531 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

534 #i‚de‡
__˛ónup_f˘_©åibuã


535 
	#__˛ónup_f˘_©åibuã


	)

540 
	s__±hªad_˛ónup_‰ame


542 (*
__ˇn˚l_routöe
) (*);

543 *
__ˇn˚l_¨g
;

544 
__do_ô
;

545 
__ˇn˚l_ty≥
;

548 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


549 #ifde‡
__˝lu•lus


551 ˛as†
	c__±hªad_˛ónup_˛ass


553 (*
__ˇn˚l_routöe
) (*);

554 *
__ˇn˚l_¨g
;

555 
__do_ô
;

556 
__ˇn˚l_ty≥
;

558 
public
:

559 
	$__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

560 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

561 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

562 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

563 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

564 &
__ˇn˚l_ty≥
); 
	}
}

565 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

575 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

577 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

581 
	#±hªad_˛ónup_p›
(
execuã
) \

582 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

583 } 0)

	)

585 #ifde‡
__USE_GNU


589 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

591 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

592 
__˛‰ame
.
	`__de„r
 ()

	)

597 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

598 
__˛‰ame
.
	`__ª°‹e
 (); \

599 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

600 } 0)

	)

607 
__exã∫_ölöe
 

608 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

610 i‡(
__‰ame
->
__do_ô
)

611 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

612 
	}
}

621 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

623 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

624 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

625 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

626 .
__do_ô
 = 1 };

	)

630 
	#±hªad_˛ónup_p›
(
execuã
) \

631 
__˛‰ame
.
__do_ô
 = (
execuã
); \

632 } 0)

	)

634 #ifde‡
__USE_GNU


638 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

640 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

641 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

642 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

643 .
__do_ô
 = 1 }; \

644 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

645 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

650 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

651 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

652 
__˛‰ame
.
__do_ô
 = (
execuã
); \

653 } 0)

	)

664 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

666 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

667 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

668 *
__ˇn˚l_¨g
 = (
¨g
); \

669 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

670 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

671 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

673 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

674 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

678 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

679 dÿ{

	)

680 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

681 
__˛ónup_f˘_©åibuã
;

685 
	#±hªad_˛ónup_p›
(
execuã
) \

688 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

689 i‡(
execuã
) \

690 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

691 } 0)

	)

692 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

693 
__˛ónup_f˘_©åibuã
;

695 #ifde‡
__USE_GNU


699 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

701 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

702 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

703 *
__ˇn˚l_¨g
 = (
¨g
); \

704 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

705 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

706 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

708 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

709 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

713 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

714 dÿ{

	)

715 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

716 
__˛ónup_f˘_©åibuã
;

721 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

724 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

725 i‡(
execuã
) \

726 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

727 
	}
} 0)

	)

728 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

729 
__˛ónup_f˘_©åibuã
;

733 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

734 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

735 #i‚de‡
SHARED


736 
	`__©åibuã__
 ((
__wók__
))

742 
__jmp_buf_èg
;

743 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROWNL
;

749 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

750 c⁄° 
±hªad_muãx©å_t
 *
__muãx©å
)

751 
__THROW
 
	`__n⁄nuŒ
 ((1));

754 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

755 
__THROW
 
	`__n⁄nuŒ
 ((1));

758 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

759 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

762 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

763 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

765 #ifde‡
__USE_XOPEN2K


767 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

768 c⁄° 
time•ec
 *
__ª°ri˘


769 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

773 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

774 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

778 
	$±hªad_muãx_gë¥io˚ûög
 (c⁄° 
±hªad_muãx_t
 *

779 
__ª°ri˘
 
__muãx
,

780 *
__ª°ri˘
 
__¥io˚ûög
)

781 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

785 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

786 
__¥io˚ûög
,

787 *
__ª°ri˘
 
__ﬁd_˚ûög
)

788 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

791 #ifde‡
__USE_XOPEN2K8


793 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

794 
__THROW
 
	`__n⁄nuŒ
 ((1));

795 #ifde‡
__USE_GNU


796 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

797 
__THROW
 
	`__n⁄nuŒ
 ((1));

806 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

807 
__THROW
 
	`__n⁄nuŒ
 ((1));

810 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

811 
__THROW
 
	`__n⁄nuŒ
 ((1));

814 
	$±hªad_muãx©å_gëpsh¨ed
 (c⁄° 
±hªad_muãx©å_t
 *

815 
__ª°ri˘
 
__©å
,

816 *
__ª°ri˘
 
__psh¨ed
)

817 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

820 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

821 
__psh¨ed
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1));

824 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


826 
	$±hªad_muãx©å_gëty≥
 (c⁄° 
±hªad_muãx©å_t
 *
__ª°ri˘


827 
__©å
, *
__ª°ri˘
 
__köd
)

828 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

833 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

834 
__THROW
 
	`__n⁄nuŒ
 ((1));

838 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (c⁄° 
±hªad_muãx©å_t
 *

839 
__ª°ri˘
 
__©å
,

840 *
__ª°ri˘
 
__¥Ÿocﬁ
)

841 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

845 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

846 
__¥Ÿocﬁ
)

847 
__THROW
 
	`__n⁄nuŒ
 ((1));

850 
	$±hªad_muãx©å_gë¥io˚ûög
 (c⁄° 
±hªad_muãx©å_t
 *

851 
__ª°ri˘
 
__©å
,

852 *
__ª°ri˘
 
__¥io˚ûög
)

853 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__¥io˚ûög
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

860 #ifde‡
__USE_XOPEN2K


862 
	$±hªad_muãx©å_gërobu°
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

863 *
__robu°√ss
)

864 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

865 #ifde‡
__USE_GNU


866 
	$±hªad_muãx©å_gërobu°_≈
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

867 *
__robu°√ss
)

868 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

872 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

873 
__robu°√ss
)

874 
__THROW
 
	`__n⁄nuŒ
 ((1));

875 #ifde‡
__USE_GNU


876 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

877 
__robu°√ss
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

883 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


888 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

889 c⁄° 
±hªad_rwlock©å_t
 *
__ª°ri˘


890 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

893 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

894 
__THROW
 
	`__n⁄nuŒ
 ((1));

897 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

898 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

901 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

902 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

904 #ifde‡
__USE_XOPEN2K


906 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

907 c⁄° 
time•ec
 *
__ª°ri˘


908 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

912 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

913 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

916 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

917 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

919 #ifde‡
__USE_XOPEN2K


921 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

922 c⁄° 
time•ec
 *
__ª°ri˘


923 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

927 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

928 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

934 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

935 
__THROW
 
	`__n⁄nuŒ
 ((1));

938 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

939 
__THROW
 
	`__n⁄nuŒ
 ((1));

942 
	$±hªad_rwlock©å_gëpsh¨ed
 (c⁄° 
±hªad_rwlock©å_t
 *

943 
__ª°ri˘
 
__©å
,

944 *
__ª°ri˘
 
__psh¨ed
)

945 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

948 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

949 
__psh¨ed
)

950 
__THROW
 
	`__n⁄nuŒ
 ((1));

953 
	$±hªad_rwlock©å_gëköd_≈
 (c⁄° 
±hªad_rwlock©å_t
 *

954 
__ª°ri˘
 
__©å
,

955 *
__ª°ri˘
 
__¥ef
)

956 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

959 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

960 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

968 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

969 c⁄° 
±hªad_c⁄d©å_t
 *
__ª°ri˘
 
__c⁄d_©å
)

970 
__THROW
 
	`__n⁄nuŒ
 ((1));

973 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

974 
__THROW
 
	`__n⁄nuŒ
 ((1));

977 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

978 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

981 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

982 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

989 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

990 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

991 
	`__n⁄nuŒ
 ((1, 2));

1000 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1001 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

1002 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

1003 
	`__n⁄nuŒ
 ((1, 2, 3));

1008 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

1009 
__THROW
 
	`__n⁄nuŒ
 ((1));

1012 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

1013 
__THROW
 
	`__n⁄nuŒ
 ((1));

1016 
	$±hªad_c⁄d©å_gëpsh¨ed
 (c⁄° 
±hªad_c⁄d©å_t
 *

1017 
__ª°ri˘
 
__©å
,

1018 *
__ª°ri˘
 
__psh¨ed
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1022 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1023 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1025 #ifde‡
__USE_XOPEN2K


1027 
	$±hªad_c⁄d©å_gë˛ock
 (c⁄° 
±hªad_c⁄d©å_t
 *

1028 
__ª°ri˘
 
__©å
,

1029 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1030 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1033 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1034 
__˛ockid_t
 
__˛ock_id
)

1035 
__THROW
 
	`__n⁄nuŒ
 ((1));

1039 #ifde‡
__USE_XOPEN2K


1044 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1045 
__THROW
 
	`__n⁄nuŒ
 ((1));

1048 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1049 
__THROW
 
	`__n⁄nuŒ
 ((1));

1052 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1053 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1056 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1057 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1060 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1061 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1068 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1069 c⁄° 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1070 
__©å
, 
__cou¡
)

1071 
__THROW
 
	`__n⁄nuŒ
 ((1));

1074 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1075 
__THROW
 
	`__n⁄nuŒ
 ((1));

1078 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1079 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1083 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1084 
__THROW
 
	`__n⁄nuŒ
 ((1));

1087 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1088 
__THROW
 
	`__n⁄nuŒ
 ((1));

1091 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (c⁄° 
±hªad_b¨rõøâr_t
 *

1092 
__ª°ri˘
 
__©å
,

1093 *
__ª°ri˘
 
__psh¨ed
)

1094 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1097 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1098 
__psh¨ed
)

1099 
__THROW
 
	`__n⁄nuŒ
 ((1));

1111 
	$±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1112 (*
__de°r_fun˘i⁄
) (*))

1113 
__THROW
 
	`__n⁄nuŒ
 ((1));

1116 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1119 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1122 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1123 c⁄° *
__poöãr
Ë
__THROW
 ;

1126 #ifde‡
__USE_XOPEN2K


1128 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1129 
__˛ockid_t
 *
__˛ock_id
)

1130 
__THROW
 
	`__n⁄nuŒ
 ((2));

1145 
	$±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1146 (*
__∑ª¡
) (),

1147 (*
__chûd
Ë()Ë
__THROW
;

1150 #ifde‡
__USE_EXTERN_INLINES


1152 
__exã∫_ölöe
 

1153 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1155  
__thªad1
 =
__thªad2
;

1156 
	}
}

1159 
	g__END_DECLS


	@/usr/include/pwd.h

22 #i‚def 
_PWD_H


23 
	#_PWD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 
	#__√ed_size_t


	)

32 
	~<°ddef.h
>

34 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


37 #i‚de‡
__gid_t_deföed


38 
__gid_t
 
	tgid_t
;

39 
	#__gid_t_deföed


	)

42 #i‚de‡
__uid_t_deföed


43 
__uid_t
 
	tuid_t
;

44 
	#__uid_t_deföed


	)

49 
	s∑sswd


51 *
	mpw_«me
;

52 *
	mpw_∑sswd
;

53 
__uid_t
 
	mpw_uid
;

54 
__gid_t
 
	mpw_gid
;

55 *
	mpw_gecos
;

56 *
	mpw_dú
;

57 *
	mpw_shñl
;

61 #ifde‡
__USE_MISC


62 
	#__√ed_FILE


	)

63 
	~<°dio.h
>

67 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


72 
£çwít
 ();

78 
ídpwít
 ();

84 
∑sswd
 *
gëpwít
 ();

87 #ifdef 
__USE_MISC


94 
∑sswd
 *
	$fgëpwít
 (
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((1));

102 
	`puçwít
 (c⁄° 
∑sswd
 *
__ª°ri˘
 
__p
,

103 
FILE
 *
__ª°ri˘
 
__f
);

110 
∑sswd
 *
	`gëpwuid
 (
__uid_t
 
__uid
);

116 
∑sswd
 *
	$gëpw«m
 (c⁄° *
__«me
Ë
	`__n⁄nuŒ
 ((1));

118 #ifde‡
__USE_POSIX


120 #ifde‡
__USE_MISC


123 
	#NSS_BUFLEN_PASSWD
 1024

	)

134 #ifde‡
__USE_MISC


139 
	$gëpwít_r
 (
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

140 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

141 
∑sswd
 **
__ª°ri˘
 
__ªsu…
)

142 
	`__n⁄nuŒ
 ((1, 2, 4));

145 
	$gëpwuid_r
 (
__uid_t
 
__uid
,

146 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

147 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

148 
∑sswd
 **
__ª°ri˘
 
__ªsu…
)

149 
	`__n⁄nuŒ
 ((2, 3, 5));

151 
	$gëpw«m_r
 (c⁄° *
__ª°ri˘
 
__«me
,

152 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

153 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

154 
∑sswd
 **
__ª°ri˘
 
__ªsu…
)

155 
	`__n⁄nuŒ
 ((1, 2, 3, 5));

158 #ifdef 
__USE_MISC


166 
	$fgëpwít_r
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

167 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

168 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

169 
∑sswd
 **
__ª°ri˘
 
__ªsu…
)

170 
	`__n⁄nuŒ
 ((1, 2, 3, 5));

175 #ifde‡
__USE_GNU


184 
	`gëpw
 (
__uid_t
 
__uid
, *
__buf„r
);

187 
__END_DECLS


	@/usr/include/sched.h

19 #i‚def 
_SCHED_H


20 
	#_SCHED_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

30 #ifde‡
__USE_XOPEN2K


31 
	#__√ed_time_t


	)

32 
	#__√ed_time•ec


	)

34 
	~<time.h
>

36 #i‚de‡
__pid_t_deföed


37 
__pid_t
 
	tpid_t
;

38 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

45 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

48 
__BEGIN_DECLS


51 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, c⁄° 
sched_∑øm
 *
__∑øm
)

52 
__THROW
;

55 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

58 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

59 c⁄° 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

62 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

65 
	$sched_yõld
 (Ë
__THROW
;

68 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

77 #ifde‡
__USE_GNU


79 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

80 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

82 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

83 
˝u£ç
)

	)

84 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

87 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

89 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

90 
˝u£ç
)

	)

91 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

94 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

96 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

97 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

99 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

101 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

103 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

105 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

107 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

109 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

110 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

112 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

113 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

114 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

118 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

119 c⁄° 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

122 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

123 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

126 
__END_DECLS


	@/usr/include/semaphore.h

18 #i‚de‡
_SEMAPHORE_H


19 
	#_SEMAPHORE_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<sys/ty≥s.h
>

23 #ifde‡
__USE_XOPEN2K


24 
	#__√ed_time•ec


	)

25 
	~<time.h
>

29 
	~<bôs/£m≠h‹e.h
>

32 
__BEGIN_DECLS


36 
	$£m_öô
 (
£m_t
 *
__£m
, 
__psh¨ed
, 
__vÆue
)

37 
__THROW
;

39 
	$£m_de°roy
 (
£m_t
 *
__£m
Ë
__THROW
;

42 
£m_t
 *
	$£m_›í
 (c⁄° *
__«me
, 
__oÊag
, ...Ë
__THROW
;

45 
	$£m_˛o£
 (
£m_t
 *
__£m
Ë
__THROW
;

48 
	$£m_u∆ök
 (c⁄° *
__«me
Ë
__THROW
;

54 
	`£m_waô
 (
£m_t
 *
__£m
);

56 #ifde‡
__USE_XOPEN2K


61 
	`£m_timedwaô
 (
£m_t
 *
__ª°ri˘
 
__£m
,

62 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
);

66 
	$£m_åywaô
 (
£m_t
 *
__£m
Ë
__THROWNL
;

69 
	$£m_po°
 (
£m_t
 *
__£m
Ë
__THROWNL
;

72 
	$£m_gëvÆue
 (
£m_t
 *
__ª°ri˘
 
__£m
, *__ª°ri˘ 
__svÆ
)

73 
__THROW
;

76 
__END_DECLS


	@/usr/include/signal.h

22 #i‚def 
_SIGNAL_H


24 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


25 
	#_SIGNAL_H


	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	~<bôs/sig£t.h
>

36 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


37 #i‚de‡
__sig_©omic_t_deföed


38 
	#__sig_©omic_t_deföed


	)

39 
__BEGIN_NAMESPACE_STD


40 
__sig_©omic_t
 
	tsig_©omic_t
;

41 
	g__END_NAMESPACE_STD


43 #unde‡
__√ed_sig_©omic_t


46 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

47 #i‚de‡
__sig£t_t_deföed


48 
	#__sig£t_t_deföed


	)

49 
__sig£t_t
 
	tsig£t_t
;

51 #unde‡
__√ed_sig£t_t


54 #ifde‡
_SIGNAL_H


56 
	~<bôs/ty≥s.h
>

57 
	~<bôs/signum.h
>

59 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


60 #i‚de‡
__pid_t_deföed


61 
__pid_t
 
	tpid_t
;

62 
	#__pid_t_deföed


	)

64 #ifde‡
__USE_XOPEN


66 #i‚de‡
__uid_t_deföed


67 
__uid_t
 
	tuid_t
;

68 
	#__uid_t_deföed


	)

72 #ifde‡
__USE_POSIX199309


74 
	#__√ed_time•ec


	)

75 
	~<time.h
>

78 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


80 
	~<bôs/sigöfo.h
>

85 (*
	t__sigh™dÀr_t
) ();

90 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

91 
__THROW
;

92 #ifde‡
__USE_GNU


93 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

94 
__THROW
;

100 
__BEGIN_NAMESPACE_STD


101 #ifde‡
__USE_MISC


102 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

103 
__THROW
;

106 #ifde‡
__REDIRECT_NTH


107 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

108 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

109 
__sysv_sig«l
);

111 
	#sig«l
 
__sysv_sig«l


	)

114 
__END_NAMESPACE_STD


116 #ifde‡
__USE_XOPEN


119 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

120 
__THROW
;

126 #ifde‡
__USE_POSIX


127 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

130 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


134 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

137 
__BEGIN_NAMESPACE_STD


139 
	$øi£
 (
__sig
Ë
__THROW
;

140 
__END_NAMESPACE_STD


142 #ifde‡
__USE_MISC


144 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

145 
__THROW
;

146 
	$gsig«l
 (
__sig
Ë
__THROW
;

149 #ifde‡
__USE_XOPEN2K8


151 
	`psig«l
 (
__sig
, c⁄° *
__s
);

154 
	`psigöfo
 (c⁄° 
sigöfo_t
 *
__pöfo
, c⁄° *
__s
);

166 #ifde‡
__USE_XOPEN


167 #ifde‡
__GNUC__


168 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

170 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

172 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

177 #ifde‡
__USE_MISC


184 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

187 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

190 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

193 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

197 #ifde‡
__USE_MISC


198 
	#NSIG
 
_NSIG


	)

201 #ifde‡
__USE_GNU


202 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

206 #ifde‡
__USE_MISC


207 
__sigh™dÀr_t
 
	tsig_t
;

210 #ifde‡
__USE_POSIX


213 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

216 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

219 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

222 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigismembî
 (c⁄° 
sig£t_t
 *
__£t
, 
__signo
)

226 
__THROW
 
	`__n⁄nuŒ
 ((1));

228 #ifde‡
__USE_GNU


230 
	$sigi£m±y£t
 (c⁄° 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

233 
	$sig™d£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

234 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

237 
	$sig‹£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

238 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

243 
	~<bôs/siga˘i⁄.h
>

246 
	$sig¥ocmask
 (
__how
, c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

247 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

254 
	$sigsu•íd
 (c⁄° 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

257 
	$siga˘i⁄
 (
__sig
, c⁄° 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

258 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

261 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

268 
	$sigwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

269 
	`__n⁄nuŒ
 ((1, 2));

271 #ifde‡
__USE_POSIX199309


276 
	$sigwaôöfo
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

277 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

284 
	$sigtimedwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

285 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

286 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

287 
	`__n⁄nuŒ
 ((1));

291 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, c⁄° 
sigvÆ
 
__vÆ
)

292 
__THROW
;

297 #ifde‡
__USE_MISC


301 c⁄° *c⁄° 
_sys_sigli°
[
_NSIG
];

302 c⁄° *c⁄° 
sys_sigli°
[
_NSIG
];

306 
	~<bôs/sigc⁄ãxt.h
>

309 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

314 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


315 
	#__√ed_size_t


	)

316 
	~<°ddef.h
>

321 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

323 
	~<bôs/sig°ack.h
>

324 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


326 
	~<sys/uc⁄ãxt.h
>

332 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

333 
__THROW
 
__©åibuã_dïªˇãd__
;

337 
	$sigÆt°ack
 (c⁄° 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

338 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

342 #ifde‡
__USE_XOPEN_EXTENDED


346 
	$sighﬁd
 (
__sig
Ë
__THROW
;

349 
	$sigªl£
 (
__sig
Ë
__THROW
;

352 
	$sigign‹e
 (
__sig
Ë
__THROW
;

355 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

358 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


361 
	~<bôs/±hªadty≥s.h
>

362 
	~<bôs/sigthªad.h
>

369 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

371 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

375 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

144 #i‡
__WORDSIZE
 == 64

145 
	#__INT64_C
(
c
Ë¯## 
L


	)

146 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

148 
	#__INT64_C
(
c
Ë¯## 
LL


	)

149 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

155 
	#INT8_MIN
 (-128)

	)

156 
	#INT16_MIN
 (-32767-1)

	)

157 
	#INT32_MIN
 (-2147483647-1)

	)

158 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

160 
	#INT8_MAX
 (127)

	)

161 
	#INT16_MAX
 (32767)

	)

162 
	#INT32_MAX
 (2147483647)

	)

163 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

166 
	#UINT8_MAX
 (255)

	)

167 
	#UINT16_MAX
 (65535)

	)

168 
	#UINT32_MAX
 (4294967295U)

	)

169 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

173 
	#INT_LEAST8_MIN
 (-128)

	)

174 
	#INT_LEAST16_MIN
 (-32767-1)

	)

175 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

176 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

178 
	#INT_LEAST8_MAX
 (127)

	)

179 
	#INT_LEAST16_MAX
 (32767)

	)

180 
	#INT_LEAST32_MAX
 (2147483647)

	)

181 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

184 
	#UINT_LEAST8_MAX
 (255)

	)

185 
	#UINT_LEAST16_MAX
 (65535)

	)

186 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

187 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

191 
	#INT_FAST8_MIN
 (-128)

	)

192 #i‡
__WORDSIZE
 == 64

193 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

194 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

196 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

197 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

199 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

201 
	#INT_FAST8_MAX
 (127)

	)

202 #i‡
__WORDSIZE
 == 64

203 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

204 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

206 
	#INT_FAST16_MAX
 (2147483647)

	)

207 
	#INT_FAST32_MAX
 (2147483647)

	)

209 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

212 
	#UINT_FAST8_MAX
 (255)

	)

213 #i‡
__WORDSIZE
 == 64

214 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

215 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

217 
	#UINT_FAST16_MAX
 (4294967295U)

	)

218 
	#UINT_FAST32_MAX
 (4294967295U)

	)

220 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

224 #i‡
__WORDSIZE
 == 64

225 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

226 
	#INTPTR_MAX
 (9223372036854775807L)

	)

227 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

229 
	#INTPTR_MIN
 (-2147483647-1)

	)

230 
	#INTPTR_MAX
 (2147483647)

	)

231 
	#UINTPTR_MAX
 (4294967295U)

	)

236 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

238 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

241 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

247 #i‡
__WORDSIZE
 == 64

248 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

249 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

251 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

252 
	#PTRDIFF_MAX
 (2147483647)

	)

256 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

257 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

260 #i‡
__WORDSIZE
 == 64

261 
	#SIZE_MAX
 (18446744073709551615UL)

	)

263 #ifde‡
__WORDSIZE32_SIZE_ULONG


264 
	#SIZE_MAX
 (4294967295UL)

	)

266 
	#SIZE_MAX
 (4294967295U)

	)

271 #i‚de‡
WCHAR_MIN


273 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

274 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

278 
	#WINT_MIN
 (0u)

	)

279 
	#WINT_MAX
 (4294967295u)

	)

282 
	#INT8_C
(
c
Ë
	)
c

283 
	#INT16_C
(
c
Ë
	)
c

284 
	#INT32_C
(
c
Ë
	)
c

285 #i‡
__WORDSIZE
 == 64

286 
	#INT64_C
(
c
Ë¯## 
L


	)

288 
	#INT64_C
(
c
Ë¯## 
LL


	)

292 
	#UINT8_C
(
c
Ë
	)
c

293 
	#UINT16_C
(
c
Ë
	)
c

294 
	#UINT32_C
(
c
Ë¯## 
U


	)

295 #i‡
__WORDSIZE
 == 64

296 
	#UINT64_C
(
c
Ë¯## 
UL


	)

298 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

302 #i‡
__WORDSIZE
 == 64

303 
	#INTMAX_C
(
c
Ë¯## 
L


	)

304 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

306 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

307 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_MISC


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #ifde‡
__USE_POSIX


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #ifde‡
__USE_POSIX


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #ifde‡
__USE_POSIX2


872 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

878 
	`p˛o£
 (
FILE
 *
__°ªam
);

882 #ifdef 
__USE_POSIX


884 *
	$˘îmid
 (*
__s
Ë
__THROW
;

888 #ifde‡
__USE_XOPEN


890 *
	`cu£rid
 (*
__s
);

894 #ifdef 
__USE_GNU


895 
ob°ack
;

898 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

899 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

900 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

901 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

902 c⁄° *
__ª°ri˘
 
__f‹m©
,

903 
_G_va_li°
 
__¨gs
)

904 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

908 #ifde‡
__USE_POSIX


912 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

916 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

919 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

922 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


926 
	#__√ed_gë›t


	)

927 
	~<gë›t.h
>

932 #ifde‡
__USE_EXTERN_INLINES


933 
	~<bôs/°dio.h
>

935 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


936 
	~<bôs/°dio2.h
>

938 #ifde‡
__LDBL_COMPAT


939 
	~<bôs/°dio-ldbl.h
>

942 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_MISC


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #ifde‡
__USE_ISOC99


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_MISC


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #ifde‡
__USE_ISOC99


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #ifde‡
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #ifde‡
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_MISC


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	$©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	$©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	$©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	$⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #ifde‡
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


618 #i‚de‡
__USE_FILE_OFFSET64


619 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 #ifde‡
__REDIRECT


622 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

623 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

625 
	#mk°emp
 
mk°emp64


	)

628 #ifde‡
__USE_LARGEFILE64


629 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

633 #ifde‡
__USE_MISC


640 #i‚de‡
__USE_FILE_OFFSET64


641 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #ifde‡
__REDIRECT


644 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

645 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

647 
	#mk°emps
 
mk°emps64


	)

650 #ifde‡
__USE_LARGEFILE64


651 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

652 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

656 #ifde‡
__USE_XOPEN2K8


662 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

665 #ifde‡
__USE_GNU


672 #i‚de‡
__USE_FILE_OFFSET64


673 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 #ifde‡
__REDIRECT


676 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

677 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

679 
	#mko°emp
 
mko°emp64


	)

682 #ifde‡
__USE_LARGEFILE64


683 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #i‚de‡
__USE_FILE_OFFSET64


693 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

694 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

696 #ifde‡
__REDIRECT


697 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

698 
__Êags
), 
mko°emps64
)

699 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

701 
	#mko°emps
 
mko°emps64


	)

704 #ifde‡
__USE_LARGEFILE64


705 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

706 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

711 
__BEGIN_NAMESPACE_STD


716 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

717 
__END_NAMESPACE_STD


720 #ifdef 
__USE_GNU


723 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

724 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

727 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


733 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

734 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

739 #i‚de‡
__COMPAR_FN_T


740 
	#__COMPAR_FN_T


	)

741 (*
	t__com∑r_‚_t
) (const *, const *);

743 #ifdef 
__USE_GNU


744 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

747 #ifde‡
__USE_GNU


748 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

751 
__BEGIN_NAMESPACE_STD


754 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

755 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

756 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

758 #ifde‡
__USE_EXTERN_INLINES


759 
	~<bôs/°dlib-b£¨ch.h
>

764 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

766 #ifde‡
__USE_GNU


767 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

768 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

769 
	`__n⁄nuŒ
 ((1, 4));

774 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

775 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
__END_NAMESPACE_STD


778 #ifde‡
__USE_ISOC99


779 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

780 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

784 
__BEGIN_NAMESPACE_STD


788 
div_t
 
	$div
 (
__numî
, 
__díom
)

789 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

790 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

791 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

792 
__END_NAMESPACE_STD


794 #ifde‡
__USE_ISOC99


795 
__BEGIN_NAMESPACE_C99


796 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

797 
__díom
)

798 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

799 
__END_NAMESPACE_C99


803 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

804 || 
deföed
 
__USE_MISC


811 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

812 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

817 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

818 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

823 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

824 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

827 #ifde‡
__USE_MISC


829 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

833 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

834 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

835 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

836 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

841 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

844 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

845 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

846 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

848 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

849 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

850 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

851 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

852 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

853 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

854 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

855 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

859 
__BEGIN_NAMESPACE_STD


862 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

865 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

866 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

869 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

873 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

874 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

876 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

877 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

878 
__THROW
;

879 
__END_NAMESPACE_STD


882 #ifde‡
__USE_MISC


887 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


898 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

899 *c⁄° *
__ª°ri˘
 
__tokís
,

900 **
__ª°ri˘
 
__vÆuï
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

905 #ifde‡
__USE_XOPEN


907 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

913 #ifde‡
__USE_XOPEN2KXSI


915 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

918 #ifde‡
__USE_XOPEN


923 
	$gø¡±
 (
__fd
Ë
__THROW
;

927 
	$u∆ock±
 (
__fd
Ë
__THROW
;

932 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

935 #ifde‡
__USE_GNU


939 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

940 
__THROW
 
	`__n⁄nuŒ
 ((2));

943 
	`gë±
 ();

946 #ifde‡
__USE_MISC


950 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

951 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 
	~<bôs/°dlib-Êﬂt.h
>

957 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


958 
	~<bôs/°dlib.h
>

960 #ifde‡
__LDBL_COMPAT


961 
	~<bôs/°dlib-ldbl.h
>

965 #unde‡
__√ed_mÆloc_™d_ˇŒoc


967 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

36 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

40 
__BEGIN_NAMESPACE_STD


42 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

46 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 
__END_NAMESPACE_STD


53 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

60 
__BEGIN_NAMESPACE_STD


62 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

65 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

66 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

69 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


72 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

73 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

74 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 #ifde‡
__OPTIMIZE__


78 
__exã∫_Æways_ölöe
 *

79 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


81  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

84 
__exã∫_Æways_ölöe
 const *

85 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


87  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

90 
	}
}

92 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

93 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 
__END_NAMESPACE_STD


97 #ifde‡
__USE_GNU


100 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


101 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

103 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


112 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

113 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

123 
__BEGIN_NAMESPACE_STD


125 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

128 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

129 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

137 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

151 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
 
	`__n⁄nuŒ
 ((2));

153 
__END_NAMESPACE_STD


155 #ifde‡
__USE_XOPEN2K8


159 
	~<xloˇÀ.h
>

162 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

163 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

165 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

166 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

169 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


171 *
	$°rdup
 (c⁄° *
__s
)

172 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

178 #i‡
deföed
 
__USE_XOPEN2K8


179 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

180 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


185 
	#°rdu∑
(
s
) \

186 (
__exãnsi⁄__
 \

188 c⁄° *
__ﬁd
 = (
s
); \

189 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

190 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

191 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

192 
	}
}))

	)

195 
	#°∫du∑
(
s
, 
n
) \

196 (
__exãnsi⁄__
 \

198 c⁄° *
__ﬁd
 = (
s
); \

199 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

200 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

201 
__√w
[
__Àn
] = '\0'; \

202 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

203 }))

	)

206 
	g__BEGIN_NAMESPACE_STD


208 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


211 *
°rchr
 (*
__s
, 
__c
)

212 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

213 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

214 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

216 #ifde‡
__OPTIMIZE__


217 
__exã∫_Æways_ölöe
 *

218 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


220  
__buûtö_°rchr
 (
__s
, 
__c
);

223 
__exã∫_Æways_ölöe
 const *

224 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


226  
__buûtö_°rchr
 (
__s
, 
__c
);

231 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

232 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

235 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


238 *
	`°ºchr
 (*
__s
, 
__c
)

239 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

241 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

243 #ifde‡
__OPTIMIZE__


244 
__exã∫_Æways_ölöe
 *

245 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


247  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

250 
__exã∫_Æways_ölöe
 const *

251 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


253  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

256 
	}
}

258 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

259 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

261 
__END_NAMESPACE_STD


263 #ifde‡
__USE_GNU


266 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


267 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

268 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

269 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

270 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

272 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

273 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 
__BEGIN_NAMESPACE_STD


280 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

281 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

284 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

287 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


290 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

291 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

293 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

295 #ifde‡
__OPTIMIZE__


296 
__exã∫_Æways_ölöe
 *

297 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


299  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

302 
__exã∫_Æways_ölöe
 const *

303 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


305  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

308 
	}
}

310 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

311 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

314 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


317 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

318 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

320 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

322 #ifde‡
__OPTIMIZE__


323 
__exã∫_Æways_ölöe
 *

324 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


326  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

329 
__exã∫_Æways_ölöe
 const *

330 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


332  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

335 
	}
}

337 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

338 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

343 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

344 
__THROW
 
	`__n⁄nuŒ
 ((2));

345 
__END_NAMESPACE_STD


349 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

350 c⁄° *
__ª°ri˘
 
__dñim
,

351 **
__ª°ri˘
 
__ßve_±r
)

352 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

353 #ifde‡
__USE_POSIX


354 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

355 **
__ª°ri˘
 
__ßve_±r
)

356 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

359 #ifde‡
__USE_GNU


361 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


362 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

363 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

364 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

365 c⁄° *
__√edÀ
)

366 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

368 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

369 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 #ifde‡
__USE_GNU


377 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

378 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

379 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

383 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

384 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

385 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

387 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

392 
__BEGIN_NAMESPACE_STD


394 
size_t
 
	$°æí
 (c⁄° *
__s
)

395 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

396 
__END_NAMESPACE_STD


398 #ifdef 
__USE_XOPEN2K8


401 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

402 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

406 
__BEGIN_NAMESPACE_STD


408 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

409 
__END_NAMESPACE_STD


410 #ifde‡
__USE_XOPEN2K


418 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


421 #ifde‡
__REDIRECT_NTH


422 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

423 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

424 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

426 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

427 
__THROW
 
	`__n⁄nuŒ
 ((2));

428 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

433 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

434 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

438 #ifde‡
__USE_XOPEN2K8


440 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

446 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

448 #ifde‡
__USE_MISC


450 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

451 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

457 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

458 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

461 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


464 *
	`ödex
 (*
__s
, 
__c
)

465 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

466 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

467 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

469 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


470 
__exã∫_Æways_ölöe
 *

471 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


473  
	`__buûtö_ödex
 (
__s
, 
__c
);

476 
__exã∫_Æways_ölöe
 const *

477 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


479  
	`__buûtö_ödex
 (
__s
, 
__c
);

482 
	}
}

484 *
	$ödex
 (c⁄° *
__s
, 
__c
)

485 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

489 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


492 *
	`rödex
 (*
__s
, 
__c
)

493 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

495 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

497 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


498 
__exã∫_Æways_ölöe
 *

499 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


501  
	`__buûtö_rödex
 (
__s
, 
__c
);

504 
__exã∫_Æways_ölöe
 const *

505 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


507  
	`__buûtö_rödex
 (
__s
, 
__c
);

510 
	}
}

512 *
	$rödex
 (c⁄° *
__s
, 
__c
)

513 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

518 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

522 #ifdef 
__USE_GNU


523 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

524 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

525 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

530 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

533 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

534 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

537 #ifdef 
__USE_GNU


540 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

541 
__loˇÀ_t
 
__loc
)

542 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

544 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

545 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

546 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

549 #ifdef 
__USE_MISC


552 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

553 c⁄° *
__ª°ri˘
 
__dñim
)

554 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifdef 
__USE_XOPEN2K8


559 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

562 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

563 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

570 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

572 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

573 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 #ifdef 
__USE_GNU


579 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

580 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

583 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

586 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

588 #i‚de‡
ba£«me


593 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


594 "C++" *
	$ba£«me
 (*
__fûíame
)

595 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

596 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

597 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

599 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

605 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

606 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

607 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


627 
	~<bôs/°rög.h
>

630 
	~<bôs/°rög2.h
>

633 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


635 
	~<bôs/°rög3.h
>

639 #i‡
deföed
 
__USE_GNU
 && deföed 
__OPTIMIZE__
 \

640 && 
deföed
 
__exã∫_Æways_ölöe
 && 
	$__GNUC_PREREQ
 (3,2)

641 #i‡!
deföed
 
_FORCE_INLINES
 && !deföed 
_HAVE_STRING_ARCH_memp˝y


643 #unde‡
memp˝y


644 #unde‡
__memp˝y


645 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

646 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

648 
__exã∫_Æways_ölöe
 *

649 
	$__memp˝y_ölöe
 (*
__ª°ri˘
 
__de°
,

650 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

652  (*Ë
	`mem˝y
 (
__de°
, 
__§c
, 
__n
) + __n;

653 
	}
}

658 
	g__END_DECLS


	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #ifde‡
__USE_POSIX


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_MISC


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #ifde‡
__USE_POSIX


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_POSIX


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_MISC


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

70 
	#_POSIX2_C_VERSION
 
__POSIX2_THIS_VERSION


	)

74 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

78 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

82 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

86 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

89 #ifde‡
__USE_XOPEN2K8


90 
	#_XOPEN_VERSION
 700

	)

91 #ñi‡
deföed
 
__USE_XOPEN2K


92 
	#_XOPEN_VERSION
 600

	)

93 #ñi‡
deföed
 
__USE_UNIX98


94 
	#_XOPEN_VERSION
 500

	)

96 
	#_XOPEN_VERSION
 4

	)

100 
	#_XOPEN_XCU_VERSION
 4

	)

103 
	#_XOPEN_XPG2
 1

	)

104 
	#_XOPEN_XPG3
 1

	)

105 
	#_XOPEN_XPG4
 1

	)

108 
	#_XOPEN_UNIX
 1

	)

111 
	#_XOPEN_CRYPT
 1

	)

115 
	#_XOPEN_ENH_I18N
 1

	)

118 
	#_XOPEN_LEGACY
 1

	)

205 
	~<bôs/posix_›t.h
>

208 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


209 
	~<bôs/ívú⁄míts.h
>

213 
	#STDIN_FILENO
 0

	)

214 
	#STDOUT_FILENO
 1

	)

215 
	#STDERR_FILENO
 2

	)

220 
	~<bôs/ty≥s.h
>

222 #i‚def 
__ssize_t_deföed


223 
__ssize_t
 
	tssize_t
;

224 
	#__ssize_t_deföed


	)

227 
	#__√ed_size_t


	)

228 
	#__√ed_NULL


	)

229 
	~<°ddef.h
>

231 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


234 #i‚de‡
__gid_t_deföed


235 
__gid_t
 
	tgid_t
;

236 
	#__gid_t_deföed


	)

239 #i‚de‡
__uid_t_deföed


240 
__uid_t
 
	tuid_t
;

241 
	#__uid_t_deföed


	)

244 #i‚de‡
__off_t_deföed


245 #i‚de‡
__USE_FILE_OFFSET64


246 
__off_t
 
	toff_t
;

248 
__off64_t
 
	toff_t
;

250 
	#__off_t_deföed


	)

252 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


253 
__off64_t
 
	toff64_t
;

254 
	#__off64_t_deföed


	)

257 #i‚de‡
__u£c⁄ds_t_deföed


258 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

259 
	#__u£c⁄ds_t_deföed


	)

262 #i‚de‡
__pid_t_deföed


263 
__pid_t
 
	tpid_t
;

264 
	#__pid_t_deföed


	)

268 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


269 #i‚de‡
__öçå_t_deföed


270 
__öçå_t
 
	töçå_t
;

271 
	#__öçå_t_deföed


	)

275 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


276 #i‚de‡
__sockÀn_t_deföed


277 
__sockÀn_t
 
	tsockÀn_t
;

278 
	#__sockÀn_t_deföed


	)

284 
	#R_OK
 4

	)

285 
	#W_OK
 2

	)

286 
	#X_OK
 1

	)

287 
	#F_OK
 0

	)

290 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

292 #ifde‡
__USE_GNU


295 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

296 
__THROW
 
	`__n⁄nuŒ
 ((1));

299 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1));

303 #ifde‡
__USE_ATFILE


307 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

308 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

313 #i‚def 
_STDIO_H


314 
	#SEEK_SET
 0

	)

315 
	#SEEK_CUR
 1

	)

316 
	#SEEK_END
 2

	)

317 #ifde‡
__USE_GNU


318 
	#SEEK_DATA
 3

	)

319 
	#SEEK_HOLE
 4

	)

323 #i‡
deföed
 
__USE_MISC
 && !deföed 
L_SET


325 
	#L_SET
 
SEEK_SET


	)

326 
	#L_INCR
 
SEEK_CUR


	)

327 
	#L_XTND
 
SEEK_END


	)

336 #i‚de‡
__USE_FILE_OFFSET64


337 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

339 #ifde‡
__REDIRECT_NTH


340 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

341 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

342 
l£ek64
);

344 
	#l£ek
 
l£ek64


	)

347 #ifde‡
__USE_LARGEFILE64


348 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

349 
__THROW
;

356 
	`˛o£
 (
__fd
);

363 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

369 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

371 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


372 #i‚de‡
__USE_FILE_OFFSET64


379 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

380 
__off_t
 
__off£t
Ë
__wur
;

387 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

388 
__off_t
 
__off£t
Ë
__wur
;

390 #ifde‡
__REDIRECT


391 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

392 
__off64_t
 
__off£t
),

393 
¥ód64
Ë
__wur
;

394 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

395 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

396 
pwrôe64
Ë
__wur
;

398 
	#¥ód
 
¥ód64


	)

399 
	#pwrôe
 
pwrôe64


	)

403 #ifde‡
__USE_LARGEFILE64


407 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

408 
__off64_t
 
__off£t
Ë
__wur
;

411 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

412 
__off64_t
 
__off£t
Ë
__wur
;

420 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

422 #ifde‡
__USE_GNU


425 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

435 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

447 
	`¶ìp
 (
__£c⁄ds
);

449 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

450 || 
deföed
 
__USE_MISC


455 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

456 
__THROW
;

463 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

472 
	`∑u£
 ();

476 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

477 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

479 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


481 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

486 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

487 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

491 #ifde‡
__USE_ATFILE


494 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

495 
__gid_t
 
__group
, 
__Êag
)

496 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

500 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

502 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


504 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

514 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

516 #ifdef 
__USE_GNU


520 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

523 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

524 || 
deföed
 
__USE_MISC


528 *
	$gëwd
 (*
__buf
)

529 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

534 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

537 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

539 #ifde‡
__USE_GNU


542 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

546 **
__ívú⁄
;

547 #ifde‡
__USE_GNU


548 **
ívú⁄
;

554 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

555 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifde‡
__USE_XOPEN2K8


560 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

561 
__THROW
 
	`__n⁄nuŒ
 ((2));

566 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

567 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

577 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

581 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

582 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

588 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

590 #ifde‡
__USE_GNU


593 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

594 *c⁄° 
__ívp
[])

595 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

599 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


601 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

606 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

612 
	~<bôs/c⁄‚ame.h
>

615 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

616 
__THROW
 
	`__n⁄nuŒ
 ((1));

619 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

622 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

624 #ifdef 
__USE_POSIX2


626 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

631 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

637 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

640 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

641 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


642 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

649 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

651 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


663 
	$£çgΩ
 (Ë
__THROW
;

670 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

672 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


674 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

678 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

681 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

687 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

692 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

694 #ifdef 
__USE_GNU


696 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

703 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

705 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


708 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

711 #ifde‡
__USE_XOPEN2K


713 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

720 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

722 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


725 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

728 #ifde‡
__USE_XOPEN2K


730 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

733 #ifde‡
__USE_GNU


736 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

737 
__THROW
;

741 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

742 
__THROW
;

746 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

747 
__THROW
 
__wur
;

751 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

752 
__THROW
 
__wur
;

759 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

761 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

762 || 
deföed
 
__USE_MISC


767 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

773 *
	$ây«me
 (
__fd
Ë
__THROW
;

777 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

778 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

782 
	$ißây
 (
__fd
Ë
__THROW
;

784 #i‡
deföed
 
__USE_MISC
 \

785 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

788 
	$ây¶Ÿ
 (Ë
__THROW
;

793 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

794 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

796 #ifde‡
__USE_ATFILE


799 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

800 c⁄° *
__to
, 
__Êags
)

801 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

804 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


806 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

807 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

812 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

813 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

814 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

817 #ifde‡
__USE_ATFILE


819 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

820 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

823 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

824 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

825 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

829 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

831 #ifde‡
__USE_ATFILE


833 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

834 
__THROW
 
	`__n⁄nuŒ
 ((2));

838 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

842 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

845 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

852 *
	`gëlogö
 ();

853 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


860 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

863 #ifdef 
__USE_MISC


865 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

869 #ifdef 
__USE_POSIX2


873 
	#__√ed_gë›t


	)

874 
	~<gë›t.h
>

878 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


882 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

886 #i‡
deföed
 
__USE_MISC


889 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

890 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

894 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

900 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

902 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

903 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

909 
	$vh™gup
 (Ë
__THROW
;

912 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

920 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

921 
size_t
 
__off£t
, 
__sˇÀ
)

922 
__THROW
 
	`__n⁄nuŒ
 ((1));

928 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

932 *
	$gëu£rshñl
 (Ë
__THROW
;

933 
	$ídu£rshñl
 (Ë
__THROW
;

934 
	$£tu£rshñl
 (Ë
__THROW
;

940 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

944 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

947 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

951 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

959 
	`fsync
 (
__fd
);

962 #ifde‡
__USE_GNU


965 
	$syncfs
 (
__fd
Ë
__THROW
;

969 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


972 
	`gëho°id
 ();

975 
	$sync
 (Ë
__THROW
;

978 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K


981 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

986 
	$gëdèbÀsize
 (Ë
__THROW
;

992 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


995 #i‚de‡
__USE_FILE_OFFSET64


996 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

997 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

999 #ifde‡
__REDIRECT_NTH


1000 
	`__REDIRECT_NTH
 (
åunˇã
,

1001 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

1002 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1004 
	#åunˇã
 
åunˇã64


	)

1007 #ifde‡
__USE_LARGEFILE64


1008 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1009 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1014 #i‡
deföed
 
__USE_POSIX199309
 \

1015 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1018 #i‚de‡
__USE_FILE_OFFSET64


1019 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1021 #ifde‡
__REDIRECT_NTH


1022 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1023 
·runˇã64
Ë
__wur
;

1025 
	#·runˇã
 
·runˇã64


	)

1028 #ifde‡
__USE_LARGEFILE64


1029 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1035 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1036 || 
deföed
 
__USE_MISC


1040 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1046 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1050 #ifde‡
__USE_MISC


1061 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1066 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1078 
	#F_ULOCK
 0

	)

1079 
	#F_LOCK
 1

	)

1080 
	#F_TLOCK
 2

	)

1081 
	#F_TEST
 3

	)

1083 #i‚de‡
__USE_FILE_OFFSET64


1084 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1086 #ifde‡
__REDIRECT


1087 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1088 
lockf64
Ë
__wur
;

1090 
	#lockf
 
lockf64


	)

1093 #ifde‡
__USE_LARGEFILE64


1094 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1099 #ifde‡
__USE_GNU


1104 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1105 (
__exãnsi⁄__
 \

1106 ({ 
__ªsu…
; \

1107 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1108 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1109 
__ªsu…
; 
	}
}))

	)

1112 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1115 
fd©async
 (
__fûdes
);

1121 #ifdef 
__USE_XOPEN


1123 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1124 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1128 
	$í¸y±
 (*
__glibc_block
, 
__edÊag
)

1129 
__THROW
 
	`__n⁄nuŒ
 ((1));

1136 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1137 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1143 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1145 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1150 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1151 
	~<bôs/uni°d.h
>

1154 
__END_DECLS


	@/usr/include/utime.h

22 #i‚def 
_UTIME_H


23 
	#_UTIME_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


32 
	#__√ed_time_t


	)

33 
	~<time.h
>

37 
	sutimbuf


39 
__time_t
 
	ma˘ime
;

40 
__time_t
 
	mmodtime
;

45 
	$utime
 (c⁄° *
__fûe
,

46 c⁄° 
utimbuf
 *
__fûe_times
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1));

49 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_MISC


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

97 #unde‡
__USE_ISOC11


98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_ISOCXX11


101 #unde‡
__USE_POSIX


102 #unde‡
__USE_POSIX2


103 #unde‡
__USE_POSIX199309


104 #unde‡
__USE_POSIX199506


105 #unde‡
__USE_XOPEN


106 #unde‡
__USE_XOPEN_EXTENDED


107 #unde‡
__USE_UNIX98


108 #unde‡
__USE_XOPEN2K


109 #unde‡
__USE_XOPEN2KXSI


110 #unde‡
__USE_XOPEN2K8


111 #unde‡
__USE_XOPEN2K8XSI


112 #unde‡
__USE_LARGEFILE


113 #unde‡
__USE_LARGEFILE64


114 #unde‡
__USE_FILE_OFFSET64


115 #unde‡
__USE_MISC


116 #unde‡
__USE_ATFILE


117 #unde‡
__USE_GNU


118 #unde‡
__USE_REENTRANT


119 #unde‡
__USE_FORTIFY_LEVEL


120 #unde‡
__KERNEL_STRICT_NAMES


124 #i‚de‡
_LOOSE_KERNEL_NAMES


125 
	#__KERNEL_STRICT_NAMES


	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

146 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

147 && !
deföed
 
	g_DEFAULT_SOURCE


152 #unde‡
_DEFAULT_SOURCE


153 
	#_DEFAULT_SOURCE
 1

	)

157 #ifde‡
_GNU_SOURCE


158 #unde‡
_ISOC95_SOURCE


159 
	#_ISOC95_SOURCE
 1

	)

160 #unde‡
_ISOC99_SOURCE


161 
	#_ISOC99_SOURCE
 1

	)

162 #unde‡
_ISOC11_SOURCE


163 
	#_ISOC11_SOURCE
 1

	)

164 #unde‡
_POSIX_SOURCE


165 
	#_POSIX_SOURCE
 1

	)

166 #unde‡
_POSIX_C_SOURCE


167 
	#_POSIX_C_SOURCE
 200809L

	)

168 #unde‡
_XOPEN_SOURCE


169 
	#_XOPEN_SOURCE
 700

	)

170 #unde‡
_XOPEN_SOURCE_EXTENDED


171 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

172 #unde‡
_LARGEFILE64_SOURCE


173 
	#_LARGEFILE64_SOURCE
 1

	)

174 #unde‡
_DEFAULT_SOURCE


175 
	#_DEFAULT_SOURCE
 1

	)

176 #unde‡
_ATFILE_SOURCE


177 
	#_ATFILE_SOURCE
 1

	)

182 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

183 || (!
deföed
 
	g__STRICT_ANSI__
 \

184 && !
deföed
 
	g_ISOC99_SOURCE
 \

185 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

186 && !
deföed
 
	g_XOPEN_SOURCE
))

187 #unde‡
_DEFAULT_SOURCE


188 
	#_DEFAULT_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC11_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

194 
	#__USE_ISOC11
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

200 
	#__USE_ISOC99
 1

	)

204 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

205 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

206 
	#__USE_ISOC95
 1

	)

213 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

214 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

215 
	#__USE_ISOCXX11
 1

	)

221 #ifde‡
_DEFAULT_SOURCE


222 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


223 
	#__USE_POSIX_IMPLICITLY
 1

	)

225 #unde‡
_POSIX_SOURCE


226 
	#_POSIX_SOURCE
 1

	)

227 #unde‡
_POSIX_C_SOURCE


228 
	#_POSIX_C_SOURCE
 200809L

	)

230 #i‡((!
deföed
 
__STRICT_ANSI__
 \

231 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

232 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

233 
	#_POSIX_SOURCE
 1

	)

234 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

235 
	#_POSIX_C_SOURCE
 2

	)

236 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

237 
	#_POSIX_C_SOURCE
 199506L

	)

238 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

239 
	#_POSIX_C_SOURCE
 200112L

	)

241 
	#_POSIX_C_SOURCE
 200809L

	)

243 
	#__USE_POSIX_IMPLICITLY
 1

	)

246 #i‡(
deföed
 
_POSIX_SOURCE
 \

247 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

248 || 
deföed
 
_XOPEN_SOURCE
)

249 
	#__USE_POSIX
 1

	)

252 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


253 
	#__USE_POSIX2
 1

	)

256 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

257 
	#__USE_POSIX199309
 1

	)

260 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

261 
	#__USE_POSIX199506
 1

	)

264 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

265 
	#__USE_XOPEN2K
 1

	)

266 #unde‡
__USE_ISOC95


267 
	#__USE_ISOC95
 1

	)

268 #unde‡
__USE_ISOC99


269 
	#__USE_ISOC99
 1

	)

272 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

273 
	#__USE_XOPEN2K8
 1

	)

274 #unde‡
_ATFILE_SOURCE


275 
	#_ATFILE_SOURCE
 1

	)

278 #ifdef 
_XOPEN_SOURCE


279 
	#__USE_XOPEN
 1

	)

280 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

281 
	#__USE_XOPEN_EXTENDED
 1

	)

282 
	#__USE_UNIX98
 1

	)

283 #unde‡
_LARGEFILE_SOURCE


284 
	#_LARGEFILE_SOURCE
 1

	)

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

286 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

287 
	#__USE_XOPEN2K8
 1

	)

288 
	#__USE_XOPEN2K8XSI
 1

	)

290 
	#__USE_XOPEN2K
 1

	)

291 
	#__USE_XOPEN2KXSI
 1

	)

292 #unde‡
__USE_ISOC95


293 
	#__USE_ISOC95
 1

	)

294 #unde‡
__USE_ISOC99


295 
	#__USE_ISOC99
 1

	)

298 #ifde‡
_XOPEN_SOURCE_EXTENDED


299 
	#__USE_XOPEN_EXTENDED
 1

	)

304 #ifde‡
_LARGEFILE_SOURCE


305 
	#__USE_LARGEFILE
 1

	)

308 #ifde‡
_LARGEFILE64_SOURCE


309 
	#__USE_LARGEFILE64
 1

	)

312 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

313 
	#__USE_FILE_OFFSET64
 1

	)

316 #i‡
deföed
 
_DEFAULT_SOURCE


317 
	#__USE_MISC
 1

	)

320 #ifdef 
_ATFILE_SOURCE


321 
	#__USE_ATFILE
 1

	)

324 #ifdef 
_GNU_SOURCE


325 
	#__USE_GNU
 1

	)

328 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


329 
	#__USE_REENTRANT
 1

	)

332 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

333 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

334 #i‡
_FORTIFY_SOURCE
 > 1

335 
	#__USE_FORTIFY_LEVEL
 2

	)

337 
	#__USE_FORTIFY_LEVEL
 1

	)

340 
	#__USE_FORTIFY_LEVEL
 0

	)

345 
	~<°dc-¥edef.h
>

353 #unde‡
__GNU_LIBRARY__


354 
	#__GNU_LIBRARY__
 6

	)

358 
	#__GLIBC__
 2

	)

359 
	#__GLIBC_MINOR__
 23

	)

361 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

362 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

365 #i‚de‡
__ASSEMBLER__


366 #i‚de‡
_SYS_CDEFS_H


367 
	~<sys/cdefs.h
>

372 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


373 
	#__USE_LARGEFILE
 1

	)

374 
	#__USE_LARGEFILE64
 1

	)

380 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

381 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

382 && 
deföed
 
	g__exã∫_ölöe


383 
	#__USE_EXTERN_INLINES
 1

	)

391 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


150 
	t_IO_lock_t
;

156 
	s_IO_m¨kî
 {

157 
_IO_m¨kî
 *
	m_√xt
;

158 
_IO_FILE
 *
	m_sbuf
;

162 
	m_pos
;

164 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

165 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

166 
	mpublic
:

167 
°ªamm¨kî
(
°ªambuf
 *
sb
);

168 ~
°ªamm¨kî
();

169 
ßvög
(Ë{  
	m_•os
 == -2; }

170 
dñè
(
°ªamm¨kî
&);

171 
dñè
();

176 
	e__codecvt_ªsu…


178 
	m__codecvt_ok
,

179 
	m__codecvt_∑πül
,

180 
	m__codecvt_îr‹
,

181 
	m__codecvt_noc⁄v


184 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


187 
	s_IO_codecvt


189 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

190 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

191 
	m__mb°©e_t
 *,

192 c⁄° 
	mwch¨_t
 *,

193 c⁄° 
	mwch¨_t
 *,

194 c⁄° 
	mwch¨_t
 **, *,

196 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

197 
	m__mb°©e_t
 *, *,

199 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

200 
	m__mb°©e_t
 *,

202 c⁄° **, 
	mwch¨_t
 *,

203 
	mwch¨_t
 *, wchar_t **);

204 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

205 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

206 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

207 c⁄° *, c⁄° *, 
	m_IO_size_t
);

208 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

210 
_IO_ic⁄v_t
 
	m__cd_ö
;

211 
_IO_ic⁄v_t
 
	m__cd_out
;

215 
	s_IO_wide_d©a


217 
wch¨_t
 *
	m_IO_ªad_±r
;

218 
wch¨_t
 *
	m_IO_ªad_íd
;

219 
wch¨_t
 *
	m_IO_ªad_ba£
;

220 
wch¨_t
 *
	m_IO_wrôe_ba£
;

221 
wch¨_t
 *
	m_IO_wrôe_±r
;

222 
wch¨_t
 *
	m_IO_wrôe_íd
;

223 
wch¨_t
 *
	m_IO_buf_ba£
;

224 
wch¨_t
 *
	m_IO_buf_íd
;

226 
wch¨_t
 *
	m_IO_ßve_ba£
;

227 
wch¨_t
 *
	m_IO_backup_ba£
;

229 
wch¨_t
 *
	m_IO_ßve_íd
;

231 
__mb°©e_t
 
	m_IO_°©e
;

232 
__mb°©e_t
 
	m_IO_œ°_°©e
;

233 
_IO_codecvt
 
	m_codecvt
;

235 
wch¨_t
 
	m_sh‹tbuf
[1];

237 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

241 
	s_IO_FILE
 {

242 
	m_Êags
;

243 
	#_IO_fûe_Êags
 
_Êags


	)

247 * 
	m_IO_ªad_±r
;

248 * 
	m_IO_ªad_íd
;

249 * 
	m_IO_ªad_ba£
;

250 * 
	m_IO_wrôe_ba£
;

251 * 
	m_IO_wrôe_±r
;

252 * 
	m_IO_wrôe_íd
;

253 * 
	m_IO_buf_ba£
;

254 * 
	m_IO_buf_íd
;

256 *
	m_IO_ßve_ba£
;

257 *
	m_IO_backup_ba£
;

258 *
	m_IO_ßve_íd
;

260 
_IO_m¨kî
 *
	m_m¨kîs
;

262 
_IO_FILE
 *
	m_chaö
;

264 
	m_fûío
;

266 
	m_blksize
;

268 
	m_Êags2
;

270 
_IO_off_t
 
	m_ﬁd_off£t
;

272 
	#__HAVE_COLUMN


	)

274 
	m_cur_cﬁumn
;

275 sig√d 
	m_vèbÀ_off£t
;

276 
	m_sh‹tbuf
[1];

280 
_IO_lock_t
 *
	m_lock
;

281 #ifde‡
_IO_USE_OLD_IO_FILE


284 
	s_IO_FILE_com∂ëe


286 
_IO_FILE
 
	m_fûe
;

288 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

289 
_IO_off64_t
 
	m_off£t
;

290 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


292 
_IO_codecvt
 *
	m_codecvt
;

293 
_IO_wide_d©a
 *
	m_wide_d©a
;

294 
_IO_FILE
 *
	m_‰ìªs_li°
;

295 *
	m_‰ìªs_buf
;

297 *
	m__∑d1
;

298 *
	m__∑d2
;

299 *
	m__∑d3
;

300 *
	m__∑d4
;

302 
size_t
 
	m__∑d5
;

303 
	m_mode
;

305 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

309 #i‚de‡
__˝lu•lus


310 
_IO_FILE
 
	t_IO_FILE
;

313 
	g_IO_FILE_∂us
;

315 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

316 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

317 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

318 #i‚de‡
_LIBC


319 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

320 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

321 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

323 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

324 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

325 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

333 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

341 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

342 
	tsize_t
 
	t__n
);

350 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

353 
	t__io_˛o£_‚
 (*
	t__cookõ
);

356 #ifde‡
_GNU_SOURCE


358 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

359 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

360 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

361 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

366 
__io_ªad_‚
 *
	mªad
;

367 
__io_wrôe_‚
 *
	mwrôe
;

368 
__io_£ek_‚
 *
	m£ek
;

369 
__io_˛o£_‚
 *
	m˛o£
;

370 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

371 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

373 
	g_IO_cookõ_fûe
;

376 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

377 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

381 #ifde‡
__˝lu•lus


385 
__undîÊow
 (
_IO_FILE
 *);

386 
__uÊow
 (
_IO_FILE
 *);

387 
__ovîÊow
 (
_IO_FILE
 *, );

388 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


389 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

390 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

391 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

394 #i‡ 
__GNUC__
 >= 3

395 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

397 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

400 
	#_IO_gëc_u∆ocked
(
_Â
) \

401 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

402 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

403 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

404 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

405 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

406 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

407 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

408 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

409 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

410 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

412 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


413 
	#_IO_gëwc_u∆ocked
(
_Â
) \

414 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

415 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

416 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

417 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

418 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

422 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

423 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

426 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

427 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

429 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

430 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

431 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

432 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

434 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

437 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

438 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

440 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

441 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

442 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

444 #ifde‡
_IO_MTSAFE_IO


445 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

446 
	#_IO_Êockfûe
(
_Â
) \

447 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

448 
	#_IO_fu∆ockfûe
(
_Â
) \

449 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

451 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

452 
	#_IO_Êockfûe
(
_Â
Ë

	)

453 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

454 
	#_IO_·rylockfûe
(
_Â
Ë

	)

455 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

456 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

459 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

460 
_IO_va_li°
, *
__ª°ri˘
);

461 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

462 
_IO_va_li°
);

463 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

464 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

466 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

467 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

469 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

471 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


472 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

473 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

474 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

475 #i‡
__GNUC__
 >= 2

478 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


479 
	~<shlib-com∑t.h
>

480 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

481 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

482 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

483 c⁄° 
_IO_°dö_u£d
;

484 
wók_exã∫
 (
_IO_°dö_u£d
);

487 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


488 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

492 
	#_IO_fwide
(
__Â
, 
__mode
) \

493 ({ 
__ªsu…
 = (
__mode
); \

494 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

496 i‡((
__Â
)->
_mode
 == 0) \

498 (
__Â
)->
_mode
 = -1; \

499 
__ªsu…
 = (
__Â
)->
_mode
; \

501 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

502 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

504 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

505 
__ªsu…
; })

	)

508 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

509 
_IO_va_li°
, *
__ª°ri˘
);

510 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

511 
_IO_va_li°
);

512 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

513 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

516 #ifde‡
__LDBL_COMPAT


517 
	~<bôs/libio-ldbl.h
>

520 #ifde‡
__˝lu•lus


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

55 
	#__STDC_ISO_10646__
 201505L

	)

58 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004,

60 
	m__GCONV_TRANSLIT
 = 0x0008

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 
	s__gc⁄v_°ï


86 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

87 c⁄° *
__mod«me
;

89 
__cou¡î
;

91 *
__‰om_«me
;

92 *
__to_«me
;

94 
__gc⁄v_f˘
 
__f˘
;

95 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

96 
__gc⁄v_öô_f˘
 
__öô_f˘
;

97 
__gc⁄v_íd_f˘
 
__íd_f˘
;

101 
__mö_√eded_‰om
;

102 
__max_√eded_‰om
;

103 
__mö_√eded_to
;

104 
__max_√eded_to
;

107 
__°©eful
;

109 *
__d©a
;

114 
	s__gc⁄v_°ï_d©a


116 *
__outbuf
;

117 *
__outbu„nd
;

121 
__Êags
;

125 
__övoˇti⁄_cou¡î
;

129 
__öã∫Æ_u£
;

131 
__mb°©e_t
 *
__°©ï
;

132 
__mb°©e_t
 
__°©e
;

138 
	s__gc⁄v_öfo


140 
size_t
 
__n°ïs
;

141 
__gc⁄v_°ï
 *
__°ïs
;

142 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

143 } *
	t__gc⁄v_t
;

146 
	`__gc⁄v_å™¶ôî©e
 (
__gc⁄v_°ï
 *
°ï
,

147 
__gc⁄v_°ï_d©a
 *
°ï_d©a
,

148 c⁄° *
öbuf°¨t
,

149 c⁄° **
öbuÂ
,

150 c⁄° *
öbu„nd
,

151 **
outbuf°¨t
,

152 
size_t
 *
úªvîsibÀ
);

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

149 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

152 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

154 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

157 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

158 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

159 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

161 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

162 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

163 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

166 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

169 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

170 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

171 
__END_NAMESPACE_STD


173 #ifde‡
__USE_XOPEN2K8


175 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

178 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

179 
size_t
 
__n
Ë
__THROW
;

183 
	~<xloˇÀ.h
>

185 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
__loˇÀ_t
 
__loc
Ë
__THROW
;

188 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

189 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

192 
__BEGIN_NAMESPACE_STD


195 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

199 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

200 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

201 
__END_NAMESPACE_STD


203 #ifde‡
__USE_XOPEN2K8


209 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

210 
__loˇÀ_t
 
__loc
Ë
__THROW
;

215 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

216 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

219 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

222 
__BEGIN_NAMESPACE_STD


224 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


225 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

226 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

230 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

231 
__THROW
 
__©åibuã_puª__
;

234 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


235 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

236 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

240 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

241 
__THROW
 
__©åibuã_puª__
;

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_GNU


248 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

249 
__THROW
 
__©åibuã_puª__
;

252 
__BEGIN_NAMESPACE_STD


255 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

256 
__THROW
 
__©åibuã_puª__
;

259 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

260 
__THROW
 
__©åibuã_puª__
;

262 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


263 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

265 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

266 c⁄° 
wch¨_t
 *
__ac˚±
)

267 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

269 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

270 
__THROW
 
__©åibuã_puª__
;

273 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


274 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

276 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

277 c⁄° 
wch¨_t
 *
__√edÀ
)

278 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

280 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

281 
__THROW
 
__©åibuã_puª__
;

285 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

286 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

287 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

290 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

291 
__END_NAMESPACE_STD


293 #ifde‡
__USE_XOPEN


295 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


296 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

298 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

299 c⁄° 
wch¨_t
 *
__√edÀ
)

300 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

302 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

303 
__THROW
 
__©åibuã_puª__
;

307 #ifde‡
__USE_XOPEN2K8


309 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

310 
__THROW
 
__©åibuã_puª__
;

314 
__BEGIN_NAMESPACE_STD


316 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


317 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

319 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

320 
size_t
 
__n
)

321 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

323 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

328 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

329 
__THROW
 
__©åibuã_puª__
;

332 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

333 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

337 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

338 
__THROW
;

341 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

342 
__END_NAMESPACE_STD


344 #ifde‡
__USE_GNU


347 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

348 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

349 
__THROW
;

353 
__BEGIN_NAMESPACE_STD


356 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

360 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

364 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

368 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

369 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

370 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

373 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

377 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

378 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

379 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

380 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

381 
__END_NAMESPACE_STD


383 #ifde‡
__USE_EXTERN_INLINES


389 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

390 
__exã∫_ölöe
 
wöt_t


391 
	`__NTH
 (
	$btowc
 (
__c
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

393 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

395 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

396 
__exã∫_ölöe
 

397 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

398 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

399 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

401 
__exã∫_ölöe
 
size_t


402 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

403 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

404 {  (
__ps
 !
NULL


405 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

408 
__BEGIN_NAMESPACE_STD


411 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

412 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

418 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

419 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

420 
__END_NAMESPACE_STD


423 #ifdef 
__USE_XOPEN2K8


426 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

427 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

428 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

432 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

433 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

434 
size_t
 
__nwc
, size_à
__Àn
,

435 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

440 #ifde‡
__USE_XOPEN


442 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

446 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

450 
__BEGIN_NAMESPACE_STD


453 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

454 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

455 
__END_NAMESPACE_STD


457 #ifde‡
__USE_ISOC99


458 
__BEGIN_NAMESPACE_C99


460 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

461 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

462 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

463 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

464 
__END_NAMESPACE_C99


468 
__BEGIN_NAMESPACE_STD


471 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

476 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

477 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

478 
__THROW
;

479 
__END_NAMESPACE_STD


481 #ifde‡
__USE_ISOC99


482 
__BEGIN_NAMESPACE_C99


485 
__exãnsi⁄__


486 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

487 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

488 
__THROW
;

492 
__exãnsi⁄__


493 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

494 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

495 
__ba£
Ë
__THROW
;

496 
__END_NAMESPACE_C99


499 #ifde‡
__USE_GNU


502 
__exãnsi⁄__


503 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

504 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

505 
__THROW
;

509 
__exãnsi⁄__


510 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

511 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

512 
__ba£
Ë
__THROW
;

515 #ifde‡
__USE_GNU


529 
	~<xloˇÀ.h
>

533 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

534 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

535 
__loˇÀ_t
 
__loc
Ë
__THROW
;

537 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

546 
__exãnsi⁄__


547 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

549 
__ba£
, 
__loˇÀ_t
 
__loc
)

550 
__THROW
;

552 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

553 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

554 
__THROW
;

556 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

557 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

558 
__THROW
;

560 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

561 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

562 
__loˇÀ_t
 
__loc
Ë
__THROW
;

566 #ifde‡
__USE_XOPEN2K8


569 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

570 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

574 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

575 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
;

583 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

586 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


587 
__BEGIN_NAMESPACE_STD


590 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

597 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

598 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

607 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

608 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

609 
__THROW
 ;

615 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

616 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

617 
__gnuc_va_li°
 
__¨g
)

623 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

628 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

629 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

630 
__gnuc_va_li°
 
__¨g
)

631 
__THROW
 ;

638 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

639 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

648 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

649 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

650 
__THROW
 ;

652 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

653 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

654 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

655 #ifde‡
__REDIRECT


659 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

660 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_fwsˇnf
)

663 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

664 
__isoc99_wsˇnf
)

666 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

667 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

668 ...), 
__isoc99_swsˇnf
)

671 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

673 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

674 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

675 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

676 
__THROW
;

677 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

678 
	#wsˇnf
 
__isoc99_wsˇnf


	)

679 
	#swsˇnf
 
__isoc99_swsˇnf


	)

683 
__END_NAMESPACE_STD


686 #ifde‡
__USE_ISOC99


687 
__BEGIN_NAMESPACE_C99


692 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

693 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

694 
__gnuc_va_li°
 
__¨g
)

700 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

704 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

705 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

706 
__gnuc_va_li°
 
__¨g
)

707 
__THROW
 ;

709 #i‡!
deföed
 
__USE_GNU
 \

710 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

711 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

712 #ifde‡
__REDIRECT


713 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

714 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

717 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

718 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

720 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

721 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

725 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

726 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
);

728 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
);

730 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

731 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

732 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

733 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

734 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

735 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

739 
__END_NAMESPACE_C99


743 
__BEGIN_NAMESPACE_STD


748 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

755 
wöt_t
 
	`gëwch¨
 ();

762 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

769 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

777 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

778 
__FILE
 *
__ª°ri˘
 
__°ªam
);

784 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

785 
__FILE
 *
__ª°ri˘
 
__°ªam
);

792 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

793 
__END_NAMESPACE_STD


796 #ifde‡
__USE_GNU


804 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

805 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

813 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

821 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

830 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

831 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

840 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

841 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

850 
__FILE
 *
__ª°ri˘
 
__°ªam
);

854 
__BEGIN_NAMESPACE_C99


858 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

859 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

860 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

861 
__END_NAMESPACE_C99


863 #ifde‡
__USE_GNU


864 
	~<xloˇÀ.h
>

868 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

869 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

870 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

871 
__loˇÀ_t
 
__loc
Ë
__THROW
;

880 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


881 
	#__√ed_iswxxx


	)

882 
	~<w˘y≥.h
>

886 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


887 
	~<bôs/wch¨2.h
>

890 #ifde‡
__LDBL_COMPAT


891 
	~<bôs/wch¨-ldbl.h
>

894 
__END_DECLS


902 #unde‡
__√ed_mb°©e_t


903 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@
1
.
1
/usr/include
182
2264
alter.c
analyze.c
attach.c
auth.c
backup.c
bitvec.c
btmutex.c
btree.c
btree.h
btreeInt.h
build.c
callback.c
complete.c
ctime.c
date.c
dbstat.c
delete.c
expr.c
fault.c
fkey.c
func.c
global.c
hash.c
hash.h
hwtime.h
insert.c
legacy.c
list.h
loadext.c
log.c
log.h
main.c
malloc.c
mem0.c
mem1.c
mem2.c
mem3.c
mem5.c
memjournal.c
msvc.h
mutex.c
mutex.h
mutex_noop.c
mutex_unix.c
mutex_w32.c
notify.c
os.c
os.h
os_common.h
os_setup.h
os_unix.c
os_win.c
os_win.h
pager.c
pager.h
parse.y
pcache.c
pcache.h
pcache1.c
pragma.c
pragma.h
prepare.c
printf.c
random.c
resolve.c
rowset.c
select.c
shell.c
sqlite3ext.h
sqliteInt.h
sqliteLimit.h
status.c
table.c
tclsqlite.c
test1.c
test2.c
test3.c
test4.c
test5.c
test6.c
test7.c
test8.c
test9.c
test_async.c
test_autoext.c
test_backup.c
test_bestindex.c
test_blob.c
test_btree.c
test_config.c
test_delete.c
test_demovfs.c
test_devsym.c
test_fs.c
test_func.c
test_hexio.c
test_init.c
test_intarray.c
test_intarray.h
test_journal.c
test_loadext.c
test_malloc.c
test_multiplex.c
test_multiplex.h
test_mutex.c
test_onefile.c
test_osinst.c
test_pcache.c
test_quota.c
test_quota.h
test_rtree.c
test_schema.c
test_server.c
test_sqllog.c
test_superlock.c
test_syscall.c
test_tclvar.c
test_thread.c
test_vfs.c
test_vfstrace.c
test_windirent.c
test_windirent.h
test_wsd.c
threads.c
tokenize.c
treeview.c
trigger.c
update.c
utf.c
util.c
vacuum.c
vdbe.c
vdbe.h
vdbeInt.h
vdbeapi.c
vdbeaux.c
vdbeblob.c
vdbemem.c
vdbesort.c
vdbetrace.c
vtab.c
vxworks.h
wal.c
wal.h
walker.c
where.c
whereInt.h
wherecode.c
whereexpr.c
/usr/include/assert.h
/usr/include/ctype.h
/usr/include/dirent.h
/usr/include/dlfcn.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/inttypes.h
/usr/include/limits.h
/usr/include/malloc.h
/usr/include/math.h
/usr/include/pthread.h
/usr/include/pwd.h
/usr/include/sched.h
/usr/include/semaphore.h
/usr/include/signal.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/utime.h
/usr/include/alloca.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/stdc-predef.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/wctype.h
